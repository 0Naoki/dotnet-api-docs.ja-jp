<Type Name="XmlSchemaInference" FullName="System.Xml.Schema.XmlSchemaInference">
  <Metadata><Meta Name="ms.openlocfilehash" Value="cc99d3cc2e50bcb25b34037a9ec2f41e7e5d0c08" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69414865" /></Metadata><TypeSignature Language="C#" Value="public sealed class XmlSchemaInference" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit XmlSchemaInference extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaInference" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class XmlSchemaInference" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaInference sealed" />
  <TypeSignature Language="F#" Value="type XmlSchemaInference = class" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>XML ドキュメントから XML スキーマ定義言語 (XSD: XML Schema Definition Language) スキーマを推論します。 <see cref="T:System.Xml.Schema.XmlSchemaInference" /> クラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
> -   不明または信頼できないソースまたは場所のスキーマは使用しないでください。 そうすることで、コードのセキュリティが損なわれます。  
> -   XML スキーマ (インラインスキーマを含む) は、サービス拒否攻撃に対して本質的に脆弱です。信頼されていないシナリオでは受け入れないでください。  
> -   スキーマ検証エラーメッセージと例外によって、コンテンツモデルまたはスキーマファイルへの URI パスに関する機密情報が公開される場合があります。 この情報を信頼されていない呼び出し元に公開しないように注意してください。  
  
 <xref:System.Xml.Schema?displayProperty=nameWithType> <xref:System.Xml.Schema.XmlSchemaInference>名前空間のクラスを使用すると、xml ドキュメントの構造から xml スキーマ定義言語 (XSD) スキーマを推論できます。 <xref:System.Xml.Schema.XmlSchemaInference> クラスは XML ドキュメントの検証に使える XML スキーマを出力します。  
  
 クラス<xref:System.Xml.Schema.XmlSchemaInference>では、W3C XML および xml スキーマ標準がサポートされています。 新しいスキーマを推測したり、既存のスキーマを調整したりするために使用できます。  
  
   
  
## Examples  
 この例では、入力として XML ファイルを受け取り、XML サンプルを検証できるスキーマを生成します。  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 入力 XML ファイルを次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 XML ドキュメントから推論されるスキーマを次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaInference ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaInference();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Xml.Schema.XmlSchemaInference" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="InferSchema">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定された XML ドキュメントから XML スキーマ定義言語 (XSD) スキーマを推論します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema instanceDocument" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">スキーマの推論元となる XML ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" /> オブジェクト。</param>
        <summary>指定された <see cref="T:System.Xml.XmlReader" /> オブジェクトに格納されている XML ドキュメントから XML スキーマ定義言語 (XSD) スキーマを推論します。</summary>
        <returns>推論されるスキーマが格納される <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>は、指定された<xref:System.Xml.XmlReader>オブジェクトに含まれる xml インスタンスドキュメントから、1つまたは複数の W3C XML スキーマ定義言語 (XSD) スキーマを推論します。 XML ドキュメントに複数の名前空間の要素と属性が含まれている場合は、ドキュメントで使用される名前空間ごとに1つずつ、複数のスキーマが生成されます。 プライマリスキーマは、XML ドキュメント全体を検証できるスキーマであり、ターゲットの名前空間は、XML ドキュメントのドキュメント要素の名前空間と同じです。  
  
 ここでは、 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>メソッドを使用する際に考慮する必要がある重要な注意事項について説明します。  
  
-   メソッド<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> `xsi:type`は、XML ドキュメント`xsi:schemaLocation`内の`xsi:noNamespaceSchemaLocation` 、、または属性を無視します。  
  
-   <xref:System.Xml.XmlReader>オブジェクトが型指定されている場合、そのオブジェクトに含まれている型情報は無視されます。  
  
-   <xref:System.Xml.XmlReader>オブジェクトが、XML ドキュメントのルート要素ではない要素に配置されている場合、その要素に対してのみスキーマが推論されます。 <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReader.Read%2A> <xref:System.Xml.XmlNodeType.Element> <xref:System.Xml.XmlReader.NodeType%2A>オブジェクトが要素に配置されていない場合は、要素が検出されるまで、パラメーターでメソッドが呼び出されます (がの場合など)。 <xref:System.Xml.XmlReader> この時点で、推論プロセスはその要素から開始されます。 ドキュメントの末尾までに要素が検出されなかった場合<xref:System.ArgumentException>は、がスローされます。  
  
   
  
## Examples  
 この例では、入力として XML ファイルを受け取り、XML サンプルを検証できるスキーマを生成します。  
  
 [!code-cpp[XmlSchemaInferenceExamples#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#1)]
 [!code-csharp[XmlSchemaInferenceExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#1)]
 [!code-vb[XmlSchemaInferenceExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#1)]  
  
 入力 XML ファイルを次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#5](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xml#5)]  
  
 XML ドキュメントから推論されるスキーマを次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#6](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/contosoBooks.xsd#6)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">XML ドキュメントは、整形式ではありません。</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><see cref="T:System.Xml.XmlReader" /> オブジェクトは、ルート ノードまたは要素に配置されていません。 スキーマ推論の処理中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="InferSchema">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaSet InferSchema (System.Xml.XmlReader instanceDocument, System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchemaSet InferSchema(class System.Xml.XmlReader instanceDocument, class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaInference.InferSchema(System.Xml.XmlReader,System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Function InferSchema (instanceDocument As XmlReader, schemas As XmlSchemaSet) As XmlSchemaSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchemaSet ^ InferSchema(System::Xml::XmlReader ^ instanceDocument, System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberSignature Language="F#" Value="member this.InferSchema : System.Xml.XmlReader * System.Xml.Schema.XmlSchemaSet -&gt; System.Xml.Schema.XmlSchemaSet" Usage="xmlSchemaInference.InferSchema (instanceDocument, schemas)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSet</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="instanceDocument" Type="System.Xml.XmlReader" />
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="instanceDocument">スキーマの推論元となる XML ドキュメントが格納されている <see cref="T:System.Xml.XmlReader" /> オブジェクト。</param>
        <param name="schemas">推論されたスキーマを詳細に指定するために使用する既存のスキーマが格納された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</param>
        <summary>指定された <see cref="T:System.Xml.XmlReader" /> オブジェクトに格納されている XML ドキュメントから XML スキーマ定義言語 (XSD) スキーマを推論し、同じターゲット名前空間で指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト内の既存のスキーマを使用して、推論されたスキーマを詳細に指定します。</summary>
        <returns>推論されるスキーマが格納される <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>は、指定された<xref:System.Xml.XmlReader>オブジェクトに含まれる xml インスタンスドキュメントから、1つまたは複数の W3C XML スキーマ定義言語 (XSD) スキーマを推論します。 XML ドキュメントに複数の名前空間の要素と属性が含まれている場合は、ドキュメントで使用される名前空間ごとに1つずつ、複数のスキーマが生成されます。 プライマリスキーマは、XML ドキュメント全体を検証できるスキーマであり、ターゲットの名前空間は、XML ドキュメントのドキュメント要素の名前空間と同じです。  
  
 ここでは、 <xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>メソッドを使用する際に考慮する必要がある重要な注意事項について説明します。  
  
-   メソッド<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A> `xsi:type`は、XML ドキュメント`xsi:schemaLocation`内の`xsi:noNamespaceSchemaLocation` 、、または属性を無視します。  
  
-   <xref:System.Xml.XmlReader>オブジェクトが型指定されている場合、そのオブジェクトに含まれている型情報は無視されます。  
  
-   <xref:System.Xml.XmlReader>オブジェクトが、XML ドキュメントのルート要素ではない要素に配置されている場合、その要素に対してのみスキーマが推論されます。 <xref:System.Xml.XmlReader> <xref:System.Xml.XmlReader.Read%2A> <xref:System.Xml.XmlNodeType.Element> <xref:System.Xml.XmlReader.NodeType%2A>オブジェクトが要素に配置されていない場合は、要素が検出されるまで、パラメーターでメソッドが呼び出されます (がの場合など)。 <xref:System.Xml.XmlReader> この時点で、推論プロセスはその要素から開始されます。 ドキュメントの末尾までに要素が検出されなかった場合<xref:System.ArgumentException>は、がスローされます。  
  
-   オブジェクトがパラメーターとして渡され、 <xref:System.Xml.XmlReader>オブジェクトが配置されている要素が内<xref:System.Xml.Schema.XmlSchemaSet>のいずれかのスキーマで定義されている場合、推論されたスキーマを<xref:System.Xml.Schema.XmlSchemaSet>使用して、パラメーター内の既存のスキーマが調整されます。 <xref:System.Xml.Schema.XmlSchemaSet>同じターゲット名前空間を使用します。それ以外の場合は、名前空間に対して新しいスキーマが推定されます。  
  
   
  
## Examples  
 次のコード例では、XML ドキュメント1を入力として受け取り、XML ドキュメント1を検証できるスキーマを生成します。 このコード例では、xml ドキュメント2を取得し、xml ドキュメント2で見つかった変更に基づいて、XML ドキュメント1から生成されたスキーマを作成します。  
  
 XML ドキュメント1の例を次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#13](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item1.xml#13)]  
  
 XML ドキュメント2を次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#14](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/item2.xml#14)]  
  
 次のコード例では、に`reader`格納されている最初の xml ドキュメントからスキーマを推測し、推論されたスキーマを、に`reader1`含まれる2番目の xml ドキュメントで検出された変更と共に使用します。 このコード例では、最初<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>にオーバーロードされたメソッドを使用して<xref:System.Xml.Schema.XmlSchemaInference.InferSchema%2A>スキーマを推論し、2番目<xref:System.Xml.Schema.XmlSchemaSet>のオーバーロードされたメソッドを使用してオブジェクト内の既存のスキーマを調整します。  
  
 [!code-cpp[XmlSchemaInferenceExamples#4](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#4)]
 [!code-csharp[XmlSchemaInferenceExamples#4](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#4)]
 [!code-vb[XmlSchemaInferenceExamples#4](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#4)]  
  
 次のスキーマは、XML ドキュメント1から推論されるスキーマです。  
  
 [!code-xml[XmlSchemaInferenceExamples#15](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema1.xml#15)]  
  
 次のスキーマは、上記のスキーマの洗練されたバージョンであり、XML ドキュメント2に基づいています。  
  
 [!code-xml[XmlSchemaInferenceExamples#16](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/InferSchema2.xml#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.XmlException">XML ドキュメントは、整形式ではありません。</exception>
        <exception cref="T:System.Xml.Schema.XmlSchemaInferenceException"><see cref="T:System.Xml.XmlReader" /> オブジェクトは、ルート ノードまたは要素に配置されていません。 スキーマ推論の処理中にエラーが発生しました。</exception>
      </Docs>
    </Member>
    <Member MemberName="Occurrence">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption Occurrence { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption Occurrence" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberSignature Language="VB.NET" Value="Public Property Occurrence As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption Occurrence { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.Occurrence : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.Occurrence" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML ドキュメントから推論されるスキーマ出現宣言に影響する <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 値を取得または設定します。</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティがに<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>設定されている場合、最初の時刻要素が XML ドキュメントで検出されると、スキーマ`minOccurs="1"`宣言はとして推論されます。 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A> 属性が検出されると、スキーマ宣言はと`use="required"`して推論されます。  
  
 プロパティがに<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されている場合、要素スキーマ宣言`minOccurs="0"`はとして推論され、 `use="optional"`属性スキーマ宣言はとして推論されます。 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>  
  
 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>プロパティの既定値は<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>です。  
  
   
  
## Examples  
 この例は、 <xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>プロパティによる発生の影響を示しています。 このコード例では、緩やかで制限された2つの方法で XML ファイルからの出現が推測されます。 XML ファイルの例を次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#7](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence1.xml#7)]  
  
 次のコード例では<xref:System.Xml.Schema.XmlSchemaInference> 、厳密でない方法で要素と属性の出現を推論するようにクラスに指示しています。  
  
 [!code-cpp[XmlSchemaInferenceExamples#2](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#2)]
 [!code-csharp[XmlSchemaInferenceExamples#2](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#2)]
 [!code-vb[XmlSchemaInferenceExamples#2](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#2)]  
  
 プロパティが<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>に<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されているため、次のスキーマが生成されました。  
  
 [!code-xml[XmlSchemaInferenceExamples#8](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence2.xml#8)]  
  
 上記のコード<xref:System.Xml.Schema.XmlSchemaInference.Occurrence%2A>例では、プロパティがに<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されてい<xref:System.Xml.Schema.XmlSchemaInference>ない場合、クラスは<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>を既定化し、次のスキーマを生成します。  
  
 [!code-xml[XmlSchemaInferenceExamples#9](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/Occurrence3.xml#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeInference">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaInference.InferenceOption TypeInference { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaInference/InferenceOption TypeInference" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeInference As XmlSchemaInference.InferenceOption" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaInference::InferenceOption TypeInference { System::Xml::Schema::XmlSchemaInference::InferenceOption get(); void set(System::Xml::Schema::XmlSchemaInference::InferenceOption value); };" />
      <MemberSignature Language="F#" Value="member this.TypeInference : System.Xml.Schema.XmlSchemaInference.InferenceOption with get, set" Usage="System.Xml.Schema.XmlSchemaInference.TypeInference" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaInference+InferenceOption</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>XML ドキュメントから推論される型に影響を与える <see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> 値を取得または設定します。</summary>
        <value><see cref="T:System.Xml.Schema.XmlSchemaInference.InferenceOption" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティがに<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されている場合、単純コンテンツを含む XML ドキュメント内の要素と属性の推定`xs:string`される型は常にです。 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A> <xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted> `xs:date` `xs:decimal`プロパティがに設定されている場合は、、、 `xs:unsignedByte`など、より具体的な型が推論されます。 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>  
  
 <xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>プロパティの既定値は<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>です。  
  
   
  
## Examples  
 この例では、プロパティによって型<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>の推定がどのように影響を受けるかを示します。 このコード例では、緩やかで制限された2つの方法で XML ファイルから型を推測しています。 XML ファイルの例を次に示します。  
  
 [!code-xml[XmlSchemaInferenceExamples#10](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference1.xml#10)]  
  
 次のコード例では<xref:System.Xml.Schema.XmlSchemaInference> 、単純コンテンツ`xs:string`を持つ要素と属性を推論するようにクラスに指示しています。  
  
 [!code-cpp[XmlSchemaInferenceExamples#3](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaInferenceExamples/CPP/XmlSchemaInferenceExamples.cpp#3)]
 [!code-csharp[XmlSchemaInferenceExamples#3](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaInferenceExamples/CS/XmlSchemaInferenceExamples.cs#3)]
 [!code-vb[XmlSchemaInferenceExamples#3](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaInferenceExamples/VB/XmlSchemaInferenceExamples.vb#3)]  
  
 プロパティが<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>に<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されているため、次のスキーマが生成されました。  
  
 [!code-xml[XmlSchemaInferenceExamples#11](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference2.xml#11)]  
  
 上記のコード<xref:System.Xml.Schema.XmlSchemaInference.TypeInference%2A>例では、プロパティがに<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Relaxed>設定されてい<xref:System.Xml.Schema.XmlSchemaInference>ない場合、クラスは<xref:System.Xml.Schema.XmlSchemaInference.InferenceOption.Restricted>を既定化し、次のスキーマを生成します。  
  
 [!code-xml[XmlSchemaInferenceExamples#12](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaInferenceExamples/XML/TypeInference3.xml#12)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
