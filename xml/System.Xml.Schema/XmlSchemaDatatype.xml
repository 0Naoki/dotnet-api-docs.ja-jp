<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaDatatype.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a9136de8d2ae0d3c1fa75491de52dcf23ca9cde2.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a9136de8d2ae0d3c1fa75491de52dcf23ca9cde2</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> class is an abstract class for mapping XML Schema definition language (XSD) types to Common Language Runtime (CLR) types.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> クラスは、XML スキーマ定義言語 (XSD: XML Schema Definition Language) 型を共通言語ランタイム (CLR: Common Language Runtime) 型に割り当てるための抽象クラスです。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The following example shows use of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> class.</source>
          <target state="translated">次の例では、使用、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>The following XML file is used for the preceding code example.</source>
          <target state="translated">次の XML ファイルは、前のコード例に使用されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.#ctor">
          <source>This constructor is called by derived class constructors to initialize state in this type.</source>
          <target state="translated">このコンス トラクターは、この型の状態を初期化するために、派生クラスのコンス トラクターによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaDatatype">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to another valid CLR representation of the same value.</source>
          <target state="translated">型が <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> で表された XML スキーマ型の有効な共通言語ランタイム (CLR) 表現の 1 つである指定された値を、同じ値の別の有効な CLR 表現に変換します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The input value to convert to the specified type.</source>
          <target state="translated">指定された型に変換する入力値。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The target type to convert the input value to.</source>
          <target state="translated">入力値変換後の型。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to the CLR type specified.</source>
          <target state="translated">型が <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> で表された XML スキーマ型の有効な共通言語ランタイム (CLR) 表現の 1 つである指定された値を、指定された CLR 型に変換します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The converted input value.</source>
          <target state="translated">変換された入力値。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
          <target state="translated">サポートする型の詳細については、<ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph>クラスと XML データ型の変換を参照してください、 <bpt id="p1">[</bpt>System.Xml クラスで型をサポート<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> パラメーターまたは <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> パラメーターが <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type)">
          <source>The type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> で表された型では、指定された値の型から指定された型への変換がサポートされません。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The input value to convert to the specified type.</source>
          <target state="translated">指定された型に変換する入力値。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The target type to convert the input value to.</source>
          <target state="translated">入力値変換後の型。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> used for resolving namespace prefixes.</source>
          <target state="translated">名前空間プレフィックスの解決に使用する <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>This is only of use if the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> represents the xs:QName type or a type derived from it.</source>
          <target state="translated">これは、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> が xs:QName 型またはそれから派生した型を表す場合にのみ使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>Converts the value specified, whose type is one of the valid Common Language Runtime (CLR) representations of the XML schema type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>, to the CLR type specified using the <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> if the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> represents the xs:QName type or a type derived from it.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> が xs:QName 型を表すか、またはそれから派生した型を表す場合に、型が <ph id="ph2">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> で表された XML スキーマ型の有効な共通言語ランタイム (CLR) 表現の 1 つである指定された値を、<ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> を使用して指定された CLR 型に変換します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The converted input value.</source>
          <target state="translated">変換された入力値。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> classes and conversion of XML data types, see the <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept> topic.</source>
          <target state="translated">サポートする型の詳細については、<ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph>クラスと XML データ型の変換を参照してください、 <bpt id="p1">[</bpt>System.Xml クラスで型をサポート<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> parameter is <ph id="ph3">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> パラメーターまたは <ph id="ph2">&lt;see cref="T:System.Type" /&gt;</ph> パラメーターが <ph id="ph3">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ChangeType(System.Object,System.Type,System.Xml.IXmlNamespaceResolver)">
          <source>The type represented by the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> does not support a conversion from type of the value specified to the type specified.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> で表された型では、指定された値の型から指定された型への変換がサポートされません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>The <ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /&gt;</ph> method always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)" /&gt;</ph> メソッドは常に <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.IsDerivedFrom(System.Xml.Schema.XmlSchemaDatatype)">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see langword="string" /&gt;</ph> to validate against the simple type.</source>
          <target state="translated">単純型に対して検証する <ph id="ph1">&lt;see langword="string" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> to use for atomization while parsing the <ph id="ph2">&lt;see langword="string" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> object represents the xs:NCName type.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> オブジェクトが xs:NCName 型を表す場合に、<ph id="ph2">&lt;see langword="string" /&gt;</ph> の解析時に最小単位に分割するために使用する <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> object to use while parsing the <ph id="ph2">&lt;see langword="string" /&gt;</ph> if this <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> object represents the xs:QName type.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Xml.IXmlNamespaceResolver" /&gt;</ph> オブジェクトが xs:QName 型を表す場合に、<ph id="ph2">&lt;see langword="string" /&gt;</ph> の解析時に使用する <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatype" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When overridden in a derived class, validates the <ph id="ph1">&lt;see langword="string" /&gt;</ph> specified against a built-in or user-defined simple type.</source>
          <target state="translated">派生クラスでオーバーライドされると、組み込みの単純型またはユーザー定義の単純型に対して指定された <ph id="ph1">&lt;see langword="string" /&gt;</ph> を検証します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> that can be cast safely to the type returned by the <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> プロパティで返される型に安全にキャストできる <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaDatatype.ValueType" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method validates the <ph id="ph2">`string`</ph> specified against a built-in or user-defined simple type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph>メソッドは、検証、<ph id="ph2">`string`</ph>組み込みまたはユーザー定義の単純型に対して指定します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>For example, if this <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> represents the type xs:date, then an instance of <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> is returned.</source>
          <target state="translated">たとえば、この<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>し、型 xs:date のインスタンスを表す<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>が返されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following are the steps performed during the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method's validation process.</source>
          <target state="translated">中に実行した手順は、次のとおり、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph>メソッドの検証プロセスです。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>Convert the value specified as a <ph id="ph1">`string`</ph> to its corresponding Common Language Runtime (CLR) type.</source>
          <target state="translated">として指定された値を変換、<ph id="ph1">`string`</ph>を対応する共通言語ランタイム (CLR) を入力します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>Verify that the value does not violate any facets defined for the simple type.</source>
          <target state="translated">値は、単純型に対して定義されているすべてのファセットに違反しないことを確認します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The converted value is then returned as an <ph id="ph1">&lt;xref:System.Object&gt;</ph> and can be cast safely to the type returned by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property.</source>
          <target state="translated">変換後の値として返されます、<ph id="ph1">&lt;xref:System.Object&gt;</ph>によって返される型に安全にキャストされることができ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, the input <ph id="ph2">`string`</ph> value is converted to a list of one or more objects.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>オブジェクトがリストの種類では、入力を表す<ph id="ph2">`string`</ph>値は 1 つまたは複数のオブジェクトの一覧に変換します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>When the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object represents a list type, an attempt is made to parse the input value as a member type of the union.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>オブジェクトがリストの種類を表す、共用体のメンバーの種類として、入力値を解析する試行します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>If the parse attempt fails, then the conversion is attempted with the next member of the union until the parse is successful or there are no other member types to parse.</source>
          <target state="translated">解析に失敗した場合、共用体の次のメンバーに、変換が試行まで解析が成功したかその他のメンバーの種類を解析がありません。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>If the parse is unsuccessful, an exception is thrown.</source>
          <target state="translated">解析が成功した場合は、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following example retrieves the <ph id="ph1">`LotteryNumber`</ph> simple type from the example.xsd file as an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph> and then validates the <ph id="ph3">`string`</ph> value of <ph id="ph4">`5`</ph> using the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph> method.</source>
          <target state="translated">次の例では取得、<ph id="ph1">`LotteryNumber`</ph>として example.xsd ファイルからの単純型、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSimpleType&gt;</ph>および検証し、<ph id="ph3">`string`</ph>の値<ph id="ph4">`5`</ph>を使用して、<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ParseValue%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The following XML file is used for the preceding code example.</source>
          <target state="translated">次の XML ファイルは、前のコード例に使用されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The input value is not a valid instance of this W3C XML Schema type.</source>
          <target state="translated">入力値は、この W3C XML スキーマ型の有効なインスタンスではありません。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaDatatype.ParseValue(System.String,System.Xml.XmlNameTable,System.Xml.IXmlNamespaceResolver)">
          <source>The value to parse cannot be <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">解析する値を <ph id="ph1">&lt;see langword="null" /&gt;</ph> にすることはできません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>When overridden in a derived class, gets the type for the <ph id="ph1">&lt;see langword="string" /&gt;</ph> as specified in the World Wide Web Consortium (W3C) XML 1.0 specification.</source>
          <target state="translated">派生クラスでオーバーライドされると、W3C (World Wide Web Consortium) XML 1.0 仕様で指定された <ph id="ph1">&lt;see langword="string" /&gt;</ph> の型を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.XmlTokenizedType" /&gt;</ph> value for the <ph id="ph2">&lt;see langword="string" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="string" /&gt;</ph> の <ph id="ph1">&lt;see cref="T:System.Xml.XmlTokenizedType" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>Allows the <ph id="ph1">`string`</ph> to be read as a particular XML type, for example, a CDATA section type.</source>
          <target state="translated">により、<ph id="ph1">`string`</ph>読み取り専用として特定の XML 型、たとえば、CDATA セクションの型。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>The following table shows the token types.</source>
          <target state="translated">次の表は、トークンの種類を示します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>XmlTokenizedType</source>
          <target state="translated">XmlTokenizedType</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>CDATA type</source>
          <target state="translated">CDATA type</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ID type</source>
          <target state="translated">ID の種類</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>IDREF type</source>
          <target state="translated">IDREF 型</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>IDREFS type</source>
          <target state="translated">IDREFS 型</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENTITY type</source>
          <target state="translated">ENTITY type</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENTITIES type</source>
          <target state="translated">エンティティ型</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NMTOKEN type</source>
          <target state="translated">NMTOKEN 型</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NMTOKENS type</source>
          <target state="translated">NMTOKENS 型</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NOTATION type</source>
          <target state="translated">NOTATION 型</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>ENUMERATION type</source>
          <target state="translated">ENUMERATION type</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>QName type</source>
          <target state="translated">QName 型</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>NCName type</source>
          <target state="translated">NCName 型</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TokenizedType">
          <source>No type</source>
          <target state="translated">型はありません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> value for the simple type.</source>
          <target state="translated">単純型の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> value for the simple type.</source>
          <target state="translated">単純型の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlTypeCode" /&gt;</ph> 値。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>W3C XML Schema list types such as xs:ENTITIES, xs:NMTOKENS and xs:IDREFS are not represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
          <target state="translated">W3C XML スキーマの一覧などの xs:ENTITIES、xs:NMTOKENS および xs:IDREFS では表されない、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Instead they are represented by the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> values for the xs:ENTITY, xs:NMTOKEN and xs:IDREF types with the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object set to <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List&gt;</ph>.</source>
          <target state="translated">によって表されるには、代わりに、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph>で xs:ENTITY、xs:NMTOKEN xs:IDREF の各型の値、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.Variety%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>オブジェクトに設定して<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaDatatypeVariety.List&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>Both the xs:anySimpleType and xs:anyType types are not represented by <ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> enumeration.</source>
          <target state="translated">Xs:anySimpleType と xs:anyType の両方の種類は表されない<ph id="ph1">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>These are represented in an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph> object with an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph> whose value is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic&gt;</ph> for xs:anySimpleType or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlTypeCode.Item&gt;</ph> for xs:anyType.</source>
          <target state="translated">表せる、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>オブジェクトを<ph id="ph2">&lt;xref:System.Xml.Schema.XmlTypeCode&gt;</ph>値がある<ph id="ph3">&lt;xref:System.Xml.Schema.XmlTypeCode.UntypedAtomic&gt;</ph>xs:anySimpleType のまたは<ph id="ph4">&lt;xref:System.Xml.Schema.XmlTypeCode.Item&gt;</ph>xs:anyType のです。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.TypeCode">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A&gt;</ph> property, see <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</source>
          <target state="translated">例については、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.TypeCode%2A&gt;</ph>プロパティを参照してください<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>When overridden in a derived class, gets the Common Language Runtime (CLR) type of the item.</source>
          <target state="translated">派生クラスでオーバーライドされた場合、項目の共通言語ランタイム (CLR) 型を取得します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>The Common Language Runtime (CLR) type of the item.</source>
          <target state="translated">項目の共通言語ランタイム (CLR) 型。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property gets the CLR type of the item.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph>プロパティが項目の CLR 型を取得します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For example, an element of type <ph id="ph1">`xs:int`</ph> would have a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> of <ph id="ph3">&lt;xref:System.Int32&gt;</ph> by default.</source>
          <target state="translated">型の要素など、<ph id="ph1">`xs:int`</ph>必要があります、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph>の<ph id="ph3">&lt;xref:System.Int32&gt;</ph>既定です。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>However, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> could be any one of the valid types that can be mapped to <ph id="ph2">`xs:int`</ph>, such as <ph id="ph3">&lt;xref:System.Int16&gt;</ph> or <ph id="ph4">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph>にマップできる有効な型のいずれかの可能性があります<ph id="ph2">`xs:int`</ph>など<ph id="ph3">&lt;xref:System.Int16&gt;</ph>または<ph id="ph4">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For more information about type support in the <ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph> namespace, see <bpt id="p1">[</bpt>Type Support in the System.Xml Classes<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>.</source>
          <target state="translated">サポートする型の詳細については、<ph id="ph1">&lt;xref:System.Xml?displayProperty=nameWithType&gt;</ph>名前空間を参照してください<bpt id="p1">[</bpt>System.Xml クラスで型をサポート<ept id="p1">](~/docs/standard/data/xml/type-support-in-the-system-xml-classes.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.ValueType">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph> property, see <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>.</source>
          <target state="translated">例については、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaDatatype.ValueType%2A&gt;</ph>プロパティを参照してください<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaDatatype&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> value for the simple type.</source>
          <target state="translated">単純型の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> 値を取得します。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaDatatype.Variety">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> value for the simple type.</source>
          <target state="translated">単純型の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaDatatypeVariety" /&gt;</ph> 値。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>