<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaSet.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5de049e0953bd01f68f7214056a7531dd4c85931d.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">de049e0953bd01f68f7214056a7531dd4c85931d</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Contains a cache of XML Schema definition language (XSD) schemas.</source>
          <target state="translated">XML スキーマ定義言語 (XSD: XML Schema Definition Language) スキーマのキャッシュを格納します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources or locations.</source>
          <target state="translated">場所や不明または信頼できないソースからスキーマを使用しないでください。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">これは、コードのセキュリティが低下します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</source>
          <target state="translated">XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</source>
          <target state="translated">スキーマ検証エラー メッセージと例外には、コンテンツ モデルや、スキーマ ファイルの URI パスに関する機密情報が公開します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Be careful not to expose this information to untrusted callers.</source>
          <target state="translated">信頼されていない呼び出し元にこの情報を公開しないように注意します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Additional security considerations are covered in the "Security Considerations" section.</source>
          <target state="translated">「セキュリティの考慮事項」セクションでは、追加セキュリティに関する考慮事項について説明します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is a cache or library where you can store XML Schema definition language (XSD) schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> キャッシュまたはライブラリの XML スキーマ定義言語 (XSD) スキーマを格納することができます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> は、ファイルまたは URL のスキーマにアクセスするのではなく、スキーマをメモリにキャッシュして、パフォーマンスを向上させます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</source>
          <target state="translated">各スキーマは名前空間 URI によって識別され、された場所は、スキーマ セットに追加されたを指定します。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>You use the <ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph> property to assign the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object an XML reader should use for data validation.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType&gt;</ph>割り当てるプロパティを<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>オブジェクトの XML リーダーがデータ検証に使用する必要があります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Security Considerations</source>
          <target state="translated">セキュリティの考慮事項</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Do not use schemas from unknown or untrusted sources.</source>
          <target state="translated">不明または信頼できないソースからスキーマを使用しないでください。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Doing so will compromise the security of your code.</source>
          <target state="translated">これは、コードのセキュリティが低下します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">外部名前空間または場所で参照されているインクルード、インポート、およびスキーマの再定義要素は解決に関してインクルードまたはインポートするスキーマのベース URI。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">たとえば、インクルードまたはインポートしてスキーマのベース URI が空の場合または<ph id="ph1">`null`</ph>、外部の場所は、現在のディレクトリに対して解決されます。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>クラスは、外部スキーマを解決するのには既定で使用します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">インクルード、インポートの解像度を無効にして、スキーマの要素を再定義、設定、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType&gt;</ph>プロパティを<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class uses the <ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph> class to parse and match regular expressions in an XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>クラスの使用、<ph id="ph2">&lt;xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType&gt;</ph>クラスを解析および XML スキーマでの正規表現と一致します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</source>
          <target state="translated">XML スキーマでの正規表現でパターン ファセットの検証は、CPU 使用率の向上を伴う場合があり、高可用性のシナリオでは避ける必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions raised as a result of using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> class, such as the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> class may contain sensitive information that should not be exposed in untrusted scenarios.</source>
          <target state="translated">使用した結果として発生した例外、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>クラスなど、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>クラスは、信頼されていないシナリオで公開するべきではない機密情報を含めることがあります。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>For example, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> returns the URI path to the schema file that caused the exception.</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>例外が発生したスキーマ ファイル パスが URI パスを返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph> property should not be exposed in untrusted scenarios.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A&gt;</ph>信頼されていないシナリオ プロパティを公開するべきはありません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</source>
          <target state="translated">例外は、信頼されていないシナリオでは、この機密情報は公開されていないように正しく処理する必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The following example validates an XML file using schemas stored in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> に格納されているスキーマを使用して XML ファイルを検証する例を次に示します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The namespace in the XML file, <ph id="ph1">`urn:bookstore-schema`</ph>, identifies which schema in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use for validation.</source>
          <target state="translated">XML ファイル内の名前空間 <ph id="ph1">`urn:bookstore-schema`</ph> は、検証に使用する <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 内のスキーマを特定します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Input</source>
          <target state="translated">入力</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>The sample uses the following two input files.</source>
          <target state="translated">このサンプルは、次の 2 つの入力ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>booksSchemaFail.xml:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></source>
          <target state="translated"><bpt id="p1">**</bpt>books.xsd:<ept id="p1">**</ept></target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Output</source>
          <target state="translated">出力</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">検証エラー : 名前空間 'urn:bookstore-schema' 内の要素 'book' に、名前空間 'urn:bookstore-schema' 内で無効な子要素 'author' があります。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'title' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">名前空間 'urn:bookstore-schema' の 'title' が期待されています。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">検証エラー : 名前空間 'urn:bookstore-schema' 内の要素 'author' に、名前空間 'urn:bookstore-schema' 内で無効な子要素 'name' があります。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Expected 'first-name' in namespace 'urn:bookstore-schema'.</source>
          <target state="translated">名前空間 'urn:bookstore-schema' の 'first-name' が期待されています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object to use.</source>
          <target state="translated">使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> class with the specified <ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> を使用して、<ph id="ph2">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡される <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> オブジェクトは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Adds the given XML Schema definition language (XSD) schema to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された XML スキーマ定義言語 (XSD) スキーマを <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to add to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加する <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Adds the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> を <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">スキーマが有効な場合は <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">スキーマが無効で <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されている場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph> が返され、該当する検証イベントが発生します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">それ以外の場合は、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object already exists in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method does nothing.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクトは既に、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドは、何も行われません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドの機能はのものと同じ、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">スキーマが有効ではありません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡される <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Adds all the XML Schema definition language (XSD) schemas in the given <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマを <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">スキーマを追加することができます、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、正常に前処理される必要があります。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">前処理は、次の基本的なタスクを実行します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">内部および外部のスキーマ コンポーネントへの参照は解決されます。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">インポートされたスキーマは、独立したとして追加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト、および含まれるスキーマの一部となる<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`true`</ph>, all schemas in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add are added to the <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を追加するは<ph id="ph3">`true`</ph>、すべてのスキーマ、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を追加するに追加されます、<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to add is <ph id="ph3">`false`</ph>, each schema added is preprocessed before being added.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を追加するは<ph id="ph3">`false`</ph>、追加される前に追加された各スキーマを前処理します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>If any of the schemas in the newly added <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> fails to be preprocessed, no schemas are added; instead, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown.</source>
          <target state="translated">新しく追加したスキーマのいずれかの<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>前処理されるが失敗したスキーマは追加されません。 代わりに、、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>がスローされます。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>As a result, the following two code example are not equivalent.</source>
          <target state="translated">その結果、次の 2 つのコード例は同じではありません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The previous two code examples are not equivalent.</source>
          <target state="translated">前の 2 つのコード例は同じではありません。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the first example, if an invalid schema exists in <ph id="ph1">`schemaSet1`</ph> and its <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>, no schemas are added to <ph id="ph4">`schemaSet`</ph>.</source>
          <target state="translated">無効なスキーマが存在する場合、最初の例では<ph id="ph1">`schemaSet1`</ph>とその<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`false`</ph>にスキーマが追加されて<ph id="ph4">`schemaSet`</ph>です。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>In the second example, a number of schemas can be added to <ph id="ph1">`schemaSet`</ph> before an invalid schema is encountered and an exception is thrown.</source>
          <target state="translated">2 番目の例では、いくつかのスキーマを追加できる<ph id="ph1">`schemaSet`</ph>前に、無効なスキーマが検出され、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The following code example illustrates adding schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then adding the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to a new <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> using the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を追加するスキーマを示しています、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、追加し、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を新しい<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を使用して、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>A schema in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> is not valid.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> のスキーマが有効ではありません。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡される <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクトは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">スキーマの <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> プロパティ。またはスキーマの指定された <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> を使用する場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL that specifies the schema to load.</source>
          <target state="translated">読み込むスキーマを指定する URL。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adds the XML Schema definition language (XSD) schema at the URL specified to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された URL の XML スキーマ定義言語 (XSD) スキーマを <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">スキーマが有効な場合は <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">スキーマが無効で <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されている場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph> が返され、該当する検証イベントが発生します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">それ以外の場合は、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">スキーマを追加することができます、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、正常に前処理される必要があります。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">前処理は、次の基本的なタスクを実行します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">内部および外部のスキーマ コンポーネントへの参照は解決されます。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">インポートされたスキーマは、独立したとして追加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト、および含まれるスキーマの一部となる<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">重要な注意事項を使用する場合は、次のとおり、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Adding a schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the same target namespace and schema location URL as a schema already contained within the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> will return the original schema object.</source>
          <target state="translated">スキーマの追加、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>同じターゲット名前空間とスキーマの場所の URL 内に既に含まれているスキーマとして、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>は元のスキーマ オブジェクトを返します。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>When a new schema is successfully added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is set to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">ときに新しいスキーマが正常に追加する、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>に設定されている<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Any include or import elements encountered in an XML schema are resolved when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">XML スキーマ内でインクルードまたはインポートの要素が解決されたときに、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Failure to resolve include and import elements results in a schema validation warning and if no <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> has been specified for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> object, these warning will not be reported.</source>
          <target state="translated">エラーを解決するのには含めるし、インポート要素にスキーマ検証警告が表示されない場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>が指定されて、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>オブジェクトは、この警告は報告されません。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If a schema with the same target namespace as a schema that already exists in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, both schemas are added.</source>
          <target state="translated">既に存在するスキーマと同じ名前空間とスキーマの場合は、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>に追加、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、両方のスキーマが追加されます。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>This behavior differs from the obsolete <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph> object.</source>
          <target state="translated">この動作は廃止された<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>をパラメーターとして指定するターゲットの名前空間を必要とするのではなく、スキーマで定義されているターゲットの名前空間を使用することのできるときに、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Specifying <ph id="ph1">`null`</ph> in the <ph id="ph2">`targetNamespace`</ph> parameter of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema, as illustrated in the following code example.</source>
          <target state="translated">指定する<ph id="ph1">`null`</ph>で、<ph id="ph2">`targetNamespace`</ph>のパラメーター、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドに指示、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>次のコード例に示すように、スキーマで定義されているターゲットの名前空間を使用します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In the code example above, <ph id="ph1">`null`</ph> is specified as the <ph id="ph2">`targetNamespace`</ph> parameter to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">上記のコード例で<ph id="ph1">`null`</ph>として指定されて、<ph id="ph2">`targetNamespace`</ph>パラメーターを<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>As a result, the <ph id="ph1">`targetNamespace`</ph> defined in the books.xml file is used.</source>
          <target state="translated">その結果、<ph id="ph1">`targetNamespace`</ph>定義で、books.xml ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the result of calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method would be identical if <ph id="ph2">http://www.contoso.com/books</ph> had been specified as the <ph id="ph3">`targetNamespace`</ph> parameter.</source>
          <target state="translated">この場合、呼び出しの結果、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドは同じだ場合<ph id="ph2">http://www.contoso.com/books</ph>として指定されていますが、<ph id="ph3">`targetNamespace`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</source>
          <target state="translated">W3C XML スキーマでは、ターゲット名前空間が定義されているスキーマに含まれるターゲット名前空間のないスキーマを許可します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</source>
          <target state="translated">ここでは、インクルードするスキーマのターゲットの名前空間に定義されているターゲット名前空間のないスキーマが強制変換されます。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The included schema is treated as if it had that target namespace defined.</source>
          <target state="translated">インクルードされるスキーマは、その対象名前空間が定義されているがあったとして扱われます。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>Similarly, schemas without a target namespace can be added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> and coerced into the target namespace specified by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method, as illustrated in the following example.</source>
          <target state="translated">同様に、ターゲット名前空間のないスキーマを追加できる、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>とで指定されたターゲットの名前空間に資格情報を持つ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドを次の例に示すようにします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>If the schema above is added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> with the target namespace <ph id="ph2">http://www.contoso.com/new/targetnamespace</ph> (as shown in the code below), it is treated as if the target namespace declared in the schema was <ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>.</source>
          <target state="translated">上記のスキーマに追加する場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>ターゲット名前空間を持つ<ph id="ph2">http://www.contoso.com/new/targetnamespace</ph>(示すように次のコードで)、ターゲットの名前空間がスキーマで宣言されたかように扱われます<ph id="ph3">`http://www.contoso.com/new/targetnamespace`</ph>です。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The following code example adds the <ph id="ph1">http://www.contoso.com/books.xsd</ph> schema with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">次のコード例では追加、<ph id="ph1">http://www.contoso.com/books.xsd</ph>のターゲットの名前空間を持つスキーマ<ph id="ph2">http://www.contoso.com/books</ph>を<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The example uses the <ph id="ph1">`books.xsd`</ph> file as input.</source>
          <target state="translated">この例は、<ph id="ph1">`books.xsd`</ph> ファイルを入力として使用します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The schema is not valid.</source>
          <target state="translated">スキーマが有効ではありません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)">
          <source>The URL passed as a parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡された URL が <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property, or <ph id="ph1">&lt;see langword="null" /&gt;</ph> to use the <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> specified in the schema.</source>
          <target state="translated">スキーマの <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> プロパティ。またはスキーマの指定された <bpt id="p2">&lt;c&gt;</bpt>targetNamespace<ept id="p2">&lt;/c&gt;</ept> を使用する場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Adds the XML Schema definition language (XSD) schema contained in the <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> に格納されている XML スキーマ定義言語 (XSD) スキーマを <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is valid.</source>
          <target state="translated">スキーマが有効な場合は <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, then <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">スキーマが無効で <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されている場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph> が返され、該当する検証イベントが発生します。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">それ以外の場合は、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Before a schema can be added to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, it has to be successfully preprocessed.</source>
          <target state="translated">スキーマを追加することができます、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、正常に前処理される必要があります。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Preprocessing performs the following basic tasks.</source>
          <target state="translated">前処理は、次の基本的なタスクを実行します。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</source>
          <target state="translated">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>References to internal and external schema components are resolved.</source>
          <target state="translated">内部および外部のスキーマ コンポーネントへの参照は解決されます。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects, and included schemas are made a part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">インポートされたスキーマは、独立したとして追加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト、および含まれるスキーマの一部となる<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following are important notes to consider when using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">重要な注意事項を使用する場合は、次のとおり、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Successfully retrieved schemas imported or included by the schemas contained in the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> are also added to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常にインポートまたはに含まれているスキーマに含まれるスキーマを取得、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>にも追加されて、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is not positioned on the root element, an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown unless the current item is an element.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>ルート要素に配置されていません、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>現在のアイテムが要素でない限りがスローされます。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the current item is an <ph id="ph1">`xs:schema`</ph> element, the schema document is read into the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>; otherwise, an <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown because the schema is not valid.</source>
          <target state="translated">現在の項目がある場合、<ph id="ph1">`xs:schema`</ph>要素、そのスキーマ ドキュメントが読み取りに、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、それ以外の<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>スキーマが無効であるためにスローされます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.XmlReader&gt;</ph>が配置されている XML ノードのシーケンスのシーケンスの最初のノードのみを追加します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>If the schema was created from a <ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph> method call, the value of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</source>
          <target state="translated">スキーマが作成された場合、<ph id="ph1">&lt;xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出すの値、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema&gt;</ph> W3C XML スキーマ ドキュメントのインライン スキーマの処理が適用されないため、プロパティは無視されます。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph> is not used to resolve references to namespaces or schema locations in include and import elements.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.XmlReader&gt;</ph>で名前空間またはスキーマの場所への参照を含めるし、要素をインポートするを解決するのには使用されません。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used.</source>
          <target state="translated">代わりに、<ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を使用します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>をパラメーターとして指定するターゲットの名前空間を必要とするのではなく、スキーマで定義されているターゲットの名前空間を使用することのできるときに、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>Specifying <ph id="ph1">`null`</ph> or <ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method instructs the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to use the target namespace defined in the schema.</source>
          <target state="translated">指定する<ph id="ph1">`null`</ph>または<ph id="ph2">&lt;xref:System.String.Empty?displayProperty=nameWithType&gt;</ph>を<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドに指示、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>スキーマで定義されているターゲットの名前空間を使用します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>For an example of this behavior, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">この動作の例は、次を参照してください。、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The remaining functionality of this method is identical to that of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method.</source>
          <target state="translated">このメソッドの他の機能はのものと同じ、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The following code example adds the books.xsd schema contained in the <ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph> with a target namespace of <ph id="ph2">http://www.contoso.com/books</ph> to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">次のコード例に含まれている books.xsd スキーマを追加、<ph id="ph1">&lt;xref:System.Xml.XmlTextReader&gt;</ph>のターゲット名前空間を持つ<ph id="ph2">http://www.contoso.com/books</ph>を<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The schema is not valid.</source>
          <target state="translated">スキーマが有効ではありません。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡される <ph id="ph1">&lt;see cref="T:System.Xml.XmlReader" /&gt;</ph> オブジェクトは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>Gets or sets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> for the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> の <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The default is an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> instance with the <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> property set to <ph id="ph3">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /&gt;</ph> プロパティが <ph id="ph3">&lt;see langword="true" /&gt;</ph> に設定された <ph id="ph2">&lt;see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /&gt;</ph> のインスタンス。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph> class specifies Unique Particle Attribution (UPA) validation options for the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings&gt;</ph>クラス用の一意のパーティクル属性 (UPA) 検証オプションの指定、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings">
          <source>For more information about enabling UPA validation checks, see the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph> property.</source>
          <target state="translated">UPA 検証チェックを有効にする方法の詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Compiles the XML Schema definition language (XSD) schemas added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> into one logical schema.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に追加された XML スキーマ定義言語 (XSD) スキーマを 1 つの論理スキーマにコンパイルします。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>This method is called automatically when validation is needed and the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has not been previously compiled—for example, when an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used as an input to create an <ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph> object in the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> property of an <ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph> object.</source>
          <target state="translated">検証が必要なときに、このメソッドが自動的に呼び出されますと<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>以前コンパイルされていない — たとえばときに、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を作成する入力として使用、<ph id="ph3">&lt;xref:System.Xml.XmlReader&gt;</ph>内のオブジェクト、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>のプロパティ、<ph id="ph5">&lt;xref:System.Xml.XmlReaderSettings&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is already in the compiled state, this method will not recompile the schemas.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>が既にコンパイル済みの状態でこのメソッドは再コンパイルされないスキーマです。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If this method executes successfully, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">このメソッドが正常に実行された場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Schemas that have been previously compiled by an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not recompiled.</source>
          <target state="translated">以前コンパイルされているスキーマ、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>は再コンパイルされません。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, schemas that were compiled using the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> will be recompiled.</source>
          <target state="translated">ただし、スキーマを使用してコンパイルした、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>のメソッド、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>再コンパイルされます。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドに追加した後、スキーマ (またはそのが含まれています/インポートのいずれか) を変更した場合、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドは W3C XML スキーマの規則に従って構造の有効性のスキーマを確認します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">ただし、完全な検証チェックは実行しません。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">内部および外部のスキーマ コンポーネントへの参照も解決されます。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">インポートされたスキーマは、独立したとして追加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト含まれているときなどの一部となるスキーマ<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">再処理への呼び出しが成功した場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティが false に設定します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Compile">
          <source>An error occurred when validating and compiling the schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のスキーマを検証およびコンパイルしているときにエラーが発生しました。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Indicates whether an XML Schema definition language (XSD) schema is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">XML スキーマ定義言語 (XSD) スキーマが <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内に存在するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">スキーマの <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> プロパティ。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定されたターゲット名前空間 URI を持つ XML スキーマ定義言語 (XSD) スキーマが <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内に存在するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if a schema with the specified target namespace URI is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定されたターゲット名前空間 URI を持つスキーマが <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内に存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>Schemas that are indirectly added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are detected by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> method; for example, imported schemas.</source>
          <target state="translated">直接追加は、スキーマ、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>によって検出された、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph>メソッドです。 たとえば、インポートされたスキーマです。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)">
          <source>As a result, if a schema for the <ph id="ph1">http://www.contoso.com/retail</ph> namespace which imports a schema for the <ph id="ph2">http://www.contoso.com/books</ph> namespace is added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, calling <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph> with <ph id="ph5">`http://www.contoso.com/books`</ph> as a parameter, it returns <ph id="ph6">`true`</ph>.</source>
          <target state="translated">スキーマの場合は、結果として、<ph id="ph1">http://www.contoso.com/retail</ph>のスキーマをインポートする名前空間、<ph id="ph2">http://www.contoso.com/books</ph>に名前空間を追加、 <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、呼び出し元<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Contains%2A&gt;</ph>で<ph id="ph5">`http://www.contoso.com/books`</ph>を返します、パラメーターとして<ph id="ph6">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>Indicates whether the specified XML Schema definition language (XSD) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された XML スキーマ定義言語 (XSD) <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内に存在するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object is in the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトが <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The array to copy the objects to.</source>
          <target state="translated">オブジェクトのコピー先の配列。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The index in the array where copying will begin.</source>
          <target state="translated">配列内のコピー開始位置を示すインデックス。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> objects from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> to the given array, starting at the given index.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> 内のすべての <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクトを、指定したインデックスから始まる指定した配列にコピーします。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)">
          <source>The following example copies all the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> to an array of <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects.</source>
          <target state="translated">次の例では、すべてをコピー、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>内のオブジェクト、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>の配列を<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>Gets the number of logical XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内の論理的な XML スキーマ定義言語 (XSD) スキーマの数を取得します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>The number of logical schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内の論理スキーマの数。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>If there are two schemas for the namespace <ph id="ph1">`http://www.contoso.com`</ph> in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</source>
          <target state="translated">名前空間の 2 つのスキーマがある場合<ph id="ph1">`http://www.contoso.com`</ph>で、 <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph>プロパティ 1 を返します、スキーマが検証の目的で 1 つの論理スキーマとして扱われるためです。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.Count">
          <source>However, if a schema for the namespace <ph id="ph1">`http://www.contoso.com/retail`</ph> imported a schema for the <ph id="ph2">`http://www.contoso.com/books`</ph> namespace, the value of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph> property would be 2.</source>
          <target state="translated">ただし、名前空間のスキーマの場合は<ph id="ph1">`http://www.contoso.com/retail`</ph>のスキーマをインポートした、<ph id="ph2">`http://www.contoso.com/books`</ph>名前空間の値、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Count%2A&gt;</ph>プロパティが 2 になります。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル属性を取得します。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes">
          <source>The collection of global attributes.</source>
          <target state="translated">グローバル属性のコレクション。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル要素を取得します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalElements">
          <source>The collection of global elements.</source>
          <target state="translated">グローバル要素のコレクション。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル単純型とグローバル複合型を取得します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The collection of global simple and complex types.</source>
          <target state="translated">グローバル単純型とグローバル複合型のコレクション。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph> property always returns a type that represents the <ph id="ph2">`xs:anyType`</ph> complex type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A&gt;</ph>を表す型を常に返します、<ph id="ph2">`xs:anyType`</ph>複合型。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内の XML スキーマ定義言語 (XSD) スキーマがコンパイル済みかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the schemas in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> have been compiled since the last time a schema was added or removed from the <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">前回 <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に対してスキーマの追加または削除を行った後で、<ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のスキーマをコンパイルしたことがある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is not affected if schemas are edited while in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> プロパティは、スキーマが <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 内にあるときに編集されても、影響を受けません。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>Updates of the individual schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are not tracked.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> 内の個別のスキーマの更新は追跡されません。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>As a result, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property can be <ph id="ph2">`true`</ph> even though one of the schemas contained in the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been altered, as long as no schemas were added or removed from the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">その結果、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> プロパティは、<ph id="ph2">`true`</ph> のスキーマが追加または削除されない限り、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> に含まれるスキーマの 1 つが変更されていても、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> になる可能性があります。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.IsCompiled">
          <source>For an example of the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property, see the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method.</source>
          <target state="translated">例については、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティを参照してください、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>Gets the default <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> used by the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> when loading new XML Schema definition language (XSD) schemas.</source>
          <target state="translated">新しい XML スキーマ定義言語 (XSD) スキーマを読み込むときに <ph id="ph1">&lt;see cref="T:System.Xml.XmlNameTable" /&gt;</ph> で使用する既定の <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.NameTable">
          <source>A table of atomized string objects.</source>
          <target state="translated">最小単位に分割された文字列オブジェクトのテーブル。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> から削除する <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された XML スキーマ定義言語 (XSD) スキーマを <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object removed from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> or <ph id="ph3">&lt;see langword="null" /&gt;</ph> if the schema was not found in the <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> から削除された <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。または、<ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内にスキーマが見つからなかった場合は <ph id="ph3">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>Removing a schema from the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> sets the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">スキーマを削除する、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>設定、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティを<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method.</source>
          <target state="translated">次の例を複数のスキーマを追加する、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を使用してスキーマの 1 つを削除してから、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The schema is not a valid schema.</source>
          <target state="translated">スキーマが、有効なスキーマではありません。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object to remove from the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> から削除する <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">指定された XML スキーマ定義言語 (XSD) スキーマとそれがインポートしたすべてのスキーマを <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> から削除します。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object and all its imports were successfully removed; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトとそれがインポートしたすべてのスキーマが正常に削除された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method removes the specified schema and all the schemas it imports from the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, as long as there are no dependencies on the schema or its imported schemas.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>メソッドは、指定したスキーマとそれがインポートされたすべてのスキーマを削除、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>スキーマや、インポートされたスキーマに依存関係がない限り、します。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If there are dependencies on the schema or its imported schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, nothing is removed and <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">スキーマで、インポートされたスキーマに依存関係があるかどうか、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、何も行われませんが削除されると<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>を返します<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If <ph id="ph1">`false`</ph> is returned and a <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> is defined, a warning is sent to the event handler describing the dependencies.</source>
          <target state="translated">場合<ph id="ph1">`false`</ph>が返されますと<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>が定義されている場合、警告が依存関係を記述するイベント ハンドラーに送信します。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>If the specified schema imports other schemas and the specified schema was previously removed with the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method will not remove the imported schemas and will return <ph id="ph3">`false`</ph>.</source>
          <target state="translated">指定されたスキーマは、その他のスキーマをインポートし、指定したスキーマ以前削除しましたが、場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Remove%2A&gt;</ph>メソッド、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>メソッドを選択し、インポートされたスキーマは削除されませんが返されます<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>For example, if <ph id="ph1">`parentSchema`</ph> imports <ph id="ph2">`childSchema1`</ph> and <ph id="ph3">`childSchema2`</ph> the following code will only remove <ph id="ph4">`parentSchema`</ph>, but not the imported <ph id="ph5">`childSchema1`</ph> and <ph id="ph6">`childSchema2`</ph> schemas:</source>
          <target state="translated">たとえば場合、<ph id="ph1">`parentSchema`</ph>インポート<ph id="ph2">`childSchema1`</ph>と<ph id="ph3">`childSchema2`</ph>次のコードはのみを削除<ph id="ph4">`parentSchema`</ph>がインポートされていない、<ph id="ph5">`childSchema1`</ph>と<ph id="ph6">`childSchema2`</ph>スキーマ。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code will remove the <ph id="ph1">`parentSchema`</ph> and the imported schemas:</source>
          <target state="translated">次のコードが削除されます、<ph id="ph1">`parentSchema`</ph>とインポートされたスキーマ。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method has no effect on the state of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>メソッドも何も起こりませんの状態で、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The following code example illustrates adding multiple schemas to an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>, then removing one of the schemas and all the schemas it imports using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を複数のスキーマを追加することを示しています、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>、スキーマのいずれかと、インポートを使用してすべてのスキーマを削除してから、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema to reprocess.</source>
          <target state="translated">再処理するスキーマ。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocesses an XML Schema definition language (XSD) schema that already exists in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内に既に存在している XML スキーマ定義言語 (XSD) スキーマを再処理します。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object if the schema is a valid schema.</source>
          <target state="translated">スキーマが有効なスキーマの場合は <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the schema is not valid and a <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> is specified, <ph id="ph2">&lt;see langword="null" /&gt;</ph> is returned and the appropriate validation event is raised.</source>
          <target state="translated">スキーマが無効で <ph id="ph1">&lt;see cref="T:System.Xml.Schema.ValidationEventHandler" /&gt;</ph> が指定されている場合は、<ph id="ph2">&lt;see langword="null" /&gt;</ph> が返され、該当する検証イベントが発生します。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Otherwise, an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> is thrown.</source>
          <target state="translated">それ以外の場合は、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Reprocessing a schema performs all the preprocessing steps performed on a schema when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method is called.</source>
          <target state="translated">スキーマの前処理、スキーマに対して実行されたすべての前処理手順を実行時に、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドが呼び出されます。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> is successful, the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to <ph id="ph3">`false`</ph>.</source>
          <target state="translated">場合への呼び出し<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>が完了すると、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The Reprocess method should be used after a schema in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified, after the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has performed compilation.</source>
          <target state="translated">内のスキーマの後に再処理メソッドを使用する必要があります、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>が変更された後、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>コンパイルを実行します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>You need to call the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method if you have changed a schema (or one of its includes/imports) after adding it to the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドに追加した後、スキーマ (またはそのが含まれています/インポートのいずれか) を変更した場合、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method will check the schema for structural validity according to the rules of W3C XML Schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドは W3C XML スキーマの規則に従って構造の有効性のスキーマを確認します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>However, it will not perform a full validation check.</source>
          <target state="translated">ただし、完全な検証チェックは実行しません。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>It will also resolve references to internal and external schema components.</source>
          <target state="translated">内部および外部のスキーマ コンポーネントへの参照も解決されます。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Any imported or included schemas that are successfully retrieved are also added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Imported schemas are added as separate <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> objects while included schemas are made part of the including <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>.</source>
          <target state="translated">インポートされたスキーマは、独立したとして追加<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト含まれているときなどの一部となるスキーマ<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>If the call to reprocess is successful, the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property is set to false.</source>
          <target state="translated">再処理への呼び出しが成功した場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティが false に設定します。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The following example illustrates reprocessing a schema added to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">次の例に追加のスキーマの前処理、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>After the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is compiled using the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> method, and the schema added to the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is modified, the <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property will be set to <ph id="ph5">`true`</ph>, even though a schema in the <ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> has been modified.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を使用してコンパイル、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>メソッド、およびに追加されたスキーマ、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>を変更すると、<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティ設定されます<ph id="ph5">`true`</ph>でスキーマ場合でも、<ph id="ph6">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>が変更されました。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>Calling the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> method performs all the preprocessing performed by the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> method and sets the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph> property to <ph id="ph4">`false`</ph>.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドでは、すべての前処理が実行を実行、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>メソッドとセット、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A&gt;</ph>プロパティを<ph id="ph4">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The schema is not valid.</source>
          <target state="translated">スキーマが有効ではありません。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡される <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> object passed as a parameter does not already exist in the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated">パラメーターとして渡された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchema" /&gt;</ph> オブジェクトは、<ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> に存在していません。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaSet">
          <source>Returns a collection of XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内の XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> に追加されたすべてのスキーマが格納された <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> にスキーマが追加されていない場合は、空の <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> オブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">このメソッドを間接的に追加されたスキーマを返します、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>インポートされたためです。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>メソッドは、それと同等の<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A&gt;</ph>メソッドの廃止された<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">次の例は、すべてのスキーマを反復処理する方法を示しています、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The schema <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> property.</source>
          <target state="translated">スキーマの <bpt id="p1">&lt;c&gt;</bpt>targetNamespace<ept id="p1">&lt;/c&gt;</ept> プロパティ。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>Returns a collection of all the XML Schema definition language (XSD) schemas in the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated">指定された名前空間に属している <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> 内のすべての XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object containing all the schemas that have been added to the <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> that belong to the given namespace.</source>
          <target state="translated">指定された名前空間に属する <ph id="ph1">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> に追加されたすべてのスキーマが格納された <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If no schemas have been added to the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph>, an empty <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> object is returned.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaSet" /&gt;</ph> にスキーマが追加されていない場合は、空の <ph id="ph2">&lt;see cref="T:System.Collections.ICollection" /&gt;</ph> オブジェクトが返されます。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>If the <ph id="ph1">`targetNamespace`</ph> parameter is <ph id="ph2">`null`</ph> or <ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>, then all schemas without a namespace are returned.</source>
          <target state="translated">場合、<ph id="ph1">`targetNamespace`</ph>パラメーターは<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.String.Empty&gt;</ph>、名前空間のないすべてのスキーマが返されます。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>This method returns schemas that were added indirectly to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> because they were imported.</source>
          <target state="translated">このメソッドを間接的に追加されたスキーマを返します、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>インポートされたためです。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph> method is the equivalent of the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph> method of the obsolete <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A&gt;</ph>メソッドは、それと同等の<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaCollection.Item%2A&gt;</ph>メソッドの廃止された<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaCollection&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)">
          <source>The following example illustrates how to iterate over all the schemas in the <ph id="ph1">http://www.contoso.com/books</ph> namespace in the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>.</source>
          <target state="translated">次の例は、すべてのスキーマを反復処理する方法を示しています、<ph id="ph1">http://www.contoso.com/books</ph>で名前空間、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</source>
          <target state="translated">XML スキーマ定義言語 (XSD) スキーマ検証エラーに関する情報を受信するためのイベント ハンドラーを指定します。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Sets an event handler for receiving information about schema validation errors when the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph> methods of the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> are called.</source>
          <target state="translated">スキーマ検証エラーに関する情報を受信するため、イベント ハンドラーを設定するときに、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet.Compile%2A&gt;</ph>のメソッド、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>と呼ばれます。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>If an event handler is not defined, an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph> is thrown on any validation errors where the <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> is <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>.</source>
          <target state="translated">イベント ハンドラーが定義されていない場合、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaException&gt;</ph>検証エラー上でスローされる場所、<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph>は<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSeverityType.Error&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>Exceptions are not thrown for validation errors with an <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph> of <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>.</source>
          <target state="translated">検証エラーの例外がスローしません、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSeverityType&gt;</ph>の<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSeverityType.Warning&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The following code example illustrates adding a <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph> to capture errors and warnings when validating an XML document against a schema.</source>
          <target state="translated">次のコード例は、追加することを示しています、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler&gt;</ph>をスキーマに対して XML ドキュメントを検証するときに、エラーと警告をキャプチャします。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xml file as an input.</source>
          <target state="translated">例では、入力値として books.xml ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler">
          <source>The example uses the books.xsd file as an input.</source>
          <target state="translated">例では、入力値として books.xsd ファイルを使用します。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>Sets the <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">スキーマのインクルード要素およびインポート要素で参照される名前空間または場所を解決するために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> を設定します。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph> used to resolve namespaces or locations referenced in include and import elements of a schema.</source>
          <target state="translated">スキーマのインクルード要素およびインポート要素で参照される名前空間または場所を解決するために使用する <ph id="ph1">&lt;see cref="T:System.Xml.XmlResolver" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph> of an <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph> methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlResolver&gt;</ph>の<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaSet&gt;</ph>解決するには名前空間またはで参照されている場所を含めるし、スキーマの要素をインポートするには、いつでもを使用してスキーマを追加するために使用、<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaSet.Add%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</source>
          <target state="translated">外部名前空間または場所で参照されているインクルード、インポート、およびスキーマの再定義要素は解決に関してインクルードまたはインポートするスキーマのベース URI。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>For example, if the base URI of the including or importing schema is empty or <ph id="ph1">`null`</ph>, the external locations are resolved with respect to the current directory.</source>
          <target state="translated">たとえば、インクルードまたはインポートしてスキーマのベース URI が空の場合または<ph id="ph1">`null`</ph>、外部の場所は、現在のディレクトリに対して解決されます。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>The <ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph> class is used to resolve external schemas by default.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.XmlUrlResolver&gt;</ph>クラスは、外部スキーマを解決するのには既定で使用します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaSet.XmlResolver">
          <source>To disable resolution of include, import, and redefine elements of a schema, set the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph> property to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">インクルード、インポートの解像度を無効にして、スキーマの要素を再定義、設定、<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A&gt;</ph>プロパティを<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>