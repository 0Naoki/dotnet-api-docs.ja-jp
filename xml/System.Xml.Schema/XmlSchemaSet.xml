<Type Name="XmlSchemaSet" FullName="System.Xml.Schema.XmlSchemaSet">
  <TypeSignature Language="C#" Value="public class XmlSchemaSet" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaSet extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaSet" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaSet" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaSet" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="1f7af-101">XML スキーマ定義言語 (XSD: XML Schema Definition Language) スキーマのキャッシュを格納します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-101">Contains a cache of XML Schema definition language (XSD) schemas.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  -   <span data-ttu-id="1f7af-102">場所や不明または信頼できないソースからスキーマを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="1f7af-102">Do not use schemas from unknown or untrusted sources or locations.</span></span> <span data-ttu-id="1f7af-103">これは、コードのセキュリティが低下します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-103">Doing so will compromise the security of your code.</span></span>  
> -   <span data-ttu-id="1f7af-104">XML スキーマ (インライン スキーマを含む) を受けます本質的にサービス拒否攻撃です。信頼されていないシナリオでに同意されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-104">XML schemas (including inline schemas) are inherently vulnerable to denial of service attacks; do not accept them in untrusted scenarios.</span></span>  
> -   <span data-ttu-id="1f7af-105">スキーマ検証エラー メッセージと例外には、コンテンツ モデルや、スキーマ ファイルの URI パスに関する機密情報が公開します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-105">Schema validation error messages and exceptions may expose sensitive information about the content model or URI paths to the schema file.</span></span> <span data-ttu-id="1f7af-106">信頼されていない呼び出し元にこの情報を公開しないように注意します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-106">Be careful not to expose this information to untrusted callers.</span></span>  
> -   <span data-ttu-id="1f7af-107">「セキュリティの考慮事項」セクションでは、追加セキュリティに関する考慮事項について説明します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-107">Additional security considerations are covered in the "Security Considerations" section.</span></span>  
  
 <span data-ttu-id="1f7af-108"><xref:System.Xml.Schema.XmlSchemaSet> キャッシュまたはライブラリの XML スキーマ定義言語 (XSD) スキーマを格納することができます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-108"><xref:System.Xml.Schema.XmlSchemaSet> is a cache or library where you can store XML Schema definition language (XSD) schemas.</span></span> <span data-ttu-id="1f7af-109"><xref:System.Xml.Schema.XmlSchemaSet> は、ファイルまたは URL のスキーマにアクセスするのではなく、スキーマをメモリにキャッシュして、パフォーマンスを向上させます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-109"><xref:System.Xml.Schema.XmlSchemaSet> improves performance by caching schemas in memory instead of accessing them from a file or a URL.</span></span> <span data-ttu-id="1f7af-110">各スキーマは名前空間 URI によって識別され、された場所は、スキーマ セットに追加されたを指定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-110">Each schema is identified by the namespace URI and location that was specified when the schema was added to the set.</span></span> <span data-ttu-id="1f7af-111">使用する、<xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType>割り当てるプロパティを<xref:System.Xml.Schema.XmlSchemaSet>オブジェクトの XML リーダーがデータ検証に使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-111">You use the <xref:System.Xml.XmlReaderSettings.Schemas%2A?displayProperty=nameWithType> property to assign the <xref:System.Xml.Schema.XmlSchemaSet> object an XML reader should use for data validation.</span></span>  
  
## <a name="security-considerations"></a><span data-ttu-id="1f7af-112">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="1f7af-112">Security Considerations</span></span>  
  
-   <span data-ttu-id="1f7af-113">不明または信頼できないソースからスキーマを使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="1f7af-113">Do not use schemas from unknown or untrusted sources.</span></span> <span data-ttu-id="1f7af-114">これは、コードのセキュリティが低下します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-114">Doing so will compromise the security of your code.</span></span> <span data-ttu-id="1f7af-115">外部名前空間または場所で参照されているインクルード、インポート、およびスキーマの再定義要素は解決に関してインクルードまたはインポートするスキーマのベース URI。</span><span class="sxs-lookup"><span data-stu-id="1f7af-115">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="1f7af-116">たとえば、インクルードまたはインポートしてスキーマのベース URI が空の場合または`null`、外部の場所は、現在のディレクトリに対して解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-116">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="1f7af-117"><xref:System.Xml.XmlUrlResolver>クラスは、外部スキーマを解決するのには既定で使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-117">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="1f7af-118">インクルード、インポートの解像度を無効にして、スキーマの要素を再定義、設定、<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-118">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A?displayProperty=nameWithType> property to `null`.</span></span>  
  
-   <span data-ttu-id="1f7af-119"><xref:System.Xml.Schema.XmlSchemaSet>クラスの使用、<xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType>クラスを解析および XML スキーマでの正規表現と一致します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-119">The <xref:System.Xml.Schema.XmlSchemaSet> class uses the <xref:System.Text.RegularExpressions.Regex?displayProperty=nameWithType> class to parse and match regular expressions in an XML schema.</span></span> <span data-ttu-id="1f7af-120">XML スキーマでの正規表現でパターン ファセットの検証は、CPU 使用率の向上を伴う場合があり、高可用性のシナリオでは避ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-120">Validation of pattern facets with regular expressions in an XML schema may involve increased CPU usage and should be avoided in high availability scenarios.</span></span>  
  
-   <span data-ttu-id="1f7af-121">使用した結果として発生した例外、<xref:System.Xml.Schema.XmlSchemaSet>クラスなど、<xref:System.Xml.Schema.XmlSchemaException>クラスは、信頼されていないシナリオで公開するべきではない機密情報を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-121">Exceptions raised as a result of using the <xref:System.Xml.Schema.XmlSchemaSet> class, such as the <xref:System.Xml.Schema.XmlSchemaException> class may contain sensitive information that should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="1f7af-122">たとえば、<xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>のプロパティ、<xref:System.Xml.Schema.XmlSchemaException>例外が発生したスキーマ ファイル パスが URI パスを返します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-122">For example, the <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property of an <xref:System.Xml.Schema.XmlSchemaException> returns the URI path to the schema file that caused the exception.</span></span> <span data-ttu-id="1f7af-123"><xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A>信頼されていないシナリオ プロパティを公開するべきはありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-123">The <xref:System.Xml.Schema.XmlSchemaException.SourceUri%2A> property should not be exposed in untrusted scenarios.</span></span> <span data-ttu-id="1f7af-124">例外は、信頼されていないシナリオでは、この機密情報は公開されていないように正しく処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-124">Exceptions should be properly handled so that this sensitive information is not exposed in untrusted scenarios.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-125"><xref:System.Xml.Schema.XmlSchemaSet> に格納されているスキーマを使用して XML ファイルを検証する例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-125">The following example validates an XML file using schemas stored in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-126">XML ファイル内の名前空間 `urn:bookstore-schema` は、検証に使用する <xref:System.Xml.Schema.XmlSchemaSet> 内のスキーマを特定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-126">The namespace in the XML file, `urn:bookstore-schema`, identifies which schema in the <xref:System.Xml.Schema.XmlSchemaSet> to use for validation.</span></span>  
  
 [!code-cpp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CPP/XmlReader_Validate_SchemaSet.cpp#1)]
 [!code-csharp[XmlReader_Validate_SchemaSet#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlReader_Validate_SchemaSet/CS/validschemaset.cs#1)]
 [!code-vb[XmlReader_Validate_SchemaSet#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlReader_Validate_SchemaSet/VB/validschemaset.vb#1)]  
  
## <a name="input"></a><span data-ttu-id="1f7af-127">入力</span><span class="sxs-lookup"><span data-stu-id="1f7af-127">Input</span></span>  
 <span data-ttu-id="1f7af-128">このサンプルは、次の 2 つの入力ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-128">The sample uses the following two input files.</span></span>  
  
 <span data-ttu-id="1f7af-129">**booksSchemaFail.xml:**</span><span class="sxs-lookup"><span data-stu-id="1f7af-129">**booksSchemaFail.xml:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#2](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/booksschemafail.xml#2)]  
  
 <span data-ttu-id="1f7af-130">**books.xsd:**</span><span class="sxs-lookup"><span data-stu-id="1f7af-130">**books.xsd:**</span></span>  
  
 [!code-xml[XmlReader_Validate_SchemaSet#3](~/samples/snippets/xml/VS_Snippets_Data/XmlReader_Validate_SchemaSet/XML/books.xsd#3)]  
  
## <a name="output"></a><span data-ttu-id="1f7af-131">出力</span><span class="sxs-lookup"><span data-stu-id="1f7af-131">Output</span></span>  
 <span data-ttu-id="1f7af-132">検証エラー : 名前空間 'urn:bookstore-schema' 内の要素 'book' に、名前空間 'urn:bookstore-schema' 内で無効な子要素 'author' があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-132">Validation Error: The element 'book' in namespace 'urn:bookstore-schema' has invalid child element 'author' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="1f7af-133">名前空間 'urn:bookstore-schema' の 'title' が期待されています。</span><span class="sxs-lookup"><span data-stu-id="1f7af-133">Expected 'title' in namespace 'urn:bookstore-schema'.</span></span>  
  
 <span data-ttu-id="1f7af-134">検証エラー : 名前空間 'urn:bookstore-schema' 内の要素 'author' に、名前空間 'urn:bookstore-schema' 内で無効な子要素 'name' があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-134">Validation Error: The element 'author' in namespace 'urn:bookstore-schema' has invalid child element 'name' in namespace 'urn:bookstore-schema'.</span></span> <span data-ttu-id="1f7af-135">名前空間 'urn:bookstore-schema' の 'first-name' が期待されています。</span><span class="sxs-lookup"><span data-stu-id="1f7af-135">Expected 'first-name' in namespace 'urn:bookstore-schema'.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f7af-136"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-136">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f7af-137"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-137">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaSet (System.Xml.XmlNameTable nameTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Xml.XmlNameTable nameTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.#ctor(System.Xml.XmlNameTable)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (nameTable As XmlNameTable)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaSet(System::Xml::XmlNameTable ^ nameTable);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="nameTable" Type="System.Xml.XmlNameTable" />
      </Parameters>
      <Docs>
        <param name="nameTable"><span data-ttu-id="1f7af-138">使用する <see cref="T:System.Xml.XmlNameTable" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-138">The <see cref="T:System.Xml.XmlNameTable" /> object to use.</span></span></param>
        <summary><span data-ttu-id="1f7af-139">指定した <see cref="T:System.Xml.Schema.XmlSchemaSet" /> を使用して、<see cref="T:System.Xml.XmlNameTable" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-139">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> class with the specified <see cref="T:System.Xml.XmlNameTable" />.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-140">パラメーターとして渡される <see cref="T:System.Xml.XmlNameTable" /> オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-140">The <see cref="T:System.Xml.XmlNameTable" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f7af-141">指定された XML スキーマ定義言語 (XSD) スキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-141">Adds the given XML Schema definition language (XSD) schema to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="1f7af-142"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加する <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-142">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to add to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="1f7af-143">指定された <see cref="T:System.Xml.Schema.XmlSchema" /> を <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-143">Adds the given <see cref="T:System.Xml.Schema.XmlSchema" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-144">スキーマが有効な場合は <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-144">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="1f7af-145">スキーマが無効で <see cref="T:System.Xml.Schema.ValidationEventHandler" /> が指定されている場合は、<see langword="null" /> が返され、該当する検証イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-145">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="1f7af-146">それ以外の場合は、<see cref="T:System.Xml.Schema.XmlSchemaException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-146">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-147">場合、<xref:System.Xml.Schema.XmlSchema>オブジェクトは既に、 <xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドは、何も行われません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-147">If the <xref:System.Xml.Schema.XmlSchema> object already exists in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method does nothing.</span></span>  
  
 <span data-ttu-id="1f7af-148">このメソッドの機能はのものと同じ、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-148">The functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-149">スキーマが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-149">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-150">パラメーターとして渡される <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-150">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Xml.Schema.XmlSchemaSet schemas);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Xml.Schema.XmlSchemaSet schemas) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.Xml.Schema.XmlSchemaSet)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (schemas As XmlSchemaSet)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Xml::Schema::XmlSchemaSet ^ schemas);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchemaSet" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="1f7af-151"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-151">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object.</span></span></param>
        <summary><span data-ttu-id="1f7af-152">指定された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-152">Adds all the XML Schema definition language (XSD) schemas in the given <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-153">スキーマを追加することができます、 <xref:System.Xml.Schema.XmlSchemaSet>、正常に前処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-153">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="1f7af-154">前処理は、次の基本的なタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-154">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="1f7af-155">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-155">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="1f7af-156">内部および外部のスキーマ コンポーネントへの参照は解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-156">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="1f7af-157">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-157">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-158">インポートされたスキーマは、独立したとして追加<xref:System.Xml.Schema.XmlSchema>オブジェクト、および含まれるスキーマの一部となる<xref:System.Xml.Schema.XmlSchema>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-158">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="1f7af-159">場合、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>のプロパティ、<xref:System.Xml.Schema.XmlSchemaSet>を追加するは`true`、すべてのスキーマ、<xref:System.Xml.Schema.XmlSchemaSet>を追加するに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-159">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `true`, all schemas in the <xref:System.Xml.Schema.XmlSchemaSet> to add are added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-160">場合、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>のプロパティ、<xref:System.Xml.Schema.XmlSchemaSet>を追加するは`false`、追加される前に追加された各スキーマを前処理します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-160">If the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> to add is `false`, each schema added is preprocessed before being added.</span></span> <span data-ttu-id="1f7af-161">新しく追加したスキーマのいずれかの<xref:System.Xml.Schema.XmlSchemaSet>前処理されるが失敗したスキーマは追加されません。 代わりに、、<xref:System.Xml.Schema.XmlSchemaException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-161">If any of the schemas in the newly added <xref:System.Xml.Schema.XmlSchemaSet> fails to be preprocessed, no schemas are added; instead, an <xref:System.Xml.Schema.XmlSchemaException> is thrown.</span></span> <span data-ttu-id="1f7af-162">その結果、次の 2 つのコード例は同じではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-162">As a result, the following two code example are not equivalent.</span></span>  
  
```vb  
' First example  
schemaSet.Add(schemaSet1)  
  
' Second example  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    schemaSet.Add(schema)  
  
Next  
```  
  
```csharp  
// First example  
schemaSet.Add(schemaSet1);  
  
// Second example  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    schemaSet.Add(schema);  
}  
```  
  
 <span data-ttu-id="1f7af-163">前の 2 つのコード例は同じではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-163">The previous two code examples are not equivalent.</span></span> <span data-ttu-id="1f7af-164">無効なスキーマが存在する場合、最初の例では`schemaSet1`とその<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティに設定されている`false`にスキーマが追加されて`schemaSet`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-164">In the first example, if an invalid schema exists in `schemaSet1` and its <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`, no schemas are added to `schemaSet`.</span></span> <span data-ttu-id="1f7af-165">2 番目の例では、いくつかのスキーマを追加できる`schemaSet`前に、無効なスキーマが検出され、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-165">In the second example, a number of schemas can be added to `schemaSet` before an invalid schema is encountered and an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-166">次のコード例を追加するスキーマを示しています、 <xref:System.Xml.Schema.XmlSchemaSet>、追加し、<xref:System.Xml.Schema.XmlSchemaSet>を新しい<xref:System.Xml.Schema.XmlSchemaSet>を使用して、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-166">The following code example illustrates adding schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then adding the <xref:System.Xml.Schema.XmlSchemaSet> to a new <xref:System.Xml.Schema.XmlSchemaSet> using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
```vb  
Dim schemaSet1 As XmlSchemaSet = New XmlSchemaSet  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemaSet2 As XmlSchemaSet = New XmlSchemaSet  
schemaSet2.Add(schemaSet1)  
```  
  
```csharp  
XmlSchemaSet schemaSet1 = new XmlSchemaSet();  
schemaSet1.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet1.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet1.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchemaSet schemaSet2 = new XmlSchemaSet();  
schemaSet2.Add(schemaSet1);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-167"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> のスキーマが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-167">A schema in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-168">パラメーターとして渡される <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-168">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, string schemaUri);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, string schemaUri) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaUri As String) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::String ^ schemaUri);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaUri" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="1f7af-169">スキーマの <c>targetNamespace</c> プロパティ。またはスキーマの指定された <c>targetNamespace</c> を使用する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-169">The schema <c>targetNamespace</c> property, or <see langword="null" /> to use the <c>targetNamespace</c> specified in the schema.</span></span></param>
        <param name="schemaUri"><span data-ttu-id="1f7af-170">読み込むスキーマを指定する URL。</span><span class="sxs-lookup"><span data-stu-id="1f7af-170">The URL that specifies the schema to load.</span></span></param>
        <summary><span data-ttu-id="1f7af-171">指定された URL の XML スキーマ定義言語 (XSD) スキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-171">Adds the XML Schema definition language (XSD) schema at the URL specified to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-172">スキーマが有効な場合は <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-172">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="1f7af-173">スキーマが無効で <see cref="T:System.Xml.Schema.ValidationEventHandler" /> が指定されている場合は、<see langword="null" /> が返され、該当する検証イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-173">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="1f7af-174">それ以外の場合は、<see cref="T:System.Xml.Schema.XmlSchemaException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-174">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-175">スキーマを追加することができます、 <xref:System.Xml.Schema.XmlSchemaSet>、正常に前処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-175">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="1f7af-176">前処理は、次の基本的なタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-176">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="1f7af-177">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-177">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="1f7af-178">内部および外部のスキーマ コンポーネントへの参照は解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-178">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="1f7af-179">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-179">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-180">インポートされたスキーマは、独立したとして追加<xref:System.Xml.Schema.XmlSchema>オブジェクト、および含まれるスキーマの一部となる<xref:System.Xml.Schema.XmlSchema>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-180">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="1f7af-181">重要な注意事項を使用する場合は、次のとおり、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-181">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="1f7af-182">スキーマの追加、<xref:System.Xml.Schema.XmlSchemaSet>同じターゲット名前空間とスキーマの場所の URL 内に既に含まれているスキーマとして、<xref:System.Xml.Schema.XmlSchemaSet>は元のスキーマ オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-182">Adding a schema to the <xref:System.Xml.Schema.XmlSchemaSet> with the same target namespace and schema location URL as a schema already contained within the <xref:System.Xml.Schema.XmlSchemaSet> will return the original schema object.</span></span>  
  
-   <span data-ttu-id="1f7af-183">ときに新しいスキーマが正常に追加する、 <xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>のプロパティ、<xref:System.Xml.Schema.XmlSchemaSet>に設定されている`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-183">When a new schema is successfully added to an <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property of the <xref:System.Xml.Schema.XmlSchemaSet> is set to `false`.</span></span>  
  
-   <span data-ttu-id="1f7af-184">XML スキーマ内でインクルードまたはインポートの要素が解決されたときに、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-184">Any include or import elements encountered in an XML schema are resolved when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="1f7af-185">エラーを解決するのには含めるし、インポート要素にスキーマ検証警告が表示されない場合、<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>が指定されて、<xref:System.Xml.Schema.XmlSchemaSet>オブジェクトは、この警告は報告されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-185">Failure to resolve include and import elements results in a schema validation warning and if no <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> has been specified for the <xref:System.Xml.Schema.XmlSchemaSet> object, these warning will not be reported.</span></span>  
  
-   <span data-ttu-id="1f7af-186">既に存在するスキーマと同じ名前空間とスキーマの場合は、<xref:System.Xml.Schema.XmlSchemaSet>に追加、 <xref:System.Xml.Schema.XmlSchemaSet>、両方のスキーマが追加されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-186">If a schema with the same target namespace as a schema that already exists in the <xref:System.Xml.Schema.XmlSchemaSet> is added to the <xref:System.Xml.Schema.XmlSchemaSet>, both schemas are added.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="1f7af-187">この動作は廃止された<xref:System.Xml.Schema.XmlSchemaCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-187">This behavior differs from the obsolete <xref:System.Xml.Schema.XmlSchemaCollection> object.</span></span>  
  
-   <span data-ttu-id="1f7af-188"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>のメソッド、<xref:System.Xml.Schema.XmlSchemaSet>をパラメーターとして指定するターゲットの名前空間を必要とするのではなく、スキーマで定義されているターゲットの名前空間を使用することのできるときに、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-188">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="1f7af-189">指定する`null`で、`targetNamespace`のパラメーター、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドに指示、<xref:System.Xml.Schema.XmlSchemaSet>次のコード例に示すように、スキーマで定義されているターゲットの名前空間を使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-189">Specifying `null` in the `targetNamespace` parameter of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema, as illustrated in the following code example.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add(Nothing, "books.xsd")  
  
Dim schema As XmlSchema  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
    schema.Write(Console.Out)  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add(null, "books.xsd");  
  
foreach(XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 <span data-ttu-id="1f7af-190">上記のコード例で`null`として指定されて、`targetNamespace`パラメーターを<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-190">In the code example above, `null` is specified as the `targetNamespace` parameter to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span> <span data-ttu-id="1f7af-191">その結果、`targetNamespace`定義で、books.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-191">As a result, the `targetNamespace` defined in the books.xml file is used.</span></span> <span data-ttu-id="1f7af-192">この場合、呼び出しの結果、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドは同じだ場合http://www.contoso.com/booksとして指定されていますが、`targetNamespace`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="1f7af-192">In this case, the result of calling the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method would be identical if http://www.contoso.com/books had been specified as the `targetNamespace` parameter.</span></span>  
  
-   <span data-ttu-id="1f7af-193">W3C XML スキーマでは、ターゲット名前空間が定義されているスキーマに含まれるターゲット名前空間のないスキーマを許可します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-193">W3C XML Schema allows schemas without a target namespace to be included in schemas with a target namespace defined.</span></span> <span data-ttu-id="1f7af-194">ここでは、インクルードするスキーマのターゲットの名前空間に定義されているターゲット名前空間のないスキーマが強制変換されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-194">In this case, the schema without a target namespace defined is coerced into the target namespace of the including schema.</span></span> <span data-ttu-id="1f7af-195">インクルードされるスキーマは、その対象名前空間が定義されているがあったとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-195">The included schema is treated as if it had that target namespace defined.</span></span> <span data-ttu-id="1f7af-196">同様に、ターゲット名前空間のないスキーマを追加できる、<xref:System.Xml.Schema.XmlSchemaSet>とで指定されたターゲットの名前空間に資格情報を持つ、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドを次の例に示すようにします。</span><span class="sxs-lookup"><span data-stu-id="1f7af-196">Similarly, schemas without a target namespace can be added to the <xref:System.Xml.Schema.XmlSchemaSet> and coerced into the target namespace specified by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method, as illustrated in the following example.</span></span>  
  
```  
<xs:schema xmlns:xs="http://www.w3.org/2001/XMLSchema">  
    <xs:element name="A" type="xs:string" />  
</xs:schema>  
```  
  
 <span data-ttu-id="1f7af-197">上記のスキーマに追加する場合、<xref:System.Xml.Schema.XmlSchemaSet>ターゲット名前空間を持つhttp://www.contoso.com/new/targetnamespace(示すように次のコードで)、ターゲットの名前空間がスキーマで宣言されたかように扱われます`http://www.contoso.com/new/targetnamespace`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-197">If the schema above is added to the <xref:System.Xml.Schema.XmlSchemaSet> with the target namespace http://www.contoso.com/new/targetnamespace (as shown in the code below), it is treated as if the target namespace declared in the schema was `http://www.contoso.com/new/targetnamespace`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema in schemaSet.Schemas()  
  
    Console.WriteLine(schema.TargetNamespace)     
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/new/targetnamespace", "http://www.contoso.com/targetnamespace.xsd");  
foreach(XmlSchema schema in schemaSet.Schemas())  
{  
    Console.WriteLine(schema.TargetNamespace);  
}  
```  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-198">次のコード例では追加、http://www.contoso.com/books.xsdのターゲットの名前空間を持つスキーマhttp://www.contoso.com/booksを<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-198">The following code example adds the http://www.contoso.com/books.xsd schema with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
```  
  
 <span data-ttu-id="1f7af-199">この例は、`books.xsd` ファイルを入力として使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-199">The example uses the `books.xsd` file as input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-200">スキーマが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-200">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-201">パラメーターとして渡された URL が <see langword="null" /> または <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-201">The URL passed as a parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Add (string targetNamespace, System.Xml.XmlReader schemaDocument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Add(string targetNamespace, class System.Xml.XmlReader schemaDocument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Add(System.String,System.Xml.XmlReader)" />
      <MemberSignature Language="VB.NET" Value="Public Function Add (targetNamespace As String, schemaDocument As XmlReader) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Add(System::String ^ targetNamespace, System::Xml::XmlReader ^ schemaDocument);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
        <Parameter Name="schemaDocument" Type="System.Xml.XmlReader" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="1f7af-202">スキーマの <c>targetNamespace</c> プロパティ。またはスキーマの指定された <c>targetNamespace</c> を使用する場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-202">The schema <c>targetNamespace</c> property, or <see langword="null" /> to use the <c>targetNamespace</c> specified in the schema.</span></span></param>
        <param name="schemaDocument"><span data-ttu-id="1f7af-203"><see cref="T:System.Xml.XmlReader" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-203">The <see cref="T:System.Xml.XmlReader" /> object.</span></span></param>
        <summary><span data-ttu-id="1f7af-204"><see cref="T:System.Xml.XmlReader" /> に格納されている XML スキーマ定義言語 (XSD) スキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-204">Adds the XML Schema definition language (XSD) schema contained in the <see cref="T:System.Xml.XmlReader" /> to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-205">スキーマが有効な場合は <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-205">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is valid.</span></span> <span data-ttu-id="1f7af-206">スキーマが無効で <see cref="T:System.Xml.Schema.ValidationEventHandler" /> が指定されている場合は、<see langword="null" /> が返され、該当する検証イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-206">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, then <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="1f7af-207">それ以外の場合は、<see cref="T:System.Xml.Schema.XmlSchemaException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-207">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-208">スキーマを追加することができます、 <xref:System.Xml.Schema.XmlSchemaSet>、正常に前処理される必要があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-208">Before a schema can be added to an <xref:System.Xml.Schema.XmlSchemaSet>, it has to be successfully preprocessed.</span></span> <span data-ttu-id="1f7af-209">前処理は、次の基本的なタスクを実行します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-209">Preprocessing performs the following basic tasks.</span></span>  
  
1.  <span data-ttu-id="1f7af-210">W3C XML スキーマの規則に従って構造の有効性がチェック、スキーマがスキーマには完全には検証されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-210">The schema is checked for structural validity according to the rules of W3C XML Schema, but the schema is not fully validated.</span></span>  
  
2.  <span data-ttu-id="1f7af-211">内部および外部のスキーマ コンポーネントへの参照は解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-211">References to internal and external schema components are resolved.</span></span> <span data-ttu-id="1f7af-212">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-212">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-213">インポートされたスキーマは、独立したとして追加<xref:System.Xml.Schema.XmlSchema>オブジェクト、および含まれるスキーマの一部となる<xref:System.Xml.Schema.XmlSchema>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-213">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects, and included schemas are made a part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span>  
  
 <span data-ttu-id="1f7af-214">重要な注意事項を使用する場合は、次のとおり、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-214">The following are important notes to consider when using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
-   <span data-ttu-id="1f7af-215">正常にインポートまたはに含まれているスキーマに含まれるスキーマを取得、<xref:System.Xml.XmlReader>にも追加されて、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-215">Successfully retrieved schemas imported or included by the schemas contained in the <xref:System.Xml.XmlReader> are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
-   <span data-ttu-id="1f7af-216">場合、<xref:System.Xml.XmlReader>ルート要素に配置されていません、<xref:System.Xml.Schema.XmlSchemaException>現在のアイテムが要素でない限りがスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-216">If the <xref:System.Xml.XmlReader> is not positioned on the root element, an <xref:System.Xml.Schema.XmlSchemaException> is thrown unless the current item is an element.</span></span> <span data-ttu-id="1f7af-217">現在の項目がある場合、`xs:schema`要素、そのスキーマ ドキュメントが読み取りに、 <xref:System.Xml.Schema.XmlSchemaSet>、それ以外の<xref:System.Xml.Schema.XmlSchemaException>スキーマが無効であるためにスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-217">If the current item is an `xs:schema` element, the schema document is read into the <xref:System.Xml.Schema.XmlSchemaSet>; otherwise, an <xref:System.Xml.Schema.XmlSchemaException> is thrown because the schema is not valid.</span></span>  
  
-   <span data-ttu-id="1f7af-218">場合、<xref:System.Xml.XmlReader>が配置されている XML ノードのシーケンスのシーケンスの最初のノードのみを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-218">If the <xref:System.Xml.XmlReader> is positioned over a sequence of XML nodes, only the first node in the sequence is added.</span></span>  
  
-   <span data-ttu-id="1f7af-219">スキーマが作成された場合、<xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType>メソッドを呼び出すの値、 <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> W3C XML スキーマ ドキュメントのインライン スキーマの処理が適用されないため、プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-219">If the schema was created from a <xref:System.Xml.XmlReader.Create%2A?displayProperty=nameWithType> method call, the value of the <xref:System.Xml.Schema.XmlSchemaValidationFlags.ProcessInlineSchema> property is ignored, because inline schema processing is not applied for W3C XML Schema documents.</span></span>  
  
-   <span data-ttu-id="1f7af-220"><xref:System.Xml.XmlResolver>のプロパティ、<xref:System.Xml.XmlReader>で名前空間またはスキーマの場所への参照を含めるし、要素をインポートするを解決するのには使用されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-220">The <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.XmlReader> is not used to resolve references to namespaces or schema locations in include and import elements.</span></span> <span data-ttu-id="1f7af-221">代わりに、<xref:System.Xml.XmlResolver>のプロパティ、<xref:System.Xml.Schema.XmlSchemaSet>を使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-221">Instead, the <xref:System.Xml.XmlResolver> property of the <xref:System.Xml.Schema.XmlSchemaSet> is used.</span></span>  
  
-   <span data-ttu-id="1f7af-222"><xref:System.Xml.Schema.XmlSchemaSet.Add%2A>のメソッド、<xref:System.Xml.Schema.XmlSchemaSet>をパラメーターとして指定するターゲットの名前空間を必要とするのではなく、スキーマで定義されているターゲットの名前空間を使用することのできるときに、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-222">The <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method of the <xref:System.Xml.Schema.XmlSchemaSet> has the ability to use the target namespace defined in a schema, rather than requiring the target namespace be specified as a parameter when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="1f7af-223">指定する`null`または<xref:System.String.Empty?displayProperty=nameWithType>を<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドに指示、<xref:System.Xml.Schema.XmlSchemaSet>スキーマで定義されているターゲットの名前空間を使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-223">Specifying `null` or <xref:System.String.Empty?displayProperty=nameWithType> to the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method instructs the <xref:System.Xml.Schema.XmlSchemaSet> to use the target namespace defined in the schema.</span></span> <span data-ttu-id="1f7af-224">この動作の例は、次を参照してください。、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-224">For an example of this behavior, see the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
 <span data-ttu-id="1f7af-225">このメソッドの他の機能はのものと同じ、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-225">The remaining functionality of this method is identical to that of the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-226">次のコード例に含まれている books.xsd スキーマを追加、<xref:System.Xml.XmlTextReader>のターゲット名前空間を持つhttp://www.contoso.com/booksを<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-226">The following code example adds the books.xsd schema contained in the <xref:System.Xml.XmlTextReader> with a target namespace of http://www.contoso.com/books to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", New XmlTextReader("books.xsd")  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", new XmlTextReader("books.xsd");  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-227">スキーマが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-227">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-228">パラメーターとして渡される <see cref="T:System.Xml.XmlReader" /> オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-228">The <see cref="T:System.Xml.XmlReader" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CompilationSettings">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaCompilationSettings CompilationSettings" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.CompilationSettings" />
      <MemberSignature Language="VB.NET" Value="Public Property CompilationSettings As XmlSchemaCompilationSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaCompilationSettings ^ CompilationSettings { System::Xml::Schema::XmlSchemaCompilationSettings ^ get(); void set(System::Xml::Schema::XmlSchemaCompilationSettings ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaCompilationSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-229"><see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> の <see cref="T:System.Xml.Schema.XmlSchemaSet" /> を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-229">Gets or sets the <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="1f7af-230">
          <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> の <see cref="T:System.Xml.Schema.XmlSchemaSet" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-230">The <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> for the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="1f7af-231">既定では、<see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> プロパティが <see langword="true" /> に設定された <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="1f7af-231">The default is an <see cref="T:System.Xml.Schema.XmlSchemaCompilationSettings" /> instance with the <see cref="P:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck" /> property set to <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-232"><xref:System.Xml.Schema.XmlSchemaCompilationSettings>クラス用の一意のパーティクル属性 (UPA) 検証オプションの指定、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-232">The <xref:System.Xml.Schema.XmlSchemaCompilationSettings> class specifies Unique Particle Attribution (UPA) validation options for the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-233">UPA 検証チェックを有効にする方法の詳細については、次を参照してください。、<xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-233">For more information about enabling UPA validation checks, see the <xref:System.Xml.Schema.XmlSchemaCompilationSettings.EnableUpaCheck%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Compile">
      <MemberSignature Language="C#" Value="public void Compile ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Compile() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Compile" />
      <MemberSignature Language="VB.NET" Value="Public Sub Compile ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Compile();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f7af-234"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> に追加された XML スキーマ定義言語 (XSD) スキーマを 1 つの論理スキーマにコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="1f7af-234">Compiles the XML Schema definition language (XSD) schemas added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> into one logical schema.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-235">検証が必要なときに、このメソッドが自動的に呼び出されますと<xref:System.Xml.Schema.XmlSchemaSet>以前コンパイルされていない — たとえばときに、<xref:System.Xml.Schema.XmlSchemaSet>を作成する入力として使用、<xref:System.Xml.XmlReader>内のオブジェクト、<xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>のプロパティ、<xref:System.Xml.XmlReaderSettings>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-235">This method is called automatically when validation is needed and the <xref:System.Xml.Schema.XmlSchemaSet> has not been previously compiled—for example, when an <xref:System.Xml.Schema.XmlSchemaSet> is used as an input to create an <xref:System.Xml.XmlReader> object in the <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> property of an <xref:System.Xml.XmlReaderSettings> object.</span></span> <span data-ttu-id="1f7af-236">場合、<xref:System.Xml.Schema.XmlSchemaSet>が既にコンパイル済みの状態でこのメソッドは再コンパイルされないスキーマです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-236">If the <xref:System.Xml.Schema.XmlSchemaSet> is already in the compiled state, this method will not recompile the schemas.</span></span> <span data-ttu-id="1f7af-237">このメソッドが正常に実行された場合、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-237">If this method executes successfully, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `true`.</span></span>  
  
 <span data-ttu-id="1f7af-238">以前コンパイルされているスキーマ、<xref:System.Xml.Schema.XmlSchemaSet>は再コンパイルされません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-238">Schemas that have been previously compiled by an <xref:System.Xml.Schema.XmlSchemaSet> are not recompiled.</span></span> <span data-ttu-id="1f7af-239">ただし、スキーマを使用してコンパイルした、<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>のメソッド、<xref:System.Xml.Schema.XmlSchema>再コンパイルされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-239">However, schemas that were compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method of the <xref:System.Xml.Schema.XmlSchema> will be recompiled.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f7af-240">呼び出す必要があります、<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドに追加した後、スキーマ (またはそのが含まれています/インポートのいずれか) を変更した場合、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-240">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-241"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドは W3C XML スキーマの規則に従って構造の有効性のスキーマを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-241">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="1f7af-242">ただし、完全な検証チェックは実行しません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-242">However, it will not perform a full validation check.</span></span> <span data-ttu-id="1f7af-243">内部および外部のスキーマ コンポーネントへの参照も解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-243">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="1f7af-244">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-244">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-245">インポートされたスキーマは、独立したとして追加<xref:System.Xml.Schema.XmlSchema>オブジェクト含まれているときなどの一部となるスキーマ<xref:System.Xml.Schema.XmlSchema>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-245">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="1f7af-246">再処理への呼び出しが成功した場合、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティが false に設定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-246">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-247"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のスキーマを検証およびコンパイルしているときにエラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="1f7af-247">An error occurred when validating and compiling the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Contains">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f7af-248">XML スキーマ定義言語 (XSD) スキーマが <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-248">Indicates whether an XML Schema definition language (XSD) schema is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (targetNamespace As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::String ^ targetNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="1f7af-249">スキーマの <c>targetNamespace</c> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="1f7af-249">The schema <c>targetNamespace</c> property.</span></span></param>
        <summary><span data-ttu-id="1f7af-250">指定されたターゲット名前空間 URI を持つ XML スキーマ定義言語 (XSD) スキーマが <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-250">Indicates whether an XML Schema definition language (XSD) schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="1f7af-251">指定されたターゲット名前空間 URI を持つスキーマが <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-251"><see langword="true" /> if a schema with the specified target namespace URI is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-252">直接追加は、スキーマ、<xref:System.Xml.Schema.XmlSchemaSet>によって検出された、<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>メソッドです。 たとえば、インポートされたスキーマです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-252">Schemas that are indirectly added to the <xref:System.Xml.Schema.XmlSchemaSet> are detected by the <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> method; for example, imported schemas.</span></span> <span data-ttu-id="1f7af-253">スキーマの場合は、結果として、http://www.contoso.com/retailのスキーマをインポートする名前空間、http://www.contoso.com/booksに名前空間を追加、 <xref:System.Xml.Schema.XmlSchemaSet>、呼び出し元<xref:System.Xml.Schema.XmlSchemaSet.Contains%2A>で`http://www.contoso.com/books`を返します、パラメーターとして`true`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-253">As a result, if a schema for the http://www.contoso.com/retail namespace which imports a schema for the http://www.contoso.com/books namespace is added to the <xref:System.Xml.Schema.XmlSchemaSet>, calling <xref:System.Xml.Schema.XmlSchemaSet.Contains%2A> with `http://www.contoso.com/books` as a parameter, it returns `true`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Contains(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (schema As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="1f7af-254"><see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-254">The <see cref="T:System.Xml.Schema.XmlSchema" /> object.</span></span></param>
        <summary><span data-ttu-id="1f7af-255">指定された XML スキーマ定義言語 (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトが <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内に存在するかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-255">Indicates whether the specified XML Schema definition language (XSD) <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="1f7af-256"><see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトが <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-256"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object is in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-257">パラメーターとして渡された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-257">The <see cref="T:System.Xml.Schema.XmlSchemaSet" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Xml.Schema.XmlSchema[] schemas, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Xml.Schema.XmlSchema[] schemas, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.CopyTo(System.Xml.Schema.XmlSchema[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (schemas As XmlSchema(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Xml::Schema::XmlSchema ^&gt; ^ schemas, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemas" Type="System.Xml.Schema.XmlSchema[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="schemas"><span data-ttu-id="1f7af-258">オブジェクトのコピー先の配列。</span><span class="sxs-lookup"><span data-stu-id="1f7af-258">The array to copy the objects to.</span></span></param>
        <param name="index"><span data-ttu-id="1f7af-259">配列内のコピー開始位置を示すインデックス。</span><span class="sxs-lookup"><span data-stu-id="1f7af-259">The index in the array where copying will begin.</span></span></param>
        <summary><span data-ttu-id="1f7af-260"><see cref="T:System.Xml.Schema.XmlSchema" /> 内のすべての <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクトを、指定したインデックスから始まる指定した配列にコピーします。</span><span class="sxs-lookup"><span data-stu-id="1f7af-260">Copies all the <see cref="T:System.Xml.Schema.XmlSchema" /> objects from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> to the given array, starting at the given index.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="1f7af-261">次の例では、すべてをコピー、<xref:System.Xml.Schema.XmlSchema>内のオブジェクト、<xref:System.Xml.Schema.XmlSchemaSet>の配列を<xref:System.Xml.Schema.XmlSchema>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-261">The following example copies all the <xref:System.Xml.Schema.XmlSchema> objects in the <xref:System.Xml.Schema.XmlSchemaSet> to an array of <xref:System.Xml.Schema.XmlSchema> objects.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schemas(schemaSet.Count) As XmlSchema  
schemaSet.CopyTo(schemas, 0)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
XmlSchema[] schemas = new XmlSchema[schemaSet.Count];  
schemaSet.CopyTo(schemas, 0);  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-262"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内の論理的な XML スキーマ定義言語 (XSD) スキーマの数を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-262">Gets the number of logical XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="1f7af-263"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内の論理スキーマの数。</span><span class="sxs-lookup"><span data-stu-id="1f7af-263">The number of logical schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-264">名前空間の 2 つのスキーマがある場合`http://www.contoso.com`で、 <xref:System.Xml.Schema.XmlSchemaSet>、<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>プロパティ 1 を返します、スキーマが検証の目的で 1 つの論理スキーマとして扱われるためです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-264">If there are two schemas for the namespace `http://www.contoso.com` in the <xref:System.Xml.Schema.XmlSchemaSet>, the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would return 1 because the schemas are treated as a single logical schema for validation purposes.</span></span> <span data-ttu-id="1f7af-265">ただし、名前空間のスキーマの場合は`http://www.contoso.com/retail`のスキーマをインポートした、`http://www.contoso.com/books`名前空間の値、<xref:System.Xml.Schema.XmlSchemaSet.Count%2A>プロパティが 2 になります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-265">However, if a schema for the namespace `http://www.contoso.com/retail` imported a schema for the `http://www.contoso.com/books` namespace, the value of the <xref:System.Xml.Schema.XmlSchemaSet.Count%2A> property would be 2.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GlobalAttributes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalAttributes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalAttributes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-266"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル属性を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-266">Gets all the global attributes in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="1f7af-267">グローバル属性のコレクション。</span><span class="sxs-lookup"><span data-stu-id="1f7af-267">The collection of global attributes.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalElements">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalElements { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalElements" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalElements As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalElements { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-268"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル要素を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-268">Gets all the global elements in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="1f7af-269">グローバル要素のコレクション。</span><span class="sxs-lookup"><span data-stu-id="1f7af-269">The collection of global elements.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="GlobalTypes">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaObjectTable GlobalTypes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaObjectTable GlobalTypes" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.GlobalTypes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GlobalTypes As XmlSchemaObjectTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaObjectTable ^ GlobalTypes { System::Xml::Schema::XmlSchemaObjectTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaObjectTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-270"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマ内にあるすべてのグローバル単純型とグローバル複合型を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-270">Gets all of the global simple and complex types in all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <value><span data-ttu-id="1f7af-271">グローバル単純型とグローバル複合型のコレクション。</span><span class="sxs-lookup"><span data-stu-id="1f7af-271">The collection of global simple and complex types.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-272"><xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A>を表す型を常に返します、`xs:anyType`複合型。</span><span class="sxs-lookup"><span data-stu-id="1f7af-272">The <xref:System.Xml.Schema.XmlSchemaSet.GlobalTypes%2A> property always returns a type that represents the `xs:anyType` complex type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalElements" />
        <altmember cref="P:System.Xml.Schema.XmlSchemaSet.GlobalAttributes" />
        <altmember cref="T:System.Xml.Schema.XmlSchemaObjectTable" />
      </Docs>
    </Member>
    <Member MemberName="IsCompiled">
      <MemberSignature Language="C#" Value="public bool IsCompiled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsCompiled" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.IsCompiled" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsCompiled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsCompiled { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-273"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内の XML スキーマ定義言語 (XSD) スキーマがコンパイル済みかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-273">Gets a value that indicates whether the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled.</span></span></summary>
        <value>
          <span data-ttu-id="1f7af-274">前回 <see cref="T:System.Xml.Schema.XmlSchemaSet" /> に対してスキーマの追加または削除を行った後で、<see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のスキーマをコンパイルしたことがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-274"><see langword="true" /> if the schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> have been compiled since the last time a schema was added or removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-275"><xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> プロパティは、スキーマが <xref:System.Xml.Schema.XmlSchemaSet> 内にあるときに編集されても、影響を受けません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-275">The <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is not affected if schemas are edited while in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-276"><xref:System.Xml.Schema.XmlSchemaSet> 内の個別のスキーマの更新は追跡されません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-276">Updates of the individual schemas in the <xref:System.Xml.Schema.XmlSchemaSet> are not tracked.</span></span> <span data-ttu-id="1f7af-277">その結果、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> プロパティは、`true` のスキーマが追加または削除されない限り、<xref:System.Xml.Schema.XmlSchemaSet> に含まれるスキーマの 1 つが変更されていても、<xref:System.Xml.Schema.XmlSchemaSet> になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="1f7af-277">As a result, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property can be `true` even though one of the schemas contained in the <xref:System.Xml.Schema.XmlSchemaSet> has been altered, as long as no schemas were added or removed from the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-278">例については、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティを参照してください、<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-278">For an example of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property, see the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Compile" />
        <altmember cref="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      </Docs>
    </Member>
    <Member MemberName="NameTable">
      <MemberSignature Language="C#" Value="public System.Xml.XmlNameTable NameTable { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlNameTable NameTable" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.NameTable" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NameTable As XmlNameTable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlNameTable ^ NameTable { System::Xml::XmlNameTable ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlNameTable</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-279">新しい XML スキーマ定義言語 (XSD) スキーマを読み込むときに <see cref="T:System.Xml.XmlNameTable" /> で使用する既定の <see cref="T:System.Xml.Schema.XmlSchemaSet" /> を取得します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-279">Gets the default <see cref="T:System.Xml.XmlNameTable" /> used by the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> when loading new XML Schema definition language (XSD) schemas.</span></span></summary>
        <value><span data-ttu-id="1f7af-280">最小単位に分割された文字列オブジェクトのテーブル。</span><span class="sxs-lookup"><span data-stu-id="1f7af-280">A table of atomized string objects.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Xml.XmlNameTable" />
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Remove (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Remove(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Remove(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Remove(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="1f7af-281"><see cref="T:System.Xml.Schema.XmlSchema" /> から削除する <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-281">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="1f7af-282">指定された XML スキーマ定義言語 (XSD) スキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-282">Removes the specified XML Schema definition language (XSD) schema from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-283"><see cref="T:System.Xml.Schema.XmlSchema" /> から削除された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。または、<see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内にスキーマが見つからなかった場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-283">The <see cref="T:System.Xml.Schema.XmlSchema" /> object removed from the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> or <see langword="null" /> if the schema was not found in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-284">スキーマを削除する、<xref:System.Xml.Schema.XmlSchemaSet>設定、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-284">Removing a schema from the <xref:System.Xml.Schema.XmlSchemaSet> sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-285">次の例を複数のスキーマを追加する、<xref:System.Xml.Schema.XmlSchemaSet>を使用してスキーマの 1 つを削除してから、<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-285">The following example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas using the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.Remove(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.Remove(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-286">スキーマが、有効なスキーマではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-286">The schema is not a valid schema.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-287">パラメーターとして渡された <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-287">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveRecursive">
      <MemberSignature Language="C#" Value="public bool RemoveRecursive (System.Xml.Schema.XmlSchema schemaToRemove);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool RemoveRecursive(class System.Xml.Schema.XmlSchema schemaToRemove) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.RemoveRecursive(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function RemoveRecursive (schemaToRemove As XmlSchema) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool RemoveRecursive(System::Xml::Schema::XmlSchema ^ schemaToRemove);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schemaToRemove" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schemaToRemove"><span data-ttu-id="1f7af-288"><see cref="T:System.Xml.Schema.XmlSchema" /> から削除する <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-288">The <see cref="T:System.Xml.Schema.XmlSchema" /> object to remove from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></param>
        <summary><span data-ttu-id="1f7af-289">指定された XML スキーマ定義言語 (XSD) スキーマとそれがインポートしたすべてのスキーマを <see cref="T:System.Xml.Schema.XmlSchemaSet" /> から削除します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-289">Removes the specified XML Schema definition language (XSD) schema and all the schemas it imports from the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns>
          <span data-ttu-id="1f7af-290"><see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトとそれがインポートしたすべてのスキーマが正常に削除された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-290"><see langword="true" /> if the <see cref="T:System.Xml.Schema.XmlSchema" /> object and all its imports were successfully removed; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-291"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>メソッドは、指定したスキーマとそれがインポートされたすべてのスキーマを削除、<xref:System.Xml.Schema.XmlSchemaSet>スキーマや、インポートされたスキーマに依存関係がない限り、します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-291">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method removes the specified schema and all the schemas it imports from the <xref:System.Xml.Schema.XmlSchemaSet>, as long as there are no dependencies on the schema or its imported schemas.</span></span> <span data-ttu-id="1f7af-292">スキーマで、インポートされたスキーマに依存関係があるかどうか、 <xref:System.Xml.Schema.XmlSchemaSet>、何も行われませんが削除されると<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>を返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-292">If there are dependencies on the schema or its imported schemas in the <xref:System.Xml.Schema.XmlSchemaSet>, nothing is removed and <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> returns `false`.</span></span> <span data-ttu-id="1f7af-293">場合`false`が返されますと<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>が定義されている場合、警告が依存関係を記述するイベント ハンドラーに送信します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-293">If `false` is returned and a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> is defined, a warning is sent to the event handler describing the dependencies.</span></span>  
  
 <span data-ttu-id="1f7af-294">指定されたスキーマは、その他のスキーマをインポートし、指定したスキーマ以前削除しましたが、場合、<xref:System.Xml.Schema.XmlSchemaSet.Remove%2A>メソッド、<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>メソッドを選択し、インポートされたスキーマは削除されませんが返されます`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-294">If the specified schema imports other schemas and the specified schema was previously removed with the <xref:System.Xml.Schema.XmlSchemaSet.Remove%2A> method, the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method will not remove the imported schemas and will return `false`.</span></span> <span data-ttu-id="1f7af-295">たとえば場合、`parentSchema`インポート`childSchema1`と`childSchema2`次のコードはのみを削除`parentSchema`がインポートされていない、`childSchema1`と`childSchema2`スキーマ。</span><span class="sxs-lookup"><span data-stu-id="1f7af-295">For example, if `parentSchema` imports `childSchema1` and `childSchema2` the following code will only remove `parentSchema`, but not the imported `childSchema1` and `childSchema2` schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.Remove(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="1f7af-296">次のコードが削除されます、`parentSchema`とインポートされたスキーマ。</span><span class="sxs-lookup"><span data-stu-id="1f7af-296">The following code will remove the `parentSchema` and the imported schemas:</span></span>  
  
```  
XmlSchemaSet ss = new XmlSchemaSet();  
XmlSchema xs = XmlSchema.Read(XmlReader.Create("parentSchema.xsd"), null);  
ss.Add(xs);  
ss.Compile();  
ss.RemoveRecursive(xs);  
ss.Compile();  
```  
  
 <span data-ttu-id="1f7af-297"><xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>メソッドも何も起こりませんの状態で、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-297">The <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method has no effect on the state of the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-298">次のコード例を複数のスキーマを追加することを示しています、 <xref:System.Xml.Schema.XmlSchemaSet>、スキーマのいずれかと、インポートを使用してすべてのスキーマを削除してから、<xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-298">The following code example illustrates adding multiple schemas to an <xref:System.Xml.Schema.XmlSchemaSet>, then removing one of the schemas and all the schemas it imports using the <xref:System.Xml.Schema.XmlSchemaSet.RemoveRecursive%2A> method.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd")  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    If schema.TargetNamespace = "http://www.contoso.com/music" Then  
        schemaSet.RemoveRecursive(schema)  
    End If  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/retail", "http://www.contoso.com/retail.xsd");  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Add("http://www.contoso.com/music", "http://www.contoso.com/music.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    if (schema.TargetNamespace == "http://www.contoso.com/music")  
    {  
        schemaSet.RemoveRecursive(schema);  
    }  
}  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-299">パラメーターとして渡された <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-299">The <see cref="T:System.Xml.Schema.XmlSchema" /> passed as a parameter is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Reprocess">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchema Reprocess (System.Xml.Schema.XmlSchema schema);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Xml.Schema.XmlSchema Reprocess(class System.Xml.Schema.XmlSchema schema) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Reprocess(System.Xml.Schema.XmlSchema)" />
      <MemberSignature Language="VB.NET" Value="Public Function Reprocess (schema As XmlSchema) As XmlSchema" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Xml::Schema::XmlSchema ^ Reprocess(System::Xml::Schema::XmlSchema ^ schema);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchema</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="schema" Type="System.Xml.Schema.XmlSchema" />
      </Parameters>
      <Docs>
        <param name="schema"><span data-ttu-id="1f7af-300">再処理するスキーマ。</span><span class="sxs-lookup"><span data-stu-id="1f7af-300">The schema to reprocess.</span></span></param>
        <summary><span data-ttu-id="1f7af-301"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内に既に存在している XML スキーマ定義言語 (XSD) スキーマを再処理します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-301">Reprocesses an XML Schema definition language (XSD) schema that already exists in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-302">スキーマが有効なスキーマの場合は <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-302">An <see cref="T:System.Xml.Schema.XmlSchema" /> object if the schema is a valid schema.</span></span> <span data-ttu-id="1f7af-303">スキーマが無効で <see cref="T:System.Xml.Schema.ValidationEventHandler" /> が指定されている場合は、<see langword="null" /> が返され、該当する検証イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-303">If the schema is not valid and a <see cref="T:System.Xml.Schema.ValidationEventHandler" /> is specified, <see langword="null" /> is returned and the appropriate validation event is raised.</span></span> <span data-ttu-id="1f7af-304">それ以外の場合は、<see cref="T:System.Xml.Schema.XmlSchemaException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-304">Otherwise, an <see cref="T:System.Xml.Schema.XmlSchemaException" /> is thrown.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-305">スキーマの前処理、スキーマに対して実行されたすべての前処理手順を実行時に、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-305">Reprocessing a schema performs all the preprocessing steps performed on a schema when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method is called.</span></span> <span data-ttu-id="1f7af-306">場合への呼び出し<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>が完了すると、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティに設定されている`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-306">If the call to <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to `false`.</span></span>  
  
 <span data-ttu-id="1f7af-307">内のスキーマの後に再処理メソッドを使用する必要があります、<xref:System.Xml.Schema.XmlSchemaSet>が変更された後、<xref:System.Xml.Schema.XmlSchemaSet>コンパイルを実行します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-307">The Reprocess method should be used after a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified, after the <xref:System.Xml.Schema.XmlSchemaSet> has performed compilation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f7af-308">呼び出す必要があります、<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドに追加した後、スキーマ (またはそのが含まれています/インポートのいずれか) を変更した場合、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-308">You need to call the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method if you have changed a schema (or one of its includes/imports) after adding it to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-309"><xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドは W3C XML スキーマの規則に従って構造の有効性のスキーマを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-309">The <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method will check the schema for structural validity according to the rules of W3C XML Schema.</span></span> <span data-ttu-id="1f7af-310">ただし、完全な検証チェックは実行しません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-310">However, it will not perform a full validation check.</span></span> <span data-ttu-id="1f7af-311">内部および外部のスキーマ コンポーネントへの参照も解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-311">It will also resolve references to internal and external schema components.</span></span> <span data-ttu-id="1f7af-312">正常に取得される任意のインポートまたはインクルード対象スキーマに追加されます、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-312">Any imported or included schemas that are successfully retrieved are also added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-313">インポートされたスキーマは、独立したとして追加<xref:System.Xml.Schema.XmlSchema>オブジェクト含まれているときなどの一部となるスキーマ<xref:System.Xml.Schema.XmlSchema>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-313">Imported schemas are added as separate <xref:System.Xml.Schema.XmlSchema> objects while included schemas are made part of the including <xref:System.Xml.Schema.XmlSchema>.</span></span> <span data-ttu-id="1f7af-314">再処理への呼び出しが成功した場合、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティが false に設定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-314">If the call to reprocess is successful, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property is set to false.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-315">次の例に追加のスキーマの前処理、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-315">The following example illustrates reprocessing a schema added to the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span> <span data-ttu-id="1f7af-316">後に、<xref:System.Xml.Schema.XmlSchemaSet>を使用してコンパイル、<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>メソッド、およびに追加されたスキーマ、<xref:System.Xml.Schema.XmlSchemaSet>を変更すると、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティ設定されます`true`でスキーマ場合でも、<xref:System.Xml.Schema.XmlSchemaSet>が変更されました。</span><span class="sxs-lookup"><span data-stu-id="1f7af-316">After the <xref:System.Xml.Schema.XmlSchemaSet> is compiled using the <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> method, and the schema added to the <xref:System.Xml.Schema.XmlSchemaSet> is modified, the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property will be set to `true`, even though a schema in the <xref:System.Xml.Schema.XmlSchemaSet> has been modified.</span></span> <span data-ttu-id="1f7af-317">呼び出す、<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドでは、すべての前処理が実行を実行、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>メソッドとセット、<xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-317">Calling the <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> method performs all the preprocessing performed by the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> method and sets the <xref:System.Xml.Schema.XmlSchemaSet.IsCompiled%2A> property to `false`.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet()  
Dim schema As XmlSchema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
schemaSet.Compile()  
  
Dim element As XmlSchemaElement = New XmlSchemaElement()  
schema.Items.Add(element)  
element.Name = "book"  
element.SchemaTypeName = New XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")  
  
schemaSet.Reprocess(schema)  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
XmlSchema schema = schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
schemaSet.Compile();  
  
XmlSchemaElement element = new XmlSchemaElement();  
schema.Items.Add(element);  
element.Name = "book";  
element.SchemaTypeName = new XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema");  
  
schemaSet.Reprocess(schema);  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Xml.Schema.XmlSchemaException"><span data-ttu-id="1f7af-318">スキーマが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-318">The schema is not valid.</span></span></exception>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="1f7af-319">パラメーターとして渡される <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトは <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-319">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="1f7af-320">パラメーターとして渡された <see cref="T:System.Xml.Schema.XmlSchema" /> オブジェクトは、<see cref="T:System.Xml.Schema.XmlSchemaSet" /> に存在していません。</span><span class="sxs-lookup"><span data-stu-id="1f7af-320">The <see cref="T:System.Xml.Schema.XmlSchema" /> object passed as a parameter does not already exist in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Schemas">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="1f7af-321"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内の XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-321">Returns a collection of XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="1f7af-322"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-322">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span></summary>
        <returns><span data-ttu-id="1f7af-323"><see cref="T:System.Collections.ICollection" /> に追加されたすべてのスキーマが格納された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-323">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />.</span></span> <span data-ttu-id="1f7af-324"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> にスキーマが追加されていない場合は、空の <see cref="T:System.Collections.ICollection" /> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-324">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-325">このメソッドを間接的に追加されたスキーマを返します、<xref:System.Xml.Schema.XmlSchemaSet>インポートされたためです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-325">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f7af-326"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>メソッドは、それと同等の<xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A>メソッドの廃止された<xref:System.Xml.Schema.XmlSchemaCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-326">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.GetEnumerator%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-327">次の例は、すべてのスキーマを反復処理する方法を示しています、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-327">The following example illustrates how to iterate over all the schemas in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas()  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas())  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Schemas">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection Schemas (string targetNamespace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection Schemas(string targetNamespace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaSet.Schemas(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Schemas (targetNamespace As String) As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ Schemas(System::String ^ targetNamespace);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="targetNamespace" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="targetNamespace"><span data-ttu-id="1f7af-328">スキーマの <c>targetNamespace</c> プロパティ。</span><span class="sxs-lookup"><span data-stu-id="1f7af-328">The schema <c>targetNamespace</c> property.</span></span></param>
        <summary><span data-ttu-id="1f7af-329">指定された名前空間に属している <see cref="T:System.Xml.Schema.XmlSchemaSet" /> 内のすべての XML スキーマ定義言語 (XSD) スキーマのコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-329">Returns a collection of all the XML Schema definition language (XSD) schemas in the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span></summary>
        <returns><span data-ttu-id="1f7af-330">指定された名前空間に属する <see cref="T:System.Collections.ICollection" /> に追加されたすべてのスキーマが格納された <see cref="T:System.Xml.Schema.XmlSchemaSet" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f7af-330">An <see cref="T:System.Collections.ICollection" /> object containing all the schemas that have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" /> that belong to the given namespace.</span></span> <span data-ttu-id="1f7af-331"><see cref="T:System.Xml.Schema.XmlSchemaSet" /> にスキーマが追加されていない場合は、空の <see cref="T:System.Collections.ICollection" /> オブジェクトが返されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-331">If no schemas have been added to the <see cref="T:System.Xml.Schema.XmlSchemaSet" />, an empty <see cref="T:System.Collections.ICollection" /> object is returned.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-332">場合、`targetNamespace`パラメーターは`null`または<xref:System.String.Empty>、名前空間のないすべてのスキーマが返されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-332">If the `targetNamespace` parameter is `null` or <xref:System.String.Empty>, then all schemas without a namespace are returned.</span></span>  
  
 <span data-ttu-id="1f7af-333">このメソッドを間接的に追加されたスキーマを返します、<xref:System.Xml.Schema.XmlSchemaSet>インポートされたためです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-333">This method returns schemas that were added indirectly to the <xref:System.Xml.Schema.XmlSchemaSet> because they were imported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="1f7af-334"><xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A>メソッドは、それと同等の<xref:System.Xml.Schema.XmlSchemaCollection.Item%2A>メソッドの廃止された<xref:System.Xml.Schema.XmlSchemaCollection>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-334">The <xref:System.Xml.Schema.XmlSchemaSet.Schemas%2A> method is the equivalent of the <xref:System.Xml.Schema.XmlSchemaCollection.Item%2A> method of the obsolete <xref:System.Xml.Schema.XmlSchemaCollection>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-335">次の例は、すべてのスキーマを反復処理する方法を示しています、http://www.contoso.com/booksで名前空間、<xref:System.Xml.Schema.XmlSchemaSet>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-335">The following example illustrates how to iterate over all the schemas in the http://www.contoso.com/books namespace in the <xref:System.Xml.Schema.XmlSchemaSet>.</span></span>  
  
```vb  
Dim schemaSet As XmlSchemaSet = New XmlSchemaSet  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd")  
  
Dim schema As XmlSchema  
  
For Each schema In schemaSet.Schemas("http://www.contoso.com/books")  
  
    schema.Write(Console.Out)  
  
Next  
```  
  
```csharp  
XmlSchemaSet schemaSet = new XmlSchemaSet();  
schemaSet.Add("http://www.contoso.com/books", "http://www.contoso.com/books.xsd");  
  
foreach (XmlSchema schema in schemaSet.Schemas("http://www.contoso.com/books"))  
{  
    schema.Write(Console.Out);  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidationEventHandler">
      <MemberSignature Language="C#" Value="public event System.Xml.Schema.ValidationEventHandler ValidationEventHandler;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Xml.Schema.ValidationEventHandler ValidationEventHandler" />
      <MemberSignature Language="DocId" Value="E:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Xml::Schema::ValidationEventHandler ^ ValidationEventHandler;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.ValidationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-336">XML スキーマ定義言語 (XSD) スキーマ検証エラーに関する情報を受信するためのイベント ハンドラーを指定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-336">Specifies an event handler for receiving information about XML Schema definition language (XSD) schema validation errors.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-337">スキーマ検証エラーに関する情報を受信するため、イベント ハンドラーを設定するときに、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>または<xref:System.Xml.Schema.XmlSchemaSet.Compile%2A>のメソッド、<xref:System.Xml.Schema.XmlSchemaSet>と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-337">Sets an event handler for receiving information about schema validation errors when the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Compile%2A> methods of the <xref:System.Xml.Schema.XmlSchemaSet> are called.</span></span>  
  
 <span data-ttu-id="1f7af-338">イベント ハンドラーが定義されていない場合、<xref:System.Xml.Schema.XmlSchemaException>検証エラー上でスローされる場所、<xref:System.Xml.Schema.XmlSeverityType>は<xref:System.Xml.Schema.XmlSeverityType.Error>です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-338">If an event handler is not defined, an <xref:System.Xml.Schema.XmlSchemaException> is thrown on any validation errors where the <xref:System.Xml.Schema.XmlSeverityType> is <xref:System.Xml.Schema.XmlSeverityType.Error>.</span></span> <span data-ttu-id="1f7af-339">検証エラーの例外がスローしません、<xref:System.Xml.Schema.XmlSeverityType>の<xref:System.Xml.Schema.XmlSeverityType.Warning>します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-339">Exceptions are not thrown for validation errors with an <xref:System.Xml.Schema.XmlSeverityType> of <xref:System.Xml.Schema.XmlSeverityType.Warning>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f7af-340">次のコード例は、追加することを示しています、<xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler>をスキーマに対して XML ドキュメントを検証するときに、エラーと警告をキャプチャします。</span><span class="sxs-lookup"><span data-stu-id="1f7af-340">The following code example illustrates adding a <xref:System.Xml.Schema.XmlSchemaSet.ValidationEventHandler> to capture errors and warnings when validating an XML document against a schema.</span></span>  
  
 [!code-cpp[XmlSchemaSetOverall Example#1](~/samples/snippets/cpp/VS_Snippets_Data/XmlSchemaSetOverall Example/CPP/xmlschemasetexample.cpp#1)]
 [!code-csharp[XmlSchemaSetOverall Example#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaSetOverall Example/CS/xmlschemasetexample.cs#1)]
 [!code-vb[XmlSchemaSetOverall Example#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaSetOverall Example/VB/xmlschemasetexample.vb#1)]  
  
 <span data-ttu-id="1f7af-341">例では、入力値として books.xml ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-341">The example uses the books.xml file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#2](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xml#2)]  
  
 <span data-ttu-id="1f7af-342">例では、入力値として books.xsd ファイルを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-342">The example uses the books.xsd file as an input.</span></span>  
  
 [!code-xml[XmlSchemaSetOverall Example#3](~/samples/snippets/xml/VS_Snippets_Data/XmlSchemaSetOverall Example/XML/books.xsd#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="XmlResolver">
      <MemberSignature Language="C#" Value="public System.Xml.XmlResolver XmlResolver { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlResolver XmlResolver" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaSet.XmlResolver" />
      <MemberSignature Language="VB.NET" Value="Public Property XmlResolver As XmlResolver" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlResolver ^ XmlResolver {  void set(System::Xml::XmlResolver ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.XmlResolver</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="1f7af-343">スキーマのインクルード要素およびインポート要素で参照される名前空間または場所を解決するために使用する <see cref="T:System.Xml.XmlResolver" /> を設定します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-343">Sets the <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></summary>
        <value><span data-ttu-id="1f7af-344">スキーマのインクルード要素およびインポート要素で参照される名前空間または場所を解決するために使用する <see cref="T:System.Xml.XmlResolver" />。</span><span class="sxs-lookup"><span data-stu-id="1f7af-344">The <see cref="T:System.Xml.XmlResolver" /> used to resolve namespaces or locations referenced in include and import elements of a schema.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f7af-345"><xref:System.Xml.XmlResolver>の<xref:System.Xml.Schema.XmlSchemaSet>解決するには名前空間またはで参照されている場所を含めるし、スキーマの要素をインポートするには、いつでもを使用してスキーマを追加するために使用、<xref:System.Xml.Schema.XmlSchemaSet.Add%2A>または<xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="1f7af-345">The <xref:System.Xml.XmlResolver> of an <xref:System.Xml.Schema.XmlSchemaSet> is used to resolve namespaces or locations referenced in include and import elements of a schema, any time a schema is added using the <xref:System.Xml.Schema.XmlSchemaSet.Add%2A> or <xref:System.Xml.Schema.XmlSchemaSet.Reprocess%2A> methods.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="1f7af-346">外部名前空間または場所で参照されているインクルード、インポート、およびスキーマの再定義要素は解決に関してインクルードまたはインポートするスキーマのベース URI。</span><span class="sxs-lookup"><span data-stu-id="1f7af-346">External namespaces or locations referenced in include, import, and redefine elements of a schema are resolved with respect to the base URI of the schema that includes or imports them.</span></span> <span data-ttu-id="1f7af-347">たとえば、インクルードまたはインポートしてスキーマのベース URI が空の場合または`null`、外部の場所は、現在のディレクトリに対して解決されます。</span><span class="sxs-lookup"><span data-stu-id="1f7af-347">For example, if the base URI of the including or importing schema is empty or `null`, the external locations are resolved with respect to the current directory.</span></span> <span data-ttu-id="1f7af-348"><xref:System.Xml.XmlUrlResolver>クラスは、外部スキーマを解決するのには既定で使用します。</span><span class="sxs-lookup"><span data-stu-id="1f7af-348">The <xref:System.Xml.XmlUrlResolver> class is used to resolve external schemas by default.</span></span> <span data-ttu-id="1f7af-349">インクルード、インポートの解像度を無効にして、スキーマの要素を再定義、設定、<xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A>プロパティを`null`です。</span><span class="sxs-lookup"><span data-stu-id="1f7af-349">To disable resolution of include, import, and redefine elements of a schema, set the <xref:System.Xml.Schema.XmlSchemaSet.XmlResolver%2A> property to `null`.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Xml.XmlResolver" />
      </Docs>
    </Member>
  </Members>
</Type>