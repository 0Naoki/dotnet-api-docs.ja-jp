<Type Name="XmlSchemaType" FullName="System.Xml.Schema.XmlSchemaType">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="85bac839dd366a43eb786976e61e86cdc516f147" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class XmlSchemaType : System.Xml.Schema.XmlSchemaAnnotated" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit XmlSchemaType extends System.Xml.Schema.XmlSchemaAnnotated" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlSchemaType" />
  <TypeSignature Language="VB.NET" Value="Public Class XmlSchemaType&#xA;Inherits XmlSchemaAnnotated" />
  <TypeSignature Language="C++ CLI" Value="public ref class XmlSchemaType : System::Xml::Schema::XmlSchemaAnnotated" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Xml.Schema.XmlSchemaAnnotated</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="e0724-101">すべての単純型と複合型の基本クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e0724-101">The base class for all simple types and complex types.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0724-102">参照してください、<xref:System.Xml.Schema.XmlSchemaSimpleType>クラスおよび<xref:System.Xml.Schema.XmlSchemaComplexType>クラス、たとえば、このクラスを使用します。</span><span class="sxs-lookup"><span data-stu-id="e0724-102">See the <xref:System.Xml.Schema.XmlSchemaSimpleType> class and the <xref:System.Xml.Schema.XmlSchemaComplexType> class for an example using this class.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public XmlSchemaType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; XmlSchemaType();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="e0724-103">
            <see cref="T:System.Xml.Schema.XmlSchemaType" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-103">Initializes a new instance of the <see cref="T:System.Xml.Schema.XmlSchemaType" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseSchemaType">
      <MemberSignature Language="C#" Value="public object BaseSchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object BaseSchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.BaseSchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseSchemaType As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ BaseSchemaType { System::Object ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Obsolete("This property has been deprecated. Please use BaseXmlSchemaType property that returns a strongly typed base schema type. http://go.microsoft.com/fwlink/?linkid=14202")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-104">組み込み XML スキーマ定義言語 (XSD: XML Schema Definition Language) データ型、simpleType 要素、または complexType 要素のコンパイル後のオブジェクト型を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-104">Gets the post-compilation object type or the built-in XML Schema Definition Language (XSD) data type, simpleType element, or complexType element.</span>
          </span>
          <span data-ttu-id="e0724-105">これは、スキーマ コンパイル後の infoset プロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-105">This is a post-schema-compilation infoset property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-106">組み込み XSD データ型、simpleType 要素、または complexType 要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-106">The built-in XSD data type, simpleType element, or complexType element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-107">ComplexType は基本の値で指定された型から派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-107">The complexType is derived from the type specified by the base value.</span></span> <span data-ttu-id="e0724-108">ベース値には、QName をする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e0724-108">The base value must be a QName.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="e0724-109"><xref:System.Xml.Schema.XmlSchemaType.BaseSchemaType%2A>プロパティは廃止されておりは置き換えられました、<xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="e0724-109">The <xref:System.Xml.Schema.XmlSchemaType.BaseSchemaType%2A> property is obsolete and has been replaced by the <xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="BaseXmlSchemaType">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaType BaseXmlSchemaType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaType BaseXmlSchemaType" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BaseXmlSchemaType As XmlSchemaType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaType ^ BaseXmlSchemaType { System::Xml::Schema::XmlSchemaType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-110">このスキーマ型の基本型に対応するコンパイル後の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-110">Gets the post-compilation value for the base type of this schema type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-111">このスキーマ型の基本型を表す <see cref="T:System.Xml.Schema.XmlSchemaType" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-111">An <see cref="T:System.Xml.Schema.XmlSchemaType" /> object representing the base type of this schema type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-112"><xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A>プロパティが常にすべてのスキーマ型が基本型を設定するために、値があります。</span><span class="sxs-lookup"><span data-stu-id="e0724-112">The <xref:System.Xml.Schema.XmlSchemaType.BaseXmlSchemaType%2A> property always has a value, because all schema types have a base type.</span></span> <span data-ttu-id="e0724-113">この値は、スキーマ コンパイル後の情報セットの一部のスキーマのコンパイル時に設定されます。</span><span class="sxs-lookup"><span data-stu-id="e0724-113">This value is set upon schema compilation, making it a part of the post-schema-compilation infoset.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Datatype">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDatatype Datatype { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.Schema.XmlSchemaDatatype Datatype" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.Datatype" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Datatype As XmlSchemaDatatype" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDatatype ^ Datatype { System::Xml::Schema::XmlSchemaDatatype ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDatatype</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-114">複合型のデータ型に対応するコンパイル後の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-114">Gets the post-compilation value for the data type of the complex type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-115">スキーマ コンパイル後の値の <see cref="T:System.Xml.Schema.XmlSchemaDatatype" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-115">The <see cref="T:System.Xml.Schema.XmlSchemaDatatype" /> post-schema-compilation value.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DerivedBy">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod DerivedBy { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod DerivedBy" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.DerivedBy" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DerivedBy As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod DerivedBy { System::Xml::Schema::XmlSchemaDerivationMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-116">この要素が基本型から派生された方法に関するコンパイル後の情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-116">Gets the post-compilation information on how this element was derived from its base type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-117">有効な <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-117">One of the valid <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> values.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-118">このプロパティを含めることができる値を次の表に示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-118">The following table shows the values that this property can contain.</span></span>  
  
|<span data-ttu-id="e0724-119"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> の値</span><span class="sxs-lookup"><span data-stu-id="e0724-119"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> value</span></span>|<span data-ttu-id="e0724-120">説明</span><span class="sxs-lookup"><span data-stu-id="e0724-120">Description</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.None>|<span data-ttu-id="e0724-121">派生メソッドを指定します。</span><span class="sxs-lookup"><span data-stu-id="e0724-121">No derivation method specified.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution>|<span data-ttu-id="e0724-122">置換による派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-122">Derived by Substitution.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Extension>|<span data-ttu-id="e0724-123">拡張機能によって派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-123">Derived by Extension.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction>|<span data-ttu-id="e0724-124">制限による派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-124">Derived by Restriction.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.List>|<span data-ttu-id="e0724-125">リストが派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-125">Derived by List.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Union>|<span data-ttu-id="e0724-126">Union による派生します。</span><span class="sxs-lookup"><span data-stu-id="e0724-126">Derived by Union.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Final">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod Final { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod Final" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.Final" />
      <MemberSignature Language="VB.NET" Value="Public Property Final As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod Final { System::Xml::Schema::XmlSchemaDerivationMethod get(); void set(System::Xml::Schema::XmlSchemaDerivationMethod value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("final")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-127">さらに派生が可能かどうかを示す、型派生の final 属性を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-127">Gets or sets the final attribute of the type derivation that indicates if further derivations are allowed.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-128">有効な <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-128">One of the valid <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> values.</span>
          </span>
          <span data-ttu-id="e0724-129">既定値は、<see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-129">The default is <see cref="F:System.Xml.Schema.XmlSchemaDerivationMethod.None" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-130">次の表は、このプロパティは、単純型を含めることができます、値を示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-130">The following table shows the values that this property can contain for simple type.</span></span>  
  
|<span data-ttu-id="e0724-131"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> の値</span><span class="sxs-lookup"><span data-stu-id="e0724-131"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> value</span></span>|<span data-ttu-id="e0724-132">説明</span><span class="sxs-lookup"><span data-stu-id="e0724-132">Description</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Empty>|<span data-ttu-id="e0724-133">スキーマをオーバーライド`blockDefault`制限、拡張子、または置換を実行して任意の派生を許可する設定。</span><span class="sxs-lookup"><span data-stu-id="e0724-133">Overrides the schema `blockDefault` setting allowing any derivations by restriction, extension, or substitution to take place.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.None>|<span data-ttu-id="e0724-134">派生メソッドが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="e0724-134">No derivation method is specified.</span></span> <span data-ttu-id="e0724-135">既定値です。</span><span class="sxs-lookup"><span data-stu-id="e0724-135">This is the default.</span></span> <span data-ttu-id="e0724-136">派生ルールは、スキーマ blockDefault 設定から取得されます。</span><span class="sxs-lookup"><span data-stu-id="e0724-136">Derivation rules are taken from the schema blockDefault setting.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution>|<span data-ttu-id="e0724-137">置換による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-137">Cannot be replaced by a type derived by Substitution.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Extension>|<span data-ttu-id="e0724-138">拡張による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-138">Cannot be replaced by a type derived by Extension.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction>|<span data-ttu-id="e0724-139">制限による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-139">Cannot be replaced by a type derived by Restriction.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.All>|<span data-ttu-id="e0724-140">`#all`。</span><span class="sxs-lookup"><span data-stu-id="e0724-140">`#all`.</span></span> <span data-ttu-id="e0724-141">任意の派生メソッドによって派生した型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-141">Cannot be replaced by a type derived by any derivation method.</span></span>|  
  
 <span data-ttu-id="e0724-142">次の表は、このプロパティは、複合型を含めることができます、値を示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-142">The following table shows the values that this property can contain for complex type.</span></span>  
  
|<span data-ttu-id="e0724-143"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> の値</span><span class="sxs-lookup"><span data-stu-id="e0724-143"><xref:System.Xml.Schema.XmlSchemaDerivationMethod> value</span></span>|<span data-ttu-id="e0724-144">説明</span><span class="sxs-lookup"><span data-stu-id="e0724-144">Description</span></span>|  
|----------------------------------------------------------------------------------------------------------------------------------------------------------------|-----------------|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Empty>|<span data-ttu-id="e0724-145">スキーマをオーバーライド`blockDefault`制限、拡張子、または置換を実行して任意の派生を許可する設定。</span><span class="sxs-lookup"><span data-stu-id="e0724-145">Overrides the schema `blockDefault` setting allowing any derivations by restriction, extension, or substitution to take place.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.None>|<span data-ttu-id="e0724-146">派生メソッドが指定されていません。</span><span class="sxs-lookup"><span data-stu-id="e0724-146">No derivation method is specified.</span></span> <span data-ttu-id="e0724-147">既定値です。</span><span class="sxs-lookup"><span data-stu-id="e0724-147">This is the default.</span></span> <span data-ttu-id="e0724-148">派生ルールは、スキーマから取得されます`blockDefault`設定します。</span><span class="sxs-lookup"><span data-stu-id="e0724-148">Derivation rules are taken from the schema `blockDefault` setting.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Substitution>|<span data-ttu-id="e0724-149">置換による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-149">Cannot be replaced by a type derived by Substitution.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Extension>|<span data-ttu-id="e0724-150">拡張による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-150">Cannot be replaced by a type derived by Extension.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.Restriction>|<span data-ttu-id="e0724-151">制限による派生型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-151">Cannot be replaced by a type derived by Restriction.</span></span>|  
|<xref:System.Xml.Schema.XmlSchemaDerivationMethod.All>|<span data-ttu-id="e0724-152">`#all`。</span><span class="sxs-lookup"><span data-stu-id="e0724-152">`#all`.</span></span> <span data-ttu-id="e0724-153">任意の派生メソッドによって派生した型では置換できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-153">Cannot be replaced by a type derived by any derivation method.</span></span>|  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FinalResolved">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlSchemaDerivationMethod FinalResolved" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.FinalResolved" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinalResolved As XmlSchemaDerivationMethod" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlSchemaDerivationMethod FinalResolved { System::Xml::Schema::XmlSchemaDerivationMethod get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaDerivationMethod</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-154">
            <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> プロパティのコンパイル後の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-154">Gets the post-compilation value of the <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-155">
            <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> プロパティのコンパイル後の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-155">The post-compilation value of the <see cref="P:System.Xml.Schema.XmlSchemaType.Final" /> property.</span>
          </span>
          <span data-ttu-id="e0724-156">既定値は <see langword="finalDefault" /> 要素の <see langword="schema" /> 属性値です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-156">The default is the <see langword="finalDefault" /> attribute value of the <see langword="schema" /> element.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-157">この値は、制限を使用して型を拡張するときに、型がどのように制限されるかを示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-157">This value indicates how the type is restricted when the type is extended through restriction.</span></span> <span data-ttu-id="e0724-158">型が付いている場合に`final`、この型を拡張することはできません。</span><span class="sxs-lookup"><span data-stu-id="e0724-158">If the type is marked as `final`, this type cannot be extended.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBuiltInComplexType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-159">指定された複合型の組み込み複合型を表す <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-159">Returns an <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> that represents the built-in complex type of the complex type specified.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBuiltInComplexType">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType (System.Xml.Schema.XmlTypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType(valuetype System.Xml.Schema.XmlTypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.Schema.XmlTypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBuiltInComplexType (typeCode As XmlTypeCode) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetBuiltInComplexType(System::Xml::Schema::XmlTypeCode typeCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.Xml.Schema.XmlTypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">
          <span data-ttu-id="e0724-160">複合型を表す <see cref="T:System.Xml.Schema.XmlTypeCode" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-160">One of the <see cref="T:System.Xml.Schema.XmlTypeCode" /> values representing the complex type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0724-161">指定された複合型の組み込み複合型を表す <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-161">Returns an <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> that represents the built-in complex type of the complex type specified.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0724-162">組み込み複合型を表す <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-162">The <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> that represents the built-in complex type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInComplexType">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType (System.Xml.XmlQualifiedName qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaComplexType GetBuiltInComplexType(class System.Xml.XmlQualifiedName qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.GetBuiltInComplexType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBuiltInComplexType (qualifiedName As XmlQualifiedName) As XmlSchemaComplexType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaComplexType ^ GetBuiltInComplexType(System::Xml::XmlQualifiedName ^ qualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaComplexType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="e0724-163">複合型の <see cref="T:System.Xml.XmlQualifiedName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-163">The <see cref="T:System.Xml.XmlQualifiedName" /> of the complex type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0724-164">修飾名で指定された複合型の組み込み複合型を表す <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-164">Returns an <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> that represents the built-in complex type of the complex type specified by qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0724-165">組み込み複合型を表す <see cref="T:System.Xml.Schema.XmlSchemaComplexType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-165">The <see cref="T:System.Xml.Schema.XmlSchemaComplexType" /> that represents the built-in complex type.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e0724-166">
            <see cref="T:System.Xml.XmlQualifiedName" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-166">The <see cref="T:System.Xml.XmlQualifiedName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetBuiltInSimpleType">
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-167">指定された単純型の組み込み単純型を表す <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-167">Returns an <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> that represents the built-in simple type of the specified simple type.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetBuiltInSimpleType">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType (System.Xml.Schema.XmlTypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType(valuetype System.Xml.Schema.XmlTypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.Schema.XmlTypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBuiltInSimpleType (typeCode As XmlTypeCode) As XmlSchemaSimpleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaSimpleType ^ GetBuiltInSimpleType(System::Xml::Schema::XmlTypeCode typeCode);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSimpleType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.Xml.Schema.XmlTypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">
          <span data-ttu-id="e0724-168">単純型を表す <see cref="T:System.Xml.Schema.XmlTypeCode" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-168">One of the <see cref="T:System.Xml.Schema.XmlTypeCode" /> values representing the simple type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0724-169">指定された単純型の組み込み単純型を表す <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-169">Returns an <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> that represents the built-in simple type of the specified simple type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0724-170">組み込み単純型を表す <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-170">The <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> that represents the built-in simple type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-171">組み込みの型を直接シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-171">You cannot directly serialize the built-in type.</span></span> <span data-ttu-id="e0724-172">型をシリアル化する必要がある場合は、組み込みの型から派生する新しい単純型を作成し、単純型をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="e0724-172">If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0724-173">次の例では、型を作成し、スキーマに追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-173">The following example shows how to create the type and add it to the schema.</span></span>  
  
 [!code-csharp[XmlSchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlschematype/cs/xmlschematype.cs#1)]
 [!code-vb[XmlSchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlschematype/vb/getbuiltinsimpletype.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetBuiltInSimpleType">
      <MemberSignature Language="C#" Value="public static System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType (System.Xml.XmlQualifiedName qualifiedName);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Xml.Schema.XmlSchemaSimpleType GetBuiltInSimpleType(class System.Xml.XmlQualifiedName qualifiedName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.GetBuiltInSimpleType(System.Xml.XmlQualifiedName)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function GetBuiltInSimpleType (qualifiedName As XmlQualifiedName) As XmlSchemaSimpleType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Xml::Schema::XmlSchemaSimpleType ^ GetBuiltInSimpleType(System::Xml::XmlQualifiedName ^ qualifiedName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlSchemaSimpleType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="qualifiedName" Type="System.Xml.XmlQualifiedName" />
      </Parameters>
      <Docs>
        <param name="qualifiedName">
          <span data-ttu-id="e0724-174">単純型の <see cref="T:System.Xml.XmlQualifiedName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-174">The <see cref="T:System.Xml.XmlQualifiedName" /> of the simple type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0724-175">修飾名で指定された単純型の組み込み単純型を表す <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-175">Returns an <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> that represents the built-in simple type of the simple type that is specified by the qualified name.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0724-176">組み込み単純型を表す <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-176">The <see cref="T:System.Xml.Schema.XmlSchemaSimpleType" /> that represents the built-in simple type.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-177">組み込みの型を直接シリアル化できません。</span><span class="sxs-lookup"><span data-stu-id="e0724-177">You cannot directly serialize the built-in type.</span></span> <span data-ttu-id="e0724-178">型をシリアル化する必要がある場合は、組み込みの型から派生する新しい単純型を作成し、単純型をシリアル化します。</span><span class="sxs-lookup"><span data-stu-id="e0724-178">If you need to serialize the type, create a new simple type which derives from the built-in type and serialize the simple type.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e0724-179">次の例では、型を作成し、スキーマに追加する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="e0724-179">The following example shows how to create the type and add it to the schema.</span></span>  
  
 [!code-csharp[XmlSchemaType#1](~/samples/snippets/csharp/VS_Snippets_Data/xmlschematype/cs/xmlschematype.cs#1)]
 [!code-vb[XmlSchemaType#1](~/samples/snippets/visualbasic/VS_Snippets_Data/xmlschematype/vb/getbuiltinsimpletype.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e0724-180">
            <see cref="T:System.Xml.XmlQualifiedName" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-180">The <see cref="T:System.Xml.XmlQualifiedName" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsDerivedFrom">
      <MemberSignature Language="C#" Value="public static bool IsDerivedFrom (System.Xml.Schema.XmlSchemaType derivedType, System.Xml.Schema.XmlSchemaType baseType, System.Xml.Schema.XmlSchemaDerivationMethod except);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool IsDerivedFrom(class System.Xml.Schema.XmlSchemaType derivedType, class System.Xml.Schema.XmlSchemaType baseType, valuetype System.Xml.Schema.XmlSchemaDerivationMethod except) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Xml.Schema.XmlSchemaType.IsDerivedFrom(System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaType,System.Xml.Schema.XmlSchemaDerivationMethod)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IsDerivedFrom (derivedType As XmlSchemaType, baseType As XmlSchemaType, except As XmlSchemaDerivationMethod) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool IsDerivedFrom(System::Xml::Schema::XmlSchemaType ^ derivedType, System::Xml::Schema::XmlSchemaType ^ baseType, System::Xml::Schema::XmlSchemaDerivationMethod except);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="derivedType" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="baseType" Type="System.Xml.Schema.XmlSchemaType" />
        <Parameter Name="except" Type="System.Xml.Schema.XmlSchemaDerivationMethod" />
      </Parameters>
      <Docs>
        <param name="derivedType">
          <span data-ttu-id="e0724-181">テスト対象の派生 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-181">The derived <see cref="T:System.Xml.Schema.XmlSchemaType" /> to test.</span>
          </span>
        </param>
        <param name="baseType">
          <span data-ttu-id="e0724-182">テスト対象の派生 <see cref="T:System.Xml.Schema.XmlSchemaType" /> の基本 <see cref="T:System.Xml.Schema.XmlSchemaType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-182">The base <see cref="T:System.Xml.Schema.XmlSchemaType" /> to test the derived <see cref="T:System.Xml.Schema.XmlSchemaType" /> against.</span>
          </span>
        </param>
        <param name="except">
          <span data-ttu-id="e0724-183">テストから除外する型派生メソッドを表す <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> 値の 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-183">One of the <see cref="T:System.Xml.Schema.XmlSchemaDerivationMethod" /> values representing a type derivation method to exclude from testing.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="e0724-184">指定された派生スキーマ型が、指定された基本スキーマ型から派生したかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-184">Returns a value indicating if the derived schema type specified is derived from the base schema type specified</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="e0724-185">派生型が基本型から派生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-185">
              <see langword="true" /> if the derived type is derived from the base type; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="e0724-186">次の例に示します、<xref:System.Xml.Schema.XmlSchemaType.IsDerivedFrom%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="e0724-186">The following is an example of the <xref:System.Xml.Schema.XmlSchemaType.IsDerivedFrom%2A> method.</span></span>  
  
```csharp  
XmlSchemaType xsdInteger = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer);  
XmlSchemaType xsdPositiveInteger = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger);  
  
// true  
Console.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.None));  
  
// false  
Console.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.Restriction));  
```  
  
```vb  
Dim xsdInteger As XmlSchemaType = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.Integer)  
Dim xsdPositiveInteger As XmlSchemaType = XmlSchemaType.GetBuiltInSimpleType(XmlTypeCode.PositiveInteger)  
  
' True  
Console.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.None))  
  
' False  
Console.WriteLine(XmlSchemaType.IsDerivedFrom(xsdPositiveInteger, xsdInteger, XmlSchemaDerivationMethod.Restriction))  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsMixed">
      <MemberSignature Language="C#" Value="public virtual bool IsMixed { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsMixed" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.IsMixed" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property IsMixed As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsMixed { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-187">この型が混合コンテンツ モデルを持つかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-187">Gets or sets a value indicating if this type has a mixed content model.</span>
          </span>
          <span data-ttu-id="e0724-188">このプロパティは、複合型でだけ有効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-188">This property is only valid in a complex type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-189">型が混合コンテンツ モデルを持つ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-189">
              <see langword="true" /> if the type has a mixed content model; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="e0724-190">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-190">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-191">この仮想メソッドは派生クラスでオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="e0724-191">This virtual method is overridden in derived classes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlAttribute("name")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-192">型の名前を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-192">Gets or sets the name of the type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-193">型の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-193">The name of the type.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e0724-194">名前は、World Wide Web Consortium (W3C) XML 名前空間の仕様で定義されている、コロンを含まない名前 (NCName) にすることがあります。</span><span class="sxs-lookup"><span data-stu-id="e0724-194">The name must be an no-colon name (NCName) as defined in the World Wide Web Consortium (W3C) XML Namespaces specification.</span></span> <span data-ttu-id="e0724-195">名前がすべての間で一意である必要があります指定すると場合、`simpleType`と`complexType`要素。</span><span class="sxs-lookup"><span data-stu-id="e0724-195">If specified, the name must be unique among all `simpleType` and `complexType` elements.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QualifiedName">
      <MemberSignature Language="C#" Value="public System.Xml.XmlQualifiedName QualifiedName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Xml.XmlQualifiedName QualifiedName" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.QualifiedName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property QualifiedName As XmlQualifiedName" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::XmlQualifiedName ^ QualifiedName { System::Xml::XmlQualifiedName ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.XmlQualifiedName</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-196">この型の <see langword="Name" /> 属性から構築された型の限定名を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-196">Gets the qualified name for the type built from the <see langword="Name" /> attribute of this type.</span>
          </span>
          <span data-ttu-id="e0724-197">これは、スキーマ コンパイル後のプロパティです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-197">This is a post-schema-compilation property.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-198">この型の <see langword="Name" /> 属性から構築された型の <see cref="T:System.Xml.XmlQualifiedName" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-198">The <see cref="T:System.Xml.XmlQualifiedName" /> for the type built from the <see langword="Name" /> attribute of this type.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TypeCode">
      <MemberSignature Language="C#" Value="public System.Xml.Schema.XmlTypeCode TypeCode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Xml.Schema.XmlTypeCode TypeCode" />
      <MemberSignature Language="DocId" Value="P:System.Xml.Schema.XmlSchemaType.TypeCode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TypeCode As XmlTypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Xml::Schema::XmlTypeCode TypeCode { System::Xml::Schema::XmlTypeCode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Xml</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Xml.Serialization.XmlIgnore</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Xml.Schema.XmlTypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="e0724-199">型の <see cref="T:System.Xml.Schema.XmlTypeCode" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-199">Gets the <see cref="T:System.Xml.Schema.XmlTypeCode" /> of the type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="e0724-200">
            <see cref="T:System.Xml.Schema.XmlTypeCode" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="e0724-200">One of the <see cref="T:System.Xml.Schema.XmlTypeCode" /> values.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>