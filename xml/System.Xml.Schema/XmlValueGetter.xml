<Type Name="XmlValueGetter" FullName="System.Xml.Schema.XmlValueGetter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="3a86dc2addf01d4c691c6f12cd8204d0c590db0b" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70406268" /></Metadata><TypeSignature Language="C#" Value="public delegate object XmlValueGetter();" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed XmlValueGetter extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Xml.Schema.XmlValueGetter" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function XmlValueGetter() As Object " />
  <TypeSignature Language="C++ CLI" Value="public delegate System::Object ^ XmlValueGetter();" />
  <TypeSignature Language="F#" Value="type XmlValueGetter = delegate of unit -&gt; obj" />
  <AssemblyInfo>
    <AssemblyName>System.Xml</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Xml.ReaderWriter</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters />
  <ReturnValue>
    <ReturnType>System.Object</ReturnType>
  </ReturnValue>
  <Docs>
    <summary>属性、テキスト、および空白の各値を、属性、テキスト、または空白の XML スキーマ定義言語 (XSD: XML Schema Definition Language) 型と互換性のある共通言語ランタイム (CLR: Common Language Runtime) 型にして渡すために、<see cref="T:System.Xml.Schema.XmlSchemaValidator" /> クラスで使用する <see langword="delegate" />。</summary>
    <returns>属性、テキスト、または空白の各値を保持するオブジェクト。 このオブジェクトは、属性、テキスト、空白の各値の XSD 型に対応する CLR 型になります。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は、属性、テキスト、または空白のノードの CLR 値が既に使用可能である場合に便利です。これ`string`により、に変換してから検証のために再解析するコストを回避できます。 <xref:System.Xml.Schema.XmlValueGetter> `delegate`  
  
 クラスの<xref:System.Xml.Schema.XmlSchemaValidator>詳細については、 [XmlSchemaValidator のプッシュベースの検証](~/docs/standard/data/xml/xmlschemavalidator-push-based-validation.md)に関する<xref:System.Xml.Schema.XmlSchemaValidator>トピック、またはクラスのリファレンスドキュメントを参照してください。  
  
   
  
## Examples  
 次の例では`contosoBooks.xml` 、 `contosoBooks.xsd`スキーマに対してファイルを検証します。 この例では、<xref:System.Xml.Serialization.XmlSerializer> クラスを使用して、`contosoBooks.xml` ファイルを逆シリアル化し、ノードの値を <xref:System.Xml.Schema.XmlSchemaValidator> クラスのメソッドに渡します。  
  
 [!code-csharp[XmlSchemaValidatorExamples#1](~/samples/snippets/csharp/VS_Snippets_Data/XmlSchemaValidatorExamples/CS/XmlSchemaValidatorExamples.cs#1)]
 [!code-vb[XmlSchemaValidatorExamples#1](~/samples/snippets/visualbasic/VS_Snippets_Data/XmlSchemaValidatorExamples/VB/XmlSchemaValidatorExamples.vb#1)]  
  
 この例は、`contosoBooks.xml` ファイルを入力として使用します。  
  
 [!code-xml[XPathXMLExamples#2](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xml#2)]  
  
 また、`contosoBooks.xsd` ファイルも入力として使用します。  
  
 [!code-xml[XPathXMLExamples#3](~/samples/snippets/xml/VS_Snippets_Data/XPathXMLExamples/XML/contosoBooks.xsd#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Xml.Schema.XmlSchemaValidator" />
    <altmember cref="T:System.Xml.Serialization.XmlSerializer" />
    <related type="Article" href="https://msdn.microsoft.com/library/911d4460-dd91-4958-85b2-2ca3299f9ec6">XmlSchemaValidator のプッシュ ベースの検証</related>
  </Docs>
</Type>
