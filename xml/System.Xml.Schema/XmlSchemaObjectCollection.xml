<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="XmlSchemaObjectCollection.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5937398ee8cecf95ee08471006052183469cfe987.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">937398ee8cecf95ee08471006052183469cfe987</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>A collection of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> のコレクション。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>See <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph> for an example using this class.</source>
          <target state="translated">参照してください<ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObject&gt;</ph>たとえば、このクラスを使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="T:System.Xml.Schema.XmlSchemaObjectCollection">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.#ctor(System.Xml.Schema.XmlSchemaObject)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> class that takes an <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を受け取る <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>Adds an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">
          <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The index at which the item has been added.</source>
          <target state="translated">項目が追加された位置のインデックス。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> already equals the capacity, the capacity of list is doubled by automatically reallocating the internal array and copying the existing elements to the new array before the new element is added.</source>
          <target state="translated">場合<ph id="ph1">`Count`</ph>容量に既に等しい、自動的に内部の配列を再割り当てし、新しい要素が追加される前に、既存の要素を新しい配列にコピーしてリストの容量が 2 倍になります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> is less than the capacity, this method is an 0(1) operation.</source>
          <target state="translated">場合<ph id="ph1">`Count`</ph>が小さい、容量よりも、このメソッドは、0 (1) 操作になります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>If the capacity needs to be increased to accommodate the new element, this method becomes an 0(n) operation, where n is <ph id="ph1">`Count`</ph>.</source>
          <target state="translated">このメソッドがここで n は、0 (n) 操作になる場合は、容量は、新しい要素を格納するためにする必要があります、<ph id="ph1">`Count`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph> method expects only <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph> and its derived types (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>, <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>, and <ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) as parameters.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchemaObjectCollection.Add%2A&gt;</ph>メソッドにのみが必要ですが<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchemaExternal&gt;</ph>とその派生型 (<ph id="ph3">&lt;xref:System.Xml.Schema.XmlSchemaImport&gt;</ph>、 <ph id="ph4">&lt;xref:System.Xml.Schema.XmlSchemaInclude&gt;</ph>、および<ph id="ph5">&lt;xref:System.Xml.Schema.XmlSchemaRedefine&gt;</ph>) パラメーターとして。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The following example illustrates adding an included schema to the <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> collection of an existing <ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph> object.</source>
          <target state="translated">次の例に含まれるスキーマの追加、 <ph id="ph1">&lt;xref:System.Xml.Schema.XmlSchema.Includes%2A&gt;</ph> 、既存のコレクション<ph id="ph2">&lt;xref:System.Xml.Schema.XmlSchema&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see langword="Count" /&gt;</ph> より大きくなっています。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Add(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> parameter specified is not of type <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaExternal" /&gt;</ph> or its derived types <ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaImport" /&gt;</ph>, <ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaInclude" /&gt;</ph>, and <ph id="ph5">&lt;see cref="T:System.Xml.Schema.XmlSchemaRedefine" /&gt;</ph>.</source>
          <target state="translated">指定された <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> パラメーターの型が <ph id="ph2">&lt;see cref="T:System.Xml.Schema.XmlSchemaExternal" /&gt;</ph>、またはその派生型 (<ph id="ph3">&lt;see cref="T:System.Xml.Schema.XmlSchemaImport" /&gt;</ph>、<ph id="ph4">&lt;see cref="T:System.Xml.Schema.XmlSchemaInclude" /&gt;</ph>、および <ph id="ph5">&lt;see cref="T:System.Xml.Schema.XmlSchemaRedefine" /&gt;</ph>) ではありません。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>Indicates if the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> is in the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> が <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> に存在するかどうかを示します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified qualified name is in the collection; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定した修飾名がコレクションにある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Contains(System.Xml.Schema.XmlSchemaObject)">
          <source>If null is supplied, <ph id="ph1">&lt;see langword="false" /&gt;</ph> is returned because there is no qualified name with a null name.</source>
          <target state="translated">null が提供されると、null 名を持つ限定名がないため、<ph id="ph1">&lt;see langword="false" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The one-dimensional array that is the destination of the elements copied from the <ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> から要素がコピーされる先の 1 次元配列。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The array must have zero-based indexing.</source>
          <target state="translated">配列には、0 から始まるインデックスが設定されている必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>Copies all the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>s from the collection into the given array, starting at the given index.</source>
          <target state="translated">コレクション内のすべての <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を、指定したインデックスから始まる指定した配列にコピーします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The specified array must be of a compatible type.</source>
          <target state="translated">指定された配列は、互換性のある型でなければなりません。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>This method uses <ph id="ph1">&lt;xref:System.Array.Copy%2A&gt;</ph> to copy the elements.</source>
          <target state="translated">このメソッドを使用して<ph id="ph1">&lt;xref:System.Array.Copy%2A&gt;</ph>要素のコピー。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is a null reference (<ph id="ph2">&lt;see langword="Nothing" /&gt;</ph> in Visual Basic).</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が null 参照 (Visual Basic の場合は <ph id="ph2">&lt;see langword="Nothing" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="array" /&gt;</ph> is multi-dimensional.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="array" /&gt;</ph> が多次元です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is equal to or greater than the length of <ph id="ph2">&lt;paramref name="array" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;paramref name="array" /&gt;</ph> の長さ以上です。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source><ph id="ph1">\-</ph> or -</source>
          <target state="translated"><ph id="ph1">\-</ph> または</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The number of elements in the source <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> is greater than the available space from index to the end of the destination array.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> の要素数が、インデックスからコピー先の配列の末尾までに格納できる数を超えています。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.CopyTo(System.Xml.Schema.XmlSchemaObject[],System.Int32)">
          <source>The type of the source <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> cannot be cast automatically to the type of the destination array.</source>
          <target state="translated">コピー元の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> の型が、コピー先の配列の型に自動的にキャストできません。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
          <source>Returns an enumerator for iterating through the <ph id="ph1">&lt;see langword="XmlSchemaObjects" /&gt;</ph> contained in the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="XmlSchemaObjects" /&gt;</ph> に格納されている <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> の反復処理する列挙子を返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.GetEnumerator">
          <source>The iterator returns <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" /&gt;</ph>.</source>
          <target state="translated">この反復子は、<ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObjectEnumerator" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> whose index you want to return.</source>
          <target state="translated">返すインデックスの対象の <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>Gets the collection index corresponding to the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> に対応するコレクション インデックスを取得します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.IndexOf(System.Xml.Schema.XmlSchemaObject)">
          <source>The index corresponding to the specified <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> に対応するインデックス。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The zero-based index at which an item should be inserted.</source>
          <target state="translated">項目を挿入する位置の、0 から始まるインデックス番号。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to insert.</source>
          <target state="translated">挿入する <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>Inserts an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> に挿入します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`Count`</ph> already equals the capacity, the capacity of the list is doubled by automatically reallocating the internal array before the new element is inserted.</source>
          <target state="translated">場合<ph id="ph1">`Count`</ph>容量に既に等しい、新しい要素が挿入される前に、内部の配列を自動的に再割り当てすることによって、リストの容量が 2 倍になります。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>If <ph id="ph1">`index`</ph> is equal to <ph id="ph2">`Count`</ph>, <ph id="ph3">`value`</ph> is added to the end of <ph id="ph4">`XmlSchemaObjectCollection`</ph>.</source>
          <target state="translated">場合<ph id="ph1">`index`</ph>と等しい<ph id="ph2">`Count`</ph>、<ph id="ph3">`value`</ph>の末尾に追加された<ph id="ph4">`XmlSchemaObjectCollection`</ph>です。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>The elements that follow the insertion point move down to accommodate the new element.</source>
          <target state="translated">カーソル位置の後にある要素は新しい要素のために下に移動します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is less than zero.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が 0 未満です。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Insert(System.Int32,System.Xml.Schema.XmlSchemaObject)">
          <source><ph id="ph1">&lt;paramref name="index" /&gt;</ph> is greater than <ph id="ph2">&lt;see langword="Count" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="index" /&gt;</ph> が <ph id="ph2">&lt;see langword="Count" /&gt;</ph> より大きくなっています。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>The index of the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> のインデックス。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> at the specified index.</source>
          <target state="translated">指定されたインデックス位置にある <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Xml.Schema.XmlSchemaObjectCollection.Item(System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> at the specified index.</source>
          <target state="translated">指定されたインデックス位置にある <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
          <source><ph id="ph1">&lt;see langword="OnClear" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Clear" /&gt;</ph> behavior.</source>
          <target state="translated">標準の <ph id="ph1">&lt;see langword="OnClear" /&gt;</ph> 動作の前に、<ph id="ph2">&lt;see langword="Clear" /&gt;</ph> が呼び出されます。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnClear">
          <source>For more information, see OnClear method for <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> の OnClear メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> のインデックス。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>The item.</source>
          <target state="translated">項目。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Insert" /&gt;</ph> behavior.</source>
          <target state="translated">標準の <ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> 動作の前に、<ph id="ph2">&lt;see langword="Insert" /&gt;</ph> が呼び出されます。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnInsert(System.Int32,System.Object)">
          <source>For more information, see <ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> method <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> の <ph id="ph1">&lt;see langword="OnInsert" /&gt;</ph> メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> のインデックス。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>The item.</source>
          <target state="translated">項目。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Remove" /&gt;</ph> behavior.</source>
          <target state="translated">標準の <ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> 動作の前に、<ph id="ph2">&lt;see langword="Remove" /&gt;</ph> が呼び出されます。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnRemove(System.Int32,System.Object)">
          <source>For more information, see the <ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> method for <ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph2">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> の <ph id="ph1">&lt;see langword="OnRemove" /&gt;</ph> メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The index of <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> のインデックス。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The old value.</source>
          <target state="translated">古い値。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>The new value.</source>
          <target state="translated">新しい値。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source><ph id="ph1">&lt;see langword="OnSet" /&gt;</ph> is invoked before the standard <ph id="ph2">&lt;see langword="Set" /&gt;</ph> behavior.</source>
          <target state="translated">標準の <ph id="ph1">&lt;see langword="OnSet" /&gt;</ph> 動作の前に、<ph id="ph2">&lt;see langword="Set" /&gt;</ph> が呼び出されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.OnSet(System.Int32,System.Object,System.Object)">
          <source>For more information, see the OnSet method for <ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph>.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;see cref="T:System.Collections.CollectionBase" /&gt;</ph> の OnSet メソッドのトピックを参照してください。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> to remove.</source>
          <target state="translated">削除する <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>Removes an <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> from the <ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see langword="XmlSchemaObjectCollection" /&gt;</ph> から <ph id="ph1">&lt;see cref="T:System.Xml.Schema.XmlSchemaObject" /&gt;</ph> を削除します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>This method performs a linear search; therefore, the average execution time is proportional to <ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">このメソッドは、一方向の検索を実行します。したがって、平均実行時間に比例して<ph id="ph1">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>That is, this method is an O(<ph id="ph1">`n`</ph>) operation, where <ph id="ph2">`n`</ph> is <ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>.</source>
          <target state="translated">つまり、このメソッドは、O (<ph id="ph1">`n`</ph>) 操作、場所<ph id="ph2">`n`</ph>は<ph id="ph3">&lt;xref:System.Collections.CollectionBase.Count%2A&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>This method determines equality by calling <ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>.</source>
          <target state="translated">このメソッドを呼び出すことで等しいかどうかを判断<ph id="ph1">&lt;xref:System.Object.Equals%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Xml.Schema.XmlSchemaObjectCollection.Remove(System.Xml.Schema.XmlSchemaObject)">
          <source>The elements that follow the removed element move up to occupy the vacated spot.</source>
          <target state="translated">削除された要素の後続の要素は、空白になった場所に上に詰めて移動します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>