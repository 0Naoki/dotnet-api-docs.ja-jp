<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17f55c59f17b4264695f566b7e06f8e8c6188ed4" /><Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="10/04/2018" /><Meta Name="ms.locfileid" Value="48602986" /></Metadata><TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトが独自のシリアル化および逆シリアル化を制御できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアル化する可能性がある任意のクラスをマークする必要があります、<xref:System.SerializableAttribute>します。 実装できますが、シリアル化プロセスを制御するクラスが必要な場合、<xref:System.Runtime.Serialization.ISerializable>インターフェイス。 <xref:System.Runtime.Serialization.Formatter>呼び出し、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>シリアル化時に指定された設定と<xref:System.Runtime.Serialization.SerializationInfo>でオブジェクトを表すために必要なすべてのデータ。 <xref:System.Runtime.Serialization.Formatter>作成、<xref:System.Runtime.Serialization.SerializationInfo>グラフ内のオブジェクトの型を使用します。 オブジェクト自体を使用できるは、プロキシを送信する必要がある、<xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A>と<xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>メソッド<xref:System.Runtime.Serialization.SerializationInfo>送信される情報を変更します。  
  
 クラスの継承の場合を実装する基本クラスから派生したクラスをシリアル化可能な<xref:System.Runtime.Serialization.ISerializable>します。 この場合、派生クラスがの基本クラス実装を呼び出す必要があります<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>の実装内で<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>します。 それ以外の場合、基本クラスからのデータはシリアル化されません。  
  
 <xref:System.Runtime.Serialization.ISerializable>インターフェイスにコンス トラクター シグネチャのコンス トラクターを持つ (<xref:System.Runtime.Serialization.SerializationInfo>については、<xref:System.Runtime.Serialization.StreamingContext>コンテキスト)。 内のデータの後にのみ逆シリアル化時に、現在のコンス トラクターが呼び出されます、<xref:System.Runtime.Serialization.SerializationInfo>フォーマッタで逆シリアル化されています。 一般に、クラスがシールされていない場合は、このコンス トラクターを保護する必要があります。  
  
 オブジェクトが逆シリアル化順序を保証することはできません。 たとえば、1 つの型がない逆シリアル化されたまだする型を参照する場合、例外が発生します。 実装することで、問題を回避することがこのような依存関係のある型を作成する場合、`IDeserializationCallback`インターフェイスと`OnDeserialization`メソッド。  
  
 シリアル化アーキテクチャを拡張するオブジェクトの型を処理する<xref:System.MarshalByRefObject>を拡張する型と同じ<xref:System.Object>します。 これらの型をマークすることができます、<xref:System.SerializableAttribute>を実装し、<xref:System.Runtime.Serialization.ISerializable>インターフェイスとして他のオブジェクトの種類。 そのオブジェクトの状態はキャプチャされ、ストリームに永続化します。  
  
 これらの型がで使用されているときに<xref:System.Runtime.Remoting>、リモート処理インフラストラクチャは、一般的なシリアル化に横取りされを代わりにプロキシをシリアル化サロゲートを提供します。、 <xref:System.MarshalByRefObject>。 サロゲートとは、特定の種類のオブジェクトを逆シリアル化およびシリアル化する方法を認識するヘルパーです。 型のプロキシは、ほとんどの場合、ユーザーに非表示になります<xref:System.Runtime.Remoting.ObjRef>します。  
  
 一般的なデザイン パターンでは、としてできなくなるクラスがシリアル化可能な属性でマークする両方および拡張を通常<xref:System.MarshalByRefObject>します。 開発者は、これら 2 つの特性を結合するときにも、可能なシリアル化とリモート処理シナリオについて慎重に検討する必要があります。 例が場合がありますが、<xref:System.IO.MemoryStream>します。 基本クラスの中に<xref:System.IO.MemoryStream>(<xref:System.IO.Stream>) から拡張<xref:System.MarshalByRefObject>の状態をキャプチャすることは、<xref:System.IO.MemoryStream>はで復元することとします。 したがって、あるデータベースにこのストリームの状態をシリアル化して、時間の後で復元することを意味のある場合があります。 ただし、使用すると、リモート処理によるこの型のオブジェクトはプロキシのようになります。  
  
 拡張するクラスのシリアル化の詳細については<xref:System.MarshalByRefObject>を参照してください<xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>します。 実装の詳細については<xref:System.Runtime.Serialization.ISerializable>を参照してください[カスタム シリアル化](~/docs/standard/serialization/custom-serialization.md)します。  
  
   
  
## Examples  
 次のコード例は、の使用を示します、<xref:System.Runtime.Serialization.ISerializable>インターフェイス クラスのカスタムのシリアル化動作を定義します。  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>独自のシリアル化と逆シリアル化に参加するためにオブジェクトを許可するには、このインターフェイスを実装します。</para></block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML シリアル化および SOAP シリアル化</related>
    <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、対象のオブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 含まれているすべてのオブジェクト、<xref:System.Runtime.Serialization.SerializationInfo>自動的に追跡され、フォーマッタがシリアル化します。  
  
 呼び出すコード<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>が必要です、<xref:System.Security.Permissions.SecurityPermission>シリアル化サービスを提供します。 <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> (関連する列挙体)  
  
> [!NOTE]
>  このメソッドが呼び出されること 1 回だけオブジェクトのインスタンスごとのシリアル化中に限りません。 したがって、その動作はするが呼び出された回数に関係なく同じように、メソッドを実装する必要があります。  
  
   
  
## Examples  
 次の例では、<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>シリアル化されたオブジェクトの代替値を設定します。 コードを使用して、<xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A>のメソッド、<xref:System.Runtime.Serialization.SerializationInfo>オブジェクトがシリアル化する場合は、代替の値を格納するクラス。 逆のコンス トラクター、`Person`クラスが逆シリアル化中に呼び出されると、alternatve 値は、使用して取得、<xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>メソッドとオブジェクトのフィールドを再割り当ています。  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
      </Docs>
    </Member>
  </Members>
</Type>