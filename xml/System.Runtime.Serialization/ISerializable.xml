<Type Name="ISerializable" FullName="System.Runtime.Serialization.ISerializable">
  <Metadata><Meta Name="ms.openlocfilehash" Value="881dfbfc930238abb1faeec6652b9625fbc2a99a" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70492188" /></Metadata><TypeSignature Language="C#" Value="public interface ISerializable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract ISerializable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Serialization.ISerializable" />
  <TypeSignature Language="VB.NET" Value="Public Interface ISerializable" />
  <TypeSignature Language="C++ CLI" Value="public interface class ISerializable" />
  <TypeSignature Language="F#" Value="type ISerializable = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>オブジェクトが独自のシリアル化および逆シリアル化を制御できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 シリアル化される可能性のあるすべてのクラスは<xref:System.SerializableAttribute>、でマークされている必要があります。 クラスがシリアル化プロセスを制御する必要がある場合は、 <xref:System.Runtime.Serialization.ISerializable>インターフェイスを実装できます。 は<xref:System.Runtime.Serialization.Formatter> 、シリアル<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>化時にを呼び出し、指定<xref:System.Runtime.Serialization.SerializationInfo>されたに、オブジェクトを表すために必要なすべてのデータを設定します。 は<xref:System.Runtime.Serialization.Formatter> 、グラフ<xref:System.Runtime.Serialization.SerializationInfo>内のオブジェクトの型を使用して、を作成します。 プロキシを送信する必要があるオブジェクトは、で<xref:System.Runtime.Serialization.SerializationInfo.FullTypeName%2A> <xref:System.Runtime.Serialization.SerializationInfo>メソッド<xref:System.Runtime.Serialization.SerializationInfo.AssemblyName%2A>とメソッドを使用して、送信される情報を変更できます。  
  
 クラスの継承の場合、を実装<xref:System.Runtime.Serialization.ISerializable>する基本クラスから派生したクラスをシリアル化することができます。 この場合、派生クラスは、の<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> <xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>実装内での基底クラスの実装を呼び出す必要があります。 それ以外の場合、基本クラスのデータはシリアル化されません。  
  
 インターフェイス<xref:System.Runtime.Serialization.ISerializable>は、シグネチャコンストラクター (<xref:System.Runtime.Serialization.SerializationInfo>情報、 <xref:System.Runtime.Serialization.StreamingContext>コンテキスト) を持つコンストラクターを意味します。 逆シリアル化時には、の<xref:System.Runtime.Serialization.SerializationInfo>データがフォーマッタによって逆シリアル化された後にのみ、現在のコンストラクターが呼び出されます。 一般に、クラスがシールされていない場合は、このコンストラクターを保護する必要があります。  
  
 オブジェクトを逆シリアル化する順序を保証することはできません。 たとえば、ある型がまだ逆シリアル化されていない型を参照している場合、例外が発生します。 このような依存関係を持つ型を作成する場合は、 `IDeserializationCallback`インターフェイス`OnDeserialization`とメソッドを実装することで問題を回避できます。  
  
 シリアル化アーキテクチャは、を拡張<xref:System.MarshalByRefObject> <xref:System.Object>する型と同じを拡張するオブジェクト型を処理します。 これらの型は、 <xref:System.SerializableAttribute>でマークし、その他のオブジェクト型として<xref:System.Runtime.Serialization.ISerializable>インターフェイスを実装できます。 オブジェクトの状態がキャプチャされ、ストリームに保持されます。  
  
 これらの型がによって<xref:System.Runtime.Remoting>使用されている場合、リモート処理インフラストラクチャは、一般的なシリアル化をプリエンプション<xref:System.MarshalByRefObject>し、代わりにプロキシをにシリアル化するサロゲートを提供します。 サロゲートは、特定の型のオブジェクトをシリアル化および逆シリアル化する方法を認識するヘルパーです。 プロキシは、ほとんどの場合、ユーザーには表示されません<xref:System.Runtime.Remoting.ObjRef>が、型になります。  
  
 一般的な設計パターンとして、クラスが serializable 属性でマークされ、拡張<xref:System.MarshalByRefObject>されることは珍しくありません。 開発者は、これら2つの特性を組み合わせるときに、考えられるシリアル化とリモート処理のシナリオについて慎重に検討する必要があります これが適用される例としては<xref:System.IO.MemoryStream>、があります。 ( <xref:System.IO.MemoryStream> <xref:System.MarshalByRefObject> <xref:System.IO.MemoryStream> ) の基本クラスはから拡張されますが、の状態をキャプチャして、その時点で復元することができます。<xref:System.IO.Stream> このため、このストリームの状態をデータベースにシリアル化して、後で復元することは意味があるかもしれません。 ただし、リモート処理によって使用される場合、この型のオブジェクトはプロキシ化されます。  
  
 を拡張<xref:System.MarshalByRefObject>するクラスのシリアル化の詳細につい<xref:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector>ては、「」を参照してください。 の実装<xref:System.Runtime.Serialization.ISerializable>の詳細については、「[カスタムシリアル化](~/docs/standard/serialization/custom-serialization.md)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Runtime.Serialization.ISerializable>インターフェイスを使用して、クラスのカスタムシリアル化動作を定義する方法を示しています。  
  
 [!code-cpp[ISerializable Interface Example#1](~/samples/snippets/cpp/VS_Snippets_Remoting/ISerializable Interface Example/CPP/iobjectreference.cpp#1)]
 [!code-csharp[ISerializable Interface Example#1](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable Interface Example/CS/iobjectreference.cs#1)]
 [!code-vb[ISerializable Interface Example#1](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable Interface Example/VB/iobjectreference.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>オブジェクトが独自のシリアル化と逆シリアル化に参加できるようにするには、このインターフェイスを実装します。</para></block>
    <altmember cref="T:System.Runtime.Remoting.Messaging.RemotingSurrogateSelector" />
    <related type="Article" href="~/docs/standard/serialization/xml-and-soap-serialization.md">XML シリアル化および SOAP シリアル化</related>
    <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
  </Docs>
  <Members>
    <Member MemberName="GetObjectData">
      <MemberSignature Language="C#" Value="public void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GetObjectData(class System.Runtime.Serialization.SerializationInfo info, valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetObjectData (info As SerializationInfo, context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetObjectData(System::Runtime::Serialization::SerializationInfo ^ info, System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="abstract member GetObjectData : System.Runtime.Serialization.SerializationInfo * System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="iSerializable.GetObjectData (info, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Serialization.Formatters</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="info" Type="System.Runtime.Serialization.SerializationInfo" />
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="info">データの読み込み先となる <see cref="T:System.Runtime.Serialization.SerializationInfo" />。</param>
        <param name="context">このシリアル化のシリアル化先 (<see cref="T:System.Runtime.Serialization.StreamingContext" /> を参照)。</param>
        <summary><see cref="T:System.Runtime.Serialization.SerializationInfo" /> に、オブジェクトをシリアル化するために必要なデータを設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 に含ま<xref:System.Runtime.Serialization.SerializationInfo>れるすべてのオブジェクトは、フォーマッタによって自動的に追跡およびシリアル化されます。  
  
 を呼び出す<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A>コードでは<xref:System.Security.Permissions.SecurityPermission> 、シリアル化サービスを提供するためにが必要です。 <xref:System.Security.Permissions.SecurityPermissionFlag.SerializationFormatter?displayProperty=nameWithType> (関連する列挙体)  
  
> [!NOTE]
>  シリアル化中に、このメソッドがオブジェクトインスタンスごとに1回だけ呼び出されることは保証されていません。 したがって、メソッドは、呼び出された回数に関係なく、動作が同じになるように実装する必要があります。  
  
   
  
## Examples  
 次の例では<xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A> 、メソッドを使用して、シリアル化されたオブジェクトの代替値を設定します。 このコードでは<xref:System.Runtime.Serialization.SerializationInfo.AddValue%2A> 、オブジェクトが<xref:System.Runtime.Serialization.SerializationInfo>シリアル化されるときに、クラスのメソッドを使用して代替値を格納します。 逆に、逆シリアル化中`Person`にクラスのコンストラクターが呼び出されると、alternatve 値は<xref:System.Runtime.Serialization.SerializationInfo.GetValue%2A>メソッドを使用して取得され、オブジェクトのフィールドに再割り当てされます。  
  
 [!code-csharp[ISerializable_GetObjectData#0](~/samples/snippets/csharp/VS_Snippets_Remoting/ISerializable_GetObjectData/cs/ISerializable_GetObjectData.cs#0)]
 [!code-vb[ISerializable_GetObjectData#0](~/samples/snippets/visualbasic/VS_Snippets_Remoting/ISerializable_GetObjectData/vb/ISerializable_GetObjectData.vb#0)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Security.SecurityException">呼び出し元に、必要なアクセス許可がありません。</exception>
        <altmember cref="T:System.Runtime.Serialization.StreamingContext" />
        <altmember cref="T:System.Runtime.Serialization.SerializationInfo" />
        <related type="Article" href="~/docs/standard/serialization/custom-serialization.md">カスタムのシリアル化</related>
      </Docs>
    </Member>
  </Members>
</Type>
