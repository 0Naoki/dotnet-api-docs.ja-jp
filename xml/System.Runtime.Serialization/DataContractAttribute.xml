<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="DataContractAttribute.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f9381053a785b7c23121ec86b709cd483651a437a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">9381053a785b7c23121ec86b709cd483651a437a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Specifies that the type defines or implements a data contract and is serializable by a serializer, such as the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph>.</source>
          <target state="translated">この型が、データ コントラクトを定義または実装し、<ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractSerializer" /&gt;</ph> などのシリアライザーによってシリアル化可能であることを指定します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To make their type serializable, type authors must define a data contract for their type.</source>
          <target state="translated">型をシリアル化可能にするには、型作成者が、型のデータ コントラクトを定義する必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> attribute to types (classes, structures, or enumerations) that are used in serialization and deserialization operations by the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> によるシリアル化および逆シリアル化操作で使用される型 (クラス、構造体、または列挙) に対して、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> 属性を適用します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you send or receive messages by using the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> infrastructure, you should also apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to any classes that hold and manipulate data sent in messages.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> インフラストラクチャを使用してメッセージを送信または受信する場合は、メッセージで送信されるデータを保持および操作するクラスにも <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> を適用します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> データ コントラクトを参照してください<bpt id="p1">[</bpt>を使用してデータ コントラクト<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You must also apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any field, property, or event that holds values you want to serialize.</source>
          <target state="translated">シリアル化する値を保持するフィールド、プロパティ、またはイベントにも、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> を適用する必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>, you explicitly enable the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to serialize and deserialize the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> の適用によって、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> によるデータのシリアル化と逆シリアル化を明示的に有効にします。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to private fields.</source>
          <target state="translated">プライベートなフィールドに対して <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> を適用できます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Be aware that the data returned by the field (even if it is private) is serialized and deserialized, and thus can be viewed or intercepted by a malicious user or process.</source>
          <target state="translated">フィールドによって返されるデータは (プライベートであっても) シリアル化と逆シリアル化の対象となるため、悪意のあるユーザーやプロセスによって傍受される可能性があることに注意してください。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> data contracts, see the topics listed in <bpt id="p1">[</bpt>Using Data Contracts<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> データ コントラクトの各トピックを参照してください<bpt id="p1">[</bpt>を使用してデータ コントラクト<ept id="p1">](~/docs/framework/wcf/feature-details/using-data-contracts.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Data Contracts</source>
          <target state="translated">データ コントラクト</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A <bpt id="p1">*</bpt>data contract<ept id="p1">*</ept> is an abstract description of a set of fields with a name and data type for each field.</source>
          <target state="translated">A<bpt id="p1">*</bpt>データ コントラクト<ept id="p1">*</ept>は、各フィールドの名前とデータ型の一連のフィールドの概要です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The data contract exists outside of any single implementation to allow services on different platforms to interoperate.</source>
          <target state="translated">データ コントラクトは、単一の実装の外部に存在することで、異なるプラットフォームでのサービスの相互運用を可能にします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>As long as the data passed between the services conforms to the same contract, all the services can process the data.</source>
          <target state="translated">サービス間で渡されるデータが同一のコントラクトに準拠している限り、すべてのサービスがそのデータを処理できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>This processing is also known as a <bpt id="p1">*</bpt>loosely coupled system<ept id="p1">*</ept>.</source>
          <target state="translated">この処理とも呼ばれる、<bpt id="p1">*</bpt>疎結合システム<ept id="p1">*</ept>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract is also similar to an interface in that the contract specifies how data must be delivered so that it can be processed by an application.</source>
          <target state="translated">データ コントラクトは、アプリケーションによる処理が可能なようにデータを伝送する方法を指定するという点でインターフェイスに似ています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For example, the data contract may call for a data type named "Person" that has two text fields, named "FirstName" and "LastName".</source>
          <target state="translated">たとえば、"FirstName" と "LastName" という 2 つのテキスト フィールドがある "Person" という名前のデータ型をデータ コントラクトで呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To create a data contract, apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to the class and apply the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to any fields or properties that must be serialized.</source>
          <target state="translated">データ コントラクトを作成するには、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> をクラスに適用し、シリアル化する必要がある任意のフィールドまたはプロパティに <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> を適用します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When serialized, the data conforms to the data contract that is implicitly built into the type.</source>
          <target state="translated">データがシリアル化されるときに、データは、型に暗黙的に組み込まれたデータ コントラクトに従って処理されます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract differs significantly from an actual interface in its inheritance behavior.</source>
          <target state="translated">データ コントラクトは、継承動作の点で、実際のインターフェイスとは大きく異なります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Interfaces are inherited by any derived types.</source>
          <target state="translated">インターフェイスは、任意の派生する型によって継承されます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a base class, the derived types do not inherit the attribute or the behavior.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> を基本クラスに適用しても、派生する型は、属性も動作も継承しません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, if a derived type has a data contract, the data members of the base class are serialized.</source>
          <target state="translated">ただし、派生する型にデータ コントラクトがある場合、基本クラスのデータ メンバーはシリアル化されます。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>However, you must apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> to new members in a derived class to make them serializable.</source>
          <target state="translated">しかし、派生クラスの新しいメンバーをシリアル化可能にするには、新しいメンバーに対して <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataMemberAttribute&gt;</ph> を適用する必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>XML Schema Documents and the SvcUtil Tool</source>
          <target state="translated">XML スキーマ ドキュメントと SvcUtil ツール</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you are exchanging data with other services, you must describe the data contract.</source>
          <target state="translated">他のサービスとデータを交換する場合は、データ コントラクトを記述する必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>For the current version of the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph>, an XML schema can be used to define data contracts.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> の現在のバージョンでは、XML スキーマを使用してデータ コントラクトを定義できます </target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>(Other forms of metadata/description could be used for the same purpose.) To create an XML schema from your application, use the <bpt id="p1">[</bpt>ServiceModel Metadata Utility Tool (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept> with the <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept> command line option.</source>
          <target state="translated">(同じ目的で、メタデータまたは記述形式を使用できます)。アプリケーションから XML スキーマを作成するには、使用、 <bpt id="p1">[</bpt>ServiceModel メタデータ ユーティリティ ツール (Svcutil.exe)<ept id="p1">](~/docs/framework/wcf/servicemodel-metadata-utility-tool-svcutil-exe.md)</ept>で、 <bpt id="p2">**</bpt>/dconly<ept id="p2">**</ept>コマンド ライン オプションです。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>When the input to the tool is an assembly, by default, the tool generates a set of XML schemas that define all the data contract types found in that assembly.</source>
          <target state="translated">ツールへの入力が既定ではアセンブリの場合、ツーは、そのアセンブリで検出されたすべてのデータ コントラクトの型を定義する XML スキーマ セットを生成します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Conversely, you can also use the Svcutil.exe tool to create Visual Basic or C# class definitions that conform to the requirements of XML schemas that use constructs that can be expressed by data contracts.</source>
          <target state="translated">逆に、Svcutil.exe ツールは、データ コントラクトによって表現できる構造体を使用する XML スキーマの要件に適合する Visual Basic または C# クラスの定義を作成するために使用することもできます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In this case, the <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept> command line option is not required.</source>
          <target state="translated">ここで、 <bpt id="p1">**</bpt>/dconly<ept id="p1">**</ept>コマンド ライン オプションは必要ありません。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If the input to the Svcutil.exe tool is an XML schema, by default, the tool creates a set of classes.</source>
          <target state="translated">Svcutil.exe ツールへの入力が既定では XML スキーマの場合、ツールは、クラスのセットを作成します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>If you examine those classes, you find that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated">これらのクラスを確認すれば、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> が適用されていることがわかります。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can use those classes to create a new application to process data that must be exchanged with other services.</source>
          <target state="translated">これらのクラスを使用して、他のサービスと交換する必要があるデータを処理するための新しいアプリケーションを作成できます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also run the tool against an endpoint that returns a Web Services Description Language (WSDL) document to automatically generate the code and configuration to create an <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> client.</source>
          <target state="translated">さらに、Web サービス記述言語 (WSDL) ドキュメントを返すエンドポイントに対してこのツールを実行することで、<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> クライアントを作成するコードと構成を自動的に生成できます。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The generated code includes types that are marked with the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">生成されたコードには、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> でマークされた型が含まれます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Reusing Existing Types</source>
          <target state="translated">既存の型の再利用</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract has two basic requirements: a stable name and a list of members.</source>
          <target state="translated">データ コントラクトには、安定名とメンバー リストという 2 つの基本的な要件があります。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The stable name consists of the namespace uniform resource identifier (URI) and the local name of the contract.</source>
          <target state="translated">安定名は、名前空間の URI (uniform resource identifier) とコントラクトのローカル名で構成されます。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By default, when you apply the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> to a class, it uses the class name as the local name and the class's namespace (prefixed with "<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") as the namespace URI.</source>
          <target state="translated">既定では、適用するときに、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>クラスにローカルの名前と、クラスの名前空間とクラス名を使用 (付いて"<ph id="ph2">http://schemas.datacontract.org/2004/07/</ph>") として名前空間 URI。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can override the defaults by setting the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> properties.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> プロパティを設定することで、これらの既定値をオーバーライドできます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>You can also change the namespace by applying the <ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> to the namespace.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.ContractNamespaceAttribute&gt;</ph> を名前空間に適用することで、名前空間を変更することもできます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Use this capability when you have an existing type that processes data exactly as you require but has a different namespace and class name from the data contract.</source>
          <target state="translated">この機能は、目的どおりにデータを処理する既存の型が存在するが、データ コントラクトの名前空間とクラス名が異なる場合に使用します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>By overriding the default values, you can reuse your existing type and have the serialized data conform to the data contract.</source>
          <target state="translated">既定値をオーバーライドすることで、既存の型を再利用しながら、シリアル化するデータをデータ コントラクトに準拠させることができます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>In any code, you can use the word <ph id="ph1">`DataContract`</ph> instead of the longer <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph>.</source>
          <target state="translated">コードでは、<ph id="ph1">`DataContract`</ph> の代わりに <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> という短い語を使用できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Versioning</source>
          <target state="translated">バージョン管理</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>A data contract can also accommodate later versions of itself.</source>
          <target state="translated">データ コントラクトは、それ自体の新しいバージョンに対応できます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>That is, when a later version of the contract includes extra data, that data is stored and returned to a sender untouched.</source>
          <target state="translated">つまり、コントラクトの次のバージョンに追加データが含まれている場合、そのデータは保存され、送信側にそのまま返送されます。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>To do this, implement the <ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> interface.</source>
          <target state="translated">これを行うには、<ph id="ph1">&lt;xref:System.Runtime.Serialization.IExtensibleDataObject&gt;</ph> インターフェイスを実装します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> versioning, see <bpt id="p1">[</bpt>Data Contract Versioning<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[crabout](~/includes/crabout-md.md)]</ph> バージョン管理を参照してください<bpt id="p1">[</bpt>データ コントラクトのバージョン管理<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-versioning.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>The following example serializes and deserializes a class named <ph id="ph1">`Person`</ph> to which the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> has been applied.</source>
          <target state="translated"><ph id="ph1">`Person`</ph> が適用された <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> という名前のクラスをシリアル化および逆シリアル化する例を次に示します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Runtime.Serialization.DataContractAttribute">
          <source>Note that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> properties have been set to values that override the default settings.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> プロパティと <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> プロパティに、既定の設定をオーバーライドするための値が設定されていることに注意してください。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Runtime.Serialization.DataContractAttribute.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Runtime.Serialization.DataContractAttribute" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Name" /&gt;</ph> が明示的に設定されているかどうかを取得します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNameSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the name has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">返します<ph id="ph1">&lt;see langword="true" /&gt;</ph>明示的に設定されて、それ以外の名前が表示された場合に<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.Namespace" /&gt;</ph> が明示的に設定されているかどうかを取得します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsNamespaceSetExplicitly">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the namespace has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">返します<ph id="ph1">&lt;see langword="true" /&gt;</ph>明示的に設定されて、それ以外の名前空間があった場合<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Gets or sets a value that indicates whether to preserve object reference data.</source>
          <target state="translated">オブジェクト参照データを保持するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> to keep object reference data using standard XML; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">標準 XML を使用してオブジェクト参照データを保持する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReference">
          <source>Use the <ph id="ph1">`IsReference`</ph> property to instruct the <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> to insert XML constructs that preserve object reference information.</source>
          <target state="translated"><ph id="ph1">`IsReference`</ph> プロパティを使用して、<ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> に、オブジェクト参照情報を保持する XML コンストラクトの挿入を指示します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source>Gets whether <ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> has been explicitly set.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="P:System.Runtime.Serialization.DataContractAttribute.IsReference" /&gt;</ph> が明示的に設定されているかどうかを取得します。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.IsReferenceSetExplicitly">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the reference has been explicitly set; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 参照が明示的に設定されている場合それ以外の場合、<ph id="ph2">&lt;see langword="false" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>Gets or sets the name of the data contract for the type.</source>
          <target state="translated">型のデータ コントラクトの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The local name of a data contract.</source>
          <target state="translated">データ コントラクトのローカル名。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The default is the name of the class that the attribute is applied to.</source>
          <target state="translated">既定値は、この属性が適用されるクラスの名前です。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property is used to give a name to a data contract, which is the name of the type in XML schema.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> プロパティを使用して、データ コントラクトに名前を割り当てます。この名前は、XML スキーマ内の型の名前にもなります。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For more information, see <bpt id="p1">[</bpt>Data Contract Names<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>データ コントラクト名<ept id="p1">](~/docs/framework/wcf/feature-details/data-contract-names.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>By default, the name of a data contract is the name of the type that the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> is applied to.</source>
          <target state="translated">既定では、データ コントラクトの名前は、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute&gt;</ph> が適用される型の名前になります。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>However, there may be reasons to change this default name.</source>
          <target state="translated">ただし、理由によっては、この既定の名前を変更することができます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>One reason is to allow an existing type to process data that must conform to an existing data contract.</source>
          <target state="translated">1 つ目の理由は、既存のデータ コントラクトに準拠させる必要があるデータを既存の型で処理できるようにすることです。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, there exists a type named <ph id="ph1">`Person`</ph> but the data contract, embodied in an XML schema, requires that the name be <ph id="ph2">`Customer`</ph>.</source>
          <target state="translated">たとえば、<ph id="ph1">`Person`</ph> という名前の型が存在するが、XML スキーマのデータ コントラクトでは、その型が <ph id="ph2">`Customer`</ph> という名前でなければならないとします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>The contract can be satisfied by setting the property value to <ph id="ph1">`Customer`</ph>.</source>
          <target state="translated">この場合、プロパティ値を <ph id="ph1">`Customer`</ph> に設定することで、コントラクトを活用できます。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>A second reason is to allow the generation of names that are invalid as type names.</source>
          <target state="translated">2 つ目の理由は、型名としては無効な名前を生成できるようにすることです。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For example, if a data contract demands a name that is not allowable as a type name, set the property value to that disallowed name.</source>
          <target state="translated">たとえば、データ コントラクトで、型名としては許されない名前が必要な場合は、プロパティ値をその許されない名前に設定します。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Name">
          <source>For instance, the string "$value" is disallowed as a type name but is allowed as a <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> property value.</source>
          <target state="translated">たとえば、文字列 "$value" は型名としては使用できませんが、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Name%2A&gt;</ph> プロパティの値としては設定できます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Gets or sets the namespace for the data contract for the type.</source>
          <target state="translated">型のデータ コントラクトの名前空間を取得または設定します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The namespace of the contract.</source>
          <target state="translated">コントラクトの名前空間。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Use this property to specify a particular namespace if your type must return data that complies with a specific data contract.</source>
          <target state="translated">型で特定のデータ コントラクトに準拠するデータを返す必要がある場合は、このプロパティを使用して特定の名前空間を指定します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>For the data to be successfully transmitted, the name of the data in a data contract must be the same in both the client and the server.</source>
          <target state="translated">データを正常に送信するには、クライアントとサーバーの両方でデータ コントラクト内のデータの名前が同じでなければなりません。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Visual Basic projects, by default, add a prefix to the namespace defined in each file (called the "root namespace," named after the project).</source>
          <target state="translated">Visual Basic プロジェクトの場合は、既定では、プレフィックスを追加 (「ルート名前空間、」プロジェクトにちなんだ名前と呼ばれます) の各ファイルで定義されている名前空間。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>Adding this prefix causes the client and server namespaces to be different for the same type.</source>
          <target state="translated">このプレフィックスを追加すると、クライアントとサーバーの名前空間は同じ型の別々の名前空間になります。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Runtime.Serialization.DataContractAttribute.Namespace">
          <source>The solution is to set the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph> property to "", or to explicitly set the data contract namespace in this property.</source>
          <target state="translated">解決を設定するには、<ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractAttribute.Namespace%2A&gt;</ph>プロパティを""、またはこのプロパティでデータ コントラクト名前空間を明示的に設定します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>