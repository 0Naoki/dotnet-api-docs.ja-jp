<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="e8218-101">複合型の基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="e8218-101">Base class for complex types.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8218-102"><xref:System.Data.Objects.DataClasses.ComplexObject> 複合型の基本機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="e8218-102"><xref:System.Data.Objects.DataClasses.ComplexObject> implements the basic functionality for complex types.</span></span> <span data-ttu-id="e8218-103">詳細については、次を参照してください。[複合型オブジェクト](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)です。</span><span class="sxs-lookup"><span data-stu-id="e8218-103">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
 <span data-ttu-id="e8218-104">概念モデルでカスタム データ クラスを実装したときをお勧め複合型を表すデータ クラスが継承<xref:System.Data.Objects.DataClasses.ComplexObject>です。</span><span class="sxs-lookup"><span data-stu-id="e8218-104">When implementing custom data classes with a conceptual model, we recommend that your data classes that represent complex types inherit from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span> <span data-ttu-id="e8218-105">詳細については、次を参照してください。[オブジェクトのカスタマイズ](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)です。</span><span class="sxs-lookup"><span data-stu-id="e8218-105">For more information, see [Customizing Objects](http://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921).</span></span>  
  
 <span data-ttu-id="e8218-106">複合型は、エンティティ型または別の複合型のプロパティにすることができます。</span><span class="sxs-lookup"><span data-stu-id="e8218-106">A complex type can be a property of an entity type or of another complex type.</span></span>  
  
 <span data-ttu-id="e8218-107">複合型は、エンティティ型の非スカラー プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="e8218-107">Complex types are returned by non-scalar properties of entity types.</span></span> <span data-ttu-id="e8218-108">これにより、スカラー プロパティをエンティティ内で整理することができます。</span><span class="sxs-lookup"><span data-stu-id="e8218-108">This enables scalar properties to be organized within entities.</span></span> <span data-ttu-id="e8218-109">エンティティと同様に、複合型はスカラー プロパティまたは他の複合型プロパティで構成されています。</span><span class="sxs-lookup"><span data-stu-id="e8218-109">Like entities, complex types consist of scalar properties or other complex type properties.</span></span> <span data-ttu-id="e8218-110">複合型は、関連付けられたエンティティ型がなければ使用できません。</span><span class="sxs-lookup"><span data-stu-id="e8218-110">A complex type cannot be used without an associated entity type.</span></span> <span data-ttu-id="e8218-111">複合型には、キーがない、ために、関連付けられているエンティティ型を持たない複合型のオブジェクトを管理することはできません。</span><span class="sxs-lookup"><span data-stu-id="e8218-111">Because complex types do not have keys, complex type objects cannot be managed without an associated entity type.</span></span> <span data-ttu-id="e8218-112">詳細については、次を参照してください。[複合型オブジェクト](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)です。</span><span class="sxs-lookup"><span data-stu-id="e8218-112">For more information, see [Complex Type Objects](http://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e8218-113">次の例では、カスタム データ クラス`OrderInfo`から継承<xref:System.Data.Objects.DataClasses.ComplexObject>にマップし、`OrderInfo`概念モデルで定義されている複合型。</span><span class="sxs-lookup"><span data-stu-id="e8218-113">In the following example, the custom data class `OrderInfo` inherits from <xref:System.Data.Objects.DataClasses.ComplexObject> and is mapped to the `OrderInfo` complex type defined in the conceptual model.</span></span>  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e8218-114">
          <see cref="T:System.Data.Objects.DataClasses.ComplexObject" /> のインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="e8218-114">Creates an instance of <see cref="T:System.Data.Objects.DataClasses.ComplexObject" />.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="e8218-115">変更されたプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="e8218-115">The name of the changed property.</span></span></param>
        <summary><span data-ttu-id="e8218-116">複合オブジェクトのプロパティが変更されたことを変更トラッカーに通知します。</span><span class="sxs-lookup"><span data-stu-id="e8218-116">Notifies the change tracker that a property of a complex object has changed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8218-117">Entity Data Model ツールによって複合型が生成された場合、プロパティの変更後に <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> メソッドが呼び出され、キャッシュされている値がプロパティの元の値として <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> でコミットされます。</span><span class="sxs-lookup"><span data-stu-id="e8218-117">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> method is called after a property change to commit the cached value in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> as the original value of the property.</span></span>  
  
 <span data-ttu-id="e8218-118">このメソッドは、変更トラッカーの <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e8218-118">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="e8218-119">カスタム複合オブジェクトのプロパティに対する変更を追跡する場合は、<xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e8218-119">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A>.</span></span> <span data-ttu-id="e8218-120">これは、複合オブジェクトを <xref:System.Data.Objects.DataClasses.ComplexObject> から継承している場合に実行します。</span><span class="sxs-lookup"><span data-stu-id="e8218-120">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8218-121"><paramref name="property" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e8218-121"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property"><span data-ttu-id="e8218-122">変更されるプロパティの名前。</span><span class="sxs-lookup"><span data-stu-id="e8218-122">The name of the changing property.</span></span></param>
        <summary><span data-ttu-id="e8218-123">プロパティの変更が複合オブジェクトで保留中であることを変更トラッカーに通知します。</span><span class="sxs-lookup"><span data-stu-id="e8218-123">Notifies the change tracker that a property change is pending on a complex object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e8218-124">Entity Data Model ツールによって複合型が生成された場合、プロパティの変更前に <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> メソッドが呼び出され、プロパティの元の値として使用できるようにプロパティの現在の値が <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> でキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="e8218-124">When a complex type is generated by the Entity Data Model tools, the <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> method is called before a property change to cache the current value of the property in the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> so that this value can be used as the original value for the property.</span></span>  
  
 <span data-ttu-id="e8218-125">このメソッドは、変更トラッカーの <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="e8218-125">This method calls the <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> method in the change tracker.</span></span>  
  
 <span data-ttu-id="e8218-126">カスタム複合オブジェクトのプロパティに対する変更を追跡する場合は、<xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> を呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="e8218-126">When tracking changes that are made to the property of a custom complex object, you must call <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A>.</span></span> <span data-ttu-id="e8218-127">これは、複合オブジェクトを <xref:System.Data.Objects.DataClasses.ComplexObject> から継承している場合に実行します。</span><span class="sxs-lookup"><span data-stu-id="e8218-127">Do this when the complex object inherits from <xref:System.Data.Objects.DataClasses.ComplexObject>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="e8218-128"><paramref name="property" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="e8218-128"><paramref name="property" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>