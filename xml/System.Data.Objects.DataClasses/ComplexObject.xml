<Type Name="ComplexObject" FullName="System.Data.Objects.DataClasses.ComplexObject">
  <Metadata><Meta Name="ms.openlocfilehash" Value="2eb447f2f63842a5a6df793e2457e6817294a384" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55309827" /></Metadata><TypeSignature Language="C#" Value="public abstract class ComplexObject : System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit ComplexObject extends System.Data.Objects.DataClasses.StructuralObject" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.ComplexObject" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ComplexObject&#xA;Inherits StructuralObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ComplexObject abstract : System::Data::Objects::DataClasses::StructuralObject" />
  <TypeSignature Language="F#" Value="type ComplexObject = class&#xA;    inherit StructuralObject" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.StructuralObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.Serialization.DataContract(IsReference=true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>複合型の基本クラスです。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.DataClasses.ComplexObject> 複合型の基本的な機能を実装します。 詳細については、次を参照してください。[複合型オブジェクト](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)します。  
  
 複合型を表すデータ クラスが継承することをお勧め、概念モデルでカスタム データ クラスを実装するときに<xref:System.Data.Objects.DataClasses.ComplexObject>します。 詳細については、次を参照してください。[オブジェクトのカスタマイズ](https://msdn.microsoft.com/library/af6f07ce-2261-4c65-87cf-d018ad082921)します。  
  
 複合型は、エンティティ型または別の複合型のプロパティにすることができます。  
  
 複合型は、エンティティ型の非スカラー プロパティによって返されます。 これにより、スカラー プロパティをエンティティ内で整理することができます。 エンティティと同様に、複合型はスカラー プロパティまたは他の複合型プロパティで構成されています。 複合型は、関連付けられたエンティティ型がなければ使用できません。 複合型はキーがあるないため、関連付けられているエンティティ型を持たない複合型オブジェクトを管理できません。 詳細については、次を参照してください。[複合型オブジェクト](https://msdn.microsoft.com/library/34d5c570-a891-42b8-80ae-20e96eedc3af)します。  
  
   
  
## Examples  
 次の例では、カスタム データ クラスで`OrderInfo`から継承<xref:System.Data.Objects.DataClasses.ComplexObject>にマップし、`OrderInfo`概念モデルで定義されている複合型。  
  
 [!code-csharp[DP EntityObject Concepts#EntityObject](~/samples/snippets/csharp/VS_Snippets_Data/DP EntityObject Concepts/CS/SalesObjects.cs#entityobject)]
 [!code-vb[DP EntityObject Concepts#EntityObject](~/samples/snippets/visualbasic/VS_Snippets_Data/DP EntityObject Concepts/VB/SalesObjects.vb#entityobject)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="~/docs/framework/data/adonet/ef/how-to-execute-a-query-that-returns-complex-types.md">方法: 複合型 (EntityClient) を返すクエリを実行します。</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b13b24d5-05d1-4746-b0d2-5472796240c6(v=vs.90)">方法: 複合型 (Entity Framework) を使用してモデルを定義します。</related>
    <related type="Article" href="https://msdn.microsoft.com/library/525ffa1c-524e-40bd-bb80-2929aec8c8d8(v=vs.90)">How to: Add and Modify Objects with Complex Types (Entity Framework) (方法: 複合型でオブジェクトを追加および変更する (Entity Framework))</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ComplexObject ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ComplexObject();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Objects.DataClasses.ComplexObject" /> のインスタンスを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanged">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanged (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanged(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanged (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanged(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanged : string -&gt; unit" Usage="complexObject.ReportPropertyChanged property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">変更されたプロパティの名前。</param>
        <summary>複合オブジェクトのプロパティが変更されたことを変更トラッカーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entity Data Model ツールによって複合型が生成された場合、プロパティの変更後に <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> メソッドが呼び出され、キャッシュされている値がプロパティの元の値として <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> でコミットされます。  
  
 このメソッドは、変更トラッカーの <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanged%2A> メソッドを呼び出します。  
  
 カスタム複合オブジェクトのプロパティに対する変更を追跡する場合は、<xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanged%2A> を呼び出す必要があります。 これは、複合オブジェクトを <xref:System.Data.Objects.DataClasses.ComplexObject> から継承している場合に実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
    <Member MemberName="ReportPropertyChanging">
      <MemberSignature Language="C#" Value="protected override sealed void ReportPropertyChanging (string property);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ReportPropertyChanging(string property) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides NotOverridable Sub ReportPropertyChanging (property As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ReportPropertyChanging(System::String ^ property);" />
      <MemberSignature Language="F#" Value="override this.ReportPropertyChanging : string -&gt; unit" Usage="complexObject.ReportPropertyChanging property" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="property" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="property">変更されるプロパティの名前。</param>
        <summary>プロパティの変更が複合オブジェクトで保留中であることを変更トラッカーに通知します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Entity Data Model ツールによって複合型が生成された場合、プロパティの変更前に <xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> メソッドが呼び出され、プロパティの元の値として使用できるようにプロパティの現在の値が <xref:System.Data.Objects.DataClasses.IEntityChangeTracker> でキャッシュされます。  
  
 このメソッドは、変更トラッカーの <xref:System.Data.Objects.DataClasses.IEntityChangeTracker.EntityComplexMemberChanging%2A> メソッドを呼び出します。  
  
 カスタム複合オブジェクトのプロパティに対する変更を追跡する場合は、<xref:System.Data.Objects.DataClasses.ComplexObject.ReportPropertyChanging%2A> を呼び出す必要があります。 これは、複合オブジェクトを <xref:System.Data.Objects.DataClasses.ComplexObject> から継承している場合に実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="property" /> は <see langword="null" />です。</exception>
      </Docs>
    </Member>
  </Members>
</Type>