<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="EntityCollection`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b574b777b4ff63fbe3458359610b6cadef1f8e44.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b574b777b4ff63fbe3458359610b6cadef1f8e44</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>The entity type of the collection.</source>
          <target state="translated">コレクションのエンティティ型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Represents a collection of objects on the "many" end of a relationship.</source>
          <target state="translated">リレーションシップの "多" の側のオブジェクトのコレクションを表します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is a collection of objects of a particular entity type that represents the "many" end of a one-to-many or many-to-many relationship.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> は、一対多または多対多のリレーションシップの "多" の側を表す特定のエンティティ型のオブジェクトのコレクションです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is returned by a navigation property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> はナビゲーション プロパティによって返されます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Use the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method to load related objects into an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> に関連オブジェクトを読み込むには、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To store an unrelated collection of objects of a specific entity type, such as the result of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, use an instance of the <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> class.</source>
          <target state="translated">特定のエンティティ型の、関連のないオブジェクトのコレクション (<ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> の結果など) を格納するには、<ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> クラスのインスタンスを使用します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>An <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> might have a corresponding <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> には、対応する <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> がある場合があります。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>When an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> model opposite ends of the same relationship, the integrity of the relationship is maintained at the object level.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> と <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> が同じリレーションシップの両端をモデル化している場合は、そのリレーションシップの整合性がオブジェクト レベルで維持されて、</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>The two classes are synchronized automatically.</source>
          <target state="translated">その 2 つのクラスが自動的に同期されます。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>This example does the following:</source>
          <target state="translated">この例の内容は次のとおりです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities and adds them to the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">2 つの新しい <ph id="ph1">`SalesOrderHeader`</ph> エンティティを作成して <ph id="ph2">`Contact`</ph> エンティティに追加します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Gets all related ends from the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> that is associated with the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> エンティティに関連付けられている <ph id="ph2">`Contact`</ph> からすべての関連 End を取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Iterates through the collection of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>s.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph> のコレクションを反復処理します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> for each related end.</source>
          <target state="translated">各関連 End の <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> メソッドを使用して、コレクションからエンティティを 1 つ削除します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Calls the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> メソッドを呼び出して、そのオブジェクトがコレクションから削除されたかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the entity back.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドを使用して、削除したエンティティを再び追加します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>This public constructor for <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> is intended to be used by Object Services when deserializing object graphs.</source>
          <target state="translated">この <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> のパブリック コンストラクターは、Object Services がオブジェクト グラフをシリアル化解除するときに使用するものです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>You should access an instance of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from a navigation property instead of using this constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> のインスタンスにアクセスするには、このコンストラクターではなくナビゲーション プロパティを使用してください。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor">
          <source>To store an unrelated collection of objects of a specific entity type, such as the result of an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph>, use an instance of <ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph>.</source>
          <target state="translated">特定のエンティティ型の、関連のないオブジェクトのコレクション (<ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> の結果など) を格納するには、<ph id="ph2">&lt;xref:System.Collections.Generic.List%601&gt;</ph> のインスタンスを使用します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>An object to add to the collection.</source>
          <target state="translated">コレクションに追加するオブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>entity<ept id="p1">&lt;/c&gt;</ept> must implement <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>entity<ept id="p1">&lt;/c&gt;</ept> は <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" /&gt;</ph> を実装する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>Adds an object to the collection.</source>
          <target state="translated">コレクションにオブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method adds an object to an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and creates a relationship between the two objects.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドは、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> にオブジェクトを追加して、2 つのオブジェクト間のリレーションシップを作成します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>When the source object is attached to an <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> instance, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method also adds the object to the <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">ソース オブジェクトが <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> インスタンスにアタッチされている場合、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドは <ph id="ph3">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> にもオブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This operation is translated into an insert operation in the data source when <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> is called.</source>
          <target state="translated">この操作は、<ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.SaveChanges%2A&gt;</ph> が呼び出されるとデータ ソースの挿入操作に変換されます。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Creating, Adding, Modifying, and Deleting Objects<ept id="p1">](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>の作成、追加、変更、およびオブジェクトの削除<ept id="p1">](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)</ept>です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method can be called multiple times on the same object instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドは、同じオブジェクト インスタンスで複数回呼び出すことができます。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source>This example creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities, adds them to the <ph id="ph2">`Contact`</ph> entity, and, after removing an object, uses the <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the object back to the collection.</source>
          <target state="translated">この例では、2 つの新しい <ph id="ph1">`SalesOrderHeader`</ph> エンティティを作成し、それらを <ph id="ph2">`Contact`</ph> エンティティに追加します。次に、オブジェクトを 1 つ削除し、<ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドを使用して、削除したオブジェクトを再びコレクションに追加します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)">
          <source><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.Data.Objects.DataClasses.EntityCollection`1">
          <source>Defines a relationship between two attached objects in an object context.</source>
          <target state="translated">オブジェクト コンテキスト内の 2 つのアタッチ済みオブジェクトの間のリレーションシップを定義します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Collection of objects in the object context that are related to the source object.</source>
          <target state="translated">ソース オブジェクトに関連付けられているオブジェクト コンテキスト内のオブジェクトのコレクション。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Defines relationships between an object and a collection of related objects in an object context.</source>
          <target state="translated">オブジェクトと、オブジェクト コンテキスト内の関連オブジェクトのコレクションとのリレーションシップを定義します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method is used to define relationships between an object and a collection of related objects when both the source object and the collection of related objects already exist in the object context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> メソッドは、ソース オブジェクトと関連オブジェクトのコレクションの両方が既にオブジェクト コンテキストに存在する場合にそれらの間のリレーションシップを定義するために使用されます。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>To attach an object or an object graph where the relationships are already defined, call the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">オブジェクトや、リレーションシップが既に定義されているオブジェクト グラフをアタッチするには、<ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> の <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>To create a new object that is related to the source object, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">ソース オブジェクトに関連付けられている新しいオブジェクトを作成するには、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> の <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>For more information, see <bpt id="p1">[</bpt>Attaching and Detaching Objects<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のアタッチとデタッチ オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>If the collection is already filled or partially filled, the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method merges existing entities with the given entities.</source>
          <target state="translated">コレクションに既にエンティティが含まれている場合は、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> メソッドによって、指定したエンティティと既存のエンティティがマージされます。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The given entities are not assumed to be the complete set of related entities.</source>
          <target state="translated">この場合、指定したエンティティは、関連エンティティの完全なセットとは見なされません。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>All entities passed in must be in the <ph id="ph1">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> or <ph id="ph2">&lt;xref:System.Data.EntityState.Modified&gt;</ph> state.</source>
          <target state="translated">このメソッドに渡すエンティティはすべて、状態が <ph id="ph1">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> または <ph id="ph2">&lt;xref:System.Data.EntityState.Modified&gt;</ph> である必要があります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>Objects in the <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state are only allowed when the state manager is already tracking the relationship instance.</source>
          <target state="translated">状態が <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> のオブジェクトは、そのリレーションシップのインスタンスが既に状態マネージャーによって追跡されている場合にのみ使用できます。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source><ph id="ph1">&lt;paramref name="entities" /&gt;</ph> collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entities" /&gt;</ph> コレクションは <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The source object or an object in the <ph id="ph1">&lt;paramref name="entities" /&gt;</ph> collection is <ph id="ph2">&lt;see langword="null" /&gt;</ph> or is not in an <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> state.</source>
          <target state="translated">ソース オブジェクトまたは <ph id="ph1">&lt;paramref name="entities" /&gt;</ph> コレクション内のオブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> であるか、そのオブジェクトの状態が <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> または <ph id="ph4">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>The relationship cannot be defined based on the EDM metadata.</source>
          <target state="translated">EDM メタデータに基づいてリレーションシップを定義できません。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})">
          <source>This can occur when the association in the conceptual schema does not support a relationship between the two types.</source>
          <target state="translated">これは、概念スキーマのアソシエーションで 2 つの型の間のリレーションシップがサポートされていない場合に発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The object being attached.</source>
          <target state="translated">アタッチされるオブジェクト。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>Defines a relationship between two attached objects in an object context.</source>
          <target state="translated">オブジェクト コンテキスト内の 2 つのアタッチ済みオブジェクトの間のリレーションシップを定義します。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method is used to define relationships between two objects when both objects already exist in the object context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> メソッドは、2 つのオブジェクトの両方が既にオブジェクト コンテキストに存在する場合にそれらの間のリレーションシップを定義するために使用されます。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To attach an object or an object graph where the relationships are already defined, call the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>.</source>
          <target state="translated">オブジェクトや、リレーションシップが既に定義されているオブジェクト グラフをアタッチするには、<ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext.Attach%2A&gt;</ph> の <ph id="ph2">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To create a new object that is related to the source object, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method on the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">ソース オブジェクトに関連付けられている新しいオブジェクトを作成するには、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> の <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>Attaching and Detaching Objects<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>のアタッチとデタッチ オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)</ept>です。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> already has loaded objects, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> method merges the object together with the existing objects in the <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> に既にオブジェクトが読み込まれている場合、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A&gt;</ph> メソッドは、オブジェクトを <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> の既存のオブジェクトとマージします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The attached object is not assumed to be the complete set of related entity objects.</source>
          <target state="translated">この場合、アタッチされるオブジェクトは、関連エンティティ オブジェクトの完全なセットとは見なされません。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>The object associated with this <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and all objects being attached to it must be in an <ph id="ph2">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> or <ph id="ph3">&lt;xref:System.Data.EntityState.Modified&gt;</ph> state.</source>
          <target state="translated">この <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> に関連付けられたオブジェクトおよびそれにアタッチされているすべてのオブジェクトは、状態が <ph id="ph2">&lt;xref:System.Data.EntityState.Unchanged&gt;</ph> または <ph id="ph3">&lt;xref:System.Data.EntityState.Modified&gt;</ph> である必要があります。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>Objects in the <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state can only be attached when the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph> is already tracking the relationship instance.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> 状態のオブジェクトは、<ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph> で既にリレーションシップ インスタンスが追跡されている場合にのみアタッチできます。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This example attaches a collection of detached <ph id="ph1">`SalesOrderDetail`</ph> objects and a detached <ph id="ph2">`SalesOrderHeader`</ph> object to an object context, and then defines the relationships between the <ph id="ph3">`SalesOrderHeader`</ph> object and each <ph id="ph4">`SalesOrderDetail`</ph> object.</source>
          <target state="translated">この例のデタッチされたコレクションのアタッチ<ph id="ph1">`SalesOrderDetail`</ph>オブジェクトと、デタッチされた<ph id="ph2">`SalesOrderHeader`</ph>、オブジェクト コンテキストにオブジェクトし、の間のリレーションシップを定義、<ph id="ph3">`SalesOrderHeader`</ph>オブジェクトとその各<ph id="ph4">`SalesOrderDetail`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When the <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> が <ph id="ph2">&lt;see langword="null" /&gt;</ph> である場合。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When the <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> cannot be related to the source object.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> をソース オブジェクトに関連付けられない場合。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>This can occur when the association in the conceptual schema does not support a relationship between the two types.</source>
          <target state="translated">これは、概念スキーマのアソシエーションで 2 つの型の間のリレーションシップがサポートされていない場合に発生する可能性があります。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)">
          <source>When either object is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or is not in an <ph id="ph2">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> or <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> state.</source>
          <target state="translated">オブジェクトが <ph id="ph1">&lt;see langword="null" /&gt;</ph> であるか、オブジェクトの状態が <ph id="ph2">&lt;see cref="F:System.Data.EntityState.Unchanged" /&gt;</ph> または <ph id="ph3">&lt;see cref="F:System.Data.EntityState.Modified" /&gt;</ph> でない場合。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes all entities from the collection.</source>
          <target state="translated">すべてのエンティティをコレクションから削除します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A&gt;</ph> does the following:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A&gt;</ph> では次の処理が行われます。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Sets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> flag to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">セット、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph>フラグを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes all entities from the collection.</source>
          <target state="translated">すべてのエンティティをコレクションから削除します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Detaches relationships between removed entities and the owner of the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from the <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph>.</source>
          <target state="translated">削除したエンティティと <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> の所有者の間のリレーションシップを <ph id="ph2">&lt;xref:System.Data.Objects.ObjectStateManager&gt;</ph> からデタッチします。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear">
          <source>Removes the owner of the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> from the related entities.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> の所有者を関連エンティティから削除します。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>The object to locate in the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> 内で検索するオブジェクト。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Determines whether a specific object exists in the collection.</source>
          <target state="translated">特定のオブジェクトがコレクション内に存在するかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the object is found in the <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">そのオブジェクトが <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> に存在する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> method to compare the specified object with the objects already in the collection.</source>
          <target state="translated">指定したオブジェクトをコレクション内の既存のオブジェクトと比較するには <ph id="ph1">&lt;xref:System.Object.Equals%2A?displayProperty=nameWithType&gt;</ph> メソッドを使用します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>This example does the following:</source>
          <target state="translated">この例の内容は次のとおりです。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Creates two new <ph id="ph1">`SalesOrderHeader`</ph> entities and adds them to the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">2 つの新しい <ph id="ph1">`SalesOrderHeader`</ph> エンティティを作成して <ph id="ph2">`Contact`</ph> エンティティに追加します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Gets all related ends from the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> that is associated with the Contact entity.</source>
          <target state="translated">Contact エンティティに関連付けられている <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.RelationshipManager&gt;</ph> からすべての関連 End を取得します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Iterates through the collection of <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph>s.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.IRelatedEnd&gt;</ph> のコレクションを反復処理します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Gets the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> for each related end.</source>
          <target state="translated">各関連 End の <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> を取得します。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> メソッドを使用して、コレクションからエンティティを 1 つ削除します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Calls the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> メソッドを呼び出して、そのオブジェクトがコレクションから削除されたかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)">
          <source>Uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> method to add the entity back.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A&gt;</ph> メソッドを使用して、削除したエンティティを再び追加します。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>The array to copy to.</source>
          <target state="translated">コピー先の配列。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>The zero-based index in the array at which copying begins.</source>
          <target state="translated">配列内のコピーを開始する位置を示す、0 から始まるインデックスです。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)">
          <source>Copies all the contents of the collection to an array, starting at the specified index of the target array.</source>
          <target state="translated">コレクションのすべての内容を配列にコピーします。その際、コピー対象の配列の指定したインデックス位置からコピーを開始します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>Gets the number of objects that are contained in the collection.</source>
          <target state="translated">コレクションに含まれるオブジェクトの数を取得します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>The number of elements that are contained in the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> に含まれる要素の数。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A&gt;</ph> property gets the number of entities currently in the local collection and does not reflect the size of the collection in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A&gt;</ph> プロパティでは、現在ローカル コレクションに含まれているエンティティの数が取得されます。これには、データ ソースのコレクションのサイズは反映されません。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>A count of zero does not necessarily indicate that the related collection is empty.</source>
          <target state="translated">したがって、カウントが 0 であっても、その関連コレクションが空であるとは限りません。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>To determine the collection size in the data source, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method or include the related object in the query path.</source>
          <target state="translated">データ ソースのコレクションのサイズを調べるには、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> メソッドを呼び出すか、関連オブジェクトをクエリ パスに含めます。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.Count">
          <source>For more information, see <bpt id="p1">[</bpt>Loading Related Objects<ept id="p1">](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>関連オブジェクトの読み込み<ept id="p1">](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)</ept>です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</source>
          <target state="translated">現在のコレクションに存在するのと同じオブジェクトのセットを実行時に返すオブジェクト クエリを返します。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>An <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectQuery`1" /&gt;</ph> that represents the entity collection.</source>
          <target state="translated">エンティティのコレクションを表す <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectQuery`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This property is used to obtain a new instance of <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> that returns the same set of objects.</source>
          <target state="translated">このプロパティは、同じオブジェクトのセットを返す <ph id="ph1">&lt;xref:System.Data.Objects.ObjectQuery%601&gt;</ph> の新しいインスタンスを取得するために使用されます。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This is useful as the starting point for a more complex join, union, or filtered query, or to return the same objects in a detached state by using the <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> option.</source>
          <target state="translated">これは、より複雑な結合クエリ、ユニオン クエリ、またはフィルター選択されたクエリの開始点として使用したり、<ph id="ph1">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> オプションを使用してデタッチ済み状態の同じオブジェクトを返す場合に使用できます。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> is used to filter objects in an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> to enable you to bind only objects of a specific type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> 内のオブジェクトをフィルター処理に使用される、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>を有効にすると、特定の種類のオブジェクトのみをバインドします。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Objects to Controls<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>コントロールへのバインド オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This example is based on a modified version of the .</source>
          <target state="translated">この例はの変更バージョンに基づいて、します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This version supports table-per-type inheritance with <ph id="ph1">`Course`</ph> as an abstract type.</source>
          <target state="translated">この変更版では、抽象型として <ph id="ph1">`Course`</ph> での table-per-type 継承をサポートします。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>Complete the  walkthrough to modify the School model to support the table-per-type inheritance example used in this topic.</source>
          <target state="translated">このトピックで使用されるテーブルの種類ごとの継承の例をサポートするために、School モデルを変更するチュートリアルを完了します。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>This example shows how to use <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph> to filter objects in an <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> and bind only to objects of a specific type.</source>
          <target state="translated">この例を使用する方法を示しています<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A&gt;</ph>オブジェクトをフィルター処理で、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>し、特定の種類のオブジェクトのみにバインドします。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>For a complete version of this example, see <bpt id="p1">[</bpt>How to: Bind Controls to Derived Types<ept id="p1">](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)</ept>.</source>
          <target state="translated">この例の完全なバージョンは、次を参照してください。<bpt id="p1">[</bpt>する方法: 派生型へのコントロールのバインド<ept id="p1">](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)</ept>です。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>When the object is in an <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Added" /&gt;</ph> state.</source>
          <target state="translated">オブジェクトの状態が <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Added" /&gt;</ph> の場合。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery">
          <source>When the object is in a <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Detached" /&gt;</ph> state with a <ph id="ph2">&lt;see cref="T:System.Data.Objects.MergeOption" /&gt;</ph> other than <ph id="ph3">&lt;see cref="F:System.Data.Objects.MergeOption.NoTracking" /&gt;</ph>.</source>
          <target state="translated">オブジェクトの状態が <ph id="ph1">&lt;see cref="F:System.Data.EntityState.Detached" /&gt;</ph> で、<ph id="ph2">&lt;see cref="T:System.Data.Objects.MergeOption" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Data.Objects.MergeOption.NoTracking" /&gt;</ph> 以外の場合。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
          <source>Returns an enumerator that is used to iterate through the objects in the collection.</source>
          <target state="translated">コレクションのオブジェクトを反復処理するために使用される列挙子を返します。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the set of values cached by <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> によってキャッシュされている値のセットを反復処理する <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
          <source>Gets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> is read-only.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> が読み取り専用かどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly">
          <source>Always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectContext" /&gt;</ph>.</source>
          <target state="translated">このコレクション内のオブジェクトを、同じ <ph id="ph1">&lt;see cref="T:System.Data.Objects.ObjectContext" /&gt;</ph> に対する以前のクエリから返されたオブジェクトとどのようにマージするかを指定します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>Loads related objects into the collection, using the specified merge option.</source>
          <target state="translated">指定されたマージ オプションを使用して、コレクションに関連オブジェクトを読み込みます。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This method calls the internal <ph id="ph1">`RelatedEnd.ValidateLoad`</ph> method before loading the collection, which validates that a call to <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> has the correct conditions.</source>
          <target state="translated">このメソッドは、内部<ph id="ph1">`RelatedEnd.ValidateLoad`</ph>メソッドを呼び出すことを検証すると、コレクションを読み込む前に<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph>に正しい条件があります。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">`RelatedEnd.ValidateLoad`</ph> method checks that:</source>
          <target state="translated"><ph id="ph1">`RelatedEnd.ValidateLoad`</ph>メソッドでは、ことを確認します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>A valid <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph> exists.</source>
          <target state="translated">有効な<ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>が存在します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The entity isn't in a <ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph> state.</source>
          <target state="translated">エンティティはではありません、<ph id="ph1">&lt;xref:System.Data.EntityState.Deleted&gt;</ph>状態です。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> for <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> must be <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> if and only if the source entity was <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph>する必要があります<ph id="ph3">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>ソース エンティティが場合にのみ<ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>If the source entity was retrieved with any other <ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> can be anything but <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> (for example, the entity could have been loaded with <ph id="ph5">&lt;xref:System.Data.Objects.MergeOption.OverwriteChanges&gt;</ph> and the <ph id="ph6">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> option can be <ph id="ph7">&lt;xref:System.Data.Objects.MergeOption.AppendOnly&gt;</ph>).</source>
          <target state="translated">その他のソース エンティティが取得された場合<ph id="ph1">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>、 <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>以外は、 <ph id="ph4">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph> (など、エンティティが読み込まれていると<ph id="ph5">&lt;xref:System.Data.Objects.MergeOption.OverwriteChanges&gt;</ph>と<ph id="ph6">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph>オプションは、<ph id="ph7">&lt;xref:System.Data.Objects.MergeOption.AppendOnly&gt;</ph>).</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>If <ph id="ph1">`mergeOption`</ph> is <ph id="ph2">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>, <ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> isn't called on an already loaded entity and <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph> isn't called on a non-empty, not-tracked <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd&gt;</ph>.</source>
          <target state="translated">場合<ph id="ph1">`mergeOption`</ph>は<ph id="ph2">&lt;xref:System.Data.Objects.MergeOption.NoTracking&gt;</ph>、<ph id="ph3">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph>既に読み込まれたエンティティと呼ばれるされていないと<ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A&gt;</ph>空でない、not 追跡で呼び出されていない<ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>When objects in the collection are already loaded into the <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>, the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method enforces the <ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph> specified by the <ph id="ph4">`mergeOption`</ph> parameter.</source>
          <target state="translated">コレクション内のオブジェクトは既にに読み込まれる場合、 <ph id="ph1">&lt;xref:System.Data.Objects.ObjectContext&gt;</ph>、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph>メソッドの適用、<ph id="ph3">&lt;xref:System.Data.Objects.MergeOption&gt;</ph>によって指定された、<ph id="ph4">`mergeOption`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For more information, see <bpt id="p1">[</bpt>Identity Resolution, State Management, and Change Tracking<ept id="p1">](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>Id 解決、状態管理、および変更の追跡<ept id="p1">](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)</ept>です。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To explicitly load related objects, you must call the <ph id="ph1">`Load`</ph> method on the related end returned by the navigation property.</source>
          <target state="translated">関連するオブジェクトを明示的に読み込むするには、呼び出す必要があります、<ph id="ph1">`Load`</ph>ナビゲーション プロパティによって返される関連 end のメソッドです。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For a one-to-many relationship, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method on <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">一対多のリレーションシップでは、呼び出し、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph>メソッド<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>For a one-to-one relationship, call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A&gt;</ph> on <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>.</source>
          <target state="translated">一対一のリレーションシップを呼び出して、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A&gt;</ph>で<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This loads the related object data into the object context.</source>
          <target state="translated">これにより、関連オブジェクト データがオブジェクト コンテキストに読み込まれます。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>You can enumerate through the collection of returned results using a <ph id="ph1">`foreach`</ph> loop (<ph id="ph2">`For Each...Next`</ph> in Visual Basic) and conditionally call the <ph id="ph3">`Load`</ph> method on <ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph> and <ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> properties for each entity in the results.</source>
          <target state="translated">使用して返される結果のコレクションを列挙することができます、<ph id="ph1">`foreach`</ph>ループ (<ph id="ph2">`For Each...Next`</ph> Visual Basic で) 条件付きで呼び出すと、<ph id="ph3">`Load`</ph>メソッド<ph id="ph4">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601&gt;</ph>と<ph id="ph5">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>結果内の各エンティティのプロパティです。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method loads related objects from the data source whether or not <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph> is <ph id="ph3">`true`</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph>メソッドの関連するオブジェクトからデータ ソースからのかどうか読み込みます<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A&gt;</ph>は<ph id="ph3">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>When you call the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> method during a <ph id="ph2">`foreach`</ph> (C#) or <ph id="ph3">`For Each`</ph> (Visual Basic) enumeration, Object Services tries to open a new data reader.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A&gt;</ph> (C#) または <ph id="ph2">`foreach`</ph> (Visual Basic) 列挙で、<ph id="ph3">`For Each`</ph> メソッドを呼び出すと、Object Services は新たにデータ リーダーを開こうとします。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This operation will fail unless you have enabled multiple active results sets by specifying <ph id="ph1">`multipleactiveresultsets=true`</ph> in the connection string.</source>
          <target state="translated">この操作は、接続文字列で <ph id="ph1">`multipleactiveresultsets=true`</ph> を指定して複数のアクティブな結果セットを有効にしていない限り失敗します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>You can also load the result of the query into a <ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> collection.</source>
          <target state="translated">クエリの結果は、<ph id="ph1">&lt;xref:System.Collections.Generic.List%601&gt;</ph> コレクションに読み込むこともできます。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This closes the data reader and enables you to enumerate over the collection to load referenced objects.</source>
          <target state="translated">この場合、データ リーダーが閉じ、コレクションを列挙して参照オブジェクトを読み込むことができます。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType&gt;</ph> method is synchronized with the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType&gt;</ph> メソッドは <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType&gt;</ph> メソッドと同期しています。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)">
          <source>This example loads the related <ph id="ph1">`SalesOrderHeader`</ph> objects for the <ph id="ph2">`Contact`</ph> entity.</source>
          <target state="translated">この例では、<ph id="ph1">`SalesOrderHeader`</ph> エンティティに関連付けられている <ph id="ph2">`Contact`</ph> オブジェクトを読み込みます。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">ストリーム コンテキスト。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)">
          <source>Used internally to deserialize entity objects.</source>
          <target state="translated">エンティティ オブジェクトを逆シリアル化する目的で内部的に使用されます。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
          <source>The streaming context.</source>
          <target state="translated">ストリーム コンテキスト。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)">
          <source>Used internally to serialize entity objects.</source>
          <target state="translated">エンティティ オブジェクトをシリアル化する目的で内部的に使用されます。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The object to remove from the collection.</source>
          <target state="translated">コレクションから削除するオブジェクト。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>Removes an object from the collection and marks the relationship for deletion.</source>
          <target state="translated">オブジェクトをコレクションから削除して、リレーションシップを削除対象としてマークします。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if item was successfully removed; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アイテムが正常に削除された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method also deletes the relationship between the source object and the object being removed from the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> メソッドでは、コレクションから削除されるオブジェクトとソース オブジェクトの間のリレーションシップも削除されます。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>If the relationship has a referential integrity constraint, calling the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method on a dependent object marks both the relationship and the dependent object for deletion.</source>
          <target state="translated">リレーションシップに参照整合性制約がある場合に依存オブジェクトで <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> メソッドを呼び出すと、そのリレーションシップと依存オブジェクトの両方が削除対象としてマークされます。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This occurs because the constraint indicates that the dependent object cannot exist without a relationship to the parent.</source>
          <target state="translated">これは、その制約により、依存オブジェクトは親とのリレーションシップがないと存在できないからです。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>For more information, see <bpt id="p1">[</bpt>ReferentialConstraint Element (CSDL)<ept id="p1">](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>ReferentialConstraint 要素 (CSDL)<ept id="p1">](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)</ept>です。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> returns <ph id="ph2">`false`</ph> when the specified object is not in the collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> 返します<ph id="ph2">`false`</ph>コレクション内で指定したオブジェクトがありませんが。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This example is based on the .</source>
          <target state="translated">この例がに基づいて、します。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</source>
          <target state="translated">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>To do this, complete the procedures in <bpt id="p1">[</bpt>How to: Manually Configure an Entity Framework Project<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept> and <bpt id="p2">[</bpt>How to: Manually Define the Model and Mapping Files<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>.</source>
          <target state="translated">これを行うための手順を完了<bpt id="p1">[</bpt>する方法: Entity Framework プロジェクトを手動で構成<ept id="p1">](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)</ept>と<bpt id="p2">[</bpt>する方法: モデル ファイルとマッピング ファイルを手動で定義<ept id="p2">](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)</ept>です。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>This example uses the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> method to remove one of the entities from the collection and then calls the <ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> method to determine whether the object was removed from the collection.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A&gt;</ph> メソッドを使用してコレクションからエンティティを 1 つ削除し、<ph id="ph2">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A&gt;</ph> メソッドを使用してそのオブジェクトがコレクションから削除されたかどうかを確認します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> オブジェクトが <ph id="ph2">&lt;see langword="null" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object is not attached to the same object context.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> オブジェクトが同じオブジェクト コンテキストにアタッチされていません。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)">
          <source>The <ph id="ph1">&lt;paramref name="entity" /&gt;</ph> object does not have a valid relationship manager.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="entity" /&gt;</ph> オブジェクトに有効なリレーションシップ マネージャーがありません。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>Returns an enumerator that is used to iterate through the set of values cached by <ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> によってキャッシュされている値のセットを反復処理するために使用される列挙子を返します。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> that iterates through the set of values cached by <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Collections.IEnumerator" /&gt;</ph> によってキャッシュされている値のセットを反復処理する <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>Gets a value that indicates whether the related entity collection consists of collection objects.</source>
          <target state="translated">関連エンティティのコレクションがコレクション オブジェクトで構成されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This property always returns <ph id="ph1">&lt;see langword="false" /&gt;</ph> because the <ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> contains objects and not collections.</source>
          <target state="translated">このプロパティは常に <ph id="ph1">&lt;see langword="false" /&gt;</ph> を返します。<ph id="ph2">&lt;see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /&gt;</ph> にはコレクションではなくオブジェクトが含まれるためです。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>Returns the collection as an <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> used for data binding.</source>
          <target state="translated">コレクションを、データ バインドで使用される <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> として返します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>An <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph> of entity objects.</source>
          <target state="translated">エンティティ オブジェクトの <ph id="ph1">&lt;see cref="T:System.Collections.IList" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.ComponentModel.IListSource&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>This method enables data binding to an <ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph>.</source>
          <target state="translated">このメソッドを使用すると、<ph id="ph1">&lt;xref:System.Data.Objects.DataClasses.EntityCollection%601&gt;</ph> にデータをバインドできます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>It is called by the control bound to the collection.</source>
          <target state="translated">これはコレクションにバインドされたコントロールによって呼び出されます。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList">
          <source>For more information, see <bpt id="p1">[</bpt>Binding Objects to Controls<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>コントロールへのバインド オブジェクト<ept id="p1">](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)</ept>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>