<Type Name="EntityCollection&lt;TEntity&gt;" FullName="System.Data.Objects.DataClasses.EntityCollection&lt;TEntity&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0c52cb13084751322889764807f28bf9eaff9d3e" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678692" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class EntityCollection&lt;TEntity&gt; : System.Data.Objects.DataClasses.RelatedEnd, System.Collections.Generic.ICollection&lt;TEntity&gt;, System.Collections.Generic.IEnumerable&lt;TEntity&gt;, System.ComponentModel.IListSource where TEntity : class" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit EntityCollection`1&lt;class TEntity&gt; extends System.Data.Objects.DataClasses.RelatedEnd implements class System.Collections.Generic.ICollection`1&lt;!TEntity&gt;, class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.DataClasses.EntityCollection`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class EntityCollection(Of TEntity)&#xA;Inherits RelatedEnd&#xA;Implements ICollection(Of TEntity), IEnumerable(Of TEntity), IListSource" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TEntity&gt;&#xA; where TEntity : classpublic ref class EntityCollection sealed : System::Data::Objects::DataClasses::RelatedEnd, System::Collections::Generic::ICollection&lt;TEntity&gt;, System::Collections::Generic::IEnumerable&lt;TEntity&gt;, System::ComponentModel::IListSource" />
  <TypeSignature Language="F#" Value="type EntityCollection&lt;'Entity (requires 'Entity : null)&gt; = class&#xA;    inherit RelatedEnd&#xA;    interface ICollection&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface seq&lt;'Entity (requires 'Entity : null)&gt;&#xA;    interface IEnumerable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TEntity">
      <Constraints>
        <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.DataClasses.RelatedEnd</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.ICollection&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;TEntity&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ComponentModel.IListSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TEntity">
      <span data-ttu-id="7da1d-101">コレクションのエンティティ型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="7da1d-101">The entity type of the collection.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="7da1d-102">Represents a collection of objects on the "many" end of a relationship.</span>
      <span class="sxs-lookup">
        <span data-stu-id="7da1d-102">Represents a collection of objects on the "many" end of a relationship.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-103"><xref:System.Data.Objects.DataClasses.EntityCollection%601> は、一対多または多対多のリレーションシップの "多" の側を表す特定のエンティティ型のオブジェクトのコレクションです。</span><span class="sxs-lookup"><span data-stu-id="7da1d-103">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is a collection of objects of a particular entity type that represents the "many" end of a one-to-many or many-to-many relationship.</span></span>  
  
 <span data-ttu-id="7da1d-104"><xref:System.Data.Objects.DataClasses.EntityCollection%601> はナビゲーション プロパティによって返されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-104">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> is returned by a navigation property.</span></span> <span data-ttu-id="7da1d-105"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> に関連オブジェクトを読み込むには、<xref:System.Data.Objects.DataClasses.EntityCollection%601> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-105">Use the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method to load related objects into an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="7da1d-106">特定のエンティティ型の、関連のないオブジェクトのコレクション (<xref:System.Data.Objects.ObjectQuery%601> の結果など) を格納するには、<xref:System.Collections.Generic.List%601> クラスのインスタンスを使用します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-106">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of the <xref:System.Collections.Generic.List%601> class.</span></span>  
  
 <span data-ttu-id="7da1d-107"><xref:System.Data.Objects.DataClasses.EntityCollection%601> には、対応する <xref:System.Data.Objects.DataClasses.EntityReference%601> がある場合があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-107">An <xref:System.Data.Objects.DataClasses.EntityCollection%601> might have a corresponding <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="7da1d-108"><xref:System.Data.Objects.DataClasses.EntityCollection%601> と <xref:System.Data.Objects.DataClasses.EntityReference%601> が同じリレーションシップの両端をモデル化している場合は、そのリレーションシップの整合性がオブジェクト レベルで維持されて、</span><span class="sxs-lookup"><span data-stu-id="7da1d-108">When an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and an <xref:System.Data.Objects.DataClasses.EntityReference%601> model opposite ends of the same relationship, the integrity of the relationship is maintained at the object level.</span></span> <span data-ttu-id="7da1d-109">その 2 つのクラスが自動的に同期されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-109">The two classes are synchronized automatically.</span></span>  
  
 <span data-ttu-id="7da1d-110">このクラスは継承できません。</span><span class="sxs-lookup"><span data-stu-id="7da1d-110">This class cannot be inherited.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-111">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-111">This example is based on the .</span></span> <span data-ttu-id="7da1d-112">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-112">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-113">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-113">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-114">この例の内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7da1d-114">This example does the following:</span></span>  
  
1.  <span data-ttu-id="7da1d-115">2 つの新しい `SalesOrderHeader` エンティティを作成して `Contact` エンティティに追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-115">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>  
  
2.  <span data-ttu-id="7da1d-116"><xref:System.Data.Objects.DataClasses.RelationshipManager> エンティティに関連付けられている `Contact` からすべての関連 End を取得します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-116">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the `Contact` entity.</span></span>  
  
3.  <span data-ttu-id="7da1d-117"><xref:System.Data.Objects.DataClasses.IRelatedEnd> のコレクションを反復処理します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-117">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>  
  
4.  <span data-ttu-id="7da1d-118">各関連 End の <xref:System.Data.Objects.DataClasses.EntityCollection%601> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-118">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>  
  
5.  <span data-ttu-id="7da1d-119"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> メソッドを使用して、コレクションからエンティティを 1 つ削除します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-119">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>  
  
6.  <span data-ttu-id="7da1d-120"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> メソッドを呼び出して、そのオブジェクトがコレクションから削除されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-120">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
7.  <span data-ttu-id="7da1d-121"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドを使用して、削除したエンティティを再び追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-121">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-122">Initializes a new instance of the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-122">Initializes a new instance of the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-123">この <xref:System.Data.Objects.DataClasses.EntityCollection%601> のパブリック コンストラクターは、Object Services がオブジェクト グラフをシリアル化解除するときに使用するものです。</span><span class="sxs-lookup"><span data-stu-id="7da1d-123">This public constructor for <xref:System.Data.Objects.DataClasses.EntityCollection%601> is intended to be used by Object Services when deserializing object graphs.</span></span> <span data-ttu-id="7da1d-124"><xref:System.Data.Objects.DataClasses.EntityCollection%601> のインスタンスにアクセスするには、このコンストラクターではなくナビゲーション プロパティを使用してください。</span><span class="sxs-lookup"><span data-stu-id="7da1d-124">You should access an instance of <xref:System.Data.Objects.DataClasses.EntityCollection%601> from a navigation property instead of using this constructor.</span></span>  
  
 <span data-ttu-id="7da1d-125">特定のエンティティ型の、関連のないオブジェクトのコレクション (<xref:System.Data.Objects.ObjectQuery%601> の結果など) を格納するには、<xref:System.Collections.Generic.List%601> のインスタンスを使用します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-125">To store an unrelated collection of objects of a specific entity type, such as the result of an <xref:System.Data.Objects.ObjectQuery%601>, use an instance of <xref:System.Collections.Generic.List%601>.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Add(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Add(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Add(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Add : 'Entity -&gt; unit" Usage="entityCollection.Add entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Add(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7da1d-126">An object to add to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-126">An object to add to the collection.</span>
          </span>
          <span data-ttu-id="7da1d-127">
            <c>entity</c> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-127">
              <c>entity</c> must implement <see cref="T:System.Data.Objects.DataClasses.IEntityWithRelationships" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-128">Adds an object to the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-128">Adds an object to the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-129"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドは、<xref:System.Data.Objects.DataClasses.EntityCollection%601> にオブジェクトを追加して、2 つのオブジェクト間のリレーションシップを作成します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-129">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method adds an object to an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and creates a relationship between the two objects.</span></span> <span data-ttu-id="7da1d-130">ソース オブジェクトが <xref:System.Data.Objects.ObjectContext> インスタンスにアタッチされている場合、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドは <xref:System.Data.Objects.ObjectContext> にもオブジェクトを追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-130">When the source object is attached to an <xref:System.Data.Objects.ObjectContext> instance, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method also adds the object to the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="7da1d-131">この操作は、<xref:System.Data.Objects.ObjectContext.SaveChanges%2A> が呼び出されるとデータ ソースの挿入操作に変換されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-131">This operation is translated into an insert operation in the data source when <xref:System.Data.Objects.ObjectContext.SaveChanges%2A> is called.</span></span> <span data-ttu-id="7da1d-132">詳細については、次を参照してください。[の作成、追加、変更、およびオブジェクトの削除](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-132">For more information, see [Creating, Adding, Modifying, and Deleting Objects](http://msdn.microsoft.com/library/f76f1fad-c553-4b59-820b-89b3dec2fad1).</span></span>  
  
 <span data-ttu-id="7da1d-133"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドは、同じオブジェクト インスタンスで複数回呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-133">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method can be called multiple times on the same object instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-134">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-134">This example is based on the .</span></span> <span data-ttu-id="7da1d-135">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-135">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-136">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-136">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-137">この例では、2 つの新しい `SalesOrderHeader` エンティティを作成し、それらを `Contact` エンティティに追加します。次に、オブジェクトを 1 つ削除し、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドを使用して、削除したオブジェクトを再びコレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-137">This example creates two new `SalesOrderHeader` entities, adds them to the `Contact` entity, and, after removing an object, uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the object back to the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7da1d-138">
            <paramref name="entity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-138">
              <paramref name="entity" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Attach">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-139">Defines a relationship between two attached objects in an object context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-139">Defines a relationship between two attached objects in an object context.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (System.Collections.Generic.IEnumerable&lt;TEntity&gt; entities);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(class System.Collections.Generic.IEnumerable`1&lt;!TEntity&gt; entities) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(System.Collections.Generic.IEnumerable{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entities As IEnumerable(Of TEntity))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(System::Collections::Generic::IEnumerable&lt;TEntity&gt; ^ entities);" />
      <MemberSignature Language="F#" Value="override this.Attach : seq&lt;'Entity (requires 'Entity : null)&gt; -&gt; unit" Usage="entityCollection.Attach entities" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entities" Type="System.Collections.Generic.IEnumerable&lt;TEntity&gt;" />
      </Parameters>
      <Docs>
        <param name="entities">
          <span data-ttu-id="7da1d-140">Collection of objects in the object context that are related to the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-140">Collection of objects in the object context that are related to the source object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-141">Defines relationships between an object and a collection of related objects in an object context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-141">Defines relationships between an object and a collection of related objects in an object context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-142"><xref:System.Data.Objects.ObjectContext.Attach%2A> メソッドは、ソース オブジェクトと関連オブジェクトのコレクションの両方が既にオブジェクト コンテキストに存在する場合にそれらの間のリレーションシップを定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-142">The <xref:System.Data.Objects.ObjectContext.Attach%2A> method is used to define relationships between an object and a collection of related objects when both the source object and the collection of related objects already exist in the object context.</span></span> <span data-ttu-id="7da1d-143">オブジェクトや、リレーションシップが既に定義されているオブジェクト グラフをアタッチするには、<xref:System.Data.Objects.ObjectContext.Attach%2A> の <xref:System.Data.Objects.ObjectContext> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-143">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="7da1d-144">ソース オブジェクトに関連付けられている新しいオブジェクトを作成するには、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> の <xref:System.Data.Objects.DataClasses.EntityCollection%601> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-144">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="7da1d-145">詳細については、次を参照してください。[のアタッチとデタッチ オブジェクト](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-145">For more information, see [Attaching and Detaching Objects](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="7da1d-146">コレクションに既にエンティティが含まれている場合は、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> メソッドによって、指定したエンティティと既存のエンティティがマージされます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-146">If the collection is already filled or partially filled, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges existing entities with the given entities.</span></span> <span data-ttu-id="7da1d-147">この場合、指定したエンティティは、関連エンティティの完全なセットとは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7da1d-147">The given entities are not assumed to be the complete set of related entities.</span></span>  
  
 <span data-ttu-id="7da1d-148">このメソッドに渡すエンティティはすべて、状態が <xref:System.Data.EntityState.Unchanged> または <xref:System.Data.EntityState.Modified> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-148">All entities passed in must be in the <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span> <span data-ttu-id="7da1d-149">状態が <xref:System.Data.EntityState.Deleted> のオブジェクトは、そのリレーションシップのインスタンスが既に状態マネージャーによって追跡されている場合にのみ使用できます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-149">Objects in the <xref:System.Data.EntityState.Deleted> state are only allowed when the state manager is already tracking the relationship instance.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7da1d-150">
            <paramref name="entities" /> collection is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-150">
              <paramref name="entities" /> collection is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7da1d-151">The source object or an object in the <paramref name="entities" /> collection is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-151">The source object or an object in the <paramref name="entities" /> collection is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span>
          </span>
          <span data-ttu-id="7da1d-152">-or-  The relationship cannot be defined based on the EDM metadata.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-152">-or-  The relationship cannot be defined based on the EDM metadata.</span>
          </span>
          <span data-ttu-id="7da1d-153">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-153">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="public void Attach (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Attach(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Attach(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Attach (entity As TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Attach(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Attach : 'Entity -&gt; unit" Usage="entityCollection.Attach entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7da1d-154">The object being attached.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-154">The object being attached.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-155">Defines a relationship between two attached objects in an object context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-155">Defines a relationship between two attached objects in an object context.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-156"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> メソッドは、2 つのオブジェクトの両方が既にオブジェクト コンテキストに存在する場合にそれらの間のリレーションシップを定義するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-156">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method is used to define relationships between two objects when both objects already exist in the object context.</span></span> <span data-ttu-id="7da1d-157">オブジェクトや、リレーションシップが既に定義されているオブジェクト グラフをアタッチするには、<xref:System.Data.Objects.ObjectContext.Attach%2A> の <xref:System.Data.Objects.ObjectContext> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-157">To attach an object or an object graph where the relationships are already defined, call the <xref:System.Data.Objects.ObjectContext.Attach%2A> method on the <xref:System.Data.Objects.ObjectContext>.</span></span> <span data-ttu-id="7da1d-158">ソース オブジェクトに関連付けられている新しいオブジェクトを作成するには、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> の <xref:System.Data.Objects.DataClasses.EntityCollection%601> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-158">To create a new object that is related to the source object, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method on the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="7da1d-159">詳細については、次を参照してください。[のアタッチとデタッチ オブジェクト](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-159">For more information, see [Attaching and Detaching Objects](http://msdn.microsoft.com/library/41d5c1ef-1b78-4502-aa10-7e1438d62d23).</span></span>  
  
 <span data-ttu-id="7da1d-160"><xref:System.Data.Objects.DataClasses.EntityCollection%601> に既にオブジェクトが読み込まれている場合、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> メソッドは、オブジェクトを <xref:System.Data.Objects.DataClasses.EntityCollection%601> の既存のオブジェクトとマージします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-160">If the <xref:System.Data.Objects.DataClasses.EntityCollection%601> already has loaded objects, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Attach%2A> method merges the object together with the existing objects in the <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span>  
  
 <span data-ttu-id="7da1d-161">この場合、アタッチされるオブジェクトは、関連エンティティ オブジェクトの完全なセットとは見なされません。</span><span class="sxs-lookup"><span data-stu-id="7da1d-161">The attached object is not assumed to be the complete set of related entity objects.</span></span>  
  
 <span data-ttu-id="7da1d-162">この <xref:System.Data.Objects.DataClasses.EntityCollection%601> に関連付けられたオブジェクトおよびそれにアタッチされているすべてのオブジェクトは、状態が <xref:System.Data.EntityState.Unchanged> または <xref:System.Data.EntityState.Modified> である必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-162">The object associated with this <xref:System.Data.Objects.DataClasses.EntityCollection%601> and all objects being attached to it must be in an <xref:System.Data.EntityState.Unchanged> or <xref:System.Data.EntityState.Modified> state.</span></span>  
  
 <span data-ttu-id="7da1d-163"><xref:System.Data.EntityState.Deleted> 状態のオブジェクトは、<xref:System.Data.Objects.ObjectStateManager> で既にリレーションシップ インスタンスが追跡されている場合にのみアタッチできます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-163">Objects in the <xref:System.Data.EntityState.Deleted> state can only be attached when the <xref:System.Data.Objects.ObjectStateManager> is already tracking the relationship instance.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-164">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-164">This example is based on the .</span></span> <span data-ttu-id="7da1d-165">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-165">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-166">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-166">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-167">この例のデタッチされたコレクションのアタッチ`SalesOrderDetail`オブジェクトおよびデタッチされた`SalesOrderHeader`をオブジェクト コンテキストにオブジェクトし、間のリレーションシップを定義し、`SalesOrderHeader`オブジェクトと各`SalesOrderDetail`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7da1d-167">This example attaches a collection of detached `SalesOrderDetail` objects and a detached `SalesOrderHeader` object to an object context, and then defines the relationships between the `SalesOrderHeader` object and each `SalesOrderDetail` object.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#attachrelatedobjects)]
 [!code-vb[DP ObjectServices Concepts#AttachRelatedObjects](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#attachrelatedobjects)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7da1d-168">When the <paramref name="entity" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-168">When the <paramref name="entity" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7da1d-169">When the <paramref name="entity" /> cannot be related to the source object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-169">When the <paramref name="entity" /> cannot be related to the source object.</span>
          </span>
          <span data-ttu-id="7da1d-170">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-170">This can occur when the association in the conceptual schema does not support a relationship between the two types.</span>
          </span>
          <span data-ttu-id="7da1d-171">-or-  When either object is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-171">-or-  When either object is <see langword="null" /> or is not in an <see cref="F:System.Data.EntityState.Unchanged" /> or <see cref="F:System.Data.EntityState.Modified" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="override this.Clear : unit -&gt; unit" Usage="entityCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-172">Removes all entities from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-172">Removes all entities from the collection.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-173"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> では次の処理が行われます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-173"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Clear%2A> does the following:</span></span>  
  
-   <span data-ttu-id="7da1d-174">セット、<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>フラグを`false`します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-174">Sets the <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> flag to `false`.</span></span>  
  
-   <span data-ttu-id="7da1d-175">すべてのエンティティをコレクションから削除します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-175">Removes all entities from the collection.</span></span>  
  
-   <span data-ttu-id="7da1d-176">削除したエンティティと <xref:System.Data.Objects.DataClasses.EntityCollection%601> の所有者の間のリレーションシップを <xref:System.Data.Objects.ObjectStateManager> からデタッチします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-176">Detaches relationships between removed entities and the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the <xref:System.Data.Objects.ObjectStateManager>.</span></span>  
  
-   <span data-ttu-id="7da1d-177"><xref:System.Data.Objects.DataClasses.EntityCollection%601> の所有者を関連エンティティから削除します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-177">Removes the owner of the <xref:System.Data.Objects.DataClasses.EntityCollection%601> from the related entities.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Contains(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Contains(TEntity entity);" />
      <MemberSignature Language="F#" Value="abstract member Contains : 'Entity -&gt; bool&#xA;override this.Contains : 'Entity -&gt; bool" Usage="entityCollection.Contains entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Contains(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7da1d-178">The object to locate in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-178">The object to locate in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-179">Determines whether a specific object exists in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-179">Determines whether a specific object exists in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-180">
            <see langword="true" /> if the object is found in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-180">
              <see langword="true" /> if the object is found in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-181">指定したオブジェクトをコレクション内の既存のオブジェクトと比較するには <xref:System.Object.Equals%2A?displayProperty=nameWithType> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-181">Uses the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method to compare the specified object with the objects already in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-182">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-182">This example is based on the .</span></span> <span data-ttu-id="7da1d-183">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-183">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-184">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-184">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-185">この例の内容は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="7da1d-185">This example does the following:</span></span>  
  
1.  <span data-ttu-id="7da1d-186">2 つの新しい `SalesOrderHeader` エンティティを作成して `Contact` エンティティに追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-186">Creates two new `SalesOrderHeader` entities and adds them to the `Contact` entity.</span></span>  
  
2.  <span data-ttu-id="7da1d-187">Contact エンティティに関連付けられている <xref:System.Data.Objects.DataClasses.RelationshipManager> からすべての関連 End を取得します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-187">Gets all related ends from the <xref:System.Data.Objects.DataClasses.RelationshipManager> that is associated with the Contact entity.</span></span>  
  
3.  <span data-ttu-id="7da1d-188"><xref:System.Data.Objects.DataClasses.IRelatedEnd> のコレクションを反復処理します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-188">Iterates through the collection of <xref:System.Data.Objects.DataClasses.IRelatedEnd>s.</span></span>  
  
4.  <span data-ttu-id="7da1d-189">各関連 End の <xref:System.Data.Objects.DataClasses.EntityCollection%601> を取得します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-189">Gets the <xref:System.Data.Objects.DataClasses.EntityCollection%601> for each related end.</span></span>  
  
5.  <span data-ttu-id="7da1d-190"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> メソッドを使用して、コレクションからエンティティを 1 つ削除します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-190">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection.</span></span>  
  
6.  <span data-ttu-id="7da1d-191"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> メソッドを呼び出して、そのオブジェクトがコレクションから削除されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-191">Calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
7.  <span data-ttu-id="7da1d-192"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> メソッドを使用して、削除したエンティティを再び追加します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-192">Uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Add%2A> method to add the entity back.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (TEntity[] array, int arrayIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(!TEntity[] array, int32 arrayIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CopyTo(`0[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As TEntity(), arrayIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(cli::array &lt;TEntity&gt; ^ array, int arrayIndex);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : 'Entity[] * int -&gt; unit&#xA;override this.CopyTo : 'Entity[] * int -&gt; unit" Usage="entityCollection.CopyTo (array, arrayIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="TEntity[]" />
        <Parameter Name="arrayIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="7da1d-193">The array to copy to.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-193">The array to copy to.</span>
          </span>
        </param>
        <param name="arrayIndex">
          <span data-ttu-id="7da1d-194">The zero-based index in the array at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-194">The zero-based index in the array at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-195">Copies all the contents of the collection to an array, starting at the specified index of the target array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-195">Copies all the contents of the collection to an array, starting at the specified index of the target array.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-196">Gets the number of objects that are contained in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-196">Gets the number of objects that are contained in the collection.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7da1d-197">
            <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> に含まれる要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-197">The number of elements that are contained in the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-198"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> プロパティでは、現在ローカル コレクションに含まれているエンティティの数が取得されます。これには、データ ソースのコレクションのサイズは反映されません。</span><span class="sxs-lookup"><span data-stu-id="7da1d-198">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Count%2A> property gets the number of entities currently in the local collection and does not reflect the size of the collection in the data source.</span></span> <span data-ttu-id="7da1d-199">したがって、カウントが 0 であっても、その関連コレクションが空であるとは限りません。</span><span class="sxs-lookup"><span data-stu-id="7da1d-199">A count of zero does not necessarily indicate that the related collection is empty.</span></span> <span data-ttu-id="7da1d-200">データ ソースのコレクションのサイズを調べるには、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> メソッドを呼び出すか、関連オブジェクトをクエリ パスに含めます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-200">To determine the collection size in the data source, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method or include the related object in the query path.</span></span> <span data-ttu-id="7da1d-201">詳細については、次を参照してください。[関連オブジェクトの読み込み](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-201">For more information, see [Loading Related Objects](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateSourceQuery">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TEntity&gt; CreateSourceQuery ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!TEntity&gt; CreateSourceQuery() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.CreateSourceQuery" />
      <MemberSignature Language="VB.NET" Value="Public Function CreateSourceQuery () As ObjectQuery(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;TEntity&gt; ^ CreateSourceQuery();" />
      <MemberSignature Language="F#" Value="override this.CreateSourceQuery : unit -&gt; System.Data.Objects.ObjectQuery&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.CreateSourceQuery " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-202">Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-202">Returns an object query that, when it is executed, returns the same set of objects that exists in the current collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the entity collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-203">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the entity collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-204">このプロパティは、同じオブジェクトのセットを返す <xref:System.Data.Objects.ObjectQuery%601> の新しいインスタンスを取得するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-204">This property is used to obtain a new instance of <xref:System.Data.Objects.ObjectQuery%601> that returns the same set of objects.</span></span> <span data-ttu-id="7da1d-205">これは、より複雑な結合クエリ、ユニオン クエリ、またはフィルター選択されたクエリの開始点として使用したり、<xref:System.Data.Objects.MergeOption.NoTracking> オプションを使用してデタッチ済み状態の同じオブジェクトを返す場合に使用できます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-205">This is useful as the starting point for a more complex join, union, or filtered query, or to return the same objects in a detached state by using the <xref:System.Data.Objects.MergeOption.NoTracking> option.</span></span>  
  
 <span data-ttu-id="7da1d-206"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> 内のオブジェクトをフィルター処理するために使用する<xref:System.Data.Objects.DataClasses.EntityCollection%601>特定の種類のオブジェクトのみにバインドすることができるようにします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-206"><xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> is used to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> to enable you to bind only objects of a specific type.</span></span> <span data-ttu-id="7da1d-207">詳細については、次を参照してください。[コントロールへのオブジェクトのバインド](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-207">For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-208">この例は、変更されたバージョンに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-208">This example is based on a modified version of the .</span></span> <span data-ttu-id="7da1d-209">この変更版では、抽象型として `Course` での table-per-type 継承をサポートします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-209">This version supports table-per-type inheritance with `Course` as an abstract type.</span></span> <span data-ttu-id="7da1d-210">このトピックで使用される例では、テーブルの型ごとの継承をサポートするために School モデルを変更するチュートリアルを完了します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-210">Complete the  walkthrough to modify the School model to support the table-per-type inheritance example used in this topic.</span></span>  
  
 <span data-ttu-id="7da1d-211">この例は、使用する方法を示します<xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A>でオブジェクトをフィルター、<xref:System.Data.Objects.DataClasses.EntityCollection%601>し、特定の種類のオブジェクトにのみバインドします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-211">This example shows how to use <xref:System.Data.Objects.DataClasses.EntityCollection%601.CreateSourceQuery%2A> to filter objects in an <xref:System.Data.Objects.DataClasses.EntityCollection%601> and bind only to objects of a specific type.</span></span> <span data-ttu-id="7da1d-212">この例の完全なバージョンを参照してください。[方法: 派生型へのコントロールのバインド](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-212">For a complete version of this example, see [How to: Bind Controls to Derived Types](http://msdn.microsoft.com/library/09730c14-3b7b-4563-af4a-7ecfa4e34bd5).</span></span>  
  
  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7da1d-213">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-213">When the object is in an <see cref="F:System.Data.EntityState.Added" /> state.</span>
          </span>
          <span data-ttu-id="7da1d-214">-or-  When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="T:System.Data.Objects.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-214">-or-  When the object is in a <see cref="F:System.Data.EntityState.Detached" /> state with a <see cref="T:System.Data.Objects.MergeOption" /> other than <see cref="F:System.Data.Objects.MergeOption.NoTracking" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerator&lt;TEntity&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!TEntity&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator(Of TEntity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IEnumerator&lt;TEntity&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="override this.GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;'Entity (requires 'Entity : null)&gt;" Usage="entityCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;TEntity&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-215">Returns an enumerator that is used to iterate through the objects in the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-215">Returns an enumerator that is used to iterate through the objects in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-216">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-216">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.Generic.ICollection`1.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-217">Gets a value that indicates whether the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-217">Gets a value that indicates whether the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7da1d-218">常に <see langword="false" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-218">Always returns <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Load">
      <MemberSignature Language="C#" Value="public override void Load (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void Load(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Load(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void Load(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Load : System.Data.Objects.MergeOption -&gt; unit" Usage="entityCollection.Load mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">
          <span data-ttu-id="7da1d-219">Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-219">Specifies how the objects in this collection should be merged with the objects that might have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-220">Loads related objects into the collection, using the specified merge option.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-220">Loads related objects into the collection, using the specified merge option.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<span data-ttu-id="7da1d-221">このメソッドは、内部`RelatedEnd.ValidateLoad`メソッドを呼び出すことを検証するコレクションを読み込む前に<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>正しい条件があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-221">This method calls the internal `RelatedEnd.ValidateLoad` method before loading the collection, which validates that a call to <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> has the correct conditions.</span></span> <span data-ttu-id="7da1d-222">`RelatedEnd.ValidateLoad`メソッドことを確認します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-222">The `RelatedEnd.ValidateLoad` method checks that:</span></span>

* <span data-ttu-id="7da1d-223">有効な<xref:System.Data.Objects.ObjectContext>存在します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-223">A valid <xref:System.Data.Objects.ObjectContext> exists.</span></span>
* <span data-ttu-id="7da1d-224">エンティティが含まれていない、<xref:System.Data.EntityState.Deleted>状態。</span><span class="sxs-lookup"><span data-stu-id="7da1d-224">The entity isn't in a <xref:System.Data.EntityState.Deleted> state.</span></span>
* <span data-ttu-id="7da1d-225"><xref:System.Data.Objects.MergeOption> <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>あります<xref:System.Data.Objects.MergeOption.NoTracking>ソース エンティティが場合にのみ<xref:System.Data.Objects.MergeOption.NoTracking>します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-225"><xref:System.Data.Objects.MergeOption> for <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> must be <xref:System.Data.Objects.MergeOption.NoTracking> if and only if the source entity was <xref:System.Data.Objects.MergeOption.NoTracking>.</span></span> <span data-ttu-id="7da1d-226">他のソース エンティティが取得された場合<xref:System.Data.Objects.MergeOption>、 <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption>以外は、 <xref:System.Data.Objects.MergeOption.NoTracking> (など、エンティティが読み込まれていると<xref:System.Data.Objects.MergeOption.OverwriteChanges>と<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>オプションは、 <xref:System.Data.Objects.MergeOption.AppendOnly>).</span><span class="sxs-lookup"><span data-stu-id="7da1d-226">If the source entity was retrieved with any other <xref:System.Data.Objects.MergeOption>, the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> <xref:System.Data.Objects.MergeOption> can be anything but <xref:System.Data.Objects.MergeOption.NoTracking> (for example, the entity could have been loaded with <xref:System.Data.Objects.MergeOption.OverwriteChanges> and the <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> option can be <xref:System.Data.Objects.MergeOption.AppendOnly>).</span></span>
* <span data-ttu-id="7da1d-227">場合`mergeOption`は<xref:System.Data.Objects.MergeOption.NoTracking>、<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>既に読み込まれたエンティティで呼び出されないと<xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A>空でない、not 追跡で呼び出されない<xref:System.Data.Objects.DataClasses.RelatedEnd>します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-227">If `mergeOption` is <xref:System.Data.Objects.MergeOption.NoTracking>, <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on an already loaded entity and <xref:System.Data.Objects.DataClasses.RelatedEnd.Load%2A> isn't called on a non-empty, not-tracked <xref:System.Data.Objects.DataClasses.RelatedEnd>.</span></span>
  
 <span data-ttu-id="7da1d-228">コレクション内のオブジェクトに既に読み込まれるときに、 <xref:System.Data.Objects.ObjectContext>、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>メソッドの適用、<xref:System.Data.Objects.MergeOption>で指定された、`mergeOption`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7da1d-228">When objects in the collection are already loaded into the <xref:System.Data.Objects.ObjectContext>, the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method enforces the <xref:System.Data.Objects.MergeOption> specified by the `mergeOption` parameter.</span></span> <span data-ttu-id="7da1d-229">詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-229">For more information, see [Identity Resolution, State Management, and Change Tracking](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0).</span></span>  
  
 <span data-ttu-id="7da1d-230">関連オブジェクトを明示的に読み込むを呼び出す必要があります、`Load`ナビゲーション プロパティによって返される関連 end に対してメソッド。</span><span class="sxs-lookup"><span data-stu-id="7da1d-230">To explicitly load related objects, you must call the `Load` method on the related end returned by the navigation property.</span></span> <span data-ttu-id="7da1d-231">一対多リレーションシップでは、呼び出し、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>メソッド<xref:System.Data.Objects.DataClasses.EntityCollection%601>します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-231">For a one-to-many relationship, call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method on <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="7da1d-232">一対一のリレーションシップを呼び出して、<xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A>で<xref:System.Data.Objects.DataClasses.EntityReference%601>します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-232">For a one-to-one relationship, call the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A> on <xref:System.Data.Objects.DataClasses.EntityReference%601>.</span></span> <span data-ttu-id="7da1d-233">これにより、関連オブジェクト データがオブジェクト コンテキストに読み込まれます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-233">This loads the related object data into the object context.</span></span> <span data-ttu-id="7da1d-234">使用して、返される結果のコレクションを列挙することができます、`foreach`ループ (`For Each...Next` Visual Basic で) 条件付きで呼び出すと、`Load`メソッド<xref:System.Data.Objects.DataClasses.EntityReference%601>と<xref:System.Data.Objects.DataClasses.EntityCollection%601>結果内の各エンティティのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="7da1d-234">You can enumerate through the collection of returned results using a `foreach` loop (`For Each...Next` in Visual Basic) and conditionally call the `Load` method on <xref:System.Data.Objects.DataClasses.EntityReference%601> and <xref:System.Data.Objects.DataClasses.EntityCollection%601> properties for each entity in the results.</span></span>  
  
 <span data-ttu-id="7da1d-235"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A>メソッドの関連するオブジェクトからデータ ソースからのかどうか読み込みます<xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A>は`true`します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-235">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method loads related objects from the data source whether or not <xref:System.Data.Objects.DataClasses.RelatedEnd.IsLoaded%2A> is `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7da1d-236"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> (C#) または `foreach` (Visual Basic) 列挙で、`For Each` メソッドを呼び出すと、Object Services は新たにデータ リーダーを開こうとします。</span><span class="sxs-lookup"><span data-stu-id="7da1d-236">When you call the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A> method during a `foreach` (C#) or `For Each` (Visual Basic) enumeration, Object Services tries to open a new data reader.</span></span> <span data-ttu-id="7da1d-237">この操作は、接続文字列で `multipleactiveresultsets=true` を指定して複数のアクティブな結果セットを有効にしていない限り失敗します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-237">This operation will fail unless you have enabled multiple active results sets by specifying `multipleactiveresultsets=true` in the connection string.</span></span> <span data-ttu-id="7da1d-238">クエリの結果は、<xref:System.Collections.Generic.List%601> コレクションに読み込むこともできます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-238">You can also load the result of the query into a <xref:System.Collections.Generic.List%601> collection.</span></span> <span data-ttu-id="7da1d-239">この場合、データ リーダーが閉じ、コレクションを列挙して参照オブジェクトを読み込むことができます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-239">This closes the data reader and enables you to enumerate over the collection to load referenced objects.</span></span>  
  
 <span data-ttu-id="7da1d-240"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> メソッドは <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> メソッドと同期しています。</span><span class="sxs-lookup"><span data-stu-id="7da1d-240">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Load%2A?displayProperty=nameWithType> method is synchronized with the <xref:System.Data.Objects.DataClasses.EntityReference%601.Load%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-241">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-241">This example is based on the .</span></span> <span data-ttu-id="7da1d-242">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-242">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-243">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-243">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-244">この例では、`SalesOrderHeader` エンティティに関連付けられている `Contact` オブジェクトを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-244">This example loads the related `SalesOrderHeader` objects for the `Contact` entity.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithload)]
 [!code-vb[DP ObjectServices Concepts#QueryWithLoad](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithload)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCollectionDeserialized">
      <MemberSignature Language="C#" Value="public void OnCollectionDeserialized (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnCollectionDeserialized(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnCollectionDeserialized(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnCollectionDeserialized (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnCollectionDeserialized(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnCollectionDeserialized : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnCollectionDeserialized context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnDeserialized</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="7da1d-245">The streaming context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-245">The streaming context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-246">Used internally to deserialize entity objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-246">Used internally to deserialize entity objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnSerializing">
      <MemberSignature Language="C#" Value="public void OnSerializing (System.Runtime.Serialization.StreamingContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void OnSerializing(valuetype System.Runtime.Serialization.StreamingContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.OnSerializing(System.Runtime.Serialization.StreamingContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub OnSerializing (context As StreamingContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void OnSerializing(System::Runtime::Serialization::StreamingContext context);" />
      <MemberSignature Language="F#" Value="member this.OnSerializing : System.Runtime.Serialization.StreamingContext -&gt; unit" Usage="entityCollection.OnSerializing context" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Runtime.Serialization.OnSerializing</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Runtime.Serialization.StreamingContext" />
      </Parameters>
      <Docs>
        <param name="context">
          <span data-ttu-id="7da1d-247">The streaming context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-247">The streaming context.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-248">Used internally to serialize entity objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-248">Used internally to serialize entity objects.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public bool Remove (TEntity entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Remove(!TEntity entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.Remove(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Remove (entity As TEntity) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Remove(TEntity entity);" />
      <MemberSignature Language="F#" Value="override this.Remove : 'Entity -&gt; bool" Usage="entityCollection.Remove entity" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.ICollection`1.Remove(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="TEntity" />
      </Parameters>
      <Docs>
        <param name="entity">
          <span data-ttu-id="7da1d-249">The object to remove from the collection.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-249">The object to remove from the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="7da1d-250">Removes an object from the collection and marks the relationship for deletion.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-250">Removes an object from the collection and marks the relationship for deletion.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-251">
            <see langword="true" /> if item was successfully removed; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-251">
              <see langword="true" /> if item was successfully removed; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-252"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> メソッドでは、コレクションから削除されるオブジェクトとソース オブジェクトの間のリレーションシップも削除されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-252">The <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method also deletes the relationship between the source object and the object being removed from the collection.</span></span> <span data-ttu-id="7da1d-253">リレーションシップに参照整合性制約がある場合に依存オブジェクトで <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> メソッドを呼び出すと、そのリレーションシップと依存オブジェクトの両方が削除対象としてマークされます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-253">If the relationship has a referential integrity constraint, calling the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method on a dependent object marks both the relationship and the dependent object for deletion.</span></span> <span data-ttu-id="7da1d-254">これは、その制約により、依存オブジェクトは親とのリレーションシップがないと存在できないからです。</span><span class="sxs-lookup"><span data-stu-id="7da1d-254">This occurs because the constraint indicates that the dependent object cannot exist without a relationship to the parent.</span></span> <span data-ttu-id="7da1d-255">詳細については、次を参照してください。 [ReferentialConstraint 要素 (CSDL)](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-255">For more information, see [ReferentialConstraint Element (CSDL)](http://msdn.microsoft.com/library/24f96a80-85b5-4f2e-a14c-0e3eb6796fa0).</span></span>  
  
 <span data-ttu-id="7da1d-256"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> 返します`false`コレクションで指定したオブジェクトがありませんが。</span><span class="sxs-lookup"><span data-stu-id="7da1d-256"><xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> returns `false` when the specified object is not in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7da1d-257">この例がに基づいて、します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-257">This example is based on the .</span></span> <span data-ttu-id="7da1d-258">この例のコードを実行するには、あらかじめプロジェクトに AdventureWorks Sales Model を追加し、Entity Framework を使用するようにプロジェクトを構成しておく必要があります。</span><span class="sxs-lookup"><span data-stu-id="7da1d-258">To run the code in this example, you must have already added the AdventureWorks Sales Model to your project and configured your project to use the Entity Framework.</span></span> <span data-ttu-id="7da1d-259">これを行うには、完了手順では、[方法: Entity Framework プロジェクトを手動で構成](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e)と[方法: モデル ファイルとマッピング ファイルを手動で定義](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-259">To do this, complete the procedures in [How to: Manually Configure an Entity Framework Project](http://msdn.microsoft.com/library/73f6ae1d-b3b2-4577-aebd-ad5a75954e9e) and [How to: Manually Define the Model and Mapping Files](http://msdn.microsoft.com/library/d4fd6864-f2a1-48f0-aa32-1e318775a99a).</span></span>  
  
 <span data-ttu-id="7da1d-260">この例では、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> メソッドを使用してコレクションからエンティティを 1 つ削除し、<xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> メソッドを使用してそのオブジェクトがコレクションから削除されたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-260">This example uses the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Remove%2A> method to remove one of the entities from the collection and then calls the <xref:System.Data.Objects.DataClasses.EntityCollection%601.Contains%2A> method to determine whether the object was removed from the collection.</span></span>  
  
 [!code-csharp[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#irelatedend_add)]
 [!code-vb[DP ObjectServices Concepts#IRelatedEnd_Add](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#irelatedend_add)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="7da1d-261">
            <paramref name="entity" /> object is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-261">
              <paramref name="entity" /> object is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="7da1d-262">The <paramref name="entity" /> object is not attached to the same object context.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-262">The <paramref name="entity" /> object is not attached to the same object context.</span>
          </span>
          <span data-ttu-id="7da1d-263">-or-  The <paramref name="entity" /> object does not have a valid relationship manager.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-263">-or-  The <paramref name="entity" /> object does not have a valid relationship manager.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-264">Returns an enumerator that is used to iterate through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-264">Returns an enumerator that is used to iterate through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-265">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-265">An <see cref="T:System.Collections.IEnumerator" /> that iterates through the set of values cached by <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.ContainsListCollection">
      <MemberSignature Language="C#" Value="bool System.ComponentModel.IListSource.ContainsListCollection { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#ContainsListCollection" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property ContainsListCollection As Boolean Implements IListSource.ContainsListCollection" />
      <MemberSignature Language="C++ CLI" Value="property bool System.ComponentModel.IListSource.ContainsListCollection { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Data.Objects.DataClasses.EntityCollection&lt;'Entity (requires 'Entity : null)&gt;.System.ComponentModel.IListSource.ContainsListCollection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-266">Gets a value that indicates whether the related entity collection consists of collection objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-266">Gets a value that indicates whether the related entity collection consists of collection objects.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="7da1d-267">このプロパティは常に返します<see langword="false" />ため、<see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" />オブジェクトとコレクションではなくが含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-267">This property always returns <see langword="false" /> because the <see cref="T:System.Data.Objects.DataClasses.EntityCollection`1" /> contains objects and not collections.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-268">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="7da1d-268">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7da1d-269">これは、<xref:System.Data.Objects.DataClasses.EntityCollection%601> のインスタンスが <xref:System.ComponentModel.IListSource> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-269">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.ComponentModel.IListSource.GetList">
      <MemberSignature Language="C#" Value="System.Collections.IList IListSource.GetList ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IList System.ComponentModel.IListSource.GetList() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.DataClasses.EntityCollection`1.System#ComponentModel#IListSource#GetList" />
      <MemberSignature Language="VB.NET" Value="Function GetList () As IList Implements IListSource.GetList" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IList ^ System.ComponentModel.IListSource.GetList() = System::ComponentModel::IListSource::GetList;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IList</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="7da1d-270">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-270">Returns the collection as an <see cref="T:System.Collections.IList" /> used for data binding.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="7da1d-271">An <see cref="T:System.Collections.IList" /> of entity objects.</span>
          <span class="sxs-lookup">
            <span data-stu-id="7da1d-271">An <see cref="T:System.Collections.IList" /> of entity objects.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7da1d-272">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="7da1d-272">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="7da1d-273">これは、<xref:System.Data.Objects.DataClasses.EntityCollection%601> のインスタンスが <xref:System.ComponentModel.IListSource> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-273">It can be used only when the <xref:System.Data.Objects.DataClasses.EntityCollection%601> instance is cast to an <xref:System.ComponentModel.IListSource> interface.</span></span>  
  
 <span data-ttu-id="7da1d-274">このメソッドを使用すると、<xref:System.Data.Objects.DataClasses.EntityCollection%601> にデータをバインドできます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-274">This method enables data binding to an <xref:System.Data.Objects.DataClasses.EntityCollection%601>.</span></span> <span data-ttu-id="7da1d-275">これはコレクションにバインドされたコントロールによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7da1d-275">It is called by the control bound to the collection.</span></span> <span data-ttu-id="7da1d-276">詳細については、次を参照してください。[コントロールへのオブジェクトのバインド](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b)します。</span><span class="sxs-lookup"><span data-stu-id="7da1d-276">For more information, see [Binding Objects to Controls](http://msdn.microsoft.com/library/2fd34855-929b-4303-a91e-4bb69d958f2b).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>