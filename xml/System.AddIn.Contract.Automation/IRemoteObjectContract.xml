<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRemoteObjectContract.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5b6589556a020e15a686acb1a793444ff0fe196df.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">b6589556a020e15a686acb1a793444ff0fe196df</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
          <source>Defines a contract that components can use to access an object across application domain and process boundaries.</source>
          <target state="translated">コンポーネントがアプリケーション ドメインやプロセスの境界を越えてオブジェクトにアクセスする際に使用できるコントラクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
          <source>When you implement <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> on a type, components can use the contract to access type information for objects of the type.</source>
          <target state="translated">実装する場合<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>型に、コンポーネントは、コントラクトを使用して、型のオブジェクトの型情報にアクセスします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
          <source>Components access type information by calling the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method to obtain an <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>.</source>
          <target state="translated">コンポーネントを呼び出して型情報にアクセス、<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph>を取得するメソッド、<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteObjectContract">
          <source>The <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph> interface defines a contract that components can use to access specific type and member information, and to invoke members.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>インターフェイスは、特定の型およびメンバーについては、アクセスし、メンバーを呼び出すコンポーネントが使用できるコントラクトを定義します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that specifies the type of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> の型を指定する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that specifies the type of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> の型を指定する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType">
          <source>Use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method to access the members of the remote object that the current <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> identifies.</source>
          <target state="translated">使用して、 <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> 、リモートのメンバーにアクセスするメソッドがオブジェクトを現在<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>を識別します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>The canonical name of the type to cast the object to.</source>
          <target state="translated">オブジェクトのキャスト先となる型の標準名。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>Casts the object identified by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> to a specified type.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> によって識別されるオブジェクトを指定された型にキャストします。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the result of the cast operation.</source>
          <target state="translated">キャスト操作の結果を表す <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>A canonical name is a globally unique name, such as a GUID.</source>
          <target state="translated">正規の名前は、GUID などのグローバルに一意の名前です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended.</source>
          <target state="translated">形式の文字列<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>アセンブリ名<ept id="p1">*</ept>&gt;、 <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完全修飾型名<ept id="p2">*</ept>&gt; をお勧めします。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>An example of the recommended format of a canonical name is "ShapeApp, Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application".</source>
          <target state="translated">正規名の推奨される形式の例は、"ShapeApp、Microsoft.VisualStudio.Tools.Applications.Samples.ShapeApp.Application"です。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>The canonical name for a type cannot change after a type is published in a component.</source>
          <target state="translated">型の正規名は、コンポーネントの型がパブリッシュされた後に変更できません。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>Changing the canonical name of a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">既に型を使用しているクライアントとの間のコンポーネント区切り互換性の将来のバージョンでの型の正規名を変更します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast(System.String)">
          <source>It is recommended that <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A&gt;</ph> implementations throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> if the cast operation fails.</source>
          <target state="translated">推奨<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.RemoteCast%2A&gt;</ph>実装スロー、<ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>キャスト操作が失敗した場合。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>