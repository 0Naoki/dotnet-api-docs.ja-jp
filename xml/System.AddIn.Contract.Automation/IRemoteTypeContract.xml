<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IRemoteTypeContract.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5e828623e05f0027402df3db956a017bc005a571e.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">e828623e05f0027402df3db956a017bc005a571e</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>Defines a contract that components can use to access type information and invoke members across application domain and process boundaries.</source>
          <target state="translated">コンポーネントがアプリケーション ドメインやプロセスの境界を越えて型情報にアクセスしたりメンバーを呼び出したりする際に使用できるコントラクトを定義します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get an <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>, components can call the <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph> method of an object that implements the <ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph> interface.</source>
          <target state="translated">取得する、 <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract&gt;</ph>、コンポーネントを呼び出すことができます、<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract.GetRemoteType%2A&gt;</ph>を実装するオブジェクトのメソッド、<ph id="ph3">&lt;xref:System.AddIn.Contract.Automation.IRemoteObjectContract&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the type of an object, components call the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph> method.</source>
          <target state="translated">オブジェクトの型に関する情報を取得するコンポーネントを呼び出す、<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To get information about the members of an object, components call one of the methods that returns information about a particular kind of member.</source>
          <target state="translated">オブジェクトのメンバーに関する情報を取得するには、コンポーネントは、メンバーの特定の種類に関する情報を返すメソッドのいずれかを呼び出します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>For example, to get information about the events of an object, components can use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph> method.</source>
          <target state="translated">たとえば、オブジェクトのイベントに関する情報を取得するコンポーネント際に使用、<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.AddIn.Contract.Automation.IRemoteTypeContract">
          <source>To invoke a member of an object, components use the <ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph> method.</source>
          <target state="translated">オブジェクトのメンバーの呼び出し、コンポーネントを使用して、<ph id="ph1">&lt;xref:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Returns the canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> の標準名を返します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> の標準名。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>The canonical name is a globally unique name, such as a fully qualified type name.</source>
          <target state="translated">正規の名前は、完全修飾型名など、グローバルに一意の名前です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">形式の文字列<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>アセンブリ名<ept id="p1">*</ept>&gt;、 <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完全修飾型名<ept id="p2">*</ept>&gt; マネージ型のことをお勧めします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">形式の文字列<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>タイプ ライブラリ名<ept id="p1">*</ept>&gt;、 <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>型名<ept id="p2">*</ept>&gt; COM 型のことをお勧めします。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">型がパブリッシュされた後は、型の正規の名前は変わりません。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetCanonicalName">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">既に型を使用しているクライアントとの間のコンポーネント区切り互換性の将来のバージョンにある種類の正規名を変更します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>The name of an event of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> のイベント名。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the event.</source>
          <target state="translated">イベントの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to a specified event of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> の指定されたイベントへのアクセスを提供する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvent(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> that provides access to the specified event, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定されたイベントが見つかった場合は、そのイベントへのアクセスを提供する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the events.</source>
          <target state="translated">イベントの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the specified events of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> の指定されたイベントへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetEvents(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph> objects that provides access to the events that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated">指定されたバインディング制約に一致したイベントへのアクセスを提供する、<ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteEventInfoContract" /&gt;</ph>。それ以外の場合は空の <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>The name of a field of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> のフィールド名。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the field.</source>
          <target state="translated">フィールドの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to a specified field of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> の指定されたフィールドへのアクセスを提供する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetField(System.String,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> that provides access to the specified field, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定されたフィールドが見つかった場合は、そのフィールドへのアクセスを提供する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the fields.</source>
          <target state="translated">フィールドの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the specified fields of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> の指定されたフィールドへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetFields(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph> objects that provides access to the fields that match the specified binding constraints; otherwise, an empty <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>.</source>
          <target state="translated">指定されたバインディング制約に一致したフィールドへのアクセスを提供する、<ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteFieldInfoContract" /&gt;</ph>。それ以外の場合は空の <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>The canonical name of an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> によって実装されたインターフェイスの標準名。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Returns an interface that is implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> によって実装されたインターフェイスを返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that represents the interface with the specified canonical name that this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> implements.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> を実装する、指定された標準名のインターフェイスを表す <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source><ph id="ph1">&lt;see langword="null" /&gt;</ph> if this <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> does not implement an interface with the specified canonical name.</source>
          <target state="translated">この <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> が、指定された標準名のインターフェイスを実装していなかった場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>A canonical name is a globally unique name, such as a GUID.</source>
          <target state="translated">正規の名前は、GUID などのグローバルに一意の名前です。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>assembly name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>fully qualified type name<ept id="p2">*</ept>&gt; are recommended for managed types.</source>
          <target state="translated">形式の文字列<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>アセンブリ名<ept id="p1">*</ept>&gt;、 <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>完全修飾型名<ept id="p2">*</ept>&gt; マネージ型のことをお勧めします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Strings in the format <ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>type library name<ept id="p1">*</ept>&gt;, <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>type name<ept id="p2">*</ept>&gt; are recommended for COM types.</source>
          <target state="translated">形式の文字列<ph id="ph1">\&lt;</ph><bpt id="p1">*</bpt>タイプ ライブラリ名<ept id="p1">*</ept>&gt;、 <ph id="ph2">\&lt;</ph><bpt id="p2">*</bpt>型名<ept id="p2">*</ept>&gt; COM 型のことをお勧めします。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Do not change the canonical name for a type after the type is published.</source>
          <target state="translated">型がパブリッシュされた後は、型の正規の名前は変わりません。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterface(System.String)">
          <source>Changing the canonical name for a type in a future version of a component breaks compatibility between the component and clients that are already using the type.</source>
          <target state="translated">既に型を使用しているクライアントとの間のコンポーネント区切り互換性の将来のバージョンにある種類の正規名を変更します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>Returns the interfaces that are implemented by the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> によって実装されたインターフェイスを返します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetInterfaces">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent all the interfaces that are implemented by the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> で実装されているすべてのインターフェイスを表す <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name of a member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> のメンバー名。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>The name can represent multiple members that have the same name.</source>
          <target state="translated">この名前は、同じ名前の複数のメンバーを表す場合があります。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> values that specifies the members to search for.</source>
          <target state="translated">検索対象のメンバーを指定する <ph id="ph1">&lt;see cref="T:System.Reflection.MemberTypes" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated">メンバーの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the specified members of the specified member type in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>, using the specified binding constraints.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> について、指定されたメンバー名、メンバー型、およびバインディング制約を満たしたすべてのメンバーへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that represent the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that have the specified name and that meet the criteria specified by the <ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> and <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> parameters.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> のメンバーのうち、指定された名前を持ち、かつ、<ph id="ph4">&lt;paramref name="memberTypes" /&gt;</ph> パラメーターおよび <ph id="ph5">&lt;paramref name="bindingFlags" /&gt;</ph> パラメーターで指定された基準を満たしているメンバーを表す <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)">
          <source>This method can be used to get a single member, or to get multiple members that have the same name, such as constructor or method overloads.</source>
          <target state="translated">1 つのメンバーを取得するか、コンス トラクターまたはメソッドのオーバー ロードなど、同じ名前を持つ複数のメンバーを取得する、このメソッドを使用できます。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the members.</source>
          <target state="translated">メンバーの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to all the members in the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that match the specified binding constraints.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> について、指定されたバインディング制約に一致するすべてのメンバーへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMembers(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> objects that provides access to the members of the current <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that meet the specified binding constraints.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> のメンバーのうち、指定されたバインディング制約を満たしたメンバーへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.IContract" /&gt;</ph> オブジェクトの <ph id="ph3">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a method of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> のメソッド名。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated">メソッドの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the number, order, and type of the parameters for the method to get.</source>
          <target state="translated">取得するメソッドのパラメーターの数、順序、および型を表す <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to a specified method of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> の指定されたメソッドへのアクセスを提供する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethod(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> that provides access to the specified method, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定されたメソッドが見つかった場合は、そのメソッドへのアクセスを提供する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the methods.</source>
          <target state="translated">メソッドの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the specified methods of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> の指定されたメソッドへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetMethods(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph> objects that provides access to the methods that match the specified binding constraints.</source>
          <target state="translated">指定されたバインディング制約に一致するメソッドへのアクセスを提供する、<ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteMethodInfoContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the properties.</source>
          <target state="translated">プロパティの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>Returns a collection of <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the specified properties of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> の指定されたプロパティへのアクセスを提供する、<ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> オブジェクトのコレクションを返します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperties(System.Reflection.BindingFlags)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> objects that provides access to the properties that match the specified binding constraints.</source>
          <target state="translated">指定されたバインディング制約に一致するプロパティへのアクセスを提供する、<ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>The name of a property of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> のプロパティ名。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the method.</source>
          <target state="translated">メソッドの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> that specifies the return type of the property.</source>
          <target state="translated">プロパティの戻り値の型を指定する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> of <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> objects that represent the parameters for the specified property.</source>
          <target state="translated">指定されたプロパティのパラメーターを表す <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IArrayContract`1" /&gt;</ph> オブジェクトの <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>Returns an <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to a specified property of the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> の指定されたプロパティへのアクセスを提供する <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetProperty(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteTypeContract,System.AddIn.Contract.Collections.IArrayContract{System.AddIn.Contract.Automation.IRemoteTypeContract})">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph> that provides access to the specified property, if found; otherwise, <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">指定されたプロパティが見つかった場合は、そのプロパティへのアクセスを提供する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemotePropertyInfoContract" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>Returns type information about the object that the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> によって識別されるオブジェクトの型情報を返します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.GetTypeData">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph> that contains information about the object that the current <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> identifies.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.RemoteTypeData" /&gt;</ph> によって識別されるオブジェクトの情報を保持している <ph id="ph2">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The name of the member to invoke.</source>
          <target state="translated">呼び出すメンバーの名前。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A bitwise combination of the <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> values that specifies how to search for the member.</source>
          <target state="translated">メンバーの検索方法を指定する <ph id="ph1">&lt;see cref="T:System.Reflection.BindingFlags" /&gt;</ph> 値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph> on which to invoke the specified member.</source>
          <target state="translated">指定したメンバーの呼び出し元となる <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteObjectContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph> that contains the arguments to pass to the member to invoke.</source>
          <target state="translated">呼び出すメンバーに渡される引数を格納する <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Collections.IRemoteArgumentArrayContract" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>An array of Boolean values that indicate whether each of the <bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> values is passed by reference.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>remoteArgs<ept id="p1">&lt;/c&gt;</ept> の各値が参照渡しされるかどうかを示すブール値の配列。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A locale ID to use for locale-specific conversions that might be performed by the member being invoked.</source>
          <target state="translated">呼び出し中のメンバーによって実行される可能性のある、ロケール固有の変換に使用するロケール ID。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Invokes the specified member of the current <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.Automation.IRemoteTypeContract" /&gt;</ph> の指定されたメンバーを呼び出します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>A <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph> that represents the return value of the invoked member.</source>
          <target state="translated">呼び出されたメンバーの戻り値を表す <ph id="ph1">&lt;see cref="T:System.AddIn.Contract.RemoteArgument" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The <ph id="ph1">`remoteArgModifiers`</ph> parameter is used only for components that are written using COM.</source>
          <target state="translated"><ph id="ph1">`remoteArgModifiers`</ph>のみが書き込まれる、COM を使用するコンポーネントのパラメーターを使用</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>Each value in the <ph id="ph1">`remoteArgModifiers`</ph> parameter indicates whether the corresponding value in the <ph id="ph2">`remoteArgs`</ph> parameter is passed by reference.</source>
          <target state="translated">内の各値、<ph id="ph1">`remoteArgModifiers`</ph>パラメーターが示すかどうかの値で、対応する、<ph id="ph2">`remoteArgs`</ph>パラメーターは参照によって渡されます。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>The length of <ph id="ph1">`remoteArgModifiers`</ph> should be the same as the length of <ph id="ph2">`remoteArgs`</ph>.</source>
          <target state="translated">長さ<ph id="ph1">`remoteArgModifiers`</ph>の長さと同じである必要があります<ph id="ph2">`remoteArgs`</ph>です。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.AddIn.Contract.Automation.IRemoteTypeContract.InvokeMember(System.String,System.Reflection.BindingFlags,System.AddIn.Contract.Automation.IRemoteObjectContract,System.AddIn.Contract.Collections.IRemoteArgumentArrayContract,System.Boolean[],System.Int32)">
          <source>If you pass <ph id="ph1">`null`</ph> for <ph id="ph2">`remoteArgModifiers`</ph>, this method uses default logic to determine whether an argument is passed by reference.</source>
          <target state="translated">渡す場合<ph id="ph1">`null`</ph>の<ph id="ph2">`remoteArgModifiers`</ph>、このメソッドでは、既定のロジックを使用して、引数が参照によって渡されるかどうかを判断します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>