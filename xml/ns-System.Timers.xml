<Namespace Name="System.Timers">
  <Metadata><Meta Name="ms.openlocfilehash" Value="16e8a11b0b2e9a1da17eb506a6408b9e4ee97265" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70417078" /></Metadata><Docs>
    <summary><span data-ttu-id="74000-101"><see cref="N:System.Timers" /> 名前空間には、指定した間隔でイベントを発生させることができる <see cref="T:System.Timers.Timer" /> コンポーネントが用意されています。</span><span class="sxs-lookup"><span data-stu-id="74000-101">The <see cref="N:System.Timers" /> namespace provides the <see cref="T:System.Timers.Timer" /> component, which allows you to raise an event on a specified interval.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="74000-102">コンポーネントはサーバーベースのタイマーで、アプリケーションで<xref:System.Timers.Timer.Elapsed>イベントが発生する定期的な間隔を指定できます。 <xref:System.Timers.Timer></span><span class="sxs-lookup"><span data-stu-id="74000-102">The <xref:System.Timers.Timer> component is a server-based timer, which allows you to specify a recurring interval at which the <xref:System.Timers.Timer.Elapsed> event is raised in your application.</span></span> <span data-ttu-id="74000-103">その後、このイベントを処理して通常の処理を行うことができます。</span><span class="sxs-lookup"><span data-stu-id="74000-103">You can then handle this event to provide regular processing.</span></span> <span data-ttu-id="74000-104">たとえば、1日24時間、週7日、稼働状態を維持する必要がある重要なサーバーがあるとします。</span><span class="sxs-lookup"><span data-stu-id="74000-104">For example, suppose you have a critical server that must be kept running 24 hours a day, 7 days a week.</span></span> <span data-ttu-id="74000-105">を<xref:System.Timers.Timer>使用するサービスを作成して、サーバーを定期的にチェックし、システムが稼働していることを確認することができます。</span><span class="sxs-lookup"><span data-stu-id="74000-105">You could create a service that uses a <xref:System.Timers.Timer> to periodically check the server and ensure that the system is up and running.</span></span> <span data-ttu-id="74000-106">システムが応答していない場合、サービスはサーバーの再起動または管理者への通知を試みることができます。</span><span class="sxs-lookup"><span data-stu-id="74000-106">If the system is not responding, the service could attempt to restart the server or notify an administrator.</span></span>  
  
 <span data-ttu-id="74000-107">サーバーベース<xref:System.Timers.Timer>のは、マルチスレッド環境のワーカースレッドで使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="74000-107">The server-based <xref:System.Timers.Timer> is designed for use with worker threads in a multithreaded environment.</span></span> <span data-ttu-id="74000-108">サーバータイマーは、発生<xref:System.Timers.Timer.Elapsed>したイベントを処理するためにスレッド間を移動できます。その結果、イベントを発生させるときの Windows タイマーよりも精度が向上します。</span><span class="sxs-lookup"><span data-stu-id="74000-108">Server timers can move among threads to handle the raised <xref:System.Timers.Timer.Elapsed> event, resulting in more accuracy than Windows timers in raising the event on time.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
</Namespace>