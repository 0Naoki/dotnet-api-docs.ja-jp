<Type Name="ActionBlock&lt;TInput&gt;" FullName="System.Threading.Tasks.Dataflow.ActionBlock&lt;TInput&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="704b8294cab7368ca30be9734751b2f735b9a776" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606879" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ActionBlock&lt;TInput&gt; : System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ActionBlock`1&lt;TInput&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!TInput&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ActionBlock(Of TInput)&#xA;Implements ITargetBlock(Of TInput)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename TInput&gt;&#xA;public ref class ActionBlock sealed : System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;" />
  <TypeSignature Language="F#" Value="type ActionBlock&lt;'Input&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface ITargetBlock&lt;'Input&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="TInput" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="TInput">
      <span data-ttu-id="b745f-101">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> が動作するデータの型。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b745f-101">The type of data that this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> operates on.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="b745f-102">すべての受信データ要素の <see cref="T:System.Action`1" /> の指定されたデリゲートを呼び出すデータ フローのブロックを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b745f-102">Provides a dataflow block that invokes a provided <see cref="T:System.Action`1" /> delegate for every data element received.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
## Examples  
 <span data-ttu-id="b745f-103">次の例では、使用、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601>クラスのデータ フロー ブロックを使用していくつかの計算を実行して、計算を実行するために必要な経過時間を返します。</span><span class="sxs-lookup"><span data-stu-id="b745f-103">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> class to perform several computations using dataflow blocks, and returns the elapsed time required to perform the computations.</span></span> <span data-ttu-id="b745f-104">このコード例に示されている例の一部である、[する方法: データフロー ブロックで並列処理の次数を指定](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="b745f-104">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b745f-105">受信した各データ要素で呼び出す操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-105">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-106">指定したアクションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-106">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b745f-107">
            <paramref name="action" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-107">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; action" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b745f-108">受信した各データ要素で呼び出す操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-108">The action to invoke with each data element received.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-109">指定したアクションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-109">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b745f-110">
            <paramref name="action" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-110">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Action&lt;TInput&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Action`1&lt;!TInput&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Action{`0},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Action(Of TInput), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Action&lt;TInput&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Action&lt;'Input&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Action&lt;TInput&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b745f-111">受信した各データ要素で呼び出す操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-111">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="b745f-112">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> の構成に使用するオプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-112">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-113">指定したアクションと構成オプションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-113">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b745f-114">次の例を使用する方法を示しています、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29>を新規作成するコンス トラクター<xref:System.Threading.Tasks.Dataflow.ActionBlock%601>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b745f-114">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.%23ctor%28System.Action%7B%600%7D%2CSystem.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions%29> constructor to create a new <xref:System.Threading.Tasks.Dataflow.ActionBlock%601> object.</span></span> <span data-ttu-id="b745f-115">このコード例に示されている例の一部である、[する方法: データフロー ブロックで並列処理の次数を指定](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="b745f-115">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b745f-116">
            <paramref name="action" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-116">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b745f-117">または、<paramref name="dataflowBlockOptions" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-117">-or-  <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ActionBlock (Func&lt;TInput,System.Threading.Tasks.Task&gt; action, System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!TInput, class System.Threading.Tasks.Task&gt; action, class System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.#ctor(System.Func{`0,System.Threading.Tasks.Task},System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (action As Func(Of TInput, Task), dataflowBlockOptions As ExecutionDataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ActionBlock(Func&lt;TInput, System::Threading::Tasks::Task ^&gt; ^ action, System::Threading::Tasks::Dataflow::ExecutionDataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; : Func&lt;'Input, System.Threading.Tasks.Task&gt; * System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;" Usage="new System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt; (action, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="action" Type="System.Func&lt;TInput,System.Threading.Tasks.Task&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.ExecutionDataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="action">
          <span data-ttu-id="b745f-118">受信した各データ要素で呼び出す操作。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-118">The action to invoke with each data element received.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="b745f-119">この <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> の構成に使用するオプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-119">The options with which to configure this <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-120">指定したアクションと構成オプションを使用して、<see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-120">Initializes a new instance of the <see cref="T:System.Threading.Tasks.Dataflow.ActionBlock`1" /> class with the specified action and configuration options.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b745f-121">
            <paramref name="action" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-121">
              <paramref name="action" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="b745f-122">または、<paramref name="dataflowBlockOptions" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-122">-or-  <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="actionBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b745f-123">これ以上メッセージを受け付けまたは生成せず、延期メッセージを使用しないことをデータ フロー ブロックに通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-123">Signals to the dataflow block  that it shouldn't accept or produce any more messages and shouldn't consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b745f-124">後<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A>されたデータフロー ブロックで呼び出されると、そのブロックは完了 (ようにその<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A>タスクは、最終的な状態を入力) 以前使用可能なすべてのデータを処理した後です。</span><span class="sxs-lookup"><span data-stu-id="b745f-124">After <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> has been called on a dataflow block, that block will complete (so that its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state) after it has processed all previously available data.</span></span> <span data-ttu-id="b745f-125">このメソッドで発生すると、完了の待機はブロックされませんが、要求を開始します。</span><span class="sxs-lookup"><span data-stu-id="b745f-125">This method will not block waiting for completion to occur, but will initiate the request.</span></span> <span data-ttu-id="b745f-126">完了するまで待機が発生するを使用して、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b745f-126">To wait for completion to occur, use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b745f-127">次の例では、使用、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A>メソッドするべきではありません受け入れるまたは、これ以上メッセージを生成もより延期されたメッセージを使用するデータ フロー ブロックに通知します。</span><span class="sxs-lookup"><span data-stu-id="b745f-127">The following example shows the use of the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Complete%2A> method to signal to the dataflow block  that it shouldn't accept or produce any more messages nor consume any more postponed messages .</span></span> <span data-ttu-id="b745f-128">このコード例に示されている例の一部である、[する方法: データフロー ブロックで並列処理の次数を指定](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="b745f-128">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b745f-129">データ フロー ブロックの非同期操作と完了を表す <see cref="T:System.Threading.Tasks.Task" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-129">Gets a  <see cref="T:System.Threading.Tasks.Task" /> object that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b745f-130">完了したタスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-130">The completed task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b745f-131">データ フロー ブロックは、それが処理中でないメッセージと、これ以上メッセージが処理されることを保証がされているときに完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="b745f-131">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="b745f-132">返された<xref:System.Threading.Tasks.Task>関連するブロックが完了した場合は、完了した状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="b745f-132">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state  when the associated block has completed.</span></span> <span data-ttu-id="b745f-133">移行、<xref:System.Threading.Tasks.TaskStatus.RanToCompletion>ブロックには、データ フロー ブロックのに従って正常に処理が完了したときの状態がセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="b745f-133">It will transition to the <xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="b745f-134">移行、<xref:System.Threading.Tasks.TaskStatus.Faulted>状態、データ フロー ブロックが未処理の例外によって処理の途中で処理を完了に移行すると、<xref:System.Threading.Tasks.TaskStatus.Canceled>データ フロー ブロックの処理の途中で後に処理が完了したときの状態キャンセル要求を受信しています。</span><span class="sxs-lookup"><span data-stu-id="b745f-134">It will transition to the <xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the  <xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely after receiving a cancellation request.</span></span> <span data-ttu-id="b745f-135">タスクが完了した場合、<xref:System.Threading.Tasks.TaskStatus.Faulted>状態、その`Exception`プロパティから返される、<xref:System.AggregateException>を含む 1 つまたは複数の例外ブロックが失敗する原因となった例外。</span><span class="sxs-lookup"><span data-stu-id="b745f-135">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property returns an <xref:System.AggregateException> exception that contains one or more exceptions that caused the block to fail.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b745f-136">次の例を使用する方法を示しています、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A>ネットワークを通じて伝達されるまでのすべてのメッセージに対して待機するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b745f-136">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> property to wait for all messages to propagate through the network.</span></span> <span data-ttu-id="b745f-137">このコード例に示されている例の一部である、[する方法: データフロー ブロックで並列処理の次数を指定](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="b745f-137">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InputCount">
      <MemberSignature Language="C#" Value="public int InputCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 InputCount" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.ActionBlock`1.InputCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InputCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int InputCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.InputCount : int" Usage="System.Threading.Tasks.Dataflow.ActionBlock&lt;'Input&gt;.InputCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b745f-138">このブロックで処理するために待機している入力項目の数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-138">Gets the number of input items waiting to be processed by this block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b745f-139">このブロックで処理するために待機している入力項目の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-139">The number of input items waiting to be processed by this block.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b745f-140"><xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A>ブロックで現在処理されているすべての項目や、ブロックが既に処理されているすべての項目は含まれません。</span><span class="sxs-lookup"><span data-stu-id="b745f-140">The <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.InputCount%2A> does not include any items that are currently being processed by the block or any items that have already been processed by the block.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Post">
      <MemberSignature Language="C#" Value="public bool Post (TInput item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Post(!TInput item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.Post(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function Post (item As TInput) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Post(TInput item);" />
      <MemberSignature Language="F#" Value="member this.Post : 'Input -&gt; bool" Usage="actionBlock.Post item" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="TInput" />
      </Parameters>
      <Docs>
        <param name="item">
          <span data-ttu-id="b745f-141">ターゲットに提供される項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-141">The item being offered to the target.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-142">ターゲット データ フロー ブロックに項目をポストします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-142">Posts an item to the target dataflow block.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b745f-143">項目がデータフロー ブロックにポストされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-143">
              <see langword="true" /> if the item is posted to the dataflow block; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="b745f-144">次の例を使用する方法を示しています、<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A>ターゲット データ フロー ブロックに項目を投稿するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b745f-144">The following example shows how to use the <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Post%2A> method to post an item to the target dataflow block.</span></span> <span data-ttu-id="b745f-145">このコード例に示されている例の一部である、[する方法: データフロー ブロックで並列処理の次数を指定](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md)トピックです。</span><span class="sxs-lookup"><span data-stu-id="b745f-145">This code example is part of a larger example provided for the [How to: Specify the Degree of Parallelism in a Dataflow Block](~/docs/standard/parallel-programming/how-to-specify-the-degree-of-parallelism-in-a-dataflow-block.md) topic.</span></span>  
  
 [!code-csharp[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/csharp/VS_Snippets_Misc/tpldataflow_degreeofparallelism/cs/dataflowdegreeofparallelism.cs#2)]
 [!code-vb[TPLDataflow_DegreeOfParallelism#2](~/samples/snippets/visualbasic/VS_Snippets_Misc/tpldataflow_degreeofparallelism/vb/dataflowdegreeofparallelism.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="b745f-146">このエラーの原因となった例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-146">The exception that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-147">データフロー ブロックが違反状態で完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-147">Causes the dataflow block to complete in a faulted state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b745f-148">後<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A>されたデータフロー ブロックで呼び出されると、そのブロックは完了とその<xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A>タスクは、最終的な状態を入力します。</span><span class="sxs-lookup"><span data-stu-id="b745f-148">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete and its  <xref:System.Threading.Tasks.Dataflow.ActionBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="b745f-149">ブロックにエラーが発生、としてで、ブロックをキャンセルすると、バッファー内のメッセージ (未処理の入力メッセージと unoffered 出力メッセージ) が失われます。</span><span class="sxs-lookup"><span data-stu-id="b745f-149">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b745f-150">
            <paramref name="exception" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-150">
              <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;TInput&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, TInput messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !TInput messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!TInput&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;TInput&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As TInput, source As ISourceBlock(Of TInput), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of TInput).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;TInput&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, TInput messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;TInput&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;TInput&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="TInput" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;TInput&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="b745f-151">提供されるメッセージのヘッダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-151">The header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="b745f-152">提供されるメッセージの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-152">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="b745f-153">メッセージを伝えているデータフローのブロック。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-153">The dataflow block that is offering the message.</span>
          </span>
          <span data-ttu-id="b745f-154">
            <see langword="null" /> でもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-154">This may be <see langword="null" />.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="b745f-155">メッセージを使用するために、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> を返す前に <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> の呼び出し中に <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> を同期的に呼び出すようにターゲットに指示する場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-155">
              <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b745f-156">メッセージをデータ フローのブロックに提供し、メッセージを使用するか、または延期する機会を与えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-156">Offers a message to the dataflow block, and gives it the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b745f-157">提供されたメッセージのステータス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-157">The status of the offered message.</span>
          </span>
          <span data-ttu-id="b745f-158">メッセージがターゲットによって受け入れられた場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> が返されます。メッセージはターゲットに所有されるようになったので、ソースは提供されたメッセージを使用しないようにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-158">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="b745f-159">メッセージがターゲットによって延期された場合、ターゲットが後でメッセージの使用または予約を試みる可能性があることを示す通知として <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> が返されます。その間、ソースはそのメッセージを引き続き所有し、他のブロックに提供する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-159">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="b745f-160">ターゲットがメッセージを遅延するはずだったのに、ソースが <see langword="null" /> だった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-160">If the target would have otherwise postponed message, but source was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="b745f-161">ターゲットがメッセージを受け入れようとしたが、ソースが別のターゲットにメッセージを配信したか、単純に破棄したため、受け入れることができなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-161">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="b745f-162">ターゲットがメッセージを受け入れなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-162">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="b745f-163">ターゲットがメッセージを受け入れず、今後、このソースからの別のメッセージを受け入れない場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-163">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b745f-164">
            <paramref name="messageHeader" /> が無効です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-164">
              <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="b745f-165">または、<paramref name="consumeToAccept" /> は、<paramref name="source" /> の値が null 以外である場合にのみ <see langword="true" /> にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-165">-or- <paramref name="consumeToAccept" /> may be <see langword="true" /> only if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.ActionBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="actionBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b745f-166">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-166">Returns a string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b745f-167">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b745f-167">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b745f-168">このプロパティは、<xref:System.Object> から継承されています。</span><span class="sxs-lookup"><span data-stu-id="b745f-168">Inherited from <xref:System.Object>.</span></span> <span data-ttu-id="b745f-169">使用して、<xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A>オプション。</span><span class="sxs-lookup"><span data-stu-id="b745f-169">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>