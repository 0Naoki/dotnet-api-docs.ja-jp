<Type Name="BroadcastBlock&lt;T&gt;" FullName="System.Threading.Tasks.Dataflow.BroadcastBlock&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9f400ccf5fce9cd58a6827d264c907791c4dd243" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36606911" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class BroadcastBlock&lt;T&gt; : System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T&gt;, System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit BroadcastBlock`1&lt;T&gt; extends System.Object implements class System.Threading.Tasks.Dataflow.IDataflowBlock, class System.Threading.Tasks.Dataflow.IPropagatorBlock`2&lt;!T, !T&gt;, class System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1&lt;!T&gt;, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt;, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class BroadcastBlock(Of T)&#xA;Implements IPropagatorBlock(Of T, T), IReceivableSourceBlock(Of T), ISourceBlock(Of T), ITargetBlock(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class BroadcastBlock sealed : System::Threading::Tasks::Dataflow::IPropagatorBlock&lt;T, T&gt;, System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;T&gt;, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type BroadcastBlock&lt;'T&gt; = class&#xA;    interface IDataflowBlock&#xA;    interface IPropagatorBlock&lt;'T, 'T&gt;&#xA;    interface ISourceBlock&lt;'T&gt;&#xA;    interface ITargetBlock&lt;'T&gt;&#xA;    interface IReceivableSourceBlock&lt;'T&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
    <AssemblyVersion>4.6.0.0</AssemblyVersion>
    <AssemblyVersion>4.6.1.0</AssemblyVersion>
    <AssemblyVersion>4.6.2.0</AssemblyVersion>
    <AssemblyVersion>4.6.3.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IPropagatorBlock&lt;T,T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">
      <span data-ttu-id="31b1f-101">このデータフロー ブロックによりバッファリングされるデータの種類を指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31b1f-101">Specifies the type of the data buffered by this dataflow block.</span>
      </span>
    </typeparam>
    <summary>
      <span data-ttu-id="31b1f-102">一度に最大で 1 個の要素を格納し、各メッセージを受信した次のメッセージで上書きするバッファーを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="31b1f-102">Provides a buffer for storing at most one element at time, overwriting each message with the next as it arrives.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
[!INCLUDE [tpl-install-instructions](~/includes/tpl-install-instructions.md)]
  
 <span data-ttu-id="31b1f-103"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601> 一度に最大で 1 つの要素を公開します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-103"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601> exposes at most one element at a time.</span></span> <span data-ttu-id="31b1f-104">ただしとは異なり<xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601>、新しい要素が、ブロックに提供されるため、その要素が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="31b1f-104">However, unlike <xref:System.Threading.Tasks.Dataflow.WriteOnceBlock%601>, that element will be overwritten as new elements are provided to the block.</span></span> <span data-ttu-id="31b1f-105"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601> 現在の要素が、要素を上書きすることを許可する前に、リンクされたターゲットに放送されていることを確認します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-105"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601> ensures that the current element is broadcast to any linked targets before allowing the element to be overwritten.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BroadcastBlock (Func&lt;T,T&gt; cloningFunction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, !T&gt; cloningFunction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (cloningFunction As Func(Of T, T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BroadcastBlock(Func&lt;T, T&gt; ^ cloningFunction);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt; : Func&lt;'T, 'T&gt; -&gt; System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt;" Usage="new System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt; cloningFunction" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cloningFunction" Type="System.Func&lt;T,T&gt;" />
      </Parameters>
      <Docs>
        <param name="cloningFunction">
          <span data-ttu-id="31b1f-106">他のブロックに提供された場合、データを複製するために使用する関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-106">The function to use to clone the data when offered to other blocks.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-107">指定した複製関数を使用して、<see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> インスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-107">Initializes the <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> with the specified cloning function.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BroadcastBlock (Func&lt;T,T&gt; cloningFunction, System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Func`2&lt;!T, !T&gt; cloningFunction, class System.Threading.Tasks.Dataflow.DataflowBlockOptions dataflowBlockOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.#ctor(System.Func{`0,`0},System.Threading.Tasks.Dataflow.DataflowBlockOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BroadcastBlock(Func&lt;T, T&gt; ^ cloningFunction, System::Threading::Tasks::Dataflow::DataflowBlockOptions ^ dataflowBlockOptions);" />
      <MemberSignature Language="F#" Value="new System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt; : Func&lt;'T, 'T&gt; * System.Threading.Tasks.Dataflow.DataflowBlockOptions -&gt; System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt;" Usage="new System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt; (cloningFunction, dataflowBlockOptions)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="cloningFunction" Type="System.Func&lt;T,T&gt;" />
        <Parameter Name="dataflowBlockOptions" Type="System.Threading.Tasks.Dataflow.DataflowBlockOptions" />
      </Parameters>
      <Docs>
        <param name="cloningFunction">
          <span data-ttu-id="31b1f-108">他のブロックに提供された場合、データを複製するために使用する関数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-108">The function to use to clone the data when offered to other blocks.</span>
          </span>
        </param>
        <param name="dataflowBlockOptions">
          <span data-ttu-id="31b1f-109">この <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> の構成に使用するオプション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-109">The options with which to configure this  <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-110">指定した複製関数と <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" /> を使用して、<see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> インスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-110">Initializes the <see cref="T:System.Threading.Tasks.Dataflow.BroadcastBlock`1" /> with the specified cloning function and  <see cref="T:System.Threading.Tasks.Dataflow.DataflowBlockOptions" />.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-111">
            <paramref name="dataflowBlockOptions" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-111">The <paramref name="dataflowBlockOptions" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Complete">
      <MemberSignature Language="C#" Value="public void Complete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Complete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Complete" />
      <MemberSignature Language="VB.NET" Value="Public Sub Complete ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Complete();" />
      <MemberSignature Language="F#" Value="abstract member Complete : unit -&gt; unit&#xA;override this.Complete : unit -&gt; unit" Usage="broadcastBlock.Complete " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Complete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31b1f-112">これ以上メッセージを受け付けまたは生成せず、延期メッセージを使用しないことを <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> に通知します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-112">Signals to the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> that it should not accept nor produce any more messages nor consume any more postponed messages.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-113">後<xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Complete%2A>されましたデータフロー ブロックで呼び出されると、そのブロックが完了してその<xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A>タスクは、以前使用可能なすべてのデータを処理した後に、最終的な状態になる、します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-113">After <xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Complete%2A> has been called on a dataflow block, that block will complete, and its  <xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A> task will enter a final state after it has processed all previously available data.</span></span> <span data-ttu-id="31b1f-114"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Complete%2A> 発生すると、完了の待機をブロックしませんではなく、要求が開始されますが、実行すると、完了するまで待って、<xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A>タスクを使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="31b1f-114"><xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Complete%2A> will not block waiting for completion to occur, but rather will initiate the request; to wait for completion to occur, the <xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A> task may be used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Completion">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task Completion { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.Tasks.Task Completion" />
      <MemberSignature Language="DocId" Value="P:System.Threading.Tasks.Dataflow.BroadcastBlock`1.Completion" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Completion As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Threading::Tasks::Task ^ Completion { System::Threading::Tasks::Task ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Completion : System.Threading.Tasks.Task" Usage="System.Threading.Tasks.Dataflow.BroadcastBlock&lt;'T&gt;.Completion" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Threading.Tasks.Dataflow.IDataflowBlock.Completion</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="31b1f-115">データ フロー ブロックの非同期操作と完了を表す <see cref="T:System.Threading.Tasks.Task" /> を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-115">Gets a <see cref="T:System.Threading.Tasks.Task" /> that represents the asynchronous operation and completion of the dataflow block.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="31b1f-116">タスク。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-116">The task.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-117">データ フロー ブロックは、それが処理中でないメッセージと、これ以上メッセージが処理されることを保証がされているときに完了したと見なされます。</span><span class="sxs-lookup"><span data-stu-id="31b1f-117">A dataflow block is considered completed when it is not currently processing a message and when it has guaranteed that it will not process any more messages.</span></span> <span data-ttu-id="31b1f-118">返された<xref:System.Threading.Tasks.Task>関連するブロックが完了した場合は、完了した状態に遷移します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-118">The returned <xref:System.Threading.Tasks.Task> will transition to a completed state when the associated block has completed.</span></span> <span data-ttu-id="31b1f-119">移行、 <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.RanToCompletion>ブロックには、データ フロー ブロックのに従って正常に処理が完了したときの状態がセマンティクスを定義します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-119">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.RanToCompletion> state when the block completes its processing successfully according to the dataflow block’s defined semantics.</span></span> <span data-ttu-id="31b1f-120">移行、 <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Faulted>状態、データ フロー ブロックが未処理の例外によって処理の途中で処理を完了に移行すると、 <xref:System.Threading.Tasks.TaskStatus> <xref:System.Threading.Tasks.TaskStatus.Canceled>データ フロー ブロックが完了したときの状態キャンセル要求を受信したため途中で処理しています。</span><span class="sxs-lookup"><span data-stu-id="31b1f-120">It will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Faulted> state when the dataflow block has completed processing prematurely due to an unhandled exception, and it will transition to the <xref:System.Threading.Tasks.TaskStatus><xref:System.Threading.Tasks.TaskStatus.Canceled> state when the dataflow block has completed processing prematurely due to receiving a cancellation request.</span></span> <span data-ttu-id="31b1f-121">タスクが完了した場合、<xref:System.Threading.Tasks.TaskStatus.Faulted>状態、その`Exception`が返される、<xref:System.AggregateException>が失敗するブロックを引き起こした 1 つまたは複数の例外を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="31b1f-121">If the task completes in the <xref:System.Threading.Tasks.TaskStatus.Faulted> state, its `Exception` property will return an <xref:System.AggregateException> containing the one or more exceptions that caused the block to fail.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LinkTo">
      <MemberSignature Language="C#" Value="public IDisposable LinkTo (System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target, System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.IDisposable LinkTo(class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target, class System.Threading.Tasks.Dataflow.DataflowLinkOptions linkOptions) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Function LinkTo (target As ITargetBlock(Of T), linkOptions As DataflowLinkOptions) As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual IDisposable ^ LinkTo(System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target, System::Threading::Tasks::Dataflow::DataflowLinkOptions ^ linkOptions);" />
      <MemberSignature Language="F#" Value="abstract member LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable&#xA;override this.LinkTo : System.Threading.Tasks.Dataflow.ITargetBlock&lt;'T&gt; * System.Threading.Tasks.Dataflow.DataflowLinkOptions -&gt; IDisposable" Usage="broadcastBlock.LinkTo (target, linkOptions)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.LinkTo(System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Threading.Tasks.Dataflow.DataflowLinkOptions)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
        <Parameter Name="linkOptions" Type="System.Threading.Tasks.Dataflow.DataflowLinkOptions" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="31b1f-122">このソースの接続先の <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-122">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to which to connect this source.</span>
          </span>
        </param>
        <param name="linkOptions">
          <span data-ttu-id="31b1f-123">リンクを構成する <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-123">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowLinkOptions" /> instance that configures the link.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-124">指定した <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> に <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> をリンクします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-124">Links the  <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> to the specified  <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-125">Dispose の呼び出し時にソースをターゲットからリンク解除する IDisposable。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-125">An IDisposable that, upon calling Dispose, will unlink the source from the target.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-126">
            <paramref name="target" /> が null (Visual Basic の Nothing) または <paramref name="linkOptions" /> が null (Visual Basic の Nothing) です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-126">
              <paramref name="target" /> is null (Nothing in Visual Basic) or  <paramref name="linkOptions" /> is null (Nothing in Visual Basic).</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IDataflowBlock.Fault">
      <MemberSignature Language="C#" Value="void IDataflowBlock.Fault (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IDataflowBlock#Fault(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(Exception ^ exception) = System::Threading::Tasks::Dataflow::IDataflowBlock::Fault;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault(System.Exception)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="31b1f-127">このエラーの原因となった <see cref="T:System.Exception" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-127">The  <see cref="T:System.Exception" /> that caused the faulting.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-128">
            <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> を <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> 状態で完了するようにします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-128">Causes the <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> to complete in a <see cref="F:System.Threading.Tasks.TaskStatus.Faulted" /> state.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-129">後<xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A>されましたデータフロー ブロックで呼び出されると、そのブロックが完了してその<xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A>タスクは、最終的な状態を入力してください。</span><span class="sxs-lookup"><span data-stu-id="31b1f-129">After <xref:System.Threading.Tasks.Dataflow.IDataflowBlock.Fault%2A> has been called on a dataflow block, that block will complete, and its <xref:System.Threading.Tasks.Dataflow.BroadcastBlock%601.Completion%2A> task will enter a final state.</span></span> <span data-ttu-id="31b1f-130">ブロックにエラーが発生、としてで、ブロックをキャンセルすると、バッファー内のメッセージ (未処理の入力メッセージと unoffered 出力メッセージ) が失われます。</span><span class="sxs-lookup"><span data-stu-id="31b1f-130">Faulting a block, as with canceling a block, causes buffered messages (unprocessed input messages as well as unoffered output messages) to be lost.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-131">
            <paramref name="exception" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-131">The <paramref name="exception" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;.TryReceiveAll">
      <MemberSignature Language="C#" Value="bool IReceivableSourceBlock&lt;T&gt;.TryReceiveAll (out System.Collections.Generic.IList&lt;T&gt; items);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;.TryReceiveAll([out] class System.Collections.Generic.IList`1&lt;!T&gt;&amp; items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#IReceivableSourceBlock&lt;T&gt;#TryReceiveAll(System.Collections.Generic.IList{`0}@)" />
      <MemberSignature Language="VB.NET" Value="Function TryReceiveAll (ByRef items As IList(Of T)) As Boolean Implements IReceivableSourceBlock(Of T).TryReceiveAll" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.IReceivableSourceBlock&lt;T&gt;.TryReceiveAll([Runtime::InteropServices::Out] System::Collections::Generic::IList&lt;T&gt; ^ % items) = System::Threading::Tasks::Dataflow::IReceivableSourceBlock&lt;T&gt;::TryReceiveAll;" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="items" Type="System.Collections.Generic.IList&lt;T&gt;&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="items">
          <span data-ttu-id="31b1f-132">ソースから受信された項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-132">The items received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-133">使用可能なすべての項目を <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> から同期的に受け取ろうとします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-133">Attempts to synchronously receive all available items from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-134">1 つ以上の項目を受信できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-134">
              <see langword="true" /> if one or more items could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-135">このメソッドは、項目を提供するソースの待機をブロックしません。</span><span class="sxs-lookup"><span data-stu-id="31b1f-135">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="31b1f-136">要素が使用できるかどうかを要素を確認してから返します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-136">It will return after checking for elements, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage">
      <MemberSignature Language="C#" Value="T ISourceBlock&lt;T&gt;.ConsumeMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target, out bool messageConsumed);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance !T System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target, [out] bool&amp; messageConsumed) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />
      <MemberSignature Language="VB.NET" Value="Function ConsumeMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T), ByRef messageConsumed As Boolean) As T Implements ISourceBlock(Of T).ConsumeMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual T System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ConsumeMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target, [Runtime::InteropServices::Out] bool % messageConsumed) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ConsumeMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
        <Parameter Name="messageConsumed" Type="System.Boolean&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="31b1f-137">使用中のメッセージの <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-137">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being consumed.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="31b1f-138">メッセージを使用している <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-138">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> consuming the message.</span>
          </span>
        </param>
        <param name="messageConsumed">
          <span data-ttu-id="31b1f-139">メッセージが正常に使用された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-139">
              <see langword="true" /> if the message was successfully consumed; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-140">前にこの <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> によって提供された <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> を受け入れて使用するために、リンクされた <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> によって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-140">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to accept and consume a <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> previously offered by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-141">使用されたメッセージの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-141">The value of the consumed message.</span>
          </span>
          <span data-ttu-id="31b1f-142">これは以前に予約されて <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> に <paramref name="messageHeader" /> として渡されたものとは異なる、<see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> のインスタンスに相当する場合があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-142">This may correspond to a different  <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance than was previously reserved and passed as the <paramref name="messageHeader" /> to <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" />.</span>
          </span>
          <span data-ttu-id="31b1f-143">使用する側の <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> は、<see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> によって <paramref name="messageValue" /> として渡される値の代わりに、戻り値を使用する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-143">The consuming <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> must use the returned value instead of the value passed as <paramref name="messageValue" /> through <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />.</span>
          </span>
          <span data-ttu-id="31b1f-144">要求されたメッセージを使用できない場合、戻り値は <see langword="null" /> になります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-144">If the message requested is not available, the return value will be <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-145">のみ<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>をこのインスタンスにリンクされている<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>インスタンスを使用できます<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>、消費にのみ使用する必要があります<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>このソースとターゲットによって以前のインスタンスに提供します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-145">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>, and it must only be used to consume <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31b1f-146">
            <paramref name="messageHeader" /> が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-146">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-147">
            <paramref name="target" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-147">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation">
      <MemberSignature Language="C#" Value="void ISourceBlock&lt;T&gt;.ReleaseReservation (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Sub ReleaseReservation (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T)) Implements ISourceBlock(Of T).ReleaseReservation" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReleaseReservation(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ReleaseReservation;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReleaseReservation(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="31b1f-148">解放する予約済みメッセージの <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-148">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the reserved message being released.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="31b1f-149">以前に予約したメッセージを解放する <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-149">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> releasing the message it previously reserved.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-150">この <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> によって前に予約された <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> を解放するために、リンクされた <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> によって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-150">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to release a previously reserved <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-151">のみ<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>をこのインスタンスにリンクされている<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>インスタンスを使用できます`ReleaseReservation`、リリースにのみ使用する必要があります<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>インスタンスは以前と正常にターゲットによって予約されています。</span><span class="sxs-lookup"><span data-stu-id="31b1f-151">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use `ReleaseReservation`, and it must only be used to release <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously and successfully reserved by the target.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31b1f-152">
            <paramref name="messageHeader" /> が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-152">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-153">
            <paramref name="target" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-153">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="31b1f-154">
            <paramref name="target" /> がメッセージを予約しませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-154">The <paramref name="target" /> did not have the message reserved.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage">
      <MemberSignature Language="C#" Value="bool ISourceBlock&lt;T&gt;.ReserveMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt; target);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, class System.Threading.Tasks.Dataflow.ITargetBlock`1&lt;!T&gt; target) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ISourceBlock&lt;T&gt;#ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})" />
      <MemberSignature Language="VB.NET" Value="Function ReserveMessage (messageHeader As DataflowMessageHeader, target As ITargetBlock(Of T)) As Boolean Implements ISourceBlock(Of T).ReserveMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;.ReserveMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt; ^ target) = System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt;::ReserveMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ReserveMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0})</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="target" Type="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="31b1f-155">予約するメッセージの <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-155">The <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> of the message being reserved.</span>
          </span>
        </param>
        <param name="target">
          <span data-ttu-id="31b1f-156">メッセージを予約している <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-156">The <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> reserving the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-157">この <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> によって前に提供された <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> を予約するために、リンクされた <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> によって呼び出されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-157">Called by a linked <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> to reserve a previously offered <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> by this <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-158">メッセージが正常に予約された場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-158">
              <see langword="true" /> if the message was successfully reserved; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-159">のみ<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>をこのインスタンスにリンクされている<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601>インスタンスを使用できます<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>、予約にのみ使用する必要があります<xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader>このソースとターゲットによって以前のインスタンスに提供します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-159">Only <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> instances linked to this <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601> instance may use <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A>, and it must only be used to reserve <xref:System.Threading.Tasks.Dataflow.DataflowMessageHeader> instances previously offered by this source to the target.</span></span>  
  
 <span data-ttu-id="31b1f-160">場合`true`が返されます、<xref:System.Threading.Tasks.Dataflow.ITargetBlock%601>いずれかを呼び出す必要があります、後で<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A>または<xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A>このメッセージにします。</span><span class="sxs-lookup"><span data-stu-id="31b1f-160">If `true` is returned, the  <xref:System.Threading.Tasks.Dataflow.ITargetBlock%601> must subsequently call either  <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ConsumeMessage%2A> or  <xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReleaseReservation%2A> for this message.</span></span> <span data-ttu-id="31b1f-161">これに失敗すると、ソースとその他のターゲットを使用して、これをさらに、メッセージを伝達するできなくなる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="31b1f-161">Failure to do so may result in the source being unable to propagate any further messages to this or other targets.</span></span>  
  
 <span data-ttu-id="31b1f-162"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> 呼び出さないでくださいターゲットはすべて内部のロックを保持しているときにします。</span><span class="sxs-lookup"><span data-stu-id="31b1f-162"><xref:System.Threading.Tasks.Dataflow.ISourceBlock%601.ReserveMessage%2A> must not be called while the target is holding any internal locks.</span></span> <span data-ttu-id="31b1f-163">これに違反するデータ フロー ネットワークでデッドロックを回避するために必要なロック階層。</span><span class="sxs-lookup"><span data-stu-id="31b1f-163">Doing so will violate the lock hierarchy necessary to avoid deadlocks in a dataflow network.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31b1f-164">
            <paramref name="messageHeader" /> が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-164">The <paramref name="messageHeader" /> is not valid.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="31b1f-165">
            <paramref name="target" /> が <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-165">The <paramref name="target" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage">
      <MemberSignature Language="C#" Value="System.Threading.Tasks.Dataflow.DataflowMessageStatus ITargetBlock&lt;T&gt;.OfferMessage (System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, T messageValue, System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt; source, bool consumeToAccept);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Threading.Tasks.Dataflow.DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(valuetype System.Threading.Tasks.Dataflow.DataflowMessageHeader messageHeader, !T messageValue, class System.Threading.Tasks.Dataflow.ISourceBlock`1&lt;!T&gt; source, bool consumeToAccept) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.System#Threading#Tasks#Dataflow#ITargetBlock&lt;T&gt;#OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Function OfferMessage (messageHeader As DataflowMessageHeader, messageValue As T, source As ISourceBlock(Of T), consumeToAccept As Boolean) As DataflowMessageStatus Implements ITargetBlock(Of T).OfferMessage" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Threading::Tasks::Dataflow::DataflowMessageStatus System.Threading.Tasks.Dataflow.ITargetBlock&lt;T&gt;.OfferMessage(System::Threading::Tasks::Dataflow::DataflowMessageHeader messageHeader, T messageValue, System::Threading::Tasks::Dataflow::ISourceBlock&lt;T&gt; ^ source, bool consumeToAccept) = System::Threading::Tasks::Dataflow::ITargetBlock&lt;T&gt;::OfferMessage;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Dataflow.DataflowMessageStatus</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageHeader" Type="System.Threading.Tasks.Dataflow.DataflowMessageHeader" />
        <Parameter Name="messageValue" Type="T" />
        <Parameter Name="source" Type="System.Threading.Tasks.Dataflow.ISourceBlock&lt;T&gt;" />
        <Parameter Name="consumeToAccept" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="messageHeader">
          <span data-ttu-id="31b1f-166">提供されるメッセージのヘッダーを表す <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> インスタンス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-166">A <see cref="T:System.Threading.Tasks.Dataflow.DataflowMessageHeader" /> instance that represents the header of the message being offered.</span>
          </span>
        </param>
        <param name="messageValue">
          <span data-ttu-id="31b1f-167">提供されるメッセージの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-167">The value of the message being offered.</span>
          </span>
        </param>
        <param name="source">
          <span data-ttu-id="31b1f-168">メッセージを提供している <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-168">The <see cref="T:System.Threading.Tasks.Dataflow.ISourceBlock`1" /> offering the message.</span>
          </span>
          <span data-ttu-id="31b1f-169">null でもかまいません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-169">This may be null.</span>
          </span>
        </param>
        <param name="consumeToAccept">
          <span data-ttu-id="31b1f-170">メッセージを使用するために、<see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> を返す前に <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" /> の呼び出し中に <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> を同期的に呼び出すようにターゲットに指示する場合は、<see langword="true" /> に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-170">Set to <see langword="true" /> to instruct the target to call <see cref="M:System.Threading.Tasks.Dataflow.ISourceBlock`1.ConsumeMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,System.Threading.Tasks.Dataflow.ITargetBlock{`0},System.Boolean@)" /> synchronously during the call to <see cref="M:System.Threading.Tasks.Dataflow.ITargetBlock`1.OfferMessage(System.Threading.Tasks.Dataflow.DataflowMessageHeader,`0,System.Threading.Tasks.Dataflow.ISourceBlock{`0},System.Boolean)" />, prior to returning <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" />, in order to consume the message.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-171">メッセージを <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" /> に提供し、メッセージを使用または延期する機会をターゲットに与えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-171">Offers a message to the <see cref="T:System.Threading.Tasks.Dataflow.ITargetBlock`1" />, giving the target the opportunity to consume or postpone the message.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-172">提供されたメッセージのステータス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-172">The status of the offered message.</span>
          </span>
          <span data-ttu-id="31b1f-173">メッセージがターゲットによって受け入れられた場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> が返されます。メッセージはターゲットに所有されるようになったので、ソースは提供されたメッセージを使用しないようにする必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-173">If the message was accepted by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Accepted" /> is returned, and the source should no longer use the offered message, because it is now owned by the target.</span>
          </span>
          <span data-ttu-id="31b1f-174">メッセージがターゲットによって延期された場合、ターゲットが後でメッセージの使用または予約を試みる可能性があることを示す通知として <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> が返されます。その間、ソースはそのメッセージを引き続き所有し、他のブロックに提供する可能性があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-174">If the message was postponed by the target, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Postponed" /> is returned as a notification that the target may later attempt to consume or reserve the message; in the meantime, the source still owns the message and may offer it to other blocks.</span>
          </span>
          <span data-ttu-id="31b1f-175">ターゲットがメッセージを遅延するはずだったのに、<paramref name="source" /> が <see langword="null" /> だった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が代わりに返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-175">If the target would have otherwise postponed message, but <paramref name="source" /> was <see langword="null" />, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is instead returned.</span>
          </span>
          <span data-ttu-id="31b1f-176">ターゲットがメッセージを受け入れようとしたが、ソースが別のターゲットにメッセージを配信したか、単純に破棄したため、受け入れることができなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-176">If the target tried to accept the message but missed it due to the source delivering the message to another target or simply discarding it, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.NotAvailable" /> is returned.</span>
          </span>
          <span data-ttu-id="31b1f-177">ターゲットがメッセージを受け入れなかった場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-177">If the target chose not to accept the message, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.Declined" /> is returned.</span>
          </span>
          <span data-ttu-id="31b1f-178">ターゲットがメッセージを受け入れず、今後、このソースからの別のメッセージを受け入れない場合は、<see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-178">If the target chose not to accept the message and will never accept another message from this source, <see cref="F:System.Threading.Tasks.Dataflow.DataflowMessageStatus.DecliningPermanently" /> is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="31b1f-179">
            <paramref name="messageHeader" /> が有効ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-179">The  <paramref name="messageHeader" /> is not valid.</span>
          </span>
          <span data-ttu-id="31b1f-180">または、<paramref name="consumeToAccept" /> は、<paramref name="source" /> の値が null 以外である場合にのみ true にすることができます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-180">-or- <paramref name="consumeToAccept" /> may only be true if provided with a non-null <paramref name="source" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="broadcastBlock.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="31b1f-181">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-181">Returns a string that represents the formatted name of this  <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-182">この <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> インスタンスの書式設定された名前を表す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-182">A string that represents the formatted name of this <see cref="T:System.Threading.Tasks.Dataflow.IDataflowBlock" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-183">継承された<xref:System.Object>です。</span><span class="sxs-lookup"><span data-stu-id="31b1f-183">Inherited from  <xref:System.Object>.</span></span> <span data-ttu-id="31b1f-184">使用して、<xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A>オプション。</span><span class="sxs-lookup"><span data-stu-id="31b1f-184">Uses the  <xref:System.Threading.Tasks.Dataflow.DataflowBlockOptions.NameFormat%2A> option.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryReceive">
      <MemberSignature Language="C#" Value="public bool TryReceive (Predicate&lt;T&gt; filter, out T item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool TryReceive(class System.Predicate`1&lt;!T&gt; filter, [out] !T&amp; item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Threading.Tasks.Dataflow.BroadcastBlock`1.TryReceive(System.Predicate{`0},`0@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryReceive (filter As Predicate(Of T), ByRef item As T) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool TryReceive(Predicate&lt;T&gt; ^ filter, [Runtime::InteropServices::Out] T % item);" />
      <MemberSignature Language="F#" Value="abstract member TryReceive : Predicate&lt;'T&gt; *  -&gt; bool&#xA;override this.TryReceive : Predicate&lt;'T&gt; *  -&gt; bool" Usage="broadcastBlock.TryReceive (filter, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Threading.Tasks.Dataflow</AssemblyName>
        <AssemblyVersion>4.6.0.0</AssemblyVersion>
        <AssemblyVersion>4.6.1.0</AssemblyVersion>
        <AssemblyVersion>4.6.2.0</AssemblyVersion>
        <AssemblyVersion>4.6.3.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filter" Type="System.Predicate&lt;T&gt;" />
        <Parameter Name="item" Type="T&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="filter">
          <span data-ttu-id="31b1f-185">受信するために値で正常に渡す必要がある述語。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-185">The predicate a value must successfully pass in order for it to be received.</span>
          </span>
          <span data-ttu-id="31b1f-186">
            <c>filter</c> は <see langword="null" /> である可能性があります。その場合、すべての項目が渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-186">
              <c>filter</c> may be <see langword="null" />, in which case all items will pass.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="31b1f-187">ソースから受信された項目。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-187">The item received from the source.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="31b1f-188">使用可能な出力項目を <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" /> から同期的に受け取ろうとします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-188">Attempts to synchronously receive an available output item from the <see cref="T:System.Threading.Tasks.Dataflow.IReceivableSourceBlock`1" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="31b1f-189">項目を受信できた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="31b1f-189">
              <see langword="true" /> if an item could be received; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="31b1f-190">このメソッドは、項目を提供するソースの待機をブロックしません。</span><span class="sxs-lookup"><span data-stu-id="31b1f-190">This method does not block waiting for the source to provide an item.</span></span>  
  
 <span data-ttu-id="31b1f-191">要素が使用できるかどうかを要素を確認してから返します。</span><span class="sxs-lookup"><span data-stu-id="31b1f-191">It will return after checking for an element, whether or not an element was available.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>