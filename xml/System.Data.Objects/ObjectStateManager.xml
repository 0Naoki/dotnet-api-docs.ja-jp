<Type Name="ObjectStateManager" FullName="System.Data.Objects.ObjectStateManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="ac1ba80e294bdf91b1aa64f1e025d3203ca1c927" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678228" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectStateManager extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectStateManager" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectStateManager" />
  <TypeSignature Language="F#" Value="type ObjectStateManager = class" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>オブジェクトの状態を維持し、エンティティ型のインスタンスおよびリレーションシップ インスタンスの ID 管理を行います。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager> は、クエリ結果を追跡し、複数の重複するクエリ結果をマージするためのロジックを提供します。 また、ユーザーがオブジェクトを挿入、削除、変更したときにインメモリの変更追跡を実行したり、更新用の変更セットを提供したりします。 この変更セットは、変更プロセッサが変更を保存する場合に使用します。  
  
 このクラスは通常 <xref:System.Data.Objects.ObjectContext> で使用され、アプリケーションでは直接使用されません。  
  
   
  
## Examples  
 これらの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 次の例では、<xref:System.Data.Objects.ObjectStateManager> から <xref:System.Data.Objects.ObjectContext> を取得し、状態マネージャーを使用してコンテキスト内のオブジェクトにアクセスします。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 次の例では、返された <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> で <xref:System.Data.Objects.ObjectStateManager> メソッドを使用して、エンティティ キーに基づいてオブジェクトを取得します。  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectStateManager(System::Data::Metadata::Edm::MetadataWorkspace ^ metadataWorkspace);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectStateManager : System.Data.Metadata.Edm.MetadataWorkspace -&gt; System.Data.Objects.ObjectStateManager" Usage="new System.Data.Objects.ObjectStateManager metadataWorkspace" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="metadataWorkspace" Type="System.Data.Metadata.Edm.MetadataWorkspace" />
      </Parameters>
      <Docs>
        <param name="metadataWorkspace">マッピング情報とメタデータ情報を提供する <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" />。</param>
        <summary>
          <see cref="T:System.Data.Objects.ObjectStateManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ChangeObjectState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeObjectState(object entity, valuetype System.Data.EntityState entityState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeObjectState(System::Object ^ entity, System::Data::EntityState entityState);" />
      <MemberSignature Language="F#" Value="member this.ChangeObjectState : obj * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeObjectState (entity, entityState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entityState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="entity">状態を変更する必要のあるオブジェクト。</param>
        <param name="entityState">オブジェクトの新しい状態。</param>
        <summary>特定のオブジェクトの <see cref="T:System.Data.Objects.ObjectStateEntry" /> の状態を、指定された <paramref name="entityState" /> に変更します。</summary>
        <returns>指定された <paramref name="entity" /> の <see cref="T:System.Data.Objects.ObjectStateEntry" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.Data.Objects.ObjectStateManager.ChangeObjectState%2A>へのオブジェクトの状態を変更するメソッドを<xref:System.Data.EntityState.Deleted>を削除する制約されたリレーションシップに関連するオブジェクトは発生しません。  
  
 オブジェクトの状態を変更しても、オブジェクト グラフ内の関連オブジェクトには影響しません。  
  
 変更すると、<xref:System.Data.EntityState>するエンティティ オブジェクトのエントリの<xref:System.Data.EntityState.Modified>オブジェクトのすべてのプロパティが現在または元の値に関係なく、変更済みとしてマークされます。  
  
 ときに、<xref:System.Data.EntityState>にエンティティ オブジェクトのエントリが変更された<xref:System.Data.EntityState.Added>、 <xref:System.Data.EntityState.Deleted>、または<xref:System.Data.EntityState.Detached>オブジェクトのリレーションシップ エントリも更新します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="entity" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.InvalidOperationException">オブジェクトがデタッチされておらず、状態マネージャーのエントリを含まない場合。  -または-  状態を他の <see cref="T:System.Data.EntityState" /> から <see cref="F:System.Data.EntityState.Detached" /> に変更しようとする場合、- または、<paramref name="state" /> が有効な  <see cref="T:System.Data.EntityState" /> の値でない場合。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="ChangeRelationshipState">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>2 つのエンティティ オブジェクト間の指定されたリレーションシップの状態を変更します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、外部キーの関連付けに基づくリレーションシップではサポートされていません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string navigationProperty, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, navigationProperty As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ navigationProperty, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationProperty, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationProperty" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">リレーションシップの一方の端にあるソース エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="targetEntity">リレーションシップのもう一方の端にあるターゲット エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="navigationProperty">指定された<c>ターゲット</c>を返す<c>ソース</c>側のナビゲーション プロパティの名前。</param>
        <param name="relationshipState">指定リレーションシップに要求する <see cref="T:System.Data.EntityState" />。</param>
        <summary>関連する 2 つのオブジェクトとナビゲーション プロパティの名前に基づいて、2 つのエンティティ オブジェクト間の指定されたリレーションシップの状態を変更します。</summary>
        <returns>変更されたリレーションシップの <see cref="T:System.Data.Objects.ObjectStateEntry" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたリレーションシップの両方の end にあるオブジェクトのエントリが存在する必要があります、<xref:System.Data.Objects.ObjectStateManager>します。  
  
> [!NOTE]
>  このメソッドは、外部キーの関連付けに基づくリレーションシップではサポートされていません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> または <paramref name="target" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Deleted" /> 状態の場合に、<see cref="F:System.Data.EntityState.Detached" /> 状態および <see cref="F:System.Data.EntityState.Deleted" /> 状態のいずれでもない状態に、関係の状態を変更しようとしているとき。  -または-  <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Added" /> 状態の場合に、<see cref="F:System.Data.EntityState.Added" /> 状態および <see cref="F:System.Data.EntityState.Detached" /> 状態のいずれでもない状態に、関係の状態を変更しようとするとき。  -または-  <paramref name="state" /> が有効な <see cref="T:System.Data.EntityState" /> 値ではない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState(object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState (sourceEntity As Object, targetEntity As Object, relationshipName As String, targetRoleName As String, relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(System::Object ^ sourceEntity, System::Object ^ targetEntity, System::String ^ relationshipName, System::String ^ targetRoleName, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : obj * obj * string * string * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, relationshipName, targetRoleName, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceEntity" Type="System.Object" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="relationshipName" Type="System.String" />
        <Parameter Name="targetRoleName" Type="System.String" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="sourceEntity">リレーションシップの一方の端にあるソース エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="targetEntity">リレーションシップのもう一方の端にあるターゲット エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="relationshipName">リレーションシップの名前。</param>
        <param name="targetRoleName">リレーションシップの<c>ターゲット</c>端のロール名。</param>
        <param name="relationshipState">指定リレーションシップに要求する <see cref="T:System.Data.EntityState" />。</param>
        <summary>関連する 2 つのオブジェクトとリレーションシップのプロパティに基づいて、2 つのエンティティ オブジェクト間の指定されたリレーションシップの状態を変更します。</summary>
        <returns>変更されたリレーションシップの <see cref="T:System.Data.Objects.ObjectStateEntry" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたリレーションシップの両方の end にあるオブジェクトのエントリが存在する必要があります、<xref:System.Data.Objects.ObjectStateManager>します。  
  
> [!NOTE]
>  このメソッドは、外部キーの関連付けに基づくリレーションシップはサポートされません。 詳細については、次を参照してください[の定義およびリレーションシップの管理。](http://msdn.microsoft.com/library/2c92c097-56bd-4145-989e-16d92475ecda)  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" /> または <paramref name="target" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Deleted" /> 状態の場合に、<see cref="F:System.Data.EntityState.Detached" /> 状態および <see cref="F:System.Data.EntityState.Deleted" /> 状態のいずれでもない状態に、関係の状態を変更しようとするとき。  -または-  <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Added" /> 状態の場合に、<see cref="F:System.Data.EntityState.Added" /> 状態および <see cref="F:System.Data.EntityState.Detached" /> 状態のいずれでもない状態に、関係の状態を変更しようとするとき。  -または-  <paramref name="state" /> が有効な <see cref="T:System.Data.EntityState" /> 値ではない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="ChangeRelationshipState&lt;TEntity&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;TEntity&gt; (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression&lt;Func&lt;TEntity,object&gt;&gt; navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry ChangeRelationshipState&lt;class TEntity&gt;(!!TEntity sourceEntity, object targetEntity, class System.Linq.Expressions.Expression`1&lt;class System.Func`2&lt;!!TEntity, object&gt;&gt; navigationPropertySelector, valuetype System.Data.EntityState relationshipState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function ChangeRelationshipState(Of TEntity As Class) (sourceEntity As TEntity, targetEntity As Object, navigationPropertySelector As Expression(Of Func(Of TEntity, Object)), relationshipState As EntityState) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TEntity&gt;&#xA; where TEntity : class System::Data::Objects::ObjectStateEntry ^ ChangeRelationshipState(TEntity sourceEntity, System::Object ^ targetEntity, System::Linq::Expressions::Expression&lt;Func&lt;TEntity, System::Object ^&gt; ^&gt; ^ navigationPropertySelector, System::Data::EntityState relationshipState);" />
      <MemberSignature Language="F#" Value="member this.ChangeRelationshipState : 'Entity * obj * System.Linq.Expressions.Expression&lt;Func&lt;'Entity, obj&gt;&gt; * System.Data.EntityState -&gt; System.Data.Objects.ObjectStateEntry (requires 'Entity : null)" Usage="objectStateManager.ChangeRelationshipState (sourceEntity, targetEntity, navigationPropertySelector, relationshipState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TEntity">
          <Constraints>
            <ParameterAttribute>ReferenceTypeConstraint</ParameterAttribute>
          </Constraints>
        </TypeParameter>
      </TypeParameters>
      <Parameters>
        <Parameter Name="sourceEntity" Type="TEntity" />
        <Parameter Name="targetEntity" Type="System.Object" />
        <Parameter Name="navigationPropertySelector" Type="System.Linq.Expressions.Expression&lt;System.Func&lt;TEntity,System.Object&gt;&gt;" />
        <Parameter Name="relationshipState" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <typeparam name="TEntity">エンティティ型、<c>ソース</c>オブジェクト。</typeparam>
        <param name="sourceEntity">リレーションシップの一方の端にあるソース エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="targetEntity">リレーションシップのもう一方の端にあるターゲット エンティティのオブジェクト インスタンスまたは <see cref="T:System.Data.EntityKey" />。</param>
        <param name="navigationPropertySelector">指定された<c>ターゲット</c>を返す<c>ソース</c>側のナビゲーション プロパティを選択する LINQ 式。</param>
        <param name="relationshipState">指定リレーションシップに要求する <see cref="T:System.Data.EntityState" />。</param>
        <summary>関連する 2 つのオブジェクトとナビゲーション プロパティを定義する LINQ 式とに基づいて、2 つのエンティティ オブジェクト間の指定されたリレーションシップの状態を変更します。</summary>
        <returns>変更されたリレーションシップの <see cref="T:System.Data.Objects.ObjectStateEntry" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたリレーションシップの両方の end にあるオブジェクトのエントリが存在する必要があります、<xref:System.Data.Objects.ObjectStateManager>します。  
  
> [!NOTE]
>  このメソッドは、外部キーの関連付けに基づくリレーションシップはサポートされません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="source" />、<paramref name="target" />、または <paramref name="selector" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="selector" /> は形式が正しくないか、ナビゲーション プロパティを返すことができません。</exception>
        <exception cref="T:System.InvalidOperationException">
          <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Deleted" /> 状態の場合に、<see cref="F:System.Data.EntityState.Detached" /> 状態および <see cref="F:System.Data.EntityState.Deleted" /> 状態のいずれでもない状態に、関係の状態を変更しようとするとき。  -または-  <paramref name="source" /> または <paramref name="target" /> が <see cref="F:System.Data.EntityState.Added" /> 状態の場合に、<see cref="F:System.Data.EntityState.Added" /> 状態および <see cref="F:System.Data.EntityState.Detached" /> 状態のいずれでもない状態に、関係の状態を変更しようとするとき。  -または-  <paramref name="state" /> が有効な <see cref="T:System.Data.EntityState" /> 値ではない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntries">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries (System.Data.EntityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.Generic.IEnumerable`1&lt;class System.Data.Objects.ObjectStateEntry&gt; GetObjectStateEntries(valuetype System.Data.EntityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntries (state As EntityState) As IEnumerable(Of ObjectStateEntry)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::Generic::IEnumerable&lt;System::Data::Objects::ObjectStateEntry ^&gt; ^ GetObjectStateEntries(System::Data::EntityState state);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntries : System.Data.EntityState -&gt; seq&lt;System.Data.Objects.ObjectStateEntry&gt;" Usage="objectStateManager.GetObjectStateEntries state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerable&lt;System.Data.Objects.ObjectStateEntry&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Data.EntityState" />
      </Parameters>
      <Docs>
        <param name="state">返された <see cref="T:System.Data.EntityState" /> オブジェクトをフィルター選択するために使用する <see cref="T:System.Data.Objects.ObjectStateEntry" />。</param>
        <summary>指定された状態のオブジェクトまたはリレーションシップの <see cref="T:System.Data.Objects.ObjectStateEntry" /> オブジェクトのコレクションを返します。</summary>
        <returns>指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> 内の <see cref="T:System.Data.EntityState" /> オブジェクトのコレクション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.EntityState> はビット フィールドであるため、複数の <xref:System.Data.EntityState> 値のビット単位の OR 演算を実行して、複数の状態の状態エントリを 1 回の呼び出しで取得できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="state" /> が <see cref="F:System.Data.EntityState.Detached" /> の場合。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>特定のオブジェクトまたはリレーションシップ エントリの <see cref="T:System.Data.Objects.ObjectStateEntry" /> を返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(class System.Data.EntityKey key) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (key As EntityKey) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Data::EntityKey ^ key);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : System.Data.EntityKey -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry key" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
      </Parameters>
      <Docs>
        <param name="key">
          <see cref="T:System.Data.EntityKey" />。</param>
        <summary>指定されたキーのオブジェクトまたはリレーションシップ エントリの <see cref="T:System.Data.Objects.ObjectStateEntry" /> を返します。</summary>
        <returns>指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> に対応する <see cref="T:System.Data.EntityKey" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>を返すメソッドを<xref:System.Data.Objects.ObjectStateEntry>オブジェクトを処理することがなく、<xref:System.InvalidOperationException>によって発生した、<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>メソッド。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、指定された <xref:System.Data.Objects.ObjectStateEntry> の <xref:System.Data.EntityKey> を <xref:System.Data.Objects.ObjectStateManager> から取得します。 現在の値を取得し、`SalesOrderHeader.PurchaseOrderNumber`プロパティ、プロパティの値を変更および変更されたプロパティのコレクションを列挙します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstateentry)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstateentry)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="key" /> が <see langword="null" /> の場合。</exception>
        <exception cref="T:System.ArgumentException">指定された <paramref name="key" /> が状態マネージャーに見つからない場合。</exception>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Data.EntityKey" /> には、指定された <see cref="T:System.Data.Objects.ObjectStateManager" /> のエンティティがありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetObjectStateEntry">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectStateEntry GetObjectStateEntry(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetObjectStateEntry (entity As Object) As ObjectStateEntry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectStateEntry ^ GetObjectStateEntry(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetObjectStateEntry : obj -&gt; System.Data.Objects.ObjectStateEntry" Usage="objectStateManager.GetObjectStateEntry entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectStateEntry</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">取得した <see cref="T:System.Object" /> が属する <see cref="T:System.Data.Objects.ObjectStateEntry" />。</param>
        <summary>指定されたオブジェクトの <see cref="T:System.Data.Objects.ObjectStateEntry" /> を返します。</summary>
        <returns>指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> に対応する <see cref="T:System.Object" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>を返すメソッドを<xref:System.Data.Objects.ObjectStateEntry>オブジェクトを処理することがなく、<xref:System.InvalidOperationException>によって発生した、<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="T:System.Object" /> には、指定された <see cref="T:System.Data.Objects.ObjectStateManager" /> のエンティティがありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="GetRelationshipManager">
      <MemberSignature Language="C#" Value="public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager(object entity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRelationshipManager (entity As Object) As RelationshipManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::DataClasses::RelationshipManager ^ GetRelationshipManager(System::Object ^ entity);" />
      <MemberSignature Language="F#" Value="member this.GetRelationshipManager : obj -&gt; System.Data.Objects.DataClasses.RelationshipManager" Usage="objectStateManager.GetRelationshipManager entity" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.DataClasses.RelationshipManager</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="entity">
          <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> を返す対象オブジェクト。</param>
        <summary>指定オブジェクトによって使用される <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> を返します。</summary>
        <returns>指定したオブジェクトの <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>メソッドは呼び出すことと同じ、<xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>メソッドでは、このメソッドを返す代わりに例外が発生する点を除いて`false`。  
  
 呼び出す、<xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>処理を回避するため、<xref:System.InvalidOperationException>に発生したときに、<xref:System.Data.Objects.DataClasses.RelationshipManager>指定されたエンティティに対して返されることはできません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">指定された <paramref name="entity" /> に対して <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> を返すことができない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="MetadataWorkspace">
      <MemberSignature Language="C#" Value="public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property MetadataWorkspace As MetadataWorkspace" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Metadata::Edm::MetadataWorkspace ^ MetadataWorkspace { System::Data::Metadata::Edm::MetadataWorkspace ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.MetadataWorkspace : System.Data.Metadata.Edm.MetadataWorkspace" Usage="System.Data.Objects.ObjectStateManager.MetadataWorkspace" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.Metadata.Edm.MetadataWorkspace</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この状態マネージャーに関連付けられている <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> を取得します。</summary>
        <value>この <see cref="T:System.Data.Metadata.Edm.MetadataWorkspace" /> に関連付けられている <see cref="T:System.Data.Objects.ObjectStateManager" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Metadata.Edm.MetadataWorkspace> クラスは、実行時およびアプリケーションのコンテキストで Entity Data Model (EDM) メタデータを操作できるようにする中心的なプログラミング インターフェイスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ObjectStateManagerChanged">
      <MemberSignature Language="C#" Value="public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged" />
      <MemberSignature Language="DocId" Value="E:System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectStateManagerChanged As CollectionChangeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::ComponentModel::CollectionChangeEventHandler ^ ObjectStateManagerChanged;" />
      <MemberSignature Language="F#" Value="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " Usage="member this.ObjectStateManagerChanged : System.ComponentModel.CollectionChangeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ComponentModel.CollectionChangeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>状態マネージャーに対してエンティティの追加または削除が実行されたときに発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryGetObjectStateEntry">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>特定のオブジェクトまたはリレーションシップ エントリの <see cref="T:System.Data.Objects.ObjectStateEntry" /> オブジェクトを返します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(class System.Data.EntityKey key, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (key As EntityKey, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Data::EntityKey ^ key, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : System.Data.EntityKey *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (key, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.Data.EntityKey" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="key">指定された <see cref="T:System.Data.EntityKey" />。</param>
        <param name="entry">このメソッドから制御が戻った時点で、指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> の <see cref="T:System.Data.EntityKey" /> が格納されます。このパラメーターは初期化されていない状態で渡されます。</param>
        <summary>指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> のオブジェクトまたはリレーションシップに対応する <see cref="T:System.Data.EntityKey" /> の取得を試みます。</summary>
        <returns>指定された <see cref="T:System.Data.EntityKey" /> に対応する <see cref="T:System.Data.Objects.ObjectStateEntry" /> が存在する場合は <see langword="true" /> のブール値。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> を使用して、<xref:System.Data.Objects.ObjectStateEntry> メソッドで発生した <xref:System.InvalidOperationException> を処理せずに、<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> を返します。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 この例では、指定された <xref:System.Data.Objects.ObjectStateEntry> に対応する <xref:System.Data.EntityKey> の取得を試みます。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectstatemanager)]
 [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectstatemanager)]  
  
 次の例では、返された <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> で <xref:System.Data.Objects.ObjectStateManager> メソッドを使用して、エンティティ キーに基づいてオブジェクトを取得します。  
  
 [!code-csharp[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#applyitemupdates)]
 [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#applyitemupdates)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <see langword="null" /> (Visual Basic では <see langword="Nothing" />) 値は <paramref name="key" /> に提供されます。</exception>
      </Docs>
    </Member>
    <Member MemberName="TryGetObjectStateEntry">
      <MemberSignature Language="C#" Value="public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetObjectStateEntry(object entity, [out] class System.Data.Objects.ObjectStateEntry&amp; entry) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetObjectStateEntry (entity As Object, ByRef entry As ObjectStateEntry) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetObjectStateEntry(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::ObjectStateEntry ^ % entry);" />
      <MemberSignature Language="F#" Value="member this.TryGetObjectStateEntry : obj *  -&gt; bool" Usage="objectStateManager.TryGetObjectStateEntry (entity, entry)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="entry" Type="System.Data.Objects.ObjectStateEntry&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">取得した <see cref="T:System.Object" /> が属する <see cref="T:System.Data.Objects.ObjectStateEntry" />。</param>
        <param name="entry">このメソッドから制御が戻った時点で、指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> の <see cref="T:System.Data.EntityKey" /> が格納されます。このパラメーターは初期化されていない状態で渡されます。</param>
        <summary>指定された <see cref="T:System.Data.Objects.ObjectStateEntry" /> に対応する <see cref="T:System.Object" /> の取得を試みます。</summary>
        <returns>指定されたオブジェクトに対応する <see cref="T:System.Data.Objects.ObjectStateEntry" /> が存在する場合は <see langword="true" /> のブール値。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29> メソッドを使用して、<xref:System.Data.Objects.ObjectStateEntry> メソッドで発生した <xref:System.InvalidOperationException> を処理せずに、<xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TryGetRelationshipManager">
      <MemberSignature Language="C#" Value="public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryGetRelationshipManager(object entity, [out] class System.Data.Objects.DataClasses.RelationshipManager&amp; relationshipManager) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryGetRelationshipManager (entity As Object, ByRef relationshipManager As RelationshipManager) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool TryGetRelationshipManager(System::Object ^ entity, [Runtime::InteropServices::Out] System::Data::Objects::DataClasses::RelationshipManager ^ % relationshipManager);" />
      <MemberSignature Language="F#" Value="member this.TryGetRelationshipManager : obj *  -&gt; bool" Usage="objectStateManager.TryGetRelationshipManager (entity, relationshipManager)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entity" Type="System.Object" />
        <Parameter Name="relationshipManager" Type="System.Data.Objects.DataClasses.RelationshipManager&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="entity">
          <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> を返す対象オブジェクト。</param>
        <param name="relationshipManager">このメソッドから制御が戻った時点で、<c>エンティティ</c>の <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> が格納されます。</param>
        <summary>指定オブジェクトによって使用される <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> を返します。</summary>
        <returns>指定された <paramref name="entity" /> の <see cref="T:System.Data.Objects.DataClasses.RelationshipManager" /> インスタンスが返された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>メソッドを使用して、取得、<xref:System.Data.Objects.DataClasses.RelationshipManager>の永続化に依存しないオブジェクト。 オブジェクトの実装と<xref:System.Data.Objects.DataClasses.IEntityWithRelationships>継承または<xref:System.Data.Objects.DataClasses.EntityObject>、<xref:System.Data.Objects.DataClasses.RelationshipManager>からアクセス、<xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>プロパティ。  
  
 <xref:System.Data.Objects.DataClasses.RelationshipManager>がオブジェクトの場合に返されることはできません、<xref:System.Data.EntityState.Detached>状態。  
  
 呼び出す、<xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>メソッドは呼び出すことと同じ、<xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>メソッドでは、このメソッドを返す点が`false`例外を発生させる代わりにします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>