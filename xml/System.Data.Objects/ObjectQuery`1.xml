<Type Name="ObjectQuery&lt;T&gt;" FullName="System.Data.Objects.ObjectQuery&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="920529d700537667f3673c12dbe1126061fb30ef" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37678215" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ObjectQuery&lt;T&gt; : System.Data.Objects.ObjectQuery, System.Collections.Generic.IEnumerable&lt;T&gt;, System.Linq.IOrderedQueryable&lt;T&gt;, System.Linq.IQueryable&lt;T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectQuery`1&lt;T&gt; extends System.Data.Objects.ObjectQuery implements class System.Collections.Generic.IEnumerable`1&lt;!T&gt;, class System.Collections.IEnumerable, class System.ComponentModel.IListSource, class System.Linq.IOrderedQueryable, class System.Linq.IOrderedQueryable`1&lt;!T&gt;, class System.Linq.IQueryable, class System.Linq.IQueryable`1&lt;!T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Data.Objects.ObjectQuery`1" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectQuery(Of T)&#xA;Inherits ObjectQuery&#xA;Implements IEnumerable(Of T), IOrderedQueryable(Of T), IQueryable(Of T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public ref class ObjectQuery : System::Data::Objects::ObjectQuery, System::Collections::Generic::IEnumerable&lt;T&gt;, System::Linq::IOrderedQueryable&lt;T&gt;, System::Linq::IQueryable&lt;T&gt;" />
  <TypeSignature Language="F#" Value="type ObjectQuery&lt;'T&gt; = class&#xA;    inherit ObjectQuery&#xA;    interface seq&lt;'T&gt;&#xA;    interface IEnumerable&#xA;    interface IQueryable&lt;'T&gt;&#xA;    interface IQueryable&#xA;    interface IOrderedQueryable&lt;'T&gt;&#xA;    interface IOrderedQueryable&#xA;    interface IListSource" />
  <AssemblyInfo>
    <AssemblyName>System.Data.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Data.Objects.ObjectQuery</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IOrderedQueryable&lt;T&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Linq.IQueryable&lt;T&gt;</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T">クエリのエンティティ型。</typeparam>
    <summary>Represents a typed query against a conceptual model in a given object context.</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601> ジェネリック クラスは、特定の型のオブジェクトを 0 個以上含んだコレクションを返すクエリを表します。 オブジェクト クエリを実行するには、事前に <xref:System.Data.Objects.ObjectContext> を定義する必要があります。 このコンテキストにより、クエリの作成と実行に必要な接続情報とメタデータ情報が取得されます。 オブジェクト クエリは次のシナリオで実行されます。  
  
-   `foreach` (C#) や `For Each` (Visual Basic) 列挙などの操作を実行するとき。  
  
-   <xref:System.Collections.Generic.List%601> コレクションにデータを設定するためにクエリが割り当てられているとき。  
  
-   <xref:System.Data.Objects.ObjectQuery%601.Execute%2A> メソッドが明示的に呼び出されたとき。  
  
 クエリは、[!INCLUDE[esql](~/includes/esql-md.md)] ステートメントまたは LINQ クエリを使用して作成するか、またはクラスに含まれているクエリ ビルダー メソッドを使用して段階的に構築できます。 いずれの場合も、結果は新しい <xref:System.Data.Objects.ObjectQuery%601> インスタンスであり、これが明示的に実行されるか列挙されることで、クエリがデータ ソースに送信されて実行され、結果が返されます。  
  
 <xref:System.Data.Objects.ObjectQuery%601> で多いのはエンティティ型ですが、<xref:System.Data.Common.DbDataRecord> 型 (匿名型に投影する場合) またはプリミティブ型 (整数や文字列など) にすることもできます。 詳細については、次を参照してください。[オブジェクト クエリ](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)します。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>Initializes a new instance of the <see cref="T:System.Data.Objects.ObjectQuery`1" /> class.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601> は、スカラー結果のコレクションではなく単一のスカラー結果を表すように初期化できます。 一部の拡張メソッドは、入力としてコレクション結果を必要とします。 その場合は、該当するメソッドのいずれかが呼び出されたときに、<xref:System.ArgumentException> がスローされます。 詳細については、次を参照してください。[オブジェクト クエリ](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)します。  
  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限があります。 Entity SQL では、クエリ コマンド テキストの長さに制限が適用されません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandText As String, context As ObjectContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
      </Parameters>
      <Docs>
        <param name="commandText">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</param>
        <param name="context">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</param>
        <summary>Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限があります。 Entity SQL では、クエリ コマンド テキストの長さに制限が適用されません。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601> クラスのインスタンスを作成する方法を示します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectQuery (string commandText, System.Data.Objects.ObjectContext context, System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandText, class System.Data.Objects.ObjectContext context, valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.#ctor(System.String,System.Data.Objects.ObjectContext,System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectQuery(System::String ^ commandText, System::Data::Objects::ObjectContext ^ context, System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="new System.Data.Objects.ObjectQuery&lt;'T&gt; : string * System.Data.Objects.ObjectContext * System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="new System.Data.Objects.ObjectQuery&lt;'T&gt; (commandText, context, mergeOption)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="commandText" Type="System.String" />
        <Parameter Name="context" Type="System.Data.Objects.ObjectContext" />
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="commandText">The [!INCLUDE[esql](~/includes/esql-md.md)] query.</param>
        <param name="context">The <see cref="T:System.Data.Objects.ObjectContext" /> on which to execute the query.</param>
        <param name="mergeOption">Specifies how the entities that are retrieved through this query should be merged with the entities that have been returned from previous queries against the same <see cref="T:System.Data.Objects.ObjectContext" />.</param>
        <summary>Creates a new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance using the specified [!INCLUDE[esql](~/includes/esql-md.md)] command as the initial query and the specified merge option.</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションでは、実行時に Entity SQL クエリを生成するときに、データ ソースのコマンドの長さに制限があります。 Entity SQL では、クエリ コマンド テキストの長さに制限が適用されません。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 <xref:System.Data.Objects.ObjectQuery%601> は、指定されたクエリ、<xref:System.Data.Objects.ObjectContext>、および <xref:System.Data.Objects.MergeOption> で初期化されます。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Distinct">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Distinct ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Distinct() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Distinct" />
      <MemberSignature Language="VB.NET" Value="Public Function Distinct () As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Distinct();" />
      <MemberSignature Language="F#" Value="member this.Distinct : unit -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Distinct " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Limits the query to unique results.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このクエリ ビルダー メソッドが戻る、<xref:System.Data.Objects.ObjectQuery%601>インスタンスで元のクエリに相当する[SELECT DISTINCT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)適用します。  
  
 `DISTINCT` (Ntext など)、データ ソース内の非同等の列へのマッピングを含むオブジェクトに演算子を適用できません。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。 次に、新しい <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> オブジェクトで <xref:System.Data.Objects.ObjectQuery%601> を呼び出して、このクエリの一意の結果を取得します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Except">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Except (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Except(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Except(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Except (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Except(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Except : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Except query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to exclude from the query.</param>
        <summary>Limits the query results by excluding results based on the results of another object query.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [EXCEPT](~/docs/framework/data/adonet/ef/language-reference/except-entity-sql.md) applied based on the specified <paramref name="query" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された`query`結果を除外する必要がありますを定義する同じ型またはと互換性がある型の<xref:System.Data.Objects.ObjectQuery%601>します。  
  
 定義されているパラメーターで指定された`query`で定義されているパラメーターとマージされます、<xref:System.Data.Objects.ObjectQuery%601>インスタンス。 パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。 結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。 詳細については、次を参照してください。[クエリ ビルダー メソッド](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.Except%2A> インスタンスから接続を継承します。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601.Except%2A> メソッドを使用して新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成し、新しいクエリの結果を反復処理します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_except)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Except](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_except)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Execute">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectResult&lt;T&gt; Execute (System.Data.Objects.MergeOption mergeOption);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectResult`1&lt;!T&gt; Execute(valuetype System.Data.Objects.MergeOption mergeOption) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Execute(System.Data.Objects.MergeOption)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectResult&lt;T&gt; ^ Execute(System::Data::Objects::MergeOption mergeOption);" />
      <MemberSignature Language="F#" Value="override this.Execute : System.Data.Objects.MergeOption -&gt; System.Data.Objects.ObjectResult&lt;'T&gt;" Usage="objectQuery.Execute mergeOption" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectResult&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="mergeOption" Type="System.Data.Objects.MergeOption" />
      </Parameters>
      <Docs>
        <param name="mergeOption">The <see cref="T:System.Data.Objects.MergeOption" /> to use when executing the query. The default is <see cref="F:System.Data.Objects.MergeOption.AppendOnly" />.</param>
        <summary>Executes the object query with the specified merge option.</summary>
        <returns>An <see cref="T:System.Data.Objects.ObjectResult`1" /> that contains a collection of entity objects returned by the query.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクト クエリの既定のマージ オプションは <xref:System.Data.Objects.MergeOption.AppendOnly> です。 詳細については、次を参照してください。 [Id 解決、状態管理、および変更の追跡](http://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)します。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectResult%601> メソッドから <xref:System.Data.Objects.ObjectQuery.Execute%2A> を返します。 次に、列挙子を取得し、クエリ結果を反復処理します。 最後に、列挙子と <xref:System.Data.Objects.ObjectResult%601> オブジェクトを解放します。  
  
 [!code-csharp[DP ObjectServices Concepts#QueryResult](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#queryresult)]
 [!code-vb[DP ObjectServices Concepts#QueryResult](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#queryresult)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; GroupBy (string keys, string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; GroupBy(string keys, string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.GroupBy(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GroupBy (keys As String, projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ GroupBy(System::String ^ keys, System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.GroupBy (keys, projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">The key columns by which to group the results.</param>
        <param name="projection">The list of selected properties that defines the projection.</param>
        <param name="parameters">Zero or more parameters that are used in this method.</param>
        <summary>Groups the query results by the specified criteria.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [GROUP BY](~/docs/framework/data/adonet/ef/language-reference/group-by-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> 指定された投影を適用、`projection`パラメーター。 つまり、<xref:System.Data.Objects.ObjectQuery%601> メソッドから返される <xref:System.Data.Objects.ObjectQuery%601.GroupBy%2A> の型は、常に <xref:System.Data.Common.DbDataRecord> です。 詳細については、次を参照してください。[オブジェクト クエリ](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)します。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 この例では、製品名でグループ化された既存のクエリの結果を含む <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを新たに作成します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_groupby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_groupby)]  
  
 この例を含む入れ子になったデータ レコードのセットを返します、`Contact.LastName`列でグループ化されの最初の文字をアルファベット順に並べ替える`Contact.LastName`します。  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_groupby)]
 [!code-vb[DP ObjectServices Concepts#Projection_GroupBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_groupby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is <see langword="null" /> or an empty string.  -or-  The <paramref name="projection" /> parameter is <see langword="null" /> or an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Include (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Include(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Include(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function Include (path As String) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Include(System::String ^ path);" />
      <MemberSignature Language="F#" Value="member this.Include : string -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Include path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">Dot-separated list of related objects to return in the query results.</param>
        <summary>Specifies the related objects to include in the query results.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> with the defined query path.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クエリ パスは、Entity SQL および LINQ クエリで使用できます。  
  
 パスは包括的です。 たとえば、インクルード呼び出し`Include("Orders.OrderLines")`、するだけでなく`OrderLines`も含めることが`Orders`します。 詳細については、次を参照してください。[関連オブジェクトの読み込み](http://msdn.microsoft.com/library/452347d2-7b3b-44cd-9001-231299a28cb1)します。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドを呼び出した場合、クエリ パスは <xref:System.Data.Objects.ObjectQuery%601> の返されたインスタンスでのみ有効です。 <xref:System.Data.Objects.ObjectQuery%601> の他のインスタンスとオブジェクト コンテキスト自体は影響を受けません。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Include%2A> メソッドはクエリ オブジェクトを返すので、このメソッドを <xref:System.Data.Objects.ObjectQuery%601> で複数回呼び出すことで、次の例のようにクエリに複数のパスを指定できます。  
  
 [!code-csharp[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#spanonlywithmultiplepaths)]
 [!code-vb[DP ObjectServices Concepts#SpanOnlyWithMultiplePaths](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#spanonlywithmultiplepaths)]  
  
   
  
## Examples  
 [!code-csharp[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithspan)]
 [!code-vb[DP ObjectServices Concepts#QueryWithSpan](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithspan)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="path" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="path" /> is <see langword="empty" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Intersect">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Intersect (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Intersect(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Intersect(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Intersect (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Intersect(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Intersect : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Intersect query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to include in the query.</param>
        <summary>Limits the query results by including only the results that exist in another object query.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [INTERSECT](~/docs/framework/data/adonet/ef/language-reference/intersect-entity-sql.md) applied based on the specified <paramref name="query" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された`query`結果に含める必要がありますを定義する同じ型またはと互換性がある型の<xref:System.Data.Objects.ObjectQuery%601>します。  
  
 定義されているパラメーターで指定された`query`で定義されているパラメーターとマージされます、<xref:System.Data.Objects.ObjectQuery%601>インスタンス。 パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。 結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。 詳細については、次を参照してください。[クエリ ビルダー メソッド](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> メソッドが呼び出された <xref:System.Data.Objects.ObjectQuery%601.Intersect%2A> インスタンスから接続を継承します。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、他の 2 つのクエリの結果を含む <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを新たに作成します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_intersect)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Intersect](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_intersect)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is <see langword="null" /> or is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Data.Objects.ObjectQuery`1.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Data.Objects.ObjectQuery&lt;'T&gt;.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Gets or sets the name of this object query.</summary>
        <value>A<see langword="string" />これの名前を指定する値<see cref="T:System.Data.Objects.ObjectQuery`1" />します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクト クエリの名前は、クエリ ビルダー メソッドの作成時に、シーケンス内の現在のオブジェクト クエリを名前で識別するために使用されます。 クエリ名は、既定では、`it`します。 この名前は、<xref:System.Data.Objects.ObjectQuery`1.Where*> メソッド内の結合または <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> メソッド内で、現在のシーケンスを参照する際に便利です。 詳細については、次を参照してください。[クエリ ビルダー メソッド](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Name%2A> の <xref:System.Data.Objects.ObjectQuery%601> プロパティを設定すると、その値が後続のメソッドで別名として使用されます。  
  
 <xref:System.Data.Objects.ObjectQuery%601.Name%2A> プロパティの値は、先頭を英字にする必要があり、英字、数字、およびアンダースコアを含めることができます。  
  
   
  
## Examples  
 この例では、最初の <xref:System.Data.Objects.ObjectQuery%601> の名前を "product" に設定し、この別名を後続の <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> メソッドで使用します。 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 [!code-csharp[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#querywithaliasnamed)]
 [!code-vb[DP ObjectServices Concepts#QueryWithAliasNamed](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#querywithaliasnamed)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">The value specified on set is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="OfType&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; OfType&lt;TResultType&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; OfType&lt;TResultType&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OfType``1" />
      <MemberSignature Language="VB.NET" Value="Public Function OfType(Of TResultType) () As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ OfType();" />
      <MemberSignature Language="F#" Value="member this.OfType : unit -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.OfType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="TResultType">フィルターを適用してクエリを実行したときに返された <see cref="T:System.Data.Objects.ObjectResult`1" /> の型。</typeparam>
        <summary>Limits the query to only results of a specific type.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [OFTYPE](~/docs/framework/data/adonet/ef/language-reference/oftype-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
<xref:System.Data.Objects.ObjectQuery`1.OfType*> は、クエリの結果を特定のエンティティ型または複合型でフィルター処理するために使用されます。 これには、概念モデル オブジェクトの継承をサポートしています。 詳細については、次を参照してください。 [Entity Data Model: 継承](~/docs/framework/data/adonet/entity-data-model-inheritance.md)します。

<xref:System.Data.Objects.ObjectQuery`1.OfType*>メソッドにのみ適用できる、<xref:System.Data.Objects.ObjectQuery%601>エンティティ型または複合型、EDM で定義されているのです。
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Data.EntitySqlException">The type specified is not valid.</exception>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; OrderBy (string keys, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; OrderBy(string keys, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.OrderBy(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function OrderBy (keys As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ OrderBy(System::String ^ keys, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.OrderBy (keys, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">The key columns by which to order the results.</param>
        <param name="parameters">Zero or more parameters that are used in this method.</param>
        <summary>Orders the query results by the specified criteria.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 入れ子になったクエリでの結果の並べ替えは保証されません。  
  
 <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> は、常にシーケンスにおける最後のクエリ ビルダー メソッドである必要があります。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 例では、作成、新しい<xref:System.Data.Objects.ObjectQuery%601>既存のクエリの order by の結果を格納しているオブジェクト`ProductID`します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_orderby)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_OrderBy](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_orderby)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="keys" /> or <paramref name="parameters" /> parameter is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="key" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt; Select (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;class System.Data.Common.DbDataRecord&gt; Select(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Select(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of DbDataRecord)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;System::Data::Common::DbDataRecord ^&gt; ^ Select(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Select : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;" Usage="objectQuery.Select (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;System.Data.Common.DbDataRecord&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="projection">The list of selected properties that defines the projection.</param>
        <param name="parameters">Zero or more parameters that are used in this method.</param>
        <summary>Limits the query results to only the properties that are defined in the specified projection.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of type <see cref="T:System.Data.Common.DbDataRecord" /> that is equivalent to the original instance with [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> 指定された投影を適用、`projection`パラメーター。 <xref:System.Data.Objects.ObjectQuery%601> メソッドで返される <xref:System.Data.Objects.ObjectQuery%601.Select%2A> は、常に <xref:System.Data.Common.DbDataRecord> の行型です。 単純型、エンティティ型、または複合型の値を返すには、<xref:System.Data.Objects.ObjectQuery`1.SelectValue*> メソッドを使用します。 詳細については、次を参照してください。 [LINQ to Entities](~/docs/framework/data/adonet/ef/language-reference/linq-to-entities.md)します。  
  
 投影にナビゲーション プロパティが含まれている場合は、入れ子になった <xref:System.Data.Common.DbDataRecord> オブジェクトのコレクションがクエリの結果に含まれます。 詳細については、次を参照してください。[方法: ナビゲーション プロパティを使用してリレーションシップを移動](http://msdn.microsoft.com/library/b1d71c7d-16a7-4b46-96ac-690176bd5057)します。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 例では、作成、新しい<xref:System.Data.Objects.ObjectQuery%601>結果がデータ レコードが含まれている、`ProductID`このクエリの結果のフィールド。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_select)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Select](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_select)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="projection" /> is <see langword="null" />.  -or-  <paramref name="parameters" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="projection" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="SelectValue&lt;TResultType&gt;">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;TResultType&gt; SelectValue&lt;TResultType&gt; (string projection, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!!TResultType&gt; SelectValue&lt;TResultType&gt;(string projection, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function SelectValue(Of TResultType) (projection As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of TResultType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TResultType&gt;&#xA; System::Data::Objects::ObjectQuery&lt;TResultType&gt; ^ SelectValue(System::String ^ projection, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.SelectValue : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'ResultType&gt;" Usage="objectQuery.SelectValue (projection, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;TResultType&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TResultType" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="projection" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <typeparam name="TResultType">
          <see cref="T:System.Data.Objects.ObjectQuery`1" /> メソッドによって返された <see cref="M:System.Data.Objects.ObjectQuery`1.SelectValue``1(System.String,System.Data.Objects.ObjectParameter[])" /> の型。</typeparam>
        <param name="projection">The projection list.</param>
        <param name="parameters">An optional set of query parameters that should be in scope when parsing.</param>
        <summary>Limits the query results to only the property specified in the projection.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance of a type compatible with the specific projection. The returned <see cref="T:System.Data.Objects.ObjectQuery`1" /> is equivalent to the original instance with [SELECT VALUE](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> は、単純型、エンティティ型、または複合型の値を返す場合に使用されます。 値型ではなく行型を必要とする投影には、<xref:System.Data.Objects.ObjectQuery%601.Select%2A> メソッドを使用します。 詳細については、次を参照してください。[オブジェクト クエリ](http://msdn.microsoft.com/library/0768033c-876f-471d-85d5-264884349276)します。  
  
 <xref:System.Data.Objects.ObjectQuery`1.SelectValue*>メソッドで指定された投影を適用する、`projection`パラメーター。 <xref:System.Data.Objects.ObjectQuery%601> メソッドから返される <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> は、投影と互換性のある値型であり、かつ <xref:System.Data.Objects.ObjectQuery`1.SelectValue*> と同じ型である必要があります。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 例では、作成、新しい<xref:System.Data.Objects.ObjectQuery%601>のシーケンスの結果を格納している`ProductID`値が既存のクエリの結果から投影されました。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_selectvalue)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_SelectValue](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_selectvalue)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="projection" /> is <see langword="null" />.  -or-  <paramref name="parameters" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="projection" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Skip">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Skip (string keys, string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Skip(string keys, string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Skip(System.String,System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Skip (keys As String, count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Skip(System::String ^ keys, System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Skip : string * string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Skip (keys, count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.String" />
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="keys">The key columns by which to order the results.</param>
        <param name="count">The number of results to skip. This must be either a constant or a parameter reference.</param>
        <param name="parameters">An optional set of query parameters that should be in scope when parsing.</param>
        <summary>Orders the query results by the specified criteria and skips a specified number of results.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with both [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md) and [SKIP](~/docs/framework/data/adonet/ef/language-reference/skip-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> メソッドを <xref:System.Data.Objects.ObjectQuery%601.Top%2A> メソッドの後に使用することはできません。 使用すると<xref:System.Data.Objects.ObjectQuery%601.Top%2A>後<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>、ように機能する、[制限](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)句のステートメント。  
  
   
  
## Examples  
 この例では、5 つ取得`Product`順に並べ替えて、クエリ結果の最初の 3 つをスキップしています。 後でオブジェクト`Product.ListPrice`します。  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">Any argument is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="keys" /> is an empty string.  -or-  <paramref name="count" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;T&gt; IEnumerable&lt;T&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;!T&gt; System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.System#Collections#Generic#IEnumerable&lt;T&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of T) Implements IEnumerable(Of T).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;T&gt; ^ System.Collections.Generic.IEnumerable&lt;T&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;T&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>Returns an enumerator that iterates through the results of the query.</summary>
        <returns>An <see cref="T:System.Collections.Generic.IEnumerator`1" /> object that can be used to iterate through the results.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.System%23Collections%23Generic%23IEnumerable%7BT%7D%23GetEnumerator%2A> を呼び出すとクエリが実行されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Top">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Top (string count, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Top(string count, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Top(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Top (count As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Top(System::String ^ count, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Top : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Top (count, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="count" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="count">The number of items in the results as a string.</param>
        <param name="parameters">An optional set of query parameters that should be in scope when parsing.</param>
        <summary>Limits the query results to a specified number of items.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [TOP](~/docs/framework/data/adonet/ef/language-reference/top-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> は、クエリが並べ替えられていない限り、非決定的です。  
  
 使用すると、<xref:System.Data.Objects.ObjectQuery%601.Top%2A>メソッドの後、<xref:System.Data.Objects.ObjectQuery%601.Skip%2A>と同様に機能、メソッド、[制限](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)のステートメント、 [ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)句。  
  
   
  
## Examples  
 これらの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。  
  
 この例では、既存のクエリの最初の 2 つの結果を含む <xref:System.Data.Objects.ObjectQuery%601> を新たに作成します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_top)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Top](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_top)]  
  
 この例では、5 つ取得`Product`順に並べ替えて、クエリ結果の最初の 3 つをスキップしています。 後でオブジェクト`Product.ListPrice`します。 <xref:System.Data.Objects.ObjectQuery%601.Top%2A> 代わりに使用が[制限](~/docs/framework/data/adonet/ef/language-reference/limit-entity-sql.md)ページングします。  
  
 [!code-csharp[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#projection_skiplimit)]
 [!code-vb[DP ObjectServices Concepts#Projection_SkipLimit](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#projection_skiplimit)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="count" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="count" /> is an empty string.</exception>
      </Docs>
    </Member>
    <Member MemberName="Union">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Union (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Union(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Union(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function Union (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Union(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.Union : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Union query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</param>
        <summary>Combines the results of the query with the results of another object query, without any duplicates.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.Union%2A> 指定された結果`query`重複しないようにします。  
  
 指定された`query`、結果を追加する必要がありますを定義する同じ型またはこの型に昇格できる型の<xref:System.Data.Objects.ObjectQuery%601>します。 たとえば、次は有効なため、`DiscontinuedProducts`に昇格できる`Products`:  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 ため、例外がスローされます、次`Products`に昇格できません`DiscontinuedProducts`します。  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <xref:System.Data.Objects.ObjectQuery%601>型の<xref:System.Data.Common.DbDataRecord>、両方のクエリ内のレコードの列に同じ数の列、および種類をいる必要があります、<xref:System.Data.Common.DbDataRecord>の渡された`query`内の列の型に上位変換可能である必要があります、<xref:System.Data.Common.DbDataRecord>の<xref:System.Data.Objects.ObjectQuery%601>.  
  
 定義されているパラメーターで指定された`query`で定義されているパラメーターとマージされます、<xref:System.Data.Objects.ObjectQuery%601>インスタンス。 パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。 結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。 詳細については、次を参照してください。[クエリ ビルダー メソッド](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.Union%2A> インスタンスから接続を継承します。  
  
   
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601.Union%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_union)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_Union](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_union)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="UnionAll">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; UnionAll (System.Data.Objects.ObjectQuery&lt;T&gt; query);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; UnionAll(class System.Data.Objects.ObjectQuery`1&lt;!T&gt; query) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.UnionAll(System.Data.Objects.ObjectQuery{`0})" />
      <MemberSignature Language="VB.NET" Value="Public Function UnionAll (query As ObjectQuery(Of T)) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ UnionAll(System::Data::Objects::ObjectQuery&lt;T&gt; ^ query);" />
      <MemberSignature Language="F#" Value="member this.UnionAll : System.Data.Objects.ObjectQuery&lt;'T&gt; -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.UnionAll query" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="query" Type="System.Data.Objects.ObjectQuery&lt;T&gt;" />
      </Parameters>
      <Docs>
        <param name="query">An <see cref="T:System.Data.Objects.ObjectQuery`1" /> that represents the results to add.</param>
        <summary>Combines the results of the query with the results of another object query, including all duplicates.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [UNION ALL](~/docs/framework/data/adonet/ef/language-reference/union-entity-sql.md) applied to add the results of the specified <paramref name="query" />.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> 指定された結果を追加します。`query`重複をすべて含めています。  
  
 指定された`query`必要がありますを追加する結果を定義する同じ型またはこの型に昇格できる型の<xref:System.Data.Objects.ObjectQuery%601>します。 たとえば、次は有効なため、`DiscontinuedProducts`に昇格できる`Products`:  
  
```  
ObjectQuery<Product>.Union(ObjectQuery<DiscontinuedProduct>)  
```  
  
 ため、例外がスローされます、次`Products`に昇格できません`DiscontinuedProducts`します。  
  
```  
ObjectQuery <DiscontinuedProduct>.Union(ObjectQuery<Product>)   
```  
  
 <xref:System.Data.Objects.ObjectQuery%601>型の<xref:System.Data.Common.DbDataRecord>、両方のクエリ内のレコードの列に同じ数の列、および種類をいる必要があります、<xref:System.Data.Common.DbDataRecord>の渡された`query`内の列の型に上位変換可能である必要があります、<xref:System.Data.Common.DbDataRecord>の<xref:System.Data.Objects.ObjectQuery%601>.  
  
 定義されているパラメーターで指定された`query`で定義されているパラメーターとマージされます、<xref:System.Data.Objects.ObjectQuery%601>インスタンス。 パラメーターは、結合された <xref:System.Data.Objects.ObjectParameterCollection> 内で一意である必要があります。 結合されたコレクション内に同じ名前のパラメーターが 2 つ存在することはできません。 詳細については、次を参照してください。[クエリ ビルダー メソッド](http://msdn.microsoft.com/library/05685434-05e6-41c2-8d5e-8933b88a40b0)します。  
  
 結果のクエリは、<xref:System.Data.Objects.ObjectQuery%601> が呼び出された <xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> インスタンスから接続を継承します。  
  
   
  
## Examples  
 このトピックの例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601.UnionAll%2A> メソッドを使用して、新しい <xref:System.Data.Objects.ObjectQuery%601> オブジェクトを作成します。 次に、新しい <xref:System.Data.Objects.ObjectQuery%601.Distinct%2A> オブジェクトで <xref:System.Data.Objects.ObjectQuery%601> メソッドを呼び出して、このクエリの一意の結果を取得します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_distinct_unionall)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Distinct_UnionAll](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_distinct_unionall)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">The <paramref name="query" /> parameter is <see langword="null" />.</exception>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public System.Data.Objects.ObjectQuery&lt;T&gt; Where (string predicate, params System.Data.Objects.ObjectParameter[] parameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Data.Objects.ObjectQuery`1&lt;!T&gt; Where(string predicate, class System.Data.Objects.ObjectParameter[] parameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Data.Objects.ObjectQuery`1.Where(System.String,System.Data.Objects.ObjectParameter[])" />
      <MemberSignature Language="VB.NET" Value="Public Function Where (predicate As String, ParamArray parameters As ObjectParameter()) As ObjectQuery(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::Objects::ObjectQuery&lt;T&gt; ^ Where(System::String ^ predicate, ... cli::array &lt;System::Data::Objects::ObjectParameter ^&gt; ^ parameters);" />
      <MemberSignature Language="F#" Value="member this.Where : string * System.Data.Objects.ObjectParameter[] -&gt; System.Data.Objects.ObjectQuery&lt;'T&gt;" Usage="objectQuery.Where (predicate, parameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Data.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Objects.ObjectQuery&lt;T&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="predicate" Type="System.String" />
        <Parameter Name="parameters" Type="System.Data.Objects.ObjectParameter[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="predicate">The filter predicate.</param>
        <param name="parameters">Zero or more parameters that are used in this method.</param>
        <summary>Limits the query to results that match specified filtering criteria.</summary>
        <returns>A new <see cref="T:System.Data.Objects.ObjectQuery`1" /> instance that is equivalent to the original instance with [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) applied.</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 この例がに基づいて、 [AdventureWorks Sales Model](http://msdn.microsoft.com/library/f16cd988-673f-4376-b034-129ca93c7832)します。 この例では、<xref:System.Data.Objects.ObjectQuery%601> という条件でフィルターされた既存のクエリの結果を含む `"it.ProductID = 900"` を新たに作成します。  
  
 [!code-csharp[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/csharp/VS_Snippets_Data/DP ObjectServices Concepts/CS/Source.cs#objectquery_where)]
 [!code-vb[DP ObjectServices Concepts#ObjectQuery_Where](~/samples/snippets/visualbasic/VS_Snippets_Data/DP ObjectServices Concepts/VB/Source.vb#objectquery_where)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="predicate" /> is <see langword="null" />.  -or-  <paramref name="parameters" /> is <see langword="null" />.</exception>
        <exception cref="T:System.ArgumentException">The <paramref name="predicate" /> is an empty string.</exception>
      </Docs>
    </Member>
  </Members>
</Type>