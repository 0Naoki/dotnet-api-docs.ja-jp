<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="HostingEnvironment.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5323f647b75757e8c78f352ea5a949ed1fe17f800.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">323f647b75757e8c78f352ea5a949ed1fe17f800</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Provides application-management functions and application services to a managed application within its application domain.</source>
          <target state="translated">アプリケーション ドメイン内でマネージ アプリケーションにアプリケーション管理機能およびアプリケーション サービスを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>This class cannot be inherited.</source>
          <target state="translated">このクラスは継承できません。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Each managed application domain contains a static instance of the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> class, which provides access to application-management functions and application services.</source>
          <target state="translated">各管理対象のアプリケーション ドメインには静的インスタンスが含まれています、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>アプリケーション管理機能およびアプリケーション サービスへのアクセスを提供するクラス。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>The following code example is a webpage that displays the application information available from the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object.</source>
          <target state="translated">次のコード例は、web ページから利用可能なアプリケーションの情報を表示する、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph> constructor initializes the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph>コンス トラクターの初期化、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.#ctor">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph> constructor is called only once by the application's <ph id="ph2">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph>コンス トラクターをアプリケーションの 1 回だけ呼び出す<ph id="ph2">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.#ctor">
          <source>Calling the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph> constructor more than once will cause an <ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph> exception to be thrown.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.%23ctor%2A&gt;</ph>コンス トラクターとが 1 回以上、<ph id="ph2">&lt;xref:System.InvalidOperationException&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.#ctor">
          <source>The <ph id="ph1">&lt;see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /&gt;</ph> constructor is called more than once.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="M:System.Web.Hosting.HostingEnvironment.#ctor" /&gt;</ph> コンストラクターが、何度も呼び出されています。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationHost">
          <source>This property supports the <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このプロパティは、<ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationHost">
          <source>An object that contains information about the application host.</source>
          <target state="translated">アプリケーション ホストについての情報を格納するオブジェクト。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationID">
          <source>Gets the unique identifier of the application.</source>
          <target state="translated">アプリケーションの一意の識別子を取得します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationID">
          <source>The unique identifier of the application.</source>
          <target state="translated">アプリケーションの一意の識別子。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationID">
          <source>The application must be running with <ph id="ph1">&lt;xref:System.Web.AspNetHostingPermissionLevel&gt;</ph> set to high trust to access the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A&gt;</ph> property.</source>
          <target state="translated">アプリケーションを実行する必要があります<ph id="ph1">&lt;xref:System.Web.AspNetHostingPermissionLevel&gt;</ph>高い信頼に設定すると、アクセス、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationID%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationMonitors">
          <source>Gets a group of repleacable monitor objects used by ASP.NET subsystems to maintain application health.</source>
          <target state="translated">アプリケーションを正常な状態に保つために ASP.NET サブシステムによって使用されている置き換え可能なモニター オブジェクトのグループを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
          <source>Gets the physical path on disk to the application's directory.</source>
          <target state="translated">アプリケーションのディレクトリへのディスク上の物理パスを取得します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
          <source>The physical path on disk to the application's directory.</source>
          <target state="translated">アプリケーションのディレクトリへのディスク上の物理パス。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A&gt;</ph> property to construct a path to a data file in the application's App_Data directory.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath%2A&gt;</ph>プロパティをアプリケーションの App_Data ディレクトリ内のデータ ファイルへのパスを構築します。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class overview topic.</source>
          <target state="translated">例を実行するために必要な完全なコードのセクションの例を参照してください、<ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>クラスの概要に関するトピック。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
          <source>Gets the root virtual path of the application.</source>
          <target state="translated">アプリケーションのルートへの仮想パスを取得します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
          <source>The root virtual path of the application with no trailing slash (/).</source>
          <target state="translated">末尾のスラッシュ (/) を除いた、アプリケーションのルートへの仮想パス。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A&gt;</ph> property always returns "<ph id="ph2">`/"`</ph> as the first character of the returned value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath%2A&gt;</ph>プロパティは常に返します"<ph id="ph2">`/"`</ph>戻り値の最初の文字として。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath">
          <source>If the application is located in the root of the website, the return value is just "<ph id="ph1">`/"`</ph>.</source>
          <target state="translated">アプリケーションが、web サイトのルートに配置されている場合、戻り値は"<ph id="ph1">`/"`</ph>です。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.Cache">
          <source>Gets the <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> instance for the current application.</source>
          <target state="translated">現在のアプリケーションに対する <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> インスタンスを取得します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.Cache">
          <source>The current <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> instance.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Web.Caching.Cache" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
          <source>Reduces the count of busy objects in the hosted environment by one.</source>
          <target state="translated">ホスト環境のビジー オブジェクトの数を 1 つ減らします。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
          <source>When a busy registered object finishes its work, it calls the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph> method to signal the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object that it has completed processing and to reduce the count of busy objects by one.</source>
          <target state="translated">ビジー状態である登録済みのオブジェクトには、その作業が完了すると、呼び出し、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph>を通知するメソッド、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクトの処理が完了したこととして、いずれかのビジー オブジェクトの数を削減します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">ビジー状態の数が 0 より大きい場合は、ホスト アプリケーションとは保留中の要求がない場合でもタイムアウトしません。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.DecrementBusyCount">
          <source>There must be a call to the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph> method for each call to the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;</ph> method.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph>メソッド呼び出しごとに、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Allows code to impersonate a different user.</source>
          <target state="translated">コードによって別のユーザーを偽装できるようにします。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate">
          <source>Impersonates the user represented by the application identity.</source>
          <target state="translated">アプリケーション ID によって表されるユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">偽装前の Windows ユーザーを表す <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスは偽装できません。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows アカウント トークンのハンドル。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
          <source>Impersonates the user represented by the specified user token.</source>
          <target state="translated">指定したユーザー トークンによって表されるユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">偽装前の Windows ユーザーを表す <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスは偽装できません。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>The handle of a Windows account token.</source>
          <target state="translated">Windows アカウント トークンのハンドル。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>The path to the requested resource.</source>
          <target state="translated">要求されたリソースへのパス。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>Impersonates the user specified by the configuration settings for the specified virtual path, or the specified user token.</source>
          <target state="translated">指定した仮想パスまたは指定したユーザー トークンについて構成設定で指定されたユーザーを偽装します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that represents the Windows user prior to impersonation; this object can be used to revert to the original user's context.</source>
          <target state="translated">偽装前の Windows ユーザーを表す <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。このオブジェクトを使用して、元のユーザーのコンテキストに戻すことができます。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A&gt;</ph> method impersonates the user that results after applying all  elements in the configuration settings affecting the specified virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A&gt;</ph>メソッドすべての要素で指定された仮想パスに影響する構成設定の適用後、その結果、ユーザーの権限を借用します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>If an <ph id="ph1">`identity`</ph> element is not specified for the virtual path, the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A&gt;</ph> method impersonates the specified Windows account.</source>
          <target state="translated">場合、<ph id="ph1">`identity`</ph>された仮想パスの要素が指定されていない、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.Impersonate%2A&gt;</ph>メソッドは、指定された Windows アカウントを偽装します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)">
          <source>The process cannot impersonate.</source>
          <target state="translated">プロセスは偽装できません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager">
          <source>Gets a value that indicates whether the hosting environment has access to the ASP.NET build system.</source>
          <target state="translated">ホスティング環境が ASP.NET ビルド システムにアクセスできるかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.InClientBuildManager">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the application domain is the ASP.NET hosted application domain used in <ph id="ph2">&lt;see langword="ClientBuildManager" /&gt;</ph> scenarios; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アプリケーション ドメインが <ph id="ph1">&lt;see langword="true" /&gt;</ph> のシナリオで使用される ASP.NET ホストのアプリケーション ドメインである場合は <ph id="ph2">&lt;see langword="ClientBuildManager" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
          <source>Increases the count of busy objects in the hosted environment by one.</source>
          <target state="translated">ホスト環境のビジー オブジェクトの数を 1 つ増やします。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
          <source>Registered objects signal the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object that it is running and to increase the count of busy objects by one.</source>
          <target state="translated">登録されているオブジェクトのシグナル、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>実行されているオブジェクトと 1 つのビジー オブジェクトの数を増やすにします。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
          <source>If the busy count is greater than zero, the hosting application will not time out even if there are no pending requests.</source>
          <target state="translated">ビジー状態の数が 0 より大きい場合は、ホスト アプリケーションとは保留中の要求がない場合でもタイムアウトしません。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.IncrementBusyCount">
          <source>There must be a call to the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph> method for each call to the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;</ph> method.</source>
          <target state="translated">呼び出す必要があります、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A&gt;</ph>メソッド呼び出しごとに、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.InitializationException">
          <source>Gets any exception thrown during initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> オブジェクトの初期化中にスローされた例外を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.InitializationException">
          <source>The exception thrown during initialization of the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> オブジェクトの初期化中にスローされた例外。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.InitializationException">
          <source>If no exception was thrown, returns <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">例外がスローされなかった場合は、<ph id="ph1">&lt;see langword="null" /&gt;</ph> が返されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
          <source>Gives the <ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> object an infinite lifetime by preventing a lease from being created.</source>
          <target state="translated">リースが作成されないようにすることで、<ph id="ph1">&lt;see cref="T:System.Web.Hosting.HostingEnvironment" /&gt;</ph> オブジェクトに無期限の有効期間を指定します。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
          <source>Always <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">常に <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
          <source>This method overrides the <ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph> method in its base class.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.MarshalByRefObject.InitializeLifetimeService%2A&gt;</ph>基本クラス メソッド。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitializeLifetimeService">
          <source>It always returns <ph id="ph1">`null`</ph> and prevents a lease from being created that would limit the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object's lifetime.</source>
          <target state="translated">常に返します<ph id="ph1">`null`</ph>作成されないリースで、制限されることになり、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクトの有効期間。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>Starts shutting down the web application associated with this host and removes registered objects from the system.</source>
          <target state="translated">このホストに関連付けられている web アプリケーションのシャットダウンを開始し、登録済みのオブジェクトをシステムから削除します。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>Use the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A&gt;</ph> method to stop a web application domain and remove any objects registered with the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph> method.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.InitiateShutdown%2A&gt;</ph>に登録されている web アプリケーションのドメインを停止し、すべてのオブジェクトを削除する方法、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>This method returns immediately, before the shutdown is complete.</source>
          <target state="translated">このメソッドは、シャット ダウンが完了する前に、すぐに返します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method is called on each registered object with the passed parameter set to <ph id="ph2">`false`</ph> to allow each registered object to shut down asynchronously.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> 、渡されたパラメーターのセットを登録済みの各オブジェクトのメソッドが呼び出された<ph id="ph2">`false`</ph>各登録済みのオブジェクトを非同期的にシャット ダウンを許可します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>After waiting for the amount of time specified in the <ph id="ph1">`shutdownTimeout`</ph> attribute of the  configuration element, the <ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method is called again with the passed parameter set to <ph id="ph3">`true`</ph> for each registered object remaining.</source>
          <target state="translated">指定された時間待機した後、<ph id="ph1">`shutdownTimeout`</ph>構成要素の属性、<ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph>渡されたパラメーター設定したメソッドが再度呼び出さ<ph id="ph3">`true`</ph>残り登録されているオブジェクトごとにします。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.InitiateShutdown">
          <source>Once all registered objects have finished shutting down, the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> objects shuts down the application domain.</source>
          <target state="translated">登録済みのすべてのオブジェクトでは、シャット ダウンが完了したら後、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクトが、アプリケーション ドメインを終了します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment">
          <source>Gets a value that indicats whether the current application is in a development environment.</source>
          <target state="translated">現在のアプリケーションが開発環境で実行されているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the application is in a development environment; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アプリケーションが開発環境にある場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.IsHosted">
          <source>Gets a value indicating whether the current application domain is being hosted by an <ph id="ph1">&lt;see cref="T:System.Web.Hosting.ApplicationManager" /&gt;</ph> object.</source>
          <target state="translated">現在のアプリケーション ドメインが <ph id="ph1">&lt;see cref="T:System.Web.Hosting.ApplicationManager" /&gt;</ph> オブジェクトによってホストされているかどうかを示す値を取得します。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.IsHosted">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the application domain is hosted by an <ph id="ph2">&lt;see cref="T:System.Web.Hosting.ApplicationManager" /&gt;</ph> object; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">アプリケーション ドメインが <ph id="ph2">&lt;see cref="T:System.Web.Hosting.ApplicationManager" /&gt;</ph> オブジェクトによってホストされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)">
          <source>The virtual path (absolute or relative).</source>
          <target state="translated">(絶対または相対) 仮想パス。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)">
          <source>Maps a virtual path to a physical path on the server.</source>
          <target state="translated">サーバー上の物理パスに仮想パスを割り当てます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.MapPath(System.String)">
          <source>The physical path on the server specified by <ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="virtualPath" /&gt;</ph> で指定されたサーバー上の物理パス。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU">
          <source>Gets or sets the maximum concurrent requests per CPU.</source>
          <target state="translated">CPU あたりの同時実行される要求の最大数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU">
          <source>The maximum concurrent requests per CPU.</source>
          <target state="translated">CPU あたりの同時実行される要求の最大数。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU">
          <source>Gets or sets the maximum concurrent threads per CPU.</source>
          <target state="translated">CPU あたりの同時実行されるスレッドの最大数を取得または設定します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU">
          <source>The maximum concurrent threads per CPU.</source>
          <target state="translated">CPU あたりの同時実行されるスレッドの最大数。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.MessageReceived">
          <source>This method supports the <ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> infrastructure and is not intended to be used directly from your code.</source>
          <target state="translated">このメソッドは、<ph id="ph1">[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]</ph> インフラストラクチャをサポートしますが、独自に作成したコードから直接使用するためのものではありません。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>This overloaded method doesn’t flow the <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> or <ph id="ph2">&lt;see cref="T:System.Security.SecurityContext" /&gt;</ph> from the caller to the callee.</source>
          <target state="translated">このオーバーロードされたメソッドは、呼び出した側から呼び出された側に <ph id="ph1">&lt;see cref="T:System.Threading.ExecutionContext" /&gt;</ph> または <ph id="ph2">&lt;see cref="T:System.Security.SecurityContext" /&gt;</ph> をフローさせません。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Therefore, members of those objects, such as the <ph id="ph1">&lt;see cref="P:System.Threading.Thread.CurrentPrincipal" /&gt;</ph> property, will not flow from the caller to the callee.</source>
          <target state="translated">そのため、それらのオブジェクトのメンバー (<ph id="ph1">&lt;see cref="P:System.Threading.Thread.CurrentPrincipal" /&gt;</ph> プロパティなど) は、呼び出した側から呼び出された側にフローしません。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>A unit of execution.</source>
          <target state="translated">実行の単位。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">異なり、通常のスレッド プールの作業項目 ASP.NET を追跡できます作業この API を通して登録されている項目が現在実行されている、され、ASP.NET ランタイムが遅延 AppDomain のシャット ダウンされるまで、これらの作業項目の実行が完了に試行します。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">この API は、ASP.NET で管理された AppDomain の外部で呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">アプリケーションのシャット ダウンするときは、指定の CancellationToken が通知されます。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})">
          <source><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A&gt;</ph> takes a Task-returning callback; the work item will be considered finished when the callback returns.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A&gt;</ph> タスクを返すコールバックを受け取るコールバックが戻るときに完了したら、作業項目を考慮します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>A unit of execution.</source>
          <target state="translated">実行の単位。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>[Supported in the .NET Framework 4.5.2 and later versions]</source>
          <target state="translated">[.NET Framework 4.5.2 以降のバージョンでのみでサポート]</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>Schedules a task which can run in the background, independent of any request.</source>
          <target state="translated">どの要求とも独立した形で、バック グラウンドで実行するタスクをスケジュールします。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>Differs from a normal ThreadPool work item in that ASP.NET can keep track of how many work items registered through this API are currently running, and the ASP.NET runtime will try to delay AppDomain shutdown until these work items have finished executing.</source>
          <target state="translated">異なり、通常のスレッド プールの作業項目 ASP.NET を追跡できます作業この API を通して登録されている項目が現在実行されている、され、ASP.NET ランタイムが遅延 AppDomain のシャット ダウンされるまで、これらの作業項目の実行が完了に試行します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>This API cannot be called outside of an ASP.NET-managed AppDomain.</source>
          <target state="translated">この API は、ASP.NET で管理された AppDomain の外部で呼び出すことはできません。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source>The provided CancellationToken will be signaled when the application is shutting down.</source>
          <target state="translated">アプリケーションのシャット ダウンするときは、指定の CancellationToken が通知されます。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})">
          <source><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A&gt;</ph> takes a Task-returning callback; the work item will be considered finished when the returned Task transitions to a terminal state.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem%2A&gt;</ph> タスクを返すコールバックを受け取る作業項目と完了、返されるタスクが終了状態に遷移すると見なされます。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The object to register.</source>
          <target state="translated">登録するオブジェクト。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Places an object in the list of registered objects for the application.</source>
          <target state="translated">アプリケーションの登録済みオブジェクトのリストにオブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph>クラスを作成、管理、および現在のアプリケーション ドメイン内のオブジェクトを破棄するのには、現在のアプリケーション ドメイン外のメソッドを有効にします。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph> method is used to register previously created objects with the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph>ホスティング環境を以前に作成したオブジェクトを登録するメソッドを使用します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Objects registered with the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph> method must implement the <ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> interface.</source>
          <target state="translated">登録されているオブジェクト、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph>メソッドを実装する必要があります、<ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>To use a registered object, follow these steps:</source>
          <target state="translated">登録済みのオブジェクトを使用するのには、次の手順を実行します。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Create a new instance of your registered object by calling the <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">呼び出すことによって、登録済みのオブジェクトの新しいインスタンスを作成、<ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Call a type-specific method to initialize your new object.</source>
          <target state="translated">新しいオブジェクトを初期化するために、型固有メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>In the initialization method, call the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph> method to add the object to the list of registered objects.</source>
          <target state="translated">初期化メソッドを呼び出して、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A&gt;</ph>登録されているオブジェクトの一覧に、オブジェクトを追加します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Call the <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType&gt;</ph> method to return the registered object when required.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=nameWithType&gt;</ph>必要な場合に、登録されているオブジェクトを返すメソッド。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>When you wish to stop your object, call the <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">オブジェクトを停止するときに呼び出す、<ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType&gt;</ph> method in turn calls the <ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出して、<ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>In the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType&gt;</ph> method, have your object call the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=nameWithType&gt;</ph>メソッド、オブジェクトの呼び出しがある、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The following code example is an implementation of a <ph id="ph1">`Start`</ph> method for a registered object.</source>
          <target state="translated">次のコード例は、実装の<ph id="ph1">`Start`</ph>登録済みのオブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> interface overview topic.</source>
          <target state="translated">例を実行するために必要な完全なコードのセクションの例を参照してください、<ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph>インターフェイスの概要に関するトピック。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>The new <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> instance to add to the compilation system.</source>
          <target state="translated">コンパイル システムに追加する新しい <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>Registers a new <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> instance with the ASP.NET compilation system.</source>
          <target state="translated">ASP.NET コンパイル システムに新しい <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> インスタンスを登録します。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A&gt;</ph> method adds the specified <ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance to the application's list of virtual-path providers.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider%2A&gt;</ph>メソッドは、指定した追加<ph id="ph2">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>アプリケーションの一覧に仮想パス プロバイダーのインスタンス。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class overview.</source>
          <target state="translated">詳細については、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>クラスの概要です。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>The following code example is part of an application startup method that registers a custom <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance with the compilation system.</source>
          <target state="translated">次のコード例は、カスタムを登録するアプリケーションのスタートアップ メソッドの一部<ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>コンパイル システム インスタンス。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> class overview topic.</source>
          <target state="translated">例を実行するために必要な完全なコードのセクションの例を参照してください、<ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>クラスの概要に関するトピック。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" uid="T:System.Web.Hosting.HostingEnvironment">
          <source>Sets culture information for the current thread.</source>
          <target state="translated">現在のスレッドのカルチャ情報を設定します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures">
          <source>Sets the current thread to the culture specified in the application configuration file.</source>
          <target state="translated">現在のスレッドを、アプリケーションの構成ファイルで指定されたカルチャに設定します。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">変更前のカルチャを表す <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A&gt;</ph> method sets the current thread to the culture specified in the <bpt id="p1">[</bpt>globalization Element (ASP.NET Settings Schema)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept> element in the application's configuration file.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A&gt;</ph>メソッドで指定されたカルチャの現在のスレッドの設定、<bpt id="p1">[</bpt>グローバリゼーション要素 (ASP.NET 設定スキーマ)<ept id="p1">](http://msdn.microsoft.com/library/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7)</ept>アプリケーションの構成ファイル内の要素。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
          <source>The path that contains the culture information.</source>
          <target state="translated">カルチャ情報を格納するパス。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
          <source>Sets the current thread to the culture of the specified virtual path.</source>
          <target state="translated">現在のカルチャを、指定した仮想パスのカルチャに設定します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
          <source>An <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> object that represents the culture prior to changing; this object can be used to revert to the previous culture.</source>
          <target state="translated">変更前のカルチャを表す <ph id="ph1">&lt;see cref="T:System.IDisposable" /&gt;</ph> オブジェクト。このオブジェクトを使用して、元のカルチャに戻すことができます。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.SetCultures(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A&gt;</ph> method sets the current thread to the culture that results after applying all  elements in the configuration files affecting the specified virtual path.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.SetCultures%2A&gt;</ph>メソッドは、現在のスレッドを指定した仮想パスに影響する構成ファイル内のすべての要素を適用した後に結果をカルチャに設定します。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.ShutdownReason">
          <source>Returns an enumerated value that indicates why the application terminated.</source>
          <target state="translated">アプリケーションの終了理由を示す列挙値を返します。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.ShutdownReason">
          <source>One of the <ph id="ph1">&lt;see cref="T:System.Web.ApplicationShutdownReason" /&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.ApplicationShutdownReason" /&gt;</ph> 値のいずれか 1 つ。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.SiteName">
          <source>Gets the name of the site.</source>
          <target state="translated">サイトの名前を取得します。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.SiteName">
          <source>The name of the site.</source>
          <target state="translated">サイトの名前。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>[Supported in the .NET Framework 4.5.1 only]</source>
          <target state="translated">[.NET Framework 4.5.1 のみでサポート]</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>Occurs when the worker process or application pool associated with this host has stopped listening for new requests and will eventually shut down.</source>
          <target state="translated">発生した時、ワーカーの処理か、このホストに関連付けられているアプリケーション プールが新しい要求のリッスンを停止して、最終的にシャット ダウンされるときに発生します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>When an application pool and its associated worker processes are being shut down by IIS, for example when an application pool has reached a scheduled recycle interval, IIS notifies the ASP.NET runtime that the application is shutting down and the worker process for the application pool stops listening for new requests.</source>
          <target state="translated">アプリケーション プールと関連付けられているワーカー プロセスは、IIS によって停止されることは、たとえばアプリケーション プールが、定期的なリサイクル間隔、IIS に達したときに通知 ASP.NET ランタイム、アプリケーションがシャット ダウンしていることと、アプリケーション プールのワーカー プロセスは、新しい要求のリッスンを停止します。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>Applications that use long-running requests, for example <bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> applications, can listen for the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event and gracefully shut down their long-running operations when IIS has initiated the shutdown of an application pool and its associated worker processes.</source>
          <target state="translated">たとえば、実行時間の長い要求を使用するアプリケーション<bpt id="p1">[</bpt>SignalR<ept id="p1">](http://go.microsoft.com/fwlink/?LinkID=285432)</ept> 、アプリケーションがリッスンできる、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベントにシャット ダウン、長時間実行処理 IIS がアプリケーション プールと関連付けられているワーカー プロセスのシャット ダウンを開始したときに、します。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>There are several design considerations that a developer must consider when implementing the <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event:</source>
          <target state="translated">開発者を実装する場合を考慮する必要がありますのあるいくつかの設計の考慮事項があります、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event is only available for applications that are configured to use the IIS integrated pipeline.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベントは、IIS 統合パイプラインを使用するように構成されているアプリケーションの使用のみ。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>Developers must not throw errors from their <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> implementations; throwing errors will have unpredictable results.</source>
          <target state="translated">開発者からのエラーをスローする必要があります、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>の実装です。 予期しない結果がエラーをスローします。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>Due to the concurrent nature of operations within ASP.NET, there is no guarantee that ASP.NET will call a <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event once it has been implemented by a developer.</source>
          <target state="translated">ASP.NET 内の操作の同時実行の性質により、ASP.NET が発信するという保証はありません、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベントと、開発者が実装されています。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event can execute concurrently with other <ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> notifications.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベントは、他のと同時に実行できる<ph id="ph2">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph>通知します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source>Developers need to be aware that ASP.NET may shut down the application domain while their <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event is executing and design their implementations to handle that possibility.</source>
          <target state="translated">開発者は、ASP.NET がシャット ダウン中にアプリケーション ドメインことに注意する必要があります、<ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph>イベントを実行して、その可能性を処理する実装を設計します。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.Hosting.HostingEnvironment.StopListening">
          <source><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> event handlers must not block; blocking implementations will result in deadlocks, and IIS will terminate the worker process when the rapid fail protection interval is reached.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.StopListening&gt;</ph> イベント ハンドラーをブロックする必要があります。実装をブロックして、デッドロックが発生して、ラピッド フェール保護間隔に達したときに、IIS のワーカー プロセスが終了します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The object to remove.</source>
          <target state="translated">削除するオブジェクト。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>Removes an object from the list of registered objects for the application.</source>
          <target state="translated">アプリケーションの登録済みのオブジェクトのリストからオブジェクトを削除します。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph> class enables methods outside the current application domain to create, manage, and destroy objects inside the current application domain.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.ApplicationManager&gt;</ph>クラスを作成、管理、および現在のアプリケーション ドメイン内のオブジェクトを破棄するのには、現在のアプリケーション ドメイン外のメソッドを有効にします。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The <ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph> method is used to remove previously registered objects from the hosting environment.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A&gt;</ph>メソッドを使用して、ホスティング環境から以前に登録されているオブジェクトを削除します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>The following code example is the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph> method for a registered object.</source>
          <target state="translated">次のコード例は、<ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject.Stop%2A&gt;</ph>登録済みのオブジェクトのメソッドです。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)">
          <source>For the full code required to run the example, see the Example section of the <ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph> interface overview topic.</source>
          <target state="translated">例を実行するために必要な完全なコードのセクションの例を参照してください、<ph id="ph1">&lt;xref:System.Web.Hosting.IRegisteredObject&gt;</ph>インターフェイスの概要に関するトピック。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" uid="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
          <source>Gets the virtual path provider for this application.</source>
          <target state="translated">このアプリケーションの仮想パス プロバイダーを取得します。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
          <source>The <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> instance for this application.</source>
          <target state="translated">このアプリケーションの <ph id="ph1">&lt;see cref="T:System.Web.Hosting.VirtualPathProvider" /&gt;</ph> インスタンス。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
          <source>When more than one <ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph> instance is registered, the <ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph> object manages the call chain.</source>
          <target state="translated">ときに 1 つ以上<ph id="ph1">&lt;xref:System.Web.Hosting.VirtualPathProvider&gt;</ph>インスタンスが登録されると、<ph id="ph2">&lt;xref:System.Web.Hosting.HostingEnvironment&gt;</ph>オブジェクトは、呼び出しチェーンを管理します。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.Hosting.HostingEnvironment.VirtualPathProvider">
          <source>You cannot control the order in which virtual path providers are called.</source>
          <target state="translated">仮想パス プロバイダーが呼び出される順序を制御できません。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>