<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Binary.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac581a70bdf5bb482364db23cd76201435d5f64f14b.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">81a70bdf5bb482364db23cd76201435d5f64f14b</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Binary">
          <source>Represents an immutable block of binary data.</source>
          <target state="translated">バイナリ データの変更できないブロックを表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>The bytes representing the binary data.</source>
          <target state="translated">バイナリ データを表すバイト。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>When<ph id="ph1">`null`</ph> is passed to this constructor instead of the required array of bytes, a <ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph> exception is thrown.</source>
          <target state="translated">ときに<ph id="ph1">`null`</ph>(バイト単位) の必要な配列の代わりにこのコンス トラクターに渡される、<ph id="ph2">&lt;xref:System.ArgumentNullException?displayProperty=nameWithType&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.#ctor(System.Byte[])">
          <source>Do not rely on this behavior because it may change in the future.</source>
          <target state="translated">今後変更可能性がありますので、この動作に依存しないでください。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" uid="T:System.Data.Linq.Binary">
          <source>Determines whether two binary objects are equal.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to which the current object is being compared.</source>
          <target state="translated">現在のオブジェクトと比較する <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source>Determines whether two binary objects are equal.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しいかどうかを判断します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two binary objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> to compare with the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">現在の <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> と比較する <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source>Determines whether the specified <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> is equal to the current <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph>.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Object" /&gt;</ph> が現在の <ph id="ph2">&lt;see cref="T:System.Object" /&gt;</ph> と等しいかどうかを示します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the two binary objects are equal; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.GetHashCode">
          <source>Serves as a hash function for a particular type.</source>
          <target state="translated">特定の型のハッシュ関数として機能します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.GetHashCode">
          <source>A hash code for the current binary object.</source>
          <target state="translated">現在のバイナリ オブジェクトのハッシュ コード。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.Data.Linq.Binary.Length">
          <source>Gets the length of the binary object.</source>
          <target state="translated">バイナリ オブジェクトの長さを取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Data.Linq.Binary.Length">
          <source>An integer representing the length.</source>
          <target state="translated">長さを表す整数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>First binary object.</source>
          <target state="translated">最初のバイナリ オブジェクト。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Second binary object.</source>
          <target state="translated">2 番目のバイナリ オブジェクト。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Describes the equality relationship between two binary objects.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しいかどうかを示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary objects are equal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">バイナリ オブジェクトが等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Equality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Returns <ph id="ph1">`true`</ph> if both are <ph id="ph2">`null`</ph> but returns <ph id="ph3">`false`</ph> if only one is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">返します<ph id="ph1">`true`</ph>両方とも場合<ph id="ph2">`null`</ph>を返しますが、<ph id="ph3">`false`</ph>一方のみが<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>The array of bytes to convert into an instance of the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> type.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 型のインスタンスに変換するバイト配列。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>Enables arrays of bytes to be implicitly coerced to the <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> type in a programming language.</source>
          <target state="translated">プログラミング言語で暗黙的にバイト配列を <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> 型に強制変換できるようにします。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>A <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> class containing the coerced value.</source>
          <target state="translated">強制された値を格納する <ph id="ph1">&lt;see cref="T:System.Data.Linq.Binary" /&gt;</ph> クラス。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>When <ph id="ph1">`null`</ph> is passed to this operator instead of the required array of bytes, a [Implicit Conversion (Byte<ph id="ph2">\&lt;</ph>xref:System.ArgumentNullException?displayProperty=nameWithType&gt; exception is thrown.</source>
          <target state="translated">ときに<ph id="ph1">`null`</ph>(バイト単位) の必要な配列の代わりに、この演算子は、[暗黙的な変換 (バイト<ph id="ph2">\&lt;</ph>xref:System.ArgumentNullException?displayProperty=nameWithType &gt; 例外がスローされます。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Implicit(System.Byte[])~System.Data.Linq.Binary">
          <source>Do not rely on this behavior because it may change in the future.</source>
          <target state="translated">今後変更可能性がありますので、この動作に依存しないでください。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>The first binary object.</source>
          <target state="translated">最初のバイナリ オブジェクト。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>The second binary object.</source>
          <target state="translated">2 番目のバイナリ オブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Describes the inequality relationship between two binary objects.</source>
          <target state="translated">2 つのバイナリ オブジェクトが等しくないかどうかを示します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the binary objects are not equal; otherwise <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">バイナリ オブジェクトが等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Data.Linq.Binary.op_Inequality(System.Data.Linq.Binary,System.Data.Linq.Binary)">
          <source>Returns <ph id="ph1">`false`</ph> if both are <ph id="ph2">`null`</ph>, but returns <ph id="ph3">`true`</ph> if either is <ph id="ph4">`null`</ph>.</source>
          <target state="translated">返します<ph id="ph1">`false`</ph>両方とも場合<ph id="ph2">`null`</ph>を返しますが、<ph id="ph3">`true`</ph>いずれかの場合<ph id="ph4">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToArray">
          <source>Returns an array of bytes that represents the current binary object.</source>
          <target state="translated">現在のバイナリ オブジェクトを表すバイト配列を返します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToArray">
          <source>A byte array that contains the value of the current binary object.</source>
          <target state="translated">現在のバイナリ オブジェクトの値を含むバイト配列。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToString">
          <source>Returns a <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current binary object.</source>
          <target state="translated">現在のバイナリ オブジェクトを表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.Data.Linq.Binary.ToString">
          <source>A <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph> that represents the current binary object.</source>
          <target state="translated">現在のバイナリ オブジェクトを表す <ph id="ph1">&lt;see cref="T:System.String" /&gt;</ph>。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>