<Type Name="AnonymousPipeClientStream" FullName="System.IO.Pipes.AnonymousPipeClientStream">
  <TypeSignature Language="C#" Value="public sealed class AnonymousPipeClientStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeClientStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeClientStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeClientStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeClientStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="db8bb-101">同期と非同期の読み書き操作をサポートする匿名パイプ ストリームのクライアント側を公開します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-101">Exposes the client side of an anonymous pipe stream, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-102">匿名パイプは、セーフを提供し、プロセスの子と親の間の通信をセキュリティで保護を支援します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="db8bb-103"><xref:System.IO.Pipes.AnonymousPipeClientStream>クラスに接続し、親プロセスと情報を交換する子プロセスを有効にします。</span><span class="sxs-lookup"><span data-stu-id="db8bb-103">The <xref:System.IO.Pipes.AnonymousPipeClientStream> class enables a child process to connect to and exchange information with a parent process.</span></span>  
  
 <span data-ttu-id="db8bb-104">匿名パイプは、通常、親と子のプロセス間でデータを転送する名前のない、一方向のパイプです。</span><span class="sxs-lookup"><span data-stu-id="db8bb-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="db8bb-105">匿名パイプは常にローカルです。ネットワーク経由で使用できません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="db8bb-106">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="db8bb-107">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>モードを読み取る。</span><span class="sxs-lookup"><span data-stu-id="db8bb-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="db8bb-108">匿名パイプのクライアント側を呼び出すことによって、サーバー側によって提供されるパイプのハンドルから作成する必要があります、<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db8bb-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="db8bb-109">クライアント プロセスを作成するときに、文字列がパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="db8bb-110">渡されるクライアント プロセスから、<xref:System.IO.Pipes.AnonymousPipeClientStream>としてコンス トラクター、`pipeHandleAsString`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="db8bb-110">From the client process, it is passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="db8bb-111">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]と[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]、最大で 10 パイプは、ネットワーク経由で同時に接続できます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-111">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-112">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-112">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-113">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream> の <xref:System.IO.Pipes.PipeDirection> 値を使用して、親プロセス内に <xref:System.IO.Pipes.PipeDirection.Out> オブジェクトを作成しています。</span><span class="sxs-lookup"><span data-stu-id="db8bb-113">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="db8bb-114">作成、<xref:System.IO.Pipes.AnonymousPipeClientStream>を持つ子プロセス内のオブジェクト、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-114">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="db8bb-115">次に、親プロセスはユーザー指定の文字列を子プロセスに送信します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-115">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="db8bb-116">文字列は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-116">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="db8bb-117">この例では、クライアント プロセスは、サーバー プロセスによって開始します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-117">This example is for the client process, which is started by the server process.</span></span> <span data-ttu-id="db8bb-118">クライアント コードから生成された実行可能ファイルの名前を付けます`pipeClient.exe`し、この例を実行するときに、サーバーの実行可能ファイルと同じディレクトリにコピーします。</span><span class="sxs-lookup"><span data-stu-id="db8bb-118">Name the resulting executable from the client code `pipeClient.exe` and copy it to the same directory as the server executable when you run this example.</span></span> <span data-ttu-id="db8bb-119">パイプ クライアントとサーバーの両方のコードを含む、完全なコード例を参照してください。[する方法: ローカルのプロセス間通信に使用する匿名パイプ](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="db8bb-120"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::String ^ pipeHandleAsString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeHandleAsString"><span data-ttu-id="db8bb-121">パイプ ハンドルを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="db8bb-121">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="db8bb-122">指定したパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-122">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-123">コンス トラクターなしで、<xref:System.IO.Pipes.PipeDirection>パラメーターの既定の方向が、<xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-123">For constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-124">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-124">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-125">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream>を子プロセスでオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-125">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IO.IOException">
          <span data-ttu-id="db8bb-126"><paramref name="pipeHandleAsString" /> が有効なパイプ ハンドルではありません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-126"><paramref name="pipeHandleAsString" /> is not a valid pipe handle.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="db8bb-127">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="db8bb-127">for full trust for the immediate caller.</span></span> <span data-ttu-id="db8bb-128">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-128">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="db8bb-129">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="db8bb-129">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="db8bb-130">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-130">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="safePipeHandle"><span data-ttu-id="db8bb-131">この <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="db8bb-131">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object will encapsulate.</span></span></param>
        <summary><span data-ttu-id="db8bb-132">ハンドルを指定して <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-132">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class from the specified handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-133">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-133">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-134">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-134">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-135">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream>を持つ子プロセスでオブジェクトを作成、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-135">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_ctorSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_ctorSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="db8bb-136"><paramref name="safePipeHandle" /> は有効なハンドルではありません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-136"><paramref name="safePipeHandle" /> is not a valid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="db8bb-137"><paramref name="safePipeHandle" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-137"><paramref name="safePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="db8bb-138"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-138"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="db8bb-139">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="db8bb-139">An I/O error, such as a disk error, has occurred.</span></span>  
  
 <span data-ttu-id="db8bb-140">- または -</span><span class="sxs-lookup"><span data-stu-id="db8bb-140">-or-</span></span>  
  
 <span data-ttu-id="db8bb-141">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="db8bb-141">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="db8bb-142">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="db8bb-142">for full trust for the immediate caller.</span></span> <span data-ttu-id="db8bb-143">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-143">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeClientStream (System.IO.Pipes.PipeDirection direction, string pipeHandleAsString);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, string pipeHandleAsString) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.#ctor(System.IO.Pipes.PipeDirection,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, pipeHandleAsString As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeClientStream(System::IO::Pipes::PipeDirection direction, System::String ^ pipeHandleAsString);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="pipeHandleAsString" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="db8bb-144">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="db8bb-144">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="db8bb-145">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-145">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="pipeHandleAsString"><span data-ttu-id="db8bb-146">パイプ ハンドルを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="db8bb-146">A string that represents the pipe handle.</span></span></param>
        <summary><span data-ttu-id="db8bb-147">指定したパイプの方向およびパイプ ハンドルの文字列形式を使用して、<see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-147">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> class with the specified pipe direction and a string representation of the pipe handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-148">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-148">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-149">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-149">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-150">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream>を持つ子プロセスでオブジェクトを作成、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-150">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="db8bb-151"><paramref name="pipeHandleAsString" /> は無効なハンドルです。</span><span class="sxs-lookup"><span data-stu-id="db8bb-151"><paramref name="pipeHandleAsString" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="db8bb-152"><paramref name="pipeHandleAsString" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-152"><paramref name="pipeHandleAsString" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="db8bb-153"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-153"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="db8bb-154">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="db8bb-154">for full trust for the immediate caller.</span></span> <span data-ttu-id="db8bb-155">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-155">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeClientStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeClientStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeClientStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db8bb-156"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-156">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8bb-157"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトの読み取りモードを設定します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-157">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></summary>
        <value><span data-ttu-id="db8bb-158"><see cref="T:System.IO.Pipes.PipeTransmissionMode" /> オブジェクトの <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" />。</span><span class="sxs-lookup"><span data-stu-id="db8bb-158">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-159">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>読み取りモードにします。</span><span class="sxs-lookup"><span data-stu-id="db8bb-159">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-160">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-160">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-161">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream>を子プロセスでオブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-161">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process.</span></span> <span data-ttu-id="db8bb-162"><xref:System.NotSupportedException>がキャッチされたときに、<xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A>プロパティに設定されている<xref:System.IO.Pipes.PipeTransmissionMode.Message>です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-162">The <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeClientStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="db8bb-163">送信モードが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="db8bb-163">The transmission mode is not valid.</span></span> <span data-ttu-id="db8bb-164">匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-164">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="db8bb-165">送信モードは <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-165">The transmission mode is <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="db8bb-166">接続が切断されているか、別の I/O エラーが発生しています。</span><span class="sxs-lookup"><span data-stu-id="db8bb-166">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="db8bb-167">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="db8bb-167">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db8bb-168">現在のパイプでサポートされるパイプ送信モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-168">Gets the pipe transmission mode supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="db8bb-169">現在のパイプがサポートする <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> です。</span><span class="sxs-lookup"><span data-stu-id="db8bb-169">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db8bb-170">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>読み取りモードにします。</span><span class="sxs-lookup"><span data-stu-id="db8bb-170">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db8bb-171">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db8bb-171">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="db8bb-172">この例では、<xref:System.IO.Pipes.AnonymousPipeClientStream>を子プロセスでオブジェクトを作成し、<xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A>がコンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="db8bb-172">In this example, an <xref:System.IO.Pipes.AnonymousPipeClientStream> object is created in a child process and the <xref:System.IO.Pipes.AnonymousPipeClientStream.TransmissionMode%2A> is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeClientStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeClientStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>