<Type Name="AnonymousPipeServerStream" FullName="System.IO.Pipes.AnonymousPipeServerStream">
  <TypeSignature Language="C#" Value="public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit AnonymousPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.AnonymousPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AnonymousPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class AnonymousPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="b8211-101">同期と非同期の読み書き操作をサポートする匿名パイプに関連するストリームを公開します。</span><span class="sxs-lookup"><span data-stu-id="b8211-101">Exposes a stream around an anonymous pipe, which supports both synchronous and asynchronous read and write operations.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-102">匿名パイプは、セーフを提供し、プロセスの子と親の間の通信をセキュリティで保護を支援します。</span><span class="sxs-lookup"><span data-stu-id="b8211-102">Anonymous pipes help provide safe and secure interprocess communication between child and parent processes.</span></span> <span data-ttu-id="b8211-103"><xref:System.IO.Pipes.AnonymousPipeServerStream>クラスには、子プロセスからの情報の送受信に親プロセスができるようにします。</span><span class="sxs-lookup"><span data-stu-id="b8211-103">The <xref:System.IO.Pipes.AnonymousPipeServerStream> class enables a parent process to send or receive information from a child process.</span></span>  
  
 <span data-ttu-id="b8211-104">匿名パイプは、通常、親と子のプロセス間でデータを転送する名前のない、一方向のパイプです。</span><span class="sxs-lookup"><span data-stu-id="b8211-104">Anonymous pipes are unnamed, one-way pipes that typically transfer data between parent and child processes.</span></span> <span data-ttu-id="b8211-105">匿名パイプは常にローカルです。ネットワーク経由で使用できません。</span><span class="sxs-lookup"><span data-stu-id="b8211-105">Anonymous pipes are always local; they cannot be used over a network.</span></span> <span data-ttu-id="b8211-106">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-106">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="b8211-107">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>モードを読み取る。</span><span class="sxs-lookup"><span data-stu-id="b8211-107">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read modes.</span></span>  
  
 <span data-ttu-id="b8211-108">匿名パイプのクライアント側を呼び出すことによって、サーバー側によって提供されるパイプのハンドルから作成する必要があります、<xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8211-108">The client side of an anonymous pipe must be created from a pipe handle provided by the server side by calling the <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> method.</span></span> <span data-ttu-id="b8211-109">クライアント プロセスを作成するときに、文字列がパラメーターとして渡されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-109">The string is then passed as a parameter when creating the client process.</span></span> <span data-ttu-id="b8211-110">クライアント プロセスからそれに渡され、<xref:System.IO.Pipes.AnonymousPipeClientStream>としてコンス トラクター、`pipeHandleAsString`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b8211-110">From the client process, it is then passed to the <xref:System.IO.Pipes.AnonymousPipeClientStream> constructor as the `pipeHandleAsString` parameter.</span></span>  
  
 <span data-ttu-id="b8211-111"><xref:System.IO.Pipes.AnonymousPipeServerStream>クライアント ハンドルを使用して、オブジェクトを破棄しなければならない、<xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアントの終了時に通知するためにメソッドです。</span><span class="sxs-lookup"><span data-stu-id="b8211-111">The <xref:System.IO.Pipes.AnonymousPipeServerStream> object must dispose the client handle using the <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method in order to be notified when the client exits.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b8211-112">[!INCLUDE[winxppro](~/includes/winxppro-md.md)]と[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]、最大で 10 パイプは、ネットワーク経由で同時に接続できます。</span><span class="sxs-lookup"><span data-stu-id="b8211-112">For [!INCLUDE[winxppro](~/includes/winxppro-md.md)] and [!INCLUDE[win2kserver](~/includes/win2kserver-md.md)], a maximum of 10 pipes can simultaneously connect over the network.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-113">次に、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法の例を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-113">The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="b8211-114">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream> の <xref:System.IO.Pipes.PipeDirection> 値を使用して、親プロセス内に <xref:System.IO.Pipes.PipeDirection.Out> オブジェクトを作成しています。</span><span class="sxs-lookup"><span data-stu-id="b8211-114">This example creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="b8211-115">作成、<xref:System.IO.Pipes.AnonymousPipeClientStream>を持つ子プロセス内のオブジェクト、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.In>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-115">It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.In>.</span></span> <span data-ttu-id="b8211-116">次に、親プロセスはユーザー指定の文字列を子プロセスに送信します。</span><span class="sxs-lookup"><span data-stu-id="b8211-116">The parent process then sends a user-supplied string to the child process.</span></span> <span data-ttu-id="b8211-117">文字列は、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-117">The string is displayed to the console.</span></span>  
  
 <span data-ttu-id="b8211-118">この例は、サーバー プロセスを使用して、<xref:System.IO.Pipes.AnonymousPipeServerStream>クラスです。</span><span class="sxs-lookup"><span data-stu-id="b8211-118">This example is for the server process, which uses the <xref:System.IO.Pipes.AnonymousPipeServerStream> class.</span></span> <span data-ttu-id="b8211-119">パイプ クライアントとサーバーの両方のコードを含む、完全なコード例を参照してください。[する方法: ローカルのプロセス間通信に使用する匿名パイプ](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md)です。</span><span class="sxs-lookup"><span data-stu-id="b8211-119">For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/docs/standard/io/how-to-use-anonymous-pipes-for-local-interprocess-communication.md).</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="b8211-120"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-120">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8211-121"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-121">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-122"><xref:System.IO.Pipes.AnonymousPipeServerStream>なしのコンス トラクター、<xref:System.IO.Pipes.PipeDirection>パラメーターの既定の方向が、<xref:System.IO.Pipes.PipeDirection.Out>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-122">For <xref:System.IO.Pipes.AnonymousPipeServerStream> constructors without a <xref:System.IO.Pipes.PipeDirection> parameter, the default direction is <xref:System.IO.Pipes.PipeDirection.Out>.</span></span> <span data-ttu-id="b8211-123">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-123">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="b8211-124">このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズ、パイプ セキュリティなしとしているオブジェクトと<xref:System.IO.HandleInheritability>値<xref:System.IO.HandleInheritability.None>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-124">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-125">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-125">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-126">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-126">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="b8211-127">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-127">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="b8211-128">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-128">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <summary><span data-ttu-id="b8211-129">パイプの方向を指定して <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-129">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-130">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-130">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="b8211-131">このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズ、パイプ セキュリティなしとしているオブジェクトと<xref:System.IO.HandleInheritability>値<xref:System.IO.HandleInheritability.None>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-131">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size, no pipe security, and a <xref:System.IO.HandleInheritability> value of <xref:System.IO.HandleInheritability.None>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b8211-132"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-132"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-133">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-133">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-134">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-134">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="b8211-135">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-135">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="b8211-136">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-136">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="b8211-137">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-137">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="b8211-138"><see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-138">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <summary><span data-ttu-id="b8211-139">パイプの方向と継承性のモードを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-139">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction and inheritability mode.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-140">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-140">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="b8211-141">このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>既定のバッファー サイズとパイプ セキュリティなしを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-141">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object that has the default buffer size and no pipe security.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-142">次の例では、匿名パイプを使用して子プロセスに、親プロセスから文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-142">The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes.</span></span> <span data-ttu-id="b8211-143">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream>で親プロセスでオブジェクトを作成、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.Out>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-143">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8211-144"><paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-144"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b8211-145"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-145"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-146">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-146">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-147">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-147">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, class Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, class Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, serverSafePipeHandle As SafePipeHandle, clientSafePipeHandle As SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, Microsoft::Win32::SafeHandles::SafePipeHandle ^ serverSafePipeHandle, Microsoft::Win32::SafeHandles::SafePipeHandle ^ clientSafePipeHandle);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="serverSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
        <Parameter Name="clientSafePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="b8211-148">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-148">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="b8211-149">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-149">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="serverSafePipeHandle"><span data-ttu-id="b8211-150">この <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="b8211-150">A safe handle for the pipe that this <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object will encapsulate.</span></span></param>
        <param name="clientSafePipeHandle"><span data-ttu-id="b8211-151"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドル。</span><span class="sxs-lookup"><span data-stu-id="b8211-151">A safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object.</span></span></param>
        <summary><span data-ttu-id="b8211-152">指定したパイプ ハンドルから <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-152">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class from the specified pipe handles.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-153">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-153">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="b8211-154"><paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> は無効なハンドルです。</span><span class="sxs-lookup"><span data-stu-id="b8211-154"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is an invalid handle.</span></span></exception>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b8211-155"><paramref name="serverSafePipeHandle" /> または <paramref name="clientSafePipeHandle" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="b8211-155"><paramref name="serverSafePipeHandle" /> or <paramref name="clientSafePipeHandle" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b8211-156"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-156"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b8211-157">ディスク エラーなどの I/O エラーが発生しました。</span><span class="sxs-lookup"><span data-stu-id="b8211-157">An I/O error, such as a disk error, has occurred.</span></span>  
  
 <span data-ttu-id="b8211-158">- または -</span><span class="sxs-lookup"><span data-stu-id="b8211-158">-or-</span></span>  
  
 <span data-ttu-id="b8211-159">ストリームは閉じられました。</span><span class="sxs-lookup"><span data-stu-id="b8211-159">The stream has been closed.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-160">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-160">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-161">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-161">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (direction As PipeDirection, inheritability As HandleInheritability, bufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="b8211-162">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-162">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="b8211-163">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-163">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="b8211-164">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-164">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span> <span data-ttu-id="b8211-165"><see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> のどちらかに設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-165">Must be set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="b8211-166">バッファーのサイズ。</span><span class="sxs-lookup"><span data-stu-id="b8211-166">The size of the buffer.</span></span> <span data-ttu-id="b8211-167">この値は、0 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-167">This value must be greater than or equal to 0.</span></span></param>
        <summary><span data-ttu-id="b8211-168">パイプの方向、継承性のモード、バッファー サイズを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-168">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, and buffer size.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-169">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-169">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 <span data-ttu-id="b8211-170">このコンス トラクターを作成、<xref:System.IO.Pipes.AnonymousPipeServerStream>パイプ セキュリティなしオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-170">This constructor creates an <xref:System.IO.Pipes.AnonymousPipeServerStream> object without pipe security.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8211-171"><paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-171"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
 <span data-ttu-id="b8211-172">- または -</span><span class="sxs-lookup"><span data-stu-id="b8211-172">-or-</span></span>  
  
 <span data-ttu-id="b8211-173"><paramref name="bufferSize" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b8211-173"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b8211-174"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-174"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-175">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-175">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-176">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-176">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, valuetype System.IO.HandleInheritability inheritability, int32 bufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AnonymousPipeServerStream(System::IO::Pipes::PipeDirection direction, System::IO::HandleInheritability inheritability, int bufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="bufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="direction"><span data-ttu-id="b8211-177">パイプの方向を決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-177">One of the enumeration values that determines the direction of the pipe.</span></span>  
  
 <span data-ttu-id="b8211-178">匿名パイプは常に一方向であるため、<c>direction</c> を <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-178">Anonymous pipes can only be in one direction, so <c>direction</c> cannot be set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></param>
        <param name="inheritability"><span data-ttu-id="b8211-179">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b8211-179">One of the enumeration values that determines whether the underlying handle can be inherited by child processes.</span></span></param>
        <param name="bufferSize"><span data-ttu-id="b8211-180">バッファーのサイズ。</span><span class="sxs-lookup"><span data-stu-id="b8211-180">The size of the buffer.</span></span> <span data-ttu-id="b8211-181">この値は、0 以上である必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-181">This value must be greater than or equal to 0.</span></span></param>
        <param name="pipeSecurity"><span data-ttu-id="b8211-182">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-182">An object that determines the access control and audit security for the pipe.</span></span></param>
        <summary><span data-ttu-id="b8211-183">パイプの方向、継承性のモード、バッファー サイズ、パイプのセキュリティを指定して、<see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b8211-183">Initializes a new instance of the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> class with the specified pipe direction, inheritability mode, buffer size, and pipe security.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-184">A<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.InOut>匿名パイプは一方向であるに定義されているためにはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-184">A <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.InOut> is not supported because anonymous pipes are defined to be one-way.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="b8211-185"><paramref name="inheritability" /> は、<see cref="F:System.IO.HandleInheritability.None" /> にも <see cref="F:System.IO.HandleInheritability.Inheritable" /> にも設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-185"><paramref name="inheritability" /> is not set to either <see cref="F:System.IO.HandleInheritability.None" /> or <see cref="F:System.IO.HandleInheritability.Inheritable" />.</span></span>  
  
 <span data-ttu-id="b8211-186">- または -</span><span class="sxs-lookup"><span data-stu-id="b8211-186">-or-</span></span>  
  
 <span data-ttu-id="b8211-187"><paramref name="bufferSize" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="b8211-187"><paramref name="bufferSize" /> is less than 0.</span></span></exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="b8211-188"><paramref name="direction" /> が <see cref="F:System.IO.Pipes.PipeDirection.InOut" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-188"><paramref name="direction" /> is set to <see cref="F:System.IO.Pipes.PipeDirection.InOut" />.</span></span></exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand"><span data-ttu-id="b8211-189">直前の呼び出し元に対する完全な信頼。</span><span class="sxs-lookup"><span data-stu-id="b8211-189">for full trust for the immediate caller.</span></span> <span data-ttu-id="b8211-190">このメンバーは、部分的に信頼されているコードから使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="b8211-190">This member cannot be used by partially trusted code.</span></span></permission>
      </Docs>
    </Member>
    <Member MemberName="ClientSafePipeHandle">
      <MemberSignature Language="C#" Value="public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ClientSafePipeHandle As SafePipeHandle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Microsoft::Win32::SafeHandles::SafePipeHandle ^ ClientSafePipeHandle { Microsoft::Win32::SafeHandles::SafePipeHandle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>Microsoft.Win32.SafeHandles.SafePipeHandle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8211-191">現在 <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのセーフ ハンドルを取得します。</span><span class="sxs-lookup"><span data-stu-id="b8211-191">Gets the safe handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></summary>
        <value><span data-ttu-id="b8211-192">現在 <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトに接続されている <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトのハンドル。</span><span class="sxs-lookup"><span data-stu-id="b8211-192">A handle for the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object that is currently connected to the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-193"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアント プロセスをクライアント ハンドルが渡された後、メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-193">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="b8211-194">このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-194">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DisposeLocalCopyOfClientHandle">
      <MemberSignature Language="C#" Value="public void DisposeLocalCopyOfClientHandle ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void DisposeLocalCopyOfClientHandle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle" />
      <MemberSignature Language="VB.NET" Value="Public Sub DisposeLocalCopyOfClientHandle ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DisposeLocalCopyOfClientHandle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8211-195"><see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルのローカル コピーを閉じます。</span><span class="sxs-lookup"><span data-stu-id="b8211-195">Closes the local copy of the <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-196"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアント ハンドルがクライアントに渡された後、メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-196">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after the client handle has been passed to the client.</span></span> <span data-ttu-id="b8211-197">このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-197">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-198">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-198">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="b8211-199">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream>で親プロセスでオブジェクトを作成、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.Out>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-199">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~AnonymousPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!AnonymousPipeServerStream ()" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8211-200"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b8211-200">Releases unmanaged resources and performs other cleanup operations before the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> instance is reclaimed by garbage collection.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetClientHandleAsString">
      <MemberSignature Language="C#" Value="public string GetClientHandleAsString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetClientHandleAsString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString" />
      <MemberSignature Language="VB.NET" Value="Public Function GetClientHandleAsString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetClientHandleAsString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b8211-201">接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを文字列として取得します。</span><span class="sxs-lookup"><span data-stu-id="b8211-201">Gets the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle as a string.</span></span></summary>
        <returns><span data-ttu-id="b8211-202">接続されている <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> オブジェクトのハンドルを表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b8211-202">A string that represents the connected <see cref="T:System.IO.Pipes.AnonymousPipeClientStream" /> object's handle.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-203"><xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>クライアント プロセスをクライアント ハンドルが渡された後、メソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-203">The <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> method should be called after a client handle has been passed to a client process.</span></span> <span data-ttu-id="b8211-204">このメソッドが呼び出されない場合、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトは、クライアントを破棄するときに通知されません、<xref:System.IO.Pipes.PipeStream>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b8211-204">If this method is not called, the <xref:System.IO.Pipes.AnonymousPipeServerStream> object will not receive notice when the client disposes of its <xref:System.IO.Pipes.PipeStream> object.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-205">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-205">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="b8211-206">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream>で親プロセスでオブジェクトを作成、<xref:System.IO.Pipes.PipeDirection>値<xref:System.IO.Pipes.PipeDirection.Out>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-206">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection.Out>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReadMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode ReadMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.ReadMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ReadMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode ReadMode {  void set(System::IO::Pipes::PipeTransmissionMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8211-207"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモードを設定します。</span><span class="sxs-lookup"><span data-stu-id="b8211-207">Sets the reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span> <span data-ttu-id="b8211-208">匿名パイプでは、送信モードを <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="b8211-208">For anonymous pipes, transmission mode must be <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" />.</span></span></summary>
        <value><span data-ttu-id="b8211-209"><see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> オブジェクトの読み取りモード。</span><span class="sxs-lookup"><span data-stu-id="b8211-209">The reading mode for the <see cref="T:System.IO.Pipes.AnonymousPipeServerStream" /> object.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-210">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>読み取りモードにします。</span><span class="sxs-lookup"><span data-stu-id="b8211-210">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-211">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-211">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="b8211-212">この例では、<xref:System.NotSupportedException>がキャッチされたときに、<xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A>プロパティに設定されている<xref:System.IO.Pipes.PipeTransmissionMode.Message>です。</span><span class="sxs-lookup"><span data-stu-id="b8211-212">In this example, the <xref:System.NotSupportedException> is caught when the <xref:System.IO.Pipes.AnonymousPipeServerStream.ReadMode%2A> property is set to <xref:System.IO.Pipes.PipeTransmissionMode.Message>.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b8211-213">送信モードが有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b8211-213">The transmission mode is not valid.</span></span> <span data-ttu-id="b8211-214">匿名パイプでは、<see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> のみがサポートされます。</span><span class="sxs-lookup"><span data-stu-id="b8211-214">For anonymous pipes, only <see cref="F:System.IO.Pipes.PipeTransmissionMode.Byte" /> is supported.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b8211-215">プロパティが <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" /> に設定されています。これは、匿名のパイプではサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="b8211-215">The property is set to <see cref="F:System.IO.Pipes.PipeTransmissionMode.Message" />, which is not supported for anonymous pipes.</span></span></exception>
        <exception cref="T:System.IO.IOException"><span data-ttu-id="b8211-216">接続が切断されているか、別の I/O エラーが発生しています。</span><span class="sxs-lookup"><span data-stu-id="b8211-216">The connection is broken or another I/O error occurs.</span></span></exception>
        <exception cref="T:System.ObjectDisposedException"><span data-ttu-id="b8211-217">パイプは閉じています。</span><span class="sxs-lookup"><span data-stu-id="b8211-217">The pipe is closed.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="TransmissionMode">
      <MemberSignature Language="C#" Value="public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.IO.Pipes.PipeTransmissionMode TransmissionMode" />
      <MemberSignature Language="DocId" Value="P:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property TransmissionMode As PipeTransmissionMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::IO::Pipes::PipeTransmissionMode TransmissionMode { System::IO::Pipes::PipeTransmissionMode get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Pipes.PipeTransmissionMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b8211-218">現在のパイプでサポートされるパイプ送信モードを取得します。</span><span class="sxs-lookup"><span data-stu-id="b8211-218">Gets the pipe transmission mode that is supported by the current pipe.</span></span></summary>
        <value><span data-ttu-id="b8211-219">現在のパイプでサポートされる <see cref="T:System.IO.Pipes.PipeTransmissionMode" />。</span><span class="sxs-lookup"><span data-stu-id="b8211-219">The <see cref="T:System.IO.Pipes.PipeTransmissionMode" /> that is supported by the current pipe.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b8211-220">匿名パイプはサポートしていない<xref:System.IO.Pipes.PipeTransmissionMode.Message>読み取りモードにします。</span><span class="sxs-lookup"><span data-stu-id="b8211-220">Anonymous pipes do not support <xref:System.IO.Pipes.PipeTransmissionMode.Message> read mode.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b8211-221">次の例では、匿名パイプを使用して、親プロセスから子プロセスに文字列を送信する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="b8211-221">The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes.</span></span> <span data-ttu-id="b8211-222">この例では、<xref:System.IO.Pipes.AnonymousPipeServerStream>オブジェクトが、親プロセス内に作成されると、<xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A>プロパティは、コンソールに表示されます。</span><span class="sxs-lookup"><span data-stu-id="b8211-222">In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the <xref:System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode%2A> property is displayed to the console.</span></span>  
  
 [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.AnonymousPipeServerStream_Sample/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>