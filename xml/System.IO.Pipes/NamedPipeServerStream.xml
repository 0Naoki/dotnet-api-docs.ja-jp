<Type Name="NamedPipeServerStream" FullName="System.IO.Pipes.NamedPipeServerStream">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c40d6947ec66b9e66a0e8ba16ffcdc9847c55695" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48633887" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class NamedPipeServerStream : System.IO.Pipes.PipeStream" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit NamedPipeServerStream extends System.IO.Pipes.PipeStream" />
  <TypeSignature Language="DocId" Value="T:System.IO.Pipes.NamedPipeServerStream" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class NamedPipeServerStream&#xA;Inherits PipeStream" />
  <TypeSignature Language="C++ CLI" Value="public ref class NamedPipeServerStream sealed : System::IO::Pipes::PipeStream" />
  <TypeSignature Language="F#" Value="type NamedPipeServerStream = class&#xA;    inherit PipeStream" />
  <AssemblyInfo>
    <AssemblyName>System.IO.Pipes</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.IO.Pipes.PipeStream</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>同期および非同期の読み書き操作をサポートする名前付きパイプに関連する <see cref="T:System.IO.Stream" /> を公開します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 名前付きパイプは、パイプ サーバーと 1 つ以上のパイプ クライアント間の通信の一方向または双方向パイプを指定します。 名前付きパイプは、ローカルまたはネットワーク経由で、プロセス間通信に使用できます。 複数で、1 つのパイプ名を共有できる<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクト。  
  
 任意のプロセスは、名前付きパイプ サーバーまたはクライアント、またはその両方として機能できます。  
  
> [!NOTE]
>  [!INCLUDE[winxppro](~/includes/winxppro-md.md)]と[!INCLUDE[win2kserver](~/includes/win2kserver-md.md)]、10 パイプの最大値は、ネットワーク経由で同時に接続できます。  
  
   
  
## Examples  
 次の例では、親プロセスから同じコンピューターを使用して、名前付きパイプ上の子プロセスに文字列を送信する方法を示します。 この例で作成、<xref:System.IO.Pipes.NamedPipeServerStream>で親プロセス内のオブジェクトを<xref:System.IO.Pipes.PipeDirection>@property <xref:System.IO.Pipes.PipeDirection.Out>。 待機し、サーバー、<xref:System.IO.Pipes.NamedPipeClientStream>に接続する子プロセス内のオブジェクト。 この例で、両方のプロセスが同じコンピューターには、<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトには、<xref:System.IO.Pipes.PipeDirection>の値<xref:System.IO.Pipes.PipeDirection.In>。 次に、親プロセスはユーザー指定の文字列を子プロセスに送信します。 文字列がコンソールに表示されます。  
  
 この例は、サーバー プロセスを使用して、<xref:System.IO.Pipes.NamedPipeServerStream>クラス。 パイプ クライアントとサーバーの両方のコードを含む完全なコード例を参照してください。[方法: ネットワーク プロセス間通信に使用して名前付きパイプ](~/docs/standard/io/how-to-use-named-pipes-for-network-interprocess-communication.md)します。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream pipeName" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <summary>指定したパイプ名を使用して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   既定のパイプ方向<xref:System.IO.Pipes.PipeDirection.InOut>します。  
  
-   同じ名前を共有するサーバー インスタンスの最大数は 1 に設定します。  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode> の <xref:System.IO.Pipes.PipeTransmissionMode.Byte> 値。  
  
-   <xref:System.IO.Pipes.PipeOptions> の <xref:System.IO.Pipes.PipeOptions.None> 値。  
  
-   既定の入力と出力バッファーのサイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability> の <xref:System.IO.HandleInheritability.None> 値。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <summary>指定したパイプ名とパイプの方向を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   <xref:System.IO.Pipes.PipeTransmissionMode> の <xref:System.IO.Pipes.PipeTransmissionMode.Byte> 値。  
  
-   <xref:System.IO.Pipes.PipeOptions> の <xref:System.IO.Pipes.PipeOptions.None> 値。  
  
-   既定の入力と出力バッファーのサイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability> の <xref:System.IO.HandleInheritability.None> 値。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
   
  
## Examples  
 次の例では、親プロセスから名前付きパイプを使用して子プロセスに文字列を送信する方法を示します。 この例で作成、<xref:System.IO.Pipes.NamedPipeServerStream>親プロセス内のオブジェクト。 <xref:System.IO.Pipes.NamedPipeServerStream>オブジェクトには、<xref:System.IO.Pipes.PipeDirection>の値<xref:System.IO.Pipes.PipeDirection.Out>、までをブロックし、<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトが現在の接続を確立<xref:System.IO.Pipes.NamedPipeServerStream>オブジェクト。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <summary>指定したパイプ名、パイプの方向、およびサーバー インスタンスの最大数を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   同じ名前を共有するサーバー インスタンスの最大数の 1 の既定値。  
  
-   既定の<xref:System.IO.Pipes.PipeTransmissionMode>@property<xref:System.IO.Pipes.PipeTransmissionMode.Byte>します。  
  
-   <xref:System.IO.Pipes.PipeOptions> の <xref:System.IO.Pipes.PipeOptions.None> 値。  
  
-   既定の入力と出力バッファーのサイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability> の <xref:System.IO.HandleInheritability.None> 値。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
負以外の数値が必要です。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <see cref="F:System.IO.HandleInheritability.None" /> または <see cref="F:System.IO.HandleInheritability.Inheritable" /> が必要です。  
  
- または - 
アクセス権は、<see cref="F:System.IO.Pipes.PipeAccessRights.ChangePermissions" /> フラグ、<see cref="F:System.IO.Pipes.PipeAccessRights.TakeOwnership" /> フラグ、および <see cref="F:System.IO.Pipes.PipeAccessRights.AccessSystemSecurity" /> フラグに制限されます。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.IO.Pipes.PipeDirection direction, bool isAsync, bool isConnected, class Microsoft.Win32.SafeHandles.SafePipeHandle safePipeHandle) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.Boolean,System.Boolean,Microsoft.Win32.SafeHandles.SafePipeHandle)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::IO::Pipes::PipeDirection direction, bool isAsync, bool isConnected, Microsoft::Win32::SafeHandles::SafePipeHandle ^ safePipeHandle);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : System.IO.Pipes.PipeDirection * bool * bool * Microsoft.Win32.SafeHandles.SafePipeHandle -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (direction, isAsync, isConnected, safePipeHandle)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="isAsync" Type="System.Boolean" />
        <Parameter Name="isConnected" Type="System.Boolean" />
        <Parameter Name="safePipeHandle" Type="Microsoft.Win32.SafeHandles.SafePipeHandle" />
      </Parameters>
      <Docs>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="isAsync">ハンドルが非同期的に開かれていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="isConnected">パイプが接続されていることを示す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="safePipeHandle">この <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトによってカプセル化されるパイプのセーフ ハンドル。</param>
        <summary>パイプ ハンドルを指定して <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。</exception>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="safePipeHandle" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="safePipeHandle" /> は無効なハンドルです。</exception>
        <exception cref="T:System.IO.IOException">
          <paramref name="safePipeHandle" /> が有効なパイプ ハンドルではありません。  
  
- または - 
サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、および送信モードを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   既定の<xref:System.IO.Pipes.PipeOptions>@property<xref:System.IO.Pipes.PipeOptions.None>します。  
  
-   既定の入力と出力バッファーのサイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability> の <xref:System.IO.HandleInheritability.None> 値。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode, options As PipeOptions)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode * System.IO.Pipes.PipeOptions -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode, options)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、およびパイプのオプションを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   既定の入力と出力バッファーのサイズ。  
  
-   パイプのセキュリティはありません。  
  
-   <xref:System.IO.HandleInheritability> の <xref:System.IO.HandleInheritability.None> 値。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (pipeName As String, direction As PipeDirection, maxNumberOfServerInstances As Integer, transmissionMode As PipeTransmissionMode, options As PipeOptions, inBufferSize As Integer, outBufferSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode * System.IO.Pipes.PipeOptions * int * int -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode, options, inBufferSize, outBufferSize)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、および推奨される入力バッファー サイズと出力バッファー サイズを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   追加のパイプのセキュリティはありません。  
  
-   既定の<xref:System.IO.HandleInheritability>@property<xref:System.IO.HandleInheritability.None>します。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="inBufferSize" /> が負の値です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode * System.IO.Pipes.PipeOptions * int * int * System.IO.Pipes.PipeSecurity -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode, options, inBufferSize, outBufferSize, pipeSecurity)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、推奨される入力バッファー サイズと出力バッファー サイズ、およびパイプのセキュリティ保護を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を次の特性を持つオブジェクト。  
  
-   既定の<xref:System.IO.HandleInheritability>@property<xref:System.IO.HandleInheritability.None>します。  
  
-   指定されていない追加<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="inBufferSize" /> が負の値です。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity, System::IO::HandleInheritability inheritability);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode * System.IO.Pipes.PipeOptions * int * int * System.IO.Pipes.PipeSecurity * System.IO.HandleInheritability -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode, options, inBufferSize, outBufferSize, pipeSecurity, inheritability)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="outBufferSize">出力バッファー サイズを示す 0 より大きい正の値。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、推奨される入力バッファー サイズと出力バッファー サイズ、パイプのセキュリティ保護、および継承性のモードを使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを作成、<xref:System.IO.Pipes.NamedPipeServerStream>を持たないオブジェクトを追加指定<xref:System.IO.Pipes.PipeAccessRights>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="inBufferSize" /> が負の値です。  
  
- または - 
 <paramref name="inheritability" /> は有効な <see cref="T:System.IO.HandleInheritability" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public NamedPipeServerStream (string pipeName, System.IO.Pipes.PipeDirection direction, int maxNumberOfServerInstances, System.IO.Pipes.PipeTransmissionMode transmissionMode, System.IO.Pipes.PipeOptions options, int inBufferSize, int outBufferSize, System.IO.Pipes.PipeSecurity pipeSecurity, System.IO.HandleInheritability inheritability, System.IO.Pipes.PipeAccessRights additionalAccessRights);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string pipeName, valuetype System.IO.Pipes.PipeDirection direction, int32 maxNumberOfServerInstances, valuetype System.IO.Pipes.PipeTransmissionMode transmissionMode, valuetype System.IO.Pipes.PipeOptions options, int32 inBufferSize, int32 outBufferSize, class System.IO.Pipes.PipeSecurity pipeSecurity, valuetype System.IO.HandleInheritability inheritability, valuetype System.IO.Pipes.PipeAccessRights additionalAccessRights) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.#ctor(System.String,System.IO.Pipes.PipeDirection,System.Int32,System.IO.Pipes.PipeTransmissionMode,System.IO.Pipes.PipeOptions,System.Int32,System.Int32,System.IO.Pipes.PipeSecurity,System.IO.HandleInheritability,System.IO.Pipes.PipeAccessRights)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; NamedPipeServerStream(System::String ^ pipeName, System::IO::Pipes::PipeDirection direction, int maxNumberOfServerInstances, System::IO::Pipes::PipeTransmissionMode transmissionMode, System::IO::Pipes::PipeOptions options, int inBufferSize, int outBufferSize, System::IO::Pipes::PipeSecurity ^ pipeSecurity, System::IO::HandleInheritability inheritability, System::IO::Pipes::PipeAccessRights additionalAccessRights);" />
      <MemberSignature Language="F#" Value="new System.IO.Pipes.NamedPipeServerStream : string * System.IO.Pipes.PipeDirection * int * System.IO.Pipes.PipeTransmissionMode * System.IO.Pipes.PipeOptions * int * int * System.IO.Pipes.PipeSecurity * System.IO.HandleInheritability * System.IO.Pipes.PipeAccessRights -&gt; System.IO.Pipes.NamedPipeServerStream" Usage="new System.IO.Pipes.NamedPipeServerStream (pipeName, direction, maxNumberOfServerInstances, transmissionMode, options, inBufferSize, outBufferSize, pipeSecurity, inheritability, additionalAccessRights)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="pipeName" Type="System.String" />
        <Parameter Name="direction" Type="System.IO.Pipes.PipeDirection" />
        <Parameter Name="maxNumberOfServerInstances" Type="System.Int32" />
        <Parameter Name="transmissionMode" Type="System.IO.Pipes.PipeTransmissionMode" />
        <Parameter Name="options" Type="System.IO.Pipes.PipeOptions" />
        <Parameter Name="inBufferSize" Type="System.Int32" />
        <Parameter Name="outBufferSize" Type="System.Int32" />
        <Parameter Name="pipeSecurity" Type="System.IO.Pipes.PipeSecurity" />
        <Parameter Name="inheritability" Type="System.IO.HandleInheritability" />
        <Parameter Name="additionalAccessRights" Type="System.IO.Pipes.PipeAccessRights" />
      </Parameters>
      <Docs>
        <param name="pipeName">パイプ名。</param>
        <param name="direction">パイプの方向を決定する列挙値の 1 つ。</param>
        <param name="maxNumberOfServerInstances">同じパイプ名を共有するサーバー インスタンスの最大数。 この値には、<see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を渡すことができます。</param>
        <param name="transmissionMode">パイプの送信モードを決定する列挙値の 1 つ。</param>
        <param name="options">パイプを開く方法または作成する方法を決定する列挙値の 1 つ。</param>
        <param name="inBufferSize">入力バッファー サイズ。</param>
        <param name="outBufferSize">出力バッファー サイズ。</param>
        <param name="pipeSecurity">パイプのアクセス制御と監査セキュリティを決定するオブジェクト。</param>
        <param name="inheritability">基になるハンドルを子プロセスが継承できるかどうかを決定する列挙値の 1 つ。</param>
        <param name="additionalAccessRights">パイプのアクセス権を指定する列挙値の 1 つ。</param>
        <summary>指定したパイプ名、パイプの方向、サーバー インスタンスの最大数、送信モード、パイプのオプション、推奨される入力バッファー サイズと出力バッファー サイズ、パイプのセキュリティ保護、継承性のモード、およびパイプのアクセス権を使用して、<see cref="T:System.IO.Pipes.NamedPipeServerStream" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="pipeName" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.ArgumentException">
          <paramref name="pipeName" /> は長さゼロの文字列です。</exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <paramref name="pipeName" /> は "匿名" に設定されています。  
  
- または - 
 <paramref name="direction" /> は有効な <see cref="T:System.IO.Pipes.PipeDirection" /> 値ではありません。  
  
- または - 
 <paramref name="maxNumberofServerInstances" /> が -1 未満であるか、または 254 を超えています (-1 は <see cref="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" /> を示します)。 
- または - 
 <paramref name="options" /> は有効な <see cref="T:System.IO.Pipes.PipeOptions" /> 値ではありません。  
  
- または - 
 <paramref name="inBufferSize" /> が負の値です。  
  
- または - 
 <paramref name="inheritability" /> は有効な <see cref="T:System.IO.HandleInheritability" /> 値ではありません。  
  
- または - 
 <paramref name="additionalAccessRights" /> は有効な <see cref="T:System.IO.Pipes.PipeAccessRights" /> 値ではありません。</exception>
        <exception cref="T:System.NotSupportedException">
          <paramref name="pipeName" /> にコロン (":") が含まれています。</exception>
        <exception cref="T:System.PlatformNotSupportedException">オペレーティング システムが、サポートされていない Windows Millennium Edition、Windows 98、または Windows 95 のいずれかです。</exception>
        <exception cref="T:System.IO.IOException">サーバー インスタンスの数が最大数を超えました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">直前の呼び出し元に対する完全な信頼。 このメンバーは、部分的に信頼されているコードから使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="BeginWaitForConnection">
      <MemberSignature Language="C#" Value="public IAsyncResult BeginWaitForConnection (AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IAsyncResult BeginWaitForConnection(class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection(System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function BeginWaitForConnection (callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IAsyncResult ^ BeginWaitForConnection(AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberSignature Language="F#" Value="member this.BeginWaitForConnection : AsyncCallback * obj -&gt; IAsyncResult" Usage="namedPipeServerStream.BeginWaitForConnection (callback, state)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="callback">クライアントが <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続したときに呼び出すメソッド。</param>
        <param name="state">この特定の非同期要求を他の要求と区別するために使用するユーザー指定のオブジェクト。</param>
        <summary>クライアントが接続するのを待機する非同期操作を開始します。</summary>
        <returns>非同期の要求を参照するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは、非同期の相当の<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnection%2A>します。  
  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれませんでした。  
  
- または - 
パイプの接続が既に確立されています。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Disconnect">
      <MemberSignature Language="C#" Value="public void Disconnect ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Disconnect() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Disconnect" />
      <MemberSignature Language="VB.NET" Value="Public Sub Disconnect ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Disconnect();" />
      <MemberSignature Language="F#" Value="member this.Disconnect : unit -&gt; unit" Usage="namedPipeServerStream.Disconnect " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の接続を切断します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す、<xref:System.IO.Pipes.NamedPipeServerStream.Disconnect%2A>メソッドは、パイプの送信モードを設定しない限り、送信されたすべての文字が読み取られたまでブロック<xref:System.IO.Pipes.PipeTransmissionMode.Message>バッファー サイズが 作成するコンス トラクターで設定されている、<xref:System.IO.Pipes.NamedPipeServerStream>オブジェクト。 この場合、すべてのメッセージは受信されます。 呼び出す<xref:System.IO.Pipes.PipeStream.WaitForPipeDrain%2A>サーバーをパイプからすべてのデータが読み取られるまでブロックします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。  
  
- または - 
接続されたパイプが既に切断されています。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="EndWaitForConnection">
      <MemberSignature Language="C#" Value="public void EndWaitForConnection (IAsyncResult asyncResult);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void EndWaitForConnection(class System.IAsyncResult asyncResult) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Public Sub EndWaitForConnection (asyncResult As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void EndWaitForConnection(IAsyncResult ^ asyncResult);" />
      <MemberSignature Language="F#" Value="member this.EndWaitForConnection : IAsyncResult -&gt; unit" Usage="namedPipeServerStream.EndWaitForConnection asyncResult" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="asyncResult" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="asyncResult">保留中の非同期の要求。</param>
        <summary>クライアントが接続するのを待機する非同期操作を終了します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.NamedPipeServerStream.EndWaitForConnection%2A> 呼び出しごとに 1 回だけ呼び出す必要があります<xref:System.IO.Pipes.NamedPipeServerStream.BeginWaitForConnection%2A>します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="asyncResult" /> は <see langword="null" />です。</exception>
        <exception cref="T:System.InvalidOperationException">パイプが非同期的に開かれませんでした。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
      </Docs>
    </Member>
    <Member MemberName="Finalize">
      <MemberSignature Language="C#" Value="~NamedPipeServerStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Finalize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.Finalize" />
      <MemberSignature Language="VB.NET" Value="Finalize ()" />
      <MemberSignature Language="C++ CLI" Value="!NamedPipeServerStream ()" />
      <MemberSignature Language="F#" Value="override this.Finalize : unit -&gt; unit" Usage="namedPipeServerStream.Finalize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> インスタンスがガベージ コレクションによって回収される前に、アンマネージ リソースを解放し、その他のクリーンアップ操作を実行します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetImpersonationUserName">
      <MemberSignature Language="C#" Value="public string GetImpersonationUserName ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetImpersonationUserName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName" />
      <MemberSignature Language="VB.NET" Value="Public Function GetImpersonationUserName () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetImpersonationUserName();" />
      <MemberSignature Language="F#" Value="member this.GetImpersonationUserName : unit -&gt; string" Usage="namedPipeServerStream.GetImpersonationUserName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パイプのもう一方の終端のクライアントのユーザー名を取得します。</summary>
        <returns>パイプのもう一方の終端のクライアントのユーザー名。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IO.Pipes.NamedPipeServerStream.GetImpersonationUserName%2A>メソッドを返します。`null`クライアントがまだパイプに記述されていない場合、または接続されているクライアントと接続していない場合、<xref:System.Security.Principal.TokenImpersonationLevel>の<xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>します。  
  
   
  
## Examples  
 次の例では、複数の同時クライアント要求に応答できるパイプ サーバーを作成するメソッドをおよびクライアント偽装のためのメソッドを示します。 この例で作成、<xref:System.IO.Pipes.NamedPipeServerStream>を待機する複数のスレッドを作成し、親プロセス内のオブジェクト<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトに接続します。 クライアントが接続されると、サーバーにファイル名が指定され、そのファイルの内容が読み取られ、クライアントに送信します。 <xref:System.IO.Pipes.NamedPipeServerStream>ファイルを開くとき、クライアントを要求できるファイルを開くための十分なアクセス許可を持つことのみがクライアントを偽装します。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。  
  
- または - 
接続されたパイプが既に切断されています。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプの接続が解除されています。  
  
- または - 
クライアントのユーザー名が 19 文字を超えています。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">プリンシパル オブジェクトを操作する機能。 セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="MaxAllowedServerInstances">
      <MemberSignature Language="C#" Value="public const int MaxAllowedServerInstances = -1;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int32 MaxAllowedServerInstances = (-1)" />
      <MemberSignature Language="DocId" Value="F:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxAllowedServerInstances As Integer  = -1" />
      <MemberSignature Language="C++ CLI" Value="public: int MaxAllowedServerInstances = -1;" />
      <MemberSignature Language="F#" Value="val mutable MaxAllowedServerInstances : int" Usage="System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <MemberValue>-1</MemberValue>
      <Docs>
        <summary>システム リソースで許されるサーバー インスタンスの最大数を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.IO.Pipes.NamedPipeServerStream.MaxAllowedServerInstances>を作成するとき、<xref:System.IO.Pipes.NamedPipeServerStream>システム リソースを許可するサーバー インスタンスの最大数を設定するオブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RunAsClient">
      <MemberSignature Language="C#" Value="public void RunAsClient (System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void RunAsClient(class System.IO.Pipes.PipeStreamImpersonationWorker impersonationWorker) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.RunAsClient(System.IO.Pipes.PipeStreamImpersonationWorker)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RunAsClient (impersonationWorker As PipeStreamImpersonationWorker)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void RunAsClient(System::IO::Pipes::PipeStreamImpersonationWorker ^ impersonationWorker);" />
      <MemberSignature Language="F#" Value="member this.RunAsClient : System.IO.Pipes.PipeStreamImpersonationWorker -&gt; unit" Usage="namedPipeServerStream.RunAsClient impersonationWorker" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="impersonationWorker" Type="System.IO.Pipes.PipeStreamImpersonationWorker" />
      </Parameters>
      <Docs>
        <param name="impersonationWorker">呼び出すメソッドを指定するデリゲート。</param>
        <summary>クライアントの偽装中にデリゲートを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 リモート サーバーに接続するクライアントのアクセス許可が適用されます。 たとえば、接続するクライアントは、サーバー上のファイルの内容を要求すると、クライアントを開くための十分なアクセス許可を持つファイルのみを要求できます。  
  
   
  
## Examples  
 次の例では、複数の同時クライアント要求に応答できるパイプ サーバーを作成するメソッドをおよびクライアント偽装のためのメソッドを示します。 この例で作成、<xref:System.IO.Pipes.NamedPipeServerStream>を待機する複数のスレッドを作成し、親プロセス内のオブジェクト<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトに接続します。 クライアントが接続されると、サーバーにファイル名が指定され、そのファイルの内容が読み取られ、クライアントに送信します。 <xref:System.IO.Pipes.NamedPipeServerStream>ファイルを開くとき、クライアントを要求できるファイルを開くための十分なアクセス許可を持つことのみがクライアントを偽装します。  
  
 [!code-cpp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cpp/program.cpp#01)]
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_ImpersonationSample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_ImpersonationSample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">作成されているパイプの接続がありません。  
  
- または - 
接続されたパイプが既に切断されています。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプの接続が解除されています。  
  
- または - 
I/O エラーが発生しました。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermissionFlag">プリンシパル オブジェクトを操作する機能。 セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />します。 関連付けられた列挙体。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlPrincipal" /></permission>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnection">
      <MemberSignature Language="C#" Value="public void WaitForConnection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void WaitForConnection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnection" />
      <MemberSignature Language="VB.NET" Value="Public Sub WaitForConnection ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void WaitForConnection();" />
      <MemberSignature Language="F#" Value="member this.WaitForConnection : unit -&gt; unit" Usage="namedPipeServerStream.WaitForConnection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Security.SecurityCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを待機します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを呼び出すと、<xref:System.IO.Pipes.NamedPipeServerStream>まで、クライアントが接続をブロックするオブジェクト。  
  
   
  
## Examples  
 次の例では、親プロセスから名前付きパイプを使用して子プロセスに文字列を送信する方法を示します。 この例で作成、<xref:System.IO.Pipes.NamedPipeServerStream>親プロセス内のオブジェクト。 このオブジェクトには、<xref:System.IO.Pipes.PipeDirection>の値<xref:System.IO.Pipes.PipeDirection.Out>、までをブロックし、<xref:System.IO.Pipes.NamedPipeClientStream>オブジェクトへの接続の確立、<xref:System.IO.Pipes.NamedPipeServerStream>オブジェクト。 この例が示されている例の一部、<xref:System.IO.Pipes.NamedPipeServerStream>と<xref:System.IO.Pipes.NamedPipeClientStream>クラス。  
  
 [!code-csharp[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/cs/Program.cs#01)]
 [!code-vb[System.IO.Pipes.NamedPipeServerStream_Sample1#01](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.IO.Pipes.NamedPipeServerStream_Sample1/vb/program.vb#01)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">パイプの接続が既に確立されています。  
  
- または - 
パイプ ハンドルがまだ設定されていません。</exception>
        <exception cref="T:System.ObjectDisposedException">パイプは閉じています。</exception>
        <exception cref="T:System.IO.IOException">パイプの接続が解除されています。</exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="WaitForConnectionAsync">
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync" />
      <MemberSignature Language="VB.NET" Value="Public Function WaitForConnectionAsync () As Task" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitForConnectionAsync();" />
      <MemberSignature Language="F#" Value="member this.WaitForConnectionAsync : unit -&gt; System.Threading.Tasks.Task" Usage="namedPipeServerStream.WaitForConnectionAsync " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機します。</summary>
        <returns>非同期の待機操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 非同期は、このメソッドを即座に返しますが、クライアントを呼び出すと、接続プロセスが完了したため、<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>または<xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WaitForConnectionAsync">
      <MemberSignature Language="C#" Value="public System.Threading.Tasks.Task WaitForConnectionAsync (System.Threading.CancellationToken cancellationToken);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Threading.Tasks.Task WaitForConnectionAsync(valuetype System.Threading.CancellationToken cancellationToken) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync(System.Threading.CancellationToken)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Threading::Tasks::Task ^ WaitForConnectionAsync(System::Threading::CancellationToken cancellationToken);" />
      <MemberSignature Language="F#" Value="member this.WaitForConnectionAsync : System.Threading.CancellationToken -&gt; System.Threading.Tasks.Task" Usage="namedPipeServerStream.WaitForConnectionAsync cancellationToken" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.IO.Pipes</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Core</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.Tasks.Task</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cancellationToken" Type="System.Threading.CancellationToken" />
      </Parameters>
      <Docs>
        <param name="cancellationToken">キャンセル要求を監視するためのトークン。</param>
        <summary>クライアントがこの <see cref="T:System.IO.Pipes.NamedPipeServerStream" /> オブジェクトに接続するのを非同期に待機し、キャンセル要求を監視します。</summary>
        <returns>非同期の待機操作を表すタスク。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 非同期は、このメソッドを即座に返しますが、クライアントを呼び出すと、接続プロセスが完了したため、<xref:System.IO.Pipes.NamedPipeClientStream.Connect%2A>または<xref:System.IO.Pipes.NamedPipeClientStream.ConnectAsync%2A>します。  
  
 キャンセル要求の場合にのみ機能は、キャンセル トークンを使用して、<xref:System.IO.Pipes.NamedPipeServerStream>のパイプのオプション値を持つオブジェクトが作成された<xref:System.IO.Pipes.PipeOptions.Asynchronous?displayProperty=nameWithType>する前に、キャンセルが発生した場合や、<xref:System.IO.Pipes.NamedPipeServerStream.WaitForConnectionAsync%2A>メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>