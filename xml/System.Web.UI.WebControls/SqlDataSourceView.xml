<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="b31bf-101"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールをサポートし、リレーショナル データベースに対して SQL データ操作を実行するためのデータ バインド コントロールのインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-101">Supports the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control and provides an interface for data-bound controls to perform SQL data operations against relational databases.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-102"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスは、主に、データ バインド コントロール、およびページ コードでプログラミング可能なオブジェクトとしてではなく使用されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-102">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class is intended primarily to be used by data-bound controls, and not as a programmable object in page code.</span></span>  
  
 <span data-ttu-id="b31bf-103">ASP.NET データ ソース コントロールには、データ ソース ビュー オブジェクトによって表されるデータの 1 つまたは複数のリストが含まれています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-103">ASP.NET data source controls contain one or more lists of data, represented by data source view objects.</span></span> <span data-ttu-id="b31bf-104"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを拡張、<xref:System.Web.UI.DataSourceView>クラスの機能を定義、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを関連付けられているし、データ ソース コントロールの基本的なデータの機能を実装します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-104">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class extends the <xref:System.Web.UI.DataSourceView> class, defines the capabilities of the <xref:System.Web.UI.WebControls.SqlDataSource> control with which it is associated, and implements the basic data functionality for the data source control.</span></span> <span data-ttu-id="b31bf-105"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラス、データの機能を実装、<xref:System.Web.UI.WebControls.SqlDataSource>を制御するなど、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>、および<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作、並べ替え、フィルター処理、および状態で保持されている設定を管理します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-105">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the data functionality for the <xref:System.Web.UI.WebControls.SqlDataSource> control, including the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operations, sorting, filtering, and managing settings that are kept in view state.</span></span>  
  
 <span data-ttu-id="b31bf-106"><xref:System.Web.UI.WebControls.SqlDataSourceView>によってページの開発者にオブジェクトが直接公開されません、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、そのプロパティの多くは、します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-106">Although the <xref:System.Web.UI.WebControls.SqlDataSourceView> object is not directly exposed to page developers by the <xref:System.Web.UI.WebControls.SqlDataSource> control, many of its properties are.</span></span> <span data-ttu-id="b31bf-107">データ ソース ビューを実行する最も基本的な操作は、基になるデータベースを使用して、データの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>を取得するメソッド、<xref:System.Collections.IEnumerable>データ項目のコレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-107">The most basic operation that a data source view performs is data retrieval from the underlying database using the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, which retrieves an <xref:System.Collections.IEnumerable> collection of data items.</span></span> <span data-ttu-id="b31bf-108"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスは、SQL クエリを使用してリレーショナル データベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-108">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements data retrieval from relational databases using SQL queries.</span></span> <span data-ttu-id="b31bf-109">SQL クエリはパラメーター化して、柔軟性とセキュリティを向上できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-109">The SQL queries can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="b31bf-110">次のデータ取得方法、プロパティ、およびイベントは、によって実装される、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって直接公開されると、<xref:System.Web.UI.WebControls.SqlDataSource>ページの開発者を他の呼び出し元の制御。</span><span class="sxs-lookup"><span data-stu-id="b31bf-110">The following data retrieval methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="b31bf-111"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-111">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-112"><xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-112">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-113"><xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-113">The <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event</span></span>  
  
-   <span data-ttu-id="b31bf-114"><xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-114">The <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event</span></span>  
  
 <span data-ttu-id="b31bf-115"><xref:System.Web.UI.WebControls.SqlDataSourceView> SQL コマンドを使用してリレーショナル データベースのデータの更新をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-115">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object supports updating data in a relational database using SQL commands.</span></span> <span data-ttu-id="b31bf-116">SQL コマンドは、柔軟性とセキュリティのパラメーター化することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-116">The SQL commands can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="b31bf-117">などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>を使用して自動的に更新プログラムを実行するように構成できます、<xref:System.Web.UI.WebControls.SqlDataSourceView>となる一方で他のコントロールのことはできません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-117">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform updates automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="b31bf-118">次の更新メソッド、プロパティ、およびイベントは、によって実装される、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって直接公開されると、<xref:System.Web.UI.WebControls.SqlDataSource>ページの開発者を他の呼び出し元の制御。</span><span class="sxs-lookup"><span data-stu-id="b31bf-118">The following update methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="b31bf-119"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-119">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-120"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-120">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-121"><xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-121">The <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event</span></span>  
  
-   <span data-ttu-id="b31bf-122"><xref:System.Web.UI.WebControls.SqlDataSource.Updated>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-122">The <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event</span></span>  
  
 <span data-ttu-id="b31bf-123"><xref:System.Web.UI.WebControls.SqlDataSourceView>をリレーショナル データベースに新しい行のデータの挿入をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-123">The <xref:System.Web.UI.WebControls.SqlDataSourceView> supports inserting new rows of data into a relational database.</span></span> <span data-ttu-id="b31bf-124">SQL コマンドで指定されている、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>柔軟性とセキュリティのプロパティをパラメーター化することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-124">The SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="b31bf-125">などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、挿入を使用して自動的に実行するように構成することができます、<xref:System.Web.UI.WebControls.SqlDataSourceView>に他のコントロールは、します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-125">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform inserts automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="b31bf-126">次は、メソッド、プロパティを挿入し、イベントして実装されます、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって直接公開されると、<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元に制御します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-126">The following insert methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="b31bf-127"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-127">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-128"><xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-128">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-129"><xref:System.Web.UI.WebControls.SqlDataSource.Inserting>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-129">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event</span></span>  
  
-   <span data-ttu-id="b31bf-130"><xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-130">The <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event</span></span>  
  
 <span data-ttu-id="b31bf-131"><xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトを使用して、リレーショナル データベースからデータの削除をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-131">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object also supports deleting data from a relational database.</span></span> <span data-ttu-id="b31bf-132">指定されているが、SQL と同様に他のコマンドでは、コマンド、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>柔軟性とセキュリティのプロパティをパラメーター化することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-132">As with other commands, the SQL commands that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property can be parameterized for greater flexibility and security.</span></span> <span data-ttu-id="b31bf-133">などのデータ バインド コントロール、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、使用して自動的に削除を実行するように構成できる、<xref:System.Web.UI.WebControls.SqlDataSourceView>に他のコントロールは、します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-133">Data-bound controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, can be configured to perform deletes automatically using the <xref:System.Web.UI.WebControls.SqlDataSourceView>, while other controls cannot.</span></span> <span data-ttu-id="b31bf-134">次は、メソッド、プロパティを削除し、イベントして実装されます、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって直接公開されると、<xref:System.Web.UI.WebControls.SqlDataSource>ページ作成者および他の呼び出し元に制御します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-134">The following delete methods, properties, and events are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to page developers and other callers:</span></span>  
  
-   <span data-ttu-id="b31bf-135"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-135">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-136"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> プロパティ</span><span class="sxs-lookup"><span data-stu-id="b31bf-136">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property</span></span>  
  
-   <span data-ttu-id="b31bf-137"><xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-137">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event</span></span>  
  
-   <span data-ttu-id="b31bf-138"><xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント</span><span class="sxs-lookup"><span data-stu-id="b31bf-138">The <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event</span></span>  
  
 <span data-ttu-id="b31bf-139">データの取得は、データの取得中にデータをフィルター処理に使用される句は、動的とより強力です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-139">Data retrieval is more powerful when the clause that is used to filter the data during data retrieval is dynamic.</span></span> <span data-ttu-id="b31bf-140">つまり、句が行われていない、柔軟で強力な SQL クエリで WHERE 句内の値が変更できますが、Web フォーム ページ上のコントロールに表示される値などの値にバインドされて静的 SQL クエリ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-140">In other words, an SQL query with a static WHERE clause is not as flexible and powerful as an SQL query where the values in the WHERE clause are bound to values that can change, such as values that are displayed in controls on a Web Forms page.</span></span> <span data-ttu-id="b31bf-141">SQL の再構築ではなくクエリを実行し、設定、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>使用するすべてのページ読み込みのプロパティを<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>データの取得を動的にフィルターを適用するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-141">Instead of rebuilding an SQL query and setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property on every page load, you can use the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> properties to apply dynamic filtering to data retrieval.</span></span> <span data-ttu-id="b31bf-142">これらのプロパティは、によって実装される、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって直接公開されると、<xref:System.Web.UI.WebControls.SqlDataSource>データ バインド コントロールを他の呼び出し元の制御します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-142">These properties are implemented by the <xref:System.Web.UI.WebControls.SqlDataSourceView> and exposed directly by its <xref:System.Web.UI.WebControls.SqlDataSource> control to data-bound controls and other callers.</span></span>  
  
 <span data-ttu-id="b31bf-143">取得することで、データを並べ替えることができます、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、ORDER BY 句、これにより、データを取得するときの順序を実行するデータベースを追加するかが取得された後は、メモリ内のデータを順序付けします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-143">You can sort the data that you retrieve with the <xref:System.Web.UI.WebControls.SqlDataSource> control by adding an ORDER BY clause, which causes the database to perform the ordering for you when you retrieve data or by ordering the data in memory after it is retrieved.</span></span> <span data-ttu-id="b31bf-144">並べ替え式を指定することができます、<xref:System.Web.UI.WebControls.SqlDataSourceView>を設定して、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>のプロパティ、<xref:System.Web.UI.DataSourceSelectArguments>に渡されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-144">You can supply a sorting expression to the <xref:System.Web.UI.WebControls.SqlDataSourceView> by setting the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property of the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method.</span></span> <span data-ttu-id="b31bf-145">構文、<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>の構文と同じプロパティが、<xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-145">The syntax for the <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> property is the same as the syntax for a <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b31bf-146">データを取得するストアド プロシージャを使用する場合も行えます、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>具体的には、ストアド プロシージャの呼び出しの結果の並べ替えに使用されるパラメーターを指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-146">If you use a stored procedure to retrieve data, you can also use the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property to specify a parameter that is used specifically for sorting the results of a stored procedure call.</span></span>  
  
 <span data-ttu-id="b31bf-147">複数のユーザーは、同時にデータベースを変更したり、ときに同時実行の競合が発生する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-147">When more than one user can change the database concurrently, there is the potential for concurrency conflict.</span></span> <span data-ttu-id="b31bf-148"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールがコントロールで、同時性、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-148">The <xref:System.Web.UI.WebControls.SqlDataSource> control has controls concurrency through the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="b31bf-149">この機能は、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-149">The functionality is implemented in the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType> property.</span></span>  
  
 <span data-ttu-id="b31bf-150">他の多くの Web サーバー コントロールと同様に、<xref:System.Web.UI.WebControls.SqlDataSourceView>を実装する、<xref:System.Web.UI.IStateManager>インターフェイスと使用法は、ページ要求間での状態を追跡するために状態を表示します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-150">Like many other Web server controls, the <xref:System.Web.UI.WebControls.SqlDataSourceView> implements the <xref:System.Web.UI.IStateManager> interface and uses view state to track its state across page requests.</span></span> <span data-ttu-id="b31bf-151">実装、<xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>およびプロパティと<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>コントロールのビュー状態の追跡を有効にするメソッドが用意されています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-151">Implementations of the <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A> and property and the <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>, and <xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A> methods are provided to enable view state tracking for the control.</span></span> <span data-ttu-id="b31bf-152">詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-152">For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><span data-ttu-id="b31bf-153"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられているデータ ソース コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-153">The data source control with which the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> is associated.</span></span></param>
        <param name="name"><span data-ttu-id="b31bf-154">データ ソース ビューを所有するデータ ソース コントロールのスコープ内の、そのデータ ソース ビューの固有の名前。</span><span class="sxs-lookup"><span data-stu-id="b31bf-154">A unique name for the data source view, within the scope of the data source control that owns it.</span></span></param>
        <param name="context"><span data-ttu-id="b31bf-155">現在の <see cref="T:System.Web.HttpContext" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-155">The current <see cref="T:System.Web.HttpContext" />.</span></span></param>
        <summary><span data-ttu-id="b31bf-156">指定した <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールを現在のビューの所有者として設定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-156">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> class setting the specified <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control as the owner of the current view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-157"><xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A>コンス トラクターを呼び出す、<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>を指定したデータ ソース ビューの新しいインスタンスを返すメソッドを`name`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b31bf-157">The <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> constructor is called by the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to return a new instance of a data source view with the specified `name` parameter.</span></span> <span data-ttu-id="b31bf-158"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールが 1 つのみ関連付けられる<xref:System.Web.UI.WebControls.SqlDataSourceView>、表示する、任意の時点であり、常にオブジェクト名`Table`によってこの名前付けの制限が課されるが、 <xref:System.Web.UI.WebControls.SqlDataSource> 、制御、<xref:System.Web.UI.WebControls.SqlDataSourceView>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-158">The <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with only one <xref:System.Web.UI.WebControls.SqlDataSourceView> object at any one time, and always names the view `Table`, although this naming restriction is imposed by the <xref:System.Web.UI.WebControls.SqlDataSource> control, not the <xref:System.Web.UI.WebControls.SqlDataSourceView>.</span></span> <span data-ttu-id="b31bf-159">オーバーライドすることができます、<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>別の名前付け規則にビューをサポートするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b31bf-159">You can override the <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A> method to support views with a different naming convention.</span></span>  
  
 <span data-ttu-id="b31bf-160"><xref:System.Web.HttpContext>によって渡されるオブジェクト、`context`パラメーターがなどのオブジェクトにアクセスするパラメーター、データ ソース ビューで使用されて、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>と<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-160">The <xref:System.Web.HttpContext> object that is passed by the `context` parameter is used by the data source view to access parameter objects, such as the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> properties.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-161"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="null" /> と評価されたときに、データ取得操作をキャンセルするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-161">Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluates to <see langword="null" />.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-162"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="true" /> と評価されたときに、データ取得操作をキャンセルする場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-162"><see langword="true" />, if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection evaluated to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="b31bf-163">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-163">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-164">値、<xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-164">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-165">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで削除操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-165">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the delete operation.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-166">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-166"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-167"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A>プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-167">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is set.</span></span> <span data-ttu-id="b31bf-168">すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は削除操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-168">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-169">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで挿入操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-169">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the insert operation.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-170">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-170"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-171"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A>プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-171">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is set.</span></span> <span data-ttu-id="b31bf-172">すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は、挿入操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-172">An insert operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-173">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データのページングがサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-173">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the paging of retrieved data.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-174">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-174"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-175"><xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトはページングをサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-175">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support paging.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-176">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで、一連のデータに加えて行の合計数を取得する操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-176">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports retrieving the total number of data rows, in addition to the set of data.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-177">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-177"><see langword="false" /> in all cases.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-178"><xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトが行数の取得をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-178">The <xref:System.Web.UI.WebControls.SqlDataSourceView> object does not support retrieving row counts.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-179">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データの並べ替え済みのビューがサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-179">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports a sorted view on the retrieved data.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-180">並べ替えがサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-180"><see langword="true" />, if sorting is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-181"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A>プロパティから返される`true`場合は、現在<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値と<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-181">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> property returns `true`, if the current <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value and the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-182">現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで更新操作がサポートされているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-182">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the current <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control supports the update operation.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-183">操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-183"><see langword="true" />, if the operation is supported; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-184"><xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A>プロパティから返される`true`場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-184">The <xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A> property returns `true` if the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is set.</span></span> <span data-ttu-id="b31bf-185">すべてのデータ プロパティが設定されていないか、正しく設定されていない場合は削除操作が失敗します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-185">A delete operation could still fail if all the data properties are not set or are not set correctly.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-186">基になるデータベース内の行のデータが操作中に変更される場合に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールで更新と削除を実行する方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-186">Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</span></span></summary>
        <value><span data-ttu-id="b31bf-187"><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-187">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span> <span data-ttu-id="b31bf-188">既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-188">The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-189"><xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに古い値と新しい値のパラメーターを適用するかどうかを決定する、`Update`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-189">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method.</span></span> <span data-ttu-id="b31bf-190">コマンドである場合などで指定された、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティから返される、 <xref:System.Data.DataSet> 、列を持つオブジェクト`Name`と`Number`、および<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 、パラメーターが作成された値の`Name`と`Number`更新操作のです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-190">For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property returns a <xref:System.Data.DataSet> object with the columns `Name` and `Number`, and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the update operation.</span></span> <span data-ttu-id="b31bf-191">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 、パラメーターが作成された値の`Name`、 `Number`、 `original_Name`、および`original_Number`です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-191">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="b31bf-192">(元の値のパラメーターの正確な名前が異なります、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>)。次に、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトかどうかをメソッドをで指定された、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティが一致するパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-192">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>.) Then, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object determines if the method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="b31bf-193">同時実行制御は、データ ストア データを読み取るし、複数のクライアントがアクセスして、同じデータを操作するときに、ストアで変更する方法を制御するための手法です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-193">Concurrency control is a technique data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="b31bf-194">たとえば、1 つのクライアントは、データを読み取り、別のクライアントが、同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-194">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="b31bf-195">両方のユーザーは、データ更新、データ ストレージに送信すると、予期しない結果が発生する、両方のクライアントは、同じデータの異なる値を更新するためです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-195">If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</span></span> <span data-ttu-id="b31bf-196">これは、競合と見なされます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-196">This is considered a conflict.</span></span> <span data-ttu-id="b31bf-197">設定して、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティを<xref:System.Web.UI.ConflictOptions.CompareAllValues>値、更新操作し、比較、古い値と新しい値を元のデータ ソースの競合を検出し、必要に応じてそれらを処理します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-197">By setting the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the update operation can then compare the old and new values to the original data source to detect conflicts and handle them as required.</span></span>  
  
 <span data-ttu-id="b31bf-198">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-198">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b31bf-199">選択した値が <see cref="T:System.Web.UI.ConflictOptions" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-199">The selected value is not one of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span></exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="b31bf-200"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-200">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="b31bf-201"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-201">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="b31bf-202"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-202">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="b31bf-203">基になるデータベースから削除された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-203">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-204"><xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>渡して、メソッド、`keys`と`oldValues`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b31bf-204">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method, passing the `keys` and `oldValues` parameters.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-205"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-205">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
 <span data-ttu-id="b31bf-206">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-206">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-207"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-207">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-208"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-208">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-209">基になるデータベースからデータを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-209">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="b31bf-210">データを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-210">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to delete data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-211">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-211">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span>  
  
 <span data-ttu-id="b31bf-212">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-212">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="b31bf-213">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-213">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="b31bf-214">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-214">However, if the provider is set to the  <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="b31bf-215">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-215">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="b31bf-216"><xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>基になるデータベースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-216">The <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> can be an SQL string or the name of a stored procedure, if the underlying database supports stored procedures.</span></span>  
  
 <span data-ttu-id="b31bf-217">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-217">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-218">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>テキストを Northwind データベースの Orders テーブルからの注文を削除します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-218">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table.</span></span> <span data-ttu-id="b31bf-219">データは Orders テーブルから取得されに表示される、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-219">Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-220"><xref:System.Web.UI.WebControls.GridView>レンダリング、**削除**ボタンを自動的にときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>プロパティに設定されている`true`を自動的に入力し、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクションと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>メソッドと、**削除**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-220">The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true` and automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when the **Delete** button is clicked.</span></span> <span data-ttu-id="b31bf-221">最後に、ため、この例では、データを削除、イベント ハンドラーを追加、削除操作の前に、ディスクにデータベースをバックアップしようとするが実行されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-221">Finally, because this example deletes data, an event handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-222"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-222">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="b31bf-223"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-223">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="b31bf-224">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-224">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-225">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-225">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b31bf-226">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-226">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-227">削除操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-227">Occurs when a delete operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-228">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>削除操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-228">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event to examine the values of output parameters after a delete operation has completed.</span></span> <span data-ttu-id="b31bf-229">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-229">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="b31bf-230">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-230">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-231"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-231">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="b31bf-232"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-232">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-233">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-233">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="b31bf-234">パラメーター名の影響を受ける、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティです。 具体的には、名前は、主キーを識別する場合など、キー指定されたを使用して、`DataKeyNames`プロパティ、または削除、データ バインド コントロールのシナリオを更新し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティがに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値と一連の`oldValues`は対応するデータのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-234">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property of a data-bound control, or in delete and update scenarios in which the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="b31bf-235">各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-235">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="b31bf-236">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-236">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection might be important.</span></span> <span data-ttu-id="b31bf-237"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリで使用されるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-237">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="b31bf-238"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリにプレース ホルダーで、パラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-238">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</span></span> <span data-ttu-id="b31bf-239">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-239">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-240">次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind データベースから注文を削除するテキスト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-240">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="b31bf-241">最初に、データは Orders テーブルから取得および表示で、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-241">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-242">明示的に宣言する必要があります、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>プロパティと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>メソッドなど、データ バインド コントロールを使用する場合、 <xref:System.Web.UI.WebControls.DropDownList> (コントロールと異なり、ように、<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、自動的に設定する、パラメーターと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>データ ソース コントロールのメソッド)。</span><span class="sxs-lookup"><span data-stu-id="b31bf-242">You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike controls, such as the <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control).</span></span> <span data-ttu-id="b31bf-243">この例では、<xref:System.Web.UI.WebControls.Button.OnClick%2A>イベントは、プライベートに委任<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>を明示的に呼び出すイベント ハンドラー、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-243">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-244">削除操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-244">Occurs before a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-245">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-245">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.</span></span>  
  
 <span data-ttu-id="b31bf-246">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-246">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="b31bf-247">そのため、キャンセルすることはできません、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作を呼び出すことによって直接、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-247">Therefore, you cannot cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="b31bf-248">設定して、操作をキャンセルすることができます、ただし、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-248">You can, however, cancel the operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="b31bf-249">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-249">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-250">次のコード例は、処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>は削除操作を行う前に発生するイベントです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-250">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a delete operation occurs.</span></span> <span data-ttu-id="b31bf-251">この例は、Northwind データベースからデータを削除するため、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>削除操作を実行する前に、ディスクにデータベースをバックアップしようとするハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-251">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="b31bf-252"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-252">An <see cref="T:System.Collections.IDictionary" /> of object or row key values for the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" /> operation to delete.</span></span></param>
        <param name="oldValues"><span data-ttu-id="b31bf-253"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-253">An <see cref="T:System.Collections.IDictionary" /> that contains row values that are evaluated only if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value.</span></span></param>
        <summary><span data-ttu-id="b31bf-254"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-254">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> collection, and the values that are in the specified <paramref name="keys" /> and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="b31bf-255">基になるデータベースから削除された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-255">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-256"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>メソッドは、データベースからデータを削除します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-256">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> method to delete data from a database.</span></span> <span data-ttu-id="b31bf-257">ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>メソッド直接。 代わりに、使用して公開される<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-257">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span>  
  
 <span data-ttu-id="b31bf-258">含まれている値、`keys`コレクションが評価されに含まれる任意の値とマージされた、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-258">The values that are contained in the `keys` collection are evaluated and merged with any values that are contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-259">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>に含まれている値、値、`oldValues`コレクションの書式は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティでありもマージします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-259">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the values that are contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property and are also merged.</span></span>  
  
 <span data-ttu-id="b31bf-260">削除操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-260">Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting> event.</span></span> <span data-ttu-id="b31bf-261">パラメーターの値を確認して、削除する前に処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-261">You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete.</span></span>  
  
 <span data-ttu-id="b31bf-262">削除操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>テキストおよび関連<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-262">To perform a delete operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="b31bf-263">削除操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-263">After the delete operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted> event.</span></span> <span data-ttu-id="b31bf-264">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-264">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-265"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-265">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
 <span data-ttu-id="b31bf-266">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-266">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-267"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-267">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b31bf-268">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-268">The current user does not have the correct permissions to access to the database.</span></span>  
  
 <span data-ttu-id="b31bf-269">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-269">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-270">コントロールのインスタンスは、<see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールであり、<see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> プロパティに指定されているパスへのアクセスは拒否されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-270">The instance of the control is an <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control and access is denied to the path specified for the <see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> property.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-271"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-271">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> property is <see langword="false" />.</span></span>  
  
 <span data-ttu-id="b31bf-272">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-272">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-273"><see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールのインスタンスを使用する前に、デザイン時の相対パスがデザイナーによって正しく割り当てられていませんでした。</span><span class="sxs-lookup"><span data-stu-id="b31bf-273">A design-time relative path was not mapped correctly by the designer before using an instance of the <see cref="T:System.Web.UI.WebControls.AccessDataSource" /> control.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b31bf-274">データベースへの挿入操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用される値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-274">An <see cref="T:System.Collections.IDictionary" /> of values used with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to perform the insert database operation.</span></span> <span data-ttu-id="b31bf-275">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-275">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b31bf-276"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-276">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b31bf-277">基になるデータベースに挿入された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-277">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-278"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>データベースにデータを挿入するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b31bf-278">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> method to insert data into a database.</span></span> <span data-ttu-id="b31bf-279">ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>メソッド直接。 代わりに、使用して公開される<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-279">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="b31bf-280">挿入操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-280">Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event.</span></span> <span data-ttu-id="b31bf-281">パラメーターの値を確認して、挿入する前に処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-281">You can handle this event to examine the values of the parameters and to perform any preprocessing before an insert.</span></span>  
  
 <span data-ttu-id="b31bf-282">挿入操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-282">To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="b31bf-283">挿入が完了したら、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-283">After the insert completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event.</span></span> <span data-ttu-id="b31bf-284">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-284">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-285"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-285">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b31bf-286">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-286">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-287"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-287">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="b31bf-288">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-288">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="b31bf-289"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-289">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b31bf-290">データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-290">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-291"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>データベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-291">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method to retrieve data from a database.</span></span> <span data-ttu-id="b31bf-292">ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>メソッド直接。 代わりに、使用して公開される<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-292">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span>  
  
 <span data-ttu-id="b31bf-293">データの取得が行われる前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-293">Before the data retrieval is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event.</span></span> <span data-ttu-id="b31bf-294">パラメーターの値を確認して、データが取得される前に処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-294">You can handle this event to examine the values of the parameters and to perform any preprocessing before data is retrieved.</span></span>  
  
 <span data-ttu-id="b31bf-295">操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>、し、基になるデータベースに対して実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-295">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>, and executes it against the underlying database.</span></span> <span data-ttu-id="b31bf-296">操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-296">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event.</span></span> <span data-ttu-id="b31bf-297">戻り値、エラー コードを調べるには、このイベントを処理し、後処理を実行できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-297">You can handle this event to examine any return values, error codes, and perform any post-processing.</span></span>  
  
 <span data-ttu-id="b31bf-298"><xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>メソッドを返します、<xref:System.Data.DataView>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>、または<xref:System.Data.IDataReader>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-298">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>, or a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>.</span></span> <span data-ttu-id="b31bf-299">閉じる、<xref:System.Data.IDataReader>オブジェクト データの読み取りが完了したとき。</span><span class="sxs-lookup"><span data-stu-id="b31bf-299">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 <span data-ttu-id="b31bf-300">場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>キャッシュが有効になっていると、<xref:System.Web.UI.WebControls.SqlDataSourceView>からデータを取得し、データの処理中にキャッシュにデータを保存します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-300">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSourceView> retrieves data from and saves data to the cache during the data operation.</span></span> <span data-ttu-id="b31bf-301">キャッシュが作成、破棄、または更新の組み合わせで指定されたキャッシュの動作に基づいて、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-301">The cache is created, discarded, or refreshed based on the caching behavior specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b31bf-302">Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-302">When you are using client impersonation under Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="b31bf-303">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-303">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="b31bf-304">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-304">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="b31bf-305">予定の場合、データにアクセスする複数のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-305">If you expect multiple users to access the data, and you want each retrieval to the data to be verified by the database's security configurations, do not use caching.</span></span>  
  
 <span data-ttu-id="b31bf-306">場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>に設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>と<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>が指定されている、指定されたいずれかと評価される<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>データ取得操作中のデータの一覧にその結果のフィルターが適用されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-306">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> and a <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> has been specified, it is evaluated along with any supplied <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> and the resulting filter is applied to the list of data during the data retrieval operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-307"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドに渡される <paramref name="arguments" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-307">The <paramref name="arguments" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span>  
  
 <span data-ttu-id="b31bf-308">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-308">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-309">キャッシュは有効ですが、データ ソースの <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> プロパティが <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-309">Caching is enabled but the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property of the data source is not set to <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />.</span></span>  
  
 <span data-ttu-id="b31bf-310">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-310">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-311"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> プロパティが設定されていますが、<see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> が <see cref="F:System.Data.CommandType.StoredProcedure" /> に設定されていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-311">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> property is set but <see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> is not set to <see cref="F:System.Data.CommandType.StoredProcedure" />.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-312">データ ソースがデータベース接続を作成できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-312">The data source cannot create a database connection.</span></span>  
  
 <span data-ttu-id="b31bf-313">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-313">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-314">キャッシュは有効ですが、内部キャッシュとコマンドの種類が一致していません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-314">Caching is enabled but the internal cache and command types do not match.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="b31bf-315">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-315">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="b31bf-316">クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-316">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="b31bf-317">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-317">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="b31bf-318">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-318">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="b31bf-319">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-319">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="b31bf-320">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-320">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b31bf-321"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-321">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="b31bf-322">基になるデータベースで更新された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-322">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-323"><xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを継承した実装<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>データベース内のデータを更新する方法です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-323">The <xref:System.Web.UI.WebControls.SqlDataSourceView> class implements the inherited <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method to update data in a database.</span></span> <span data-ttu-id="b31bf-324">ページの開発者およびデータ バインド コントロールの作成者が呼び出す必要はありません、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>メソッド直接。 代わりに、使用して公開される<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-324">Page developers and data-bound control authors do not call the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method directly; instead, use the publicly exposed <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.</span></span>  
  
 <span data-ttu-id="b31bf-325">含まれる値、`keys`と`values`コレクションが評価されに含まれる任意の値とマージされた、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-325">The values contained in the `keys` and `values` collections are evaluated and merged with any values contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-326">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている<xref:System.Web.UI.ConflictOptions.CompareAllValues>に含まれる値、`oldValues`コレクションの書式は、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>ともマージします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-326">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to  <xref:System.Web.UI.ConflictOptions.CompareAllValues>, the values contained in the `oldValues` collection are formatted with the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> and also merged.</span></span>  
  
 <span data-ttu-id="b31bf-327">更新操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-327">Before the update operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event.</span></span> <span data-ttu-id="b31bf-328">パラメーターの値を確認し、更新の前に処理を実行するには、このイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-328">You can handle this event to examine the values of the parameters and perform any preprocessing before an update.</span></span>  
  
 <span data-ttu-id="b31bf-329">操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>ビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-329">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span> <span data-ttu-id="b31bf-330">操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>イベント。</span><span class="sxs-lookup"><span data-stu-id="b31bf-330">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event.</span></span> <span data-ttu-id="b31bf-331">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-331">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-332"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-332">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span>  
  
 <span data-ttu-id="b31bf-333">\- または</span><span class="sxs-lookup"><span data-stu-id="b31bf-333">\- or -</span></span>  
  
 <span data-ttu-id="b31bf-334"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-334">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> property is set to the <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> value and no <paramref name="oldValues" /> parameters are passed.</span></span></exception>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="b31bf-335">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-335">The current user does not have the correct permissions to gain access to the database.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-336"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-336">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-337"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> メソッドが呼び出されるときに適用されるフィルター式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-337">Gets or sets a filtering expression that is applied when the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> method is called.</span></span></summary>
        <value><span data-ttu-id="b31bf-338"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-338">A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-339">使用される構文、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティは、書式文字列形式の構文。</span><span class="sxs-lookup"><span data-stu-id="b31bf-339">The syntax that is used for the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is a format string–style syntax.</span></span> <span data-ttu-id="b31bf-340">内のパラメーターを含めることができます、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-340">You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="b31bf-341">パラメーターの型が文字列または文字の場合は、パラメーターを単一引用符で囲みます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-341">If the type of the parameter is string or character, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="b31bf-342">パラメーターが数値型の場合、引用符がある場合は、必要ではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-342">Quotation marks are not required, if the parameter is a numeric type.</span></span>  
  
 <span data-ttu-id="b31bf-343"><xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>コレクションに含まれているプレース ホルダーに評価されるパラメーターが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-343">The <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="b31bf-344"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、データのフィルター処理をサポートしている時にのみ`DataSet`モード。</span><span class="sxs-lookup"><span data-stu-id="b31bf-344">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in `DataSet` mode.</span></span>  
  
 <span data-ttu-id="b31bf-345">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-345">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is stored in view state.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b31bf-346">クライアントから受信したフィルターのパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-346">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="b31bf-347">ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-347">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="b31bf-348">使用している場合、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-348">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-349">次のコード例は、Northwind データベースからデータを取得しを使用してフィルター処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-349">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="b31bf-350"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールには、いつでもが適用される、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>データを取得するメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-350">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="b31bf-351">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティに含まれているフィルター パラメーターのプレース ホルダーが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-351">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-352">この例では、フィルター パラメーターは、<xref:System.Web.UI.WebControls.ControlParameter>にバインドされているオブジェクト、<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-352">In this example, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-353"><xref:System.Web.UI.WebControls.DropDownList>コントロールがその<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティに設定`true`の変化、<xref:System.Web.UI.WebControls.DropDownList>の選択は、サーバーにポストする ページと<xref:System.Web.UI.WebControls.GridView>新しいフィルターを使用して、データ ソース コントロールを再バインドするコントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-353">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-354"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> が <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> モードのときに、<see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> プロパティが設定されました。</span><span class="sxs-lookup"><span data-stu-id="b31bf-354">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property was set when the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in the <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-355">フィルター操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-355">Occurs before a filter operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-356">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering>イベント フィルターの前にパラメーター値の検証操作を実行、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトは、フィルター操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-356">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSourceView> object performs a filter operation.</span></span> <span data-ttu-id="b31bf-357">取り消すことができます、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>を設定することによって、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>オブジェクトを`true`です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-357">You can cancel the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`.</span></span> <span data-ttu-id="b31bf-358">場合にのみこのイベントは、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-358">The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property is set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b31bf-359">クライアントから受信したフィルターのパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-359">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="b31bf-360">ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-360">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="b31bf-361">使用している場合、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-361">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
 <span data-ttu-id="b31bf-362">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-362">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-363"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-363">Gets a collection of parameters that are associated with any parameter placeholders in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> string.</span></span></summary>
        <value><span data-ttu-id="b31bf-364"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-364">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-365">内のパラメーター、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>コレクションがで指定されているすべてのパラメーターで関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-365">The parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property.</span></span> <span data-ttu-id="b31bf-366">指定されているパラメーターのプレース ホルダー、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>が順序で評価され、パラメーター オブジェクトに一致する、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>コレクションと、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-366">The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> are evaluated by order and matched to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method is called.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b31bf-367">クライアントから受信したフィルターのパラメーター値を検証する必要があります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-367">You should validate any filter parameter value that you receive from the client.</span></span> <span data-ttu-id="b31bf-368">ランタイムは、単にフィルター式にパラメーター値を代入しに適用されます、<xref:System.Data.DataView>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-368">The runtime simply substitutes the parameter value into the filter expression and applies it to the <xref:System.Data.DataView> object that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> method.</span></span> <span data-ttu-id="b31bf-369">使用している場合、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>フィルターを使用する前に、パラメーターの値を検証する必要があります、返される項目数を制限するセキュリティ対策としてのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-369">If you are using the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property as a security measure to limit the number of items that are returned, you must validate the parameter values before the filtering occurs.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-370">次のコード例は、Northwind データベースからデータを取得しを使用してフィルター処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-370">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="b31bf-371"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールには、いつでもが適用される、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>データを取得するメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-371">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="b31bf-372">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティに含まれているフィルター パラメーターのプレース ホルダーが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-372">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-373">さらに、フィルターのパラメーターは、<xref:System.Web.UI.WebControls.ControlParameter>にバインドされているオブジェクト、<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-373">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-374"><xref:System.Web.UI.WebControls.DropDownList>コントロールがその<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティに設定`true`の変化、<xref:System.Web.UI.WebControls.DropDownList>の選択は、サーバーに情報を投稿するページと<xref:System.Web.UI.WebControls.GridView>データ ソース コントロールにバインドするコントロール、新しいフィルターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-374">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="b31bf-375">データベースへの挿入操作の実行に使用する、<see cref="T:System.Collections.IDictionary" /> プロパティのパラメーターの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-375">An <see cref="T:System.Collections.IDictionary" /> of parameters for the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property to use to perform the insert database operation.</span></span> <span data-ttu-id="b31bf-376">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-376">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b31bf-377"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-377">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL string, any parameters that are specified in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> collection, and the values that are in the specified <paramref name="values" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b31bf-378">基になるデータベースに挿入された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-378">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-379"><xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>渡して、メソッド、`values`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b31bf-379">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A> method, passing the `values` parameter.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-380"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-380">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-381"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-381">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-382">基になるデータベースにデータを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-382">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to insert data into the underlying database.</span></span></summary>
        <value><span data-ttu-id="b31bf-383">データを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-383">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to insert data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-384">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-384">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="b31bf-385">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-385">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="b31bf-386">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-386">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="b31bf-387">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-387">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="b31bf-388">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-388">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="b31bf-389"><xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-389">The <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="b31bf-390">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-390">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-391">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-391">This section contains two code examples.</span></span> <span data-ttu-id="b31bf-392">最初のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-392">The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="b31bf-393">2 番目のコード例は、Microsoft SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御、および使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-393">The second code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-394">次のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-394">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="b31bf-395">テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-395">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-396">内の値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールをクリックして、**挿入**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-396">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="b31bf-397">ときに、**挿入**ボタンがクリックされると、指定した値がデータベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-397">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 <span data-ttu-id="b31bf-398">次のコード例は、SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御、および使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-398">The following code example demonstrates how to retrieve data from SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-399">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロールであり、選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-399">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="b31bf-400"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、選択した行のことを確認、<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-400">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b31bf-401">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-401">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b31bf-402">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-402">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-403">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-403">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b31bf-404"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-404">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b31bf-405">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b31bf-405">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-406">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-406">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-407"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-407">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="b31bf-408"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-408">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="b31bf-409">値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 値です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-409">The value is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-410">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-410">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-411">次のコード例は、Microsoft SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御、および使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-411">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-412"><xref:System.Web.UI.WebControls.GridView>コントロールは、一連のデータを表示し、<xref:System.Web.UI.WebControls.DetailsView>コントロールには、特定の行の詳細が表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-412">The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> control displays the details for a particular row.</span></span> <span data-ttu-id="b31bf-413">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-413">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b31bf-414">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-414">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-415">ストアド プロシージャの名前を設定、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティを設定して、ストアド プロシージャとして識別されると、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-415">The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and is identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.</span></span>  
  
 <span data-ttu-id="b31bf-416">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-416">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b31bf-417">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-417">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-418">挿入操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-418">Occurs when an insert operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-419">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>挿入操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-419">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted> event to examine the values of output parameters after an insert operation has completed.</span></span> <span data-ttu-id="b31bf-420">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-420">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="b31bf-421">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-421">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-422">次のコード例は、Microsoft SQL Server からデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-422">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-423">また、例では、<xref:System.Web.UI.WebControls.DetailsView>で選択した行の詳細を表示するコントロールを<xref:System.Web.UI.WebControls.GridView>、および新しいレコードを挿入するためのフォームとして。</span><span class="sxs-lookup"><span data-stu-id="b31bf-423">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-424">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロールであり、選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-424">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView>.</span></span> <span data-ttu-id="b31bf-425"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、選択した行のことを確認、<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-425">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b31bf-426">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-426">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface that is used to insert a new record.</span></span> <span data-ttu-id="b31bf-427">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-427">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-428">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-428">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b31bf-429"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-429">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b31bf-430">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b31bf-430">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-431">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-431">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-432">挿入操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-432">Occurs before an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-433">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-433">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.</span></span>  
  
 <span data-ttu-id="b31bf-434">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-434">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="b31bf-435">そのため、呼び出すことによって直接、データベースの操作を取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-435">Therefore, you cannot cancel the database operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="b31bf-436">ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-436">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="b31bf-437">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-437">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-438">次のコード例は、Microsoft SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-438">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-439">また、例では、<xref:System.Web.UI.WebControls.DetailsView>で選択した行の詳細を表示するコントロールを<xref:System.Web.UI.WebControls.GridView>、および新しいレコードを挿入するためのフォームとして。</span><span class="sxs-lookup"><span data-stu-id="b31bf-439">The example also uses a <xref:System.Web.UI.WebControls.DetailsView> control to display details of the selected row in the <xref:System.Web.UI.WebControls.GridView>, and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-440">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロールであり、選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-440">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="b31bf-441"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、選択した行のことを確認、<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-441">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b31bf-442">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-442">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b31bf-443">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-443">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-444">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-444">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b31bf-445"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクト、およびパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-445">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object, and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b31bf-446">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b31bf-446">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-447">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-447">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-448"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-448">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="b31bf-449"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-449">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-450">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-450">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="b31bf-451">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-451">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> collection might be important.</span></span> <span data-ttu-id="b31bf-452"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-452">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="b31bf-453"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-453">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="b31bf-454">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-454">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-455">次のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと、単純な Web フォーム ページ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-455">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="b31bf-456">テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-456">The current data in the table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-457">内の値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールをクリックして、**挿入**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-457">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="b31bf-458">ときに、**挿入**ボタンがクリックされると、指定した値がデータベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList>が更新されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-458">When the **Insert** button is clicked, the specified values are inserted into the database and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-459"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-459">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object is saving changes to its view state.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-460">データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-460"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="b31bf-461">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-461">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="b31bf-462">データ ソース ビューの、以前保存したビューステートを復元します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-462">Restores the previously saved view state for the data source view.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-463">このメソッドは、主に使用、[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]インフラストラクチャ コードから直接使用するものではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-463">This method is primarily used by the [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)] infrastructure and is not intended to be used directly from your code.</span></span>  <span data-ttu-id="b31bf-464">ただし、コントロールの開発者は、カスタム サーバー コントロールがそのビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-464">However, control developers can override this method to specify how a custom server control restores its view state.</span></span> <span data-ttu-id="b31bf-465">詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-465">For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 <span data-ttu-id="b31bf-466"><xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>メソッドのビュー ステート情報の復元、<xref:System.Web.UI.WebControls.SqlDataSourceView>によって保存された前回のページ要求からのオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-466">The <xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A> method restores view-state information for the <xref:System.Web.UI.WebControls.SqlDataSourceView> object from a previous page request that was saved by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-467"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> メソッドに渡される任意のパラメーター名に適用される書式指定文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-467">Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> method.</span></span></summary>
        <value><span data-ttu-id="b31bf-468"><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> メソッドに渡される任意の <paramref name="oldValues" /> パラメーターの名前に適用される書式指定文字列を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-468">A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> or <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> methods.</span></span> <span data-ttu-id="b31bf-469">既定値は "{0}" です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-469">The default is "{0}".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-470"><xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>によって識別されるものなど書式指定文字列が主キーのみに適用される、`DataKeyNames`プロパティ、または削除、データ バインド コントロールの更新シナリオと場所、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値と一連の`oldValues`は対応するデータのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-470">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> format string is applied to primary keys only, such as those that are identified by the `DataKeyNames` property of the data-bound control or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` is passed to the corresponding data method.</span></span> <span data-ttu-id="b31bf-471">各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-471">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span> <span data-ttu-id="b31bf-472">詳細については、「<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-472">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b31bf-473">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-473">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-474">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-474">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-475"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> コントロールが削除操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-475">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-476">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-476">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-477">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-477">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-478"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-478">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-479">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-479">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-480">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-480">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-481">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-481">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-482"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> コントロールが削除操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-482">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-483">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-483">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-484">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-484">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-485"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-485">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-486">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-486">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-487">次のコード例は、処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>する前に発生するイベント、<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作が発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-487">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event, which is raised before a <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> operation occurs.</span></span> <span data-ttu-id="b31bf-488">この例は、Northwind データベースからデータを削除するため、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>削除が行われる前に、ディスクにデータベースをバックアップしようとするハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-488">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the delete is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-489">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-489">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-490">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-490">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-491"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> コントロールが選択操作の結果をフィルター処理する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-491">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control filters the results of a select operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-492">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-492">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-493">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-493">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-494"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-494">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-495">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-495">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-496">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-496">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-497">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-497">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-498"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> コントロールが挿入操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-498">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-499">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-499">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-500">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-500">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-501"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-501">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-502">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-502">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-503">次のコード例は、Microsoft SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御、および使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-503">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-504">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロールであり、選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-504">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="b31bf-505"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、選択した行のことを確認、<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-505">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b31bf-506">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-506">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b31bf-507">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-507">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-508">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-508">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b31bf-509"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-509">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b31bf-510">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b31bf-510">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-511">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-511">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-512">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-512">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-513">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-513">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-514"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> コントロールが挿入操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-514">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-515">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-515">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-516">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-516">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-517"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-517">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-518">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-518">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-519">次のコード例は、Microsoft SQL Server からデータを取得、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>制御、および使用して、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-519">The following code example demonstrates how to retrieve data from Microsoft SQL Server, display it in a <xref:System.Web.UI.WebControls.GridView> control, and use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="b31bf-520">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>コントロールであり、選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-520">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="b31bf-521"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、選択した行のことを確認、<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-521">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensure that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="b31bf-522">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-522">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="b31bf-523">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-523">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="b31bf-524">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-524">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="b31bf-525"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-525">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="b31bf-526">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="b31bf-526">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-527">最後に、によってデータが挿入された後、 <xref:System.Web.UI.WebControls.DetailsView> 、データベースへの制御、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されると、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-527">Finally, after data is inserted by the <xref:System.Web.UI.WebControls.DetailsView> control into the database, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-528">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-528">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-529">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-529">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-530"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> コントロールがデータ取得操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-530">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-531">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-531">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-532">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-532">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-533"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-533">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-534">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-534">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-535">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-535">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-536">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-536">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-537"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> コントロールがデータ取得操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-537">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-538">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-538">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-539">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-539">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-540"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-540">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-541">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-541">This is the preferred technique for handling the event in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-542">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-542">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-543">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-543">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-544"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> コントロールが更新操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-544">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> event after the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has completed an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-545">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-545">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-546">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-546">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-547"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-547">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-548">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-548">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-549">次のコード例を表示し、ODBC データベースから取得されたデータを更新する方法を示しています、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-549">The following code example demonstrates how to display and update data retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-550">レコードは正常に更新した後、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>する処理後の手順を実行するには、電子メール メッセージの通知の送信先にイベント ハンドラーでイベントが処理されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-550">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-551">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-551">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="b31bf-552">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-552">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="b31bf-553"><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> コントロールが更新操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-553">Raises the <see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> event before the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control attempts an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-554">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-554">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="b31bf-555">詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-555">For more information, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 <span data-ttu-id="b31bf-556"><xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-556">The <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="b31bf-557">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-557">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-558">次のコード例では、Microsoft SQL Server データベースから取得されるデータを表示する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロールし、レコードを使用して、更新、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-558">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="b31bf-559">使用する方法の例を示しています、<xref:System.Data.Common.DbTransaction>を使用する場合は、トランザクション コンテキストを追加するオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにデータを更新します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-559">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="b31bf-560">オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />派生クラスでは、呼び出しに必ず、<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-560">When overriding the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> in a derived class, be sure to call the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" /> method for the base class so that registered delegates receive the event.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-561">パラメーター化された SQL クエリ内のパラメーター プレースホルダーのプレフィックスとして使用される文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-561">Gets the string that is used to prefix a parameter placeholder in a parameterized SQL query.</span></span></summary>
        <value><span data-ttu-id="b31bf-562">"@" 文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-562">The "@" string.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-563">SQL クエリとコマンド パラメーター化できる、実行時に、クエリにバインドされている値のプレース ホルダーを格納したものにします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-563">SQL queries and commands can be parameterized, in that they contain placeholders for values that are bound to the query at run time.</span></span> <span data-ttu-id="b31bf-564">設定されている ADO.NET プロバイダーによって、<xref:System.Web.UI.WebControls.SqlDataSource>によって識別される、コントロール、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ、パラメーターによって評価されますのエイリアスまたはそれらの順序によって、<xref:System.Web.UI.WebControls.ParameterCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-564">Depending on the ADO.NET provider that is set for the <xref:System.Web.UI.WebControls.SqlDataSource> control, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the parameters are evaluated by alias or by their ordering in the <xref:System.Web.UI.WebControls.ParameterCollection> object.</span></span>  
  
 <span data-ttu-id="b31bf-565">場合、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>が設定されていないかに設定されている、 <xref:System.Data.SqlClient?displayProperty=nameWithType>、エイリアスでパラメーターが評価されると、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>にパラメーター プレフィックスを追加するプロパティを使用、<xref:System.Web.UI.WebControls.Parameter.Name%2A>の各プロパティ<xref:System.Web.UI.WebControls.Parameter>内のオブジェクト、<xref:System.Web.UI.WebControls.ParameterCollection>データの取得やデータ操作の操作中にします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-565">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is not set or is set to the <xref:System.Data.SqlClient?displayProperty=nameWithType>, parameters are evaluated by alias and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is used to add a parameter prefix to the <xref:System.Web.UI.WebControls.Parameter.Name%2A> property of each <xref:System.Web.UI.WebControls.Parameter> object in a <xref:System.Web.UI.WebControls.ParameterCollection> during a data retrieval or data manipulation operation.</span></span> <span data-ttu-id="b31bf-566">場合、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティに設定されている、<xref:System.Data.OleDb?displayProperty=nameWithType>または<xref:System.Data.Odbc?displayProperty=nameWithType>、順序によって、パラメーターが評価され、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>と<xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティは無視されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-566">If the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb?displayProperty=nameWithType> or <xref:System.Data.Odbc?displayProperty=nameWithType>, the parameters are evaluated by order and the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> and <xref:System.Web.UI.WebControls.Parameter.Name%2A> properties are ignored.</span></span>  
  
 <span data-ttu-id="b31bf-567">拡張する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView>クラスをオーバーライドできます、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>以外の値のプレフィックスを指定するプロパティ、`"@"`文字列、必要な場合です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-567">If you extend the <xref:System.Web.UI.WebControls.SqlDataSourceView> class, you can override the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property to supply a prefix other than the `"@"` string, if required.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability"><span data-ttu-id="b31bf-568">ビューでサポートされている機能と比較される、<see cref="T:System.Web.UI.DataSourceCapabilities" /> のいずれかの値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-568">One of the <see cref="T:System.Web.UI.DataSourceCapabilities" /> values that is compared against the capabilities that the view supports.</span></span></param>
        <summary><span data-ttu-id="b31bf-569"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作に要求される機能と、ビューでサポートされ、<see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> メソッドによって呼び出される機能を比較します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-569">Compares the capabilities that are requested for an <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> operation against those that the view supports and is called by the <see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> method.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-570"><xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A>メソッドは、データ ソース ビューを個々 のデータ バインドされたコントロールによって要求されている機能によって表される調べる使用、<xref:System.Web.UI.DataSourceSelectArguments>に渡されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッド、およびそれらのデータ ソース ビューでサポートされている機能を提供する機能を比較します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-570">The <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A> method is used by the data source view to examine each of the capabilities that are requested by a data-bound control, which is represented by the <xref:System.Web.UI.DataSourceSelectArguments> object that is passed to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method, and to compare those capabilities to the capabilities that are supported by the data source view.</span></span> <span data-ttu-id="b31bf-571">によって表されている機能のため、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトし、データ ソース ビューでサポートされていない、<xref:System.NotSupportedException>例外が発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-571">For the capabilities that are represented by the <xref:System.Web.UI.DataSourceSelectArguments> object and are not supported by the data source view, a <xref:System.NotSupportedException> exception is raised.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-572">データ ソース内で、選択した <paramref name="capability" /> が有効ではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-572">The data source does not have the selected <paramref name="capability" /> enabled.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b31bf-573">ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールのビューステートへの変更を保存します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-573">Saves the changes to the view state for the  <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control since the time that the page was posted back to the server.</span></span></summary>
        <returns><span data-ttu-id="b31bf-574"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-574">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-575"><xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-575">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method is primarily used by control developers.</span></span>  
  
 <span data-ttu-id="b31bf-576">ビュー ステートが、サーバー コントロールのプロパティの値の累積します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-576">View state is the accumulation of the values of the properties for a server control.</span></span> <span data-ttu-id="b31bf-577">これらの値は、<xref:System.Web.UI.Control.ViewState%2A>インスタンスであるサーバー コントロールのプロパティの<xref:System.Web.UI.StateBag>クラス。</span><span class="sxs-lookup"><span data-stu-id="b31bf-577">These values are automatically placed in the <xref:System.Web.UI.Control.ViewState%2A> property for the server control, which is an instance of the <xref:System.Web.UI.StateBag> class.</span></span> <span data-ttu-id="b31bf-578"><xref:System.Web.UI.Control.ViewState%2A>保存状態のサーバー コントロールのライフ サイクルの段階後に、サーバー コントロールは、文字列オブジェクトに永続化し、の値します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-578">The <xref:System.Web.UI.Control.ViewState%2A> value for the server control is then persisted to a string object after the save state stage of the server control life cycle.</span></span>  
  
 <span data-ttu-id="b31bf-579">HTML に格納されている変数として、保存状態の段階のサーバー コントロールのライフ サイクルの後に永続化された文字列オブジェクトがクライアントに返されるビューステートを保存すると、`Hidden`要素。</span><span class="sxs-lookup"><span data-stu-id="b31bf-579">When view state is saved, the string object that was persisted after the save state stage of the server control life cycle is returned to the client as a variable that is stored in an HTML `Hidden` element.</span></span> <span data-ttu-id="b31bf-580">カスタム サーバー コントロールを作成するときに、オーバーライドすることで効率を向上できます、<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッドと変更、`ViewState`サーバー コントロールのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-580">When you author custom server controls, you can improve efficiency by overriding the <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A> method and modifying the `ViewState` property for your server control.</span></span> <span data-ttu-id="b31bf-581">詳細については、次を参照してください。 [ASP.NET 状態管理の概要](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-581">For more information, see [ASP.NET State Management Overview](http://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="b31bf-582">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-582">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="b31bf-583"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-583">Retrieves data from the underlying database using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="b31bf-584">データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-584">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-585"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>渡して、メソッド、`selectArgs`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b31bf-585">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method, passing the `selectArgs` parameter.</span></span>  
  
 <span data-ttu-id="b31bf-586"><xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>メソッドを返します。、<xref:System.Data.DataView>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティがに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>または値を返します、<xref:System.Data.IDataReader>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティがに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-586">The <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> method returns a <xref:System.Data.DataView> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value or it returns a <xref:System.Data.IDataReader> object, if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value.</span></span> <span data-ttu-id="b31bf-587">閉じる、<xref:System.Data.IDataReader>オブジェクト データの読み取りが完了したとき。</span><span class="sxs-lookup"><span data-stu-id="b31bf-587">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-588"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドに渡される <paramref name="selectArgs" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-588">The <paramref name="selectArgs" /> passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.</span></span></exception>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-589"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-589">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-590">基になるデータベースからデータを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-590">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to retrieve data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="b31bf-591">データを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-591">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to retrieve data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-592">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-592">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="b31bf-593">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-593">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="b31bf-594">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-594">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="b31bf-595">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-595">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="b31bf-596">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-596">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="b31bf-597"><xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-597">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="b31bf-598">SQL ステートメントよりも、ストアド プロシージャを使用する方が安全です、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-598">It is more secure to use a stored procedure than a SQL statement for the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property.</span></span>  
  
 <span data-ttu-id="b31bf-599">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-599">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-600">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-600">This section contains two code examples.</span></span> <span data-ttu-id="b31bf-601">最初のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>を Microsoft SQL Server データベースからデータを取得して表示で基本的な SQL クエリ テキスト、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-601">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-602">2 番目のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを SQL Server データベースからデータを取得して表示でストアド プロシージャの名前を<xref:System.Web.UI.WebControls.DropDownList>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-602">The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 <span data-ttu-id="b31bf-603">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを SQL Server データベースからデータを取得して表示で基本的な SQL クエリを<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-603">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-604"><xref:System.Web.UI.WebControls.Button>と<xref:System.Web.UI.WebControls.TextBox>で選択したユーザーのアドレスを更新する、シンプルなインターフェイスとしてコントロールが用意されて、<xref:System.Web.UI.WebControls.DropDownList>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-604">The <xref:System.Web.UI.WebControls.Button> and <xref:System.Web.UI.WebControls.TextBox> controls are provided as a simple interface to update the address for the selected user in the <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 <span data-ttu-id="b31bf-605">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを SQL Server データベースからデータを取得して表示でストアド プロシージャの名前を<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-605">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="b31bf-606"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL クエリまたはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-606">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-607"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティのテキストが SQL クエリまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-607">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property is a SQL query or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="b31bf-608"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-608">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="b31bf-609">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-609">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-610">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-610">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-611">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ストアド プロシージャの名前にテキストと<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値を Microsoft SQL Server データベースからデータを取得し、表示、<xref:System.Web.UI.WebControls.DropDownList>です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-611">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b31bf-612">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-612">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-613">データ取得操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-613">Occurs when a data retrieval operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-614">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selected>データ取得操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-614">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selected> event to examine the values of output parameters after a data retrieval operation has completed.</span></span> <span data-ttu-id="b31bf-615">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-615">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="b31bf-616">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-616">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-617">データ取得操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-617">Occurs before a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-618">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータの取得操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-618">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the data retrieval operation.</span></span>  
  
 <span data-ttu-id="b31bf-619">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-619">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-620"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-620">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="b31bf-621"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-621">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-622">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-622">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="b31bf-623">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-623">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> collection might be important.</span></span> <span data-ttu-id="b31bf-624"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-624">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="b31bf-625"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-625">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="b31bf-626">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-626">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-627">次のコード例を設定して、Microsoft SQL Server で Northwind データベースからデータを取得する方法を示しています、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL クエリのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-627">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query.</span></span> <span data-ttu-id="b31bf-628">SQL クエリがパラメーター化と内のプレース ホルダー、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティが照合する、<xref:System.Web.UI.WebControls.ControlParameter>に追加されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-628">The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-629">この方法で、<xref:System.Web.UI.WebControls.DropDownList>先のコントロール、<xref:System.Web.UI.WebControls.ControlParameter>バインド、動作にどのようなフィルターが表示されるとおり、<xref:System.Web.UI.WebControls.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-629">In this way, the <xref:System.Web.UI.WebControls.DropDownList> control, to which the <xref:System.Web.UI.WebControls.ControlParameter> is bound, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b31bf-630">パラメーターが使用する、WHERE 句で使用されるため、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>このコード例では、機能的には両方を使用して、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-630">Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in this code example is functionally equivalent to using both the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-631">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-631">Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></summary>
        <value><span data-ttu-id="b31bf-632">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="b31bf-632">The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-633"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティが評価されるだけで、SQL コマンドに含まれる、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティは、ストアド プロシージャの名前。</span><span class="sxs-lookup"><span data-stu-id="b31bf-633">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure.</span></span> <span data-ttu-id="b31bf-634">この例では場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティが設定されて、ストアド プロシージャの結果の並べ替えに使用されるパラメーターの名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-634">In this case, if the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</span></span>  
  
 <span data-ttu-id="b31bf-635">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>プロパティが設定されて、前に付加、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-635">If the  <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.</span></span>  
  
 <span data-ttu-id="b31bf-636">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-636">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-637">このメンバーの詳細については、「<see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-637">For a description of this member, see <see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />.</span></span></summary>
        <value>
          <span data-ttu-id="b31bf-638">データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-638"><see langword="true" />, if the data source view is marked to save its state; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-639">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-639">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b31bf-640">使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-640">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="b31bf-641">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-641">An object that represents the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> state to restore.</span></span></param>
        <summary><span data-ttu-id="b31bf-642">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-642">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-643">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-643">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b31bf-644">使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-644">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b31bf-645">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.SaveViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-645">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.SaveViewState" />.</span></span></summary>
        <returns><span data-ttu-id="b31bf-646"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-646">The object that contains the changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> view state; otherwise, <see langword="null" />, if there is no view state associated with the object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-647">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-647">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b31bf-648">使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-648">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b31bf-649">このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.TrackViewState" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-649">For a description of this member, see <see cref="M:System.Web.UI.IStateManager.TrackViewState" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-650">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-650">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="b31bf-651">使用する場合にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceView>にインスタンスをキャスト、<xref:System.Web.UI.IStateManager>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-651">It can be used only when the <xref:System.Web.UI.WebControls.SqlDataSourceView> instance is cast to the <xref:System.Web.UI.IStateManager> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="b31bf-652"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがそのビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-652">Causes the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object to track changes to its view state so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control and persisted across requests for the same page.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="b31bf-653">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-653">An <see cref="T:System.Collections.IDictionary" /> of primary keys to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="b31bf-654">クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-654">If there are no keys associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="values"><span data-ttu-id="b31bf-655">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-655">An <see cref="T:System.Collections.IDictionary" /> of values to use with the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property to perform the update database operation.</span></span> <span data-ttu-id="b31bf-656">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-656">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <param name="oldValues"><span data-ttu-id="b31bf-657">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-657">An <see cref="T:System.Collections.IDictionary" /> that represents the original values in the database.</span></span> <span data-ttu-id="b31bf-658">クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-658">If there are no parameters associated with the query or if the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> is not a parameterized SQL query, pass <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="b31bf-659"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-659">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL string, any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> collection, and the values that are in the specified <paramref name="keys" />, <paramref name="values" />, and <paramref name="oldValues" /> collections.</span></span></summary>
        <returns><span data-ttu-id="b31bf-660">基になるデータベースで更新された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="b31bf-660">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-661"><xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>渡して、メソッド、 `keys`、 `values`、および`oldValues`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="b31bf-661">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> method, passing the `keys`, `values`, and `oldValues` parameters.</span></span> <span data-ttu-id="b31bf-662">詳細については、「<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="b31bf-662">For more information, see <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-663">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>内のデータを表示するコントロールを<xref:System.Web.UI.WebControls.DropDownList>制御および更新データときに、**送信**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-663">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="b31bf-664"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティはパラメーター化された SQL ステートメントと 2 つ<xref:System.Web.UI.WebControls.ControlParameter>パラメーターに追加されます、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-664">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-665">ときに、**送信**ボタンをクリックして、<xref:System.Web.UI.WebControls.Button.OnClick%2A>を呼び出すイベントが処理される、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>メソッドに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-665">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="b31bf-666"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-666">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="b31bf-667"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-667">The <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> property is <see langword="false" />.</span></span></exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-668">基になるデータベース内のデータを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-668">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object uses to update data in the underlying database.</span></span></summary>
        <value><span data-ttu-id="b31bf-669">データを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="b31bf-669">A SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> uses to update data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-670">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-670">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="b31bf-671">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-671">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="b31bf-672">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-672">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="b31bf-673">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-673">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="b31bf-674">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-674">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="b31bf-675"><xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-675">The <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="b31bf-676">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-676">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-677">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="b31bf-677">This section contains two code examples.</span></span> <span data-ttu-id="b31bf-678">最初のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>制御および更新のデータを使用して Microsoft SQL Server データベース、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-678">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-679">2 番目のコード例は、ODBC を使用してデータベースのデータを更新する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-679">The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="b31bf-680">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>制御および更新のデータを使用して SQL Server データベース、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-680">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-681"><xref:System.Web.UI.WebControls.GridView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>からパラメーターを推論するとき、コレクション、<xref:System.Web.UI.WebControls.BoundField>オブジェクト、および呼び出し、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>メソッドと、**更新**編集可能な上のリンク<xref:System.Web.UI.WebControls.GridView>コントロールを選択します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-681">The <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> control is selected.</span></span> <span data-ttu-id="b31bf-682">この例では、後の後処理も含まれます: レコードが更新されると、電子メール メッセージの通知が送信されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-682">This example also includes some post-processing—after a record is updated, an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 <span data-ttu-id="b31bf-683">コードと同じように上記のコード例は、次のコード例は、ODBC を使用してデータベースのデータを更新する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-683">The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-684"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> For ODBC、ADO.NET プロバイダーに設定されて、 <xref:System.Data.Odbc?displayProperty=nameWithType>、および<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティが ODBC データ ソース名 (DSN) の名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-684">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-685"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-685">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property is a SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="b31bf-686"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="b31bf-686">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="b31bf-687">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-687">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-688">値、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-688">The value of the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="b31bf-689">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</span><span class="sxs-lookup"><span data-stu-id="b31bf-689">The selected value is not one of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-690">更新操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-690">Occurs when an update operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-691">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>更新操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="b31bf-691">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updated> event to examine the values of output parameters after an update operation has completed.</span></span> <span data-ttu-id="b31bf-692">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-692">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="b31bf-693">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-693">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-694">次のコード例を表示し、ODBC データベースから取得されるデータを更新する方法を示しています、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-694">The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="b31bf-695">レコードは正常に更新した後、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>する処理後の手順を実行するには、電子メール メッセージの通知の送信先にイベント ハンドラーでイベントが処理されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-695">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email message notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-696"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-696">Gets the parameters collection containing the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></summary>
        <value><span data-ttu-id="b31bf-697"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="b31bf-697">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-698">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列内にあるパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-698">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders that are in the SQL string.</span></span>  
  
 <span data-ttu-id="b31bf-699">パラメーター名の影響を受ける、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティです。 具体的には、名前は、主キーを識別する場合など、キー指定されたを使用して、`DataKeyNames`プロパティ、またはで削除と更新シナリオ場所、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティがに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値、および一連の`oldValues`は対応するデータのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-699">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property; specifically, if the name identifies a primary key, such as a key that is specified using the `DataKeyNames` property, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="b31bf-700">各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-700">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="b31bf-701">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="b31bf-701">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> collection might be important.</span></span> <span data-ttu-id="b31bf-702"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-702">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="b31bf-703"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="b31bf-703">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="b31bf-704">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-704">For more information on parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-705">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>内のデータを表示するコントロールを<xref:System.Web.UI.WebControls.DropDownList>制御および更新データときに、**送信**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-705">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="b31bf-706"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティはパラメーター化された SQL ステートメントと 2 つ<xref:System.Web.UI.WebControls.ControlParameter>パラメーターに追加されます、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="b31bf-706">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="b31bf-707">ときに、**送信**ボタンをクリックして、<xref:System.Web.UI.WebControls.Button.OnClick%2A>を呼び出すイベントが処理される、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-707">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="b31bf-708">更新操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-708">Occurs before an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b31bf-709">処理、<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-709">Handle the <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.</span></span>  
  
 <span data-ttu-id="b31bf-710">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="b31bf-710">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="b31bf-711">そのため、操作を呼び出すことによって直接取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b31bf-711">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="b31bf-712">ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-712">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="b31bf-713">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="b31bf-713">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b31bf-714">次のコード例では、Microsoft SQL Server データベースから取得されるデータを表示する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロールし、レコードを使用して、更新、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="b31bf-714">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="b31bf-715">使用する方法の例を示しています、<xref:System.Data.Common.DbTransaction>を使用する場合は、トランザクション コンテキストを追加するオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにデータを更新します。</span><span class="sxs-lookup"><span data-stu-id="b31bf-715">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>