<Type Name="SqlDataSourceView" FullName="System.Web.UI.WebControls.SqlDataSourceView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="8a938465972aaf566e313b248b310b1107e91bfa" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69400056" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceView extends System.Web.UI.DataSourceView implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceView" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceView&#xA;Inherits DataSourceView&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceView : System::Web::UI::DataSourceView, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type SqlDataSourceView = class&#xA;    inherit DataSourceView&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceView</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールをサポートし、データ バインドされたコントロールがリレーショナル データベースに SQL データ操作を実行するためのインターフェイスを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>クラスは、主に、ページコード内のプログラミング可能なオブジェクトとしてではなく、データバインドコントロールによって使用されることを意図しています。  
  
 ASP.NET データソースコントロールには、データソースビューオブジェクトによって表されるデータのリストが1つ以上含まれています。 クラスは、 <xref:System.Web.UI.DataSourceView>クラスを拡張し、それが関連付け<xref:System.Web.UI.WebControls.SqlDataSource>られているコントロールの機能を定義し、データソースコントロールの基本的なデータ機能を実装します。 <xref:System.Web.UI.WebControls.SqlDataSourceView> クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>、、 <xref:System.Web.UI.WebControls.SqlDataSource> 、<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>、の各操作、ビューに保持されている設定の並べ替え、フィルター処理、および管理を含む、コントロールのデータ機能を実装します。<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>状態.  
  
 オブジェクトは<xref:System.Web.UI.WebControls.SqlDataSourceView> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールによってページの開発者に直接公開されるわけではありませんが、プロパティの多くはです。 データソースビューで実行される最も基本的な操作は、データ項目の<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> <xref:System.Collections.IEnumerable>コレクションを取得するメソッドを使用して、基になるデータベースからデータを取得することです。 クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は、SQL クエリを使用してリレーショナルデータベースからのデータ取得を実装します。 SQL クエリは、柔軟性とセキュリティを向上させるためにパラメーター化できます。 次のデータ取得メソッド、プロパティ、およびイベントは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>によって実装され、開発者やその他の呼び出し元に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって直接公開されます。  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベント  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント  
  
 オブジェクト<xref:System.Web.UI.WebControls.SqlDataSourceView>は、SQL コマンドを使用してリレーショナルデータベース内のデータを更新することをサポートしています。 SQL コマンドをパラメーター化して、柔軟性とセキュリティを高めることができます。 <xref:System.Web.UI.WebControls.GridView>や<xref:System.Web.UI.WebControls.SqlDataSourceView>などのデータバインドコントロールは、を使用して自動的に更新を実行するように構成できますが、他のコントロールは使用できません。 <xref:System.Web.UI.WebControls.DetailsView> 次の更新メソッド、プロパティ、およびイベントは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>によって実装され、開発者やその他の呼び出し元に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって直接公開されます。  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベント  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Updated>イベント  
  
 で<xref:System.Web.UI.WebControls.SqlDataSourceView>は、リレーショナルデータベースへの新しいデータ行の挿入がサポートされています。 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティで指定された SQL コマンドは、柔軟性とセキュリティを向上させるためにパラメーター化できます。 <xref:System.Web.UI.WebControls.GridView>や<xref:System.Web.UI.WebControls.SqlDataSourceView>などのデータバインドコントロールは、を使用して自動的に挿入を実行するように構成できますが、他のコントロールは使用できません。 <xref:System.Web.UI.WebControls.DetailsView> 次の insert メソッド、プロパティ、およびイベントは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>によって実装され、開発者やその他の呼び出し元に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって直接公開されます。  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>イベント  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント  
  
 オブジェクト<xref:System.Web.UI.WebControls.SqlDataSourceView>では、リレーショナルデータベースからのデータの削除もサポートされています。 他のコマンドと同様に、 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティで指定された SQL コマンドをパラメーター化して、柔軟性とセキュリティを高めることができます。 <xref:System.Web.UI.WebControls.GridView>や<xref:System.Web.UI.WebControls.SqlDataSourceView>などのデータバインドコントロールは、を使用して自動的に削除を実行するように構成できますが、他のコントロールはできません。 <xref:System.Web.UI.WebControls.DetailsView> 次の delete メソッド、プロパティ、およびイベントは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>によって実装され、開発者やその他の呼び出し元に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって直接公開されます。  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> プロパティ  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベント  
  
-   <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント  
  
 データの取得時にデータをフィルター処理するために使用される句が動的である場合、データの取得はより強力です。 言い換えると、静的な WHERE 句を使用する SQL クエリは、柔軟ではなく、WHERE 句の値が、Web フォームページのコントロールに表示される値など、変更できる値にバインドされる SQL クエリとして強力ではありません。 SQL クエリを再構築し、ページの<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>読み込みごとにプロパティを設定するのでは<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>なく<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> 、プロパティとプロパティを使用して、データの取得に動的フィルター処理を適用できます。 これらのプロパティは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>によって実装され、データバインドコントロールやその他の呼び出し元に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって直接公開されます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用して取得したデータを並べ替えるには、order by 句を追加します。これにより、データを取得するとき、または取得後にメモリ内のデータを並べ替えるときに、データベースの順序が実行されます。 メソッドに<xref:System.Web.UI.WebControls.SqlDataSourceView> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> <xref:System.Web.UI.DataSourceSelectArguments>渡されるオブジェクトのプロパティを設定することにより、並べ替え式をに渡すことができます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>プロパティの構文は、 <xref:System.Data.DataView.Sort%2A?displayProperty=nameWithType>プロパティの構文と同じです。 ストアドプロシージャを使用してデータを取得する場合は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティを使用して、ストアドプロシージャ呼び出しの結果の並べ替えに特に使用されるパラメーターを指定することもできます。  
  
 複数のユーザーが同時にデータベースを変更できる場合、同時実行の競合が発生する可能性があります。 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、プロパティを<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection?displayProperty=nameWithType>使用して同時実行制御を行います。 機能は<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection?displayProperty=nameWithType>プロパティに実装されます。  
  
 他の多くの Web サーバーコントロールと<xref:System.Web.UI.WebControls.SqlDataSourceView>同様に<xref:System.Web.UI.IStateManager> 、はインターフェイスを実装し、ビューステートを使用してページ要求全体の状態を追跡します。 コントロールのビュー <xref:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState%2A>ステートの追跡を有効<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>にする<xref:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState%2A>ために、プロパティとプロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>、、、およびメソッドの実装が用意されています。 詳細については、「 [ASP.NET State Management の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))」を参照してください。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSourceView" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceView (System.Web.UI.WebControls.SqlDataSource owner, string name, System.Web.HttpContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.SqlDataSource owner, string name, class System.Web.HttpContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.#ctor(System.Web.UI.WebControls.SqlDataSource,System.String,System.Web.HttpContext)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (owner As SqlDataSource, name As String, context As HttpContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceView(System::Web::UI::WebControls::SqlDataSource ^ owner, System::String ^ name, System::Web::HttpContext ^ context);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSourceView : System.Web.UI.WebControls.SqlDataSource * string * System.Web.HttpContext -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="new System.Web.UI.WebControls.SqlDataSourceView (owner, name, context)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="owner" Type="System.Web.UI.WebControls.SqlDataSource" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="context" Type="System.Web.HttpContext" />
      </Parameters>
      <Docs>
        <param name="owner"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられているデータ ソース コントロール。</param>
        <param name="name">データ ソース ビューを所有するデータ ソース コントロールのスコープ内の、そのデータ ソース ビューの固有の名前。</param>
        <param name="context">現在の <see cref="T:System.Web.HttpContext" /> です。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールを現在のビューの所有者として設定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターは、指定さ`name`れ<xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>たパラメーターを使用してデータソースビューの新しいインスタンスを返すために、メソッドによって呼び出されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.%23ctor%2A> `Table` <xref:System.Web.UI.WebControls.SqlDataSourceView> <xref:System.Web.UI.WebControls.SqlDataSourceView> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、一度に1つのオブジェクトにのみ関連付けられ、常にビューに名前を付けます。ただし、この名前付け制限はではなく、コントロールによって課されます。 <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.SqlDataSource.GetView%2A>メソッドをオーバーライドして、異なる名前付け規則を持つビューをサポートすることができます。  
  
 パラメーターによって渡される<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>オブジェクトは、プロパティやプロパティなどのパラメーターオブジェクトにアクセスするために、データソースビューによって使用されます。 <xref:System.Web.HttpContext> `context`  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="null" /> と評価されたときに、データ取得操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="true" /> と評価されたときに、データ取得操作をキャンセルする場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      </Docs>
    </Member>
    <Member MemberName="CanDelete">
      <MemberSignature Language="C#" Value="public override bool CanDelete { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanDelete { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanDelete : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanDelete" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで削除操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.CanDelete%2A>が設定`true`され<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>ている場合、プロパティはを返します。 すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、削除操作が失敗することがあります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanInsert">
      <MemberSignature Language="C#" Value="public override bool CanInsert { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanInsert { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanInsert : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanInsert" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで挿入操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.CanInsert%2A>が設定`true`され<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>ている場合、プロパティはを返します。 すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、挿入操作が失敗することがあります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="CanPage">
      <MemberSignature Language="C#" Value="public override bool CanPage { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanPage { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanPage : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データのページングがサポートされているかどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトはページングをサポートしていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.StartRowIndex" />
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.MaximumRows" />
      </Docs>
    </Member>
    <Member MemberName="CanRetrieveTotalRowCount">
      <MemberSignature Language="C#" Value="public override bool CanRetrieveTotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanRetrieveTotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanRetrieveTotalRowCount As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanRetrieveTotalRowCount { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanRetrieveTotalRowCount : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで、一連のデータに加えて行の合計数を取得する操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクト<xref:System.Web.UI.WebControls.SqlDataSourceView>では、行数の取得はサポートされていません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="CanSort">
      <MemberSignature Language="C#" Value="public override bool CanSort { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanSort { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanSort : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで取得データの並べ替え済みのビューがサポートされているかどうかを示す値を取得します。</summary>
        <value>並べ替えがサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `true`現在<xref:System.Web.UI.WebControls.SqlDataSourceView.CanSort%2A> のプロパティが<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値に設定され、プロパティが設定されている場合、プロパティはを返します。<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.DataSourceSelectArguments.SortExpression" />
      </Docs>
    </Member>
    <Member MemberName="CanUpdate">
      <MemberSignature Language="C#" Value="public override bool CanUpdate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CanUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property CanUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CanUpdate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CanUpdate : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトで更新操作がサポートされているかどうかを示す値を取得します。</summary>
        <value>操作がサポートされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate%2A>が設定`true`され<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>ている場合、プロパティはを返します。 すべてのデータプロパティが設定されていないか、正しく設定されていない場合でも、削除操作が失敗することがあります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベース内の行のデータが操作中に変更される場合に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールで更新と削除を実行する方法を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>は、古い値と新しい値のパラメーターが`Update`メソッドに適用されるかどうかを決定します。 たとえば<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> 、プロパティによって指定されたコマンドが、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>列<xref:System.Data.DataSet>と`Number`列`Name`を持つオブジェクトを返し、プロパティが<xref:System.Web.UI.ConflictOptions.OverwriteChanges>値に設定されている場合、に対してパラメーターが作成されます。`Name` 更新`Number`操作の場合は。 `original_Name` `Number` `Name` `original_Number`プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、、、、およびに対してパラメーターが作成されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> (元の値のパラメーターの正確な名前は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>によって異なります)。次に、 <xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトは、 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティで指定されているメソッドに一致するパラメーターがあるかどうかを判断します。  
  
 同時実行制御とは、複数のクライアントが同じデータにアクセスして操作しているときに、ストア内でのデータの読み取りと変更の方法を制御するためにデータストアで使用される手法です。 たとえば、あるクライアントがデータを読み取り、ユーザーに提示し、別のクライアントが同じデータを読み取って別のユーザーに提示する場合などです。 両方のユーザーがデータを更新してデータストレージに送信した場合、両方のクライアントが同じデータに対して異なる値を更新する可能性があるため、予期しない結果が発生する可能性があります。 これは、競合と見なされます。 この<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティを<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定すると、更新操作によって、古い値と新しい値が元のデータソースと比較され、競合が検出され、必要に応じて処理されます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.ConflictOptions" /> 値の 1 つではありません。</exception>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</summary>
        <returns>基になるデータベースから削除された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>メソッドを呼び出し、パラメーター `keys`と`oldValues`パラメーターを渡します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。  
  
- または - 
<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> である。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースからデータを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列を取得または設定します。</summary>
        <value>データを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。  
  
 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 基<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>になるデータベースがストアドプロシージャをサポートしている場合は、SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>の Orders テーブルから注文を削除するテキストを設定する方法を示します。 データは Orders テーブルから取得され、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示されます。 は<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> 、 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>プロパティ**** がに`true`設定されている場合に 削除 ボタンを自動的に表示し、**削除** ボタンがの場合に自動的にコレクションに値を設定し、メソッドを呼び出します。<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>とき. 最後に、この例ではデータを削除するため、削除操作が実行される前にデータベースをディスクにバックアップしようとするイベントハンドラーが追加されています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 削除操作<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>の完了後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 パラメーター名は、プロパティの<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>影響を受ける可能性があります。特に、データバインドコントロールの`DataKeyNames`プロパティを使用して指定されたキーなどの主キーが名前によって識別される場合、または、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定され、の`oldValues`セットが対応するデータメソッドに渡されます。 この場合、書式文字列は`oldValues`コレクション内の各パラメーター名に適用されます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>から注文を削除するテキストを設定する方法を示します。 初期状態では、データは Orders テーブルから取得され<xref:System.Web.UI.WebControls.DropDownList> 、コントロールに表示されます。 などの<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>データバインド<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> <xref:System.Web.UI.WebControls.DropDownList>コントロールを使用する<xref:System.Web.UI.WebControls.DetailsView>場合は、プロパティを明示的に宣言し、メソッドを呼び出す必要があります。 <xref:System.Web.UI.WebControls.GridView>パラメーターを指定し<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 、データソースコントロールに対してメソッドを呼び出します)。 この例<xref:System.Web.UI.WebControls.Button.OnClick%2A>では、イベントはプライベート<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>イベントハンドラーに委任され、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドを明示的に呼び出します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>削除操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>  
  
 イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 したがって、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトによって公開されて<xref:System.Data.Common.DbCommand.Cancel%2A>いる<xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>のプロパティをに設定する`true`ことによって、操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例では、削除操作<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>を実行する前に発生するイベントを処理する方法を示します。 この例では、Northwind データベースからデータを削除<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>するので、削除操作が実行される前にデータベースをディスクにバックアップしようとするハンドラーが追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteDelete">
      <MemberSignature Language="C#" Value="protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteDelete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteDelete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteDelete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteDelete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteDelete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><see cref="T:System.Collections.IDictionary" /> 操作で削除するオブジェクトまたは行のキー値の <see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />。</param>
        <param name="oldValues"><see cref="T:System.Collections.IDictionary" /> プロパティが <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> 値に設定されている場合にだけ評価される行の値を格納している <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" />。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="keys" /> コレクションと <paramref name="oldValues" /> コレクション内の値を使用して、削除操作を実行します。</summary>
        <returns>基になるデータベースから削除された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は、データベースから<xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>データを削除するための継承されたメソッドを実装します。 ページ開発者とデータバインドコントロールの作成者は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete%2A>メソッドを直接呼び出すのではなく、 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>公開されているメソッドを使用します。  
  
 `keys`コレクションに格納されている値が評価され、 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>コレクションに含まれる任意の値とマージされます。 プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、 `oldValues`コレクションに含まれる値は<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティで書式設定され、マージされます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>  
  
 削除操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>される前に、メソッドが呼び出されてイベントが<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleting>発生します。 このイベントを処理して、パラメーターの値を確認したり、削除の前にプリプロセスを実行したりできます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>削除操作を実行するために、オブジェクトは<xref:System.Data.Common.DbCommand> <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>テキストと<xref:System.Data.Common.DbCommand>それに関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>れているプロパティを使用してオブジェクトを構築し、基になるデータベースに対してオブジェクトを実行します。 削除操作が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSourceView.Deleted>が発生します。 このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。  
  
または 
<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</exception>
        <exception cref="T:System.Web.HttpException">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。  
  
- または - 
コントロールのインスタンスは、<see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールであり、<see cref="P:System.Web.UI.WebControls.AccessDataSource.DataFile" /> プロパティに指定されているパスへのアクセスは拒否されます。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanDelete" /> プロパティが <see langword="false" /> である。  
  
- または - 
<see cref="T:System.Web.UI.WebControls.AccessDataSource" /> コントロールのインスタンスを使用する前に、デザイン時の相対パスがデザイナーによって正しく割り当てられていませんでした。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteInsert">
      <MemberSignature Language="C#" Value="protected override int ExecuteInsert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteInsert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteInsert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteInsert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.ExecuteInsert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteInsert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">データベースへの挿入操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用される値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</summary>
        <returns>基になるデータベースに挿入された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は、データベースに<xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>データを挿入するための継承されたメソッドを実装します。 ページ開発者とデータバインドコントロールの作成者は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>メソッドを直接呼び出すのではなく、 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>公開されているメソッドを使用します。  
  
 挿入操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>される前に、メソッドが呼び出されてイベントが<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>発生します。 このイベントを処理して、パラメーターの値を調べたり、挿入前の前処理を実行したりすることができます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>挿入操作を実行するために、オブジェクトは<xref:System.Data.Common.DbCommand> <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>テキストと<xref:System.Data.Common.DbCommand>それに関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>れたプロパティを使用してオブジェクトを構築し、基になるデータベースに対してオブジェクトを実行します。 挿入が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>が発生します。 このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <exception cref="T:System.Web.HttpException">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> である。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteSelect">
      <MemberSignature Language="C#" Value="protected internal override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.Collections.IEnumerable ExecuteSelect(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function ExecuteSelect (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Collections::IEnumerable ^ ExecuteSelect(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.ExecuteSelect : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.ExecuteSelect arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</summary>
        <returns>データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は、データベースから<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>データを取得するための継承されたメソッドを実装します。 ページ開発者とデータバインドコントロールの作成者は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>メソッドを直接呼び出すのではなく、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>公開されているメソッドを使用します。  
  
 データの取得が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>される前に、メソッドが呼び出されてイベントが<xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>発生します。 このイベントを処理して、パラメーターの値を調べたり、データを取得する前に前処理を実行したりできます。  
  
 この操作を実行するため<xref:System.Web.UI.WebControls.SqlDataSourceView>に、オブジェクト<xref:System.Data.Common.DbCommand>は<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストと関連付けられ<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>たを使用してオブジェクトを構築し、基になるデータベースに対して実行します。 操作が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSource.Selected>が発生します。 このイベントを処理して、戻り値、エラーコードを確認し、後処理を実行できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>がに<xref:System.Data.IDataReader> <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 設定<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>されている場合、メソッドはオブジェクトを返します。がに設定されている場合はオブジェクトを返します。 データの<xref:System.Data.IDataReader>読み取りが終了したら、オブジェクトを閉じます。  
  
 がに<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>設定され、キャッシュが有効になっ<xref:System.Web.UI.WebControls.SqlDataSourceView>ている場合、はからデータを取得し、データ操作中にデータをキャッシュに保存します。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> キャッシュは、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティの組み合わせによって指定されたキャッシュの動作に基づいて作成、破棄、または更新されます。  
  
> [!IMPORTANT]
>  Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることを想定していて、データベースのセキュリティ構成によってデータの取得を検証する必要がある場合は、キャッシュを使用しないでください。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>がに設定さ<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>れていて、が指定されている場合は、指定されたと共に評価され、結果として得られるフィルターがデータ取得操作中にデータのリストに適用されます。 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> メソッドに渡される <paramref name="arguments" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。  
  
- または - 
キャッシュは有効ですが、データ ソースの <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> プロパティが <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> に設定されていません。  
  
または 
<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" /> プロパティが設定されていますが、<see cref="P:System.Data.SqlClient.SqlCommand.CommandType" /> が <see cref="F:System.Data.CommandType.StoredProcedure" /> に設定されていません。</exception>
        <exception cref="T:System.InvalidOperationException">データ ソースがデータベース接続を作成できません。  
  
- または -
  
 キャッシュは有効ですが、内部キャッシュとコマンドの種類が一致していません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="ExecuteUpdate">
      <MemberSignature Language="C#" Value="protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 ExecuteUpdate(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ExecuteUpdate (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int ExecuteUpdate(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.ExecuteUpdate : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.ExecuteUpdate (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。 クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <param name="values">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <param name="oldValues">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティがパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</summary>
        <returns>基になるデータベースで更新された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラス<xref:System.Web.UI.WebControls.SqlDataSourceView>は、データベース内<xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>のデータを更新するための継承されたメソッドを実装します。 ページ開発者とデータバインドコントロールの作成者は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A>メソッドを直接呼び出すのではなく、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>公開されているメソッドを使用します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクション`keys` と`values`コレクションに含まれる値は評価され、コレクションに含まれるすべての値とマージされます。 プロパティがに<xref:System.Web.UI.ConflictOptions.CompareAllValues>設定されている場合、 `oldValues`コレクションに含まれる値はで<xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>書式設定され、マージされます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>  
  
 更新操作を実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>する前に、メソッドを呼び出して<xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>イベントを発生させます。 このイベントを処理して、更新前のパラメーターの値を確認し、前処理を実行できます。  
  
 この操作を実行するため<xref:System.Web.UI.WebControls.SqlDataSourceView>に、 <xref:System.Data.Common.DbCommand>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>テキストおよび関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>れているプロパティを使用<xref:System.Data.Common.DbCommand>してオブジェクトを構築し、基になるデータベースに対してオブジェクトを実行します。 操作が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>が発生します。 このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。  
  
または 
<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" /> プロパティが <see cref="F:System.Web.UI.ConflictOptions.CompareAllValues" /> 値に設定され、<paramref name="oldValues" /> パラメーターが渡されていません。</exception>
        <exception cref="T:System.Web.HttpException">現在のユーザーには、データベースにアクセスできる正しいアクセス許可がありません。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> である。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" /> メソッドが呼び出されるときに適用されるフィルター式を取得または設定します。</summary>
        <value><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティに使用される構文は、書式設定文字列形式の構文です。 パラメーターを<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティに含めることができます。 パラメーターの型が文字列または文字の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。  
  
 コレクションには、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティで検出されたプレースホルダーに対して評価されるパラメーターが含まれています。 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>  
  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、モードの`DataSet`場合にのみデータのフィルター処理をサポートします。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティの値は、ビューステートに格納されます。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されるオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
   
  
## Examples  
 次のコード例では、Northwind データベースからデータを取得し、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティを使用してフィルター処理する方法を示します。 コントロールのプロパティは、データを取得するため<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>にメソッドが実行されるたびに適用されます。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource> この例<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>では、プロパティに、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに格納されているフィルターパラメーターのプレースホルダーが含まれています。 この例では、filter パラメーターは、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>コントロールの<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>プロパティにバインドされているオブジェクトです。 コントロールの<xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティがに`true`設定されているため、 <xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.GridView>選択を変更すると、ページがサーバーにポストされ、コントロールが新しいフィルターを使用してデータソースコントロールに再バインドされます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> が <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> モードのときに、<see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> プロパティが設定されました。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクトが<xref:System.Web.UI.WebControls.SqlDataSourceView>フィルター操作を実行する前に、フィルターパラメーター値に対して検証操作を実行するイベントを処理します。<xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering> オブジェクトの<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティをに設定する`true`ことによって、メソッドを取り消すことができます。 <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> イベントは、プロパティが設定さ<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>れている場合にのみ発生します。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されるオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>コレクション内のパラメーターは、 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>プロパティで指定されているすべてのパラメーターに関連付けられています。 で<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>指定されたパラメーターのプレースホルダーは順序に従って評価され、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドが<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>呼び出されると、コレクション内のパラメーターオブジェクトと照合されます。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されるオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
   
  
## Examples  
 次のコード例では、Northwind データベースからデータを取得し、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティを使用してフィルター処理する方法を示します。 コントロールのプロパティは、データを取得するため<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>にメソッドが実行されるたびに適用されます。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource> この例<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>では、プロパティに、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに格納されているフィルターパラメーターのプレースホルダーが含まれています。 また、filter パラメーターは、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>コントロールの<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>プロパティにバインドされるオブジェクトです。 コントロールの<xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティがに`true`設定されているため、 <xref:System.Web.UI.WebControls.DropDownList>選択項目を変更すると、ページによってサーバーに情報<xref:System.Web.UI.WebControls.GridView>がポストバックされ、コントロールがデータソースコントロールに再バインドされます。新しいフィルター。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="override this.Insert : System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values">データベースへの挿入操作の実行に使用する、<see cref="T:System.Collections.IDictionary" /> プロパティのパラメーターの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" /> コレクションで指定した任意のパラメーター、および指定した <paramref name="values" /> コレクション内の値を使用して、挿入操作を実行します。</summary>
        <returns>基になるデータベースに挿入された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>は、 `values`パラメーター <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert%2A>を渡してメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanInsert" /> プロパティが <see langword="false" /> である。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースにデータを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータベースにデータを挿入する方法を示します。 2番目のコード例では、Microsoft SQL Server からデータを取得し、 <xref:System.Web.UI.WebControls.GridView>それをコントロールに表示<xref:System.Web.UI.WebControls.DetailsView>し、コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータベースにデータを挿入する方法を示しています。 テーブル内の現在のデータが<xref:System.Web.UI.WebControls.DropDownList>コントロールに表示されます。 新しいレコードを追加するには、 <xref:System.Web.UI.WebControls.TextBox>コントロールに値を入力し、**[挿入]** ボタンをクリックします。 **[挿入]** ボタンをクリックすると、指定した値がデータベースに挿入<xref:System.Web.UI.WebControls.DropDownList>され、が更新されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 次のコード例では、SQL Server からデータを取得し、それを<xref:System.Web.UI.WebControls.GridView>コントロールに表示し、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
 初期状態では、 <xref:System.Web.UI.WebControls.GridView>コントロールにデータが表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 コントロール<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行がになります。 <xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。 値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> 値です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例では、Microsoft SQL Server からデータを取得し、それを<xref:System.Web.UI.WebControls.GridView>コントロールに表示し、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
 コントロール<xref:System.Web.UI.WebControls.GridView>にはデータのセットが表示さ<xref:System.Web.UI.WebControls.DetailsView>れ、コントロールには特定の行の詳細が表示されます。 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 ストアドプロシージャ名は、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティで設定され、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定することによってストアドプロシージャとして識別されます。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作<xref:System.Web.UI.WebControls.SqlDataSourceView.Inserted>が完了した後で、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server からデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示しています。 この例では、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとしても使用します。  
  
 最初に、データが<xref:System.Web.UI.WebControls.GridView>コントロールに表示され、の選択した行<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.DetailsView>がにも表示されます。 コントロール<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行がになります。 <xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、新しいレコードを挿入するために使用される別のユーザーインターフェイスが表示されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>挿入操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSourceView.Inserting>  
  
 イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 そのため、 <xref:System.Data.Common.DbCommand.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトによって公開されている<xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、データベース操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>のプロパティをに設定する`true`ことによって、データベース操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server からデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示しています。 この例では、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとしても使用します。  
  
 初期状態では、 <xref:System.Web.UI.WebControls.GridView>コントロールにデータが表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 コントロール<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行がになります。 <xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 で<xref:System.Web.UI.WebControls.DetailsView>は、任意<xref:System.Web.UI.WebControls.BoundField>のオブジェクトから正しいパラメーターを推論できます。 <xref:System.Web.UI.WebControls.TemplateField>また、ASP.NET 双方向のデータバインディング構文が使用されている場合は、オブジェクトのパラメーターを指定できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでのパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。 テーブル内の現在のデータが<xref:System.Web.UI.WebControls.DropDownList>コントロールに表示されます。 新しいレコードを追加するには、 <xref:System.Web.UI.WebControls.TextBox>コントロールに値を入力し、**[挿入]** ボタンをクリックします。 **[挿入]** ボタンをクリックすると、指定した値がデータベースに挿入<xref:System.Web.UI.WebControls.DropDownList>され、が更新されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Insert(System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteInsert(System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand" />
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSourceView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主にインフラストラクチャ[!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]によって使用されます。独自に作成したコードから直接使用するためのものではありません。  ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))」を参照してください。  
  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッドによって保存さ<xref:System.Web.UI.WebControls.SqlDataSourceView>れた前回のページ要求から、オブジェクトのビューステート情報を復元します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> メソッドに渡される任意のパラメーター名に適用される書式指定文字列を取得または設定します。</summary>
        <value><see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Delete" /> メソッドまたは <see cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" /> メソッドに渡される任意の <paramref name="oldValues" /> パラメーターの名前に適用される書式指定文字列を表す文字列。 既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 書式指定文字列は主キーにのみ適用されます。たとえば、データバインドコントロール`DataKeyNames`のプロパティによって識別されるものや、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定された削除および更新のシナリオなどがあります。 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>の`oldValues`セットは、対応するデータメソッドに渡されます。 この場合、書式文字列は`oldValues`コレクション内の各パラメーター名に適用されます。 詳細については、「<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString?displayProperty=nameWithType>」を参照してください。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OldValuesParameterFormatString%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      </Docs>
    </Member>
    <Member MemberName="OnDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnDeleted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleted" /> コントロールが削除操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnDeleting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDeleting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDeleting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDeleting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnDeleting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Deleting" /> コントロールが削除操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>操作が発生する前に発生するイベントを処理する方法を示しています。 この例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>からデータを削除するため、削除を実行する前にデータベースをディスクにバックアップするハンドラーが追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnFiltering">
      <MemberSignature Language="C#" Value="protected virtual void OnFiltering (System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFiltering(class System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFiltering (e As SqlDataSourceFilteringEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFiltering(System::Web::UI::WebControls::SqlDataSourceFilteringEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit&#xA;override this.OnFiltering : System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs -&gt; unit" Usage="sqlDataSourceView.OnFiltering e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Filtering" /> コントロールが選択操作の結果をフィルター処理する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnFiltering(System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnInserted (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserted(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserted (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserted(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnInserted : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserted" /> コントロールが挿入操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例では、Microsoft SQL Server からデータを取得し、それを<xref:System.Web.UI.WebControls.GridView>コントロールに表示し、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
 初期状態では、 <xref:System.Web.UI.WebControls.GridView>コントロールにデータが表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 コントロール<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行がになります。 <xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnInserting (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnInserting(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnInserting (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnInserting(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnInserting : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Inserting" /> コントロールが挿入操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例では、Microsoft SQL Server からデータを取得し、それを<xref:System.Web.UI.WebControls.GridView>コントロールに表示し、 <xref:System.Web.UI.WebControls.DetailsView>コントロールを使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示し、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
 初期状態では、 <xref:System.Web.UI.WebControls.GridView>コントロールにデータが表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 コントロール<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行がになります。 <xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベース<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>にデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelected">
      <MemberSignature Language="C#" Value="protected virtual void OnSelected (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelected(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelected (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelected(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnSelected : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelected e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" /> コントロールがデータ取得操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnSelecting">
      <MemberSignature Language="C#" Value="protected virtual void OnSelecting (System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelecting(class System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelecting (e As SqlDataSourceSelectingEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelecting(System::Web::UI::WebControls::SqlDataSourceSelectingEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit&#xA;override this.OnSelecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs -&gt; unit" Usage="sqlDataSourceView.OnSelecting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" /> コントロールがデータ取得操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdated (System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdated(class System.Web.UI.WebControls.SqlDataSourceStatusEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdated (e As SqlDataSourceStatusEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdated(System::Web::UI::WebControls::SqlDataSourceStatusEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit&#xA;override this.OnUpdated : System.Web.UI.WebControls.SqlDataSourceStatusEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" /> コントロールが更新操作を完了した後に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールの ODBC データベースから取得されたデータを表示および更新する方法を示しています。 レコードが正常に更新されると<xref:System.Web.UI.WebControls.SqlDataSource.Updated> 、イベントはイベントハンドラーによって処理され、電子メールメッセージ通知が送信される後処理の手順が実行されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="OnUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnUpdating (System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnUpdating(class System.Web.UI.WebControls.SqlDataSourceCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnUpdating (e As SqlDataSourceCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnUpdating(System::Web::UI::WebControls::SqlDataSourceCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit&#xA;override this.OnUpdating : System.Web.UI.WebControls.SqlDataSourceCommandEventArgs -&gt; unit" Usage="sqlDataSourceView.OnUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" /> コントロールが更新操作を試行する前に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.DropDownList>コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、 <xref:System.Web.UI.WebControls.TextBox>コントロールを使用してレコードを更新する方法を示しています。 この例では、 <xref:System.Data.Common.DbTransaction> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータを更新するときに、オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラス<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />でをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="ParameterPrefix">
      <MemberSignature Language="C#" Value="protected virtual string ParameterPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ParameterPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property ParameterPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ ParameterPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParameterPrefix : string" Usage="System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーター化された SQL クエリ内のパラメーター プレースホルダーのプレフィックスとして使用される文字列を取得します。</summary>
        <value>"@" 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 SQL クエリおよびコマンドは、実行時にクエリにバインドされている値のプレースホルダーが含まれているので、パラメーター化できます。 プロパティによって識別される<xref:System.Web.UI.WebControls.SqlDataSource>コントロールに設定されている ADO.NET プロバイダーに応じて、パラメーターはエイリアスまたは<xref:System.Web.UI.WebControls.ParameterCollection>オブジェクト内での順序によって評価されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>  
  
 <xref:System.Web.UI.WebControls.Parameter.Name%2A> <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> <xref:System.Data.SqlClient?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.ParameterCollection> <xref:System.Web.UI.WebControls.Parameter>が設定されていない場合、またはがに設定されている場合、パラメーターはエイリアスによって評価され、プロパティを使用して、データ中の内の各オブジェクトのプロパティにパラメータープレフィックスが追加されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>取得またはデータ操作の操作です。 <xref:System.Web.UI.WebControls.Parameter.Name%2A> <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>プロパティが<xref:System.Data.OleDb?displayProperty=nameWithType>または<xref:System.Data.Odbc?displayProperty=nameWithType>に設定されている場合、パラメーターは順序によって評価され、プロパティとプロパティは無視されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView>クラスを拡張する場合は、必要に応じ<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>て、プロパティをオーバーライドして`"@"`文字列以外のプレフィックスを指定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaiseUnsupportedCapabilityError">
      <MemberSignature Language="C#" Value="protected internal override void RaiseUnsupportedCapabilityError (System.Web.UI.DataSourceCapabilities capability);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RaiseUnsupportedCapabilityError(valuetype System.Web.UI.DataSourceCapabilities capability) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RaiseUnsupportedCapabilityError (capability As DataSourceCapabilities)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RaiseUnsupportedCapabilityError(System::Web::UI::DataSourceCapabilities capability);" />
      <MemberSignature Language="F#" Value="override this.RaiseUnsupportedCapabilityError : System.Web.UI.DataSourceCapabilities -&gt; unit" Usage="sqlDataSourceView.RaiseUnsupportedCapabilityError capability" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="capability" Type="System.Web.UI.DataSourceCapabilities" />
      </Parameters>
      <Docs>
        <param name="capability">ビューでサポートされている機能と比較される、<see cref="T:System.Web.UI.DataSourceCapabilities" /> のいずれかの値。</param>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" /> 操作に要求される機能と、ビューでサポートされ、<see cref="M:System.Web.UI.DataSourceSelectArguments.RaiseUnsupportedCapabilitiesError(System.Web.UI.DataSourceView)" /> メソッドによって呼び出される機能を比較します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、データバインドコントロールによって要求された各機能 ( <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドに渡される<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトによって表される) を確認し、それらの機能を比較するために、データソースビューによって使用されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.RaiseUnsupportedCapabilityError%2A>データソースビューでサポートされている機能を参照してください。 <xref:System.Web.UI.DataSourceSelectArguments>オブジェクトによって表され、データソースビュー <xref:System.NotSupportedException>でサポートされていない機能については、例外が発生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">データ ソース内で、選択した <paramref name="capability" /> が有効ではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanSort" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanPage" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanRetrieveTotalRowCount" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSourceView.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>は、主にコントロールの開発者によって使用されます。  
  
 ビューステートは、サーバーコントロールのプロパティの値を累積したものです。 これらの値は、 <xref:System.Web.UI.Control.ViewState%2A> <xref:System.Web.UI.StateBag>クラスのインスタンスであるサーバーコントロールのプロパティに自動的に配置されます。 サーバーコントロールの値は、サーバーコントロールのライフサイクルの [状態の保存] ステージの後、文字列オブジェクトに保持されます。 <xref:System.Web.UI.Control.ViewState%2A>  
  
 ビューステートが保存されると、サーバー制御のライフサイクルの状態の保存ステージの後に永続化された文字列オブジェクトが、HTML `Hidden`要素に格納されている変数としてクライアントに返されます。 カスタムサーバーコントロールを作成する場合は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SaveViewState%2A>メソッドをオーバーライドし、サーバーコントロールの`ViewState`プロパティを変更することで、効率を向上させることができます。 詳細については、「 [ASP.NET State Management の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="override this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSourceView.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</summary>
        <returns>データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>は、 `selectArgs`パラメーター <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A>を渡してメソッドを呼び出します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティが<xref:System.Data.IDataReader>値に<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect%2A> 設定されている場合、またはプロパティが値に設定されている場合は、メソッドがオブジェクト<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>を返します。 データの<xref:System.Data.IDataReader>読み取りが終了したら、オブジェクトを閉じます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドに渡される <paramref name="selectArgs" /> は、データを取得するときに、取得したデータに対するページングまたは並べ替えを有効にするには、データ ソースで追加の作業が必要であることを指定しますが、データ ソース コントロールは、要求された機能をサポートしていません。</exception>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースからデータを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
> [!IMPORTANT]
>  ストアドプロシージャを使用する方が、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティの SQL ステートメントよりも安全です。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを基本的な SQL クエリに設定し、Microsoft SQL Server データベースからデータを取得して、 <xref:System.Web.UI.WebControls.DropDownList>コントロールに表示する方法を示します。 2番目のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL Server データベースからデータを取得してに表示<xref:System.Web.UI.WebControls.DropDownList>するストアドプロシージャの名前にテキストを設定する方法を示します。  
  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを基本的な SQL クエリに設定し、SQL Server データベースからデータを取得して、 <xref:System.Web.UI.WebControls.DropDownList>コントロールに表示する方法を示します。 およびコントロールは、<xref:System.Web.UI.WebControls.DropDownList>で選択したユーザーのアドレスを更新するための単純なインターフェイスとして提供されます。 <xref:System.Web.UI.WebControls.TextBox> <xref:System.Web.UI.WebControls.Button>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストをストアドプロシージャの名前に設定し、SQL Server データベースからデータを取得して、 <xref:System.Web.UI.WebControls.DropDownList>コントロールに表示する方法を示します。 データ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL クエリまたはストアドプロシージャの名前を指定できます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティのテキストが SQL クエリまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>では、テキストをストアドプロシージャの名前に設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>し、プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定して、Microsoft SQL Server データベースからデータを取得し、それ<xref:System.Web.UI.WebControls.DropDownList>をに表示する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ取得操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ取得<xref:System.Web.UI.WebControls.SqlDataSourceView.Selected>操作の完了後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ取得操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーション固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールで<xref:System.Web.UI.WebControls.SqlDataSource>データ取得を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSourceView.Selecting>運用.  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Select" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでのパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティを SQL クエリに設定することによって Microsoft SQL Server の Northwind データベースからデータを取得する方法を示しています。 SQL クエリがパラメーター化され、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティのプレースホルダーが<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクションに追加<xref:System.Web.UI.WebControls.ControlParameter>されたオブジェクトと照合されます。 このように、 <xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.ControlParameter>がバインドされているコントロールは、 <xref:System.Web.UI.WebControls.ListBox>コントロールに表示される内容のフィルターとして機能します。  
  
> [!NOTE]
>  このパラメーターは WHERE 句で使用されるため、このコード例<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>でのプロパティの使用は、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>とプロパティの両方を<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>使用するのと機能的には同じです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を取得または設定します。</summary>
        <value>ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティに含まれる SQL コマンドがストアドプロシージャの名前である場合にのみ評価されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> この場合、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティが設定されていると、ストアドプロシージャの結果の並べ替えに使用されるパラメーターの名前が格納されます。  
  
 プロパティが設定されている場合は、プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>の前に付加されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの説明については、<see cref="P:System.Web.UI.IStateManager.IsTrackingViewState" /> のトピックを参照してください。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 このメソッドは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>インスタンスが<xref:System.Web.UI.IStateManager>インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.IStateManager.IsTrackingViewState" />
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> の状態を表すオブジェクト。</param>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.LoadViewState(System.Object)" />」をご覧ください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 このメソッドは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>インスタンスが<xref:System.Web.UI.IStateManager>インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの詳細については、「<see cref="M:System.Web.UI.IStateManager.SaveViewState" />」をご覧ください。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> ビューステートへの変更を格納するオブジェクト。このオブジェクトに関連付けられたビューステートがない場合は、<see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 このメソッドは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>インスタンスが<xref:System.Web.UI.IStateManager>インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このメンバーの説明については、<see cref="M:System.Web.UI.IStateManager.TrackViewState" /> のトピックを参照してください。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 このメソッドは、 <xref:System.Web.UI.WebControls.SqlDataSourceView>インスタンスが<xref:System.Web.UI.IStateManager>インターフェイスにキャストされている場合にのみ使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IStateManager" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSourceView.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトがそのビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="override this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="sqlDataSourceView.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する主キーの <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。 クエリに関連付けられているキーがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <param name="values">データベース更新操作を実行するために、<see cref="T:System.Collections.IDictionary" /> プロパティで使用する値の <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <param name="oldValues">データベース内の元の値を表す <see cref="T:System.Collections.IDictionary" />。 クエリに関連付けられているパラメーターがないか、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> がパラメーター化された SQL クエリでない場合は、<see langword="null" /> を渡します。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> SQL 文字列、<see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" /> コレクション内の任意のパラメーター、および指定した <paramref name="keys" />、<paramref name="values" />、<paramref name="oldValues" /> の各コレクション内の値を使用して、更新操作を実行します。</summary>
        <returns>基になるデータベースで更新された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>は、、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate%2A> `keys` 、および`oldValues`の各パラメーターを渡して、メソッドを呼び出します。 `values` 詳細については、「<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand?displayProperty=nameWithType>」を参照してください。  
  
   
  
## Examples  
 次のコード例は、コントロールを使用<xref:System.Web.UI.WebControls.SqlDataSource>して<xref:System.Web.UI.WebControls.DropDownList>コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示しています。 パラメーター化された SQL ステートメントを使用して<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティを設定し、2つのパラメーターをコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>追加します。 **[送信]** ボタンをクリック<xref:System.Web.UI.WebControls.Button.OnClick%2A>すると、イベントが処理され、メソッドが<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.CanUpdate" /> プロパティが <see langword="false" /> である。</exception>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベース内のデータを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、コントロールを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>使用して<xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.GridView> 、コントロールのプロパティを設定し、Microsoft SQL Server データベースのデータを更新する方法を示します。 2番目のコード例では、 <xref:System.Web.UI.WebControls.GridView>コントロールを使用して ODBC データベースのデータを更新する方法を示します。  
  
 次のコード例では、コントロールを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>使用して<xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.GridView> 、コントロールのプロパティを設定し、SQL Server データベースのデータを更新する方法を示します。 コントロール<xref:System.Web.UI.WebControls.GridView>は自動的に<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションを設定し、 <xref:System.Web.UI.WebControls.BoundField>オブジェクトからパラメーターを推論し、編集<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>可能<xref:System.Web.UI.WebControls.GridView>なコントロールの**Update**リンクがの場合は、メソッドを呼び出します。オフ. また、この例では、レコードが更新された後に、電子メールメッセージ通知が送信されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 次のコード例は、前のコード例と機能的には同じですが、 <xref:System.Web.UI.WebControls.GridView>コントロールを使用して ODBC データベースのデータを更新する方法を示しています。 プロパティは ADO.NET provider for odbc <xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>に設定され、プロパティは odbc データソース名 (DSN) の名前に設定されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値の 1 つではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更新操作<xref:System.Web.UI.WebControls.SqlDataSourceView.Updated>が完了した後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールの ODBC データベースから取得されたデータを表示および更新する方法を示しています。 レコードが正常に更新されると<xref:System.Web.UI.WebControls.SqlDataSource.Updated> 、イベントはイベントハンドラーによって処理され、電子メールメッセージ通知が送信される後処理の手順が実行されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列内のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 パラメーター名は、プロパティの<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>影響を受ける可能性があります。特に、 `DataKeyNames`プロパティを使用して指定されたキーなどの主キーを識別する場合、または<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 、プロパティが値、およびの`oldValues`セットが対応するデータメソッドに渡されます。 <xref:System.Web.UI.ConflictOptions.CompareAllValues> この場合、書式文字列は`oldValues`コレクション内の各パラメーター名に適用されます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでのパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、コントロールを使用<xref:System.Web.UI.WebControls.SqlDataSource>して<xref:System.Web.UI.WebControls.DropDownList>コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示しています。 パラメーター化された SQL ステートメントを使用して<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティが設定され、コレクションに2つのパラメーターが追加<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>されます。 **[送信]** ボタンをクリック<xref:System.Web.UI.WebControls.Button.OnClick%2A>すると、イベントが処理され、メソッドが<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSourceView.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>更新操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSourceView.Updating>  
  
 イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 したがって、 <xref:System.Data.Common.DbCommand.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトによって公開されている<xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>のプロパティをに設定する`true`ことによって、データベース操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.DropDownList>コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、 <xref:System.Web.UI.WebControls.TextBox>コントロールを使用してレコードを更新する方法を示しています。 この例では、 <xref:System.Data.Common.DbTransaction> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータを更新するときに、オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSourceView.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="Overload:System.Web.UI.WebControls.SqlDataSourceView.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>
