<Type Name="Parameter" FullName="System.Web.UI.WebControls.Parameter">
  <Metadata><Meta Name="ms.openlocfilehash" Value="859d495f42546840bfaf0276f81b711f24fae82c" /><Meta Name="ms.sourcegitcommit" Value="9e06b87bcfa4347dbbaaa4b3cc36b43b93b5badb" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/20/2018" /><Meta Name="ms.locfileid" Value="52244397" /></Metadata><TypeSignature Language="C#" Value="public class Parameter : ICloneable, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Parameter extends System.Object implements class System.ICloneable, class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="VB.NET" Value="Public Class Parameter&#xA;Implements ICloneable, IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Parameter : ICloneable, System::Web::UI::IStateManager" />
  <TypeSignature Language="F#" Value="type Parameter = class&#xA;    interface ICloneable&#xA;    interface IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.DefaultProperty("DefaultValue")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アプリケーション変数、ユーザー ID とユーザー選択、および他のデータにバインドするためにデータ ソース コントロールで使用する機構を提供します。 ASP.NET のすべてのパラメーター型の基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter>クラスは、パラメーター化 SQL クエリ、フィルター式では、パラメーターを表してまたはビジネス オブジェクトのメソッド呼び出しのことを ASP.NET データ ソース コントロールを使用して、選択、フィルター処理、またはデータを変更します。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、<xref:System.Web.UI.WebControls.ParameterCollection> オブジェクトに含まれています。 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、任意の方法は、データと対話するデータ ソース コントロールで使用されてそれらが表す変数の値をバインドする、実行時に評価されます。  
  
 派生するクラスを使用して、<xref:System.Web.UI.WebControls.Parameter>データ ソースおよびデータの Web ベース アプリケーションを構築するデータ バインド コントロールを使用します。 これらのパラメーター クラスは、特定の種類の Web アプリケーションでは、SQL クエリ文字列やビジネス オブジェクト メソッドのパラメーターのプレース ホルダーの値をバインドするデータ ソース コントロールによって使用されます。 次の表では、ASP.NET に含まれているパラメーターの型を示します。  
  
|||  
|-|-|  
|<xref:System.Web.UI.WebControls.ControlParameter>|Web サーバー コントロールのパブリック プロパティをバインドします。|  
|<xref:System.Web.UI.WebControls.FormParameter>|フォーム フィールドにバインドします。|  
|<xref:System.Web.UI.WebControls.SessionParameter>|セッション状態フィールドにバインドします。|  
|<xref:System.Web.UI.WebControls.RouteParameter>|ルートの URL パラメーターをバインドします。|  
|<xref:System.Web.UI.WebControls.CookieParameter>|Cookie フィールドにバインドします。|  
|<xref:System.Web.UI.WebControls.QueryStringParameter>|クエリ文字列パラメーターをバインドします。|  
|<xref:System.Web.UI.WebControls.ProfileParameter>|プロファイル フィールドにバインドします。|  
  
 拡張基本<xref:System.Web.UI.WebControls.Parameter>独自のカスタム パラメーター型を実装するクラスします。  
  
 <xref:System.Web.UI.WebControls.Parameter> オブジェクトが非常に単純な: がある、<xref:System.Web.UI.WebControls.Parameter.Name%2A>と<xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティは宣言によって表されることができ、複数の HTTP 要求の状態を追跡できます。 すべてのパラメーターのサポート、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティの値にパラメーターがバインドされているが、値として評価される場合、`null`実行時にします。  
  
 コレクションを使用するときに<xref:System.Web.UI.WebControls.Parameter>コレクション内の順序が重要で、データ ソース コントロールにオブジェクトします。 パラメーターの使用方法の詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)と[ObjectDataSource コントロールを使用してパラメーター](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)します。  
  
   
  
## Examples  
 次の例では、選択した値を使用する方法を示しています、 <xref:System.Web.UI.WebControls.DropDownList> 、W でコントロール`here`SQL クエリの句。 この例では、<xref:System.Web.UI.WebControls.ControlParameter>から派生したクラス、<xref:System.Web.UI.WebControls.ControlParameter>クラス。  
  
 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>要素は、という名前のパラメーターでクエリを定義します。"@Title"ここから値`DropDownList1`移動する必要があります。 <xref:System.Web.UI.WebControls.ControlParameter>要素を指定する、"@Title"プレース ホルダーの値で置き換えられます、<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>のプロパティ、`DropDownList1`コントロール。 <xref:System.Web.UI.WebControls.ControlParameter>要素に追加されます、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>のコレクション、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 次の例はその前に似ていますが、マークアップではなくコードを使用します。 ページが初めて読み込まれる、<xref:System.Web.UI.WebControls.DropDownList>コントロールが選択されている値を持たない、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.Parameter>オブジェクトを使用します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx#1)]  
  
 次のコードでは、前の例では、ページの分離コード クラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/CS/param1acs.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_3#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_3/VB/param1avb.aspx.vb#4)]  
  
 次のコード例を拡張する方法を示します、<xref:System.Web.UI.WebControls.Parameter>データ ソース コントロールとデータ バインディングのシナリオでは、その他のコントロールで使用できる新しいパラメーターの型を作成するクラス。 データ ソース コントロールが使用できる、 `StaticParameter` Web フォーム ページで、文字列では通常、任意のオブジェクトの値にバインドするパラメーターが宣言されています。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#1)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.FormParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.RouteParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ParameterCollection" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100)">データ ソース コントロールでパラメーターの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しい既定のインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Parameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.Parameter.%23ctor>コンス トラクターは、すべてのプロパティの既定値で初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティに初期化されます<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティに初期化されます<xref:System.TypeCode.Object?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティに初期化されます<xref:System.Data.ParameterDirection.Input>、および<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティに初期化されます`null`.  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter name" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <summary>名前を指定して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Parameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29>コンス トラクターが初期化されると、指定した`name`やその他のプロパティの既定値。 <xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティに初期化されます<xref:System.TypeCode.Object?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティに初期化されます<xref:System.Data.ParameterDirection.Input>、および<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティに初期化されます`null`します。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%29>を拡張するクラスのコンス トラクター、<xref:System.Web.UI.WebControls.Parameter>クラスを初期化するために、<xref:System.Web.UI.WebControls.Parameter.Name%2A>インスタンスのプロパティ。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected Parameter (System.Web.UI.WebControls.Parameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.Parameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As Parameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; Parameter(System::Web::UI::WebControls::Parameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : System.Web.UI.WebControls.Parameter -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.Parameter" />
      </Parameters>
      <Docs>
        <param name="original">現在のインスタンスの初期化の基になる <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンス。</param>
        <summary>指定した元のインスタンスの値を使用して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29>コンス トラクターは、`protected`のクローンを作成するために使用するコピー コンス トラクター、<xref:System.Web.UI.WebControls.Parameter>インスタンス。 値、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>、 <xref:System.Web.UI.WebControls.Parameter.Type%2A>、 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>、および<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>プロパティはすべての新しいインスタンスに転送します。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29>を拡張するクラスのコンス トラクター、<xref:System.Web.UI.WebControls.Parameter>クラスの動作を複製する正しいオブジェクトを実装するクラス。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="dbType">パラメーターのデータベース型。</param>
        <summary>指定した名前とデータベース型を使用して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Parameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.Data.DbType%29>コンス トラクターが初期化されて、指定した`name`と`dbType`パラメーター、およびその他のプロパティの既定の値。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティに初期化されます<xref:System.Data.ParameterDirection.Input>、および<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティに初期化されます`null`します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">プロパティの型を表す <see cref="T:System.TypeCode" />。</param>
        <summary>名前と型を指定して、<see cref="T:System.Web.UI.WebControls.Parameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Parameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29>コンス トラクターが初期化されると、指定した`name`と`type`パラメーター、およびその他のプロパティの既定値。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティに初期化されます<xref:System.Data.ParameterDirection.Input>、および<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティに初期化されます`null`します。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%29>を拡張するクラスのコンス トラクター、<xref:System.Web.UI.WebControls.Parameter>クラスを初期化するために、<xref:System.Web.UI.WebControls.Parameter.Name%2A>と<xref:System.Web.UI.WebControls.Parameter.Type%2A>インスタンスのプロパティ。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#3)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, System.Data.DbType dbType, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, System::Data::DbType dbType, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, dbType, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name"><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの名前。</param>
        <param name="dbType"><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスのデータベース型。</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" /> の呼び出し時に、<see cref="T:System.Web.UI.WebControls.Parameter" /> がまだ初期化されていない値にバインドされている場合は、<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> インスタンスの既定値。</param>
        <summary>指定した名前、指定したデータベース型、およびその <see cref="T:System.Web.UI.WebControls.Parameter" /> プロパティに指定した値を使用して、<see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>のプロパティ、<xref:System.Web.UI.WebControls.Parameter>にインスタンスを初期化<xref:System.Data.ParameterDirection.Input>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Parameter (string name, TypeCode type, string defaultValue);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string defaultValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, defaultValue As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Parameter(System::String ^ name, TypeCode type, System::String ^ defaultValue);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.Parameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.Parameter" Usage="new System.Web.UI.WebControls.Parameter (name, type, defaultValue)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="defaultValue" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">プロパティの型を表す <see cref="T:System.TypeCode" />。</param>
        <param name="defaultValue"><see cref="T:System.Web.UI.WebControls.Parameter" /> の呼び出し時に、<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> がまだ初期化されていない値にバインドされている場合に、パラメーターの既定値として使用する文字列。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> プロパティに指定した名前、型、文字列を使用して、<see cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.Parameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29>コンス トラクターが初期化されて、指定した`name`パラメーターと`type`パラメーター、割り当てられていると、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティの値。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A> プロパティは <xref:System.Data.ParameterDirection.Input> に初期化されます。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.String%2CSystem.TypeCode%2CSystem.String%29>コンス トラクターにパラメーター オブジェクトの更新プログラムを追加する、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>のコレクション、<xref:System.Web.UI.WebControls.AccessDataSource>コントロールを呼び出す前に、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッド。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; System.Web.UI.WebControls.Parameter&#xA;override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="parameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの複製を返します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> とまったく同じインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29>の新しいインスタンスを初期化するために、コピー コンス トラクター、<xref:System.Web.UI.WebControls.Parameter>現在のインスタンスの値を持つクラス。  
  
 拡張する場合、<xref:System.Web.UI.WebControls.Parameter>オーバーライドするクラス、<xref:System.Web.UI.WebControls.Parameter.Clone%2A>メソッドを派生クラスの新しいインスタンスをコピーする必要がある任意の状態が含まれます。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29>を拡張するクラスのコンス トラクター、<xref:System.Web.UI.WebControls.Parameter>クラスの動作を複製する正しいオブジェクトを実装するクラス。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラス。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#4)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#4)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="ConvertDbTypeToTypeCode">
      <MemberSignature Language="C#" Value="public static TypeCode ConvertDbTypeToTypeCode (System.Data.DbType dbType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.TypeCode ConvertDbTypeToTypeCode(valuetype System.Data.DbType dbType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static TypeCode ConvertDbTypeToTypeCode(System::Data::DbType dbType);" />
      <MemberSignature Language="F#" Value="static member ConvertDbTypeToTypeCode : System.Data.DbType -&gt; TypeCode" Usage="System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode dbType" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dbType" Type="System.Data.DbType" />
      </Parameters>
      <Docs>
        <param name="dbType">等価な <see cref="T:System.Data.DbType" /> 値に変換する <see cref="T:System.TypeCode" /> 値。</param>
        <summary><see cref="T:System.Data.DbType" /> 値を等価な <see cref="T:System.TypeCode" /> 値に変換します。</summary>
        <returns>指定した <see cref="T:System.TypeCode" /> 値と等価な <see cref="T:System.Data.DbType" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが戻る、<xref:System.TypeCode.Object>インスタンスに相当するない場合、<xref:System.Data.DbType>値が見つかった。 データベースの種類に相当するものを含める<xref:System.Data.DbType.Guid>、 <xref:System.Data.DbType.Binary>、および<xref:System.Data.DbType.DateTimeOffset>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのバインド先の値が <see cref="F:System.String.Empty" /> の場合に、その値を <see langword="null" /> に変換する必要があるかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> のバインド先の値が <see cref="F:System.String.Empty" /> の場合に、その値を <see langword="true" /> に変換する必要がある場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>パラメーターのプロパティが変更された、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConvertTypeCodeToDbType">
      <MemberSignature Language="C#" Value="public static System.Data.DbType ConvertTypeCodeToDbType (TypeCode typeCode);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig valuetype System.Data.DbType ConvertTypeCodeToDbType(valuetype System.TypeCode typeCode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::Data::DbType ConvertTypeCodeToDbType(TypeCode typeCode);" />
      <MemberSignature Language="F#" Value="static member ConvertTypeCodeToDbType : TypeCode -&gt; System.Data.DbType" Usage="System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType typeCode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="typeCode" Type="System.TypeCode" />
      </Parameters>
      <Docs>
        <param name="typeCode">等価な <see cref="T:System.TypeCode" /> 値に変換する <see cref="T:System.Data.DbType" /> 値。</param>
        <summary><see cref="T:System.TypeCode" /> 値を等価な <see cref="T:System.Data.DbType" /> 値に変換します。</summary>
        <returns>指定した <see cref="T:System.Data.DbType" /> 値と等価な <see cref="T:System.TypeCode" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドが戻る、<xref:System.Data.DbType.Object>インスタンスと同じデータが見つからない場合。 同等のデータベースの種類には種類<xref:System.TypeCode.DBNull>と<xref:System.TypeCode.Empty>します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DbType">
      <MemberSignature Language="C#" Value="public System.Data.DbType DbType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.DbType DbType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DbType" />
      <MemberSignature Language="VB.NET" Value="Public Property DbType As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::DbType DbType { System::Data::DbType get(); void set(System::Data::DbType value); };" />
      <MemberSignature Language="F#" Value="member this.DbType : System.Data.DbType with get, set" Usage="System.Web.UI.WebControls.Parameter.DbType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのデータベース型を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスのデータベース型。 既定値は <see cref="F:System.Data.DbType.Object" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web アプリケーションと基になるコードまたはデータベース テーブルの値の間で値が正しく変換できるように、厳密に型指定のパラメーターを作成するデータベースの種類を使用できます。  
  
 設定して、パラメーターのデータベースの種類が変更されたかどうか、<xref:System.Web.UI.WebControls.Parameter.DbType%2A>プロパティ、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">このプロパティを <see cref="T:System.Data.DbType" /> 列挙値にない値に設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="DefaultValue">
      <MemberSignature Language="C#" Value="public string DefaultValue { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultValue { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultValue : string with get, set" Usage="System.Web.UI.WebControls.Parameter.DefaultValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの既定値を指定します。<see cref="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドの呼び出し時に、パラメーターはこの値にバインドされ、初期化前の状態に戻されます。</summary>
        <value>バインド先の値を解決できない場合や、初期化前の状態に戻す場合に、<see cref="T:System.Web.UI.WebControls.Parameter" /> の既定値として使用する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティは、パラメーターの値にバインドしますが、値のシナリオで使用`null`または解決できない場合に、<xref:System.Web.UI.WebControls.Parameter>オブジェクトを評価します。  
  
 場合、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>パラメーターのプロパティが変更された、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例を使用して 1 つのデータ レコードを取得する方法を示します、<xref:System.Web.UI.WebControls.ObjectDataSource>制御し、表示、<xref:System.Web.UI.WebControls.DetailsView>コントロール。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが呼び出すことによって、特定の従業員のレコードを取得、`GetEmployee`のメソッド、`EmployeeLogic`クラス。 `GetEmployee`メソッドには、従業員の ID パラメーターが必要です。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロール、<xref:System.Web.UI.WebControls.QueryStringParameter>オブジェクトにその<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>に ID を渡すコレクション、`GetEmployee`この例のメソッド。  
  
 実装例を表示する、`EmployeeLogic`クラスおよび`GetEmployee`メソッドを参照してください、<xref:System.Web.UI.WebControls.ObjectDataSource>クラスの概要。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Direction">
      <MemberSignature Language="C#" Value="public System.Data.ParameterDirection Direction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Data.ParameterDirection Direction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Direction" />
      <MemberSignature Language="VB.NET" Value="Public Property Direction As ParameterDirection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::ParameterDirection Direction { System::Data::ParameterDirection get(); void set(System::Data::ParameterDirection value); };" />
      <MemberSignature Language="F#" Value="member this.Direction : System.Data.ParameterDirection with get, set" Usage="System.Web.UI.WebControls.Parameter.Direction" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Data.ParameterDirection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトを使用して値をコントロールにバインドするかどうか、またはそのコントロールを使用して値を変更できるかどうかを示します。</summary>
        <value><see cref="T:System.Data.ParameterDirection" /> 値のいずれか。 既定では、<see cref="P:System.Web.UI.WebControls.Parameter.Direction" /> は <see cref="F:System.Data.ParameterDirection.Input" /> に設定されています。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティは現在使用されていないが、<xref:System.Web.UI.WebControls.Parameter>クラスし、将来使用するために予約されています。  
  
 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティ値間のデータ フローの方向を記述しますが、<xref:System.Web.UI.WebControls.Parameter>インスタンスに連結されて、<xref:System.Web.UI.WebControls.Parameter>オブジェクト自体。 既定値、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティ、 <xref:System.Data.ParameterDirection.Input>、場所のデータ フローは常に 1 つの方向に最も一般的なシナリオについて説明します。 から値を、<xref:System.Web.UI.WebControls.Parameter>オブジェクトにバインドする、<xref:System.Web.UI.WebControls.Parameter>オブジェクト。 によって、基になる値に加えられた変更が反映されます、<xref:System.Web.UI.WebControls.Parameter>オブジェクトで、かつへの変更、<xref:System.Web.UI.WebControls.Parameter>オブジェクトは、基になるデータでは反映されません。 設定することができます、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティを<xref:System.Data.ParameterDirection.InputOutput>または<xref:System.Data.ParameterDirection.Output>、output パラメーターを使用する場合または<xref:System.Data.ParameterDirection.ReturnValue>ストアド プロシージャからの戻り値を使用する場合。  
  
 場合、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>パラメーターのプロパティが変更された、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>と<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティの<xref:System.Web.UI.WebControls.Parameter>オブジェクトを出力パラメーターとストアド プロシージャの戻り値パラメーターとして使用します。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>クラスの概要。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal virtual object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="abstract member Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj&#xA;override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="parameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">要求の現在の <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">パラメーターのバインド先の <see cref="T:System.Web.UI.Control" />。 パラメーターがコントロールにバインドされていない場合、<paramref name="control" /> パラメーターは無視されます。</param>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの値を更新して返します。</summary>
        <returns>パラメーターの更新された現在の値を表す <see langword="object" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定の実装、<xref:System.Web.UI.WebControls.Parameter.Evaluate%2A>メソッドが返す`null`常にします。 派生するクラス、<xref:System.Web.UI.WebControls.Parameter>クラスのオーバーライド、<xref:System.Web.UI.WebControls.Parameter.Evaluate%2A>更新されたパラメーター値を返すメソッド。 たとえば、<xref:System.Web.UI.WebControls.ControlParameter>オブジェクトは、バインドされているコントロールの値を返します中に、<xref:System.Web.UI.WebControls.QueryStringParameter>オブジェクトから現在の名前/値ペアの取得、<xref:System.Web.HttpRequest>オブジェクト。  
  
   
  
## Examples  
 次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.WebControls.Parameter.Evaluate%2A>から派生したクラスで、適切な値を返すメソッドを<xref:System.Web.UI.WebControls.Parameter>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#6)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetDatabaseType">
      <MemberSignature Language="C#" Value="public System.Data.DbType GetDatabaseType ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Data.DbType GetDatabaseType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.GetDatabaseType" />
      <MemberSignature Language="VB.NET" Value="Public Function GetDatabaseType () As DbType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Data::DbType GetDatabaseType();" />
      <MemberSignature Language="F#" Value="member this.GetDatabaseType : unit -&gt; System.Data.DbType" Usage="parameter.GetDatabaseType " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.DbType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Data.DbType" /> インスタンスの CLR 型と等価な <see cref="T:System.Web.UI.WebControls.Parameter" /> 値を取得します。</summary>
        <returns>現在の <see cref="T:System.Data.DbType" /> インスタンスの CLR 型と等価な <see cref="T:System.Web.UI.WebControls.Parameter" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.DbType%2A>プロパティがする必要があります既に設定されていない、またはに設定する必要があります<xref:System.Data.DbType.Object>します。 このメソッドは CLR 型が設定されている場合にのみ使用するものが、<xref:System.Web.UI.WebControls.Parameter.DbType%2A>プロパティがないです。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.Parameter.DbType" /> プロパティが <see cref="F:System.Data.DbType.Object" /> 以外の値に既に設定されています。</exception>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsTrackingViewState : bool" Usage="System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected virtual void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="abstract member LoadViewState : obj -&gt; unit&#xA;override this.LoadViewState : obj -&gt; unit" Usage="parameter.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Object" /> の状態を表す <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))します。  
  
 このメソッドのビュー状態情報、<xref:System.Web.UI.WebControls.Parameter>によって保存された前回のページ要求からのオブジェクト、<xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public string Name { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Name" />
      <MemberSignature Language="VB.NET" Value="Public Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Name { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Name : string with get, set" Usage="System.Web.UI.WebControls.Parameter.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの名前を取得または設定します。</summary>
        <value>パラメーターの名前。 既定値は <see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter> オブジェクトは、名前を付ける必要はありません。ただし、データ ソース コントロールは一致するように、パラメーター名を使用可能性があります、 <xref:System.Web.UI.WebControls.Parameter> SQL クエリまたはビジネス メソッド シグネチャのパラメーターを使用してコレクション内のオブジェクト。 たとえば、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールの名前を使用できます、<xref:System.Web.UI.WebControls.Parameter>パラメーター化 SQL クエリ内のプレース ホルダーと一致するオブジェクト。 同様に、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールの名前を使用できます、<xref:System.Web.UI.WebControls.Parameter>オブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション内のプレース ホルダーを一致するように、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティ。 場合によっては、名前は使用されず順序、<xref:System.Web.UI.WebControls.Parameter>オブジェクトに追加されます、<xref:System.Web.UI.WebControls.ParameterCollection>コレクションがより重要です。 詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)と[ObjectDataSource コントロールを使用してパラメーター](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)します。  
  
 パラメーターの名前が変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例に示しますを使用してフィルター選択されたデータを表示する方法、<xref:System.Web.UI.WebControls.ObjectDataSource>中間層ビジネス オブジェクトからデータを取得するコントロールと<xref:System.Web.UI.WebControls.GridView>結果を表示するコントロール。 コード例は、<xref:System.Web.UI.WebControls.TextBox>コントロール、<xref:System.Web.UI.WebControls.GridView>コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource>制御、および送信ボタン。 既定で、<xref:System.Web.UI.WebControls.TextBox>コントロールのいずれかの名前の設定が、`Northwind`従業員。 <xref:System.Web.UI.WebControls.GridView>コントロール内の名前で識別される従業員に関する情報を表示する、<xref:System.Web.UI.WebControls.TextBox>コントロール。 別の従業員のデータを取得するには、内の従業員のフル_ネームを入力、<xref:System.Web.UI.WebControls.TextBox>を制御し、ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティによって取得されたデータをフィルター処理に使用する式を指定します、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティ。 パラメーターのプレース ホルダーを評価に含まれるパラメーターを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクション。 この例では、パラメーターの型が文字列型のスペースを含む可能性があるため、パラメーターのプレース ホルダー、単一引用符で制限されます。 パラメーターの型が数値または日付型の場合は、引用符は必要ありません。  
  
 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>のプロパティ、<xref:System.Web.UI.WebControls.ObjectDataSource>クラス。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="OnParameterChanged">
      <MemberSignature Language="C#" Value="protected void OnParameterChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void OnParameterChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Sub OnParameterChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void OnParameterChanged();" />
      <MemberSignature Language="F#" Value="member this.OnParameterChanged : unit -&gt; unit" Usage="parameter.OnParameterChanged " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ParameterCollection.OnParametersChanged(System.EventArgs)" /> オブジェクトを格納する <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> コレクションの <see cref="T:System.Web.UI.WebControls.Parameter" /> メソッドを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合、<xref:System.Web.UI.WebControls.Parameter>によってオブジェクトが含まれていない、<xref:System.Web.UI.WebControls.ParameterCollection>コレクション、通話、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが影響を与えません。 場合、<xref:System.Web.UI.WebControls.Parameter>オブジェクトに含まれる、<xref:System.Web.UI.WebControls.ParameterCollection>コレクション、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>を発生させます、<xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType>コレクションのイベント。  
  
 場合、<xref:System.Web.UI.WebControls.ParameterCollection>コレクションは、データ ソース コントロールに含まれる、<xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged?displayProperty=nameWithType>イベントが発生、データ ソース コントロールの<xref:System.Web.UI.IDataSource.DataSourceChanged>再バインドするデータ バインド コントロールを引き起こすイベントが、します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を呼び出す方法を示します、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>発生させるメソッドを<xref:System.Web.UI.WebControls.ParameterCollection.ParametersChanged>イベント パラメーターの状態が変更されたとき。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#7)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#7)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.Parameter.OnParameterChanged" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.ParameterCollection.ParametersChanged" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="abstract member SaveViewState : unit -&gt; obj&#xA;override this.SaveViewState : unit -&gt; obj" Usage="parameter.SaveViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Object" /> ビューステートへの変更を格納する <see cref="T:System.Web.UI.WebControls.Parameter" />。 オブジェクトに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ビュー ステートは、サーバー コントロールのプロパティの値の累積です。 これらの値は自動的にサーバー コントロールの配置<xref:System.Web.UI.Control.ViewState%2A>インスタンスでは、プロパティの<xref:System.Web.UI.StateBag>クラス。 このプロパティの値は、保存状態のサーバー コントロールのライフ サイクルの段階後の文字列オブジェクトに保存されます。  
  
 この文字列オブジェクトが、HTML に格納されている変数として、クライアントに返されるビューステートを保存すると、`hidden`要素。 カスタム サーバー コントロールを作成する場合をこのメソッドをオーバーライドし、サーバー コントロールの効率を向上できます<xref:System.Web.UI.WebControls.Parameter.ViewState%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="protected internal virtual void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetDirty();" />
      <MemberSignature Language="F#" Value="abstract member SetDirty : unit -&gt; unit&#xA;override this.SetDirty : unit -&gt; unit" Usage="parameter.SetDirty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトの状態がビューステートで記録されるように、このオブジェクトをマークします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.SetDirty%2A>メソッドがによって直接呼び出される、<xref:System.Web.UI.WebControls.ParameterCollection.SetDirtyObject%2A?displayProperty=nameWithType>メソッドをマークする、<xref:System.Web.UI.WebControls.Parameter>オブジェクトの状態をビューステートに記録します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="Size">
      <MemberSignature Language="C#" Value="public int Size { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Size" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Size" />
      <MemberSignature Language="VB.NET" Value="Public Property Size As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Size { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.Size : int with get, set" Usage="System.Web.UI.WebControls.Parameter.Size" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのサイズを取得または設定します。</summary>
        <value>整数として表されたパラメーターのサイズ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときの値は、<xref:System.Web.UI.WebControls.Parameter.Size%2A>が変更されると、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Type" />
      </Docs>
    </Member>
    <Member MemberName="System.ICloneable.Clone">
      <MemberSignature Language="C#" Value="object ICloneable.Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.ICloneable.Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#ICloneable#Clone" />
      <MemberSignature Language="VB.NET" Value="Function Clone () As Object Implements ICloneable.Clone" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.ICloneable.Clone() = ICloneable::Clone;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.Parameter" /> インスタンスの複製を返します。</summary>
        <returns>現在のオブジェクトのコピーである <see cref="T:System.Web.UI.WebControls.Parameter" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.Clone%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.Parameter.%23ctor%28System.Web.UI.WebControls.Parameter%29>の新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.Parameter>現在のインスタンスの値を持つクラス。  
  
 拡張する場合、<xref:System.Web.UI.WebControls.Parameter>オーバーライドするクラス、<xref:System.Web.UI.WebControls.Parameter.Clone%2A>メソッドを派生クラスの新しいインスタンスをコピーする必要がある任意の状態が含まれます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.#ctor(System.Web.UI.WebControls.Parameter)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Web::UI::IStateManager::IsTrackingViewState { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートへの変更を保存しているかどうかを示す値を取得します。</summary>
        <value>データ ソース ビューがその状態を保存するようにマークされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (savedState As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ savedState) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元する <see cref="T:System.Object" /> の状態を表す <see cref="T:System.Web.UI.WebControls.Parameter" />。</param>
        <summary>データ ソース ビューの、以前保存したビューステートを復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドのビュー状態情報、<xref:System.Web.UI.WebControls.Parameter>によって保存された前回のページ要求からのオブジェクト、<xref:System.Web.UI.WebControls.Parameter.SaveViewState%2A>メソッド。  
  
 このメソッドは、主にコントロールの開発者によって使用されます。 カスタム サーバー コントロールがビューステートを復元する方法を制御するには、このメソッドをオーバーライドすることができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポスト バックされた時間以降に発生した、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートへの変更を保存します。</summary>
        <returns><see cref="T:System.Object" /> オブジェクトのビューステートへの変更を格納する <see cref="T:System.Web.UI.WebControls.Parameter" />。 オブジェクトに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ビュー ステートは、サーバー コントロールのプロパティの値の累積です。 これらの値は自動的にサーバー コントロールの配置<xref:System.Web.UI.Control.ViewState%2A>インスタンスでは、プロパティの<xref:System.Web.UI.StateBag>クラス。 このプロパティの値は、保存状態のサーバー コントロールのライフ サイクルの段階後の文字列オブジェクトに保存されます。  
  
 この文字列オブジェクトが、HTML に格納されている変数として、クライアントに返されるビューステートを保存すると、`hidden`要素。 カスタム サーバー コントロールを作成する場合をこのメソッドをオーバーライドし、サーバー コントロールの効率を向上できます<xref:System.Web.UI.WebControls.Parameter.ViewState%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
        <altmember cref="P:System.Web.UI.WebControls.Parameter.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="P:System.Web.UI.Control.ViewState" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="parameter.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このインスタンスの値を、それと等価の文字列形式に変換します。</summary>
        <returns>このインスタンスの値の文字列形式。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Parameter.ToString%2A>メソッドが返す、<xref:System.Web.UI.WebControls.Parameter.Name%2A>のプロパティ、<xref:System.Web.UI.WebControls.Parameter>オブジェクト。 場合、<xref:System.Web.UI.WebControls.Parameter>オブジェクトは、名前を持たない<xref:System.Web.UI.WebControls.Parameter.ToString%2A>返します<xref:System.String.Empty?displayProperty=nameWithType>します。  
  
   
  
## Examples  
 次のコード例は、のさまざまなプロパティにアクセスする方法を示します、<xref:System.Web.UI.WebControls.Parameter>オブジェクトを含むその<xref:System.Web.UI.WebControls.Parameter.Name%2A>と<xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティ。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/CS/parametertostringcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Parameter.ToString_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter.ToString_1/VB/parametertostringvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void TrackViewState();" />
      <MemberSignature Language="F#" Value="abstract member TrackViewState : unit -&gt; unit&#xA;override this.TrackViewState : unit -&gt; unit" Usage="parameter.TrackViewState " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトがビューステートの変更を追跡するようにします。それにより、変更をコントロールの <see cref="P:System.Web.UI.Control.ViewState" /> オブジェクトに格納して、同じページに対する複数の要求にわたって永続化できます。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Type">
      <MemberSignature Language="C#" Value="public TypeCode Type { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TypeCode Type" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.Type" />
      <MemberSignature Language="VB.NET" Value="Public Property Type As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TypeCode Type { TypeCode get(); void set(TypeCode value); };" />
      <MemberSignature Language="F#" Value="member this.Type : TypeCode with get, set" Usage="System.Web.UI.WebControls.Parameter.Type" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターの型を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> の型。 既定値は <see cref="F:System.TypeCode.Object" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値が正しく、Web アプリケーションと基になるコードの間で変換できるように、厳密に型指定のパラメーターを作成する型を使用できます。  
  
 パラメーターの型が変更された場合、<xref:System.Web.UI.WebControls.Parameter.OnParameterChanged%2A>メソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>と<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティの<xref:System.Web.UI.WebControls.Parameter>オブジェクトを出力パラメーターとストアド プロシージャの戻り値パラメーターとして使用します。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>クラスの概要。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">パラメーターの型が <see cref="T:System.TypeCode" /> 値ではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">パラメーターで SqlDataSource と AccessDataSource コントロールの使用</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">ObjectDataSource コントロールでパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ViewState : System.Web.UI.StateBag" Usage="System.Web.UI.WebControls.Parameter.ViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>同一のページに対する複数の要求にわたって、<see cref="T:System.Web.UI.WebControls.Parameter" /> オブジェクトのビューステートを保存し、復元できるようにする状態情報のディクショナリを取得します。</summary>
        <value><see cref="T:System.Web.UI.StateBag" /> オブジェクトのビューステート情報を格納している <see cref="T:System.Web.UI.WebControls.Parameter" /> のインスタンス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 パラメーターのビュー ステートは、すべてのプロパティ値の累積です。 HTTP 要求間でこれらの値を保持するために、ASP.NET サーバー コントロールがインスタンスでは、このプロパティを使用しての<xref:System.Web.UI.StateBag>クラス、プロパティ値を格納します。 値は変数として、HTML に渡す`hidden`入力要素の後続の要求が処理される場合。 ビュー ステートは、すべてのサーバー コントロールの既定で有効です。  
  
 ディクショナリとその使用方法の詳細については、次を参照してください。[コレクションとデータ構造体](~/docs/standard/collections/index.md)します。  
  
   
  
## Examples  
 次のコード例は、ビュー状態オブジェクトを使用して拡張するクラスにパラメーター オブジェクトの状態を格納する方法を示します、<xref:System.Web.UI.WebControls.Parameter>クラス。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.Parameter>クラスの概要。  
  
 [!code-csharp[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/CS/staticparameter.cs#5)]
 [!code-vb[System.Web.UI.WebControls.Parameter_2#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Parameter_2/VB/staticparameter.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.IsTrackingViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.SaveViewState" />
        <altmember cref="M:System.Web.UI.WebControls.Parameter.TrackViewState" />
      </Docs>
    </Member>
  </Members>
</Type>