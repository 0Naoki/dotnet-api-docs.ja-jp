<Type Name="ButtonField" FullName="System.Web.UI.WebControls.ButtonField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="62976260b8581f986cbd7d719a652a3576a46648" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30599706" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ButtonField : System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ButtonField extends System.Web.UI.WebControls.ButtonFieldBase" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ButtonField" />
  <TypeSignature Language="VB.NET" Value="Public Class ButtonField&#xA;Inherits ButtonFieldBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ButtonField : System::Web::UI::WebControls::ButtonFieldBase" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ButtonFieldBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロール内にボタンとして表示されるフィールドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField>クラスは、データ バインドされたコントロールによって使用 (など<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>) 表示されている各レコードのボタンを表示します。 <xref:System.Web.UI.WebControls.ButtonField>が使用されているデータ バインド コントロールに応じて異なる方法でオブジェクトが表示されます。 たとえば、<xref:System.Web.UI.WebControls.GridView>表示の制御、<xref:System.Web.UI.WebControls.ButtonField>を列としてオブジェクト中に、<xref:System.Web.UI.WebControls.DetailsView>コントロールは行として表示します。  
  
 ボタン フィールドのボタンをクリックするには、親データ バインド コントロールのコマンド イベントを発生させます。 Command イベントのイベント ハンドラーを指定してコマンド ボタンがクリックされたときに実行するカスタム ルーチンを提供できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.GridView>昇給を制御、<xref:System.Web.UI.WebControls.GridView.RowCommand>イベント中に、<xref:System.Web.UI.WebControls.DetailsView>昇給を制御、<xref:System.Web.UI.WebControls.DetailsView.ItemCommand>イベント。  
  
 コマンド イベントを発生させるためのレコードのインデックスを確認するには<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>データ バインド コントロールの command イベントに渡されるイベント引数のプロパティです。 <xref:System.Web.UI.WebControls.ButtonField>クラスを自動的に入力、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>適切なインデックス値を持つプロパティです。  
  
 表示するボタンの種類を指定するには、使用、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>プロパティです。 使用して、リンクまたはコマンド ボタンを表示するときに、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティをボタンに表示するキャプションを指定します。  
  
> [!NOTE]
>  設定した場合、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティ、すべてのボタン、<xref:System.Web.UI.WebControls.ButtonField>同じキャプションを共有します。  
  
 また、バインド、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト データ ソースのフィールドにします。 これにより、異なるキャプションのボタンを表示する、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 指定したフィールドに含まれる値は、ボタンのテキスト キャプションに使用されます。 設定、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>バインドするプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト データ ソースのフィールドにします。  
  
 イメージ ボタンを表示するときに使用して、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>のボタンとして表示するイメージを指定するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。  
  
> [!NOTE]
>  すべてのボタン、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトが、同じイメージを共有します。  
  
 非表示にすることができます、<xref:System.Web.UI.WebControls.ButtonField>を設定してデータ バインド コントロール内のオブジェクト、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>プロパティを`false`です。  
  
 <xref:System.Web.UI.WebControls.ButtonField>オブジェクトでは、そのヘッダー セクションとフッター セクションをカスタマイズすることができます。 ヘッダーまたはフッター セクションで、キャプションを表示するには、設定、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>または<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>プロパティ、それぞれします。 設定して、イメージを表示するテキストを表示する、ヘッダー セクションに、代わりに、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>プロパティです。 ヘッダー セクションを非表示にする、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト、設定、<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>プロパティを`false`です。  
  
> [!NOTE]
>  一部のデータ バインド コントロール (など、<xref:System.Web.UI.WebControls.GridView>コントロール) を表示またはコントロールのすべてのヘッダー セクションだけを非表示にできます。 これらのデータ バインド コントロールをサポートしていない、<xref:System.Web.UI.WebControls.ButtonFieldBase.ShowHeader%2A>個々 のボタン フィールドのプロパティです。 表示または (使用可能な場合) は、ヘッダー セクション全体のデータ バインド コントロールを非表示を使用して、`ShowHeader`コントロールのプロパティです。  
  
 外観をカスタマイズできる、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト (フォントの色や背景色、)、フィールドの各部分のスタイル プロパティを設定します。 次の表は、異なるスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|スタイルの設定|  
|--------------------|----------------------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子 Web サーバー コントロールの<xref:System.Web.UI.WebControls.ButtonField>です。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|フッター セクション、<xref:System.Web.UI.WebControls.ButtonField>です。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|ヘッダー セクション、<xref:System.Web.UI.WebControls.ButtonField>です。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|データ項目を<xref:System.Web.UI.WebControls.ButtonField>です。|  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField>コマンド ボタンの列を表示するオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="E:System.Web.UI.WebControls.GridView.RowCommand" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.ShowHeader" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemCommand" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Rows" />
    <altmember cref="T:System.Web.UI.WebControls.BoundField" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonFieldBase" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonFieldBase.ButtonType" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
    <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ButtonField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ButtonField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ButtonField.%23ctor%2A>の新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.ButtonField>クラスです。 このコンス トラクターは、フィールドを動的に作成されたデータ バインド コントロールに追加する際に通常使用されます。  
  
 追加する、<xref:System.Web.UI.WebControls.ButtonField>データ バインド コントロールを動的にオブジェクトを新規作成<xref:System.Web.UI.WebControls.ButtonField>オブジェクト、そのプロパティを設定し、データ バインド コントロールのフィールド コレクションに追加します。 たとえば、使用している場合、<xref:System.Web.UI.WebControls.GridView>コントロールを追加、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトを<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。  
  
> [!NOTE]
>  追加できますが、フィールドに動的にデータ バインド コントロールにフィールド、静的に宣言されていると、表示するか非表示にします。 すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが縮小します。  
  
   
  
## Examples  
 次のコード例は、M:System.Web.UI.WebControls.ButtonField.#ctor コンス トラクターを使用して追加する方法を示します、<xref:System.Web.UI.WebControls.ButtonField>に動的にオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[ButtonFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldCtor/CS/buttonfieldctorcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldCtor/VB/buttonfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
        <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public virtual string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトのボタンがクリックされたときに実行されるアクションを表す文字列を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> のボタンがクリックされたときに実行されるアクションの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>ように、コマンド名を関連付けるプロパティ`"Add"`または`"Remove"`、ボタンを使用、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 設定することができます、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>コマンド ボタンがクリックされたときに実行するアクションを識別する任意の文字列にプロパティです。 プログラムでイベント ハンドラーでコマンド名を特定し、適切な操作を実行します。  
  
> [!NOTE]
>  すべてのボタン、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトが、同じコマンド名を共有します。  
  
 データ バインド コントロールは特定のコマンド名を認識し自動的に発生してコントロールの適切なイベントを処理します。 次のコマンド名が認識されます。  
  
-   `"Cancel"`  
  
-   `"Delete"`  
  
-   `"Edit"`  
  
-   `"Insert"`  
  
-   `"New"`  
  
-   `"Page"`  
  
-   `"Select"`  
  
-   `"Sort"`  
  
-   `"Update"`  
  
 ページングを呼び出すには、次のように設定します。、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>に`"Page"`と<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>格納されているの<xref:System.Web.UI.WebControls.Button>に制御を`"First"`、 `"Last"`、 `"Prev"`、 `"Next"`、またはページ番号です。 ただし、以降、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>の<xref:System.Web.UI.WebControls.ButtonField>コントロールは、整数の行インデックスでは常に、<xref:System.Web.UI.WebControls.ButtonField>コントロールはページングの呼び出しに適していません。 同様に、設定して並べ替えを呼び出すことができます、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>に`"Sort"`、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを<xref:System.Web.UI.WebControls.ButtonField>コントロールは、常に整数の行インデックス。 このため、<xref:System.Web.UI.WebControls.ButtonField>コントロールは並べ替えの呼び出しに適していません。 コマンド名などのカスタム`"Add"`と`"Remove"`コマンド名を確認して、カスタム アクションを実行するイベントのコードを記述する必要があります。 詳細については、「<xref:System.Web.UI.WebControls.DataControlCommands>」を参照してください。  
  
> [!NOTE]
>  すべてのコマンド名は、すべてのデータ バインド コントロールによって認識されます。 たとえば、`"New"`で認識されない、<xref:System.Web.UI.WebControls.GridView>コントロールと`"Select"`で認識されない、<xref:System.Web.UI.WebControls.DetailsView>コントロール。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField.CommandName%2A>のボタンのコマンド名を指定するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>のオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする対象の <see cref="T:System.Web.UI.WebControls.ButtonField" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>メソッド、現在のプロパティをコピーする<xref:System.Web.UI.WebControls.ButtonFieldBase>-派生オブジェクトを<xref:System.Web.UI.WebControls.DataControlField>によって作成されたオブジェクト、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />メソッドの呼び出し、派生クラスで、<see cref="M:System.Web.UI.WebControls.ButtonField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />オブジェクトのすべてのプロパティがコピーされることを確認する基本クラスのメソッドです。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonFieldBase.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンスを作成して返します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> クラスの新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.CreateField%2A>メソッドで使用されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A> 、空を作成する基本クラスのメソッド<xref:System.Web.UI.WebControls.ButtonField>、現在のプロパティをコピーするオブジェクト<xref:System.Web.UI.WebControls.ButtonField>-派生オブジェクト。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>上書き、<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />派生クラスの新しいインスタンスを返すメソッド。 呼び出す必要はありません、<see cref="M:System.Web.UI.WebControls.ButtonField.CreateField" />基底クラスのメソッドです。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataTextField">
      <MemberSignature Language="C#" Value="public virtual string DataTextField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Button.Text" /> オブジェクトが表示する <see cref="T:System.Web.UI.WebControls.Button" /> コントロールの <see cref="T:System.Web.UI.WebControls.ButtonField" /> プロパティにバインドされている値のデータ フィールド名を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> に連結するフィールドの名前。 既定値は空の文字列 ("") です。<see cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>のプロパティ、<xref:System.Web.UI.WebControls.ButtonField>に設定されているオブジェクト、<xref:System.Web.UI.WebControls.ButtonType.Button>または<xref:System.Web.UI.WebControls.ButtonType.Link>値を使用して、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティをバインドするフィールドの名前を指定する、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 フィールドの値がのボタンのテキストとして表示されます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 必要に応じて、表示されるテキストを書式設定を設定してできます、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティです。  
  
 使用する代わりに、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>バインドするプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトのフィールドに、データ ソースから使用する、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>のボタンのテキストの静的なテキストを表示するプロパティを<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 ときに、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティを使用して、各ボタンは、同じキャプションを共有します。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>と<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティは、両方の設定、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティが優先されます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティを表示するには、どのフィールドを指定する、<xref:System.Web.UI.WebControls.ButtonField>の列、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.Text" />
      </Docs>
    </Member>
    <Member MemberName="DataTextFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataTextFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataTextFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataTextFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataTextFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールドの値の表示形式を指定する文字列を取得または設定します。</summary>
        <value>フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>に表示される値のカスタム表示形式を指定するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 場合、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティが設定されていないと、特別な書式なし、フィールドの値が表示されます。  
  
> [!NOTE]
>  書式指定文字列が適用される場合にのみ、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティを設定します。  
  
 書式指定文字列は、任意のリテラル文字列を指定でき、通常、フィールドの値のプレース ホルダーが含まれます。 たとえば、書式指定文字列で`"Item Value: {0}"`、`{0}`に表示されるときに、プレース ホルダーがフィールドの値に置き換えられます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 書式指定文字列の残りの部分は、リテラル テキストとして表示されます。  
  
> [!NOTE]
>  書式指定文字列にプレース ホルダーが含まれていない場合、データ ソースからのフィールドの値は、最終的な表示テキストには含まれません。  
  
 プレース ホルダー、コロンで区切られ、フォームで、中かっこ内にラップの 2 つの部分から成る { `A` : `Bxx` }。 コロンの前に値 (`A`一般的な例で) パラメーターの 0 から始まるリストのフィールド値のインデックスを指定します。  
  
> [!NOTE]
>  これは、`A`パラメーターは書式指定構文の一部です。 各セルに 1 つだけのフィールドの値があるため、この値は 0 にのみ設定できます。  
  
 コロンとコロンの後の値は省略可能です。 コロンの後に文字 (`B`一般的な例で) 値を表示する形式を指定します。 次の表は、一般的な形式を示します。  
  
|書式指定文字|説明|  
|----------------------|-----------------|  
|`C`|通貨書式の数値の値を表示します。|  
|`D`|10 進数形式で数値を表示します。|  
|`E`|指数表記の指数の数値を表示します。|  
|`F`|固定形式で数値を表示します。|  
|`G`|数値を表示は一般に書式設定します。|  
|`N`|数値書式の数値の値を表示します。|  
|`X`|16 進形式で数値を表示します。|  
  
> [!NOTE]
>  除く`X`、書式指定文字が大文字小文字を区別できません。 `X`形式の文字が指定されている場合、16 進文字を表示します。  
  
 書式指定文字の後の値 (`xx`一般的な例で) の有効桁数または小数点以下桁数を表示する数を指定します。 たとえば、書式指定文字列`"{0:F2}"`小数点以下 2 桁の固定小数点数が表示されます。  
  
 書式指定文字列の詳細については、「[Formatting Types](~/docs/standard/base-types/formatting-types.md)」(型の書式設定) を参照してください。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティ フィールドの値のカスタムの表示形式を指定します。  
  
 [!code-aspx-csharp[ButtonFieldDataTextField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldDataTextField/CS/buttonfielddatatextfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldDataTextField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldDataTextField/VB/buttonfielddatatextfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FormatDataTextValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataTextValue (object dataTextValue);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataTextValue(object dataTextValue) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataTextValue (dataTextValue As Object) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataTextValue(System::Object ^ dataTextValue);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataTextValue" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="dataTextValue">書式を変換するフィールド値。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</summary>
        <returns>
          <see cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" /> プロパティで指定されている書式に変換されたフィールド値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.FormatDataTextValue%2A>メソッドは、フィールドの値で指定されている形式に変換に使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.ButtonField.DataTextFormatString%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.ButtonField" />クラスをオーバーライドできます、<see cref="M:System.Web.UI.WebControls.ButtonField.FormatDataTextValue(System.Object)" />メソッドをカスタム書式指定ルーチンを実行します。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextFormatString" />
      </Docs>
    </Member>
    <Member MemberName="ImageUrl">
      <MemberSignature Language="C#" Value="public virtual string ImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.ImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの各ボタンに表示されるイメージを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> の各ボタンに表示されるイメージ。 既定値は空の文字列 ("") です。<see cref="P:System.Web.UI.WebControls.ButtonField.ImageUrl" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>のプロパティ、<xref:System.Web.UI.WebControls.ButtonField>に設定されているオブジェクト、<xref:System.Web.UI.WebControls.ButtonType.Image>値を使用して、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>ボタンごとに表示するイメージを指定するプロパティです。 このイメージは、クライアントのブラウザーでサポートされている限り、任意のファイル形式 (.jpg、.gif、.bmp など) でも使用できます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField.ImageUrl%2A>内の各ボタンを表示するイメージを指定するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 このコード例を表示するには、独自のイメージを指定する必要があります。  
  
 [!code-aspx-csharp[ButtonFieldImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonFieldImageUrl/CS/buttonfieldimageurlcs.aspx#1)]
 [!code-aspx-vb[ButtonFieldImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonFieldImageUrl/VB/buttonfieldimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool sortingEnabled, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool sortingEnabled, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool sortingEnabled, System::Web::UI::Control ^ control);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sortingEnabled" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="sortingEnabled">
          並べ替えを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="control">
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> を所有しているデータ コントロール。</param>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトを初期化します。</summary>
        <returns>
          <see langword="false" />。この値は、コントロールにデータを再バインドする必要がないことを示します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>メソッドが使用するデータ コントロールにより呼び出されます、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトが関連の基本的なオブジェクトの初期化を実行する前に、行コレクションに、フィールドが追加されることは、フィールドのインスタンス。 などのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>、呼び出し、<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>メソッドで、`CreateChildControls`他のメソッドより前にメソッドなど`CreateRow`データを特定の行を作成すると呼ばれます。  
  
 呼び出す、<xref:System.Web.UI.WebControls.ButtonField.Initialize%2A>カスタム データ バインド コントロールを作成しているときにメソッドを使用する<xref:System.Web.UI.WebControls.TableCell>の基本的な初期化を実行するオブジェクト、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。 場合は、このメソッドを実装して、 <xref:System.Web.UI.WebControls.ButtonField>-派生型を設定する前に、オブジェクトの初期化が必要と<xref:System.Web.UI.WebControls.TableCell>でコントロールのデータをオブジェクトまたは、<xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする必要があります、<see cref="M:System.Web.UI.WebControls.ButtonField.Initialize(System.Boolean,System.Web.UI.Control)" />メソッドと戻り値<see langword="true" />フィールドは、データ バインディングが正常に動作するフィールドの順序でポストバックで実行することが必要な場合、します。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" />。</param>
        <param name="cellType">行の型 (ヘッダー、フッター、またはデータ) を示す <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つ。</param>
        <param name="rowIndex">行の 0 から始まるインデックス。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.DataControlFieldCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.InitializeCell%2A>メソッドで指定されているボタンの種類の作成、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>プロパティに追加し、<xref:System.Web.UI.Control.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.DataControlFieldCell>オブジェクト。 <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールに設定されている`rowIndex`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public virtual string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ButtonField.Text" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトの各ボタンに表示される静的キャプションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> の各ボタンに表示されるキャプション。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.ButtonFieldBase.ButtonType%2A>のプロパティ、<xref:System.Web.UI.WebControls.ButtonField>に設定されているオブジェクト、<xref:System.Web.UI.WebControls.ButtonType.Button>または<xref:System.Web.UI.WebControls.ButtonType.Link>値を使用して、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>静的テキスト、ボタンのキャプションを表示するプロパティを<xref:System.Web.UI.WebControls.ButtonField>です。 各ボタンは、同じキャプションを共有します。  
  
 使用する代わりに、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>静的テキストを表示するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクトを使用する、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>バインドするプロパティ、<xref:System.Web.UI.WebControls.ButtonField>データ ソースのフィールドにします。 フィールドの値は、ボタンのキャプションとして表示されます。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>と<xref:System.Web.UI.WebControls.ButtonField.Text%2A>プロパティは、両方の設定、<xref:System.Web.UI.WebControls.ButtonField.DataTextField%2A>プロパティが優先されます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.ButtonField.Text%2A>内の各ボタンを表示するキャプションを指定するプロパティ、<xref:System.Web.UI.WebControls.ButtonField>オブジェクト。  
  
 [!code-aspx-csharp[ButtonField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonField/CS/buttonfieldcs.aspx#1)]
 [!code-aspx-vb[ButtonField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonField/VB/buttonfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ButtonField.DataTextField" />
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ButtonField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>メソッドはかどうかをコントロールするために使用するヘルパー メソッドに含まれている、<xref:System.Web.UI.WebControls.ButtonField>サポート コールバック オブジェクトします。 このメソッドは、コールバックがサポートされていることを示すために、空のメソッド (コードが含まれていないメソッド) として実装されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback%2A>メソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生したクラス、<see cref="T:System.Web.UI.WebControls.BoundField" />クラスをオーバーライドして、<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />メソッド、フィールドに含まれるコントロールがコールバックをサポートするかどうかを示すためにします。 コールバックがサポートされていることを示す、実装、<see cref="M:System.Web.UI.WebControls.ButtonField.ValidateSupportsCallback" />例外をスローしない空のメソッドとしてメソッドそれ以外の場合、コールバックがサポートされていない理由を説明するメッセージと共に、例外をスローします。</para>
        </block>
      </Docs>
    </Member>
  </Members>
</Type>