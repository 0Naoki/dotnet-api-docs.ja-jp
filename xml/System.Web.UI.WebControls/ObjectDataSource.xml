<Type Name="ObjectDataSource" FullName="System.Web.UI.WebControls.ObjectDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4acc8e1132aea83e23c3d537ed963f4b9f5eaf80" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70630864" /></Metadata><TypeSignature Language="C#" Value="public class ObjectDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ObjectDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ObjectDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class ObjectDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type ObjectDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.ObjectDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ObjectDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>多階層 Web アプリケーション アーキテクチャで、データ バインド コントロールにデータを提供するビジネス オブジェクトを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [目的](#purpose)  
  
-   [データの取得](#retrieving_data)  
  
-   [データ操作の実行](#performing_data_operations)  
  
-   [データのフィルター処理](#filtering_data)  
  
-   [キャッシュ](#caching)  
  
-   [機能](#features)  
  
-   [データビュー](#data_view)  
  
-   [LINQ to SQL の使用](#using_linq_to_sql)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、作成するクラスで動作します。 データを取得および更新するメソッドを作成し、そのメソッドの名前をマークアップの<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに指定します。 は、レンダリングまたはポストバック<xref:System.Web.UI.WebControls.ObjectDataSource>処理中に、指定したメソッドを呼び出します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが視覚的に表示されることはありません。 その結果、は、 <xref:System.Web.UI.WebControls.ObjectDataSource>プロパティ<xref:System.Web.UI.DataSourceControl.EnableTheming%2A>や<xref:System.Web.UI.DataSourceControl.SkinID%2A>プロパティなどの視覚的な機能をサポートしていません。  
  
<a name="purpose"></a>   
## <a name="purpose"></a>目的  
 非常に一般的なアプリケーションの設計方法は、プレゼンテーション層をビジネスロジックから分離し、ビジネスオブジェクトにビジネスロジックをカプセル化することです。 これらのビジネスオブジェクトは、プレゼンテーション層とデータ層の間に個別のレイヤーを形成し、その結果、3層アプリケーションアーキテクチャになります。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>を使用すると、開発者は、3層アプリケーションアーキテクチャを保持しながら、ASP.NET データソースコントロールを使用できます。  
  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、リフレクションを使用してビジネスオブジェクトのインスタンスを作成し、メソッドを呼び出してデータの取得、更新、挿入、および削除を行います。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSource>が動作するクラスの名前を識別します。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、各メソッド呼び出しに対してクラスのインスタンスを作成して破棄します。 Web 要求の有効期間中は、オブジェクトをメモリ内に保持しません。 これは、使用するビジネスオブジェクトに多くのリソースが必要な場合、または作成と破棄にコストがかかる場合に、重大な考慮事項です。 高価なオブジェクトを使用することは、最適なデザイン選択ではない場合がありますが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、、および<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>の各イベントを使用して、オブジェクトのライフサイクルを制御できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> `static` `Shared` 、 、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>  、および <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> の各プロパティによって識別されるメソッドは、インスタンスメソッドまたは (Visual Basic) メソッドにすることができます。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> `static`メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> (`Shared` Visual Basic) の場合、ビジネスオブジェクトのインスタンスは作成<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>されず、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、、の各イベントは発生しません。  
  
<a name="retrieving_data"></a>   
## <a name="retrieving-data"></a>データの取得  
 ビジネスオブジェクトからデータを取得するには、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティを、データを取得するメソッドの名前に設定します。 メソッドが<xref:System.Collections.IEnumerable>または<xref:System.Data.DataSet>オブジェクトを返さない場合、オブジェクトはランタイムに<xref:System.Collections.IEnumerable>よってコレクションにラップされます。 メソッドシグネチャにパラメーターがある場合は、オブジェクト<xref:System.Web.UI.WebControls.Parameter>を<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>コレクションに追加して、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティで指定されたメソッドに渡す値にバインドできます。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールでパラメーターを使用するには、パラメーターがメソッドシグネチャ内のパラメーターの名前と型と一致している必要があります。 詳細については、「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。  
  
 コントロールは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドが呼び出されるたびにデータを取得します。 <xref:System.Web.UI.WebControls.ObjectDataSource> このメソッドは、プロパティによって<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>指定されたメソッドにプログラムでアクセスできるようにします。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドは、 `DataBind`メソッドが呼び出されたときに<xref:System.Web.UI.WebControls.ObjectDataSource> 、にバインドされているコントロールによって自動的に呼び出されます。 データバインドコントロールの`DataSourceID`プロパティを設定した場合、コントロールは必要に応じてデータソースのデータに自動的にバインドされます。 コントロールをデータバインドコントロールに`DataSourceID`バインドするには、プロパティを設定することをお勧め<xref:System.Web.UI.WebControls.ObjectDataSource>します。 または、 `DataSource`プロパティを設定することもできますが、その場合`DataBind`は、データバインドコントロールのメソッドを明示的に呼び出す必要があります。 メソッドは、いつ<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>でもプログラムによって呼び出して、データを取得できます。  
  
 データバインドコントロールをデータソースコントロールにバインドする方法の詳細については、「[データソースコントロールを使用したデータへのバインド](https://msdn.microsoft.com/library/e41adfff-8fb8-449e-9cd1-9bd49788c5f7)」を参照してください。  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>データ操作の実行  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが動作するビジネスオブジェクトの機能に応じて、更新、挿入、削除などのデータ操作を実行できます。 これらのデータ操作を実行するには、実行する操作の適切なメソッド名とそれに関連付けられているパラメーターを設定します。 たとえば、更新操作の場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティを、更新を実行するビジネスオブジェクトメソッドの名前に設定し、必要なパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクションに追加します。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがデータバインドコントロールに関連付けられている場合、パラメーターはデータバインドコントロールによって追加されます。 この場合は、メソッドのパラメーター名が、データバインドコントロール内のフィールド名と一致していることを確認する必要があります。 この更新は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>メソッドがコードによって明示的に呼び出されるか、データバインドコントロールによって自動的に呼び出されるときに実行されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> と <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> の操作には、同じ一般的なパターンが続きます。 ビジネスオブジェクトは、バッチ処理ではなく、一度に1つのレコードでこれらの種類のデータ操作を実行することを前提としています。  
  
<a name="filtering_data"></a>   
## <a name="filtering-data"></a>データのフィルター処理  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Data.DataTable>データがまたはオブジェクトとして返される場合に、プロパティによって取得されるデータをフィルター処理できます。 <xref:System.Data.DataSet> 書式指定文字列の<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>構文を使用し、式の値を<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションに指定されているパラメーターにバインドすることで、プロパティをフィルター式に設定できます。  
  
<a name="caching"></a>   
## <a name="caching"></a>キャッシュ  
 は、 <xref:System.Web.UI.WebControls.ObjectDataSource>ビジネスオブジェクトのインスタンスを複数の要求にわたって保持しませんが、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって識別されるメソッドを呼び出した結果をキャッシュすることができます。 データがキャッシュされている間、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドへの後続の呼び出しでは、ビジネスオブジェクトの作成とリフレクション<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>を使用したの呼び出しではなく、キャッシュされたデータが返されます。 キャッシュを使用すると、Web サーバー上のメモリを犠牲にしてオブジェクトを作成し、そのデータメソッドを呼び出すことを回避できます。 プロパティがに<xref:System.Web.UI.WebControls.ObjectDataSource> `true`設定されている場合、は自動的にデータをキャッシュし、プロパティはキャッシュが破棄される前にキャッシュがデータを格納する秒数に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>プロパティと省略可能<xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A>なプロパティを指定することもできます。 コントロールを使用すると、すべての種類のデータをキャッシュすることができますが、オブジェクトの同じインスタンスで複数の要求 (オープン<xref:System.Data.SqlClient.SqlDataReader>オブジェクトなど) を処理するために共有できないリソースまたは状態を保持するオブジェクトをキャッシュすることはできません。 <xref:System.Web.UI.WebControls.ObjectDataSource>は、複数の要求を処理するために使用されます。  
  
<a name="features"></a>   
## <a name="features"></a>フィーチャー  
 次の表では、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの機能について説明します。  
  
|機能|要件|  
|----------------|------------------|  
|選択|プロパティを、データを選択するビジネスオブジェクトメソッドの名前に設定し、プログラムまたはデータバインドコントロール<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>を使用して、必要なパラメーターをコレクションに含めます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>|  
|並べ替え|プロパティを、並べ替え条件を含む<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>メソッドのパラメーターの名前に設定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A>|  
|フィルター処理|プロパティをフィルター式に設定し、必要に応じて、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>が呼び出されたときにデータをフィルター処理するためのパラメーターをコレクションに追加します。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッド<xref:System.Data.DataSet>は<xref:System.Data.DataTable>、またはを返す必要があります。|  
|ページング|取得するレコードの最大数のパラメーター <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>と取得する最初のレコードのインデックスをメソッドに含める場合、データソースのページングがサポートされます。 これらのパラメーターの名前は、それぞれプロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>と<xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>プロパティで設定する必要があります。 コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティで指定されたメソッドでのページングを直接サポートし<xref:System.Web.UI.WebControls.ObjectDataSource>ていない場合でも、データバインドコントロールはページング自体を実行できる可能性があります。 これを可能にするためのデータバインドコントロールの要件は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドが、インターフェイスを<xref:System.Collections.ICollection>実装するオブジェクトを返すことです。|  
|Updating|プロパティを、データを更新するビジネスオブジェクトメソッドの名前に設定し、必要なパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクションに含めます。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>|  
|削除中|プロパティを、データを削除するビジネスオブジェクトのメソッドまたは関数の名前に設定し、必要なパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションに含めます。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>|  
|挿入|プロパティを、データを挿入するビジネスオブジェクトのメソッドまたは関数の名前に設定し、必要なパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクションに含めます。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>|  
|キャッシュ|プロパティをに設定`true`し、キャッシュさ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>れたデータに対して必要なキャッシュ動作に従って、プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>とプロパティをに設定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>|  
  
> [!NOTE]
>  クラスを使用し<xref:System.Web.UI.WebControls.ObjectDataSource>てデータを更新または挿入する場合、クライアントで入力された文字列は、クライアントのカルチャ形式からサーバーのカルチャ形式に自動的に変換されません。 たとえば、クライアントカルチャでは、日付形式として DD/MM/YYYY を指定し、サーバーの日付形式を MM/DD/YYYY にすることができます。 この場合、2009年10月5日は、5/10/2009 と<xref:System.Web.UI.WebControls.TextBox>してコントロールに入力されますが、2009として解釈されます。 2009年10月15日は15/10/2009 として入力され、無効な日付として拒否されます。  
  
<a name="data_view"></a>   
## <a name="data-view"></a>データビュー  
 すべてのデータソースコントロール<xref:System.Web.UI.WebControls.ObjectDataSource>と同様に、コントロールはデータソースビュークラスに関連付けられています。 コントロールは、ページ開発者がデータ<xref:System.Web.UI.WebControls.ObjectDataSourceView>を操作するために使用するインターフェイスですが、クラスは、データバインドコントロールが操作するインターフェイスです。 <xref:System.Web.UI.WebControls.ObjectDataSource> また、クラス<xref:System.Web.UI.WebControls.ObjectDataSourceView>は、データソースコントロールの機能を記述し、実際の作業を実行します。 コントロールには、関連付け<xref:System.Web.UI.WebControls.ObjectDataSourceView>られているものが`DefaultView`1 つだけあり、常にという名前が付けられます。 <xref:System.Web.UI.WebControls.ObjectDataSource> オブジェクトは<xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>メソッドによって公開されていますが、そのプロパティやメソッドの多くは、 <xref:System.Web.UI.WebControls.ObjectDataSource>ラップされ、コントロールによって直接公開されます。 <xref:System.Web.UI.WebControls.ObjectDataSourceView> バックグラウンドでは、オブジェクト<xref:System.Web.UI.WebControls.ObjectDataSourceView>は、データの取得、挿入、更新、削除、フィルター処理、並べ替えなど、すべてのデータ操作を実行します。 詳細については、「<xref:System.Web.UI.WebControls.ObjectDataSourceView>」を参照してください。  
  
<a name="using_linq_to_sql"></a>   
## <a name="using-linq-to-sql"></a>LINQ to SQL の使用  
 コントロールは<xref:System.Web.UI.WebControls.ObjectDataSource> LINQ to SQL クラスで使用できます。 これを行うには、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティをデータコンテキストクラスの名前に設定します。 また、、、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>および <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> の各メソッドを、対応する操作を実行するデータコンテキストクラスのメソッドに設定します。 データコンテキストクラスの破棄をキャンセルする<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>には、イベントのイベントハンドラーを作成する必要があります。 この手順が必要になるのは、LINQ to SQL で遅延<xref:System.Web.UI.WebControls.ObjectDataSource>実行がサポートされているのに対し、コントロールが選択操作後にデータコンテキストを破棄しようとするためです。 LINQ to SQL クラスを作成する方法の詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。 データコンテキストクラスの破棄をキャンセルする方法の例については、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>イベントを参照してください。  
  
## <a name="using-the-entity-framework"></a>Entity Framework の使用  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを Entity Framework と共に使用することもできます。 詳細については、「 [Entity Framework と ObjectDataSource コントロールの使用](https://go.microsoft.com/fwlink/?LinkId=209117)」を参照してください。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:ObjectDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConvertNullToDBNull="True|False"  
    DataObjectTypeName="string"  
    DeleteMethod="string"  
    EnableCaching="True|False"  
    EnablePaging="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertMethod="string"  
    MaximumRowsParameterName="string"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnObjectCreated="ObjectCreated event handler"  
    OnObjectCreating="ObjectCreating event handler"  
    OnObjectDisposing="ObjectDisposing event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    runat="server"  
    SelectCountMethod="string"  
    SelectMethod="string"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    StartRowIndexParameterName="string"  
    TypeName="string"  
    UpdateMethod="string"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:ObjectDataSource>  
```  
  
   
  
## Examples  
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://code.msdn.microsoft.com/Project/Download/FileDownload.aspx?ProjectName=aspnetmsdnexamples&DownloadId=14838)できます。  
  
 このセクションでは<xref:System.Web.UI.WebControls.ObjectDataSource> 、.aspx ページのマークアップのについて説明します。このセクションには、使用するビジネスオブジェクトが表示されます。 この例は .aspx ページです。 コントロールにバインド<xref:System.Web.UI.WebControls.GridView>されたコントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource> コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>マークアップは、ビジネスオブジェクトの名前と、データを取得するために呼び出すビジネスオブジェクトメソッドの名前を指定します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 次の例は、.aspx ページ内の<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが使用するビジネスオブジェクトを示しています。 (他の<xref:System.Web.UI.WebControls.ObjectDataSource>多くのコード例でも、このビジネスオブジェクトを使用しています)。この例は、次の2つの基本クラスで構成されています。  
  
-   クラスは、 <xref:System.Web.UI.WebControls.ObjectDataSource>が使用するビジネスロジッククラスです。 `EmployeeLogic`  
  
-   クラス`NorthwindEmployee`は、 `EmployeeLogic`クラスの`GetAllEmployees`メソッドによって返されるデータオブジェクトを定義します。  
  
 追加`NorthwindDataException`のクラスが便宜的に提供されています。  
  
 この一連のクラスの例は、Microsoft SQL Server および Microsoft Access で利用できる Northwind Traders データベースと連携しています。 完全な作業例については、提供されている .aspx ページの例でこれらのクラスをコンパイルして使用する必要があります。 Northwind Traders データベースをインストールする方法については、「[方法: サンプルデータベースをインストール](https://msdn.microsoft.com/library/ed1291f6-604c-4972-ae22-0345c6dea12e)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.IDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
    <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">チュートリアル: カスタムビジネスオブジェクトへのデータバインディング</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
    <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
    <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
    <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ObjectDataSource (string typeName, string selectMethod);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string typeName, string selectMethod) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (typeName As String, selectMethod As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ObjectDataSource(System::String ^ typeName, System::String ^ selectMethod);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ObjectDataSource : string * string -&gt; System.Web.UI.WebControls.ObjectDataSource" Usage="new System.Web.UI.WebControls.ObjectDataSource (typeName, selectMethod)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="typeName" Type="System.String" />
        <Parameter Name="selectMethod" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="typeName"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するクラスの名前。</param>
        <param name="selectMethod"><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> がデータを取得するために呼び出すメソッドまたは関数の名前。</param>
        <summary>型名とデータ取得メソッド名を指定して、<see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `typeName`パラメーターの値には、Bin または App_Code ディレクトリに配置されているコードの部分修飾型、またはグローバルアセンブリキャッシュに登録されているコードの完全修飾型名を指定できます。 グローバルアセンブリキャッシュを使用する場合は、machine.config または web.config 構成ファイルの`assemblies`セクションに適切な参照を追加する必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティによって取得したデータを、データ ソース コントロールがキャッシュする時間 (秒単位) を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティの呼び出しの結果をキャッシュする秒数。 既定値は 0 です。 この値を負にすることはできません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされている間<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、メソッドの呼び出しは、 <xref:System.Web.UI.WebControls.ObjectDataSource>が動作するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>と、メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.ObjectDataSource> 設定 `true`  され、プロパティが0より大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリの前にキャッシュがデータを格納する秒数を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>は破棄されます。 値が0の場合は、キャッシュが無限に長くなることを示します。  
  
 キャッシュは、期間と<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>設定の組み合わせによって規制されます。 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>プロパティが値に設定されている場合、は、メソッドの最初の呼び出しにデータをキャッシュし、 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>プロパティによって指定された時間だけメモリに保持します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> メモリが必要な場合は、期間が経過する前にデータが解放される可能性があります。 次に、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドを呼び出したときにキャッシュが更新されます。 プロパティが value に<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>設定されている場合、データソースコントロールは、メソッドの<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>最初の呼び出し時にデータをキャッシュしますが、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドへの後続の呼び出しのたびに、キャッシュを保持する時間枠をリセットします。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドの最後の呼び出し以降に<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>プロパティと同じ時間にアクティビティがない場合、キャッシュは期限切れになります。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例は、オブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource>がキャッシュをサポートする方法を示しています。 2番目のコード例では、オブジェクトを返す<xref:System.Data.DataSet>ラッパーメソッドを実装して、 <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトを使用したキャッシュを有効にする方法を示します。  
  
 次のコード例は、コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>がキャッシュをサポートする方法を示しています。 キャッシュを有効にするには、データを取得するメソッドを実装する必要が<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>あります。このメソッドは、プロパティ<xref:System.Data.DataSet>によって識別され、データをオブジェクトとして返します。 この例<xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>では、プロパティがに`true` <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>設定され、プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>とプロパティが設定されています。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって返されたデータを30秒間キャッシュします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールでキャッシュを有効にするためにオブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic`クラスの基本実装では、メソッドは`GetAllEmployees` <xref:System.Collections.ArrayList>オブジェクトを返します。 Web <xref:System.Web.UI.WebControls.ObjectDataSource>フォームページでを操作するためにオブジェクトを完全にリファクタリングするのではなく、 `GetAllEmployeesAsDataSet`としてデータの<xref:System.Data.DataSet>セットを`NorthwindEmployee`返すという名前のラッパーメソッドが追加されます。  
  
 このコード例は、 <xref:System.Web.UI.WebControls.ObjectDataSource>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存続期間と組み合わせた場合の、データ ソース コントロールが使用するキャッシュの動作を記述するキャッシュの有効期限の動作を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされている間<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、メソッドの呼び出しは、 <xref:System.Web.UI.WebControls.ObjectDataSource>が動作するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>と、メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.ObjectDataSource> 設定 `true`  され、プロパティが0より大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリの前にキャッシュがデータを格納する秒数を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>は破棄されます。 値0はキャッシュ期間が無限であることを示します。  
  
 キャッシュは、期間と<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>設定の組み合わせによって規制されます。 <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>プロパティが値に設定されている場合、は、メソッドの最初の呼び出しにデータをキャッシュし、 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>プロパティによって指定された時間だけメモリに保持します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> メモリが必要な場合は、期間が経過する前にデータが解放される可能性があります。 次に、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドを呼び出したときにキャッシュが更新されます。 プロパティが<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値に設定されている場合、データソースコントロールは、メソッドの<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>最初の呼び出し時にデータをキャッシュしますが、メソッドの<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>後続の呼び出しごとにキャッシュを保持する時間枠をリセットします。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドの最後の呼び出し以降に<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>プロパティと同じ時間にアクティビティがない場合、キャッシュは期限切れになります。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例は、オブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource>がフィルター処理とキャッシュをサポートする方法を示しています。 2番目のコード例では、オブジェクトを返す<xref:System.Data.DataSet>ラッパーメソッドを実装し、 <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトを使用してキャッシュとフィルター処理を有効にする方法を示します。  
  
 次のコード例は、コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>がフィルター処理とキャッシュをサポートする方法を示しています。 フィルター処理とキャッシュを有効にするには、データを取得するメソッドを実装する必要<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>があります。このメソッドは、 <xref:System.Data.DataSet>プロパティによって識別され、データをオブジェクトとして返します。 この例で`EmployeeLogic`は、オブジェクトがと<xref:System.Data.DataSet>してデータを返し、 <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>プロパティがに`true` <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>設定されており、プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>とプロパティが設定されているため、キャッシュが有効になっています。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって返されたデータを30秒間キャッシュします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/CS/objds6cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_6#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_6/VB/objds6vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用してキャッシュとフィルター処理を有効にするためにオブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic`クラスの基本実装では、メソッドは`GetAllEmployees`を返し<xref:System.Collections.ArrayList>ます。 Web <xref:System.Web.UI.WebControls.ObjectDataSource>フォームページでを操作するためにオブジェクトを完全にリファクタリングするのではなく、 `GetAllEmployeesAsDataSet`としてデータの<xref:System.Data.DataSet>セットを`NorthwindEmployee`返すという名前のラッパーメソッドが追加されます。 このコード例は、 <xref:System.Web.UI.WebControls.ObjectDataSource>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールによって作成されたすべてのデータ キャッシュ オブジェクトにリンクされる、ユーザー定義のキー依存関係を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> によって作成されたすべてのキャッシュ オブジェクトを識別するキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>プロパティは任意の任意の文字列値に設定できます。  
  
 キーの有効期限が切れると、すべてのキャッシュ オブジェクトが明示的に期限切れになります。 これにより、プログラムによって独自の<xref:System.Web.UI.WebControls.ObjectDataSource>ページコードからによって作成されたキャッシュエントリを無効にすることができます。  
  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされている間<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、メソッドの呼び出しは、 <xref:System.Web.UI.WebControls.ObjectDataSource>が動作するビジネスオブジェクトからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>と、メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.ObjectDataSource> 設定 `true`  され、プロパティが0より大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリの前にキャッシュがデータを格納する秒数を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>は破棄されます。 値が0の場合は、キャッシュが無限に長くなることを示します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>プロパティを設定し<xref:System.Web.UI.WebControls.ObjectDataSource>て、コントロールとキーによって作成されたすべてのキャッシュエントリ間の依存関係を作成できます。 キーを期限切れにすると、すべてのキャッシュエントリをプログラムで有効期限切れにすることができます。 パラメーターとして現在<xref:System.Web.Caching.Cache.Remove%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>の値を持つメソッドを使用して、キーを期限切れにします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> 、 、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 、およびの各プロパティの組み合わせごとに一意のキャッシュエントリが作成されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> 同じ<xref:System.Web.UI.WebControls.ObjectDataSource>種類、メソッド、およびパラメーターを使用してデータを読み込むシナリオでは、複数のコントロールで同じキャッシュエントリを使用できます。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、および Northwind データベースの Employees テーブルからレコードを取得するデータアクセスクラスを示しています。  
  
 最初の例は、2つ<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList> 、コントロール、および<xref:System.Web.UI.WebControls.DetailsView>コントロールを含む Web ページを示しています。 最初<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList>とコントロールを使用して、データベースから従業員名を取得して表示します。 2番<xref:System.Web.UI.WebControls.ObjectDataSource>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用して、ユーザーが選択した従業員レコードを取得して表示します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに対してキャッシュが有効になっています。 そのため、各レコードはデータベースから1回だけ取得されます。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>は "従業員の詳細" に設定されますが、文字列値はキーとして使用できます。 この Web ページには、 <xref:System.Web.UI.WebControls.Button>ユーザーがクリックしてキャッシュされたデータを期限切れにするためのコントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 2番目の例は、 <xref:System.Web.UI.Control.Load>イベントのハンドラーと、 <xref:System.Web.UI.WebControls.Button>コントロールの<xref:System.Web.UI.WebControls.Button.Click>イベントのハンドラーを示しています。 イベント<xref:System.Web.UI.Control.Load>ハンドラーは、キーが<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>値に設定されたキャッシュ項目を作成します。 イベント<xref:System.Web.UI.WebControls.Button.Click>ハンドラーは、キーが<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>値と等しいキャッシュ項目を削除します。 キャッシュ項目が削除されると、キーに依存しているすべてのキャッシュされたデータの有効期限が切れます。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Update" /> メソッドに新しい値だけを渡すか、<see langword="Update" /> メソッドに新旧両方の値を渡すかを決定する値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティは、古い値と新しい値のパラメーターが、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティで指定されたメソッドに適用されるかどうかを決定します。 たとえば<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 、プロパティによって指定されたメソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>列と<xref:System.Data.DataTable> `Number`列`Name`を持つコントロールを返し、プロパティが<xref:System.Web.UI.ConflictOptions.OverwriteChanges>フィールドに設定されている場合、に対してパラメーターが作成されます。メソッドの `Update` と `Number` 。 `Name` `original_Name` `Number` `Name` `original_Number`プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、、、、およびに対してパラメーターが作成されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> (元の値のパラメーターの正確な名前は、 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>プロパティによって異なります)。次<xref:System.Web.UI.WebControls.ObjectDataSource>に、は、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティで指定されたメソッドに一致するパラメーターがあるかどうかを判断します。  
  
 同時実行制御は、複数のクライアントが同じデータにアクセスして操作しているときに、ストア内のデータの読み取りと変更の方法を制御するためにデータストアで使用される手法です。 たとえば、あるクライアントがデータを読み取り、ユーザーに提示し、別のクライアントが同じデータを読み取って別のユーザーに提示します。 両方のユーザーがデータを更新してデータストレージに送信した場合、両方のクライアントが同じデータに対して異なる値を提供する可能性があるため、予期しない結果が発生する可能性があります。 これは、競合と見なされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>プロパティを<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定すると、メソッド`Update`は、古い値と新しい値を元のデータソースと比較して競合を検出し、必要に応じて処理できるようになります。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ConvertNullToDBNull">
      <MemberSignature Language="C#" Value="public bool ConvertNullToDBNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertNullToDBNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberSignature Language="VB.NET" Value="Public Property ConvertNullToDBNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ConvertNullToDBNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertNullToDBNull : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新、挿入、削除の各操作に渡される <see cref="T:System.Web.UI.WebControls.Parameter" /> 値を、<see cref="F:System.DBNull.Value" /> コントロールで <see langword="null" /> から <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Parameter" /> コントロールに渡される <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> オブジェクトのすべての <see langword="true" /> 値を <see cref="F:System.DBNull.Value" /> 値に自動的に変換する場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値に`null`変換し<xref:System.DBNull.Value>ないと、実行時にエラーが発生する可能性があります。 更新、 <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull%2A>挿入、または<xref:System.Web.UI.WebControls.Parameter>削除の各操作に渡される値が、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールによってから`null` <xref:System.DBNull.Value>値に自動的に変換されるかどうかを示すには、プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.DBNull.Value" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="DataObjectTypeName">
      <MemberSignature Language="C#" Value="public string DataObjectTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataObjectTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property DataObjectTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DataObjectTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataObjectTypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが、データ バインド コントロールから個々の値を渡す代わりに、データの更新、挿入、削除の各操作のパラメーターに使用するクラスの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> の各操作のパラメーターとして使用できるオブジェクトの型を識別する、部分修飾クラス名または完全修飾クラス名。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 、および <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> メソッドに渡されるいくつかのパラメーターを指定する代わりに、複数のデータフィールド値を集計する1つのオブジェクトを作成できます。 この1つのオブジェクトは、複数のパラメーターではなく、メソッドに渡されます。  
  
 データバインドコントロールにバインド<xref:System.Web.UI.WebControls.ObjectDataSource>されるコントロールの既定の動作では、データバインドコントロールによって、データソース<xref:System.Web.UI.WebControls.Parameter>内の各パラメーターのオブジェクトが作成されます。 ビジネスオブジェクトに多数のフィールドがある場合、結果として得られるメソッドにも多くのフィールドがあります。 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティを使用すると、各データフィールドのプロパティを持つ型を指定できます。 次に、メソッドに複数のパラメーターを渡す代わりに、ランタイムが1つのオブジェクトを作成し、そのすべてのプロパティを設定します。 この1つのオブジェクトが、メソッド呼び出しの parameters コレクションに追加されます。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティによって指定された型には、パラメーターを持たないパラメーターなしのコンストラクター <xref:System.Web.UI.WebControls.ObjectDataSource>が必要です。そのため、コントロールは型のインスタンスを作成できます。 また、型には設定可能なプロパティが<xref:System.Web.UI.WebControls.ObjectDataSource>必要です。このプロパティを使用すると、コントロールは、データバインドコントロールから渡された値を使用してオブジェクトを設定できます。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールのプロパティ名は、データバインドコントロールによって渡される値のパラメーター名と正確に一致している必要があります。  
  
 プロパティが設定<xref:System.Web.UI.WebControls.ObjectDataSource>され、コントロールがデータバインドコントロールに関連付けられている場合、プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>および<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって指定されたメソッドは、それぞれ、「」で指定された型のパラメーターを1つ持つ必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティ。 プロパティが<xref:System.Web.UI.ConflictOptions.OverwriteChanges>値に設定されている場合、プロパティによって<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>指定されるメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティで指定された型のパラメーターを1つ持つ必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、プロパティによって<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>指定されるメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティで指定された型の2つのパラメーターを持つ必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection%2A> 最初のパラメーターには、元の値が含まれます。2番目のパラメーターには、新しい値が含まれています。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているのプロパティにデリゲートします。  
  
   
  
## Examples  
 このセクションには、2つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティを使用して、すべてのパラメーター値を1つのオブジェクトに結合する型を実装する方法を示します。 2番目のコード例では、最初のコード例で使用されている2つのクラスを使用する Web ページを示します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティを使用して、すべてのパラメーター値を1つのオブジェクトに結合する型を実装する方法を示しています。 `AggregateData`クラスの select メソッドは、とと<xref:System.Data.DataTable> `Number`いう名前`Name`の2つの列を持つオブジェクトを返します。 同様に、 `NewData`クラスは、とと`Number`いう2つ`Name`の読み取り/書き込みプロパティを定義します。 クラスのメソッドは、 `Insert`型`NewData`のパラメーターを1つ受け取ります。 `AggregateData` `TypeName` のプロパティ <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A> がに`AggregateData`設定`NewData`され、プロパティがに設定されています。 <xref:System.Web.UI.WebControls.ObjectDataSource>  
  
 [!code-csharp[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateData.cs#2)]
 [!code-vb[ObjectDataSourceDataObjectTypeName#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateData.vb#2)]  
  
 次のコード例は、前のコード例で使用されている2つのクラスを使用する Web ページを示しています。  
  
 [!code-aspx-csharp[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/CS/AggregateDataPageCS.aspx#1)]
 [!code-aspx-vb[ObjectDataSourceDataObjectTypeName#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceDataObjectTypeName/VB/AggregateDataPageVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="Article" href="https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4">ObjectDataSource コントロールでのパラメーターの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="objectDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> コレクション内のパラメーターを持つ <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" /> プロパティで識別されるメソッドを呼び出して削除操作を実行します。</summary>
        <returns><see cref="P:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows" /> イベントで <see cref="T:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs" /> の <see cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" /> プロパティを設定する場合は、基になるデータ ストレージから削除する行数を表す値。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が実行<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベントを処理して、パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>操作の前に前処理を実行したりすることができます。 削除操作を実行するために<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、オブジェクトは、リフレクションを使用し<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>て、プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>プロパティを使用して、プロパティによって識別されるメソッドを呼び出します。 削除パラメーターが、関連付けられたデータバインドコントロールから取得される場合、パラメーターの名前は<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>プロパティに従って作成されます。 操作が完了すると<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>が発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>イベントを処理して、戻り値、出力パラメーター、および例外を確認したり、後処理を実行したりすることができます。  
  
 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのメソッドにデリゲートします。  
  
## <a name="data-bound-controls"></a>データバインドコントロール  
 コントロールがデータバインドコントロール ( <xref:System.Web.UI.WebControls.GridView>コントロールなど) に関連付けられている場合、ページコードから<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource> 代わりに<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> 、データバインドコントロールによってメソッドが直接呼び出されます。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>については、「」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを<xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>処理して、戻り値または出力パラメーターの値を調べたり、操作の<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>関連付けられているオブジェクトから使用できます。  
  
 オブジェクトのプロパティ <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> を使用して、 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>メソッドから削除された行数を返すことができます。 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> これを行うには、 <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>プロパティを設定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって指定されたメソッドから、削除された行数を返した場合、その値は<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>オブジェクトのプロパティから取得できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを含むオブジェクトを使用して、データを削除する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを使用してデータを削除する方法を次のコード例に示します。 最初は、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドを使用して、 `EmployeeLogic`オブジェクトからデータを取得するすべての従業員のセットをコントロールに表示します。 プロパティが<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>に`true`設定されている<xref:System.Web.UI.WebControls.GridView>ため、コントロールには自動的に **[削除]** ボタンが表示されます。  
  
 **[削除]** ボタンをクリックすると、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって指定されたメソッドと、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションで指定されているすべてのパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 デリゲートは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> 操作が実行される前にイベントを処理するために呼び出され、例外処理を実行するために操作が完了した後で、デリゲートを呼び出してイベントを処理します。 `NorthwindEmployeeDeleted`  `NorthwindEmployeeDeleting` このコード例では、 `NorthwindDataException`がスローされた場合、 `NorthwindEmployeeDeleted`メソッドによって処理されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを削除するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを削除するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを削除することを想定しています。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 コレクション内の<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに対して構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認します。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>  
  
## <a name="object-lifetime"></a>オブジェクトの有効期間  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって識別されるメソッドには、インスタンスメソッドまたは`static` (`Shared` Visual Basic) メソッドを使用できます。 インスタンスメソッドの場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティが呼び出されるたびにビジネスオブジェクトが作成され、破棄されます。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>と<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>イベントを処理して、ビジネスオブジェクトを操作してから、プロパティが呼び出されるようにすることができます。 また、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティが呼び出さ<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>れた後に発生するイベントを処理することもできます。 ビジネスオブジェクトが<xref:System.IDisposable>インターフェイス<xref:System.IDisposable.Dispose%2A>を実装している場合は、オブジェクトが破棄される前にメソッドが呼び出されます。 `static`メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> (`Shared` Visual Basic) メソッドの場合、ビジネスオブジェクトは作成されず<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、の各イベントを処理することはできません。  
  
## <a name="parameter-merging"></a>パラメーターのマージ  
 パラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>次の3つのソースからコレクションに追加されます。  
  
-   実行時にデータバインドコントロールから。  
  
-   要素から`DeleteParameters`宣言によって。  
  
-   メソッドから`Deleting`宣言によって。  
  
 まず、データバインドコントロールから生成されたすべてのパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションに追加します。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource>とと`Name` <xref:System.Web.UI.WebControls.GridView> `Number` `Name`いう列を持つコントロールにコントロールがバインドされている場合、およびのパラメーターはコレクションに追加されます。 `Number` パラメーターの正確な名前は、 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>プロパティによって異なります。 これらのパラメーターのデータ型は`string`です。 次に、 `DeleteParameters`要素に示されているパラメーターが追加されます。 `DeleteParameters`要素内のパラメーターが、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクション内に既に存在するパラメーターと同じ名前で見つかった場合、既存のパラメーターは、 `DeleteParameters`要素で指定されているパラメーターと一致するように変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベントのパラメーターをプログラムによって追加および削除できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>これは、メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。  
  
## <a name="method-resolution"></a>メソッドの解決方法  
 メソッドが呼び出されると、データバインドコントロールのデータフィールド、 `DeleteParameters`要素で宣言によって作成されたパラメーター、および<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>イベントハンドラーに追加されたパラメーターがすべてマージされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> (詳細については、前のセクションを参照してください)。次<xref:System.Web.UI.WebControls.ObjectDataSource>に、オブジェクトは、呼び出すメソッドの検索を試みます。 最初に、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致する<xref:System.InvalidOperationException>ものが見つからない場合は、例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティによって指定された型にという`DeleteARecord`2 つのメソッドがあるとします。 1 `DeleteARecord`つの`ID`パラメーターとがあり、 `Name`もう`DeleteARecord`一方にはとと`Number`いう2つのパラメーターがあります。 コレクションにという名前`ID` `DeleteARecord`のパラメーターが1つしかない場合、 `ID`パラメーターだけを持つメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティが設定されている場合、メソッドは別の方法で解決されます。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、プロパティで指定されている型<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>の1つ<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>のパラメーターを受け取る、プロパティに指定されている名前のメソッドを検索します。 この場合、パラメーターの名前は関係ありません。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを含むオブジェクトを使用して、データを削除する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを使用してデータを削除する方法を次のコード例に示します。 最初は、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドを使用して、 `EmployeeLogic`オブジェクトからデータを取得するすべての従業員のセットをコントロールに表示します。 プロパティが<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>に`true`設定されている<xref:System.Web.UI.WebControls.GridView>ため、コントロールには自動的に **[削除]** ボタンが表示されます。  
  
 **[削除]** ボタンをクリックすると、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって指定されたメソッドと、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションで指定されているすべてのパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 デリゲートは、操作<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>が実行される前にイベントを処理するために呼び出され、例外処理を実行するために操作が完了した後に、デリゲートを呼び出してイベントを処理します。 `NorthwindEmployeeDeleted`  `NorthwindEmployeeDeleting` この例では、 `NorthwindDataException`がスローされた場合、 `NorthwindDataException`デリゲートによって処理されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" /> メソッドによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> メソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションに格納されているパラメーターの名前と型は、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>メソッドシグネチャ内のパラメーターの名前と型と一致する必要があります。 パラメーター名はプロパティの<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>影響を受け、大文字と小文字が区別されます。 コレクション内のパラメーターは、データバインドコントロール内のデータ、宣言によって指定されるパラメーター、およびプログラムによって追加されるパラメーターによって異なります。 詳細については、「」の「 <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>パラメーターのマージ」と「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>プロパティを取得します。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>については、「」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを含むオブジェクトを使用して、データを削除する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 次のコード例は、ビジネスオブジェクトと<xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> <xref:System.Web.UI.WebControls.GridView>コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>のプロパティを使用してデータを削除する方法を示しています。 最初は、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドを使用して、 `EmployeeLogic`オブジェクトからデータを取得するすべての従業員のセットをコントロールに表示します。 プロパティが<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>に`true`設定されている<xref:System.Web.UI.WebControls.GridView>ため、コントロールには自動的に **[削除]** ボタンが表示されます。  
  
 **[削除]** ボタンを<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>クリックすると、2つのパラメーターを使用してイベントが呼び出されます。 1つの`EmpID`パラメーターであるは<xref:System.Web.UI.WebControls.DataGrid>コントロールから取得され、 <xref:System.Web.UI.WebControls.GridView.DataKeyNames%2A>プロパティに基づいています。 もう1つのパラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>宣言型プロパティから取得されます。 クラス`EmployeeLogic`は、メソッド`DeleteEmployee`をオーバーロードします。 一方のオーバーロードは`NorthwindEmployee`パラメーターを受け取り、もう1つ<xref:System.Int32>のオーバーロード`anID`はという名前のパラメーターを受け取ります。 イベントでは、 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティのエントリが調整され、の`original_EmpID`値を持つと`anID`いう名前のパラメーターが1つだけ含まれるようになります。 <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> イベントハンドラーが存在する場合は、 `DeleteEmployee`一致するメソッドが呼び出されます。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.DataGrid>コントロールを表示し、イベントを<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>処理する Web ページを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/objds11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_11#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/objds11vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/CS/northwindemployee11.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_11#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_11/VB/northwindemployee11.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションに<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>固有の追加の初期化を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource>削除操作を実行する前にパラメーター値を変更したりするために、イベントを処理します。 パラメーターは、 <xref:System.Collections.IDictionary> <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクトによって公開される<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティによってアクセスされるコレクションとして使用できます。  
  
 のプロパティをに設定`true`することにより、削除操作を取り消すことができます。 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> <xref:Microsoft.Win32.SessionEndingEventArgs.Cancel%2A>  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを含むオブジェクトを使用して、データを削除する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを使用してデータを削除する方法を次のコード例に示します。 最初は、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドを使用して、 `EmployeeLogic`オブジェクトからデータを取得するすべての従業員のセットをコントロールに表示します。 プロパティが<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>に`true`設定されている<xref:System.Web.UI.WebControls.GridView>ため、コントロールには自動的に **[削除]** ボタンが表示されます。  
  
 **[削除]** ボタンをクリックすると、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによって指定されたメソッドと、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションで指定されているすべてのパラメーターを使用して、削除操作が実行されます。 このコード例では、一部の前処理と後処理の手順も実行します。 デリゲートは、操作<xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>が実行される前にイベントを処理するために呼び出され、例外処理を実行するために操作が完了した後に、デリゲートを呼び出してイベントを処理します。 `NorthwindEmployeeDeleted`  `NorthwindEmployeeDeleting` このコード例では、 `NorthwindDataException`がスローされた場合、 `NorthwindEmployeeDeleted`メソッドによって処理されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/objds10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/objds10vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/CS/northwindemployee10.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_10/VB/northwindemployee10.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールでデータ キャッシュが有効かどうかを示す値を取得または設定します。</summary>
        <value>データ ソース コントロールでデータ キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされている間<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、メソッドの呼び出しでは、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource>のインスタンスの作成とそのデータメソッドの呼び出しではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>と、メソッドはビジネスオブジェクトからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.ObjectDataSource> 設定 `true`  され、プロパティが0より大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリの前にキャッシュがデータを格納する秒数を示します。 <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.EnableCaching%2A>は破棄されます。 値が0の場合は、キャッシュが無限に長くなることを示します。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、および Northwind データベースの Employees テーブルからレコードを取得するデータアクセスクラスを示しています。  
  
 最初の例は、2つ<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList> 、コントロール、および<xref:System.Web.UI.WebControls.DetailsView>コントロールを含む Web ページを示しています。 最初<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList>とコントロールを使用して、データベースから従業員名を取得して表示します。 2番<xref:System.Web.UI.WebControls.ObjectDataSource>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用して、ユーザーが選択した従業員レコードを取得して表示します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに対してキャッシュが有効になっています。 そのため、各レコードはデータベースから1回だけ取得されます。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>は "従業員の詳細" に設定されますが、文字列値はキーとして使用できます。 この Web ページには、 <xref:System.Web.UI.WebControls.Button>ユーザーがクリックしてキャッシュされたデータを期限切れにするためのコントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx#3)]  
  
 2番目の例は、 <xref:System.Web.UI.Control.Load>イベントのハンドラーと、 <xref:System.Web.UI.WebControls.Button>コントロールの<xref:System.Web.UI.WebControls.Button.Click>イベントのハンドラーを示しています。 イベント<xref:System.Web.UI.Control.Load>ハンドラーは、キーが<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>値に設定されたキャッシュ項目を作成します。 イベント<xref:System.Web.UI.WebControls.Button.Click>ハンドラーは、キーが<xref:System.Web.UI.WebControls.ObjectDataSource.CacheKeyDependency%2A>値と等しいキャッシュ項目を削除します。 キャッシュ項目が削除されると、キーに依存しているすべてのキャッシュされたデータの有効期限が切れます。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default2.aspx.cs#4)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default2.aspx.vb#4)]  
  
 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.EnableCaching" /> プロパティで指定されたメソッドが <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> を返すと、<see cref="T:System.Data.Common.DbDataReader" /> プロパティが <see langword="true" /> に設定されます。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="EnablePaging">
      <MemberSignature Language="C#" Value="public bool EnablePaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnablePaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberSignature Language="VB.NET" Value="Public Property EnablePaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnablePaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnablePaging : bool with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールが取得したデータ セットを使用するページングをサポートしているかどうかを示す値を取得または設定します。</summary>
        <value>データ ソース コントロールが取得したデータを使用するページングをサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールによるページングを処理するには<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>の<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>、、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A> 、の<xref:System.Web.UI.WebControls.ObjectDataSource>各プロパティを設定し、適切なパラメーターを指定してビジネスオブジェクトの select メソッドを定義します。 プロパティがに`true`設定されている<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>場合、コレクションには、要求された最初の行の2つの追加パラメーターと、要求された行数が含まれます。 <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A> これらの2つのパラメーターには、 <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>プロパティとプロパティによって定義された名前が付けられます。 メソッド`Select`は、指定されたインデックスを開始位置として、要求された行数を返す必要があります。 データはページサイズによって均等に分割されない場合があるため、最後のページの行数が少なくなる可能性があります。 したがって、要求された行数は実際に返される行の最大数になります。  
  
 関連付けられているデータバインドコントロールでページングが有効になっている場合、データ`Select`バインドコントロールは、開始インデックスと必要な行数を使用してメソッドを呼び出します。 さらに、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティが設定されている場合、データバインドコントロールはページャーコントロールを表示する前にメソッドを呼び出します。 たとえば、ページサイズが<xref:System.Web.UI.WebControls.GridView> 5 のページングが有効になっているコントロールで、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティによって指定されたメソッドが20を返した場合、ページャーに表示されるのは4ページのみです。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView>オブジェクトの<xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>プロパティにデリゲートします。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。  
  
 Web ページには、 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>プロパティがに`true`設定されたコントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティ <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> とプロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、 <xref:System.Web.UI.WebControls.DropDownList>コントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DropDownList>コントロールのイベントのハンドラーを示しています。 ハンドラーのコードは、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティをユーザーの選択に設定します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、 `GetSubsetOfEmployees` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに割り当てられたという名前のメソッドが含まれています。 この例には、 `GetEmployeeCount` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティに割り当てられているという名前のメソッドも含まれています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドの呼び出し時に適用されるフィルター式を取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで識別されるメソッドまたは関数を使用してデータを取得するときに適用されるフィルター式を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Data.DataSet>または<xref:System.Data.DataTable>オブジェクトを返す場合にのみ、データのフィルター処理をサポートします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティに使用される構文は、書式設定文字列形式の式です。 フィルター式の構文は、 <xref:System.Data.DataColumn.Expression%2A>プロパティで許容される構文と同じです。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションにパラメーターを追加する場合は、書式設定文字列のプレースホルダーを含めることもできます。 たとえば、パラメーター値`"{0}"`を置き換えるには、式にを含めます。 プレースホルダーは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクション内のパラメーターのインデックスに従って置き換えられます。  
  
 パラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティに含めることができます。 パラメーターの型が文字列型または文字型である場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。  
  
 コレクションには、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティで検出されたプレースホルダーに対して評価されるパラメーターが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
> [!NOTE]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返さ<xref:System.Data.DataTable>れるオブジェクトまたはオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
   
  
## Examples  
 次のコード例では、中間層ビジネスオブジェクトから<xref:System.Web.UI.WebControls.ObjectDataSource>データを取得するコントロール<xref:System.Web.UI.WebControls.GridView>と、結果を表示するコントロールを使用して、フィルター処理されたデータを表示する方法を示します。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データを取得するメソッドがオブジェクト<xref:System.Data.DataSet>または<xref:System.Data.DataTable>オブジェクトとして取得した場合にのみ、データをフィルター処理できます。 このため、プロパティは<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 、データを<xref:System.Data.DataSet>として取得するビジネスオブジェクトメソッドを識別します。  
  
 このコード例は<xref:System.Web.UI.WebControls.TextBox> 、コントロール<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource> 、コントロール、コントロール、および **[送信]** ボタンで構成されています。 既定では、 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders の従業員の1つの名前がに設定されます。 には、 <xref:System.Web.UI.WebControls.TextBox>で名前によって識別される従業員に関する情報が表示されます。 <xref:System.Web.UI.WebControls.GridView> 別の従業員のデータを取得するには<xref:System.Web.UI.WebControls.TextBox>、に従業員の氏名を入力し、**[送信]** ボタンをクリックします。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドによって取得されるデータをフィルター処理するために使用される式を指定します。 このメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターの型はスペースを含む可能性がある文字列型であるため、パラメータープレースホルダーは単一引用符で囲まれています。 パラメーターの型が数値または日付型の場合、外接する引用符は必要ありません。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。  
  
-   `EmployeeLogic`クラス。ビジネスロジックをカプセル化するクラスです。  
  
-   `NorthwindEmployee`クラス。これは、データ層からデータを読み込み、永続化するために必要な基本機能のみを含むモデルクラスです。  
  
 わかりやすくするため`EmployeeLogic`に、クラスはデータ層からデータを取得するのではなく、データの静的なセットを作成します。 また、このサンプルでは、Northwind Traders の従業員の完全な名前を入力してフィルター処理を示すため、この例でも役立ちます。 完全な作業例については、提供されている Web フォームのコード例でこれらのクラスをコンパイルして使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> プロパティが設定されていますが、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> メソッドが <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> を返しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As ObjectDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> <xref:System.Web.UI.WebControls.ObjectDataSource>フィルター操作を実行する前に、フィルターパラメーター値に対して検証操作を実行するイベントを処理します。 の<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> `true`プロパティ<xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>をに設定することにより、選択した操作を取り消すことができます。 イベントは、プロパティが設定さ<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>れている場合にのみ発生します。  
  
 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Filtering?displayProperty=nameWithType>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.Filtering?displayProperty=nameWithType> コントロールに <xref:System.Web.UI.WebControls.ObjectDataSource> 関連付けられているのイベントにデリゲートします。 <xref:System.Web.UI.WebControls.ObjectDataSourceView>  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返さ<xref:System.Data.DataTable>れるオブジェクトまたはオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Data.DataSet>または<xref:System.Data.DataTable>オブジェクトを返す場合にのみ、データのフィルター処理をサポートします。  
  
 に使用<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>される構文は、書式設定文字列形式の式です。 フィルター式の構文は、 <xref:System.Data.DataColumn.Expression%2A>プロパティで許容される構文と同じです。 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションにパラメーターを追加する場合は、書式設定文字列のプレースホルダーを含めることもできます。 たとえば、パラメーター値`"{0}"`を置き換えるには、式にを含めます。 プレースホルダーは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクション内のパラメーターのインデックスに従って置き換えられます。  
  
 パラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティに含めることができます。 パラメーターが文字列型または文字型の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>プロパティを取得します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトを使用して、中間層ビジネスオブジェクト<xref:System.Web.UI.WebControls.GridView>からデータを取得し、その結果を表示するコントロールを使用して、フィルター選択されたデータを表示する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。  
  
 次のコード例では、中間層ビジネスオブジェクトから<xref:System.Web.UI.WebControls.ObjectDataSource>データを取得するコントロール<xref:System.Web.UI.WebControls.GridView>と、結果を表示するコントロールを使用して、フィルター処理されたデータを表示する方法を示します。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データを取得するメソッドがオブジェクト<xref:System.Data.DataSet>または<xref:System.Data.DataTable>オブジェクトとして取得した場合にのみ、データをフィルター処理できます。 このため、プロパティは<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> 、データを<xref:System.Data.DataSet>として取得するビジネスオブジェクトメソッドを識別します。  
  
 このコード例は<xref:System.Web.UI.WebControls.TextBox> 、コントロール<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource> 、コントロール、コントロール、および **[送信]** ボタンで構成されています。 既定では、 <xref:System.Web.UI.WebControls.TextBox> Northwind Traders の従業員の1つの名前がに設定されます。 には、 <xref:System.Web.UI.WebControls.TextBox>で名前によって識別される従業員に関する情報が表示されます。 <xref:System.Web.UI.WebControls.GridView> 別の従業員のデータを取得するに<xref:System.Web.UI.WebControls.TextBox>は、で従業員の氏名を入力し、**[送信]** ボタンをクリックします。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって取得されるデータをフィルター処理するために使用される式を指定します。 このメソッドは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクションに含まれるパラメーターに評価されるパラメーターのプレースホルダーを使用します。 この例では、パラメーターの型はスペースを含む可能性がある文字列型であるため、パラメータープレースホルダーは単一引用符で囲まれています。 パラメーターの型が数値または日付型の場合、外接する引用符は必要ありません。 コレクション<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>には、 <xref:System.Web.UI.WebControls.TextBox>コントロールにバインド<xref:System.Web.UI.WebControls.FormParameter>されたオブジェクトであるパラメーターが1つ含まれています。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のフィルターパラメーター値を検証する必要があります。 ランタイムは単にパラメーター値をフィルター式に置き換え、 <xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されるオブジェクトに適用します。 返される項目の数<xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>を制限するためにセキュリティ対策としてプロパティを使用している場合は、フィルター処理を実行する前にパラメーター値を検証する必要があります。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。  
  
-   `EmployeeLogic`クラス。ビジネスロジックをカプセル化するクラスです。  
  
-   `NorthwindEmployee`クラス。これは、データ層からデータを読み込み、永続化するために必要な基本機能のみを含むモデルクラスです。  
  
 わかりやすくするため`EmployeeLogic`に、クラスはデータ層からデータを取得するのではなく、データの静的なセットを作成します。 また、このサンプルでは、Northwind Traders の従業員の完全な名前を入力してフィルター処理を示すため、この例でも役立ちます。 完全な作業例については、提供されている Web フォームのコード例でこれらのクラスをコンパイルして使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" /> プロパティを設定していますが、<see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> メソッドが <see cref="T:System.Data.DataSet" /> または <see cref="T:System.Data.DataTable" /> を返しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.FilterExpression" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Filtering" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="objectDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。 <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> がサポートするビューは 1 つだけであるため、<paramref name="viewName" /> は無視されます。</param>
        <summary>データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.ObjectDataSourceView" /> に関連付けられた <see langword="DefaultView" /> という名前の <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>でサポートされるデータソースビューは1つだけです。 すべてのデータソースビューオブジェクトと同様に<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、データソースコントロールに関連付けられているは、その機能を定義し、基になるデータストレージからデータを取得するために必要なすべての作業を実行し、並べ替えなどの操作を実行します。挿入、削除、および更新。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>メソッドは、ページコードではなく、データバインドコントロールによって呼び出されることを意図しています。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された <paramref name="viewName" /> が <see langword="null" /> であるか、<see langword="DefaultView" /> 以外の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="objectDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> オブジェクトに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</summary>
        <returns><see cref="T:System.Collections.ICollection" /> に関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.WebControls.ObjectDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、基になるデータに`DefaultView`対して、という名前のビューを1つだけサポートします。 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A>は、この1つのビュー名の単一要素のコレクションを返します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.GetViewNames%2A>メソッドは、ページコードではなく、データバインドコントロールによって呼び出されることを意図しています。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="objectDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> プロパティと <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" /> コレクション内のパラメーターで識別されるメソッドを呼び出して挿入操作を実行します。</summary>
        <returns>基になるデータ ストレージに挿入する行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 操作が実行<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントを処理して、パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作の前に前処理を実行したりすることができます。 挿入操作を実行するために<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、オブジェクトはリフレクションを使用し<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>て、プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>プロパティを使用して、プロパティによって識別されるメソッドを呼び出します。 操作が完了すると<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>が発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>イベントを処理して、戻り値、出力パラメーター、および例外を確認したり、後処理を実行したりすることができます。  
  
 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に<xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>関連付けられているのメソッドにデリゲートします。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>については、「」を参照してください。  
  
## <a name="data-bound-controls"></a>データバインドコントロール  
 オブジェクトが<xref:System.Web.UI.WebControls.GridView>コントロールなどのデータバインドコントロールに関連付けられている場合、ページコードから<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource> 代わりに<xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> 、データバインドコントロールによってメソッドが直接呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/a806fa2c-fe6a-405f-869c-74e804a642ea">チュートリアル: カスタムビジネスオブジェクトへのデータバインディング</related>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを<xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>処理して、戻り値または出力パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>関連付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションに<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>固有の追加の初期化を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource>挿入操作を実行する前にパラメーター値を変更したりするために、イベントを処理します。 パラメーターは、 <xref:System.Collections.IDictionary> <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクトによって公開される<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティによってアクセスされるコレクションとして使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを含むオブジェクトを使用してデータを挿入する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用してデータを挿入する方法を次のコード例に示します。 初期状態で<xref:System.Web.UI.WebControls.DetailsView>は、自動的`NorthwindEmployee`に生成された**挿入**ボタンと共に新しいレコードが表示されます。 <xref:System.Web.UI.WebControls.DetailsView>コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>は、挿入操作を実行するメソッドを識別します。  
  
 この例では、 `UpdateEmployeeInfo`メソッドを使用して挿入を実行します。ただし、 `NorthwindEmployee`データを挿入するにはパラメーターが必要です。 このため、 <xref:System.Web.UI.WebControls.DetailsView>コントロールが自動的に渡す文字列のコレクションは十分ではありません。 デリゲートは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントを処理し、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作を続行する前に入力パラメーターを操作できるようにするオブジェクトです。 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>  `NorthwindEmployeeInserting` メソッドでは、パラメーター `NorthwindEmployee`としてオブジェクトが必要であるため、1つは文字列のコレクションを使用<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>して作成され、`ne`メソッドが要求するパラメーター名 () を使用してコレクションに追加されます。 `UpdateEmployeeInfo` 既存の中間層オブジェクトを、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロール専用に設計されていない型およびメソッドを含むデータソースとして使用する場合は、このような手順を実行できます。  
  
 操作が実行されると、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって識別されるメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> オブジェクトの<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、コレクションには、正常に完了するためのメソッドシグネチャパラメーターと一致する名前のパラメーターが含まれている必要があります。 `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。  
  
-   `EmployeeLogic`クラス。ビジネスロジックをカプセル化するステートレスクラスです。  
  
-   `NorthwindEmployee`クラス。これは、データ層からデータを読み込み、永続化するために必要な基本機能のみを含むモデルクラスです。  
  
 追加`NorthwindDataException`のクラスが便宜的に提供されています。 完全な作業例については、これらのクラスをコンパイルして使用する必要があります。 `UpdateEmployeeInfo`メソッドは完全には実装されていないため、この例を試してみると、Northwind Traders データベースにデータが挿入されません。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを挿入するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを挿入するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを挿入することを想定しています。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> オブジェクト <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
## <a name="object-lifetime"></a>オブジェクトの有効期間  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって識別されるメソッドには、インスタンスメソッドまたは`static` (`Shared` Visual Basic) メソッドを使用できます。 インスタンスメソッドの場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>と<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>イベントを処理して、ビジネスオブジェクトを操作してから、プロパティが呼び出されるようにすることができます。 また、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>プロパティによっ<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>て指定されたメソッドが呼び出された後に発生するイベントを処理することもできます。 ビジネスオブジェクトが<xref:System.IDisposable>インターフェイス<xref:System.IDisposable.Dispose%2A>を実装している場合は、オブジェクトが破棄される前にメソッドが呼び出されます。 `static`メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> (`Shared` Visual Basic) の場合、ビジネスオブジェクトは作成されず、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、の各イベントを処理することはできません。  
  
## <a name="parameter-merging"></a>パラメーターのマージ  
 パラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>次の3つのソースからコレクションに追加されます。  
  
-   実行時にデータバインドコントロールから。  
  
-   要素から`InsertParameters`宣言によって。  
  
-   プログラムに`Inserting`よってメソッドから。  
  
 まず、データバインドコントロールから生成されたすべてのパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクションに追加します。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource>およびと`Name` <xref:System.Web.UI.WebControls.GridView> `Number` `Name`いう列を持つコントロールにコントロールがバインドされている場合、およびのパラメーターはコレクションに追加されます。 `Number` これらのパラメーターのデータ型は`string`です。 次に、 `InsertParameters`要素に示されているパラメーターが追加されます。 `InsertParameters`要素内のパラメーターが、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクション内に既に存在するパラメーターと同じ名前で見つかった場合、既存のパラメーターは、 `InsertParameters`要素で指定されているパラメーターと一致するように変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントのパラメーターをプログラムによって追加および削除できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>これは、メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティに置き換えます。  
  
## <a name="method-resolution"></a>メソッドの解決方法  
 メソッドが呼び出されると、データバインドコントロールのデータフィールド、 `InsertParameters`要素で宣言によって作成されたパラメーター、および<xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントハンドラーに追加されたパラメーターがすべてマージされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> (詳細については、前のセクションを参照してください)。次<xref:System.Web.UI.WebControls.ObjectDataSource>に、オブジェクトは、呼び出すメソッドの検索を試みます。 最初に、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致する<xref:System.InvalidOperationException>ものが見つからない場合は、例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティによって指定された型にという`InsertARecord`2 つのメソッドがあるとします。 1 `InsertARecord`つの`ID`パラメーターとがあり、 `Name`もう`InsertARecord`一方にはとと`Number`いう2つのパラメーターがあります。 コレクションにという名前`ID` `InsertARecord`のパラメーターが1つしかない場合、 `ID`パラメーターだけを持つメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティが設定されている場合、メソッドは別の方法で解決されます。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、プロパティで指定されている型<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>の1つ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>のパラメーターを受け取る、プロパティに指定されている名前のメソッドを検索します。 この場合、パラメーターの名前は関係ありません。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを含むオブジェクトを使用してデータを挿入する方法を示します。 2番目のコード例では、最初のコード例で使用されている中間層ビジネスオブジェクトの例を示します。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用してデータを挿入する方法を次のコード例に示します。 初期状態で<xref:System.Web.UI.WebControls.DetailsView>は、自動的`NorthwindEmployee`に生成された**挿入**ボタンと共に新しいレコードが表示されます。 <xref:System.Web.UI.WebControls.DetailsView>コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>は、挿入操作を実行するメソッドを識別します。  
  
 この例では、 `UpdateEmployeeInfo`メソッドを使用して挿入を実行します。ただし、 `NorthwindEmployee`データを挿入するにはパラメーターが必要です。 このため、 <xref:System.Web.UI.WebControls.DetailsView>コントロールが自動的に渡す文字列のコレクションは十分ではありません。 デリゲートは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>イベントを処理し、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>操作を続行する前に入力パラメーターを操作できるようにするオブジェクトです。 <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler>  `NorthwindEmployeeInserting` メソッドでは、パラメーター `NorthwindEmployee`としてオブジェクトが必要であるため、1つは文字列のコレクションを使用<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>して作成され、`ne`メソッドが要求するパラメーター名 () を使用してコレクションに追加されます。 `UpdateEmployeeInfo` 既存の中間層オブジェクトを、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロール専用に設計されていない型およびメソッドを含むデータソースとして使用する場合は、このような手順を実行できます。  
  
 操作が実行されると、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって識別されるメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> オブジェクトの<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、コレクションには、正常に完了するためのメソッドシグネチャパラメーターと一致する名前のパラメーターが含まれている必要があります。 `Insert`  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/objds4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/objds4vb.aspx#1)]  
  
 次のコード例は、前のコード例で使用している中間層ビジネスオブジェクトの例を示しています。 このコード例は、次の2つの基本クラスで構成されています。  
  
-   `EmployeeLogic`クラス。ビジネスロジックをカプセル化するステートレスクラスです。  
  
-   `NorthwindEmployee`クラス。これは、データ層からデータを読み込み、永続化するために必要な基本機能のみを含むモデルクラスです。  
  
 追加`NorthwindDataException`のクラスが便宜的に提供されています。 完全な作業例については、これらのクラスをコンパイルして使用する必要があります。 `UpdateEmployeeInfo`メソッドは完全には実装されていないため、この例を試してみると、Northwind Traders データベースにデータが挿入されません。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/CS/northwindemployee4.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_4/VB/northwindemployee4.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" /> プロパティによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティで識別されたメソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクションに格納されているパラメーターの名前と型は、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティのシグネチャに含まれるパラメーターの名前と型と一致する必要があります。 パラメーター名では大文字と小文字が区別されます。 コントロール<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.ObjectDataSource>や<xref:System.Web.UI.WebControls.DetailsView>コントロールなどのパラメーターを指定するデータバインドコントロールを使用する場合、コントロールは、コレクションに明示的に指定されているすべてのパラメーターを、データバインドコントロールによって提供されます。 データバインドコントロールは常にパラメーターを型として<xref:System.String>指定し、メソッドシグネチャに数値型または日付型が含まれている場合は、正しい型のパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクションに明示的に含める必要があるため、これは重要です。 それ以外の<xref:System.Web.UI.WebControls.ObjectDataSource>場合、コントロールは、コレクション内のパラメーターで定義されている型に従って、パラメーターをキャストしようとします。 詳細については、「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けられているに含まれる<xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>プロパティを取得します。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>については、「」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを含むオブジェクトを使用してデータを挿入する方法を示します。 2番目のコード例では、最初`Insert`のコード例で使用するメソッドの実装例を示します。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用してデータを挿入する方法を次のコード例に示します。 初期状態で<xref:System.Web.UI.WebControls.DetailsView>は、自動的に生成された**挿入**ボタンと共`NorthwindEmployee`に、新しいレコードのデータを入力できるテキストボックスが表示されます。 <xref:System.Web.UI.WebControls.DetailsView>コントロールのフィールドにデータを入力したら、**[挿入]** ボタンをクリックします。 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>は、挿入操作を実行するメソッドを識別します。  
  
 **[挿入]** ボタンをクリックすると、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって指定されたメソッドと、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>コレクションで指定されているすべてのパラメーターを使用して、操作が実行されます。 このコード例では、スーパーバイザーの ID に対応<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>する1つのパラメーターがコレクションに指定されています。 これは、 <xref:System.Web.UI.WebControls.GridView.Rows%2A> ID が<xref:System.Web.UI.WebControls.BoundField>オブジェクトとして<xref:System.Web.UI.WebControls.DetailsView>コントロールのコレクションに表示されている場合でも、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに文字列として渡されるためです。 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> <xref:System.Web.UI.WebControls.Parameter.Type%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>値に<xref:System.Int32>設定されたプロパティを使用してコレクションに明示的に追加することによって、は文字列ではなく、としてメソッドに正しく渡されます。 <xref:System.TypeCode.Int32>  
  
 操作が実行されると、 <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティによって識別されるメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> オブジェクトの<xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>メソッドにパラメーターを含むメソッドシグネチャが含まれている場合、コレクションには、正常に完了するためにメソッドシグネチャパラメーターと一致する名前を持つパラメーターを含める必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>プロパティに置き換えます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/objds8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/objds8vb.aspx#1)]  
  
 前のコード例で使用している`Insert`メソッドの実装例を次のコード例に示します。 メソッドは<xref:System.Web.UI.WebControls.ObjectDataSource> 、クラスの概要`EmployeeLogic`で提供されている中間層のオブジェクトに追加されます。これにより、オブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource>は、実際のに対して大幅な書き直しを行うことなく、Web シナリオのコントロールでより簡単に作業できるようになります。 `InsertNewEmployeeWrapper`ビジネスロジック。  
  
 この例を実行するには、 `NorthwindEmployee` <xref:System.Web.UI.WebControls.ObjectDataSource>クラスの概要に用意されているクラスが必要です。 この例では、 <xref:System.Web.UI.WebControls.ObjectDataSource>パラメーターを使用して新しいデータベースレコードのデータを取得するビジネスオブジェクトメソッドにを接続する方法についてのみ説明します。 この例では、データベースにレコードを追加しませ`Save`ん。これ`NorthwindEmployee`は、クラスのメソッドにデータベースを更新するためのコードが含まれていないためです。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/CS/northwindemployee8.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_8/VB/northwindemployee8.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.InsertMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="objectDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">保存したコントロールのビューステートの値を格納しているオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、主に .NET Framework インフラストラクチャによって使用されます。独自に作成したコードから直接使用するためのものではありません。 ただし、コントロールの開発者は、このメソッドをオーバーライドして、カスタムサーバーコントロールがビューステートを復元する方法を指定できます。 詳細については、「 [ASP.NET State Management の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))」を参照してください。  
  
 メソッドは、以前に保存した<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールのビューステートを読み込むために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.LoadViewState%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッド<see cref="M:System.Web.UI.WebControls.ObjectDataSource.LoadViewState(System.Object)" />は、コントロールを拡張するときに、主<see cref="T:System.Web.UI.WebControls.ObjectDataSource" />にコントロールの開発者によって使用されます。</para></block>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="MaximumRowsParameterName">
      <MemberSignature Language="C#" Value="public string MaximumRowsParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string MaximumRowsParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property MaximumRowsParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ MaximumRowsParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MaximumRowsParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("maximumRows")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ページングをサポートするために取得するレコード数を示す際に使用する、ビジネス オブジェクトのデータ取得メソッドのパラメーター名を取得または設定します。</summary>
        <value>取得するレコード数を示すために使用する <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> パラメーターの名前。 既定値は<c>"Maximumrows"</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>は、データソースのページングをサポートするために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールでのページングのサポートの詳細については<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>、「」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。  
  
 Web ページには、 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>プロパティがに`true`設定されたコントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティ <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> とプロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、 <xref:System.Web.UI.WebControls.DropDownList>コントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DropDownList>コントロールのイベントのハンドラーを示しています。 ハンドラーのコードは、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティをユーザーの選択に設定します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、 `GetSubsetOfEmployees` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに割り当てられたという名前のメソッドが含まれています。 この例には、 `GetEmployeeCount` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティに割り当てられているという名前のメソッドも含まれています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreated As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreated;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreated : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが作成された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジネスオブジェクトで他のメソッドを呼び出したり、プロパティを設定したり、ビジネスオブジェクトに固有のその他の初期化を実行し<xref:System.Web.UI.WebControls.ObjectDataSource>たりするために、イベントを処理してデータ操作を実行する前に business object data メソッドを呼び出します。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> . オブジェクトへの参照は、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>オブジェクトによって公開されているプロパティによってアクセスされます。  
  
 データ操作を実行するように指定されたメソッド`static`が`Shared` (Visual Basic) の場合<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>イベントとイベントは発生しません。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectCreating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectCreating As ObjectDataSourceObjectEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceObjectEventHandler ^ ObjectCreating;" />
      <MemberSignature Language="F#" Value="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " Usage="member this.ObjectCreating : System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが作成される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ操作を実行するように指定されたメソッド`static`が`Shared` (Visual Basic) の場合<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>イベントとイベントは発生しません。  
  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、ビジネスオブジェクトのパラメーターなしのコンストラクターを自動的に呼び出して、リフレクションを使用してそのインスタンスを作成します。 イベントを処理して別のコンストラクターを明示的に呼び出し、結果として生成さ<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>れるオブジェクトのインスタンス<xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>を、関連付けられたオブジェクトのプロパティに設定します。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールのオブジェクトを使用して情報を表示する方法を示します。 2番目のコード例では、最初のコード例で使用される中間層ビジネスオブジェクトを提供します。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを使用して情報を表示する方法を次のコード例に示します。 Web ページで実行されるすべてのデータ操作に対して (時間またはリソースの観点から) 作成するのに非常にコストがかかるビジネスオブジェクトを使用する場合があります。 高価なオブジェクトを操作する方法の1つとして、そのインスタンスを1回作成した後、データ操作ごとに作成して破棄するのではなく、後続の操作用にキャッシュする方法があります。  
  
> [!NOTE]
>  実稼働アプリケーションでは、同じインスタンスを使用して複数の要求が同時に終了する場合があります。 そのため、オブジェクトはスレッドセーフな方法で実装する必要があります。  
  
 このコード例は、このパターンを示しています。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>イベントを処理して、最初にオブジェクトのキャッシュをチェックし、オブジェクトがまだキャッシュされていない場合にのみ、オブジェクトのインスタンスを作成することができます。 次に、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>イベントを処理して、ビジネスオブジェクトを破棄するのではなく、将来使用するためにキャッシュします。 この<xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType>コード例では、オブジェクト`true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>のプロパティがに設定されてい<xref:System.Web.UI.WebControls.ObjectDataSource>ます。これ<xref:System.IDisposable.Dispose%2A>は、がオブジェクトの呼び出しを行わないように指示するためです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 次のコード例では、前のコード例で使用している中間層ビジネスオブジェクトの例を示します。 このコード例は、ビジネスロジックをカプセル化するステートフルクラス`EmployeeLogic`である、クラスで定義された基本的なビジネスオブジェクトで構成されています。 完全な作業例を実行するには、このコードをライブラリとしてコンパイルし、ASP.NET ページ (.aspx ファイル) からこれらのクラスを使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ObjectDisposing">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ObjectDisposing As ObjectDataSourceDisposingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceDisposingEventHandler ^ ObjectDisposing;" />
      <MemberSignature Language="F#" Value="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " Usage="member this.ObjectDisposing : System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" /> プロパティで識別されるオブジェクトが破棄される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>イベントは、ビジネスオブジェクトのインスタンスが破棄される前に常に発生します。 ビジネスオブジェクトが<xref:System.IDisposable>インターフェイスを実装している<xref:System.IDisposable.Dispose%2A>場合、このイベントが発生した後にメソッドが呼び出されます。  
  
 オブジェクトの他のメソッドを呼び出したり、プロパティを設定したり、オブジェクトが破棄される前にオブジェクトに固有のクリーンアップを実行したりするために、イベントを処理します。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> オブジェクトへの参照は、 <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A> <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>オブジェクトによって公開されているプロパティによってアクセスされます。  
  
 LINQ to SQL クラスを持つ<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用する場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>イベントのハンドラーでデータコンテキストクラスの破棄をキャンセルする必要があります。 この手順が必要になるのは、LINQ to SQL で遅延<xref:System.Web.UI.WebControls.ObjectDataSource>実行がサポートされているのに対し、コントロールが選択操作後にデータコンテキストを破棄しようとするためです。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールのオブジェクトを使用して情報を表示する方法を示します。 2番目のコード例では、最初のコード例で使用される中間層ビジネスオブジェクトを提供します。  
  
 ビジネスオブジェクト<xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.GridView>とコントロールを使用して情報を表示する方法を次のコード例に示します。 Web ページで実行されるすべてのデータ操作に対して (時間またはリソースの観点から) 作成するのに非常にコストがかかるビジネスオブジェクトを使用する場合があります。 高価なオブジェクトを操作する方法の1つとして、そのインスタンスを1回作成した後、データ操作ごとに作成して破棄するのではなく、後続の操作用にキャッシュする方法があります。 この例は、このパターンを示しています。 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>イベントを処理して、最初にオブジェクトのキャッシュをチェックし、そのインスタンスがまだキャッシュされていない場合は、そのインスタンスを作成することができます。 次に、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>イベントを処理して、ビジネスオブジェクトを破棄するのではなく、将来使用するためにキャッシュします。 この<xref:System.ComponentModel.CancelEventArgs.Cancel?displayProperty=nameWithType>コード例では、オブジェクト`true` <xref:System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs>のプロパティをに設定して、 <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトの<xref:System.IDisposable.Dispose%2A>メソッドを呼び出さないようにに指示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/objds16cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_16#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/objds16vb.aspx#1)]  
  
 次のコード例では、前のコード例で使用している中間層ビジネスオブジェクトの例を示します。 このコード例は、ビジネスロジックをカプセル化するステートフルクラス`EmployeeLogic`である、クラスで定義された基本的なビジネスオブジェクトで構成されています。 完全な作業例を実行するには、このコードをライブラリとしてコンパイルし、ASP.NET ページ (.aspx ファイル) からこれらのクラスを使用する必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/CS/northwindemployee16.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_16#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_16/VB/northwindemployee16.vb#2)]  
  
 次の例は、LINQ to SQL クラスを<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>持つ<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用する場合のイベントの処理方法を示しています。  
  
```vb  
Public Sub ExampleObjectDisposing(ByVal sender As Object, _   
        ByVal e As ObjectDataSourceDisposingEventArgs)  
    e.Cancel = True  
End Sub  
```  
  
```csharp  
public void ExampleObjectDisposing(object sender,   
        ObjectDataSourceDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see langword="Delete" /> メソッドまたは <see langword="Update" /> メソッドに渡される元の値のパラメーター名に適用される書式指定文字列を取得または設定します。</summary>
        <value><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Delete" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> メソッドに渡される <paramref name="oldValues" /> パラメーターまたは key パラメーターの名前に適用される書式指定文字列を表す文字列。 既定値は<c>"{0}"</c>です。これは、パラメーター名がフィールド名であることを意味します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>プロパティの値が主キーに適用されるのは、データバインドコントロールの`DataKeyNames`プロパティで識別されるものや、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> <xref:System.Web.UI.ConflictOptions.CompareAllValues>プロパティがに設定されている削除と更新のシナリオなどです。値、および元の値のセットが対応するデータメソッドに渡されます。  
  
 次に、プロパティを<xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>変更する可能性がある2つの一般的なシナリオを示します。  
  
-   更新プログラムの古い値と新しい値を区別するように、プロパティを変更することができます。 プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、元の<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>値と新しい値の両方のパラメーターがコレクションに追加されます。 <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> 書式設定文字列がない場合、データフィールドごとに同じ名前の2つのパラメーターが作成されます。 元の値パラメーターの名前を変更することで、データを元のデータソースと比較して競合を検出し、キー値を比較することができます。  
  
-   一部のビジュアルデザイナーでは、元の値とキーに対して特定の名前付けスキームが実装されています。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.ConflictDetection" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="objectDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Page.LoadComplete" /> コントロールを格納するページに <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> イベント ハンドラーを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.ObjectDataSource.OnInit(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <altmember cref="M:System.Web.UI.Control.OnInit(System.EventArgs)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="ParsingCulture">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ParsingCulture ParsingCulture" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberSignature Language="VB.NET" Value="Public Property ParsingCulture As ParsingCulture" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParsingCulture ParsingCulture { System::Web::UI::WebControls::ParsingCulture get(); void set(System::Web::UI::WebControls::ParsingCulture value); };" />
      <MemberSignature Language="F#" Value="member this.ParsingCulture : System.Web.UI.WebControls.ParsingCulture with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.ParsingCulture" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParsingCulture</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName" /> で示される型のオブジェクトを構築するために文字列値を実際のプロパティ型に変換するときに使用するカルチャ情報を示す値を取得または設定します。</summary>
        <value>カルチャ情報。 既定値は <see cref="F:System.Web.UI.WebControls.ParsingCulture.Invariant" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Globalization.CultureInfo" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="objectDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。コントロールに関連付けられているビューステートがない場合は <see langword="null" /> を返します。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Function Select () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select();" />
      <MemberSignature Language="F#" Value="member this.Select : unit -&gt; System.Collections.IEnumerable" Usage="objectDataSource.Select " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> コレクション内のパラメーターを持つ <see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" /> プロパティで識別されるメソッドを呼び出して、基になるデータ ストレージからデータを取得します。</summary>
        <returns>データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたメソッドはメソッドシグネチャを持つ場合がありますが、コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource>正常に呼び出すには、次の表に示されている型のいずれかから返されるか、またはその型から派生する必要があります。  
  
|戻り値の型|アクション|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|は<xref:System.Collections.IEnumerable> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。|  
|<xref:System.Data.DataTable>|はを使用して作成され、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。 <xref:System.Data.DataTable> <xref:System.Data.DataView>|  
|<xref:System.Data.DataView>|は<xref:System.Data.DataView> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。|  
|<xref:System.Data.DataSet>|の最初<xref:System.Data.DataTable>の<xref:System.Data.DataView> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>が抽出され、が作成され、メソッドによって返されます。 <xref:System.Data.DataSet>|  
|<xref:System.Object>|オブジェクトは、1つの要素<xref:System.Collections.IEnumerable>のコレクションにラップされ、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。|  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって識別されるメソッドには、インスタンスメソッドまたは`static` (`Shared` Visual Basic) メソッドを使用できます。 インスタンスメソッドの場合、ビジネスオブジェクトは、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドが呼び出されるたびに作成され、破棄されます。ただし、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティで指定されたメソッドと、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティによって指定されたメソッド。 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>は、 <xref:System.Collections.IEnumerable>インターフェイスを返します。 ただし、キャッシュとフィルター処理のシナリオを有効にするには、 <xref:System.Data.DataSet>戻り値がオブジェクトである必要があります。 <xref:System.Collections.IEnumerable> <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Data.DataView>クラスはインターフェイスを実装していませんが、コントロールはを実装する既定のコントロール<xref:System.Collections.IEnumerable>を自動的に抽出します。 <xref:System.Data.DataSet>  
  
 操作が実行<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントを処理して、パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>操作の前に前処理を実行したりすることができます。 データ取得操作を実行するために<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、オブジェクトはリフレクションを使用し<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>て、プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>プロパティを使用して、プロパティによって識別されるメソッドを呼び出します。 操作が完了すると<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>が発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>イベントを処理して、戻り値、出力パラメーター、および例外を確認したり、後処理を実行したりすることができます。  
  
 プロパティが<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> <xref:System.Data.DataSet>、 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、または <xref:System.Data.DataView> オブジェクトを返し、キャッシュが有効になっている場合、はからデータを取得し、操作中にデータをキャッシュに保存します。 <xref:System.Data.DataTable> キャッシュは、プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>プロパティの組み合わせによって指定されたキャッシュの動作に基づいて、作成、破棄、または更新されます。  
  
 <xref:System.Data.DataSet> プロパティが <xref:System.Data.DataTable> オブジェクトまたは <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> オブジェクトを返し、プロパティが指定されている場合は、指定されたプロパティを使用して評価され、結果として得られるフィルターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>  <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A><xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>操作。  
  
 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に<xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>関連付けられているのメソッドにデリゲートします。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>については、「」を参照してください。  
  
## <a name="data-bound-controls"></a>データバインドコントロール  
 コントロールがデータバインドコントロール ( <xref:System.Web.UI.WebControls.GridView>コントロールなど) に関連付けられている場合、ページコードから<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource> 代わりに<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> 、データバインドコントロールによってメソッドが直接呼び出されます。  
  
   
  
## Examples  
 コード例については、「<xref:System.Web.UI.WebControls.ObjectDataSource>」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCountMethod">
      <MemberSignature Language="C#" Value="public string SelectCountMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCountMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCountMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCountMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCountMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>行数を取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>行数を取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 このメソッドは、整数 (<see cref="T:System.Int32" />) を返す必要があります。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>は、データソースのページングをサポートするために、行の合計数を取得するために使用されるビジネスオブジェクトのメソッドを識別します。 プロパティは、プロパティがに設定<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>されている`true`場合にのみ評価されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールでのページングのサポートの詳細については<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>、「」を参照してください。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。  
  
 Web ページには、 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>プロパティがに`true`設定されたコントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティ <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> とプロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、 <xref:System.Web.UI.WebControls.DropDownList>コントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DropDownList>コントロールのイベントのハンドラーを示しています。 ハンドラーのコードは、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティをユーザーの選択に設定します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、 `GetSubsetOfEmployees` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに割り当てられたという名前のメソッドが含まれています。 この例には、 `GetEmployeeCount` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティに割り当てられているという名前のメソッドも含まれています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>処理して、戻り値または出力パラメーターの値を調べたり、操作の<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>関連付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。  
  
 最初の例は、2つ<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList> 、コントロール、および<xref:System.Web.UI.WebControls.DetailsView>コントロールを含む Web ページを示しています。 最初<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList>とコントロールを使用して、データベースから従業員名を取得して表示します。 2番<xref:System.Web.UI.WebControls.ObjectDataSource>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>とイベントのハンドラーを示しています。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>ハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>ハンドラーは、更新されるデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As ObjectDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションに<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>固有の追加の初期化を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource>データ取得操作を実行する前にパラメーター値を変更したりするために、イベントを処理します。 パラメーターは、 <xref:System.Collections.IDictionary> <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクトによって公開される<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティによってアクセスされるコレクションとして使用できます。  
  
 このイベントは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティが設定されている場合に、メソッドの1回の呼び出しに対して2回発生することがあります。 オブジェクトのプロパティは、 <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs.ExecutingSelectCount%2A> select がデータの取得またはカウントの取得のために呼び出されたかどうかを判断するために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs>  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データを取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールが呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを取得するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定されたメソッドは任意のメソッドシグネチャを持つことができますが、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールが正常に呼び出すには、次の表に示すいずれかの型を返す必要があります。  
  
|戻り値の型|アクション|  
|-----------------|------------|  
|<xref:System.Collections.IEnumerable>|は<xref:System.Collections.IEnumerable> 、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。|  
|<xref:System.Data.DataTable>|はを使用し<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>て<xref:System.Data.DataTable>作成され、メソッドによって返さ<xref:System.Data.DataView>れます。|  
|<xref:System.Data.DataView>|は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。 <xref:System.Data.DataView>|  
|<xref:System.Data.DataSet>|の最初<xref:System.Data.DataTable> <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> の <xref:System.Data.DataView> が抽出され、が作成され、メソッドによって返されます。 <xref:System.Data.DataSet>|  
|<xref:System.Object>|オブジェクトは、1つの要素<xref:System.Collections.IEnumerable>のコレクションにラップされ、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドによって返されます。|  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource>クラスを使用してデータを削除または更新する場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>コレクションまたは<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクション内<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロールに対して構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認してください。.  
  
## <a name="object-lifetime"></a>オブジェクトの有効期間  
 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって識別されるメソッドには、インスタンスメソッドまたは`static` (`Shared` Visual Basic) メソッドを使用できます。 インスタンスメソッドの場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 プロパティで<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 指定されたメソッドが呼び出される前に、イベントおよびイベントを処理してビジネスオブジェクトを操作できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> また、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによっ<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>て指定されたメソッドが呼び出された後に発生するイベントを処理することもできます。 ビジネスオブジェクトが<xref:System.IDisposable>インターフェイス<xref:System.IDisposable.Dispose%2A>を実装している場合は、オブジェクトが破棄される前にメソッドが呼び出されます。 `static`メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> (`Shared` Visual Basic) の場合、ビジネスオブジェクトは作成されず、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、の各イベントを処理することはできません。  
  
## <a name="parameter-merging"></a>パラメーターのマージ  
 パラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>次のソースからコレクションに追加されます。  
  
-   要素から宣言`SelectParameters`によって宣言されます。  
  
-   メソッドからプログラム`Selecting`で。  
  
 最初に、 `SelectParameters`要素に示されているパラメーターが追加されます。 2つ目は、パラメーターがプログラムによっ<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>て追加および削除される<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>イベントです。これは、メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに置き換えます。  
  
## <a name="method-resolution"></a>メソッドの解決方法  
 メソッドが呼び出されると、データバインドコントロールのデータフィールド、 `SelectParameters`要素で宣言によって作成されたパラメーター、および<xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントハンドラーに追加されたパラメーターがすべてマージされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> (詳細については、前のセクションを参照してください)。次<xref:System.Web.UI.WebControls.ObjectDataSource>に、コントロールは、呼び出すメソッドの検索を試みます。 最初に、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致する<xref:System.InvalidOperationException>ものが見つからない場合は、例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティによって指定された型にという`SelectARecord`2 つのメソッドがあるとします。 1 `SelectARecord`つの`ID`パラメーターとがあり、 `Name`もう`SelectARecord`一方にはとと`Number`いう2つのパラメーターがあります。 コレクションにという名前`ID` `SelectARecord`のパラメーターが1つしかない場合、 `ID`パラメーターだけを持つメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティが設定されている場合、メソッドは別の方法で解決されます。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、プロパティで指定されている型<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>の1つ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>のパラメーターを受け取る、プロパティに指定されている名前のメソッドを検索します。 この場合、パラメーターの名前は関係ありません。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールが Web フォームページの<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用してデータを表示する方法を示しています。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、その<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティとプロパティを使用してデータ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>を取得するために呼び出されるメソッドを使用して、部分的または完全に修飾されたクラス名を識別します。 実行時に、オブジェクトが作成され、リフレクションを使用してメソッドが呼び出されます。 コントロール<xref:System.Web.UI.WebControls.GridView>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに<xref:System.Collections.IEnumerable>よって指定されたメソッドによって返されるコレクションを列挙し、データを表示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドにより使用されるパラメーターのコレクションを取得します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> プロパティで指定されたメソッドにより使用されるパラメーターのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けられているオブジェクトの<xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>プロパティを取得します。  
  
 パラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>コレクションに追加するには、 `SelectParameters`要素を使用するか、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントのハンドラーでプログラムでパラメーターを追加します。 実行時には、 `SelectParameters`要素に列挙されているパラメーターが最初にコレクションに追加されます。 コレクション内のパラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントのハンドラーによって追加または削除されます。 イベントは、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドが実行される前に発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>  
  
 メソッドを実行する前に、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>コレクションに格納されているパラメーターの名前と型が、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティで指定されたメソッドのシグネチャと一致している必要があります。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> たとえば、 `GetEmployeesByStateAndAge` `string`という名前の select メソッドがパラメーターとしてと整数を受け取る<xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>場合、コレクションには2つのパラメーターが含まれている必要があります。 最初のパラメーターは文字列に解決される必要があり、2番目のパラメーターは整数に解決される必要があります。 要素のマークアップでは、 `SelectParameters`両方のパラメーターを指定できます。 または、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントハンドラーに追加することも、1つのパラメーターをマークアップに追加することもできます。もう1つのパラメーターは、プログラムによって追加できます。  
  
 詳細については、「 [ObjectDataSource コントロール](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)と<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod>プロパティでのパラメーターの使用」を参照してください。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>イベントハンドラーのコード、または<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティによって指定されたメソッド内で、クライアントから受信したすべてのパラメーター値を検証してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用して1つのデータレコードを取得し、 <xref:System.Web.UI.WebControls.DetailsView>コントロールに表示する方法を示しています。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、 `EmployeeLogic`クラスの`GetEmployee`メソッドを呼び出すことによって特定の従業員レコードを取得します。 メソッド`GetEmployee`には employee ID パラメーターが必要です。 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、マーク`QueryStringParameter`アップ内の要素を使用<xref:System.Web.UI.WebControls.QueryStringParameter>して、指定されたクエリ文字列パラメーターの値を URL `GetEmployee`から取得し、それをメソッドに渡すオブジェクトを作成します。  
  
 他のパラメータークラスは、コントロールのプロパティ、フォームフィールド、cookie、ASP.NET プロファイルデータ、セッション状態など、他のソースから値を取得するために使用できます。 また、マークアップで定義されたパラメーターオブジェクトを使用して、ハードコーディングされた値を select メソッドに渡すこともできます。 使用可能なパラメータークラスの詳細については、「[フィルター処理のためのデータソースコントロールでのパラメーターの使用](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))」を参照してください。  
  
 この例を実行するには、次のものが必要です。  
  
-   Northwind Traders データベースに接続するという名前`NorthwindConnection`の接続文字列を持つ Web サイト。 詳細については、 <xref:System.Web.UI.WebControls.ObjectDataSource>クラスの概要に関するトピックを参照してください。  
  
-   クラスの概要のコード例`EmployeeLogic`の1つとして表示さ<xref:System.Web.UI.WebControls.ObjectDataSource>れるクラス。 クラスファイルは、App_Code フォルダーに配置されている必要があります。  
  
-   サンプルコードは .aspx ページとして実行できます。 クエリ文字列パラメーターを指定せずにページを要求すると、エラーメッセージが表示されます。 .Aspx ファイルの名前の`?empid=1`後などのクエリ文字列を使用してページを要求すると、要求された従業員の詳細が表示されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/CS/objds3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_3/VB/objds3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースの並べ替えをサポートするために、<see cref="P:System.Web.UI.WebControls.ObjectDataSource.SelectMethod" /> パラメーターで並べ替え式を指定する際に使用したビジネス オブジェクトの名前を取得また設定します。</summary>
        <value>データの並べ替えに使用するパラメーターを示すために使用するメソッド パラメーターの名前。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A>は、データソースの並べ替えをサポートするために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> オブジェクトに対し <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> て<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>プロパティが設定され、メソッドに渡されると、データの並べ替えに使用されるビジネスオブジェクトメソッドのパラメーター名が値によって識別されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>  <xref:System.Web.UI.DataSourceSelectArguments>  
  
 がデータバインドコントロールに関連付けられている場合、このパラメーターに渡される値は、コンマ区切りのフィールド値の後に`"ASC"`または`"DESC"`が続きます。 <xref:System.Web.UI.WebControls.ObjectDataSource> たとえば、昇順の並べ替えの値はに`Name` `"Name ASC"`なります。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、並べ替えをサポートする型を実装する方法を示します。 2番目のコード例では、並べ替え式を実装する方法を示します。  
  
 次のコード例は、並べ替えをサポートする型を実装する方法を示しています。 クラスのは`SelectMethod` 、パラメーターを`sortExpression`受け取ります。 `SortingData` に`SelectMethod`渡される文字列は、によって`SelectMethod`返さ<xref:System.Data.DataView.Sort%2A>れる<xref:System.Data.DataView>オブジェクトのプロパティに使用されます。  
  
 [!code-csharp[ObjectDataSourceSorting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingData.cs#1)]
 [!code-vb[ObjectDataSourceSorting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingData.vb#1)]  
  
 次のコード例は、並べ替え式を実装する方法を示しています。 Web ページのコードによって、 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールのインスタンスが作成されます。 プロパティがに`SortingData` 設定され、 `sortExpression` プロパティがに設定されています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SortParameterName%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> コントロールのプロパティがに<xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> `true`設定されています。 <xref:System.Web.UI.WebControls.GridView> ユーザーが**並べ替え**ボタンをクリックすると、フィールド名、 `Name`また`Number`はが sort パラメーター `SelectMethod`のに渡されます。  
  
 [!code-aspx-csharp[ObjectDataSourceSorting#2](~/samples/snippets/csharp/VS_Snippets_WebNet/ObjectDataSourceSorting/CS/SortingDataExample.aspx#2)]
 [!code-aspx-vb[ObjectDataSourceSorting#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ObjectDataSourceSorting/VB/SortingDataExampleVB.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanSort" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す、セミコロンで区切られた文字列を取得または設定します。</summary>
        <value>SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、データキャッシュの<xref:System.Web.Caching.SqlCacheDependency>オブジェクトに基づくオプションの有効期限ポリシーをサポートします (サービスをデータベースサーバー用に構成する必要があります)。  
  
 SQL Server では、ポーリングと通知という2つのキャッシュ無効化メカニズムがサポートされています。 各メカニズムには、 <xref:System.Web.Caching.SqlCacheDependency>オブジェクトに対して異なる構文があります。  
  
 で<xref:System.Web.UI.WebControls.ObjectDataSource>は、ポーリングのみがサポートされます。 文字列は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>メソッドが実行さ<xref:System.Data.SqlClient.SqlDependency>れる前に<xref:System.Data.Common.DbCommand>コンストラクターに渡されるオブジェクトを作成するために使用されます。 <xref:System.Web.Caching.SqlCacheDependency> 文字列は、 `@ Page`ディレクティブによって使用されるのと同じ形式に従ってデータベースとテーブルを識別します。ここで、文字列の最初の部分は SQL Server データベースへの接続文字列、その後にコロン区切り記号、最後に名前を付けます。 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A>データベーステーブルの ( `"connectionstring1:table1"`など)。 プロパティが<xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A>複数のテーブルに依存している場合は、接続文字列とテーブル名のペアがセミコロン (など`"connectionstring1:table1";connectionstring2:table2"`) で区切られます。  
  
 通知をサポートするには、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティの実装にキャッシュロジックを記述し、コード内で<xref:System.Web.Caching.SqlCacheDependency>のオブジェクトの構築を処理する必要があります。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、SQL Server キャッシュ依存関係を作成し、 <xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトのプロパティを設定する方法を示します。 2番目のコード例では、オブジェクトを返す<xref:System.Data.DataSet>ラッパーメソッドを実装し、 <xref:System.Web.UI.WebControls.ObjectDataSource>オブジェクトを使用してキャッシュとフィルター処理を有効にする方法を示します。  
  
 次のコード例は、SQL Server キャッシュ<xref:System.Web.UI.WebControls.ObjectDataSource.SqlCacheDependency%2A> <xref:System.Web.UI.WebControls.ObjectDataSource>の依存関係を作成し、コントロールのプロパティを設定する方法を示しています。 この例では、データベースは120秒ごとにポーリングされます。 Northwind Traders Employees テーブル内のデータがその期間中に変更された場合、コントロールによっ<xref:System.Web.UI.WebControls.ObjectDataSource>てキャッシュされ、 <xref:System.Web.UI.WebControls.GridView>コントロールによって表示されるデータはすべて期限切れとなり、ページの次の要求時に新しいデータセットが取得されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/CS/objds7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_7#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_7/VB/objds7vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Data.DataSet> <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用してキャッシュとフィルター処理を有効にするためにオブジェクトを返すラッパーメソッドを実装する方法を示しています。 `EmployeeLogic`クラスの基本実装では、メソッドは`GetAllEmployees` <xref:System.Collections.ArrayList>オブジェクトを返します。 Web <xref:System.Web.UI.WebControls.ObjectDataSource>フォームページでを操作するためにオブジェクトを完全にリファクタリングするのではなく、 `GetAllEmployeesAsDataSet`としてデータの<xref:System.Data.DataSet>セットを`NorthwindEmployee`返すという名前のラッパーメソッドが追加されます。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/CS/northwindemployee5.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_5#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_5/VB/northwindemployee5.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="StartRowIndexParameterName">
      <MemberSignature Language="C#" Value="public string StartRowIndexParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartRowIndexParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property StartRowIndexParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StartRowIndexParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StartRowIndexParameterName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("startRowIndex")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース ページングをサポートするために取得する最初のレコードの識別子の値を示す際に使用する、データ取得メソッドのパラメーター名を取得または設定します。</summary>
        <value>取得する最初のレコードを示すために使用するビジネス オブジェクト メソッドのパラメーターの名前。 このパラメーターは、整数値を返す必要があります。 既定値は<c>"Startrowindex"</c>です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>は、データソースのページングをサポートするために使用されます。 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールでのページングのサポートの詳細については<xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>、「」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびページに表示されるレコード数をユーザーが選択できるようにするデータアクセスクラスを示しています。  
  
 Web ページには、 <xref:System.Web.UI.WebControls.ObjectDataSource> <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>プロパティがに`true`設定されたコントロールが含まれています。 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティは、クエリ内のレコードの合計数を返すメソッドの名前に設定されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName%2A> プロパティ <xref:System.Web.UI.WebControls.ObjectDataSource.StartRowIndexParameterName%2A> とプロパティは、Select メソッドで使用されるパラメーターの名前に設定されます。 このページには、 <xref:System.Web.UI.WebControls.DropDownList>コントロールも含まれています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_17#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ListControl.SelectedIndexChanged?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.DropDownList>コントロールのイベントのハンドラーを示しています。 ハンドラーのコードは、 <xref:System.Web.UI.WebControls.GridView.PageSize%2A>プロパティをユーザーの選択に設定します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/Default3.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/Default3.aspx.vb#2)]  
  
 3番目の例は、Customers テーブルからデータを取得するデータアクセスクラスを示しています。 これには、 `GetSubsetOfEmployees` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに割り当てられたという名前のメソッドが含まれています。 この例には、 `GetEmployeeCount` <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールの<xref:System.Web.UI.WebControls.ObjectDataSource.SelectCountMethod%2A>プロパティに割り当てられているという名前のメソッドも含まれています。 クラスは、LINQ を使用して Customers テーブルに対してクエリを実行します。 この例では、Northwind データベースと Customers テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/CS/App_Code/CustomerLogic.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_17#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_17/VB/App_Code/CustomerLogic.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.MaximumRowsParameterName" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.EnablePaging" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSourceView.CanPage" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Select" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="objectDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールのビューステートの変更を追跡し、<see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.TrackViewState%2A>メソッドは、オブジェクトのビューステートの一部として、コントロールの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="TypeName">
      <MemberSignature Language="C#" Value="public string TypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property TypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TypeName : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.TypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> オブジェクトが表すクラスの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が表すオブジェクトの型を識別する部分修飾クラス名または完全修飾クラス名。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource>コントロールがバインドするオブジェクトのインスタンスを作成するために、コントロールは、リフレクションを使用して、実行時に型名によって識別される型を読み込みます。 したがって、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティの値は、Bin または App_Code ディレクトリに配置されているコードの部分修飾型、またはグローバルアセンブリキャッシュに登録されているコードの完全修飾型名にすることができます。 グローバルアセンブリキャッシュを使用する場合は、machine.config ファイルまたは web.config ファイルの`assemblies`セクションに適切な参照を追加する必要があります。  
  
 この型には、自分でインスタンスを作成するため<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>にイベントを処理する場合を除き、パラメーターなしのコンストラクターが必要です。 型のメソッドがメンバーメソッドの<xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>場合、 <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>、、および<xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>の各メソッドを呼び出すたびに、型のインスタンスが作成されます。 メソッドが`static` (`Shared` Visual Basic) の場合、インスタンスは作成されません。 型が<xref:System.IDisposable>インターフェイス<xref:System.IDisposable.Dispose%2A>を実装している場合は、オブジェクトが破棄される前にメソッドが呼び出されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールが Web フォームページの<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールを使用してデータを表示する方法を示しています。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、その<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティとプロパティを使用してデータ<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>を取得するために呼び出されるメソッドを使用して、部分的または完全に修飾されたクラス名を識別します。 実行時に、オブジェクトが作成され、リフレクションを使用してメソッドが呼び出されます。 コントロール<xref:System.Web.UI.WebControls.GridView>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティに<xref:System.Collections.IEnumerable>よって返されるコレクションを列挙し、データを表示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/objds1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/objds1vb.aspx#1)]  
  
 次の例は、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティ値が参照するクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="objectDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> プロパティと <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" /> コレクション内のパラメーターで識別されるメソッドを呼び出して更新操作を実行します。</summary>
        <returns>基になるデータ ストレージで更新された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ビジネスオブジェクトは、バッチではなく、一度に1つのレコードを更新することを前提としています。  
  
 操作が実行<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>イベントが発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>イベントを処理して、パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>操作の前に前処理を実行したりすることができます。 更新操作を実行するために<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、オブジェクトはリフレクションを使用し<xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>て、プロパティによって識別されるオブジェクトのインスタンスを作成します。 次に、関連付けられている<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>プロパティを使用して、プロパティによって識別されるメソッドを呼び出します。 操作が完了すると<xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>が発生します。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>イベントを処理して、戻り値、出力パラメーター、および例外を確認したり、後処理を実行したりすることができます。  
  
 メソッド<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に<xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>関連付けられているのメソッドにデリゲートします。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>については、「」を参照してください。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティに置き換えます。  
  
## <a name="data-bound-controls"></a>データバインドコントロール  
 コントロールがデータバインドコントロール ( <xref:System.Web.UI.WebControls.GridView>コントロールなど) に関連付けられている場合、ページコードから<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>メソッドを呼び出す必要はありません。 <xref:System.Web.UI.WebControls.ObjectDataSource> 代わりに<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 、データバインドコントロールによってメソッドが直接呼び出されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.DropDownList>コントロール、 <xref:System.Web.UI.WebControls.TextBox>コントロール、およびいくつか<xref:System.Web.UI.WebControls.ObjectDataSource>のオブジェクトを使用してデータを更新する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 コントロール、 <xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.TextBox>コントロール、およびいくつか<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロールを使用してデータを更新する方法を次のコード例に示します。 に Northwind 従業員<xref:System.Web.UI.WebControls.TextBox>の名前が表示され、コントロールを使用して住所情報が入力および更新されます。 <xref:System.Web.UI.WebControls.DropDownList> コレクションに<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>は、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>の選択した値にバインドされたオブジェクトが含まれているため<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 、操作を発生させるボタンは、従業員が選択された後にのみ有効になります。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As ObjectDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを<xref:System.Web.UI.WebControls.ObjectDataSource.Updated>処理して、戻り値または出力パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>操作の完了後に例外がスローされたかどうかを確認したりします。 戻り値、出力パラメーター、および例外処理のプロパティは、イベントに<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>関連付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> コントロールがデータを更新するために呼び出すメソッドまたは関数の名前を取得または設定します。</summary>
        <value>データを更新するために <see cref="T:System.Web.UI.WebControls.ObjectDataSource" /> が使用するメソッドまたは関数の名前を表す文字列。 既定値は空の文字列です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.ObjectDataSource>は、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティによって識別されるメソッドがバッチではなく、一度に1つずつ更新を実行することを前提としています。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>は、 <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けら<xref:System.Web.UI.WebControls.ObjectDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 コレクション内の<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールに対して構成されているパラメーター名が、select メソッドによって返される列名と一致していることを確認します。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>  
  
## <a name="object-lifetime"></a>オブジェクトの有効期間  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティによって識別されるメソッドには、インスタンスメソッドまたは`static` (`Shared` Visual Basic) メソッドを使用できます。 インスタンスメソッドの場合は、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティによって指定されたメソッドが呼び出されるたびに、ビジネスオブジェクトが作成され、破棄されます。 プロパティで<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating> <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated> 指定されたメソッドが呼び出される前に、イベントおよびイベントを処理してビジネスオブジェクトを操作できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> また、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティによっ<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing>て指定されたメソッドが呼び出された後に発生するイベントを処理することもできます。 ビジネスオブジェクトが<xref:System.IDisposable>インターフェイス<xref:System.IDisposable.Dispose%2A>を実装している場合は、オブジェクトが破棄される前にメソッドが呼び出されます。 `static`メソッドが<xref:System.Web.UI.WebControls.ObjectDataSource.ObjectDisposing> (`Shared` Visual Basic) の場合、ビジネスオブジェクトは作成されず、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreated>、 <xref:System.Web.UI.WebControls.ObjectDataSource.ObjectCreating>、の各イベントを処理することはできません。  
  
## <a name="parameter-merging"></a>パラメーターのマージ  
 パラメーターは、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>次の3つのソースからコレクションに追加されます。  
  
-   実行時にデータバインドコントロールから。  
  
-   要素から`UpdateParameters`宣言によって。  
  
-   プログラムに<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>よってイベントハンドラーから。  
  
 まず、データバインドコントロールから生成されたすべてのパラメーターを<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクションに追加します。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource>およびと`Name` <xref:System.Web.UI.WebControls.GridView> `Number` `Name`いう列を持つコントロールにコントロールがバインドされている場合、およびのパラメーターはコレクションに追加されます。 `Number` パラメーターの正確な名前は、 <xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>プロパティによって異なります。 これらのパラメーターのデータ型は`string`です。 次に、 `UpdateParameters`要素に示されているパラメーターが追加されます。 `UpdateParameters`要素内のパラメーターが、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクション内に既に存在するパラメーターと同じ名前で見つかった場合、既存のパラメーターは、 `UpdateParameters`要素で指定されているパラメーターと一致するように変更されます。 通常、これは、パラメーター内のデータの型を変更するために使用されます。 最後に、 <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>イベントのパラメーターをプログラムによって追加および削除できます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>これは、メソッドが実行される前に発生します。 メソッドは、パラメーターがマージされた後に解決されます。 メソッドの解決方法については、次のセクションで説明します。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティに置き換えます。  
  
## <a name="method-resolution"></a>メソッドの解決方法  
 メソッドが呼び出されると、データバインドコントロールのデータフィールド、 `UpdateParameters`要素で宣言によって作成されたパラメーター、および<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>イベントハンドラーに追加されたパラメーターがすべてマージされます。 <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> (詳細については、前のセクションを参照してください)。次<xref:System.Web.UI.WebControls.ObjectDataSource>に、コントロールは、呼び出すメソッドの検索を試みます。 最初に、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティで指定された名前を持つ1つ以上のメソッドを検索します。 一致する<xref:System.InvalidOperationException>ものが見つからない場合は、例外がスローされます。 一致するものが見つかった場合は、一致するパラメーター名が検索されます。 たとえば、 <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A>プロパティによって指定された型にという`UpdateARecord`2 つのメソッドがあるとします。 1 `UpdateARecord`つの`ID`パラメーターとがあり、 `Name`もう`UpdateARecord`一方にはとと`Number`いう2つのパラメーターがあります。 コレクションにという名前`ID` `UpdateARecord`のパラメーターが1つしかない場合、 `ID`パラメーターだけを持つメソッドが呼び出されます。 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> パラメーターの型は、メソッドの解決時にチェックされません。 パラメーターの順序は重要ではありません。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>プロパティが設定されている場合、メソッドは別の方法で解決されます。 は<xref:System.Web.UI.WebControls.ObjectDataSource> 、プロパティで指定されている型<xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName%2A>の1つ<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>のパラメーターを受け取る、プロパティに指定されている名前のメソッドを検索します。 この場合、パラメーターの名前は関係ありません。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。  
  
 最初の例は、2つ<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList> 、コントロール、および<xref:System.Web.UI.WebControls.DetailsView>コントロールを含む Web ページを示しています。 最初<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList>とコントロールを使用して、データベースから従業員名を取得して表示します。 2番<xref:System.Web.UI.WebControls.ObjectDataSource>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>とイベントのハンドラーを示しています。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>ハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>ハンドラーは、更新されるデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
        <related type="ExternalDocumentation" href="https://go.microsoft.com/fwlink/?LinkId=214011">Entity Framework と ObjectDataSource コントロールの使用</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" /> プロパティで指定されたメソッドによって使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティで指定されたメソッドによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクションに格納されているパラメーターの名前と型は、 <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>メソッドシグネチャ内のパラメーターの名前と型と一致する必要があります。 パラメーター名はプロパティの<xref:System.Web.UI.WebControls.ObjectDataSource.OldValuesParameterFormatString%2A>影響を受け、大文字と小文字が区別されます。 コレクション内のパラメーターは、データバインドコントロールのデータ、宣言によって指定されるパラメーター、およびプログラムによって追加されるパラメーターによって異なります。 詳細については、「」の<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 「パラメーターのマージ」セクションと「 [ObjectDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/45fb67ee-9be7-49b7-9421-e242203dafa4)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>は<xref:System.Web.UI.WebControls.ObjectDataSourceView> 、コントロール <xref:System.Web.UI.WebControls.ObjectDataSource> に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>プロパティを取得します。  
  
 パラメーターのマージ、オブジェクトの有効期間、およびメソッドの解決の詳細<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>については、「」を参照してください。  
  
> [!IMPORTANT]
>  クライアントから受け取った任意のパラメーター値を検証する必要があります。 ランタイムは、単にパラメーター値を<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>プロパティに置き換えます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.DropDownList>コントロール、 <xref:System.Web.UI.WebControls.TextBox>コントロール、およびいくつか<xref:System.Web.UI.WebControls.ObjectDataSource>のオブジェクトを使用してデータを更新する方法を示します。 2番目のコード例`EmployeeLogic`は、最初のコード例で使用されるクラスを示しています。  
  
 コントロール、 <xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.TextBox>コントロール、およびいくつか<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロールを使用してデータを更新する方法を次のコード例に示します。 に Northwind 従業員<xref:System.Web.UI.WebControls.TextBox>の名前が表示され、コントロールを使用して住所情報が入力および更新されます。 <xref:System.Web.UI.WebControls.DropDownList> コレクションに<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>は、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>の選択した値にバインドされたが含まれているため<xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> 、操作を発生させるボタンは、従業員が選択された後にのみ有効になります。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/objds12cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/objds12vb.aspx#1)]  
  
 次のコード例は、 `EmployeeLogic`前のコード例で使用されているクラスを示しています。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/CS/northwindemployee12.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_12/VB/northwindemployee12.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.ObjectDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As ObjectDataSourceMethodEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ObjectDataSourceMethodEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" /> 操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションに<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>固有の追加の初期化を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.ObjectDataSource>更新操作を実行する前にパラメーター値を変更したりするために、イベントを処理します。 パラメーターは、 <xref:System.Collections.IDictionary> <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>オブジェクトによって公開される<xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>プロパティによってアクセスされるコレクションとして使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の3つの例は、Web ページ、分離コードページクラス、およびユーザーが Northwind データベースの Employees テーブルのレコードを取得して更新できるようにするデータアクセスクラスを示しています。  
  
 最初の例は、2つ<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList> 、コントロール、および<xref:System.Web.UI.WebControls.DetailsView>コントロールを含む Web ページを示しています。 最初<xref:System.Web.UI.WebControls.ObjectDataSource>のコントロール<xref:System.Web.UI.WebControls.DropDownList>とコントロールを使用して、データベースから従業員名を取得して表示します。 2番<xref:System.Web.UI.WebControls.ObjectDataSource>目のコントロール<xref:System.Web.UI.WebControls.DetailsView>とコントロールを使用して、ユーザーが選択した従業員レコードのデータを取得、表示、および変更します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_18#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx#1)]  
  
 2番目の例は、 <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>とイベントのハンドラーを示しています。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Selected>ハンドラーは、Employee テーブルから取得されたデータを含むオブジェクトをシリアル化します。 シリアル化されたオブジェクトはビューステートに格納されます。 イベント<xref:System.Web.UI.WebControls.ObjectDataSource.Updating>ハンドラーは、更新されるデータレコードの元のデータを含むビューステートのオブジェクトを逆シリアル化します。 元のデータを格納しているオブジェクトは、更新メソッドにパラメーターとして渡されます。 データが別のプロセスによって変更されたかどうかを確認するために使用できるように、元のデータをデータベースに渡す必要があります。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/Default.aspx.vb#2)]  
  
 3番目の例は、Northwind データベースと対話するデータアクセスクラスを示しています。 クラスは、LINQ を使用して Employees テーブルに対してクエリを実行し、更新します。 この例では、Northwind データベースと Employees テーブルを表す LINQ to SQL クラスが必要です。 詳細については、「[方法: Web プロジェクトに LINQ to SQL クラスを作成](https://msdn.microsoft.com/library/20bf925f-2a6d-410d-8f65-7b5b8f555081)する」を参照してください。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/CS/App_Code/EmployeeLogic.cs#5)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_18#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_18/VB/App_Code/EmployeeLogic.vb#5)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.ObjectDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.ObjectDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/1f10d54b-d7ba-47f4-832b-f83b8861d1d2">ObjectDataSource コントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0165387c-847f-4731-a198-a0759004152f">ObjectDataSource コントロールのソース オブジェクト</related>
      </Docs>
    </Member>
  </Members>
</Type>
