<Type Name="LinqDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8ef52ad56e9cfa9547b24b47a2d6f4a4e6ee0e40" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36581356" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceStatusEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="81af1-101">
        <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />、<see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />、および <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> の各イベントにデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="81af1-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />, <see cref="E:System.Web.UI.WebControls.LinqDataSource.Selected" />, and <see cref="E:System.Web.UI.WebControls.LinqDataSource.Updated" /> events.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-102"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>クラスで実行されているデータ操作の結果を確認することができます、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="81af1-102">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> class enables you to examine the results of data operations that have been performed by a <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="81af1-103">A<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>オブジェクトのイベント ハンドラーに渡す、 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Selected>、および<xref:System.Web.UI.WebControls.LinqDataSource.Updated>のイベント、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="81af1-103">A <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object is passed to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events of the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 <span data-ttu-id="81af1-104">かどうか、データ操作が正常に完了した、結果のデータ オブジェクトに格納されます、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティおよび<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは`null`します。</span><span class="sxs-lookup"><span data-stu-id="81af1-104">If the data operation completed successfully, the resulting data object is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`.</span></span> <span data-ttu-id="81af1-105">データの処理中に発生した例外が格納されているデータの操作に失敗した場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティおよび<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティは`null`します。</span><span class="sxs-lookup"><span data-stu-id="81af1-105">If the data operation failed, the exception that occurred during the data operation is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is `null`.</span></span> <span data-ttu-id="81af1-106">によって表される例外を処理する場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティ、設定、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティを`true`できるように、この例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="81af1-106">If you handled the exception represented by the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true` so that the exception will not be thrown.</span></span>  
  
 <span data-ttu-id="81af1-107">使用してクエリから返されるデータ レコードの合計数を取得する、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-107">You retrieve the total number of data records returned from a query through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81af1-108">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-108">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="81af1-109">イベント ハンドラーの場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは`null`、製品 ID は内のオブジェクトから取得、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-109">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="81af1-110">製品 ID は、テーブルの主キーで、データベースが設定されている、そのため、値が不明、挿入操作が完了するまでです。</span><span class="sxs-lookup"><span data-stu-id="81af1-110">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="81af1-111">場合、例外メッセージが記録された、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは等しくありません`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-111">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="81af1-112"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティに設定し、`true`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-112">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="81af1-113">
            <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-113">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : Exception -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="81af1-114">データ操作中に発生したエラー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-114">The error that occurred during the data operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81af1-115">データ操作の結果として発生した例外を使用して、<see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-115">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an exception that occurred as a result of the data operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-116">このコンス トラクターは、データの処理中に例外がスローされたときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="81af1-116">This constructor is used when an exception is thrown during the data operation.</span></span> <span data-ttu-id="81af1-117"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティに設定されて自動的に`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-117">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property is automatically set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs result" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81af1-118">データ操作の結果のデータが格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-118">An object that contains the data that results from a data operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81af1-119">データ操作の結果のデータが格納されたオブジェクトを使用して、<see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-119">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class by using an object that contains the data from the data operation.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-120">このコンス トラクターは、エラーなしでデータ操作が完了時に使用されます。</span><span class="sxs-lookup"><span data-stu-id="81af1-120">This constructor is used when the data operation has finished without an error.</span></span> <span data-ttu-id="81af1-121">`result`パラメーターには、データ操作の結果を表すオブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="81af1-121">The `result` parameter contains an object that represents the result of the data operation.</span></span> <span data-ttu-id="81af1-122"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティに設定されて自動的に`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-122">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is automatically set to `null`.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceStatusEventArgs (object result, int totalRowCount);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object result, int32 totalRowCount) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.#ctor(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (result As Object, totalRowCount As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceStatusEventArgs(System::Object ^ result, int totalRowCount);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs : obj * int -&gt; System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceStatusEventArgs (result, totalRowCount)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="result" Type="System.Object" />
        <Parameter Name="totalRowCount" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="81af1-123">データ操作の結果のデータが格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-123">An object that contains the data that results from a data operation.</span>
          </span>
        </param>
        <param name="totalRowCount">
          <span data-ttu-id="81af1-124">データ取得操作で返された行数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-124">The number of rows that were returned from a data retrieval operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="81af1-125">データ操作の結果のデータが格納されたオブジェクトと返された行数で、<see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-125">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> class with an object that contains the data from the data operation and the number of rows returned.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81af1-126">データ操作時にスローされた例外を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-126">Gets the exception that was thrown during the data operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81af1-127">エラーが発生した場合は、例外を表す <see cref="T:System.Exception" /> オブジェクト。それ以外の場合は、<see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-127">An <see cref="T:System.Exception" /> object that represents the exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-128">例外が格納されているデータの処理中に例外が発生する場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-128">If an exception is raised during the data operation, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="81af1-129">イベント ハンドラーを作成することができます、 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Selected>、および<xref:System.Web.UI.WebControls.LinqDataSource.Updated>イベントと取得、存在する場合は、例外を通じて、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-129">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events and retrieve the exception, if any, through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81af1-130">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-130">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="81af1-131">イベント ハンドラーの場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは`null`、製品 ID は内のオブジェクトから取得、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-131">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="81af1-132">製品 ID は、テーブルの主キーし、データベースによって設定されるため、挿入操作が完了するまで、値が不明です。</span><span class="sxs-lookup"><span data-stu-id="81af1-132">The product ID is a primary key for the table and is set by the database, so the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="81af1-133">場合、例外メッセージが記録された、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは等しくありません`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-133">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="81af1-134"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティに設定し、`true`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-134">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81af1-135">例外が既に処理済みで、再度スローする必要がないかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-135">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81af1-136">例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-136">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-137">イベント ハンドラーを作成することができます、 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Selected>、および<xref:System.Web.UI.WebControls.LinqDataSource.Updated>イベントをこれらの操作中に発生する例外を確認します。</span><span class="sxs-lookup"><span data-stu-id="81af1-137">You can create event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, and <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events to examine any exceptions that occurred during those operations.</span></span> <span data-ttu-id="81af1-138">例外の処理を再度スローすることは望ましくない場合は、設定、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティを`true`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-138">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="81af1-139">設定しない場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティを`true`例外は、呼び出し履歴内の次のイベント ハンドラーに反映されます。</span><span class="sxs-lookup"><span data-stu-id="81af1-139">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81af1-140">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-140">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="81af1-141">イベント ハンドラーの場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは`null`、製品 ID は内のオブジェクトから取得、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-141">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="81af1-142">製品 ID は、テーブルの主キーで、データベースが設定されている、そのため、値が不明、挿入操作が完了するまでです。</span><span class="sxs-lookup"><span data-stu-id="81af1-142">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="81af1-143">場合、例外メッセージが記録された、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは等しくありません`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-143">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="81af1-144"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティに設定し、`true`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-144">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Result">
      <MemberSignature Language="C#" Value="public object Result { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Result" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Result As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ Result { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Result : obj" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81af1-145">データ操作の結果を表すオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-145">Gets the object that represents the result of a data operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81af1-146">データ操作で得たデータが格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-146">An object that contains the data from the data operation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-147">使用する、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティ値を確認する、データの操作から返されます。</span><span class="sxs-lookup"><span data-stu-id="81af1-147">You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to examine values returned from a data operation.</span></span> <span data-ttu-id="81af1-148">データの操作から出力パラメーターを取得またはクエリから返される値を変更することができます。</span><span class="sxs-lookup"><span data-stu-id="81af1-148">You can retrieve output parameters from a data operation or modify the values returned from a query.</span></span>  
  
 <span data-ttu-id="81af1-149">格納されたデータ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティが実行されているデータ操作の種類に依存します。</span><span class="sxs-lookup"><span data-stu-id="81af1-149">The data stored in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property depends on the type of data operation that has been performed.</span></span> <span data-ttu-id="81af1-150">データを削除すると、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティにはで指定された型のオブジェクトが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティ、データ ソースから削除された元の値。</span><span class="sxs-lookup"><span data-stu-id="81af1-150">When you delete data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the original values that were deleted from the data source.</span></span> <span data-ttu-id="81af1-151">挿入またはデータを更新するときに、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティにはで指定された型のオブジェクトが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>をデータ ソースに保存された新しい値のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-151">When you insert or update data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, with the new values that were saved to the data source.</span></span> <span data-ttu-id="81af1-152">データを選択すると、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティには、クエリの結果が含まれています。</span><span class="sxs-lookup"><span data-stu-id="81af1-152">When you select data, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains the results of the query.</span></span>  
  
 <span data-ttu-id="81af1-153">データをグループ化またはで指定された型からプロパティのサブセットを選択すると、select クエリが含まれている場合、 <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> 、プロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティには、動的に作成された型のオブジェクトが含まれています。</span><span class="sxs-lookup"><span data-stu-id="81af1-153">If the select query involves grouping the data or selecting a subset of properties from the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of a dynamically created type.</span></span> <span data-ttu-id="81af1-154">それ以外の場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティにはで指定された型のオブジェクトが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-154">Otherwise, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property contains an object of the type specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="81af1-155">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-155">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event.</span></span> <span data-ttu-id="81af1-156">イベント ハンドラーの場合、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは`null`、製品 ID は内のオブジェクトから取得、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-156">In the event handler, if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is `null`, the product ID is retrieved from the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property.</span></span> <span data-ttu-id="81af1-157">製品 ID は、テーブルの主キーで、データベースが設定されている、そのため、値が不明、挿入操作が完了するまでです。</span><span class="sxs-lookup"><span data-stu-id="81af1-157">The product ID is a primary key for the table and is set by the database, therefore the value is not known until the insert operation has finished.</span></span> <span data-ttu-id="81af1-158">場合、例外メッセージが記録された、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティは等しくありません`null`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-158">The exception message is logged if the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property is not equal to `null`.</span></span> <span data-ttu-id="81af1-159"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティに設定し、`true`です。</span><span class="sxs-lookup"><span data-stu-id="81af1-159">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.ExceptionHandled%2A> property is then set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TotalRowCount">
      <MemberSignature Language="C#" Value="public int TotalRowCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 TotalRowCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property TotalRowCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int TotalRowCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.TotalRowCount : int" Usage="System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="81af1-160">データ取得操作で得られたデータ セットに含まれる行の総数を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-160">Gets the total number of rows in a data set from a data-retrieval operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="81af1-161">データ取得操作で得られたデータ セットに含まれる行の総数。データ変更操作中に <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> オブジェクトが作成された場合は -1。<see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> を <see langword="true" /> に設定し、<see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> を <see langword="false" /> に設定することによってカスタマイズ ページングを有効にした場合は -1。</span>
          <span class="sxs-lookup">
            <span data-stu-id="81af1-161">The total number of rows in a data set from the data retrieval operation; -1 if the <see cref="T:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs" /> object was created during a data modification operation; -1 if you enabled customized paging by setting <see cref="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" /> to <see langword="true" /> and by setting <see cref="P:System.Web.UI.DataSourceSelectArguments.RetrieveTotalRowCount" /> to <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="81af1-162">使用する、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>データ取得操作中に、データ セット内のレコードの数を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-162">You use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property to get the number of records in the data set during a data retrieval operation.</span></span> <span data-ttu-id="81af1-163">通常、データのページを表示すると、レコードの総数を表示するには、このプロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="81af1-163">Typically, you retrieve this property when you are displaying pages of data and want to show the total number of records.</span></span>  
  
 <span data-ttu-id="81af1-164">データがページングされている場合、値、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>プロパティは、クエリによって返される行の実際の数と異なる場合があります。</span><span class="sxs-lookup"><span data-stu-id="81af1-164">When data is being paged, the value in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property might be different from the actual number of rows that are returned by the query.</span></span> <span data-ttu-id="81af1-165">これは、クエリがデータのページに必要な行数のみを返すためです。</span><span class="sxs-lookup"><span data-stu-id="81af1-165">This is because the query returns only the number of rows that are needed for that page of data.</span></span>  
  
 <span data-ttu-id="81af1-166"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>のイベント ハンドラーにアクセスしたときにのみ、プロパティは、クエリからのレコードの数を含む、<xref:System.Web.UI.WebControls.LinqDataSource.Selected>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-166">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains the number of records from a query only when it is accessed in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span> <span data-ttu-id="81af1-167">プロパティがのイベント ハンドラーからアクセスされるとき、 <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>、または<xref:System.Web.UI.WebControls.LinqDataSource.Updated>イベント、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>プロパティには、-1 が含まれています。</span><span class="sxs-lookup"><span data-stu-id="81af1-167">When the property is accessed from an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>, <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event, the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property contains -1.</span></span>  
  
 <span data-ttu-id="81af1-168">値、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>プロパティによって異なります、<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール、および、`AllowPaging`データ バインド コントロールのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-168">The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property depends on the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSource> control, and on the `AllowPaging` property of the data-bound control.</span></span> <span data-ttu-id="81af1-169">次の表に、可能な値、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="81af1-169">The following table summarizes the possible values for the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property.</span></span>  
  
|<span data-ttu-id="81af1-170">LinqDataSource コントロールの AutoPage プロパティ</span><span class="sxs-lookup"><span data-stu-id="81af1-170">AutoPage Property of LinqDataSource control</span></span>|<span data-ttu-id="81af1-171">データ バインド コントロールの AllowPaging プロパティ</span><span class="sxs-lookup"><span data-stu-id="81af1-171">AllowPaging Property of data-bound control</span></span>|<span data-ttu-id="81af1-172">TotalRowCount プロパティ</span><span class="sxs-lookup"><span data-stu-id="81af1-172">TotalRowCount property</span></span>|<span data-ttu-id="81af1-173">Outcome</span><span class="sxs-lookup"><span data-stu-id="81af1-173">Outcome</span></span>|  
|-------------------------------------------------|-------------------------------------------------|----------------------------|-------------|  
|`true`|`true`|<span data-ttu-id="81af1-174">クエリのレコードの数。</span><span class="sxs-lookup"><span data-stu-id="81af1-174">Number of records for a query.</span></span>|<span data-ttu-id="81af1-175">データは自動的にページングできます。</span><span class="sxs-lookup"><span data-stu-id="81af1-175">Data is automatically paged.</span></span>|  
|`false`|`false`|<span data-ttu-id="81af1-176">クエリのレコードの数。</span><span class="sxs-lookup"><span data-stu-id="81af1-176">Number of records for a query.</span></span>|<span data-ttu-id="81af1-177">データがページングされません。</span><span class="sxs-lookup"><span data-stu-id="81af1-177">Data is not paged.</span></span>|  
|`true`|`false`|<span data-ttu-id="81af1-178">-1</span><span class="sxs-lookup"><span data-stu-id="81af1-178">-1</span></span>|<span data-ttu-id="81af1-179">データがページングされません。</span><span class="sxs-lookup"><span data-stu-id="81af1-179">Data is not paged.</span></span>|  
|`false`|`true`|<span data-ttu-id="81af1-180">割り当てられている値、<xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A>のイベント ハンドラーのプロパティ、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-180">The value that you assigned to the <xref:System.Web.UI.DataSourceSelectArguments.TotalRowCount%2A> property in the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>|<span data-ttu-id="81af1-181">データは、ページングをカスタマイズしたときに指定した値に基づいてページです。</span><span class="sxs-lookup"><span data-stu-id="81af1-181">Data is paged according to the values that you specified when you customized paging.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="81af1-182">次の例では、Web ページに、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール、<xref:System.Web.UI.WebControls.GridView>コントロール、および<xref:System.Web.UI.WebControls.Literal>コントロール。</span><span class="sxs-lookup"><span data-stu-id="81af1-182">The following example shows a Web page with a <xref:System.Web.UI.WebControls.LinqDataSource> control, a <xref:System.Web.UI.WebControls.GridView> control, and a <xref:System.Web.UI.WebControls.Literal> control.</span></span> <span data-ttu-id="81af1-183"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールのイベント ハンドラーを定義する、<xref:System.Web.UI.WebControls.LinqDataSource.Selected>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-183">The <xref:System.Web.UI.WebControls.LinqDataSource> control defines an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx#1)]  
  
 <span data-ttu-id="81af1-184">次の例では、対応するイベント ハンドラーのコード、<xref:System.Web.UI.WebControls.LinqDataSource.Selected>イベント。</span><span class="sxs-lookup"><span data-stu-id="81af1-184">The following example shows the code for the event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event.</span></span> <span data-ttu-id="81af1-185">値、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A>にプロパティが割り当てられた、<xref:System.Web.UI.WebControls.Literal>コントロール。</span><span class="sxs-lookup"><span data-stu-id="81af1-185">The value of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount%2A> property is assigned to the <xref:System.Web.UI.WebControls.Literal> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/cs/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.TotalRowCount/vb/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>