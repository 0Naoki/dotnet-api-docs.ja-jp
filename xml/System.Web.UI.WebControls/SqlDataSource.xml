<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="7c381-101">データ バインド コントロールに対して SQL データベースを表します。</span><span class="sxs-lookup"><span data-stu-id="7c381-101">Represents an SQL database to data-bound controls.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="7c381-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="7c381-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="7c381-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="7c381-104">データ接続</span><span class="sxs-lookup"><span data-stu-id="7c381-104">Data Connections</span></span>](#data_connections)  
  
-   [<span data-ttu-id="7c381-105">データ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-105">Performing Data Operations</span></span>](#performing_data_operations)  
  
-   [<span data-ttu-id="7c381-106">データ プロバイダー</span><span class="sxs-lookup"><span data-stu-id="7c381-106">Data Provider</span></span>](#data_provider)  
  
-   [<span data-ttu-id="7c381-107">キャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c381-107">Caching</span></span>](#caching)  
  
-   [<span data-ttu-id="7c381-108">その他の機能</span><span class="sxs-lookup"><span data-stu-id="7c381-108">Additional Features</span></span>](#additional_features)  
  
-   [<span data-ttu-id="7c381-109">データ ソース ビュー</span><span class="sxs-lookup"><span data-stu-id="7c381-109">Data Source View</span></span>](#data_source_view)  
  
-   [<span data-ttu-id="7c381-110">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="7c381-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="7c381-111">はじめに</span><span class="sxs-lookup"><span data-stu-id="7c381-111">Introduction</span></span>  
 <span data-ttu-id="7c381-112"><xref:System.Web.UI.WebControls.SqlDataSource>データ ソース コントロールがデータ バインド コントロールを SQL リレーショナル データベース内のデータを表します。</span><span class="sxs-lookup"><span data-stu-id="7c381-112">The <xref:System.Web.UI.WebControls.SqlDataSource> data source control represents data in an SQL relational database to data-bound controls.</span></span> <span data-ttu-id="7c381-113">使用することができます、<xref:System.Web.UI.WebControls.SqlDataSource>リレーショナル データベースからデータを取得および表示、編集、およびほとんどまたはまったくないコードを含む Web ページ上のデータを並べ替えるデータ バインド コントロールで組み合わせて制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-113">You can use the <xref:System.Web.UI.WebControls.SqlDataSource> control in conjunction with a data-bound control to retrieve data from a relational database and to display, edit, and sort data on a Web page with little or no code.</span></span>  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a><span data-ttu-id="7c381-114">データ接続</span><span class="sxs-lookup"><span data-stu-id="7c381-114">Data Connections</span></span>  
 <span data-ttu-id="7c381-115">設定する必要があります、データベースに接続する場合、<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティを有効な接続文字列にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-115">To connect to a database, you must set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to a valid connection string.</span></span> <span data-ttu-id="7c381-116"><xref:System.Web.UI.WebControls.SqlDataSource>などを使用して、ADO.NET プロバイダーに接続できる SQL リレーショナル データベースをサポートできる、 `SqlClient`、 `OleDb`、 `Odbc`、または`OracleClient`プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7c381-116">The <xref:System.Web.UI.WebControls.SqlDataSource> can support any SQL relational database that can be connected to using an ADO.NET provider, such as the `SqlClient`, `OleDb`, `Odbc`, or `OracleClient` provider.</span></span> <span data-ttu-id="7c381-117">接続文字列をセキュリティで保護する方法については、次を参照してください。[操作方法: セキュリティで保護された接続文字列を使用するデータ ソースを制御する際](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-117">For information about how to secure connection strings, see [How To: Secure Connection Strings when Using Data Source Controls](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).</span></span>  
  
 <span data-ttu-id="7c381-118">基になるデータベースからデータを取得するには設定、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL クエリを持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-118">To retrieve data from an underlying database, set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property with an SQL query.</span></span> <span data-ttu-id="7c381-119">場合、データベースを<xref:System.Web.UI.WebControls.SqlDataSource>が関連付けられているサポートするストアド プロシージャで設定することができます、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティをストアド プロシージャの名前にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-119">If the database that the <xref:System.Web.UI.WebControls.SqlDataSource> is associated with supports stored procedures, you can set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to the name of a stored procedure.</span></span> <span data-ttu-id="7c381-120">指定した SQL クエリでは、パラメーター化クエリこともできます。</span><span class="sxs-lookup"><span data-stu-id="7c381-120">The SQL query that you specify can also be a parameterized query.</span></span> <span data-ttu-id="7c381-121">追加することができます<xref:System.Web.UI.WebControls.Parameter>をパラメーター化クエリに関連付けられているオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-121">You can add <xref:System.Web.UI.WebControls.Parameter> objects that are associated with a parameterized query to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="7c381-122">パラメーター化 SQL クエリとその構文の詳細については、次を参照してください。[フィルターのデータ ソース コントロールを持つパラメーターの使用](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-122">For more information about parameterized SQL queries and their syntax, see [Using Parameters with Data Source Controls for Filtering](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f).</span></span>  
  
 <span data-ttu-id="7c381-123"><xref:System.Web.UI.WebControls.SqlDataSource>コントロール データを取得するたびに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-123">The <xref:System.Web.UI.WebControls.SqlDataSource> control retrieves data whenever the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span> <span data-ttu-id="7c381-124">このメソッドで指定されたメソッドへのプログラムによるアクセスを提供する<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-124">This method provides programmatic access to the method that is specified by <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property.</span></span> <span data-ttu-id="7c381-125"><xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが自動的にバインドされたコントロールによって呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource>ときにその<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-125">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is automatically called by controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> when their <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method is called.</span></span> <span data-ttu-id="7c381-126">設定した場合、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>データ バインド コントロールのプロパティ、コントロールに自動的にデータにバインドされているとおり、データ ソースからです。</span><span class="sxs-lookup"><span data-stu-id="7c381-126">If you set the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> property of a data-bound control, the control automatically binds to data from the data source, as required.</span></span> <span data-ttu-id="7c381-127">設定、`DataSourceID`プロパティは推奨されるメソッドのバインディング、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールをデータ バインド コントロールです。</span><span class="sxs-lookup"><span data-stu-id="7c381-127">Setting the `DataSourceID` property is the recommended method for binding an <xref:System.Web.UI.WebControls.ObjectDataSource> control to a data-bound control.</span></span> <span data-ttu-id="7c381-128">また、使用することができます、`DataSource`プロパティ、それをする必要があります明示的に呼び出す、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>データ バインド コントロールのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-128">Alternatively, you can use the `DataSource` property, but then you must explicitly call the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the data-bound control.</span></span> <span data-ttu-id="7c381-129">使用できるデータ バインド コントロールの例をいくつか<xref:System.Web.UI.WebControls.SqlDataSource>は<xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.DataList>、および<xref:System.Web.UI.WebControls.DropDownList>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-129">Some examples of data-bound controls that can use <xref:System.Web.UI.WebControls.SqlDataSource> are <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>, and <xref:System.Web.UI.WebControls.DropDownList>.</span></span> <span data-ttu-id="7c381-130">呼び出すことができます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを基になるデータベースからデータを取得するためにプログラムでします。</span><span class="sxs-lookup"><span data-stu-id="7c381-130">You can call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method programmatically at any time to retrieve data from the underlying database.</span></span>  
  
 <span data-ttu-id="7c381-131">宣言とプログラムの ASP.NET シナリオで設定することができます、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>の ID に、データ バインド コントロールのプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-131">In declarative and programmatic ASP.NET scenarios, you can set the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property of the data-bound control to the ID of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="7c381-132">インスタンスを割り当てることも、<xref:System.Web.UI.WebControls.SqlDataSource>クラスを<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>データ バインド コントロールのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-132">You can also assign an instance of the <xref:System.Web.UI.WebControls.SqlDataSource> class to the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> property of the data-bound control.</span></span> <span data-ttu-id="7c381-133">データ ソース コントロールにデータ バインド コントロールのバインドの詳細については、次を参照してください。 [ASP.NET データ アクセス オプション](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-133">For more information about binding data-bound control to data source controls, see [ASP.NET Data Access Options](http://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).</span></span>  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a><span data-ttu-id="7c381-134">データ操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-134">Performing Data Operations</span></span>  
 <span data-ttu-id="7c381-135">基になるデータベースの製品とのインスタンスの構成の機能によって、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、データ操作、更新、挿入、および削除などを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-135">Depending on the capabilities of the underlying database product and the configuration of the instance of the <xref:System.Web.UI.WebControls.SqlDataSource> class, you can perform data operations, such as updates, inserts, and deletes.</span></span> <span data-ttu-id="7c381-136">これらのデータ操作を実行するには、適切なコマンド テキストと実行する操作に関連するパラメーターを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-136">To perform these data operations, set the appropriate command text and any associated parameters for the operation that you want to perform.</span></span> <span data-ttu-id="7c381-137">たとえば、更新操作では、次のように設定します。、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティを SQL 文字列またはストアド プロシージャの名前に、必要なパラメーターを追加し、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-137">For example, for an update operation, set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property to an SQL string or the name of a stored procedure and add any required parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="7c381-138">更新プログラムが実行されるときに、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドが、コードによって明示的にまたは自動的にデータ バインドされたコントロールによって呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-138">The update is performed when the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method is called, either explicitly by your code or automatically by a data-bound control.</span></span> <span data-ttu-id="7c381-139">同じ一般的なパターンに従うは<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-139">The same general pattern is followed for <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operations.</span></span>  
  
 <span data-ttu-id="7c381-140">SQL クエリとコマンドで使用する、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>、および<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティをパラメーター化することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-140">The SQL queries and commands that you use in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, and <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> properties can be parameterized.</span></span> <span data-ttu-id="7c381-141">つまり、クエリまたはコマンドことができますリテラル値ではなくプレース ホルダーを使用して、プレース ホルダーをアプリケーションまたはユーザー定義変数にバインドします。</span><span class="sxs-lookup"><span data-stu-id="7c381-141">This means that the query or command can use placeholders instead of literal values and bind the placeholders to application or user-defined variables.</span></span> <span data-ttu-id="7c381-142">セッション変数、Web フォーム ページのクエリ文字列で渡される値、その他のサーバー コントロールと複数のプロパティ値を SQL クエリでパラメーターをバインドできます。</span><span class="sxs-lookup"><span data-stu-id="7c381-142">You can bind parameters in SQL queries to Session variables, values that are passed on the query string for a Web Forms page, the property values of other server controls, and more.</span></span> <span data-ttu-id="7c381-143">含む SQL クエリでパラメーターを使用する方法について、<xref:System.Web.UI.WebControls.SqlDataSource>を参照してください[フィルターのデータ ソース コントロールを持つパラメーターの使用](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f)と[SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-143">For more information about how to use parameters in SQL queries with the <xref:System.Web.UI.WebControls.SqlDataSource>, see [Using Parameters with Data Source Controls for Filtering](http://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f) and [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-144">既定では、パラメーターの 1 つ`null`を実行すると、`Select`コマンドで返されるデータがないと、例外はスローされません。</span><span class="sxs-lookup"><span data-stu-id="7c381-144">By default, if one of the parameters is `null` when you execute a `Select` command, no data will be returned and no exception will be thrown.</span></span> <span data-ttu-id="7c381-145">この動作を変更するには設定して、<xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-145">You can change this behavior by setting the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property to `false`.</span></span>  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a><span data-ttu-id="7c381-146">データ プロバイダー</span><span class="sxs-lookup"><span data-stu-id="7c381-146">Data Provider</span></span>  
 <span data-ttu-id="7c381-147">既定では、 <xref:System.Web.UI.WebControls.SqlDataSource> 、.NET Framework Data Provider for SQL Server による制御が<xref:System.Web.UI.WebControls.SqlDataSource>は Microsoft SQL Server 特有です。</span><span class="sxs-lookup"><span data-stu-id="7c381-147">By default, the <xref:System.Web.UI.WebControls.SqlDataSource> control works with the .NET Framework Data Provider for SQL Server, but <xref:System.Web.UI.WebControls.SqlDataSource> is not Microsoft SQL Server–specific.</span></span> <span data-ttu-id="7c381-148">接続することができます、<xref:System.Web.UI.WebControls.SqlDataSource>が管理されている ADO.NET プロバイダーが存在する任意のデータベース製品で制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-148">You can connect the <xref:System.Web.UI.WebControls.SqlDataSource> control with any database product for which there is a managed ADO.NET provider.</span></span> <span data-ttu-id="7c381-149">使用すると、<xref:System.Data.OleDb?displayProperty=nameWithType>プロバイダー、 <xref:System.Web.UI.WebControls.SqlDataSource> OLE DB 準拠のデータベースを使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-149">When used with the <xref:System.Data.OleDb?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can work with any OLE DB-compliant database.</span></span> <span data-ttu-id="7c381-150">使用すると、<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダー、<xref:System.Web.UI.WebControls.SqlDataSource>任意の ODBC ドライバーおよび IBM DB2、MySQL、PostgreSQL など、データベースで使用できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-150">When used with the <xref:System.Data.Odbc?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can be used with any ODBC driver and database, including IBM DB2, MySQL, and PostgreSQL.</span></span> <span data-ttu-id="7c381-151">使用すると、<xref:System.Data.OracleClient?displayProperty=nameWithType>プロバイダー、 <xref:System.Web.UI.WebControls.SqlDataSource> 8.1.7 Oracle データベースと、後で操作できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-151">When used with the <xref:System.Data.OracleClient?displayProperty=nameWithType> provider, the <xref:System.Web.UI.WebControls.SqlDataSource> can work with Oracle 8.1.7 databases and later.</span></span> <span data-ttu-id="7c381-152">使用可能なプロバイダーの一覧が登録されている、`DbProviderFactories`は Machine.config または Web.config ファイルのいずれかの構成ファイルのセクションです。</span><span class="sxs-lookup"><span data-stu-id="7c381-152">The list of allowable providers is registered in the `DbProviderFactories` section of the configuration file, either in the Machine.config or Web.config file.</span></span> <span data-ttu-id="7c381-153">詳細については、次を参照してください。 [SqlDataSource コントロールを使用してデータを選択する](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-153">For more information, see [Selecting Data Using the SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).</span></span>  
  
<a name="caching"></a>   
## <a name="caching"></a><span data-ttu-id="7c381-154">キャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c381-154">Caching</span></span>  
 <span data-ttu-id="7c381-155">使用して、ページにデータを表示すると、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、データ キャッシュのデータ ソース コントロールの機能を使用して、ページのパフォーマンスが向上することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-155">If you display data on your page using a <xref:System.Web.UI.WebControls.SqlDataSource> control, you can increase the performance of the page by using the data caching capabilities of the data source control.</span></span> <span data-ttu-id="7c381-156">Web サーバー上のメモリを犠牲にして、データベース サーバーの処理負荷が軽減キャッシュほとんどの場合、これは適切なトレードオフです。</span><span class="sxs-lookup"><span data-stu-id="7c381-156">Caching reduces the processing load on the database servers at the expense of memory on the Web server; in most cases, this is a good trade-off.</span></span> <span data-ttu-id="7c381-157"><xref:System.Web.UI.WebControls.SqlDataSource>は自動的にデータをキャッシュときに、<xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティが、キャッシュ エントリが破棄される前に、キャッシュがデータを格納する秒数に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-157">The <xref:System.Web.UI.WebControls.SqlDataSource> automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="7c381-158">指定することも、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>と省略可能な<xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-158">You can also specify a <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> and an optional <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> value.</span></span>  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a><span data-ttu-id="7c381-159">その他の機能</span><span class="sxs-lookup"><span data-stu-id="7c381-159">Additional Features</span></span>  
 <span data-ttu-id="7c381-160"><xref:System.Web.UI.WebControls.SqlDataSource>次の表に記載されているその他の機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c381-160">The <xref:System.Web.UI.WebControls.SqlDataSource> provides additional capabilities, as listed in the following table.</span></span>  
  
|<span data-ttu-id="7c381-161">機能</span><span class="sxs-lookup"><span data-stu-id="7c381-161">Capability</span></span>|<span data-ttu-id="7c381-162">必要条件</span><span class="sxs-lookup"><span data-stu-id="7c381-162">Requirements</span></span>|  
|----------------|------------------|  
|<span data-ttu-id="7c381-163">キャッシュ</span><span class="sxs-lookup"><span data-stu-id="7c381-163">Caching</span></span>|<span data-ttu-id="7c381-164">設定、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値、<xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>プロパティを`true`、および<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに従って、キャッシュされたデータのキャッシュ動作をします。</span><span class="sxs-lookup"><span data-stu-id="7c381-164">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value, the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property to `true`, and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties according to the caching behavior you want for your cached data.</span></span>|  
|<span data-ttu-id="7c381-165">削除中</span><span class="sxs-lookup"><span data-stu-id="7c381-165">Deleting</span></span>|<span data-ttu-id="7c381-166">設定、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティ データの削除に使用される SQL ステートメントをします。</span><span class="sxs-lookup"><span data-stu-id="7c381-166">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property to an SQL statement used to delete data.</span></span> <span data-ttu-id="7c381-167">このステートメントは、通常パラメーター化されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-167">This statement is typically parameterized.</span></span>|  
|<span data-ttu-id="7c381-168">フィルター処理</span><span class="sxs-lookup"><span data-stu-id="7c381-168">Filtering</span></span>|<span data-ttu-id="7c381-169">設定、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-169">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span> <span data-ttu-id="7c381-170">設定、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティ データをフィルター処理するために使用するフィルター式をときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-170">Set the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property to a filtering expression used to filter the data when the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span>|  
|<span data-ttu-id="7c381-171">挿入</span><span class="sxs-lookup"><span data-stu-id="7c381-171">Inserting</span></span>|<span data-ttu-id="7c381-172">設定、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティ データの挿入に使用される SQL ステートメントをします。</span><span class="sxs-lookup"><span data-stu-id="7c381-172">Set the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property to an SQL statement used to insert data.</span></span> <span data-ttu-id="7c381-173">このステートメントは、通常パラメーター化されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-173">This statement is typically parameterized.</span></span>|  
|<span data-ttu-id="7c381-174">ページング</span><span class="sxs-lookup"><span data-stu-id="7c381-174">Paging</span></span>|<span data-ttu-id="7c381-175">現在サポートされていません、 <xref:System.Web.UI.WebControls.SqlDataSource>、ただし一部のデータ バインドなどのコントロール<xref:System.Web.UI.WebControls.GridView>、サポートのページングを設定すると、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-175">Not currently supported by the <xref:System.Web.UI.WebControls.SqlDataSource>, however some data-bound controls, such as <xref:System.Web.UI.WebControls.GridView>, support paging when you set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span>|  
|<span data-ttu-id="7c381-176">選択</span><span class="sxs-lookup"><span data-stu-id="7c381-176">Selecting</span></span>|<span data-ttu-id="7c381-177">設定、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティ データの取得に使用される SQL ステートメントをします。</span><span class="sxs-lookup"><span data-stu-id="7c381-177">Set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL statement used to retrieve data.</span></span>|  
|<span data-ttu-id="7c381-178">並べ替え</span><span class="sxs-lookup"><span data-stu-id="7c381-178">Sorting</span></span>|<span data-ttu-id="7c381-179"><xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティを <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-179">Set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>.</span></span>|  
|<span data-ttu-id="7c381-180">Updating</span><span class="sxs-lookup"><span data-stu-id="7c381-180">Updating</span></span>|<span data-ttu-id="7c381-181">設定、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティを使用してデータを更新する SQL ステートメントにします。</span><span class="sxs-lookup"><span data-stu-id="7c381-181">Set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property to an SQL statement used to update data.</span></span> <span data-ttu-id="7c381-182">このステートメントは、通常パラメーター化されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-182">This statement is typically parameterized.</span></span>|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a><span data-ttu-id="7c381-183">データ ソース ビュー</span><span class="sxs-lookup"><span data-stu-id="7c381-183">Data Source View</span></span>  
 <span data-ttu-id="7c381-184">すべてのデータ ソース コントロールと同様、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールがデータ ソース ビュー クラスを使用すると、関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="7c381-184">As with all data source controls, the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data source view class.</span></span> <span data-ttu-id="7c381-185"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールに関連付けられている 1 つだけ<xref:System.Web.UI.WebControls.SqlDataSourceView>、という名前が常と`Table`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-185">The <xref:System.Web.UI.WebControls.SqlDataSource> control has only one associated <xref:System.Web.UI.WebControls.SqlDataSourceView>, and it is always named `Table`.</span></span>  
  
 <span data-ttu-id="7c381-186">ビジュアル表示はありません、 <xref:System.Web.UI.WebControls.SqlDataSource> ; を制御することができます宣言によって作成、必要に応じて、状態管理に参加することを許可するようコントロールとして実装されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-186">There is no visual rendering of the <xref:System.Web.UI.WebControls.SqlDataSource> control; it is implemented as a control so that you can create it declaratively and, optionally, to allow it to participate in state management.</span></span> <span data-ttu-id="7c381-187">その結果、<xref:System.Web.UI.WebControls.SqlDataSource>によって提供されるものなどのビジュアル機能をサポートしない、<xref:System.Web.UI.DataSourceControl.EnableTheming%2A>または<xref:System.Web.UI.DataSourceControl.SkinID%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-187">As a result, the <xref:System.Web.UI.WebControls.SqlDataSource> does not support visual features, such as the ones that are provided by the <xref:System.Web.UI.DataSourceControl.EnableTheming%2A> or <xref:System.Web.UI.DataSourceControl.SkinID%2A> property.</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="7c381-188">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="7c381-188">Declarative Syntax</span></span>  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="7c381-189">Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=192424)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-189">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192424).</span></span>  
  
 <span data-ttu-id="7c381-190">このセクションには、4 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-190">This section contains four code examples:</span></span>  
  
-   <span data-ttu-id="7c381-191">最初のコード例は、SQL Server でのデータを表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>宣言の構文を使用して制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-191">The first code example demonstrates how to display data from SQL Server in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.</span></span>  
  
-   <span data-ttu-id="7c381-192">2 番目のコード例は、ODBC 準拠のデータベース内のデータを表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>宣言の構文を使用して制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-192">The second code example demonstrates how to display data from an ODBC-compliant database in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.</span></span>  
  
-   <span data-ttu-id="7c381-193">3 番目のコード例を表示し、内のデータを更新する方法を示しています、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-193">The third code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
-   <span data-ttu-id="7c381-194">4 番目のコード例を表示し、内のデータを更新する方法を示しています、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-194">The fourth code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
    > [!NOTE]
    >  <span data-ttu-id="7c381-195">これらの例では、データ アクセスの宣言の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-195">These examples show how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-196">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-196">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="7c381-197">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>宣言によって SQL Server からデータを取得し表示するにはコントロール、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-197">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control declaratively to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 <span data-ttu-id="7c381-198">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを ODBC 準拠のデータベースからデータを取得し、表示で宣言によって、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-198">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control declaratively to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-199"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティは、odbc の場合は、.NET Framework データ プロバイダーの名前<xref:System.Data.Odbc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-199">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is the name of the .NET Framework Data Provider for ODBC, which is <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 <span data-ttu-id="7c381-200">次のコード例は、一般的な表示と更新シナリオを示しています。、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-200">The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-201">前の例では、Northwind データベースからデータに表示される、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-201">As with the previous examples, data from the Northwind database is displayed in the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-202">さらに、ため、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティが指定されて、<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>プロパティに設定されている`true`、編集および追加のコードを持たないレコードを更新できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-202">Additionally, because an <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is specified and the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> property is set to `true`, you can edit and update the records with no additional code.</span></span> <span data-ttu-id="7c381-203"><xref:System.Web.UI.WebControls.GridView>するパラメーターの追加コントロールが自動的に処理、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドと、**更新**ボタンをクリックして、<xref:System.Web.UI.WebControls.GridView>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="7c381-203">The <xref:System.Web.UI.WebControls.GridView> control automatically handles adding parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** button in the <xref:System.Web.UI.WebControls.GridView> control is clicked.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 <span data-ttu-id="7c381-204">次のコード例は、一般的な表示と更新シナリオを示しています。、<xref:System.Web.UI.WebControls.DropDownList>と<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-204">The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.DropDownList> and <xref:System.Web.UI.WebControls.TextBox> controls.</span></span> <span data-ttu-id="7c381-205"><xref:System.Web.UI.WebControls.DropDownList>コントロールが自動的に更新プログラムのパラメーターを追加、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションも呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッド、ため、これを行う必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c381-205">The <xref:System.Web.UI.WebControls.DropDownList> control does not automatically add update parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection nor call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method, so you must do so.</span></span> <span data-ttu-id="7c381-206">パラメーターを変更しては宣言によって指定され、実行するイベント ハンドラーを追加することができます、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>イベントが発生したときに操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-206">The update parameters are specified declaratively and you can add an event handler to perform the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation when an event is raised.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-207">この例には、潜在的なセキュリティの脅威は、ユーザー入力を受け付けるテキスト ボックスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c381-207">This example includes a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="7c381-208">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-208">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="7c381-209">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-209">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="7c381-210"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c381-210">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</span></span></summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-211"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c381-211">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString"><span data-ttu-id="7c381-212">基になるデータベースに接続するために使用する接続文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-212">The connection string used to connect to the underlying database.</span></span></param>
        <param name="selectCommand"><span data-ttu-id="7c381-213">基になるデータベースからデータを取得するために使用する SQL クエリ。</span><span class="sxs-lookup"><span data-stu-id="7c381-213">The SQL query used to retrieve data from the underlying database.</span></span> <span data-ttu-id="7c381-214">SQL クエリがパラメーター化された SQL 文字列の場合、<see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションへの <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> オブジェクトの追加が必要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="7c381-214">If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="7c381-215">接続文字列と SELECT コマンドを指定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c381-215">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-216">別のデータベース製品ごとに使用する SQL の構文のため`selectCommand`は、現在使用されている ADO.NET プロバイダーによって異なります、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-216">Because different database products use different varieties of SQL, the syntax for `selectCommand` depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-217">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="7c381-217">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-218">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-218">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-219">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-219">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or the <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-220">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-220">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-221"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>値から、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-221">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> value can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-222">次のコード例を作成する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>制御を使用して、<xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-222">The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.SqlDataSource> control using the <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A> constructor.</span></span> <span data-ttu-id="7c381-223">例は、通常のことで、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールが使用されている中間層オブジェクトの実装では、Web フォーム ページではなくビジネス オブジェクトの簡単な方法として、データベースとやり取りします。</span><span class="sxs-lookup"><span data-stu-id="7c381-223">The example is unusual in that the <xref:System.Web.UI.WebControls.SqlDataSource> control is being used not on a Web Forms page, but in the implementation of a middle-tier object as a simple way for a business object to interact with a database.</span></span> <span data-ttu-id="7c381-224">例では、Web.config ファイルに格納されている接続文字列を使用します。</span><span class="sxs-lookup"><span data-stu-id="7c381-224">The example uses a connection string that is stored in the Web.config file.</span></span>  
  
 <span data-ttu-id="7c381-225">このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.ObjectDataSource>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7c381-225">This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName"><span data-ttu-id="7c381-226"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用するデータ プロバイダーの名前。</span><span class="sxs-lookup"><span data-stu-id="7c381-226">The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses.</span></span> <span data-ttu-id="7c381-227">プロバイダーが設定されていない場合、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> は Microsoft SQL Server の ADO.NET プロバイダーを既定で使用します。</span><span class="sxs-lookup"><span data-stu-id="7c381-227">If no provider is set, the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses the ADO.NET provider for Microsoft SQL Server, by default.</span></span></param>
        <param name="connectionString"><span data-ttu-id="7c381-228">基になるデータベースに接続するために使用する接続文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-228">The connection string used to connect to the underlying database.</span></span></param>
        <param name="selectCommand"><span data-ttu-id="7c381-229">基になるデータベースからデータを取得するために使用する SQL クエリ。</span><span class="sxs-lookup"><span data-stu-id="7c381-229">The SQL query used to retrieve data from the underlying database.</span></span> <span data-ttu-id="7c381-230">SQL クエリがパラメーター化された SQL 文字列の場合、<see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションへの <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> オブジェクトの追加が必要になることがあります。</span><span class="sxs-lookup"><span data-stu-id="7c381-230">If the SQL query is a parameterized SQL string, you might need to add <see cref="T:System.Web.UI.WebControls.Parameter" /> objects to the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span></span></param>
        <summary><span data-ttu-id="7c381-231">接続文字列と SELECT コマンドを指定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="7c381-231">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> class with the specified connection string and Select command.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-232">別のデータベース製品ごとに使用する SQL の構文のため`selectCommand`は、現在使用されている ADO.NET プロバイダーによって異なります、`providerName`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="7c381-232">Because different database products use different varieties of SQL, the syntax of `selectCommand` depends on the current ADO.NET provider being used, which is identified by the `providerName` parameter.</span></span> <span data-ttu-id="7c381-233">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="7c381-233">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-234">たとえば、プロバイダーは<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-234">For example, if the provider is <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-235">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-235">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or the <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-236">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-236">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-237"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-237">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-238"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドによって取得したデータを、データ ソース コントロールがキャッシュする時間 (秒単位) を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-238">Gets or sets the length of time, in seconds, that the data source control caches data that is retrieved by the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span></span></summary>
        <value><span data-ttu-id="7c381-239"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 操作の結果をキャッシュする秒数。</span><span class="sxs-lookup"><span data-stu-id="7c381-239">The number of seconds that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> caches the results of a <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> operation.</span></span> <span data-ttu-id="7c381-240">既定値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="7c381-240">The default is 0.</span></span> <span data-ttu-id="7c381-241">この値を負にすることはできません。</span><span class="sxs-lookup"><span data-stu-id="7c381-241">The value cannot be negative.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-242"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータのキャッシュをサポートします。</span><span class="sxs-lookup"><span data-stu-id="7c381-242">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="7c381-243">データがキャッシュされるときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを基になるデータベースではなく、キャッシュからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-243">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="7c381-244">キャッシュが期限切れになったときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが、基になるデータベースからデータを取得および再度データをキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="7c381-244">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="7c381-245"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールが自動的にデータをキャッシュ時に、<xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティが、キャッシュは、キャッシュ エントリが破棄される前にデータを格納する時間を秒数を示す 0 より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-245">The <xref:System.Web.UI.WebControls.SqlDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before the cache entry is discarded.</span></span> <span data-ttu-id="7c381-246">0 の値では、無限の深さのキャッシュを示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-246">A value of 0 indicates an infinitely long cache.</span></span>  
  
 <span data-ttu-id="7c381-247">キャッシュの動作は、実行時間の組み合わせによって決まりますが、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-247">The behavior of the cache is determined by a combination of the duration and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property.</span></span> <span data-ttu-id="7c381-248">場合、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>値、<xref:System.Web.UI.WebControls.SqlDataSource>最初のデータ取得操作にデータをキャッシュ、多くても、時間数で指定されているのメモリに保持<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-248">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.SqlDataSource> caches data on the first data retrieval operation, holds it in memory for, at most, the amount of time that is specified by <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property.</span></span> <span data-ttu-id="7c381-249">データは、メモリが必要な場合は、継続時間の前にリリースされる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c381-249">The data might be released before the duration time, if the memory is required.</span></span> <span data-ttu-id="7c381-250">キャッシュは、次の操作中に更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-250">The cache is then refreshed during the next operation.</span></span> <span data-ttu-id="7c381-251">場合、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値、データ ソース コントロールは、最初のデータの取得操作上のデータをキャッシュしますが、後続の各操作用のキャッシュが保持している時間枠をリセットします。</span><span class="sxs-lookup"><span data-stu-id="7c381-251">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</span></span> <span data-ttu-id="7c381-252">相当する時間のアクティビティがない場合、キャッシュが期限切れ、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>前回値<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-252">The cache expires, if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value since the last <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="7c381-253"><xref:System.Web.UI.WebControls.SqlDataSource>内にある場合にのみ、コントロールがデータをキャッシュできる<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モード。</span><span class="sxs-lookup"><span data-stu-id="7c381-253">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when it is in <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="7c381-254">A<xref:System.NotSupportedException>によって例外がスローされます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッド場合、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値とキャッシュがも有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-254">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-255">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-255">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-256">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-256">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-257">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-257">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-258">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-258">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-259">次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール、データ キャッシュを有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-259">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="7c381-260"><xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 20 秒に設定されているので、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>既定では、このページのユーザーの値はデータを表示新規 20 秒ごとです。</span><span class="sxs-lookup"><span data-stu-id="7c381-260">The <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds and, because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value by default, users of this page will see fresh data every 20 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-261">存続期間と組み合わせた場合の、データ ソース コントロールが使用するキャッシュの動作を記述するキャッシュの有効期限の動作を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-261">Gets or sets the cache expiration behavior that, when combined with the duration, describes the behavior of the cache that the data source control uses.</span></span></summary>
        <value><span data-ttu-id="7c381-262"><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-262">One of the <see cref="T:System.Web.UI.DataSourceCacheExpiry" /> values.</span></span> <span data-ttu-id="7c381-263">既定値は、<see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-263">The default is the <see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-264"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータのキャッシュをサポートします。</span><span class="sxs-lookup"><span data-stu-id="7c381-264">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="7c381-265">データがキャッシュされるときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを基になるデータベースではなく、キャッシュからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-265">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="7c381-266">キャッシュが期限切れになったときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが、基になるデータベースからデータを取得および再度データをキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="7c381-266">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="7c381-267">キャッシュの動作の組み合わせによって決定されます、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-267">The behavior of the cache is determined by a combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> settings.</span></span> <span data-ttu-id="7c381-268">場合、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>値、<xref:System.Web.UI.WebControls.SqlDataSource>最初のデータ取得操作にデータをキャッシュで指定された時間分のメモリに保持、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティ、し、時間の有効期限が切れて後に破棄します。</span><span class="sxs-lookup"><span data-stu-id="7c381-268">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> value, the <xref:System.Web.UI.WebControls.SqlDataSource> caches data on the first data retrieval operation, holds it in memory for the amount of time that is specified by the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property, and then discards it after the time has lapsed.</span></span> <span data-ttu-id="7c381-269">キャッシュは、次の操作中に更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-269">The cache is then refreshed during the next operation.</span></span> <span data-ttu-id="7c381-270">場合、<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値、データ ソース コントロールは、最初のデータの取得操作上のデータをキャッシュしますが、後続の各操作用のキャッシュが保持している時間枠をリセットします。</span><span class="sxs-lookup"><span data-stu-id="7c381-270">If the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, the data source control caches data on the first data retrieval operation, but resets the time window that it holds the cache for each subsequent operation.</span></span> <span data-ttu-id="7c381-271">相当する時間のアクティビティがない場合、キャッシュが期限切れ、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>前回値<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-271">The cache expires, if there is no activity for a time that is equal to the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value since the last <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="7c381-272"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールがデータをキャッシュ時にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モード。</span><span class="sxs-lookup"><span data-stu-id="7c381-272">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="7c381-273">A<xref:System.NotSupportedException>によって例外がスローされます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッド場合、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値とキャッシュがも有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-273">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-274">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-274">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-275">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-275">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-276">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-276">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-277">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-277">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-278">次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール、データ キャッシュを有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-278">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="7c381-279"><xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値、ユーザーが新しいデータをいなくても表示されません、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>値は 20 秒です。</span><span class="sxs-lookup"><span data-stu-id="7c381-279">Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Sliding> value, users will not see fresh data even though the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value is 20 seconds.</span></span> <span data-ttu-id="7c381-280">アクティビティがない ページで、最後のページ読み込みから 20 秒より多くの場合にのみ、キャッシュされたデータが更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-280">The cached data is refreshed only if there is no activity on the page for more than 20 seconds since the last page load.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-281">データ ソース コントロールによって作成されたすべてのデータ キャッシュ オブジェクトにリンクされる、ユーザー定義のキー依存関係を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-281">Gets or sets a user-defined key dependency that is linked to all data cache objects that are created by the data source control.</span></span> <span data-ttu-id="7c381-282">キーの有効期限が切れると、すべてのキャッシュ オブジェクトが明示的に期限切れになります。</span><span class="sxs-lookup"><span data-stu-id="7c381-282">All cache objects are explicitly expired when the key is expired.</span></span></summary>
        <value><span data-ttu-id="7c381-283"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> によって作成されたすべてのキャッシュ オブジェクトを識別するキー。</span><span class="sxs-lookup"><span data-stu-id="7c381-283">A key that identifies all cache objects created by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-284"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータのキャッシュをサポートします。</span><span class="sxs-lookup"><span data-stu-id="7c381-284">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="7c381-285">データがキャッシュされるときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを基になるデータベースではなく、キャッシュからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-285">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="7c381-286">キャッシュが期限切れになったときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが、基になるデータベースからデータを取得および再度データをキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="7c381-286">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="7c381-287">設定することができます、<xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A>によって作成されるすべてのキャッシュ エントリ間の依存関係を作成するプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>制御とキー。</span><span class="sxs-lookup"><span data-stu-id="7c381-287">You can set the <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A> property to create a dependency between all cache entries that are created by the <xref:System.Web.UI.WebControls.SqlDataSource> control and the key.</span></span> <span data-ttu-id="7c381-288">いつでもすべてのキャッシュ エントリを期限切れプログラムで期限切れにして、キーにできます。</span><span class="sxs-lookup"><span data-stu-id="7c381-288">You can programmatically expire all the cache entries at any time by expiring the key.</span></span>  
  
 <span data-ttu-id="7c381-289"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールがデータをキャッシュ時にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モード。</span><span class="sxs-lookup"><span data-stu-id="7c381-289">The <xref:System.Web.UI.WebControls.SqlDataSource> control can cache data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span> <span data-ttu-id="7c381-290">A<xref:System.NotSupportedException>によって例外がスローされます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッド場合、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値とキャッシュがも有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-290">A <xref:System.NotSupportedException> exception is thrown by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method, if the <xref:System.Web.UI.WebControls.SqlDataSource> control is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value and caching is also enabled.</span></span>  
  
 <span data-ttu-id="7c381-291">組み合わせごとに一意のキャッシュ エントリが作成された、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>、および<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-291">A unique cache entry is created for every combination of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, and <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> properties.</span></span> <span data-ttu-id="7c381-292">複数<xref:System.Web.UI.WebControls.SqlDataSource>コントロールで使用できる、同じキャッシュ エントリのシナリオで同じ基になるデータベースからのコントロールが、同じデータを読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7c381-292">Multiple <xref:System.Web.UI.WebControls.SqlDataSource> controls can use the same cache entries in scenarios where the controls load the same data from the same underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-293">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-293">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-294">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-294">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-295">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-295">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-296">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-296">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-297"><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="null" /> と評価されたときに、データ取得操作をキャンセルするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-297">Gets or sets a value indicating whether a data retrieval operation is canceled when any parameter that is contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluates to <see langword="null" />.</span></span></summary>
        <value>
          <span data-ttu-id="7c381-298"><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="true" /> と評価されたときに、データ取得操作をキャンセルする場合は <see langword="null" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-298"><see langword="true" /> if a data retrieval operation is canceled when a parameter contained in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection evaluated to <see langword="null" />; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c381-299">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-299">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-300">値、<xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-300">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A> property is stored in view state.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-301">基になるデータベース内の行のデータが操作中に変更される場合に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールで更新と削除を実行する方法を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-301">Gets or sets the value indicating how the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control performs updates and deletes when data in a row in the underlying database changes during the time of the operation.</span></span></summary>
        <value><span data-ttu-id="7c381-302"><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-302">One of the <see cref="T:System.Web.UI.ConflictOptions" /> values.</span></span> <span data-ttu-id="7c381-303">既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-303">The default is the <see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-304"><xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに古い値と新しい値のパラメーターを適用するかどうかを決定する、`Update`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-304">The <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property determines whether parameters for old and new values are applied to the `Update` method.</span></span> <span data-ttu-id="7c381-305">コマンドである場合などで指定された、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティから返される、 <xref:System.Data.DataTable> 、列を持つオブジェクト`Name`と`Number`と<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions.OverwriteChanges> 、パラメーターが作成された値の`Name`と`Number`の`Update`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-305">For example, if the command that is specified by the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property returns a <xref:System.Data.DataTable> object with the columns `Name` and `Number` and the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.OverwriteChanges> value, parameters are created for `Name` and `Number` for the `Update` method.</span></span> <span data-ttu-id="7c381-306">場合、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 、パラメーターが作成された値の`Name`、 `Number`、 `original_Name`、および`original_Number`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-306">If the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters are created for `Name`, `Number`, `original_Name`, and `original_Number`.</span></span> <span data-ttu-id="7c381-307">(元の値のパラメーターの正確な名前が異なります、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティです)。<xref:System.Web.UI.WebControls.SqlDataSource>コントロール場合を決定し、`Update`メソッドで指定されている、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティが一致するパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-307">(The exact name of the parameters for the original values depends on the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property.) The <xref:System.Web.UI.WebControls.SqlDataSource> control then determines if the `Update` method that is specified in the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property has parameters that match.</span></span>  
  
 <span data-ttu-id="7c381-308">同時実行制御は、データを読み取るし、複数のクライアントがアクセスして、同じデータを操作するときに、ストアで変更する方法を制御するデータ ストアを使用する手法です。</span><span class="sxs-lookup"><span data-stu-id="7c381-308">Concurrency control is a technique that data stores use to control how data is read and changed in the store when multiple clients are accessing and manipulating the same data.</span></span> <span data-ttu-id="7c381-309">たとえば、1 つのクライアントは、データを読み取り、別のクライアントが、同じデータを読み取り、別のユーザーに提示中に、ユーザーに提示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-309">For example, one client reads data and presents it to a user, while another client reads the same data, and presents it to a different user.</span></span> <span data-ttu-id="7c381-310">両方のユーザーは、データ更新、データ ストレージに送信すると、予期しない結果が発生する、両方のクライアントは、同じデータの異なる値を更新するためです。</span><span class="sxs-lookup"><span data-stu-id="7c381-310">If both users update the data and submit it to the data storage, some unexpected result might occur, because both clients might update different values for the same data.</span></span> <span data-ttu-id="7c381-311">これは、競合と見なされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-311">This is considered a conflict.</span></span> <span data-ttu-id="7c381-312">設定して、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティを<xref:System.Web.UI.ConflictOptions.CompareAllValues>値、`Update`メソッドの競合を検出し、必要に応じて、それらの処理を元のデータ ソースの新旧の値を比較し、します。</span><span class="sxs-lookup"><span data-stu-id="7c381-312">By setting the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, your `Update` method can then compare the old and new values to the original data source to detect conflicts and handle them, as necessary.</span></span>  
  
 <span data-ttu-id="7c381-313"><xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-313">The <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-314">基になるデータベースに接続するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する ADO.NET プロバイダー固有の接続文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-314">Gets or sets the ADO.NET provider–specific connection string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying database.</span></span></summary>
        <value><span data-ttu-id="7c381-315"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が表す SQL データベースに接続するために使用する .NET Framework データ プロバイダー固有の文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-315">A .NET Framework data provider–specific string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to connect to the SQL database that it represents.</span></span> <span data-ttu-id="7c381-316">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="7c381-316">The default is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-317"><xref:System.Web.UI.WebControls.SqlDataSource>で ADO.NET プロバイダーのさまざまなコントロールを使用できるし、基になるデータ ソースへの接続に使用される接続文字列の構文は、プロバイダーに固有です。</span><span class="sxs-lookup"><span data-stu-id="7c381-317">The <xref:System.Web.UI.WebControls.SqlDataSource> control can be used with a variety of ADO.NET providers and the syntax of the connection string that is used to connect to an underlying data source is specific to the provider.</span></span>  
  
 <span data-ttu-id="7c381-318">構成するとき、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを設定する、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティをデータベースの種類 (既定値は<xref:System.Data.SqlClient?displayProperty=nameWithType>) に設定して、<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティをデータベースに接続するために必要な情報を含む接続文字列にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-318">When you configure a <xref:System.Web.UI.WebControls.SqlDataSource> control, you set the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property to the type of database (the default is <xref:System.Data.SqlClient?displayProperty=nameWithType>), and you set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to a connection string that includes information that is required in order to connect to the database.</span></span> <span data-ttu-id="7c381-319">接続文字列の内容は、データベースへのアクセスは、データ ソース コントロールの種類によって異なります。</span><span class="sxs-lookup"><span data-stu-id="7c381-319">The contents of a connection string differ depending on what type of database the data source control is accessing.</span></span> <span data-ttu-id="7c381-320">たとえば、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、サーバー名、データベース (カタログ) 名、および SQL Server に接続するときにユーザーを認証する方法に関する情報が必要です。</span><span class="sxs-lookup"><span data-stu-id="7c381-320">For example, the <xref:System.Web.UI.WebControls.SqlDataSource> control requires a server name, database (catalog) name, and information about how to authenticate the user when connecting to a SQL Server.</span></span> <span data-ttu-id="7c381-321">接続文字列の内容については、次を参照してください。、<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>プロパティを、<xref:System.Data.SqlClient.SqlConnection>クラス、<xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>プロパティを、<xref:System.Data.OracleClient.OracleConnection>クラス、<xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>プロパティを、<xref:System.Data.OleDb.OleDbConnection>クラス、または<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>プロパティを、<xref:System.Data.Odbc.OdbcConnection>クラスです。</span><span class="sxs-lookup"><span data-stu-id="7c381-321">For information about the contents of connection strings, see the <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A> property for the <xref:System.Data.SqlClient.SqlConnection> class, <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> property for the <xref:System.Data.OracleClient.OracleConnection> class, <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> property for the <xref:System.Data.OleDb.OleDbConnection> class, or the <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> property for the <xref:System.Data.Odbc.OdbcConnection> class.</span></span>  
  
 <span data-ttu-id="7c381-322">変更した場合、<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティ、<xref:System.Web.UI.IDataSource.DataSourceChanged>イベントが発生原因で、コントロールにバインドされている、<xref:System.Web.UI.WebControls.SqlDataSource>再バインドするコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-322">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> control to rebind.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-323">接続文字列を格納する方法については、次を参照してください。[操作方法: を使用するデータ ソース コントロールとの接続文字列をセキュリティで保護](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-323">For information about storing a connection string, see [How To: Secure Connection Strings when Using Data Source Controls](http://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-324">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-324">This section contains two code examples.</span></span> <span data-ttu-id="7c381-325">最初のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> Microsoft SQL Server データベースに接続し、結果を表示するプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティに、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-325">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to connect to a Microsoft SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-326">2 つ目のコード例に示しますより複雑なシナリオでは、ここで、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを表示し、パスワードで保護された Access データベース内のデータの更新に使用します。</span><span class="sxs-lookup"><span data-stu-id="7c381-326">The second code example demonstrates a more complex scenario, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Microsoft Access database.</span></span> <span data-ttu-id="7c381-327">各ケースで、 `connectionStrings` 、Web.config ファイルの要素が最初に表示されを含む ASP.NET ページで、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-327">In each case, the `connectionStrings` element of the Web.config file is shown first, followed by the ASP.NET page that contains the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="7c381-328">次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> 、SQL Server データベースに接続し、結果を表示するプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティに、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-328">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property to connect to a SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 <span data-ttu-id="7c381-329">次のコード例は、前のコード例より複雑なシナリオを示します場所、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用して、パスワードで保護された Access データベースのデータを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c381-329">The following code example demonstrates a more complex scenario than the preceding code example, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Access database.</span></span> <span data-ttu-id="7c381-330"><xref:System.Web.UI.WebControls.SqlDataSource>アクセスでは、使用、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティに設定されている、<xref:System.Data.OleDb>プロバイダー、および<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>を UNC 共有アクセス データベースの適切な接続文字列プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-330">Because the <xref:System.Web.UI.WebControls.SqlDataSource> is used with Access, the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb> provider, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to an appropriate connection string for a UNC-shared Access database.</span></span> <span data-ttu-id="7c381-331">A<xref:System.Web.UI.WebControls.GridView>コントロールは、出荷日の注文を表示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-331">A <xref:System.Web.UI.WebControls.GridView> control displays orders with shipment dates.</span></span> <span data-ttu-id="7c381-332">適切なチェック ボックスをクリックすると、注文を更新することができます、**更新**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-332">You can update an order by checking the appropriate check box, and then clicking the **Update** button.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-333">この例には、説明のためだけにプレーン テキスト パスワードが含まれます。</span><span class="sxs-lookup"><span data-stu-id="7c381-333">This example includes a password in plain text only for illustration purposes.</span></span> <span data-ttu-id="7c381-334">実稼働アプリケーションでパスワードを含む接続文字列を暗号化する必要があります。</span><span class="sxs-lookup"><span data-stu-id="7c381-334">In a production application, connection strings that include passwords should be encrypted.</span></span> <span data-ttu-id="7c381-335">詳細については、「[接続情報の保護](~/docs/framework/data/adonet/protecting-connection-information.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-335">For more information, see [Protecting Connection Information](~/docs/framework/data/adonet/protecting-connection-information.md).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="7c381-336">データ ソース ビューの名前。</span><span class="sxs-lookup"><span data-stu-id="7c381-336">The name of the data source view.</span></span></param>
        <summary><span data-ttu-id="7c381-337">データ ソース コントロールに関連付けられたデータ ソース ビュー オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="7c381-337">Creates a data source view object that is associated with the data source control.</span></span></summary>
        <returns><span data-ttu-id="7c381-338"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-338">A <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-339">派生したクラス、<xref:System.Web.UI.WebControls.SqlDataSource>クラスをオーバーライドできます、<xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A>強くを返すメソッドがデータ ソース ビュー オブジェクトを入力します。</span><span class="sxs-lookup"><span data-stu-id="7c381-339">Classes that derive from the <xref:System.Web.UI.WebControls.SqlDataSource> class can override the <xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A> method to return strongly typed data source view objects.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-340"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールがデータのフェッチに使用するデータ取得モードを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-340">Gets or sets the data retrieval mode that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to fetch data.</span></span></summary>
        <value><span data-ttu-id="7c381-341"><see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-341">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> values.</span></span> <span data-ttu-id="7c381-342">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />値。</span><span class="sxs-lookup"><span data-stu-id="7c381-342">The default is the  <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-343">データの取得のモードを識別する方法、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-343">The data retrieval mode identifies how a <xref:System.Web.UI.WebControls.SqlDataSource> control retrieves data from the underlying database.</span></span>  
  
 <span data-ttu-id="7c381-344">ときに、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値にデータを読み込む、<xref:System.Data.DataSet>オブジェクトと、サーバー上に格納されているメモリです。</span><span class="sxs-lookup"><span data-stu-id="7c381-344">When the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value, data is loaded into a <xref:System.Data.DataSet> object and stored in memory on the server.</span></span> <span data-ttu-id="7c381-345">これにより、シナリオ、ユーザー インターフェイスなどのコントロール、 <xref:System.Web.UI.WebControls.GridView>、並べ替え、フィルター、およびページング機能を提供します。</span><span class="sxs-lookup"><span data-stu-id="7c381-345">This enables scenarios where user interface controls, such as <xref:System.Web.UI.WebControls.GridView>, offer sorting, filtering, and paging capabilities.</span></span>  
  
 <span data-ttu-id="7c381-346">ときに、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値、データを取得して、<xref:System.Data.IDataReader>順方向専用、読み取り専用カーソルであるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-346">When the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value, data is retrieved by a <xref:System.Data.IDataReader> object, which is a forward-only, read-only cursor.</span></span> <span data-ttu-id="7c381-347">特定の種類の<xref:System.Data.IDataReader>オブジェクト NET データ プロバイダーに依存する、<xref:System.Web.UI.WebControls.SqlDataSource>によって識別される使用方法は、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-347">The specific type of the <xref:System.Data.IDataReader> object depends on the NET data provider that the <xref:System.Web.UI.WebControls.SqlDataSource> uses, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-348">既定では、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、プロバイダーを使用して、Microsoft SQL Server 用、 <xref:System.Data.SqlClient?displayProperty=nameWithType>、し、データ リーダーが、<xref:System.Data.SqlClient.SqlDataReader>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-348">By default, the <xref:System.Web.UI.WebControls.SqlDataSource> control uses the provider for Microsoft SQL Server, the <xref:System.Data.SqlClient?displayProperty=nameWithType>, and the data reader is a <xref:System.Data.SqlClient.SqlDataReader> object.</span></span>  
  
 <span data-ttu-id="7c381-349">変更した場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティ、<xref:System.Web.UI.IDataSource.DataSourceChanged>イベントが発生原因で、コントロールにバインドされている、<xref:System.Web.UI.WebControls.SqlDataSource>再バインドします。</span><span class="sxs-lookup"><span data-stu-id="7c381-349">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> to rebind.</span></span>  
  
 <span data-ttu-id="7c381-350">値、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティは viewstate に格納されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-350">The value of the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is stored in view state.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-351">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>、シナリオでの値、<xref:System.Web.UI.WebControls.ListBox>コントロールを必要としない並べ替え、ページング、およびフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="7c381-351">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value for a scenario with a <xref:System.Web.UI.WebControls.ListBox> control that requires no sorting, paging, nor filtering.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><span data-ttu-id="7c381-352"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> プロパティが <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> に定義されている値ではありません。</span><span class="sxs-lookup"><span data-stu-id="7c381-352">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> property is not one of the values defined in the <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-353"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> コレクション内にある任意のパラメーターを使用して、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-353">Performs a delete operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="7c381-354">基になるデータベースから削除された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="7c381-354">A value that represents the number of rows deleted from the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-355">削除操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-355">Before the delete operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event.</span></span> <span data-ttu-id="7c381-356">パラメーターの値を確認し、削除操作の前に処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-356">You can handle this event to examine the values of the parameters and to perform any preprocessing before a delete operation.</span></span>  
  
 <span data-ttu-id="7c381-357">操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-357">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event.</span></span> <span data-ttu-id="7c381-358">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-358">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="7c381-359"><xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドは、プログラムへのアクセス提供、`Delete`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-359">The <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method is provided for programmatic access to the `Delete` method.</span></span> <span data-ttu-id="7c381-360">場合、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールがデータ バインド コントロールに関連付け、データ バインド コントロールを自動的に呼び出して、**削除**メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-360">If the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data-bound control, the data-bound control automatically calls the **Delete** method.</span></span>  
  
 <span data-ttu-id="7c381-361"><xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドからデリゲートを<xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-361">The <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="7c381-362">操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>ビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>テキストおよび関連<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>値、および実行し、<xref:System.Data.Common.DbCommand>基になるデータベースに対して。</span><span class="sxs-lookup"><span data-stu-id="7c381-362">To perform the operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> values, and then executes the <xref:System.Data.Common.DbCommand> against the underlying database.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-363">次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind データベースから注文を削除するテキスト。</span><span class="sxs-lookup"><span data-stu-id="7c381-363">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="7c381-364">最初に、データは Orders テーブルから取得および表示で、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-364">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-365">明示的に宣言する必要があります、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>プロパティと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドなど、データ バインド コントロールを使用する場合、 <xref:System.Web.UI.WebControls.DropDownList> (その他のコントロールとは異なりなど<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>、自動的に設定する、パラメーターと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>データ ソース コントロールのメソッド)。</span><span class="sxs-lookup"><span data-stu-id="7c381-365">You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method on a data source control).</span></span> <span data-ttu-id="7c381-366">この例では、<xref:System.Web.UI.WebControls.Button.OnClick%2A>イベントは、プライベートに委任`OnDelete`を明示的に呼び出すイベント ハンドラー、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-366">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c381-367"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="7c381-367">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-368">基になるデータベースからデータを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-368">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to delete data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="7c381-369">データを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-369">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to delete data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-370"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>によって使用され、SQL クエリまたはストアド プロシージャの名前を表す、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-370">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span>  
  
 <span data-ttu-id="7c381-371">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-371">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-372">SQL 文字列がパラメーター化されたクエリまたはコマンドの場合は、パラメーターの構文も使用している ADO.NET プロバイダーに依存します。</span><span class="sxs-lookup"><span data-stu-id="7c381-372">If the SQL string is a parameterized query or command, the syntax of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-373">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>パラメーターの構文は、クラス、`'@parameterName'`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-373">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the syntax of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-374">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-374">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-375">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-375">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-376"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティから、データベースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-376">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property can be an SQL string or the name of a stored procedure, if the database supports stored procedures.</span></span>  
  
 <span data-ttu-id="7c381-377"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-377">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-378">セキュリティのため、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティは viewstate に格納されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-378">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property is not stored in view state.</span></span> <span data-ttu-id="7c381-379">クライアント上のビュー ステートの内容をデコードできるため、データベース構造に関する機密情報を格納すると、ビューに状態可能性があります、情報漏えいの脆弱性。</span><span class="sxs-lookup"><span data-stu-id="7c381-379">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-380">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>テキストを Northwind データベースの Orders テーブルからの注文を削除します。</span><span class="sxs-lookup"><span data-stu-id="7c381-380">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database Orders table.</span></span> <span data-ttu-id="7c381-381">データは Orders テーブルから取得されに表示される、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-381">Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-382"><xref:System.Web.UI.WebControls.GridView>レンダリング、**削除**ボタンを自動的にときに、<xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-382">The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`.</span></span> <span data-ttu-id="7c381-383">さらに、**削除**ボタンをクリックすると、<xref:System.Web.UI.WebControls.GridView>コントロールを自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクションと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-383">Additionally, when the **Delete** button is clicked, the <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method.</span></span> <span data-ttu-id="7c381-384">最後に、このコード例では、データを削除、されるため、イベント ハンドラーを追加する前にディスクにデータベースをバックアップしようとする、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-384">Finally, because this code example deletes data, an event handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-385"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-385">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property is an SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="7c381-386"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-386">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="7c381-387">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-387">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-388"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-388">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-389">削除操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-389">Occurs when a delete operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-390">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>削除操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-390">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleted> event to examine the values of output parameters after a delete operation has completed.</span></span> <span data-ttu-id="7c381-391">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-391">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="7c381-392">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-392">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-393"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-393">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="7c381-394"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-394">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-395">場合、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-395">If the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-396">確認していない<xref:System.Web.UI.WebControls.BoundField>にバインドするデータ バインド コントロール内のコントロール、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール内の任意のパラメーター名に一致する名前がある、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-396">Make sure that no <xref:System.Web.UI.WebControls.BoundField> controls in the data-bound control that you bind to the <xref:System.Web.UI.WebControls.SqlDataSource> control have names that match any parameter names in the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection.</span></span> <span data-ttu-id="7c381-397">パラメーターをバインドされたフィールドは、SQL コマンドと「パラメーターが指定されませんでした」エラーから除外されるように、同じ名前を持つ可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c381-397">Parameters that have the same name as bound fields are excluded from the SQL command, and a "parameter was not supplied" error might result.</span></span>  
  
 <span data-ttu-id="7c381-398">場合、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値、データの新旧両方の値のパラメーターが作成されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-398">If the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, the parameters are created for both the old and new values of the data.</span></span> <span data-ttu-id="7c381-399">古い値のパラメーターがに従って名前付き、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-399">The parameters for the old values are named according to the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property.</span></span>  
  
 <span data-ttu-id="7c381-400">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="7c381-400">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection might be important.</span></span> <span data-ttu-id="7c381-401"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-401">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order in which the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="7c381-402"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリにプレース ホルダーで、パラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-402">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with the placeholder in the SQL query.</span></span> <span data-ttu-id="7c381-403">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-403">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-404"><xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>プロパティの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>プロパティに含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-404">The <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-405">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-405">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-406">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-406">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-407">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-407">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-408">次のコード例は、設定する方法を示します、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> Northwind データベースから注文を削除するテキスト。</span><span class="sxs-lookup"><span data-stu-id="7c381-408">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database.</span></span> <span data-ttu-id="7c381-409">最初に、データは Orders テーブルから取得および表示で、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-409">Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-410">明示的に宣言する必要があります<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>プロパティと呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドなどを使用して、データ バインド コントロールと<xref:System.Web.UI.WebControls.DropDownList>(他のコントロールとは異なりなど<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>パラメーターを自動的に設定して呼び出す<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>データ ソース コントロールに)。</span><span class="sxs-lookup"><span data-stu-id="7c381-410">You must explicitly declare <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> on a data source control).</span></span> <span data-ttu-id="7c381-411">この例では、<xref:System.Web.UI.WebControls.Button.OnClick%2A>イベントは、プライベートに委任`OnDelete`を明示的に呼び出すイベント ハンドラー、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-411">In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-412">削除操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-412">Occurs before a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-413">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、削除操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-413">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the delete operation.</span></span>  
  
 <span data-ttu-id="7c381-414">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="7c381-414">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="7c381-415">そのため、操作を呼び出すことによって直接取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-415">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="7c381-416">ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトを`true`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-416">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="7c381-417">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-417">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-418">次のコード例は、処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>する前に発生するイベントを<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作が発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-418">The following code example demonstrates how to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> event that is raised before a <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation occurs.</span></span> <span data-ttu-id="7c381-419">この例は、Northwind データベースからデータを削除するため、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>前に、ディスクにデータベースをバックアップしようとするハンドラーを追加、<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-419">Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-420"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールでデータ キャッシュが有効かどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-420">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control has data caching enabled.</span></span></summary>
        <value>
          <span data-ttu-id="7c381-421">データ ソース コントロールでデータ キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-421"><see langword="true" /> if data caching is enabled for the data source control; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="7c381-422">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-422">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-423"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールはデータのキャッシュをサポートします。</span><span class="sxs-lookup"><span data-stu-id="7c381-423">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports data caching.</span></span> <span data-ttu-id="7c381-424">データがキャッシュされるときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを基になるデータベースではなく、キャッシュからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-424">While data is cached, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the cache rather than from the underlying database.</span></span> <span data-ttu-id="7c381-425">キャッシュが期限切れになったときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが、基になるデータベースからデータを取得および再度データをキャッシュします。</span><span class="sxs-lookup"><span data-stu-id="7c381-425">When the cache expires, the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method retrieves data from the underlying database, and then caches the data again.</span></span>  
  
 <span data-ttu-id="7c381-426"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールが自動的にデータをキャッシュ時に、<xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティが、キャッシュが最新のセットを取得する前にデータを格納する秒数を示す、0 より大きい値に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-426">The <xref:System.Web.UI.WebControls.SqlDataSource> control automatically caches data when the <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> property is set to a value greater than 0, which indicates the number of seconds that the cache stores data before retrieving a fresh set.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-427">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-427">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-428">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-428">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-429">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-429">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-430">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-430">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-431">次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール、データ キャッシュを有効にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-431">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled.</span></span> <span data-ttu-id="7c381-432"><xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>は 20 秒に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-432">The <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds.</span></span> <span data-ttu-id="7c381-433"><xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティに設定されている、<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>既定では、このページのユーザー フィールドはデータを表示新規 20 秒ごとです。</span><span class="sxs-lookup"><span data-stu-id="7c381-433">Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry.Absolute> field by default, users of this page will see fresh data every 20 seconds.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7c381-434"><see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> でキャッシュがサポートされていない場合、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティは <see langword="true" /> に設定されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-434">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> property is set to <see langword="true" /> when caching is not supported by the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-435"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドが呼び出されるときに適用されるフィルター式を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-435">Gets or sets a filtering expression that is applied when the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method is called.</span></span></summary>
        <value><span data-ttu-id="7c381-436"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-436">A string that represents a filtering expression applied when data is retrieved using the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> method.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-437"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティの値が書式指定文字列式 (で処理される文字列、<xref:System.String.Format%2A?displayProperty=nameWithType>メソッド) 内の値を使用する、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>文字列に含まれる任意の置換パラメーターのコレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-437">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property value is a format string expression (a string that is processed by the <xref:System.String.Format%2A?displayProperty=nameWithType> method) that uses the values in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> collection for any substitution parameters included in the string.</span></span> <span data-ttu-id="7c381-438">フィルター式の構文は同じ構文で受け入れを<xref:System.Data.DataView.RowFilter%2A>プロパティ、フィルター式が適用されるので、<xref:System.Data.DataView.RowFilter%2A>のプロパティ、<xref:System.Data.DataView>実行から返されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-438">The filter expression syntax is the same syntax that is accepted by the <xref:System.Data.DataView.RowFilter%2A> property, because the filter expression is applied to the <xref:System.Data.DataView.RowFilter%2A> property of the <xref:System.Data.DataView> object that is returned from executing the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span> <span data-ttu-id="7c381-439">詳細については、「<xref:System.Data.DataColumn.Expression%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-439">For more information, see <xref:System.Data.DataColumn.Expression%2A>.</span></span>  
  
 <span data-ttu-id="7c381-440">パラメーターを追加する場合、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション、書式文字列のプレース ホルダーを含めることもできます (たとえば、`"{0}")`パラメーター値の代わりに式でします。</span><span class="sxs-lookup"><span data-stu-id="7c381-440">If you add parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection, you can also include format string placeholders (for example, `"{0}")` in the expression to substitute for parameter values.</span></span> <span data-ttu-id="7c381-441">内のパラメーターのインデックスに従ってプレースは、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-441">The placeholders are replaced according to the index of the parameter in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="7c381-442">オブジェクトの<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションが`null`オブジェクトは空の文字列で置き換えられます。</span><span class="sxs-lookup"><span data-stu-id="7c381-442">If an object in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection is `null`, the object will be replaced by an empty string.</span></span>  
  
 <span data-ttu-id="7c381-443">内のパラメーターを含めることができます、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-443">You can include parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="7c381-444">パラメーターが文字列型または char 型の場合は、パラメーターを単一引用符で囲みます。</span><span class="sxs-lookup"><span data-stu-id="7c381-444">If the parameter is a string or character type, enclose the parameter in single quotation marks.</span></span> <span data-ttu-id="7c381-445">パラメーターが数値型の場合、引用符がある場合は、必要ではありません。</span><span class="sxs-lookup"><span data-stu-id="7c381-445">Quotation marks are not required, if the parameter is a numeric type.</span></span> <span data-ttu-id="7c381-446"><xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに含まれているプレース ホルダーに評価されるパラメーターが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-446">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection contains the parameters that are evaluated for the placeholders that are found in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span>  
  
 <span data-ttu-id="7c381-447"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、データのフィルター処理をサポートしている時にのみ、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モード。</span><span class="sxs-lookup"><span data-stu-id="7c381-447">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports filtering data only when in the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> mode.</span></span>  
  
 <span data-ttu-id="7c381-448"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-448">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-449">次のコード例は、Northwind データベースからデータを取得しを使用してフィルター処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>文字列と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-449">The following code example demonstrates how to retrieve data from the Northwind database and filter it using a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> string and the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="7c381-450"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティには、いつでもが適用される、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>データを取得するメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-450">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="7c381-451">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>に含まれているフィルター パラメーターのプレース ホルダーが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-451">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="7c381-452">さらに、フィルターのパラメーターは、<xref:System.Web.UI.WebControls.ControlParameter>にバインドされているオブジェクト、<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-452">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-453"><xref:System.Web.UI.WebControls.DropDownList>コントロールがその<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティに設定`true`の選択を変更しても、<xref:System.Web.UI.WebControls.DropDownList>コントロールが原因で、サーバーに情報を投稿するページと<xref:System.Web.UI.WebControls.GridView>データ ソースを再バインドするコントロール新しいフィルターを使用して制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-453">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the selection for the <xref:System.Web.UI.WebControls.DropDownList> control causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><span data-ttu-id="7c381-454"><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> プロパティが設定され、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> モードです。</span><span class="sxs-lookup"><span data-stu-id="7c381-454">The <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property was set and the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> is in <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> mode.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-455">フィルター操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-455">Occurs before a filter operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-456">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>イベント フィルターの前にパラメーター値の検証操作を実行、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、フィルター操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-456">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to perform validation operations on filter parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs a filter operation.</span></span> <span data-ttu-id="7c381-457">取り消すことができます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>を設定することによって、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>オブジェクトを`true`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-457">You can cancel the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> object to `true`.</span></span> <span data-ttu-id="7c381-458">場合にのみこのイベントは、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-458">The event is raised only if the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property is set.</span></span>  
  
 <span data-ttu-id="7c381-459"><xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType>イベントを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType>のイベント、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-459">The <xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType> event delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType> event of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="7c381-460">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-460">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-461"><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-461">Gets a collection of parameters that are associated with any parameter placeholders that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> string.</span></span></summary>
        <value><span data-ttu-id="7c381-462"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-462">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains a set of parameters associated with any parameter placeholders found in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-463">内のパラメーター、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションがで指定されているすべてのパラメーターで関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-463">The parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection are associated with any parameters that are specified in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property.</span></span> <span data-ttu-id="7c381-464">指定されているパラメーターのプレース ホルダー、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>内のパラメーター オブジェクトに注文されたと一致するプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションと、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-464">The parameter placeholders that are specified in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property are matched by order to parameter objects in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection when the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is called.</span></span>  
  
 <span data-ttu-id="7c381-465"><xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>プロパティに含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-465">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-466">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-466">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-467">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-467">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-468">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-468">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-469">次のコード例は、Northwind データベースからデータを取得しを使用してフィルター処理する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-469">The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span> <span data-ttu-id="7c381-470"><xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールはいつでも適用、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>データを取得するメソッドを実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-470">The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied anytime the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data.</span></span> <span data-ttu-id="7c381-471">この例では、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティに含まれているフィルター パラメーターのプレース ホルダーが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-471">In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection.</span></span> <span data-ttu-id="7c381-472">さらに、フィルターのパラメーターは、<xref:System.Web.UI.WebControls.ControlParameter>にバインドされているオブジェクト、<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>のプロパティ、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-472">In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-473"><xref:System.Web.UI.WebControls.DropDownList>コントロールがその<xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティに設定`true`の変化、<xref:System.Web.UI.WebControls.DropDownList>の選択は、サーバーに情報を投稿するページと<xref:System.Web.UI.WebControls.GridView>データ ソース コントロールにバインドするコントロール、新しいフィルターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-473">Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-474"><see cref="T:System.Data.Common.DbProviderFactory" /> プロパティで識別される ADO.NET プロバイダーに関連付けられた <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> オブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-474">Returns the <see cref="T:System.Data.Common.DbProviderFactory" /> object that is associated with the ADO.NET provider that is identified by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> property.</span></span></summary>
        <returns><span data-ttu-id="7c381-475">識別された ADO.NET プロバイダーを表す <see cref="T:System.Data.Common.DbProviderFactory" />。それ以外の場合、プロバイダーが設定されていないときは <see cref="N:System.Data.SqlClient" /> のインスタンス。</span><span class="sxs-lookup"><span data-stu-id="7c381-475">A <see cref="T:System.Data.Common.DbProviderFactory" /> that represents the identified ADO.NET provider; otherwise, and instance of the <see cref="N:System.Data.SqlClient" />, if no provider is set.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-476"><xref:System.Data.Common.DbProviderFactory>プロパティを使用、<xref:System.Web.UI.WebControls.SqlDataSource>データベースとやり取りするときに正しい ADO.NET 接続、コマンド、およびパラメーター オブジェクトを作成するコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-476">The <xref:System.Data.Common.DbProviderFactory> property is used by the <xref:System.Web.UI.WebControls.SqlDataSource> control to create the correct ADO.NET connection, command, and parameter objects when interacting with a database.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="7c381-477">取得するビューの名前。</span><span class="sxs-lookup"><span data-stu-id="7c381-477">The name of the view to retrieve.</span></span> <span data-ttu-id="7c381-478"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> がサポートするビューは 1 つだけであるため、<c>viewName</c> は無視されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-478">Because the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> supports only one view, <c>viewName</c> is ignored.</span></span></param>
        <summary><span data-ttu-id="7c381-479">データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-479">Gets the named data source view that is associated with the data source control.</span></span></summary>
        <returns><span data-ttu-id="7c381-480"><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられた "Table" という名前の <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-480">The <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> named "Table" that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-481"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、1 つだけのデータ ソース ビューをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="7c381-481">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports only one data source view.</span></span> <span data-ttu-id="7c381-482">すべてのデータ ソース ビュー オブジェクトと同様、<xref:System.Web.UI.WebControls.SqlDataSourceView>データ ソース コントロールに関連付けられているオブジェクトは、その機能を定義は、基になるデータベースからデータを取得する必要はし、並べ替え、挿入、削除、および更新などの操作を実行するすべての作業を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-482">As with all data source view objects, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the data source control defines its capabilities, performs all work that is necessary to retrieve data from the underlying database, and performs operations, such as sorting, inserting, deleting, and updating.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="7c381-483"><paramref name="viewName" /> が <see langword="null" /> であるか、<c>Table</c> 以外の値です。</span><span class="sxs-lookup"><span data-stu-id="7c381-483"><paramref name="viewName" /> is <see langword="null" /> or something other than <c>Table</c>.</span></span></exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-484"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-484">Gets a collection of names representing the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="7c381-485"><see cref="T:System.Collections.ICollection" /> に関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-485">An <see cref="T:System.Collections.ICollection" /> that contains the names of the views associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-486"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールがその基になるデータ、という名前の 1 つのビューをサポートする`"Table"`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-486">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports only one view on its underlying data, named `"Table"`.</span></span> <span data-ttu-id="7c381-487"><xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A>メソッドは、この 1 つのビューの名前の 1 つの要素のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-487">The <xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A> method returns a single-element collection of this one view name.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-488"><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> コレクション内にある任意のパラメーターを使用して、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-488">Performs an insert operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="7c381-489">基になるデータベースに挿入された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="7c381-489">A value that represents the number of rows inserted into the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-490">挿入操作を実行すると、前に、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-490">Before the insert operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event.</span></span> <span data-ttu-id="7c381-491">パラメーターの値を確認する前に処理を実行して、このイベントを処理することができます、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-491">You can handle this event to examine the values of the parameters and to perform any preprocessing before the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> operation.</span></span> <span data-ttu-id="7c381-492">挿入操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトのビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-492">To perform an insert operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> object builds an <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span>  
  
 <span data-ttu-id="7c381-493">操作の完了後、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-493">After the operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event.</span></span> <span data-ttu-id="7c381-494">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-494">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="7c381-495"><xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドは、プログラムへのアクセス提供、`Insert`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-495">The <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method is provided for programmatic access to the `Insert` method.</span></span> <span data-ttu-id="7c381-496">場合、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールがデータ バインド コントロールに関連付け、データ バインド コントロールを自動的に呼び出して、`Insert`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-496">If the <xref:System.Web.UI.WebControls.SqlDataSource> control is associated with a data-bound control, the data-bound control automatically calls the `Insert` method.</span></span>  
  
 <span data-ttu-id="7c381-497"><xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドからデリゲートを<xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-497">The <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-498">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-498">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-499">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-499">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-500">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-500">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-501">次のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと、単純な Web フォーム ページ。</span><span class="sxs-lookup"><span data-stu-id="7c381-501">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="7c381-502">データ テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-502">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-503">内の値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールをクリックして、**挿入**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-503">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="7c381-504">ときに、**挿入**ボタンがクリックされると、指定した値が、データベースに挿入し、<xref:System.Web.UI.WebControls.DropDownList>は更新します。</span><span class="sxs-lookup"><span data-stu-id="7c381-504">When the **Insert** button is clicked, the specified values are inserted into the database, and then the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-505">この例では、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスとも潜在的なセキュリティの脅威の検証を伴わないパラメーターに値が挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-505">This example includes a text box that accepts user input, which is a potential security threat and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="7c381-506">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-506">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-507">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-507">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-508">この例では、データ アクセスの宣言型の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-508">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-509">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-509">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c381-510"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="7c381-510">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-511">基になるデータベースにデータを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-511">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to insert data into the underlying database.</span></span></summary>
        <value><span data-ttu-id="7c381-512">データを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-512">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to insert data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-513"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>によって使用され、SQL クエリまたはストアド プロシージャの名前を表す、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-513">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> represents either an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span>  
  
 <span data-ttu-id="7c381-514">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-514">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-515">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="7c381-515">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-516">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-516">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-517">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-517">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-518">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-518">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-519"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-519">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="7c381-520">このプロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>と関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-520">This property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-521">セキュリティのため、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティは格納されませんビュー ステートがします。</span><span class="sxs-lookup"><span data-stu-id="7c381-521">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="7c381-522">クライアント上のビュー ステートの内容をデコードできるため、データベース構造に関する機密情報を格納すると、ビューに状態可能性があります、情報漏えいの脆弱性。</span><span class="sxs-lookup"><span data-stu-id="7c381-522">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-523">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-523">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-524">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-524">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-525">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-525">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-526">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-526">This section contains two code examples.</span></span> <span data-ttu-id="7c381-527">最初のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと、単純な Web フォーム ページ。</span><span class="sxs-lookup"><span data-stu-id="7c381-527">The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="7c381-528">2 番目のコード例は、Microsoft SQL Server からデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロールと使用方法、<xref:System.Web.UI.WebControls.DetailsView>に選択した行の詳細を表示するコントロール、<xref:System.Web.UI.WebControls.GridView>コントロールと新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="7c381-528">The second code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row into the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-529">これらの例では、データ アクセスの宣言の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-529">These examples show how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-530">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-530">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="7c381-531">次のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと、単純な Web フォーム ページ。</span><span class="sxs-lookup"><span data-stu-id="7c381-531">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="7c381-532">データ テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-532">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-533">値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールをクリックして、**挿入**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-533">You can add new records by entering values into the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="7c381-534">ときに、**挿入**ボタンがクリックされると、指定した値が、データベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList>コントロールが更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-534">When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-535">この例には、潜在的なセキュリティの脅威には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 し、値が、これは、潜在的なセキュリティの脅威も検証を伴わないパラメーターに挿入します。</span><span class="sxs-lookup"><span data-stu-id="7c381-535">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="7c381-536">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-536">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-537">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-537">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 <span data-ttu-id="7c381-538">次のコード例は、SQL Server からデータを取得し、表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロールと使用方法、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>コントロールと新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="7c381-538">The following code example demonstrates how to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="7c381-539">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>制御、および選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-539">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="7c381-540"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、確実に選択した行の<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-540">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="7c381-541">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c381-541">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="7c381-542">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-542">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="7c381-543">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-543">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="7c381-544"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="7c381-544">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="7c381-545">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7c381-545">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="7c381-546">最後に、データがデータベースに挿入した後、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されます、 <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-546">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-547"><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-547">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property is an SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="7c381-548"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-548">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="7c381-549">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-549">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-550"><xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-550">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-551">次のコード例は、Microsoft SQL Server データベースからデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-551">The following code example demonstrates how to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-552">使用する方法も示します、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="7c381-552">It also demonstrates how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
 <span data-ttu-id="7c381-553"><xref:System.Web.UI.WebControls.GridView>コントロールは、一連のデータを表示し、<xref:System.Web.UI.WebControls.DetailsView>特定の行の詳細を表示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-553">The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> displays the details for a particular row.</span></span> <span data-ttu-id="7c381-554">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c381-554">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="7c381-555">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-555">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="7c381-556">ストアド プロシージャの名前を設定、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティを設定して、ストアド プロシージャとして識別されると、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-556">The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and identified as a stored procedure by setting the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value.</span></span>  
  
 <span data-ttu-id="7c381-557">データベースにデータを挿入した後、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド、 <xref:System.Web.UI.WebControls.GridView>コントロールは、データの更新を明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-557">After data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-558">挿入操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-558">Occurs when an insert operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-559">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>挿入操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-559">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event to examine the values of output parameters after an insert operation has completed.</span></span> <span data-ttu-id="7c381-560">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-560">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="7c381-561">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-561">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-562">次のコード例は、Microsoft SQL Server からデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロールと使用方法、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="7c381-562">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-563">この例では、データ アクセスの宣言型の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-563">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-564">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-564">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="7c381-565">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>制御、および選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-565">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="7c381-566"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、確実に選択した行の<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-566">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="7c381-567">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c381-567">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="7c381-568">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-568">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="7c381-569">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-569">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="7c381-570"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合のオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="7c381-570">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="7c381-571">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7c381-571">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="7c381-572">最後に、データがデータベースに挿入した後、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-572">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-573">挿入操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-573">Occurs before an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-574">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、挿入操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-574">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the insert operation.</span></span> <span data-ttu-id="7c381-575">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="7c381-575">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="7c381-576">そのため、操作を呼び出すことによって直接取り消すことはできません、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-576">Therefore, you cannot cancel the operation directly by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> property.</span></span> <span data-ttu-id="7c381-577">ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトを`true`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-577">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object to `true`.</span></span>  
  
 <span data-ttu-id="7c381-578">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-578">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-579">次のコード例は、Microsoft SQL Server からデータを取得および表示する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロールと使用方法、<xref:System.Web.UI.WebControls.DetailsView>コントロールで選択した行の詳細を表示する、<xref:System.Web.UI.WebControls.GridView>と新しいレコードを挿入するためのフォームです。</span><span class="sxs-lookup"><span data-stu-id="7c381-579">The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-580">この例では、データ アクセスの宣言型の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-580">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-581">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-581">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 <span data-ttu-id="7c381-582">最初に、データが内に表示されます、<xref:System.Web.UI.WebControls.GridView>制御、および選択した行の<xref:System.Web.UI.WebControls.GridView>にも表示されます、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-582">Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="7c381-583"><xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>コントロールが別のデータを使用してソース コントロール; に関連付けられている 1 つ、<xref:System.Web.UI.WebControls.DetailsView>が、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティで、確実に選択した行の<xref:System.Web.UI.WebControls.GridView>は表示されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-583">The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.</span></span>  
  
 <span data-ttu-id="7c381-584">自動的に生成された をクリックすると**挿入**のボタン、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.DetailsView>新しいレコードを挿入するために使用する別のユーザー インターフェイスを示しています。</span><span class="sxs-lookup"><span data-stu-id="7c381-584">If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record.</span></span> <span data-ttu-id="7c381-585">この例では、レコードを挿入するストアド プロシージャを使用し、挿入された行の主キーを返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-585">The example uses a stored procedure to insert records and returns the primary key of the inserted row.</span></span> <span data-ttu-id="7c381-586">レコードを挿入する場合、<xref:System.Web.UI.WebControls.DetailsView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>呼び出し、バインドされた列から値を使用して、コレクション、<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-586">If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method.</span></span> <span data-ttu-id="7c381-587"><xref:System.Web.UI.WebControls.DetailsView>から適切なパラメーターを推論できる<xref:System.Web.UI.WebControls.BoundField>オブジェクトとパラメーターを<xref:System.Web.UI.WebControls.TemplateField>ASP.NET 双方向データ バインディングの構文を使用する場合。</span><span class="sxs-lookup"><span data-stu-id="7c381-587">The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used.</span></span> <span data-ttu-id="7c381-588">この例では、追加のパラメーターが追加された、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>ストアド プロシージャによって返される主キーを処理するイベント ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="7c381-588">In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.</span></span>  
  
 <span data-ttu-id="7c381-589">最後に、データがデータベースに挿入した後、<xref:System.Web.UI.WebControls.DetailsView>コントロール、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>を処理するイベント ハンドラーが呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>イベント、挿入された行の主キーの値が表示されたら、および`DataBind`のメソッド<xref:System.Web.UI.WebControls.GridView>データを更新するコントロールを明示的に呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-589">Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the `DataBind` method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-590"><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-590">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="7c381-591"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-591">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-592"><xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>プロパティの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>プロパティに含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-592">The <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 <span data-ttu-id="7c381-593">場合、<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-593">If the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="7c381-594">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="7c381-594">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection might be important.</span></span> <span data-ttu-id="7c381-595"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリで使用されるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-595">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="7c381-596"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-596">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="7c381-597">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-597">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-598">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-598">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-599">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-599">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-600">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-600">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-601">次のコード例を使用してデータベースにデータを挿入する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと、単純な Web フォーム ページ。</span><span class="sxs-lookup"><span data-stu-id="7c381-601">The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page.</span></span> <span data-ttu-id="7c381-602">データ テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-602">The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-603">内の値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールをクリックして、**挿入**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-603">You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button.</span></span> <span data-ttu-id="7c381-604">ときに、**挿入**ボタンがクリックされると、指定した値が、データベースに挿入され、<xref:System.Web.UI.WebControls.DropDownList>コントロールが更新されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-604">When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-605">この例には、潜在的なセキュリティの脅威には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 し、値が、これは、潜在的なセキュリティの脅威も検証を伴わないパラメーターに挿入します。</span><span class="sxs-lookup"><span data-stu-id="7c381-605">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="7c381-606">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-606">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-607">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-607">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-608">この例では、データ アクセスの宣言型の構文を使用する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-608">This example shows how to use declarative syntax for data access.</span></span> <span data-ttu-id="7c381-609">マークアップではなくコードを使用してデータにアクセスする方法については、次を参照してください。 [Visual Studio でのデータにアクセスする](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-609">For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](http://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="7c381-610"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> の状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-610">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></param>
        <summary><span data-ttu-id="7c381-611">永続化する必要がある <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールのプロパティの状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="7c381-611">Loads the state of the properties in the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control that need to be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-612"><xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A>メソッドはの以前に保存したビューステートの読み込みに使用、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-612">The <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A> method is used to load the previously saved view state of the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-613"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> メソッドに渡される任意のパラメーター名に適用される書式指定文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-613">Gets or sets a format string to apply to the names of any parameters that are passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> method.</span></span></summary>
        <value><span data-ttu-id="7c381-614"><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> メソッドに渡される任意の <paramref name="oldValues" /> パラメーターの名前に適用される書式指定文字列を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-614">A string that represents a format string applied to the names of any <paramref name="oldValues" /> parameters passed to the <see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> or <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> methods.</span></span> <span data-ttu-id="7c381-615">既定値は "{0}" です。</span><span class="sxs-lookup"><span data-stu-id="7c381-615">The default is "{0}".</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-616"><xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>書式指定文字列はによって識別されるものなど、主キーにのみ適用、`DataKeyNames`または delete で関連付けられたデータ バインド コントロールのプロパティ更新シナリオと場所、<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値と一連の`oldValues`は対応するデータのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-616">The <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> format string is applied only to primary keys, such as those that are identified by the `DataKeyNames` property of the associated data-bound control, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="7c381-617">各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-617">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="7c381-618">2 つの一般的なシナリオが変わることがあります、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティには次のようにします。</span><span class="sxs-lookup"><span data-stu-id="7c381-618">Two common scenarios where you might change the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property are as follows:</span></span>  
  
-   <span data-ttu-id="7c381-619">古い値と新しい値に更新プログラムを区別します。</span><span class="sxs-lookup"><span data-stu-id="7c381-619">To differentiate between old and new values in updates.</span></span> <span data-ttu-id="7c381-620">ときに、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定されている、 <xref:System.Web.UI.ConflictOptions.CompareAllValues> 、パラメーターの値と元の新しい値の両方に追加する、<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-620">When the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value, parameters for both the original and new values are added to the <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="7c381-621">書式指定文字列をなしの各データ フィールドの同じ名前の 2 つのパラメーターが作成されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-621">Without the formatting string, two parameters with the same name would be created for each data field.</span></span> <span data-ttu-id="7c381-622">元の値パラメーターの名前を変更すると、競合を検出し、キーの値を比較する元のデータ ソースへのデータを比較できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-622">By changing the name of the original value parameter, you can compare the data to the original data source to detect conflicts and compare key values.</span></span>  
  
-   <span data-ttu-id="7c381-623">一部のビジュアル デザイナーでは、元の値とキーの特定の名前付けスキームを実装します。</span><span class="sxs-lookup"><span data-stu-id="7c381-623">Some visual designers implement a particular naming scheme for original values and keys.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="7c381-624">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-624">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="7c381-625"><see cref="E:System.Web.UI.Page.LoadComplete" /> コントロールを格納する <see cref="T:System.Web.UI.Page" /> コントロールに <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベント ハンドラーを追加します。</span><span class="sxs-lookup"><span data-stu-id="7c381-625">Adds a <see cref="E:System.Web.UI.Page.LoadComplete" /> event handler to the <see cref="T:System.Web.UI.Page" /> control that contains the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-626">イベント ハンドラーで追加される、<xref:System.Web.UI.WebControls.SqlDataSource>オブジェクトの更新プログラム、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-626">The event handler that is added by the <xref:System.Web.UI.WebControls.SqlDataSource> object updates the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> values.</span></span> <span data-ttu-id="7c381-627">値が更新された場合、<xref:System.Web.UI.IDataSource.DataSourceChanged>イベントが発生原因で、コントロールにバインドされている、<xref:System.Web.UI.WebControls.SqlDataSource>再バインドするコントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-627">If the values are updated, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> control to rebind.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-628"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが基になるデータ ソースに接続するために使用する .NET Framework データ プロバイダーの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-628">Gets or sets the name of the .NET Framework data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to connect to an underlying data source.</span></span></summary>
        <value><span data-ttu-id="7c381-629"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用するデータ プロバイダーの名前。それ以外の場合、プロバイダーが設定されていないときは、Microsoft SQL Server の ADO.NET プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="7c381-629">The name of the data provider that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses; otherwise, the ADO.NET provider for Microsoft SQL Server, if no provider is set.</span></span> <span data-ttu-id="7c381-630">既定値は、Microsoft SQL Server の ADO.NET プロバイダーです。</span><span class="sxs-lookup"><span data-stu-id="7c381-630">The default is the ADO.NET provider for Microsoft SQL Server.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-631">.NET Framework には、次のデータ プロバイダーが含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-631">The .NET Framework includes the following data providers:</span></span>  
  
-   <span data-ttu-id="7c381-632"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、.NET Framework Data Provider for SQL Server の既定値です。</span><span class="sxs-lookup"><span data-stu-id="7c381-632">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider is the default .NET Framework Data Provider for SQL Server.</span></span>  
  
-   <span data-ttu-id="7c381-633"><xref:System.Data.OleDb?displayProperty=nameWithType>プロバイダーは、.NET Framework Data Provider for OLE DB します。</span><span class="sxs-lookup"><span data-stu-id="7c381-633">The <xref:System.Data.OleDb?displayProperty=nameWithType> provider is the .NET Framework Data Provider for OLE DB.</span></span>  
  
-   <span data-ttu-id="7c381-634"><xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、.NET Framework Data Provider for ODBC です。</span><span class="sxs-lookup"><span data-stu-id="7c381-634">The <xref:System.Data.Odbc?displayProperty=nameWithType> provider is the .NET Framework Data Provider for ODBC.</span></span>  
  
-   <span data-ttu-id="7c381-635"><xref:System.Data.OracleClient?displayProperty=nameWithType>プロバイダーは、.NET Framework Data Provider for Oracle です。</span><span class="sxs-lookup"><span data-stu-id="7c381-635">The <xref:System.Data.OracleClient?displayProperty=nameWithType> provider is the .NET Framework Data Provider for Oracle.</span></span>  
  
 <span data-ttu-id="7c381-636"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティがなど、アンマネージの ADO.NET プロバイダーの名前に設定しないで`MSDAORA`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-636">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is never set to the name of an unmanaged ADO.NET provider, such as `MSDAORA`.</span></span> <span data-ttu-id="7c381-637">詳細については、次を参照してください。 [SqlDataSource コントロールを使用してデータを選択する](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-637">For more information, see [Selecting Data Using the SqlDataSource Control](http://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb).</span></span>  
  
 <span data-ttu-id="7c381-638">変更した場合、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ、<xref:System.Web.UI.IDataSource.DataSourceChanged>イベントが発生原因で、コントロールにバインドされている、<xref:System.Web.UI.WebControls.SqlDataSource>再バインドします。</span><span class="sxs-lookup"><span data-stu-id="7c381-638">If you change the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property, the <xref:System.Web.UI.IDataSource.DataSourceChanged> event is raised, causing any controls that are bound to the <xref:System.Web.UI.WebControls.SqlDataSource> to rebind.</span></span>  
  
 <span data-ttu-id="7c381-639">使用可能なプロバイダーの一覧を指定する、`DbProviderFactories`のサブセクション、 `system.data` Machine.config ファイルのセクションです。</span><span class="sxs-lookup"><span data-stu-id="7c381-639">A list of available providers is specified in the `DbProviderFactories` subsection of the `system.data` section of the Machine.config file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-640">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-640">This section contains two code examples.</span></span> <span data-ttu-id="7c381-641">最初の例では、既定値を使用して SQL Server データベースに .NET Framework Data Provider 用の SQL Server に接続する方法、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、<xref:System.Data.SqlClient?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-641">The first code demonstrates how to connect to a SQL Server database using the default .NET Framework Data Provider for SQL Server for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7c381-642">2 番目のコード例は、odbc の場合、.NET Framework Data Provider を使用して ODBC データベースに接続する方法を示します、<xref:System.Data.Odbc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-642">The second code example demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="7c381-643">次のコード例は、の既定のデータ プロバイダーを使用して SQL Server データベースに接続する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール、<xref:System.Data.SqlClient?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-643">The following code example demonstrates how to connect to a SQL Server database using the default data provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7c381-644">ときに、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティが明示的に設定されていない、既定のプロバイダーを使用します。</span><span class="sxs-lookup"><span data-stu-id="7c381-644">Whenever the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is not explicitly set, the default provider is used.</span></span> <span data-ttu-id="7c381-645"><xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティは、プロバイダーに固有です。</span><span class="sxs-lookup"><span data-stu-id="7c381-645">The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is provider-specific.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 <span data-ttu-id="7c381-646">前のコード例と同じは機能的には、次のコード例は、odbc の場合、.NET Framework Data Provider を使用して ODBC データベースに接続する方法を示します、<xref:System.Data.Odbc?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="7c381-646">The following code example, which is functionally the same as the preceding code example, demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>.</span></span> <span data-ttu-id="7c381-647"><xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティが ODBC データベースへの接続に使用される ODBC データ ソース名 (DSN) の名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-647">The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN) that is used to connect to the ODBC database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-648"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールの現在のビューステートを保存します。</span><span class="sxs-lookup"><span data-stu-id="7c381-648">Saves the current view state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="7c381-649"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> の保存された状態を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-649">An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.SqlDataSource" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments"><span data-ttu-id="7c381-650">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-650">A <see cref="T:System.Web.UI.DataSourceSelectArguments" /> object that is used to request operations on the data beyond basic data retrieval.</span></span></param>
        <summary><span data-ttu-id="7c381-651"><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-651">Retrieves data from the underlying database by using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="7c381-652">データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</span><span class="sxs-lookup"><span data-stu-id="7c381-652">An <see cref="T:System.Collections.IEnumerable" /> list of data rows.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-653"><xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが中に自動的に呼び出されます、<xref:System.Web.UI.Control.PreRender>ページ ライフ サイクルの段階です。</span><span class="sxs-lookup"><span data-stu-id="7c381-653">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is automatically called during the <xref:System.Web.UI.Control.PreRender> phase of the page life cycle.</span></span> <span data-ttu-id="7c381-654">アタッチされているデータ バインドされたコントロールによって呼び出されます、<xref:System.Web.UI.WebControls.SqlDataSource>を介して制御、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-654">It is called by data-bound controls that have been attached to a <xref:System.Web.UI.WebControls.SqlDataSource> control through their <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property.</span></span>  
  
 <span data-ttu-id="7c381-655"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドを返します、<xref:System.Data.DataView>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-655">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method returns a <xref:System.Data.DataView> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> value.</span></span> <span data-ttu-id="7c381-656"><xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>メソッドを返します、<xref:System.Data.IDataReader>オブジェクトの場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値。</span><span class="sxs-lookup"><span data-stu-id="7c381-656">The <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method returns a <xref:System.Data.IDataReader> object if the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to the <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader> value.</span></span> <span data-ttu-id="7c381-657">閉じる、<xref:System.Data.IDataReader>オブジェクト データの読み取りが完了したとき。</span><span class="sxs-lookup"><span data-stu-id="7c381-657">Close the <xref:System.Data.IDataReader> object when you have finished reading the data.</span></span>  
  
 <span data-ttu-id="7c381-658">前に、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-658">Before the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event.</span></span> <span data-ttu-id="7c381-659">パラメーターの値を確認する前に処理を実行して、このイベントを処理することができます、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-659">You can handle this event to examine the values of the parameters and to perform any processing before the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="7c381-660">後に、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-660">After the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event.</span></span> <span data-ttu-id="7c381-661">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-661">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="7c381-662">場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType>キャッシュが有効になっていると、<xref:System.Web.UI.WebControls.SqlDataSource>オブジェクトからデータを取得し、の間にキャッシュにデータを保存、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-662">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> and caching is enabled, the <xref:System.Web.UI.WebControls.SqlDataSource> object retrieves data from and saves data to the cache during the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span> <span data-ttu-id="7c381-663">キャッシュが作成、破棄、または更新の組み合わせで指定されているキャッシュの動作に基づいて、<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-663">The cache is created, discarded, or refreshed based on the caching behavior that is specified by the combination of the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> properties.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-664">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-664">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-665">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-665">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-666">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-666">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-667">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータの取得されるたび、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-667">If you expect more than one user to access the data, and you want each retrieval of data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
 <span data-ttu-id="7c381-668">場合、<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティが指定されて、指定されたいずれかと、フィルター式が評価される<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティとその結果のフィルターの適用中にデータの一覧に、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-668">If the <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> property is set to <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> and a <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property has been specified, the filter expression is evaluated with any supplied <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties and the resulting filter is applied to the list of data during the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> operation.</span></span>  
  
 <span data-ttu-id="7c381-669"><xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドからデリゲートを<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-669">The <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="7c381-670">データの取得操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>ビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>値、および実行し、<xref:System.Data.Common.DbCommand>基になるデータベースに対して。</span><span class="sxs-lookup"><span data-stu-id="7c381-670">To perform a data retrieval operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object by using the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> values, and then executes the <xref:System.Data.Common.DbCommand> against the underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-671">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-671">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-672">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-672">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-673">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-673">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-674">次の例をプログラムによって呼び出す方法を示して、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドし、クエリの結果に基づいて値を設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-674">The following examples show how to programmatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method and set values based on the result of the query.</span></span> <span data-ttu-id="7c381-675">次の例では、Web コントロールの宣言型コードを示します。</span><span class="sxs-lookup"><span data-stu-id="7c381-675">The following example shows the declarative code for the Web controls.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 <span data-ttu-id="7c381-676">次の例をプログラムによって呼び出す方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-676">The following example shows how to programmatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method.</span></span> <span data-ttu-id="7c381-677"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、整数を返します。</span><span class="sxs-lookup"><span data-stu-id="7c381-677">The <xref:System.Web.UI.WebControls.SqlDataSource> control returns an integer.</span></span> <span data-ttu-id="7c381-678">テキストを設定する整数の値が使用される、<xref:System.Web.UI.WebControls.Label>コントロールを表示するかどうかを判断し、<xref:System.Web.UI.WebControls.HyperLink>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-678">The value of the integer is used to set the text of a <xref:System.Web.UI.WebControls.Label> control and to determine whether to display a <xref:System.Web.UI.WebControls.HyperLink> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c381-679"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトが、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="7c381-679">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> object cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-680">基になるデータベースからデータを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-680">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to retrieve data from the underlying database.</span></span></summary>
        <value><span data-ttu-id="7c381-681"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> でデータを取得する際に使用する SQL 文字列またはストアド プロシージャ名。</span><span class="sxs-lookup"><span data-stu-id="7c381-681">An SQL string or the name of a stored procedure that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to retrieve data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-682"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティは、SQL クエリまたはストアド プロシージャの名前を表しで使用される、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> SQL Server データベースからデータを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-682">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method to retrieve data from a SQL Server database.</span></span> <span data-ttu-id="7c381-683">Select コマンドのアスタリスク (\*) を使用して、すべての列を選択して、自動コード生成を使用して更新を実施するか、操作を削除する場合、以下のことを確認する場合列にはスペースが含まれていない、名前にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-683">If you use an asterisk (\*) in the Select command to select all columns, and if you use automatic code generation to perform update or delete operations, make sure that no columns have spaces in their names.</span></span>  
  
 <span data-ttu-id="7c381-684">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-684">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-685">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="7c381-685">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-686">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-686">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-687">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-687">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-688">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-688">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-689"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-689">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="7c381-690"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-690">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-691">セキュリティのため、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティは格納されませんビュー ステートがします。</span><span class="sxs-lookup"><span data-stu-id="7c381-691">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="7c381-692">クライアント上のビュー ステートの内容をデコードできるため、データベース構造に関する機密情報を格納すると、ビューに状態可能性があります、情報漏えいの脆弱性。</span><span class="sxs-lookup"><span data-stu-id="7c381-692">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-693">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-693">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-694">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-694">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-695">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-695">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-696">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-696">This section contains two code examples.</span></span> <span data-ttu-id="7c381-697">最初のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>を ODBC 準拠のデータベースからデータを取得して表示で基本的な SQL クエリ テキスト、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-697">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-698">2 番目のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ストアド プロシージャの名前にテキストと<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値を Microsoft SQL Server データベースからデータを取得し、表示、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-698">The second code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 <span data-ttu-id="7c381-699">どちらの例では、明示的に呼び出す必要はありません、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを介してデータ ソースに接続されているデータ バインド コントロールを制御するため、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>プロパティは自動的に呼び出す、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> 中にメソッド<xref:System.Web.UI.Control.PreRender>フェーズ。</span><span class="sxs-lookup"><span data-stu-id="7c381-699">In both examples, there is no need to explicitly call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method because the data-bound controls that are attached to the data source control through the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property will automatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method during the <xref:System.Web.UI.Control.PreRender> phase.</span></span>  
  
 <span data-ttu-id="7c381-700">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>を ODBC 準拠のデータベースからデータを取得して表示で基本的な SQL クエリ テキスト、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-700">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 <span data-ttu-id="7c381-701">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ストアド プロシージャの名前にテキストと<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値を SQL Server データベースからデータを取得し、表示、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-701">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="7c381-702"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL クエリまたはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-702">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-703"><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> プロパティのテキストが SQL クエリまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-703">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property is an SQL query or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="7c381-704"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-704">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="7c381-705">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-705">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-706"><xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-706">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-707">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ストアド プロシージャの名前にテキストと<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値は、Microsoft SQL Server データベースからデータを取得して表示するために、 <xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-707">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure> value, in order to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-708">データ取得操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-708">Occurs when a data retrieval operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-709">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Selected>データ取得操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-709">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selected> event to examine the values of output parameters after a data retrieval operation has completed.</span></span> <span data-ttu-id="7c381-710">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-710">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="7c381-711">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-711">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-712">データ取得操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-712">Occurs before a data retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-713">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、select 操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-713">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the select operation.</span></span> <span data-ttu-id="7c381-714">Select の引数は、<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-714">The select arguments are available from the <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="7c381-715">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-715">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-716"><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-716">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> object that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="7c381-717"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-717">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-718">場合、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-718">If the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="7c381-719">ADO.NET プロバイダーでは、パラメーターの順序によって、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクションが重要であります。</span><span class="sxs-lookup"><span data-stu-id="7c381-719">Depending on the ADO.NET provider, the order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection might be important.</span></span> <span data-ttu-id="7c381-720"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリで使用されるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-720">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="7c381-721"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-721">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="7c381-722">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-722">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-723"><xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>プロパティの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>プロパティに含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-723">The <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-724">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-724">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-725">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-725">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-726">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-726">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-727">次のコード例を設定して、Microsoft SQL Server で Northwind データベースからデータを取得する方法を示しています、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> SQL クエリのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-727">The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query.</span></span> <span data-ttu-id="7c381-728">SQL クエリがパラメーター化と内のプレース ホルダー、<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティが照合する、<xref:System.Web.UI.WebControls.ControlParameter>に追加されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-728">The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="7c381-729"><xref:System.Web.UI.WebControls.DropDownList>を制御する、<xref:System.Web.UI.WebControls.ControlParameter>にバインドされて、動作にどのようなフィルターが表示されるとおり、<xref:System.Web.UI.WebControls.ListBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-729">The <xref:System.Web.UI.WebControls.DropDownList> control, which the <xref:System.Web.UI.WebControls.ControlParameter> is bound to, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.</span></span>  
  
 <span data-ttu-id="7c381-730">使用できるパラメーターの他の種類については、次を参照してください。、<xref:System.Web.UI.WebControls.Parameter>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="7c381-730">For information about other types of parameters you can use, see the <xref:System.Web.UI.WebControls.Parameter> class overview.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="7c381-731">パラメーターが使用する、WHERE 句で使用されるため、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コード例では機能的にを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-731">Because the parameter is used in a WHERE clause, the use of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> property in the code example is functionally equivalent to using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-732">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-732">Gets or sets the name of a stored procedure parameter that is used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></summary>
        <value><span data-ttu-id="7c381-733">ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前。</span><span class="sxs-lookup"><span data-stu-id="7c381-733">The name of a stored procedure parameter used to sort retrieved data when data retrieval is performed using a stored procedure.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-734"><xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティが評価されるだけで、SQL コマンドに含まれる、<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティは、ストアド プロシージャの名前。</span><span class="sxs-lookup"><span data-stu-id="7c381-734">The <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property is evaluated only when the SQL command that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> property is the name of a stored procedure.</span></span> <span data-ttu-id="7c381-735">この例では場合、<xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A>プロパティが設定されて、ストアド プロシージャの結果の並べ替えに使用されるパラメーターの名前が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-735">In this case, if the <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A> property is set, it contains the name of a parameter that is used to sort the results of the stored procedure.</span></span>  
  
 <span data-ttu-id="7c381-736">場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>プロパティが設定されて、前に付加、<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="7c381-736">If the <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A> property is set, it is prepended to the <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-737">Microsoft SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す、セミコロンで区切られた文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-737">Gets or sets a semicolon-delimited string that indicates which databases and tables to use for the Microsoft SQL Server cache dependency.</span></span></summary>
        <value><span data-ttu-id="7c381-738">SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-738">A string that indicates which databases and tables to use for the SQL Server cache dependency.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-739"><xref:System.Web.UI.WebControls.SqlDataSource>コントロールに基づくオプションの有効期限ポリシーをサポートしている、 <xref:System.Web.Caching.SqlCacheDependency> (データベース サーバーのサービスを構成する必要があります)、データ キャッシュのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-739">The <xref:System.Web.UI.WebControls.SqlDataSource> control supports an optional expiration policy based on the <xref:System.Web.Caching.SqlCacheDependency> object for the data cache (the service must be configured for the database server).</span></span>  
  
 <span data-ttu-id="7c381-740"><xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>データベースと同じ形式で使用されるに従ってテーブルを識別する文字列、`@ Page`ディレクティブについては、ここで、文字列の最初の部分は、Microsoft SQL Server データベースへの接続文字列とそれに続くコロン区切り記号、および最後に、データベース テーブルの名前 (たとえば、 `"connectionstring1:table1"`)。</span><span class="sxs-lookup"><span data-stu-id="7c381-740">The <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> string identifies databases and tables according to the same format that is used by the `@ Page` directive, where the first part of the string is a connection string to a Microsoft SQL Server database, followed by a colon delimiter, and finally the name of the database table (for example, `"connectionstring1:table1"`).</span></span> <span data-ttu-id="7c381-741">場合、<xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>プロパティが 1 つ以上のテーブルに依存、接続文字列とテーブル名のペアをセミコロンで区切られます (たとえば、 `"connectionstring1:table1";connectionstring2:table2"`)。</span><span class="sxs-lookup"><span data-stu-id="7c381-741">If the <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> property depends on more than one table, the connection string-and-table name pairs are separated by semicolons (for example, `"connectionstring1:table1";connectionstring2:table2"`).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-742">Microsoft Windows 認証ではクライアントの偽装を使用しているときに、最初のユーザー データにアクセスするときに、データがキャッシュされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-742">When you are using client impersonation under Microsoft Windows authentication, the data is cached when the first user accesses the data.</span></span> <span data-ttu-id="7c381-743">別のユーザーは、同じデータを要求している場合は、データがキャッシュから取得されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-743">If another user requests the same data, the data is retrieved from the cache.</span></span> <span data-ttu-id="7c381-744">データは、データへのユーザーのアクセスを確認するデータベースを別の呼び出しを行っては取得されません。</span><span class="sxs-lookup"><span data-stu-id="7c381-744">The data is not retrieved by making another call to the database to verify the user's access to the data.</span></span> <span data-ttu-id="7c381-745">予定の場合、データにアクセスする 1 つ以上のユーザー、データベースのセキュリティ構成を検証するデータが取得されるたびにする、キャッシュを使用しません。</span><span class="sxs-lookup"><span data-stu-id="7c381-745">If you expect more than one user to access the data, and you want each retrieval to the data to be verified by the security configurations for the database, do not use caching.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-746">次のコード例は、SQL Server のキャッシュの依存関係を作成し、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-746">The following code example demonstrates how to create a SQL Server cache dependency and set the <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> property of a <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="7c381-747">この例では、データベースは 120 秒ごとにポーリングされます。</span><span class="sxs-lookup"><span data-stu-id="7c381-747">In this example, the database is polled every 120 seconds.</span></span> <span data-ttu-id="7c381-748">中に、Northwind traders 社の従業員のデータ テーブルが変更された場合は時間、によってキャッシュされているすべてのデータ、<xref:System.Web.UI.WebControls.SqlDataSource>して表示して、制御、<xref:System.Web.UI.WebControls.GridView>によってコントロールが更新される、<xref:System.Web.UI.WebControls.SqlDataSource>次回データベースをポーリングを制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-748">If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.SqlDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is refreshed by the <xref:System.Web.UI.WebControls.SqlDataSource> control the next time the database is polled.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-749"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールのビューステートの変更を追跡し、変更がコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納されるようにします。</span><span class="sxs-lookup"><span data-stu-id="7c381-749">Tracks view state changes to the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-750"><xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A>コントロールのビュー ステートの一部としてコントロールに対する変更の追跡と保存を開始する開始位置をマークするメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="7c381-750">The <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A> method is overridden to mark the starting point to begin tracking and saving changes to the control as part of the view state for the control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="7c381-751"><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> コレクション内にある任意のパラメーターを使用して、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-751">Performs an update operation using the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL string and any parameters that are in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> collection.</span></span></summary>
        <returns><span data-ttu-id="7c381-752">基になるデータベースで更新された行数を表す値。</span><span class="sxs-lookup"><span data-stu-id="7c381-752">A value that represents the number of rows updated in the underlying database.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-753"><xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドを呼び出すときに自動的に、 <xref:System.Web.UI.WebControls.GridView>、 <xref:System.Web.UI.WebControls.DetailsView>、および<xref:System.Web.UI.WebControls.FormView>ポストバック中にデータが変更されている場合を制御します。</span><span class="sxs-lookup"><span data-stu-id="7c381-753">The <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method is automatically called by the <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, and <xref:System.Web.UI.WebControls.FormView> controls during postback if the data has been changed.</span></span> <span data-ttu-id="7c381-754">その他のコントロールが変更されているデータの<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>ポストバック中に、メソッドを明示的に呼び出すことができる、<xref:System.Windows.Forms.Form.Load>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-754">For data that has been changed in other controls, the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method can be explicitly called on postback during the <xref:System.Windows.Forms.Form.Load> event.</span></span>  
  
 <span data-ttu-id="7c381-755">前に、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-755">Before the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation is performed, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event.</span></span> <span data-ttu-id="7c381-756">パラメーターの値を確認する前に処理を実行して、このイベントを処理することができます、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>操作します。</span><span class="sxs-lookup"><span data-stu-id="7c381-756">You can handle this event to examine the values of the parameters and to perform any preprocessing before an <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation.</span></span>  
  
 <span data-ttu-id="7c381-757">後に、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>操作が完了すると、<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>させるメソッドが呼び出された、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>イベント。</span><span class="sxs-lookup"><span data-stu-id="7c381-757">After the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation completes, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> method is called to raise the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event.</span></span> <span data-ttu-id="7c381-758">任意の戻り値およびエラー コードを調べ、後処理を実行するこのイベントを処理することができます。</span><span class="sxs-lookup"><span data-stu-id="7c381-758">You can handle this event to examine any return values and error codes and to perform any post-processing.</span></span>  
  
 <span data-ttu-id="7c381-759"><xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドからデリゲートを<xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>のメソッド、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-759">The <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span> <span data-ttu-id="7c381-760">更新操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSourceView>ビルド、<xref:System.Data.Common.DbCommand>オブジェクトを使用して、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>テキストと、関連付けられたすべて<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>プロパティ、し、実行、<xref:System.Data.Common.DbCommand>基になるデータベースに対してオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-760">To perform an update operation, the <xref:System.Web.UI.WebControls.SqlDataSourceView> builds a <xref:System.Data.Common.DbCommand> object using the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> text and any associated <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> properties, and then executes the <xref:System.Data.Common.DbCommand> object against the underlying database.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-761">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-761">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-762">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-762">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-763">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-763">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-764">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-764">This section contains two code examples.</span></span> <span data-ttu-id="7c381-765">最初のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>内のデータを表示するコントロールを<xref:System.Web.UI.WebControls.DropDownList>制御および更新データときに、**送信**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-765">The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="7c381-766">2 番目のコード例は、Microsoft SQL Server データベースから取得されるデータを表示する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロールし、レコードを使用して、更新、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-766">The second code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
 <span data-ttu-id="7c381-767">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>内のデータを表示するコントロールを<xref:System.Web.UI.WebControls.DropDownList>制御および更新データときに、**送信**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-767">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="7c381-768"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティはパラメーター化された SQL ステートメントと 2 つ<xref:System.Web.UI.WebControls.ControlParameter>パラメーターに追加されます、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-768">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="7c381-769">ときに、**送信**ボタンをクリックして、<xref:System.Web.UI.WebControls.Button.OnClick%2A>を呼び出すイベントが処理される、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-769">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 <span data-ttu-id="7c381-770">次のコード例では、SQL Server データベースから取得されるデータを表示する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロールし、レコードを使用して、更新、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-770">The following code example demonstrates how to display data that is retrieved from a SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="7c381-771">使用する方法の例を示しています、<xref:System.Data.Common.DbTransaction>を使用する場合は、トランザクション コンテキストを追加するオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにデータを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c381-771">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><span data-ttu-id="7c381-772"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</span><span class="sxs-lookup"><span data-stu-id="7c381-772">The <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> cannot establish a connection with the underlying data source.</span></span></exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-773">基になるデータベース内のデータを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-773">Gets or sets the SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control uses to update data in the underlying database.</span></span></summary>
        <value><span data-ttu-id="7c381-774">データを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</span><span class="sxs-lookup"><span data-stu-id="7c381-774">An SQL string that the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> uses to update data.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-775"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>によって使用され、SQL クエリまたはストアド プロシージャの名前を表す、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="7c381-775">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> represents an SQL query or the name of a stored procedure, and is used by the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method.</span></span>  
  
 <span data-ttu-id="7c381-776">データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-776">Because different database products use different varieties of SQL, the syntax of the SQL string depends on the current ADO.NET provider being used, which is identified by the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property.</span></span> <span data-ttu-id="7c381-777">SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。</span><span class="sxs-lookup"><span data-stu-id="7c381-777">If the SQL string is a parameterized query or command, the placeholder of the parameter also depends on the ADO.NET provider being used.</span></span> <span data-ttu-id="7c381-778">たとえば、プロバイダーは、<xref:System.Data.SqlClient?displayProperty=nameWithType>の既定のプロバイダーは、<xref:System.Web.UI.WebControls.SqlDataSource>クラス、パラメーターのプレース ホルダーは`'@parameterName'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-778">For example, if the provider is the <xref:System.Data.SqlClient?displayProperty=nameWithType>, which is the default provider for the <xref:System.Web.UI.WebControls.SqlDataSource> class, the placeholder of the parameter is `'@parameterName'`.</span></span> <span data-ttu-id="7c381-779">ただし、プロバイダーに設定されている場合、<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>、パラメーターのプレース ホルダーは`'?'`します。</span><span class="sxs-lookup"><span data-stu-id="7c381-779">However, if the provider is set to the <xref:System.Data.Odbc?displayProperty=nameWithType> or <xref:System.Data.OleDb?displayProperty=nameWithType>, the placeholder of the parameter is `'?'`.</span></span> <span data-ttu-id="7c381-780">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-780">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-781"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティから、データ ソースには、ストアド プロシージャがサポートされている場合、SQL 文字列またはストアド プロシージャの名前を指定できます。</span><span class="sxs-lookup"><span data-stu-id="7c381-781">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property can be an SQL string or the name of a stored procedure, if the data source supports stored procedures.</span></span>  
  
 <span data-ttu-id="7c381-782"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-782">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-783">セキュリティのため、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティは格納されませんビュー ステートがします。</span><span class="sxs-lookup"><span data-stu-id="7c381-783">For security purposes, the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is not stored is view state.</span></span> <span data-ttu-id="7c381-784">クライアント上のビュー ステートの内容をデコードできるため、データベース構造に関する機密情報を格納すると、ビューに状態可能性があります、情報漏えいの脆弱性。</span><span class="sxs-lookup"><span data-stu-id="7c381-784">Because it is possible to decode the contents of view state on the client, storing sensitive information about the database structure in view state could result in an information disclosure vulnerability.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-785">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-785">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-786">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-786">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-787">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-787">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-788">このセクションには、2 つのコード例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="7c381-788">This section contains two code examples.</span></span> <span data-ttu-id="7c381-789">最初のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>制御および更新のデータを使用して Microsoft SQL Server データベース、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-789">The first code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-790">2 番目のコード例は、ODBC を使用してデータベースのデータを更新する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-790">The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 <span data-ttu-id="7c381-791">次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>制御および更新のデータを使用して SQL Server データベース、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-791">The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-792"><xref:System.Web.UI.WebControls.GridView>を自動的に入力、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>からパラメーターを推論するとき、コレクション、<xref:System.Web.UI.WebControls.BoundField>オブジェクトし、呼び出し、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドときに、**更新**リンクを編集可能な<xref:System.Web.UI.WebControls.GridView>が選択されています。</span><span class="sxs-lookup"><span data-stu-id="7c381-792">The <xref:System.Web.UI.WebControls.GridView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> is selected.</span></span> <span data-ttu-id="7c381-793">この例では、いくつかの後処理も含まれます: レコードが更新されると、通知の電子メール メッセージが送信されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-793">This example also includes some post-processing: after a record is updated, a notification email message is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 <span data-ttu-id="7c381-794">コードと同じように上記のコード例は、次のコード例は、ODBC を使用してデータベースのデータを更新する方法を示します、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-794">The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-795"><xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> For ODBC、ADO.NET プロバイダーに設定されている、 <xref:System.Data.Odbc?displayProperty=nameWithType>、および<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティが ODBC データ ソース名 (DSN) の名前に設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-795">The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=nameWithType>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-796"><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="7c381-796">Gets or sets a value indicating whether the text in the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property is an SQL statement or the name of a stored procedure.</span></span></summary>
        <value><span data-ttu-id="7c381-797"><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。</span><span class="sxs-lookup"><span data-stu-id="7c381-797">One of the <see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> values.</span></span> <span data-ttu-id="7c381-798">既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</span><span class="sxs-lookup"><span data-stu-id="7c381-798">The default is the <see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-799"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A>プロパティを委任する場合、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-799">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A> property delegates to the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-800">更新操作が完了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-800">Occurs when an update operation has completed.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-801">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>更新操作が完了した後の値を確認するイベントを出力パラメーターです。</span><span class="sxs-lookup"><span data-stu-id="7c381-801">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event to examine the values of output parameters after an update operation has completed.</span></span> <span data-ttu-id="7c381-802">出力パラメーターは、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>イベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-802">The output parameters are available from the <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs> object that is associated with the event.</span></span>  
  
 <span data-ttu-id="7c381-803">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-803">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-804">次のコード例を表示し、ODBC データベースから取得されるデータを更新する方法を示しています、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-804">The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control.</span></span> <span data-ttu-id="7c381-805">レコードは正常に更新した後、<xref:System.Web.UI.WebControls.SqlDataSource.Updated>する処理後の手順を実行するには、電子メール通知の送信先にイベント ハンドラーでイベントが処理されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-805">After a record is successfully updated, the <xref:System.Web.UI.WebControls.SqlDataSource.Updated> event is handled by an event handler to perform a post-processing step where an email notification is sent.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-806"><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="7c381-806">Gets the parameters collection that contains the parameters that are used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property from the <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> control that is associated with the <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="7c381-807"><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />。</span><span class="sxs-lookup"><span data-stu-id="7c381-807">A <see cref="T:System.Web.UI.WebControls.ParameterCollection" /> that contains the parameters used by the <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-808">場合、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティには、パラメーター化 SQL クエリが含まれています、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションには、いずれかが含まれます<xref:System.Web.UI.WebControls.Parameter>SQL 文字列のパラメーターのプレース ホルダーに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-808">If the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property contains a parameterized SQL query, the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection contains any <xref:System.Web.UI.WebControls.Parameter> objects that correspond to the parameter placeholders in the SQL string.</span></span>  
  
 <span data-ttu-id="7c381-809">パラメーター名の影響を受ける、<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>具体的には、名前を使用して指定したキーなどの主キーを識別する場合は、プロパティ、`DataKeyNames`プロパティ、または削除、データ バインド コントロールの更新シナリオと場所、<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定されている、<xref:System.Web.UI.ConflictOptions.CompareAllValues>値と一連の`oldValues`は対応するデータのメソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-809">Parameter names might be affected by the <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> property, specifically if the name identifies a primary key, such as a key specified using the `DataKeyNames` property of the data-bound control, or in delete and update scenarios where the <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> property is set to the <xref:System.Web.UI.ConflictOptions.CompareAllValues> value and a set of `oldValues` are passed to the corresponding data method.</span></span> <span data-ttu-id="7c381-810">各パラメーターの名前に、書式指定文字列を適用するこの例では、`oldValues`コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-810">In this case, the format string is applied to each parameter name in the `oldValues` collection.</span></span>  
  
 <span data-ttu-id="7c381-811">内のパラメーターの順序、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションは、ADO.NET プロバイダーによって、重要な可能性があります。</span><span class="sxs-lookup"><span data-stu-id="7c381-811">The order of the parameters in the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection might be important, depending on the ADO.NET provider.</span></span> <span data-ttu-id="7c381-812"><xref:System.Data.OleDb?displayProperty=nameWithType>と<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーがパラメーター化 SQL クエリで使用されるパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-812">The <xref:System.Data.OleDb?displayProperty=nameWithType> and <xref:System.Data.Odbc?displayProperty=nameWithType> providers associate the parameters in the collection according to the order that the parameters appear in the parameterized SQL query.</span></span> <span data-ttu-id="7c381-813"><xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは、既定の ADO.NET プロバイダーは、の<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを SQL クエリ内のプレース ホルダーの別名を持つパラメーターの名前を照合することによって、コレクション内のパラメーターに関連付けます。</span><span class="sxs-lookup"><span data-stu-id="7c381-813">The <xref:System.Data.SqlClient?displayProperty=nameWithType> provider, which is the default ADO.NET provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, associates the parameters in the collection by matching the name of the parameter with a placeholder alias in the SQL query.</span></span> <span data-ttu-id="7c381-814">パラメーター化された SQL クエリとコマンドの詳細については、次を参照してください。 [SqlDataSource コントロールを使用してパラメーター](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-814">For more information about parameterized SQL queries and commands, see [Using Parameters with the SqlDataSource Control](http://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295).</span></span>  
  
 <span data-ttu-id="7c381-815"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>プロパティの取得、<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>プロパティに含まれています、<xref:System.Web.UI.WebControls.SqlDataSourceView>オブジェクトに関連付けられている、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-815">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> property retrieves the <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A> property that is contained by the <xref:System.Web.UI.WebControls.SqlDataSourceView> object that is associated with the <xref:System.Web.UI.WebControls.SqlDataSource> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-816">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-816">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-817">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-817">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Filtering> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-818">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-818">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-819">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSource>内のデータを表示するコントロールを<xref:System.Web.UI.WebControls.DropDownList>制御および更新データときに、**送信**ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="7c381-819">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked.</span></span> <span data-ttu-id="7c381-820"><xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>パラメーター化された SQL ステートメントで、2 つのセットが<xref:System.Web.UI.WebControls.ControlParameter>パラメーターに追加されます、<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="7c381-820">The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection.</span></span> <span data-ttu-id="7c381-821">ときに、**送信**ボタンをクリックして、<xref:System.Web.UI.WebControls.Button.OnClick%2A>を呼び出すイベントが処理される、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドに明示的にします。</span><span class="sxs-lookup"><span data-stu-id="7c381-821">When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-822">この例には、潜在的なセキュリティの脅威には、ユーザー入力を受け付けるテキスト ボックスが含まれています。 し、値が、これは、潜在的なセキュリティの脅威も検証を伴わないパラメーターに挿入します。</span><span class="sxs-lookup"><span data-stu-id="7c381-822">This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat.</span></span> <span data-ttu-id="7c381-823">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-823">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-824">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-824">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="7c381-825">更新操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="7c381-825">Occurs before an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="7c381-826">処理、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベントは、パラメーターの値を検証する、または前に、のパラメーターの値を変更する、アプリケーションに固有の追加の初期化の操作を実行する、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、更新操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="7c381-826">Handle the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to perform additional initialization operations that are specific to your application, to validate the values of parameters, or to change the parameter values before the <xref:System.Web.UI.WebControls.SqlDataSource> control performs the update operation.</span></span> <span data-ttu-id="7c381-827">基になるデータ ソースへの接続がまだ開いていないイベント ハンドラー デリゲートが呼び出されるとします。</span><span class="sxs-lookup"><span data-stu-id="7c381-827">The connection to the underlying data source is not yet open when the event handler delegate is called.</span></span> <span data-ttu-id="7c381-828">そのため、直接はキャンセルできません、<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>データベース操作を呼び出すことによって、<xref:System.Data.Common.DbCommand.Cancel%2A>メソッドを<xref:System.Data.Common.DbCommand>によって公開されるオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="7c381-828">Therefore, you cannot directly cancel the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> database operation by calling the <xref:System.Data.Common.DbCommand.Cancel%2A> method on the <xref:System.Data.Common.DbCommand> object that is exposed by the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> object.</span></span> <span data-ttu-id="7c381-829">ただしを設定して、データベースの操作をキャンセルできます、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>に`true`です。</span><span class="sxs-lookup"><span data-stu-id="7c381-829">You can, however, cancel the database operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> to `true`.</span></span>  
  
 <span data-ttu-id="7c381-830">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="7c381-830">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="7c381-831">値は、潜在的なセキュリティ上の脅威が検証を伴わないパラメーターに挿入されます。</span><span class="sxs-lookup"><span data-stu-id="7c381-831">Values are inserted into parameters without validation, which is a potential security threat.</span></span> <span data-ttu-id="7c381-832">使用して、<xref:System.Web.UI.WebControls.SqlDataSource.Updating>クエリを実行する前にパラメーター値を検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="7c381-832">Use the <xref:System.Web.UI.WebControls.SqlDataSource.Updating> event to validate parameter values before executing the query.</span></span> <span data-ttu-id="7c381-833">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="7c381-833">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="7c381-834">次のコード例では、Microsoft SQL Server データベースから取得されるデータを表示する方法を示します、<xref:System.Web.UI.WebControls.DropDownList>コントロールし、レコードを使用して、更新、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="7c381-834">The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="7c381-835">使用する方法の例を示しています、<xref:System.Data.Common.DbTransaction>を使用する場合は、トランザクション コンテキストを追加するオブジェクト、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにデータを更新します。</span><span class="sxs-lookup"><span data-stu-id="7c381-835">The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      </Docs>
    </Member>
  </Members>
</Type>