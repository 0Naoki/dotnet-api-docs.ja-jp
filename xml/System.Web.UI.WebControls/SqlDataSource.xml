<Type Name="SqlDataSource" FullName="System.Web.UI.WebControls.SqlDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="dcab17400a5076f483cd5285e8f60959c4fe3b04" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69411503" /></Metadata><TypeSignature Language="C#" Value="public class SqlDataSource : System.Web.UI.DataSourceControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSource extends System.Web.UI.DataSourceControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSource&#xA;Inherits DataSourceControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSource : System::Web::UI::DataSourceControl" />
  <TypeSignature Language="F#" Value="type SqlDataSource = class&#xA;    inherit DataSourceControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("SelectQuery")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ バインド コントロールに対して SQL データベースを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [データ接続](#data_connections)  
  
-   [データ操作の実行](#performing_data_operations)  
  
-   [Data Provider](#data_provider)  
  
-   [キャッシュ](#caching)  
  
-   [その他の機能](#additional_features)  
  
-   [データソースビュー](#data_source_view)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 データ<xref:System.Web.UI.WebControls.SqlDataSource>ソースコントロールは、データバインドコントロールに対する SQL リレーショナルデータベース内のデータを表します。 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールをデータバインドコントロールと組み合わせて使用すると、リレーショナルデータベースからデータを取得したり、コードをほとんどまたはまったく使用せずに、Web ページ上のデータの表示、編集、並べ替えを行うことができます。  
  
<a name="data_connections"></a>   
## <a name="data-connections"></a>データ接続  
 データベースに接続するには、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティを有効な接続文字列に設定する必要があります。 は<xref:System.Web.UI.WebControls.SqlDataSource> 、ADO.NET プロバイダー (、、 `Odbc`、または`OracleClient`プロバイダー) `SqlClient` `OleDb`を使用して接続できる任意の SQL リレーショナルデータベースをサポートできます。 接続文字列をセキュリティで保護する方法の詳細[については、「」を参照してください。データソースコントロール](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)を使用する場合は、接続文字列をセキュリティで保護します。  
  
 基になるデータベースからデータを取得するに<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>は、SQL クエリを使用してプロパティを設定します。 に関連付けられ<xref:System.Web.UI.WebControls.SqlDataSource>ているデータベースがストアドプロシージャをサポートしている<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>場合は、プロパティをストアドプロシージャの名前に設定できます。 指定する SQL クエリは、パラメーター化クエリにすることもできます。 パラメーター化さ<xref:System.Web.UI.WebControls.Parameter>れたクエリに関連付けられている<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>オブジェクトをコレクションに追加できます。 パラメーター化された SQL クエリとその構文の詳細については、「[フィルター処理のためのデータソースコントロールでのパラメーターの使用](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))」を参照してください。  
  
 コントロールは、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出されるたびにデータを取得します。 <xref:System.Web.UI.WebControls.SqlDataSource> このメソッドは、プロパティによって<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>指定されたメソッドにプログラムでアクセスできるようにします。 メソッドが呼び出されると<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 、 <xref:System.Web.UI.WebControls.SqlDataSource>にバインドされているコントロールによって、メソッドが自動的に呼び出されます。<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> データバインドコントロールの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>プロパティを設定した場合、コントロールは必要に応じてデータソースのデータに自動的にバインドされます。 コントロールをデータバインドコントロールに`DataSourceID`バインドするには、プロパティを設定することをお勧め<xref:System.Web.UI.WebControls.ObjectDataSource>します。 または、 `DataSource`プロパティを使用することもできますが、その場合<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>は、データバインドコントロールのメソッドを明示的に呼び出す必要があります。 使用<xref:System.Web.UI.WebControls.SqlDataSource>できるデータバインドコントロールの例と<xref:System.Web.UI.WebControls.DataList> <xref:System.Web.UI.WebControls.DataGrid> <xref:System.Web.UI.WebControls.DropDownList>して、 <xref:System.Web.UI.WebControls.DetailsView>、、、があります。 基になるデータベース<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>からデータを取得するために、いつでもプログラムによってメソッドを呼び出すことができます。  
  
 宣言型のプログラムによる ASP.NET のシナリオでは<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> 、データバインドコントロールのプロパティを<xref:System.Web.UI.WebControls.SqlDataSource>コントロールの ID に設定できます。 <xref:System.Web.UI.WebControls.SqlDataSource>クラスのインスタンス<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>を、データバインドコントロールのプロパティに割り当てることもできます。 データバインドコントロールをデータソースコントロールにバインドする方法の詳細については、「 [ASP.NET Data Access Options](https://msdn.microsoft.com/library/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d)」を参照してください。  
  
<a name="performing_data_operations"></a>   
## <a name="performing-data-operations"></a>データ操作の実行  
 基になるデータベース製品の機能と<xref:System.Web.UI.WebControls.SqlDataSource>クラスのインスタンスの構成に応じて、更新、挿入、削除などのデータ操作を実行できます。 これらのデータ操作を実行するには、実行する操作の適切なコマンドテキストおよび関連するパラメーターを設定します。 たとえば、更新操作の場合は、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティを SQL 文字列またはストアドプロシージャの名前に設定し、必要なパラメーターを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションに追加します。 この更新は、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドがコードによって明示的に呼び出されるか、データバインドコントロールによって自動的に呼び出されるときに実行されます。 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> と<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>の操作には、同じ一般的なパターンが続きます。  
  
 、、、および<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>の各プロパティで使用する SQL クエリおよびコマンドは、パラメーター化できます。 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> これは、クエリまたはコマンドがリテラル値ではなくプレースホルダーを使用して、プレースホルダーをアプリケーション変数またはユーザー定義変数にバインドできることを意味します。 SQL クエリのパラメーターは、セッション変数、Web フォームページのクエリ文字列で渡される値、他のサーバーコントロールのプロパティ値などにバインドできます。 を使用し<xref:System.Web.UI.WebControls.SqlDataSource>て SQL クエリでパラメーターを使用する方法の詳細については、「[データソースコントロールでのパラメーターの使用](https://msdn.microsoft.com/library/88622d04-2989-484e-93fe-594cd98dcf5f(v=vs.100))」を参照してください。フィルター処理と[、SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)に関する説明を参照してください。  
  
> [!NOTE]
>  既定では、 `null` `Select`コマンドの実行時にパラメーターの1つがの場合、データは返されず、例外はスローされません。 この動作を変更するには、 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティを`false`に設定します。  
  
<a name="data_provider"></a>   
## <a name="data-provider"></a>Data Provider  
 既定では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは SQL Server の .NET Framework Data Provider と連携します<xref:System.Web.UI.WebControls.SqlDataSource>が、Microsoft SQL Server 固有ではありません。 管理対象の ADO.NET <xref:System.Web.UI.WebControls.SqlDataSource>プロバイダーがある任意のデータベース製品にコントロールを接続できます。 <xref:System.Data.OleDb?displayProperty=nameWithType>プロバイダーで使用する場合、は<xref:System.Web.UI.WebControls.SqlDataSource> OLE DB に準拠している任意のデータベースを操作できます。 <xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーで使用する場合、は<xref:System.Web.UI.WebControls.SqlDataSource> 、IBM DB2、MySQL、PostgreSQL など、任意の ODBC ドライバーおよびデータベースで使用できます。 <xref:System.Data.OracleClient?displayProperty=nameWithType>プロバイダーで使用する場合、は<xref:System.Web.UI.WebControls.SqlDataSource> 、Oracle 8.1.7 以降データベース以降を操作できます。 使用可能なプロバイダーの一覧は、machine.config `DbProviderFactories`ファイルまたは web.config ファイルの構成ファイルのセクションに登録されます。 詳細については、「 [SqlDataSource コントロールを使用したデータの選択](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)」を参照してください。  
  
<a name="caching"></a>   
## <a name="caching"></a>キャッシュ  
 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してページにデータを表示する場合は、データソースコントロールのデータキャッシュ機能を使用してページのパフォーマンスを向上させることができます。 キャッシュを行うと、Web サーバー上のメモリを犠牲にして、データベースサーバーの処理負荷が軽減されます。ほとんどの場合、これは良いトレードオフです。 プロパティがに<xref:System.Web.UI.WebControls.SqlDataSource> 設定`true` され、プロパティがキャッシュエントリが破棄される前にキャッシュがデータを格納する秒数に設定されると、は自動的にデータを<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>キャッシュします。 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> およびオプション<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>の値を指定することもできます。  
  
<a name="additional_features"></a>   
## <a name="additional-features"></a>その他の機能  
 に<xref:System.Web.UI.WebControls.SqlDataSource>は、次の表に示すような追加機能が用意されています。  
  
|機能|要件|  
|----------------|------------------|  
|キャッシュ|`true` <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet> <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>キャッシュされたデータに必要なキャッシュの動作に従っ<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>て、プロパティを値、プロパティをに、およびプロパティをに設定します。<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>|  
|削除中|プロパティを<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 、データの削除に使用する SQL ステートメントに設定します。 このステートメントは通常、パラメーター化されています。|  
|フィルター処理|<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>を値に設定します。 メソッドが<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>呼び出されたときにデータをフィルター処理するために使用されるフィルター式に、プロパティを設定します。 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>|  
|挿入|データの挿入に使用する SQL ステートメントにプロパティを設定します。<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> このステートメントは通常、パラメーター化されています。|  
|ページング|<xref:System.Web.UI.WebControls.SqlDataSource>現在ではサポートされていませんが、などの一部<xref:System.Web.UI.WebControls.GridView>のデータバインドコントロールでは、 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値に設定するとページングがサポートされます。|  
|選択|プロパティを<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 、データを取得するために使用する SQL ステートメントに設定します。|  
|並べ替え|<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティを <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>に設定します。|  
|Updating|プロパティを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 、データの更新に使用する SQL ステートメントに設定します。 このステートメントは通常、パラメーター化されています。|  
  
<a name="data_source_view"></a>   
## <a name="data-source-view"></a>データ ソース ビュー  
 すべてのデータソースコントロール<xref:System.Web.UI.WebControls.SqlDataSource>と同様に、コントロールはデータソースビュークラスに関連付けられています。 コントロールには、関連付け<xref:System.Web.UI.WebControls.SqlDataSourceView>られているものが`Table`1 つだけあり、常にという名前が付けられます。 <xref:System.Web.UI.WebControls.SqlDataSource>  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは視覚的に表示されません。コントロールとして実装されます。これにより、コントロールが宣言によって作成され、必要に応じて状態管理に参加できるようになります。 その結果<xref:System.Web.UI.WebControls.SqlDataSource> 、は、プロパティ<xref:System.Web.UI.DataSourceControl.EnableTheming%2A>または<xref:System.Web.UI.DataSourceControl.SkinID%2A>プロパティによって提供される機能などのビジュアル機能をサポートしていません。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:SqlDataSource  
    CacheDuration="string|Infinite"  
    CacheExpirationPolicy="Absolute|Sliding"  
    CacheKeyDependency="string"  
    CancelSelectOnNullParameter="True|False"  
    ConflictDetection="OverwriteChanges|CompareAllValues"  
    ConnectionString="string"  
    DataSourceMode="DataReader|DataSet"  
    DeleteCommand="string"  
    DeleteCommandType="Text|StoredProcedure"  
    EnableCaching="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FilterExpression="string"  
    ID="string"  
    InsertCommand="string"  
    InsertCommandType="Text|StoredProcedure"  
    OldValuesParameterFormatString="string"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnFiltering="Filtering event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    ProviderName="string|System.Data.Odbc|System.Data.OleDb|  
        System.Data.OracleClient|System.Data.SqlClient|  
        Microsoft.SqlServerCe.Client"  
    runat="server"  
    SelectCommand="string"  
    SelectCommandType="Text|StoredProcedure"  
    SkinID="string"  
    SortParameterName="string"  
    SqlCacheDependency="string"  
    UpdateCommand="string"  
    UpdateCommandType="Text|StoredProcedure"  
    Visible="True|False"  
>  
        <DeleteParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </DeleteParameters>  
        <FilterParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </FilterParameters>  
        <InsertParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </InsertParameters>  
        <SelectParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </SelectParameters>  
        <UpdateParameters>  
                <asp:ControlParameter  
                    ControlID="string"  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:CookieParameter  
                    ConvertEmptyStringToNull="True|False"  
                    CookieName="string"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:FormParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    FormField="string"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:Parameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:ProfileParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    PropertyName="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:QueryStringParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    QueryStringField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
                <asp:SessionParameter  
                    ConvertEmptyStringToNull="True|False"  
                    DefaultValue="string"  
                    Direction="Input|Output|InputOutput|ReturnValue"  
                    Name="string"  
                    SessionField="string"  
                    Size="integer"  
                    Type="Empty|Object|DBNull|Boolean|Char|SByte|  
                        Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|  
                        Single|Double|Decimal|DateTime|String"  
                />  
        </UpdateParameters>  
</asp:SqlDataSource>  
```  
  
## Examples  
 
このセクションには、次の4つのコード例が含まれます。  
  
-   最初のコード例では、宣言型の構文を使用<xref:System.Web.UI.WebControls.GridView>して、SQL Server のデータをコントロールに表示する方法を示します。  
  
-   2番目のコード例では、宣言型の構文を使用して<xref:System.Web.UI.WebControls.GridView> 、ODBC 準拠のデータベースのデータをコントロールに表示する方法を示します。  
  
-   3番目のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールのデータを表示および更新する方法を示しています。  
  
-   4番目のコード例は、 <xref:System.Web.UI.WebControls.DropDownList>コントロールのデータを表示および更新する方法を示しています。  
  
    > [!NOTE]
    >  これらの例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを宣言によって使用して SQL Server からデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを宣言によって使用して、ODBC 準拠のデータベースからデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示しています。 プロパティは、ODBC の .NET Framework Data Provider () <xref:System.Data.Odbc?displayProperty=nameWithType>の名前です。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/CS/odbc3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3odbc/VB/odbc3vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールを使用した一般的な表示と更新のシナリオを示しています。 前の例と同様に、Northwind データベースのデータが<xref:System.Web.UI.WebControls.GridView>コントロールに表示されます。 また、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティが指定されてい<xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A>て、プロパティが`true`に設定されているため、追加のコードを使用せずにレコードを編集および更新することができます。 コントロール<xref:System.Web.UI.WebControls.GridView>は、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションへのパラメーターの追加を自動的に<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>処理し、 **** <xref:System.Web.UI.WebControls.GridView>コントロールの [更新] ボタンがクリックされたときにメソッドを呼び出します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/CS/sql5cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_5sql/VB/sql5vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.TextBox>コントロールとコントロールを使用した一般的な表示と更新のシナリオを示しています。 コントロール<xref:System.Web.UI.WebControls.DropDownList>は、更新パラメーター <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>をコレクションに自動的に追加したり、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドを呼び出したりすることはありません。そのため、この操作を行う必要があります。 更新パラメーターは宣言によって指定され、イベントが発生した<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>ときに操作を実行するイベントハンドラーを追加できます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.DataSourceControl" />
    <related type="Article" href="https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc">Visual Studio でのデータへのアクセス</related>
    <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
    <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
    <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
        <altmember cref="T:System.Web.UI.DataSourceControl" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="connectionString">基になるデータベースに接続するために使用する接続文字列。</param>
        <param name="selectCommand">基になるデータベースからデータを取得するために使用する SQL クエリ。 SQL クエリがパラメーター化された SQL 文字列の場合、<see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションへの <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> オブジェクトの追加が必要になることがあります。</param>
        <summary>接続文字列と SELECT コマンドを指定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品によって使用される SQL の種類は異なる`selectCommand`ため、の構文は、使用している現在の ADO.NET プロバイダー <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>によって異なります。これは、プロパティによって識別されます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Data.OleDb?displayProperty=nameWithType>またはに設定されている場合、パラメーターのプレースホルダーは`'?'`になります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>データソースがストアドプロシージャをサポートしている場合は、SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.SqlDataSource.%23ctor%2A>コンストラクターを使用してコントロールを作成する方法を示しています。 この例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールが Web フォームページではなく、ビジネスオブジェクトがデータベースと対話するための簡単な方法として、中間層オブジェクトの実装で使用されているという点では異常です。 この例では、web.config ファイルに格納されている接続文字列を使用します。  
  
 このコード例は、 <xref:System.Web.UI.WebControls.ObjectDataSource>クラスに対して提供される大規模な例の一部です。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/CS/northwindemployee1.cs#3)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_1/VB/northwindemployee1.vb#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSource (string providerName, string connectionString, string selectCommand);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string providerName, string connectionString, string selectCommand) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (providerName As String, connectionString As String, selectCommand As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSource(System::String ^ providerName, System::String ^ connectionString, System::String ^ selectCommand);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SqlDataSource : string * string * string -&gt; System.Web.UI.WebControls.SqlDataSource" Usage="new System.Web.UI.WebControls.SqlDataSource (providerName, connectionString, selectCommand)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="providerName" Type="System.String" />
        <Parameter Name="connectionString" Type="System.String" />
        <Parameter Name="selectCommand" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="providerName"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用するデータ プロバイダーの名前。 プロバイダーが設定されていない場合、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> は Microsoft SQL Server の ADO.NET プロバイダーを既定で使用します。</param>
        <param name="connectionString">基になるデータベースに接続するために使用する接続文字列。</param>
        <param name="selectCommand">基になるデータベースからデータを取得するために使用する SQL クエリ。 SQL クエリがパラメーター化された SQL 文字列の場合、<see cref="T:System.Web.UI.WebControls.Parameter" /> コレクションへの <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> オブジェクトの追加が必要になることがあります。</param>
        <summary>接続文字列と SELECT コマンドを指定して、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベース製品によっ`selectCommand` `providerName`て使用される SQL の種類は異なるため、の構文は、使用している現在の ADO.NET プロバイダーによって異なります。これは、パラメーターによって識別されます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>で、 <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダーである場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Data.OleDb?displayProperty=nameWithType>またはに設定されている場合、パラメーターのプレースホルダーは`'?'`になります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CacheDuration">
      <MemberSignature Language="C#" Value="public virtual int CacheDuration { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CacheDuration" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheDuration As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CacheDuration { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CacheDuration : int with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.DataSourceCacheDurationConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドによって取得したデータを、データ ソース コントロールがキャッシュする時間 (秒単位) を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が <see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> 操作の結果をキャッシュする秒数。 既定値は 0 です。 この値を負にすることはできません。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされて<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>いる間、メソッドは、基になるデータベースからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>と、メソッドは基になるデータベースからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.SqlDataSource> 設定`true` され、プロパティが0より大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、キャッシュエントリの前にキャッシュがデータを格納する秒数を示します。<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>は破棄されます。 値が0の場合は、キャッシュが無限に長くなることを示します。  
  
 キャッシュの動作は、duration と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティの組み合わせによって決まります。 プロパティが<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>値に設定されている場合<xref:System.Web.UI.WebControls.SqlDataSource> 、は、最初のデータ取得操作でデータをキャッシュし、プロパティによって<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>指定された時間だけ、メモリ内に格納します。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> メモリが必要な場合は、期間の前にデータが解放される可能性があります。 キャッシュは、次の操作中に更新されます。 プロパティが<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値に設定されている場合、データソースコントロールは最初のデータ取得操作でデータをキャッシュしますが、後続の各操作でキャッシュを保持している時間枠をリセットします。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 最後<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>の操作以降の値と同じ時間にアクティビティがない場合、キャッシュの有効期限が切れます。  
  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、モードの<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>ときにのみデータをキャッシュできます。 コントロールが値に<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>設定さ<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>れ、キャッシュも有効になっている場合<xref:System.NotSupportedException> 、メソッドによって例外がスローさ<xref:System.Web.UI.WebControls.SqlDataSource>れます。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることが予想される場合に、各データの取得をデータベースのセキュリティ構成によって検証する必要がある場合は、キャッシュを使用しないでください。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得し、データキャッシュが有効<xref:System.Web.UI.WebControls.GridView>になっているコントロールに表示する方法を示しています。 は20秒に設定されており、 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>この<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>プロパティは既定で値に設定されているため、このページのユーザーには20秒ごとに新しいデータが表示されます。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CacheExpirationPolicy">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheExpirationPolicy As DataSourceCacheExpiry" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::DataSourceCacheExpiry CacheExpirationPolicy { System::Web::UI::DataSourceCacheExpiry get(); void set(System::Web::UI::DataSourceCacheExpiry value); };" />
      <MemberSignature Language="F#" Value="member this.CacheExpirationPolicy : System.Web.UI.DataSourceCacheExpiry with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceCacheExpiry</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>存続期間と組み合わせた場合の、データ ソース コントロールが使用するキャッシュの動作を記述するキャッシュの有効期限の動作を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.DataSourceCacheExpiry" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.DataSourceCacheExpiry.Absolute" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされて<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>いる間、メソッドは、基になるデータベースからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>と、メソッドは基になるデータベースからデータを取得し、データを再度キャッシュします。  
  
 キャッシュの動作は、設定<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>設定の組み合わせによって決まります。 プロパティが<xref:System.Web.UI.DataSourceCacheExpiry.Absolute>値に設定されている場合<xref:System.Web.UI.WebControls.SqlDataSource> 、は最初のデータ取得操作でデータをキャッシュし、 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>プロパティによって指定された時間だけメモリに保持して、時間が経過した後に破棄します。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>経過. キャッシュは、次の操作中に更新されます。 プロパティが<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値に設定されている場合、データソースコントロールは最初のデータ取得操作でデータをキャッシュしますが、後続の各操作でキャッシュを保持している時間枠をリセットします。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> 最後<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>の操作以降の値と同じ時間にアクティビティがない場合、キャッシュの有効期限が切れます。  
  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モードのときにのみデータをキャッシュできます。 コントロールが値に<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>設定さ<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>れ、キャッシュも有効になっている場合<xref:System.NotSupportedException> 、メソッドによって例外がスローさ<xref:System.Web.UI.WebControls.SqlDataSource>れます。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることが予想される場合に、各データの取得をデータベースのセキュリティ構成によって検証する必要がある場合は、キャッシュを使用しないでください。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得し、データキャッシュが有効<xref:System.Web.UI.WebControls.GridView>になっているコントロールに表示する方法を示しています。 このプロパティは<xref:System.Web.UI.DataSourceCacheExpiry.Sliding>値に設定されているため、 <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>値が20秒の場合でも、ユーザーには最新のデータが表示されません。 <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> キャッシュされたデータが更新されるのは、ページに最後のページが読み込まれてから20秒以上が経過していない場合のみです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/CS/sql19cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_19sql/VB/sql19vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CacheKeyDependency">
      <MemberSignature Language="C#" Value="public virtual string CacheKeyDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CacheKeyDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CacheKeyDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CacheKeyDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CacheKeyDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース コントロールによって作成されたすべてのデータ キャッシュ オブジェクトにリンクされる、ユーザー定義のキー依存関係を取得または設定します。 キーの有効期限が切れると、すべてのキャッシュ オブジェクトが明示的に期限切れになります。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> によって作成されたすべてのキャッシュ オブジェクトを識別するキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされて<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>いる間、メソッドは、基になるデータベースからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>と、メソッドは基になるデータベースからデータを取得し、データを再度キャッシュします。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency%2A>プロパティを設定し<xref:System.Web.UI.WebControls.SqlDataSource>て、コントロールとキーによって作成されたすべてのキャッシュエントリ間の依存関係を作成できます。 キーの有効期限が切れると、いつでもプログラムによってすべてのキャッシュエントリの有効期限が切れます。  
  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モードのときにのみデータをキャッシュできます。 コントロールが値に<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>設定さ<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>れ、キャッシュも有効になっている場合<xref:System.NotSupportedException> 、メソッドによって例外がスローさ<xref:System.Web.UI.WebControls.SqlDataSource>れます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 、<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>、および<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>の各プロパティの組み合わせごとに一意のキャッシュエントリが作成されます。 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>が同じ基になるデータベースから同じデータを読み込むシナリオでは、複数のコントロールで同じキャッシュエントリを使用できます。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることが予想される場合に、各データの取得をデータベースのセキュリティ構成によって検証する必要がある場合は、キャッシュを使用しないでください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CancelSelectOnNullParameter">
      <MemberSignature Language="C#" Value="public virtual bool CancelSelectOnNullParameter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CancelSelectOnNullParameter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelSelectOnNullParameter As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CancelSelectOnNullParameter { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CancelSelectOnNullParameter : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="null" /> と評価されたときに、データ取得操作をキャンセルするかどうかを示す値を取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクションに格納されているパラメーターが <see langword="true" /> と評価されたときに、データ取得操作をキャンセルする場合は <see langword="null" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>プロパティの値は、ビューステートに格納されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ConflictDetection">
      <MemberSignature Language="C#" Value="public System.Web.UI.ConflictOptions ConflictDetection { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ConflictOptions ConflictDetection" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberSignature Language="VB.NET" Value="Public Property ConflictDetection As ConflictOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ConflictOptions ConflictDetection { System::Web::UI::ConflictOptions get(); void set(System::Web::UI::ConflictOptions value); };" />
      <MemberSignature Language="F#" Value="member this.ConflictDetection : System.Web.UI.ConflictOptions with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConflictDetection" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ConflictOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベース内の行のデータが操作中に変更される場合に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールで更新と削除を実行する方法を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ConflictOptions" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.ConflictOptions.OverwriteChanges" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>は、古い値と新しい値のパラメーターが`Update`メソッドに適用されるかどうかを決定します。 たとえば、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティによって指定されたコマンドが列<xref:System.Data.DataTable> <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> `Name` `Number`を持つオブジェクトを返し、プロパティが<xref:System.Web.UI.ConflictOptions.OverwriteChanges>値に設定されている場合、次に対してパラメーターが作成されます。メソッドの`Update`と`Number`。 `Name` `original_Name` `Number` `Name` `original_Number`プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、、、、およびに対してパラメーターが作成されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> (元の値のパラメーターの正確な名前は、 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティによって異なります)。次<xref:System.Web.UI.WebControls.SqlDataSource>に、コントロールは、 `Update` <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>プロパティで指定されているメソッドに一致するパラメーターがあるかどうかを判断します。  
  
 同時実行制御は、複数のクライアントが同じデータにアクセスして操作しているときに、ストア内のデータの読み取りと変更の方法を制御するためにデータストアで使用される手法です。 たとえば、あるクライアントがデータを読み取り、ユーザーに提示し、別のクライアントが同じデータを読み取って別のユーザーに提示する場合などです。 両方のユーザーがデータを更新してデータストレージに送信した場合、両方のクライアントが同じデータに対して異なる値を更新する可能性があるため、予期しない結果が発生する可能性があります。 これは、競合と見なされます。 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティを<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定することにより`Update` 、メソッドは、古い値と新しい値を元のデータソースと比較して競合を検出し、必要に応じて処理することができます。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ConflictOptions" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public virtual string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.SqlDataSourceConnectionStringEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースに接続するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する ADO.NET プロバイダー固有の接続文字列を取得または設定します。</summary>
        <value>が<see cref="T:System.Web.UI.WebControls.SqlDataSource" />表す SQL データベースに接続するために使用する、.NET Framework データプロバイダー固有の文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、さまざまな ADO.NET プロバイダーで使用できます。また、基になるデータソースへの接続に使用される接続文字列の構文は、プロバイダーに固有のものです。  
  
 コントロールを<xref:System.Web.UI.WebControls.SqlDataSource>構成する場合は、 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティをデータベースの種類 (既定値は<xref:System.Data.SqlClient?displayProperty=nameWithType>) に設定し、接続するために<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>必要な情報を含む接続文字列にプロパティを設定します。データベースに対して。 接続文字列の内容は、データソースコントロールがアクセスしているデータベースの種類によって異なります。 たとえば<xref:System.Web.UI.WebControls.SqlDataSource> 、コントロールには、サーバー名、データベース (カタログ) 名、および SQL Server に接続するときにユーザーを認証する方法に関する情報が必要です。 接続<xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>文字列の内容の詳細については、クラスのプロパティ<xref:System.Data.SqlClient.SqlConnection> <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> <xref:System.Data.OracleClient.OracleConnection> 、クラスのプロパティ、 <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> <xref:System.Data.OleDb.OleDbConnection>クラスのプロパティ、または<xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A><xref:System.Data.Odbc.OdbcConnection>クラスのプロパティ。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティ<xref:System.Web.UI.WebControls.SqlDataSource> を変更すると、イベントが発生し、コントロールにバインドされているコントロールが再バインド<xref:System.Web.UI.IDataSource.DataSourceChanged>されます。  
  
> [!IMPORTANT]
>  接続文字列の格納の詳細について[は、「」を参照してください。データソースコントロール](https://msdn.microsoft.com/library/942f6dcb-d278-4bec-8403-60eede9bcd62)を使用する場合は、接続文字列をセキュリティで保護します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティを設定して、Microsoft SQL Server データベースに接続し、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティ<xref:System.Web.UI.WebControls.GridView>の結果をコントロールに表示する方法を示します。 2番目のコード例では、より複雑な<xref:System.Web.UI.WebControls.SqlDataSource>シナリオを示します。このシナリオでは、コントロールを使用して、パスワードで保護された Microsoft access データベースのデータを表示および更新します。 どちらの場合も、 `connectionStrings` web.config ファイルの要素が最初に表示され、その後に<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを含む ASP.NET ページが表示されます。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティを設定して、SQL Server データベースに接続し、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティ<xref:System.Web.UI.WebControls.GridView>の結果をコントロールに表示する方法を示しています。  
  
  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/CS/sql3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_3sql/VB/sql3vb.aspx#1)]  
  
 次のコード例は、前のコード例よりも複雑なシナリオを示し<xref:System.Web.UI.WebControls.SqlDataSource>ています。ここでは、コントロールを使用して、パスワードで保護された Access データベースのデータを表示および更新しています。 は Access <xref:System.Data.OleDb> <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>で使用されるため、プロパティはプロバイダーに設定され、プロパティはUNC共有アクセスデータベースの適切な接続文字列に設定されます。<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> <xref:System.Web.UI.WebControls.SqlDataSource> コントロール<xref:System.Web.UI.WebControls.GridView>は、出荷日を含む注文を表示します。 適切なチェックボックスをオンにして、**[更新]** ボタンをクリックすることで、注文を更新できます。  
  
> [!IMPORTANT]
>  この例では、説明のためだけにパスワードがプレーンテキストで含まれています。 実稼働アプリケーションでは、パスワードを含む接続文字列を暗号化する必要があります。 詳細については、「[接続情報の保護](~/docs/framework/data/adonet/protecting-connection-information.md)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#1)]  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/CS/sql22cs.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_22sql/VB/sql22vb.aspx#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceView (viewName As String) As SqlDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::SqlDataSourceView ^ CreateDataSourceView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="abstract member CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView&#xA;override this.CreateDataSourceView : string -&gt; System.Web.UI.WebControls.SqlDataSourceView" Usage="sqlDataSource.CreateDataSourceView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">データ ソース ビューの名前。</param>
        <summary>データ ソース コントロールに関連付けられたデータ ソース ビュー オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource>クラスから派生したクラスは、メソッド<xref:System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView%2A>をオーバーライドして、厳密に型指定されたデータソースビューオブジェクトを返すことができます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="T:System.Web.UI.DataSourceView" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DataSourceMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberSignature Language="VB.NET" Value="Public Property DataSourceMode As SqlDataSourceMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceMode DataSourceMode { System::Web::UI::WebControls::SqlDataSourceMode get(); void set(System::Web::UI::WebControls::SqlDataSourceMode value); };" />
      <MemberSignature Language="F#" Value="member this.DataSourceMode : System.Web.UI.WebControls.SqlDataSourceMode with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールがデータのフェッチに使用するデータ取得モードを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> 値のいずれか 1 つ。 既定<see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataSet" />値はです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ取得モードは、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>基になるデータベースからデータを取得する方法を指定します。  
  
 プロパティが<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>値に設定されている場合、 <xref:System.Data.DataSet>データはオブジェクトに読み込まれ、サーバー上のメモリに格納されます。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> これにより<xref:System.Web.UI.WebControls.GridView>、などのユーザーインターフェイスコントロールが並べ替え、フィルター処理、ページングなどの機能を提供できるようになります。  
  
 プロパティが<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値に設定されている場合、 <xref:System.Data.IDataReader>データは、順方向専用の読み取り専用カーソルであるオブジェクトによって取得されます。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Data.IDataReader>オブジェクトの特定の型は、が<xref:System.Web.UI.WebControls.SqlDataSource>使用する NET data provider によって異なります。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>これは、プロパティによって識別されます。 既定では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは Microsoft SQL Server <xref:System.Data.SqlClient?displayProperty=nameWithType>、、およびデータリーダーが<xref:System.Data.SqlClient.SqlDataReader>オブジェクトであるのプロバイダーを使用します。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティ<xref:System.Web.UI.WebControls.SqlDataSource> を変更すると、イベントが発生し、にバインドされているコントロールが再バインド<xref:System.Web.UI.IDataSource.DataSourceChanged>されます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>プロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次の<xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>コード例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールのプロパティを、並べ替え、ページング、フィルター処理を必要とし<xref:System.Web.UI.WebControls.ListBox>ないコントロールを持つシナリオの<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>値に設定する方法を示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" /> プロパティが <see cref="T:System.Web.UI.WebControls.SqlDataSourceMode" /> に定義されている値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete();" />
      <MemberSignature Language="F#" Value="member this.Delete : unit -&gt; int" Usage="sqlDataSource.Delete " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" /> コレクション内にある任意のパラメーターを使用して、削除操作を実行します。</summary>
        <returns>基になるデータベースから削除された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 削除操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>される前に、メソッドが呼び出されてイベントが<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>発生します。 このイベントを処理して、パラメーターの値を調べたり、削除操作の前に前処理を実行したりすることができます。  
  
 操作が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>が発生します。 このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 メソッドは、メソッド`Delete`にプログラムでアクセスするために用意されています。 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> コントロールがデータバインドコントロールに関連付けられている場合、データバインドコントロールは自動的に Delete メソッドを呼び出します。 **** <xref:System.Web.UI.WebControls.SqlDataSource>  
  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのメソッドにデリゲートします。 操作を実行するために<xref:System.Web.UI.WebControls.SqlDataSourceView> 、は<xref:System.Data.Common.DbCommand> <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>テキストと関連<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>する値を使用してオブジェクトを構築し<xref:System.Data.Common.DbCommand> 、基になるデータベースに対してを実行します。  
  
   
  
## Examples  
 次のコード例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>から注文を削除するテキストを設定する方法を示します。 初期状態では、データは Orders テーブルから取得され<xref:System.Web.UI.WebControls.DropDownList> 、コントロールに表示されます。 などのデータバインドコントロール<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>を使用する場合<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>は、 <xref:System.Web.UI.WebControls.DropDownList>プロパティを明示的に宣言し、メソッドを呼び出す必要があります<xref:System.Web.UI.WebControls.GridView> ( <xref:System.Web.UI.WebControls.DetailsView>やなどの他のコントロールとは異なり、自動的に設定されます。パラメーターを指定し<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> 、データソースコントロールに対してメソッドを呼び出します)。 この例<xref:System.Web.UI.WebControls.Button.OnClick%2A>では、イベントはプライベート`OnDelete`イベントハンドラーに委任され、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドを明示的に呼び出します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommand">
      <MemberSignature Language="C#" Value="public string DeleteCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DeleteCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースからデータを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを削除するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 、SQL クエリまたはストアドプロシージャの名前を表し、 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドによって使用されます。  
  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化クエリまたはコマンドである場合、パラメーターの構文は、使用されている ADO.NET プロバイダーにも依存します。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターの構文は`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>がストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
> [!IMPORTANT]
>  セキュリティ上の理由から<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> 、プロパティはビューステートに格納されません。 クライアントでビューステートの内容をデコードできるため、データベース構造に関する機密情報をビューステートに格納すると、情報漏えいの脆弱性が生じる可能性があります。  
  
   
  
## Examples  
 次のコード例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>の Orders テーブルから注文を削除するテキストを設定する方法を示します。 データは Orders テーブルから取得され、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示されます。 プロパティが<xref:System.Web.UI.WebControls.GridView>に**** 設定されている場合、は[削除]ボタンを自動的に表示し`true`ます。 <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> また、**[削除]** ボタンをクリックすると<xref:System.Web.UI.WebControls.GridView> 、コントロールによっ<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>て自動的にコレクション<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>が設定され、メソッドが呼び出されます。 最後に、このコード例ではデータを削除するため、 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作を実行する前にデータベースをディスクにバックアップするイベントハンドラーを追加します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property DeleteCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType DeleteCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommandType%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Deleted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 削除操作<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>の完了後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
> [!NOTE]
>  コントロールにバインドする<xref:System.Web.UI.WebControls.BoundField>データバインドコントロール内のコントロールに、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクション内の任意のパラメーター名と一致する名前があることを確認します。 <xref:System.Web.UI.WebControls.SqlDataSource> バインドされたフィールドと同じ名前のパラメーターが SQL コマンドから除外され、"パラメーターが指定されていません" エラーが発生する可能性があります。  
  
 プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合は、データの新旧両方の値に対してパラメーターが作成されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 古い値のパラメーターには、 <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>プロパティに従って名前が付けられます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでのパラメーターの順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>プロパティを取得します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Deleting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、Northwind データベース<xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>から注文を削除するテキストを設定する方法を示します。 初期状態では、データは Orders テーブルから取得され<xref:System.Web.UI.WebControls.DropDownList> 、コントロールに表示されます。 <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>など<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> <xref:System.Web.UI.WebControls.DetailsView>のデータバインドコントロールを使用する場合は、プロパティを明示的に宣言し、メソッドを呼び出す必要があります (やなどの他のコントロールとは異なり、パラメーターを自動的に設定します。 <xref:System.Web.UI.WebControls.DropDownList>データ<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>ソースコントロールでを呼び出します。 この例<xref:System.Web.UI.WebControls.Button.OnClick%2A>では、イベントはプライベート`OnDelete`イベントハンドラーに委任され、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドを明示的に呼び出します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/CS/sql11cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_11sql/VB/sql11vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Deleting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>削除操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>  
  
 イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 したがって、 <xref:System.Data.Common.DbCommand.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトによって公開されている<xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトのプロパティをに設定する`true`ことによって、データベース操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作が発生する前に発生するイベントを処理する方法を示しています。 この例では、Northwind データベースからデータを削除<xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>するため、 <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>操作を実行する前にデータベースをディスクにバックアップするハンドラーが追加されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/CS/sql10cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_10sql/VB/sql10vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DeleteParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="EnableCaching">
      <MemberSignature Language="C#" Value="public virtual bool EnableCaching { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableCaching" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableCaching As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableCaching { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableCaching : bool with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.EnableCaching" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールでデータ キャッシュが有効かどうかを示す値を取得または設定します。</summary>
        <value>データ ソース コントロールでデータ キャッシュが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、データのキャッシュをサポートしています。 データがキャッシュされて<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>いる間、メソッドは、基になるデータベースからではなく、キャッシュからデータを取得します。 キャッシュの有効期限が切れる<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>と、メソッドは基になるデータベースからデータを取得し、データを再度キャッシュします。  
  
 プロパティがに<xref:System.Web.UI.WebControls.SqlDataSource> 設定`true` され、プロパティが0よりも大きい値に設定されている場合、コントロールはデータを自動的にキャッシュします。これは、を取得する前にキャッシュがデータを格納する秒数を示します。<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>新しいセット。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることが予想される場合に、各データの取得をデータベースのセキュリティ構成によって検証する必要がある場合は、キャッシュを使用しないでください。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server で Northwind データベースからデータを取得し、データキャッシュが有効<xref:System.Web.UI.WebControls.GridView>になっているコントロールに表示する方法を示しています。 プロパティが`true` に<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>設定され、が20秒に設定されています。 <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> 既定では、この<xref:System.Web.UI.DataSourceCacheExpiry.Absolute> プロパティはフィールドに設定されているので、このページのユーザーには20秒ごとに新しいデータが表示されます。<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/CS/sql18cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_18sql/VB/sql18vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.EnableCaching" /> でキャッシュがサポートされていない場合、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティは <see langword="true" /> に設定されます。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheDuration" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FilterExpression">
      <MemberSignature Language="C#" Value="public string FilterExpression { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FilterExpression" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberSignature Language="VB.NET" Value="Public Property FilterExpression As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FilterExpression { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FilterExpression : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドが呼び出されるときに適用されるフィルター式を取得または設定します。</summary>
        <value><see cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" /> メソッドを使用してデータを取得するときに適用されるフィルター式を表す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ値は、文字列に含まれるすべての置換パラメーターについて、 <xref:System.String.Format%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>コレクション内の値を使用する書式指定文字列式 (メソッドによって処理される文字列) です。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> フィルター式の構文<xref:System.Data.DataView.RowFilter%2A>は、プロパティで許容される構文と同じです。フィルター式は、メソッドの<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>実行<xref:System.Data.DataView.RowFilter%2A>によって<xref:System.Data.DataView>返されるオブジェクトのプロパティに適用されるためです。 詳細については、「<xref:System.Data.DataColumn.Expression%2A>」を参照してください。  
  
 パラメーターを<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに追加する場合は、書式設定文字列のプレースホルダーを含めることもでき`"{0}")`ます (たとえば、パラメーター値を置き換える式の中)。 プレースホルダーは、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション内のパラメーターのインデックスに従って置き換えられます。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション内のオブジェクトが`null`の場合、オブジェクトは空の文字列に置き換えられます。  
  
 パラメーターを<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティに含めることができます。 パラメーターが文字列型または文字型の場合は、パラメーターを単一引用符で囲みます。 パラメーターが数値型の場合、引用符は必要ありません。 コレクションには、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティで検出されたプレースホルダーに対して評価されるパラメーターが含まれています。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>  
  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、 <xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>モードの場合にのみデータのフィルター処理をサポートします。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 次のコード例では、Northwind データベースからデータを取得し、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>文字列<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>とコレクションを使用してフィルター処理する方法を示します。 プロパティは、データを取得する<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>ためにメソッドが実行されるたびに適用されます。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> この例では<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> 、には、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに含まれているフィルターパラメーターのプレースホルダーが含まれています。 また、filter パラメーターは、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>コントロールの<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>プロパティにバインドされるオブジェクトです。 <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> `true` <xref:System.Web.UI.WebControls.DropDownList>コントロールのプロパティがに設定されているため、コントロールの選択項目を変更すると、ページに情報がサーバーにポストバック<xref:System.Web.UI.WebControls.GridView>され、コントロールがデータソースに再バインドされます。 <xref:System.Web.UI.WebControls.DropDownList>新しいフィルターで制御します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException"><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> プロパティが設定され、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が <see cref="F:System.Web.UI.WebControls.SqlDataSourceMode.DataReader" /> モードです。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Filtering">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Filtering" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Filtering As SqlDataSourceFilteringEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceFilteringEventHandler ^ Filtering;" />
      <MemberSignature Language="F#" Value="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " Usage="member this.Filtering : System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィルター操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが<xref:System.Web.UI.WebControls.SqlDataSource.Filtering> <xref:System.Web.UI.WebControls.SqlDataSource>フィルター操作を実行する前に、フィルターパラメーター値に対して検証操作を実行するイベントを処理します。 オブジェクトの<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティをに設定する`true`ことによって、メソッドを取り消すことができます。 <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> イベントは、プロパティが設定さ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>れている場合にのみ発生します。  
  
 イベント<xref:System.Web.UI.WebControls.SqlDataSource.Filtering?displayProperty=nameWithType>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に<xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=nameWithType>関連付けられているオブジェクトのイベントにデリゲートされます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="FilterParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection FilterParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FilterParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ FilterParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilterParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.FilterParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" /> 文字列のパラメーター プレースホルダーに関連付けられたパラメーターのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティに含まれる任意のパラメーター プレースホルダーに関連付けられたパラメーターのセットを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクション内のパラメーターは、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティで指定されているすべてのパラメーターに関連付けられています。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>プロパティで指定されているパラメーターのプレースホルダーは、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出されたとき<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>に、コレクション内のパラメーターオブジェクトに順番に一致します。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>プロパティを取得します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、Northwind データベースからデータを取得し、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>プロパティを使用してフィルター処理する方法を示します。 コントロールのプロパティは、メソッドを実行し<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>てデータを取得するたびに適用されます。 <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource> この例<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>では、プロパティに、 <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>コレクションに格納されているフィルターパラメーターのプレースホルダーが含まれています。 また、filter パラメーターは、 <xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.DropDownList>コントロールの<xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A>プロパティにバインドされるオブジェクトです。 コントロールの<xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A>プロパティがに`true`設定されているため、 <xref:System.Web.UI.WebControls.DropDownList>選択項目を変更すると、ページによってサーバーに情報<xref:System.Web.UI.WebControls.GridView>がポストバックされ、コントロールがデータソースコントロールに再バインドされます。新しいフィルター。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/CS/sql17cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_17sql/VB/sql17vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.FilterExpression" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.DataSourceMode" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetDbProviderFactory">
      <MemberSignature Language="C#" Value="protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Data.Common.DbProviderFactory GetDbProviderFactory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDbProviderFactory () As DbProviderFactory" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Data::Common::DbProviderFactory ^ GetDbProviderFactory();" />
      <MemberSignature Language="F#" Value="abstract member GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory&#xA;override this.GetDbProviderFactory : unit -&gt; System.Data.Common.DbProviderFactory" Usage="sqlDataSource.GetDbProviderFactory " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbProviderFactory</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Data.Common.DbProviderFactory" /> プロパティで識別される ADO.NET プロバイダーに関連付けられた <see cref="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" /> オブジェクトを返します。</summary>
        <returns>識別された ADO.NET プロバイダーを表す <see cref="T:System.Data.Common.DbProviderFactory" />。それ以外の場合、プロバイダーが設定されていないときは <see cref="N:System.Data.SqlClient" /> のインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、データベースと対話<xref:System.Web.UI.WebControls.SqlDataSource>するときに、適切な ADO.NET connection、command、および parameter オブジェクトを作成するために、コントロールによって使用されます。 <xref:System.Data.Common.DbProviderFactory>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Data.Common.DbProviderFactory" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="sqlDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。 <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> がサポートするビューは 1 つだけであるため、<paramref name="viewName" /> は無視されます。</param>
        <summary>データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> に関連付けられた "Table" という名前の <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>でサポートされるデータソースビューは1つだけです。 すべてのデータソースビューオブジェクト<xref:System.Web.UI.WebControls.SqlDataSourceView>と同様に、データソースコントロールに関連付けられているオブジェクトは、その機能を定義し、基になるデータベースからデータを取得するために必要なすべての作業を実行し、並べ替えなどの操作を実行します。挿入、削除、および更新。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><paramref name="viewName" /> が <see langword="null" /> であるか、<c>Table</c> 以外の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceView" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="sqlDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</summary>
        <returns><see cref="T:System.Collections.ICollection" /> に関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、基になるデータに対して、と`"Table"`いう名前のビューを1つだけサポートします。 メソッド<xref:System.Web.UI.WebControls.SqlDataSource.GetViewNames%2A>は、この1つのビュー名の単一要素のコレクションを返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.GetView(System.String)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert();" />
      <MemberSignature Language="F#" Value="member this.Insert : unit -&gt; int" Usage="sqlDataSource.Insert " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" /> コレクション内にある任意のパラメーターを使用して、挿入操作を実行します。</summary>
        <returns>基になるデータベースに挿入された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>される前に、メソッドが呼び出されてイベントが<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>発生します。 このイベントを処理して、パラメーターの値を調べたり、操作の<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>前に前処理を実行したりすることができます。 挿入操作を実行するために<xref:System.Web.UI.WebControls.SqlDataSourceView> 、オブジェクトは<xref:System.Data.Common.DbCommand> <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>テキストとそれに関連付けら<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>れたプロパティを使用し<xref:System.Data.Common.DbCommand>てオブジェクトを構築し、基になるデータベースに対してオブジェクトを実行します。  
  
 操作が完了すると、 <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>が発生します。 このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 メソッドは、メソッド`Insert`にプログラムでアクセスするために用意されています。 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> コントロールがデータバインドコントロールに関連付けられている場合、データバインドコントロールは自動的に`Insert`メソッドを呼び出します。 <xref:System.Web.UI.WebControls.SqlDataSource>  
  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのメソッドにデリゲートします。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。 データテーブル内の現在のデータが<xref:System.Web.UI.WebControls.DropDownList>コントロールに表示されます。 新しいレコードを追加するには、 <xref:System.Web.UI.WebControls.TextBox>コントロールに値を入力し、**[挿入]** ボタンをクリックします。 **[挿入]** ボタンがクリックされると、指定された値がデータベース<xref:System.Web.UI.WebControls.DropDownList>に挿入され、が更新されます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。検証を行わずにパラメーターに値を挿入することもできます。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
> [!NOTE]
>  この例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommand">
      <MemberSignature Language="C#" Value="public string InsertCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ InsertCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースにデータを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを挿入するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 、SQL クエリまたはストアドプロシージャの名前のいずれかを表し、 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>メソッドによって使用されます。  
  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>ソースがストアドプロシージャをサポートしている場合、には、SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 このプロパティは、 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールに関連付け<xref:System.Web.UI.WebControls.SqlDataSourceView>られているのプロパティにデリゲートします。  
  
> [!IMPORTANT]
>  セキュリティ上の理由から<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> 、プロパティは "ビューステート" として格納されていません。 クライアントでビューステートの内容をデコードできるため、データベース構造に関する機密情報をビューステートに格納すると、情報漏えいの脆弱性が生じる可能性があります。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。 2番目のコード例では、Microsoft SQL Server からデータを取得して<xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法と<xref:System.Web.UI.WebControls.DetailsView> 、コントロールを使用して、選択した<xref:System.Web.UI.WebControls.GridView>行の詳細をコントロールに表示する方法と、新しいレコードを挿入するためのフォームとして使用する方法を示します。  
  
> [!NOTE]
>  これらの例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。 データテーブル内の現在のデータが<xref:System.Web.UI.WebControls.DropDownList>コントロールに表示されます。 新しいレコードを追加するには、 <xref:System.Web.UI.WebControls.TextBox>コントロールに値を入力し、**[挿入]** ボタンをクリックします。 **[挿入]** ボタンをクリックすると、指定した値がデータベース<xref:System.Web.UI.WebControls.DropDownList>に挿入され、コントロールが更新されます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。検証なしでパラメーターに値が挿入されます。これは、潜在的なセキュリティ上の脅威でもあります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 次のコード例は、SQL Server からデータを取得して<xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法と、コントロールを<xref:System.Web.UI.WebControls.DetailsView>使用して、 <xref:System.Web.UI.WebControls.GridView>コントロール内の選択した行の詳細を表示する方法と、新しいレコードを挿入するためのフォームとして使用する方法を示しています。  
  
 最初に、データが<xref:System.Web.UI.WebControls.GridView>コントロールに表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 および<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> <xref:System.Web.UI.WebControls.DetailsView>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行が確実に<xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロール<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>によってデータベースにデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>の主キーの値と、 <xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="InsertCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property InsertCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType InsertCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.InsertCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.InsertCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 次のコード例では、Microsoft SQL Server データベースからデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示します。 また、コントロールを<xref:System.Web.UI.WebControls.DetailsView>使用して、で選択した行の詳細を表示したり、 <xref:System.Web.UI.WebControls.GridView>新しいレコードを挿入するためのフォームとして使用したりする方法も示します。  
  
 コントロール<xref:System.Web.UI.WebControls.GridView>にはデータのセットが表示さ<xref:System.Web.UI.WebControls.DetailsView>れ、には特定の行の詳細が表示されます。 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 ストアドプロシージャ名は、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>プロパティで設定され、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommandType%2A>プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定することによって、ストアドプロシージャとして識別されます。  
  
 <xref:System.Web.UI.WebControls.DetailsView>コントロールによってデータベースにデータが挿入された<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの値<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> <xref:System.Web.UI.WebControls.GridView>が表示されます。コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Inserted : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>が完了した後で、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server からデータを取得して<xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法と、コントロールを<xref:System.Web.UI.WebControls.DetailsView>使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示する方法と、新しいレコードを挿入するための方法を示しています。  
  
> [!NOTE]
>  この例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 最初に、データが<xref:System.Web.UI.WebControls.GridView>コントロールに表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 および<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> <xref:System.Web.UI.WebControls.DetailsView>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行が確実に<xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する場合、は、 <xref:System.Web.UI.WebControls.TemplateField>任意のオブジェクトからの正しいパラメーターと、オブジェクトのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロール<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>によってデータベースにデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserted(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Inserting : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>挿入操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 したがって、 <xref:System.Data.Common.DbCommand.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>プロパティによって公開されている<xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトのプロパティをに設定する`true`ことによって、データベース操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、Microsoft SQL Server からデータを取得して<xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法と、コントロールを<xref:System.Web.UI.WebControls.DetailsView>使用して、 <xref:System.Web.UI.WebControls.GridView>で選択した行の詳細を表示する方法と、新しいレコードを挿入するための方法を示しています。  
  
> [!NOTE]
>  この例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 最初に、データが<xref:System.Web.UI.WebControls.GridView>コントロールに表示され、 <xref:System.Web.UI.WebControls.GridView>の選択した行<xref:System.Web.UI.WebControls.DetailsView>がコントロールにも表示されます。 および<xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> <xref:System.Web.UI.WebControls.DetailsView>コントロールは、異なるデータソースコントロールを使用します。に関連付けられているコントロールには、プロパティとプロパティがあります。これにより、の選択した行が確実に<xref:System.Web.UI.WebControls.DetailsView>さ.  
  
 コントロールの [自動的に生成された**挿入**] ボタンをクリックすると、別のユーザーインターフェイスが表示されます。このインターフェイスは、新しいレコードを挿入するために使用されます。<xref:System.Web.UI.WebControls.DetailsView> <xref:System.Web.UI.WebControls.DetailsView> この例では、ストアドプロシージャを使用してレコードを挿入し、挿入された行の主キーを返します。 レコード<xref:System.Web.UI.WebControls.DetailsView>を挿入すると、によって、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>バインドされた列の値がコレクションに<xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>自動的に設定され、メソッドが呼び出されます。 ASP.NET <xref:System.Web.UI.WebControls.DetailsView>双方向のデータバインディング構文を<xref:System.Web.UI.WebControls.BoundField>使用する<xref:System.Web.UI.WebControls.TemplateField>場合、は、任意のオブジェクトからの正しいパラメーターとのパラメーターを推論できます。 この例では、ストアドプロシージャによって返さ<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>れる主キーを処理するために、イベントハンドラーに追加のパラメーターが追加されています。  
  
 最後に、 <xref:System.Web.UI.WebControls.DetailsView>コントロール<xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>によってデータベースにデータが挿入された後、イベントを処理<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>するためにイベントハンドラーが呼び出され、挿入された行の主キーの`DataBind`値が表示されます。<xref:System.Web.UI.WebControls.GridView>コントロールは、データを更新するために明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/CS/sql15cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_15sql/VB/sql15vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnInserting(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>プロパティを取得します。  
  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な Web フォームページを使用してデータベースにデータを挿入する方法を示します。 データテーブル内の現在のデータが<xref:System.Web.UI.WebControls.DropDownList>コントロールに表示されます。 新しいレコードを追加するには、 <xref:System.Web.UI.WebControls.TextBox>コントロールに値を入力し、**[挿入]** ボタンをクリックします。 **[挿入]** ボタンをクリックすると、指定した値がデータベース<xref:System.Web.UI.WebControls.DropDownList>に挿入され、コントロールが更新されます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。検証なしでパラメーターに値が挿入されます。これは、潜在的なセキュリティ上の脅威でもあります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
> [!NOTE]
>  この例では、データアクセスに対して宣言型構文を使用する方法を示します。 マークアップではなくコードを使用してデータにアクセスする方法の詳細については、「 [Visual Studio でのデータ](https://msdn.microsoft.com/library/9812a6d5-23d2-4427-8b98-70a2abfec3bc)へのアクセス」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.InsertCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="sqlDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> の状態を表すオブジェクト。</param>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、以前に保存した<xref:System.Web.UI.WebControls.SqlDataSource>コントロールのビューステートを読み込むために使用されます。 <xref:System.Web.UI.WebControls.SqlDataSource.LoadViewState%2A>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OldValuesParameterFormatString">
      <MemberSignature Language="C#" Value="public string OldValuesParameterFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OldValuesParameterFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Property OldValuesParameterFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OldValuesParameterFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OldValuesParameterFormatString : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("{0}")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> メソッドに渡される任意のパラメーター名に適用される書式指定文字列を取得または設定します。</summary>
        <value><see cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" /> メソッドまたは <see cref="M:System.Web.UI.WebControls.SqlDataSource.Update" /> メソッドに渡される任意の <paramref name="oldValues" /> パラメーターの名前に適用される書式指定文字列を表す文字列。 既定値は "{0}" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 書式指定文字列は、主キーにのみ適用されます。たとえば、関連付け`DataKeyNames`られたデータバインドコントロールのプロパティによって識別されるものや<xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> 、プロパティが<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> <xref:System.Web.UI.ConflictOptions.CompareAllValues>値との`oldValues`セットは、対応するデータメソッドに渡されます。 この場合、書式文字列は`oldValues`コレクション内の各パラメーター名に適用されます。  
  
 次の2つの一般的なシナリオ<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>では、プロパティを変更できます。  
  
-   更新プログラムの古い値と新しい値を区別するため。 プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定されている場合、元の<xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>値と新しい値の両方のパラメーターがコレクションに追加されます。 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> 書式設定文字列がない場合、データフィールドごとに同じ名前の2つのパラメーターが作成されます。 元の値パラメーターの名前を変更することで、データを元のデータソースと比較して競合を検出し、キー値を比較することができます。  
  
-   一部のビジュアルデザイナーでは、元の値とキーに対して特定の名前付けスキームが実装されています。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="sqlDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Page.LoadComplete" /> コントロールを格納する <see cref="T:System.Web.UI.Page" /> コントロールに <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> イベント ハンドラーを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource>オブジェクトによって追加されたイベントハンドラーに<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>よっ<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>て、およびの値が更新されます。 値が更新<xref:System.Web.UI.IDataSource.DataSourceChanged>されると、イベントが発生し、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールにバインドされているコントロールが再バインドされます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="ProviderName">
      <MemberSignature Language="C#" Value="public virtual string ProviderName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ProviderName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ProviderName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ProviderName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ProviderName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.ProviderName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.WebControls.DataProviderNameConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが基になるデータ ソースに接続するために使用する .NET Framework データ プロバイダーの名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用するデータ プロバイダーの名前。それ以外の場合、プロバイダーが設定されていないときは、Microsoft SQL Server の ADO.NET プロバイダー。 既定値は、Microsoft SQL Server の ADO.NET プロバイダーです。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 .NET Framework には、次のデータプロバイダーが含まれています。  
  
-   <xref:System.Data.SqlClient?displayProperty=nameWithType>プロバイダーは SQL Server の既定の .NET Framework Data Provider です。  
  
-   <xref:System.Data.OleDb?displayProperty=nameWithType>プロバイダーは OLE DB の .NET Framework Data Provider です。  
  
-   <xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、ODBC の .NET Framework Data Provider です。  
  
-   <xref:System.Data.OracleClient?displayProperty=nameWithType>プロバイダーは、Oracle の .NET Framework Data Provider です。  
  
 プロパティは、のように、アンマネージ ADO.NET プロバイダー `MSDAORA`の名前には設定されません。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> 詳細については、「 [SqlDataSource コントロールを使用したデータの選択](https://msdn.microsoft.com/library/44623286-ff5a-4148-8a3c-85c56ed545eb)」を参照してください。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティ<xref:System.Web.UI.WebControls.SqlDataSource> を変更すると、イベントが発生し、にバインドされているコントロールが再バインド<xref:System.Web.UI.IDataSource.DataSourceChanged>されます。  
  
 使用可能なプロバイダーの一覧は、machine.config `DbProviderFactories`ファイルの`system.data`セクションのサブセクションで指定します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコードでは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの SQL Server に既定の .NET Framework Data Provider を使用して SQL Server データベースに接続する方法<xref:System.Data.SqlClient?displayProperty=nameWithType>を示します。 2番目のコード例では、 <xref:System.Data.Odbc?displayProperty=nameWithType>odbc の .NET Framework Data Provider () を使用して odbc データベースに接続する方法を示します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定のデータプロバイダーである<xref:System.Data.SqlClient?displayProperty=nameWithType>を使用して SQL Server データベースに接続する方法を示しています。 <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>プロパティが明示的に設定されていない場合は常に、既定のプロバイダーが使用されます。 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>は、プロバイダー固有です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/CS/sql1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1sql/VB/sql1vb.aspx#1)]  
  
 次のコード例は、前のコード例と機能的には同じですが、odbc の<xref:System.Data.Odbc?displayProperty=nameWithType>.NET Framework Data Provider を使用して odbc データベースに接続する方法を示しています。 <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>プロパティは、odbc データベースに接続するために使用される odbc データソース名 (DSN) の名前に設定されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/CS/odbc1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_1odbc/VB/odbc1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.ConnectionString" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="sqlDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールの現在のビューステートを保存します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> の保存された状態を格納しているオブジェクト。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.IStateManager.SaveViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IEnumerable Select(class System.Web.UI.DataSourceSelectArguments arguments) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
      <MemberSignature Language="VB.NET" Value="Public Function Select (arguments As DataSourceSelectArguments) As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IEnumerable ^ Select(System::Web::UI::DataSourceSelectArguments ^ arguments);" />
      <MemberSignature Language="F#" Value="member this.Select : System.Web.UI.DataSourceSelectArguments -&gt; System.Collections.IEnumerable" Usage="sqlDataSource.Select arguments" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="arguments" Type="System.Web.UI.DataSourceSelectArguments" />
      </Parameters>
      <Docs>
        <param name="arguments">基本的なデータ取得を超えたデータ操作を要求する場合に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。</param>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> SQL 文字列、および <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" /> コレクション内の任意のパラメーターを使用して、基になるデータベースからデータを取得します。</summary>
        <returns>データ行の <see cref="T:System.Collections.IEnumerable" /> リスト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、ページライフサイクル<xref:System.Web.UI.Control.PreRender>のフェーズ中に自動的に呼び出されます。 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> このメソッドは、 <xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>プロパティを介してコントロールにアタッチされたデータバインドコントロールによって呼び出されます。  
  
 プロパティが<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 値<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet>に<xref:System.Data.DataView>設定されている場合、メソッドはオブジェクトを返します。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> プロパティが<xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> 値<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>に<xref:System.Data.IDataReader>設定されている場合、メソッドはオブジェクトを返します。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> データの<xref:System.Data.IDataReader>読み取りが終了したら、オブジェクトを閉じます。  
  
 操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>イベントが発生します。 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> このイベントを処理して、パラメーターの値を調べたり、操作の<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>前に処理を実行したりすることができます。  
  
 操作が完了すると<xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSource.Selected>が発生します。 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 プロパティがに<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType>設定されていて、キャッシュが<xref:System.Web.UI.WebControls.SqlDataSource>有効になっている場合、オブジェクトはからデータを<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>取得し、操作中にデータをキャッシュに保存します。 <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> キャッシュは、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>と<xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>プロパティの組み合わせによって指定されたキャッシュの動作に基づいて、作成、破棄、または更新されます。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることを想定しており、各データの取得をデータベースのセキュリティ構成によって検証する場合は、キャッシュを使用しないでください。  
  
 プロパティがに<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataSet?displayProperty=nameWithType> 設定されて<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>いて、プロパティが指定されている場合、フィルター式は、指定されたプロパティを使用して評価され、結果として得られるフィルターは、<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>操作。  
  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのメソッドにデリゲートします。 では<xref:System.Web.UI.WebControls.SqlDataSourceView> 、データ取得操作を実行するため<xref:System.Data.Common.DbCommand>に、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストと関連<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>する値を使用してオブジェクトを構築<xref:System.Data.Common.DbCommand>し、基になるデータベースに対してを実行します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次の例は、プログラムで<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを呼び出し、クエリの結果に基づいて値を設定する方法を示しています。 次の例は、Web コントロールの宣言型コードを示しています。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx#1)]  
  
 プログラムを使用して<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドを呼び出す方法を次の例に示します。 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は整数を返します。 整数の値は、 <xref:System.Web.UI.WebControls.Label>コントロールのテキストを設定し、 <xref:System.Web.UI.WebControls.HyperLink>コントロールを表示するかどうかを決定するために使用されます。  
  
 [!code-csharp[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/CS/Default.aspx.cs#2)]
 [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource.Select/VB/Default.aspx.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> オブジェクトが、基になるデータ ソースとの接続を確立できません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommand">
      <MemberSignature Language="C#" Value="public string SelectCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベースからデータを取得するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> でデータを取得する際に使用する SQL 文字列またはストアド プロシージャ名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>は、SQL クエリまたはストアドプロシージャの名前を表します。このプロパティは、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> SQL Server データベースからデータを取得するためにメソッドによって使用されます。 Select コマンドでアスタリスク (*) を使用してすべての列を選択し、自動コード生成を使用して更新操作または削除操作を実行する場合は、列名にスペースが含まれていないことを確認してください。  
  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
> [!IMPORTANT]
>  セキュリティ上の理由から<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 、プロパティは "ビューステート" として格納されていません。 クライアントでビューステートの内容をデコードできるため、データベース構造に関する機密情報をビューステートに格納すると、情報漏えいの脆弱性が生じる可能性があります。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを基本的な SQL クエリに設定して ODBC 準拠のデータベースからデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示します。 2番目のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストをストアドプロシージャの名前に設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>し、プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定して、Microsoft SQL Server データベースからデータを取得し、 <xref:System.Web.UI.WebControls.DropDownList>コントロールに表示する方法を示します。  
  
 どちらの例でも、メソッドを<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>明示的に呼び出す必要はありません。これは、 <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>プロパティを<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>通じてデータソースコントロールにアタッチされるデータバインドコントロールが、 <xref:System.Web.UI.Control.PreRender>フェーズ。  
  
 次のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>テキストを基本的な SQL クエリに設定して ODBC 準拠のデータベースからデータを取得し、 <xref:System.Web.UI.WebControls.GridView>コントロールに表示する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/CS/odbc4cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_4odbc/VB/odbc4vb.aspx#1)]  
  
 次のコード例<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>では、テキストをストアドプロシージャの名前に設定<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>し、プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定して、SQL Server データベースからデータを取得し、 <xref:System.Web.UI.WebControls.DropDownList>コントロールに表示する方法を示します。 データ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL クエリまたはストアドプロシージャの名前を指定できます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295">SqlDataSource コントロールでのパラメーターの使用</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SelectCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property SelectCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType SelectCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.SelectCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SelectCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> プロパティのテキストが SQL クエリまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
   
  
## Examples  
 次のコード例では<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> 、テキストをストアドプロシージャ<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A>の名前に設定し、プロパティを<xref:System.Web.UI.WebControls.SqlDataSourceCommandType.StoredProcedure>値に設定して、Microsoft SQL Server データベースからデータを取得し、それ<xref:System.Web.UI.WebControls.DropDownList>をに表示する方法を示します。制御.  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/CS/sql14cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_14sql/VB/sql14vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Selected : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ取得操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ取得<xref:System.Web.UI.WebControls.SqlDataSource.Selected>操作の完了後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelected(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As SqlDataSourceSelectingEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceSelectingEventHandler ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " Usage="member this.Selecting : System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ取得操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>選択操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Select 引数は、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting(System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> オブジェクトから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>プロパティを取得します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Selecting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティを SQL クエリに設定することによって Microsoft SQL Server の Northwind データベースからデータを取得する方法を示しています。 SQL クエリがパラメーター化され、 <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>プロパティのプレースホルダーが<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクションに追加<xref:System.Web.UI.WebControls.ControlParameter>されたオブジェクトと照合されます。 がバインドされて<xref:System.Web.UI.WebControls.DropDownList> <xref:System.Web.UI.WebControls.ListBox>いるコントロールは、コントロールに表示される内容のフィルターとして機能します。 <xref:System.Web.UI.WebControls.ControlParameter>  
  
 使用できるその他の種類のパラメーターの詳細について<xref:System.Web.UI.WebControls.Parameter>は、「クラスの概要」を参照してください。  
  
> [!NOTE]
>  パラメーターは WHERE 句で使用されるため、コード例での<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>プロパティの使用は、プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>とプロパティを使用するの<xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>と機能的には同じです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/CS/sql2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_2sql/VB/sql2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.SelectCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SortParameterName">
      <MemberSignature Language="C#" Value="public string SortParameterName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SortParameterName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberSignature Language="VB.NET" Value="Public Property SortParameterName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SortParameterName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SortParameterName : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SortParameterName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前を取得または設定します。</summary>
        <value>ストアド プロシージャを使用してデータ取得を実行する際、取得したデータの並べ替えに使用するストアド プロシージャ パラメーターの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、 <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>プロパティに含まれる SQL コマンドがストアドプロシージャの名前である場合にのみ評価されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> この場合、 <xref:System.Web.UI.WebControls.SqlDataSource.SortParameterName%2A>プロパティが設定されていると、ストアドプロシージャの結果の並べ替えに使用されるパラメーターの名前が格納されます。  
  
 プロパティが設定されている場合は、プロパティ<xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>の前に付加されます。 <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SqlCacheDependency">
      <MemberSignature Language="C#" Value="public virtual string SqlCacheDependency { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SqlCacheDependency" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SqlCacheDependency As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SqlCacheDependency { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SqlCacheDependency : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Microsoft SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す、セミコロンで区切られた文字列を取得または設定します。</summary>
        <value>SQL Server キャッシュの依存関係で使用するデータベースとテーブルを示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.SqlDataSource>は、データキャッシュの<xref:System.Web.Caching.SqlCacheDependency>オブジェクトに基づくオプションの有効期限ポリシーをサポートします (サービスをデータベースサーバー用に構成する必要があります)。  
  
 文字列は、 `@ Page`ディレクティブで使用されるのと同じ形式に従ってデータベースとテーブルを識別します。文字列の最初の部分は、Microsoft SQL Server データベースへの接続文字列で、その後にコロン区切り文字が続きます。 <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>最後に、データベーステーブルの名前 (など`"connectionstring1:table1"`) を指定します。 プロパティが<xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>複数のテーブルに依存している場合、接続文字列とテーブル名のペアはセミコロンで区切られます ( `"connectionstring1:table1";connectionstring2:table2"`例:)。  
  
> [!IMPORTANT]
>  Microsoft Windows 認証でクライアントの偽装を使用している場合は、最初のユーザーがデータにアクセスしたときにデータがキャッシュされます。 別のユーザーが同じデータを要求した場合、データはキャッシュから取得されます。 データへのユーザーのアクセスを確認するために、データベースに対して別の呼び出しを行っても、データは取得されません。 複数のユーザーがデータにアクセスすることが予想される場合に、各データの取得をデータベースのセキュリティ構成によって検証する必要がある場合は、キャッシュを使用しないでください。  
  
   
  
## Examples  
 次のコード例は、SQL Server キャッシュ<xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> <xref:System.Web.UI.WebControls.SqlDataSource>の依存関係を作成し、コントロールのプロパティを設定する方法を示しています。 この例では、データベースは120秒ごとにポーリングされます。 Northwind Traders Employees テーブル内のデータがその時間内に変更された場合、コントロールによっ<xref:System.Web.UI.WebControls.SqlDataSource>てキャッシュされ、 <xref:System.Web.UI.WebControls.GridView> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールによって表示されるデータは、次回データベースをポーリングしたときにコントロールによって更新されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/CS/sql23cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_23sql/VB/sql23vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Caching.SqlCacheDependency" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="sqlDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールのビューステートの変更を追跡し、変更がコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納されるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSource.TrackViewState%2A>メソッドは、コントロールのビューステートの一部として、コントロールの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.IStateManager.TrackViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSource.Update" />
      <MemberSignature Language="VB.NET" Value="Public Function Update () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update();" />
      <MemberSignature Language="F#" Value="member this.Update : unit -&gt; int" Usage="sqlDataSource.Update " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> SQL 文字列と <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" /> コレクション内にある任意のパラメーターを使用して、更新操作を実行します。</summary>
        <returns>基になるデータベースで更新された行数を表す値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データが変更されている<xref:System.Web.UI.WebControls.GridView>場合<xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.FormView> メソッドは、ポストバック中に、、およびの各コントロールによって自動的に<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>呼び出されます。 他のコントロールで変更されたデータの場合<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> 、メソッドは、イベントの<xref:System.Windows.Forms.Form.Load>発生時にポストバック時に明示的に呼び出すことができます。  
  
 操作が実行<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>される前に、メソッドが呼び出されて<xref:System.Web.UI.WebControls.SqlDataSource.Updating>イベントが発生します。 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> このイベントを処理して、パラメーターの値を調べたり、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>操作の前に前処理を実行したりすることができます。  
  
 操作が完了すると<xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> 、メソッドが呼び出されてイベント<xref:System.Web.UI.WebControls.SqlDataSource.Updated>が発生します。 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> このイベントを処理して、戻り値とエラーコードを確認し、後処理を実行できます。  
  
 メソッド<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのメソッドにデリゲートします。 更新操作を実行するために<xref:System.Web.UI.WebControls.SqlDataSourceView> 、は<xref:System.Data.Common.DbCommand> 、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>テキストおよび関連付けられ<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>ているプロパティを使用し<xref:System.Data.Common.DbCommand>てオブジェクトを構築し、基になるデータベースに対してオブジェクトを実行します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Updating>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用して<xref:System.Web.UI.WebControls.DropDownList>コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示します。 2番目のコード例では、 <xref:System.Web.UI.WebControls.DropDownList>コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、 <xref:System.Web.UI.WebControls.TextBox>コントロールを使用してレコードを更新する方法を示します。  
  
 次のコード例は、コントロールを使用<xref:System.Web.UI.WebControls.SqlDataSource>して<xref:System.Web.UI.WebControls.DropDownList>コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示しています。 パラメーター化された SQL ステートメントを使用して<xref:System.Web.UI.WebControls.ControlParameter> <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> プロパティが設定され、コレクションに2つのパラメーターが追加<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>されます。 **[送信]** ボタンをクリック<xref:System.Web.UI.WebControls.Button.OnClick%2A>すると、イベントが処理され、メソッドが<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>明示的に呼び出されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.DropDownList>コントロールの SQL Server データベースから取得されたデータを表示し、 <xref:System.Web.UI.WebControls.TextBox>コントロールを使用してレコードを更新する方法を示しています。 この例では、 <xref:System.Data.Common.DbTransaction> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータを更新するときに、オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が、基になるデータ ソースとの接続を確立できません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommand">
      <MemberSignature Language="C#" Value="public string UpdateCommand { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateCommand" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommand As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ UpdateCommand { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommand : string with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>基になるデータベース内のデータを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールが使用する SQL 文字列を取得または設定します。</summary>
        <value>データを更新するために <see cref="T:System.Web.UI.WebControls.SqlDataSource" /> が使用する SQL 文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 は<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 、SQL クエリまたはストアドプロシージャの名前を表し、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>メソッドによって使用されます。  
  
 データベース製品ごとに使用する SQL が異なるため、SQL 文字列の構文は、現在使用している ADO.NET プロバイダーによって決まります。これは、<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> プロパティから識別できます。 SQL 文字列がパラメーター化されたクエリまたはコメントである場合は、パラメーターのプレースホルダーも現在使用している ADO.NET プロバイダーによって決まります。 たとえば、プロバイダーが<xref:System.Data.SqlClient?displayProperty=nameWithType>( <xref:System.Web.UI.WebControls.SqlDataSource>クラスの既定のプロバイダー) である場合、パラメーターのプレースホルダーは`'@parameterName'`になります。 ただし、プロバイダーが<xref:System.Data.Odbc?displayProperty=nameWithType>または<xref:System.Data.OleDb?displayProperty=nameWithType>に設定されている場合、パラメーターのプレースホルダー `'?'`はになります。 パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 データ<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>ソースがストアドプロシージャをサポートしている場合は、プロパティに SQL 文字列またはストアドプロシージャの名前を指定できます。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
> [!IMPORTANT]
>  セキュリティ上の理由から<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> 、プロパティは "ビューステート" として格納されていません。 クライアントでビューステートの内容をデコードできるため、データベース構造に関する機密情報をビューステートに格納すると、情報漏えいの脆弱性が生じる可能性があります。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、コントロールを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>使用して<xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.GridView> 、コントロールのプロパティを設定し、Microsoft SQL Server データベースのデータを更新する方法を示します。 2番目のコード例では、 <xref:System.Web.UI.WebControls.GridView>コントロールを使用して ODBC データベースのデータを更新する方法を示します。  
  
 次のコード例では、コントロールを<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>使用して<xref:System.Web.UI.WebControls.SqlDataSource> <xref:System.Web.UI.WebControls.GridView> 、コントロールのプロパティを設定し、SQL Server データベースのデータを更新する方法を示します。 は<xref:System.Web.UI.WebControls.GridView>自動的に<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクションを作成し、 <xref:System.Web.UI.WebControls.BoundField>オブジェクトからパラメーターを推論し、編集<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>可能<xref:System.Web.UI.WebControls.GridView>なの**更新**リンクが選択されたときにメソッドを呼び出します。 この例には、後処理も含まれています。レコードが更新されると、通知電子メールメッセージが送信されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/CS/sql7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7sql/VB/sql7vb.aspx#1)]  
  
 次のコード例は、前のコード例と機能的には同じですが、 <xref:System.Web.UI.WebControls.GridView>コントロールを使用して ODBC データベースのデータを更新する方法を示しています。 は ADO.NET provider for odbc <xref:System.Data.Odbc?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>に設定され、プロパティはodbcデータソース名(DSN)の名前に設定されます。<xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateCommandType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberSignature Language="VB.NET" Value="Public Property UpdateCommandType As SqlDataSourceCommandType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::SqlDataSourceCommandType UpdateCommandType { System::Web::UI::WebControls::SqlDataSourceCommandType get(); void set(System::Web::UI::WebControls::SqlDataSourceCommandType value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateCommandType : System.Web.UI.WebControls.SqlDataSourceCommandType with get, set" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateCommandType" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> プロパティのテキストが SQL ステートメントまたは格納されたプロシージャの名前のいずれであるかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.SqlDataSourceCommandType.Text" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommandType%2A>は、 <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A> コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けら<xref:System.Web.UI.WebControls.SqlDataSourceView>れているオブジェクトのプロパティにデリゲートします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceCommandType" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As SqlDataSourceStatusEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceStatusEventHandler ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " Usage="member this.Updated : System.Web.UI.WebControls.SqlDataSourceStatusEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceStatusEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作が完了したときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更新操作<xref:System.Web.UI.WebControls.SqlDataSource.Updated>が完了した後に、イベントを処理して出力パラメーターの値を確認します。 出力パラメーターは、イベントに関連<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>付けられているオブジェクトから使用できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.GridView>コントロールの ODBC データベースから取得されたデータを表示および更新する方法を示しています。 レコードが正常に更新されると<xref:System.Web.UI.WebControls.SqlDataSource.Updated> 、イベントはイベントハンドラーによって処理され、電子メール通知が送信される処理後の手順が実行されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/CS/odbc7cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_7odbc/VB/odbc7vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated(System.Web.UI.WebControls.SqlDataSourceStatusEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.ParameterCollectionEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" /> コントロールに関連付けられた <see cref="T:System.Web.UI.WebControls.SqlDataSourceView" /> コントロールから、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> プロパティで使用されるパラメーターを格納するパラメーター コレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.ParameterCollection" /> プロパティによって使用されるパラメーターを格納している <see cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティに<xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>パラメーター化された sql クエリが<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>含まれて<xref:System.Web.UI.WebControls.Parameter>いる場合、コレクションには、SQL 文字列のパラメータープレースホルダーに対応するすべてのオブジェクトが含まれます。  
  
 パラメーター名は、プロパティの<xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>影響を受ける可能性があります。特に、データバインドコントロールの`DataKeyNames`プロパティを使用して指定されたキーなどの主キーが名前によって識別<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>される場合、または、プロパティが<xref:System.Web.UI.ConflictOptions.CompareAllValues>値に設定され、の`oldValues`セットが対応するデータメソッドに渡されます。 この場合、書式文字列は`oldValues`コレクション内の各パラメーター名に適用されます。  
  
 ADO.NET プロバイダーによっては、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>コレクション内のパラメーターの順序が重要になる場合があります。 <xref:System.Data.OleDb?displayProperty=nameWithType> および<xref:System.Data.Odbc?displayProperty=nameWithType>プロバイダーは、パラメーター化された SQL クエリでパラメーターが表示される順序に従って、コレクション内のパラメーターを関連付けます。 プロバイダーは、 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールの既定の ADO.NET プロバイダーで、パラメーターの名前と SQL クエリのプレースホルダーエイリアスを照合することによって、コレクション内のパラメーターを関連付けます。 <xref:System.Data.SqlClient?displayProperty=nameWithType> パラメーター化された SQL クエリとコマンドの詳細については、「 [SqlDataSource コントロールでのパラメーターの使用](https://msdn.microsoft.com/library/403ff44a-dd0b-484d-968e-dcd1dcd4c295)」を参照してください。  
  
 プロパティ<xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>は<xref:System.Web.UI.WebControls.SqlDataSourceView> 、コントロール<xref:System.Web.UI.WebControls.SqlDataSource>に関連付けられているオブジェクトに含まれる<xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>プロパティを取得します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Filtering>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、コントロールを使用<xref:System.Web.UI.WebControls.SqlDataSource>して<xref:System.Web.UI.WebControls.DropDownList>コントロールにデータを表示し、**[送信]** ボタンがクリックされたときにデータを更新する方法を示しています。 パラメーター化された SQL ステートメントを使用し<xref:System.Web.UI.WebControls.ControlParameter>てを設定し、 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> 2 つのパラメーターをコレクションに追加します。 <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> **[送信]** ボタンをクリック<xref:System.Web.UI.WebControls.Button.OnClick%2A>すると、イベントが処理され、メソッドが<xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>明示的に呼び出されます。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。検証なしでパラメーターに値が挿入されます。これは、潜在的なセキュリティ上の脅威でもあります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/CS/sql8cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_8sql/VB/sql8vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateCommand" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.SqlDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As SqlDataSourceCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::SqlDataSourceCommandEventHandler ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " Usage="member this.Updating : System.Web.UI.WebControls.SqlDataSourceCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.SqlDataSourceCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新操作の前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを処理して、アプリケーションに固有の追加の初期化操作を実行したり、パラメーターの値を検証したり、コントロールが<xref:System.Web.UI.WebControls.SqlDataSource>更新操作を実行する前にパラメーター値を変更したりします。 <xref:System.Web.UI.WebControls.SqlDataSource.Updating> イベントハンドラーデリゲートが呼び出されても、基になるデータソースへの接続はまだ開いていません。 そのため、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>オブジェクトによって公開されている<xref:System.Data.Common.DbCommand.Cancel%2A> <xref:System.Data.Common.DbCommand>オブジェクトに対してメソッドを呼び出すことによって、データベース操作を直接取り消すことはできません。 ただし、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>のプロパティをに設定する`true`ことによって、データベース操作を取り消すことができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
> [!IMPORTANT]
>  値は、検証なしでパラメーターに挿入されます。これは、セキュリティ上の脅威となる可能性があります。 クエリを<xref:System.Web.UI.WebControls.SqlDataSource.Updating>実行する前に、イベントを使用してパラメーター値を検証してください。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.DropDownList>コントロールの Microsoft SQL Server データベースから取得されたデータを表示し、 <xref:System.Web.UI.WebControls.TextBox>コントロールを使用してレコードを更新する方法を示しています。 この例では、 <xref:System.Data.Common.DbTransaction> <xref:System.Web.UI.WebControls.SqlDataSource>コントロールを使用してデータを更新するときに、オブジェクトを使用してトランザクションコンテキストを追加する方法を示します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/CS/sql9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_9sql/VB/sql9vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating(System.Web.UI.WebControls.SqlDataSourceCommandEventArgs)" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSource.UpdateParameters" />
        <related type="Article" href="https://msdn.microsoft.com/library/f1685b00-09f3-46a4-ad74-2bea21d12863">データ ソース Web サーバー コントロール</related>
        <related type="Article" href="https://msdn.microsoft.com/library/34779c84-3512-49d9-8e6f-643aaae216ce">SqlDataSource Web サーバーコントロールの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフサイクルの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
