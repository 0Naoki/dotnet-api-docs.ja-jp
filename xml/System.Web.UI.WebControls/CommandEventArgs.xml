<Type Name="CommandEventArgs" FullName="System.Web.UI.WebControls.CommandEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="44adcecf87a42047459e1370e097b3e3ee54b167" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39990422" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class CommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type CommandEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see langword="Command" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `Command`イベントが発生したときに、<xref:System.Web.UI.WebControls.Button>または<xref:System.Web.UI.WebControls.ImageButton>コントロールがクリックされました。  
  
 <xref:System.Web.UI.WebControls.CommandEventArgs>オブジェクトに関するデータを格納する、`Command`可能性のあるイベントにアクセス イベントのハンドラー。 使用できるプロパティを使用して、<xref:System.Web.UI.WebControls.CommandEventArgs>クラスなどを実行するコマンドの名前を特定できます`Sort`、省略可能な引数など、コマンドを補完するだけでなく`Ascending`します。  
  
 インスタンスの初期プロパティ値の一覧については<xref:System.Web.UI.WebControls.CommandEventArgs>を参照してください、<xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>コンス トラクター。  
  
 イベントの処理についての詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)します。  
  
   
  
## Examples  
 次の例は、プロパティにアクセスする方法を示します<xref:System.Web.UI.WebControls.CommandEventArgs>を実行するコマンドを決定します。 この例を示すイベント ハンドラー宣言によってを使用して、<xref:System.Web.UI.WebControls.Button.OnClick%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロール。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 次のコード例は、イベント ハンドラーを指定してプログラムでのイベントに追加する方法を示します、`Page_Load`メソッド。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />。</param>
        <summary>他の <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> オブジェクトを指定して、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.CommandEventArgs>クラスを使用して、指定<xref:System.Web.UI.WebControls.CommandEventArgs>オブジェクト。  
  
 インスタンス<xref:System.Web.UI.WebControls.CommandEventArgs>作成は、このコンス トラクターを呼び出して、次のプロパティが指定された値に初期化されます。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|CommandName|`e.CommandName` パラメーター。|  
|CommandArgument|`e.CommandArgument` パラメーター。|  
  
   
  
## Examples  
 次の例では、作成しの新しいインスタンスを初期化する方法、<xref:System.Web.UI.WebControls.CommandEventArgs>クラスを使用して、指定<xref:System.Web.UI.WebControls.CommandEventArgs>オブジェクト。  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (string commandName, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandName, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandName As String, argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::String ^ commandName, System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : string * obj -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs (commandName, argument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandName">コマンドの名前。</param>
        <param name="argument">コマンドの引数を格納する <see cref="T:System.Object" />。</param>
        <summary>コマンド名および引数を指定して、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.CommandEventArgs>クラスの名前を指定したコマンドと引数を使用します。  
  
 インスタンス<xref:System.Web.UI.WebControls.CommandEventArgs>作成は、このコンス トラクターを呼び出して、次のプロパティが指定された値に初期化されます。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|CommandName|`commandName` パラメーターの値。|  
|CommandArgument|`argument` パラメーターの値。|  
  
   
  
## Examples  
 次の例では、作成しの新しいインスタンスを初期化する方法、<xref:System.Web.UI.WebControls.CommandEventArgs>クラスの名前を指定したコマンドと引数を使用します。  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドの引数を取得します。</summary>
        <value>コマンドの引数を格納する <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プログラマによって設定する任意の文字列を含めることができます。 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティを補完、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティによって、コマンドの追加情報を提供することができます。 たとえば、設定、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティを`Sort`設定と、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティを`Ascending`昇順で並べ替えるには、コマンドを指定します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティを実行するコマンドの補足情報を確認します。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド名を取得します。</summary>
        <value>実行するコマンドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティのコマンドを実行します。 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティは、プログラマによって設定する任意の文字列を含めることができます。 プログラマはコードでは、コマンド名を識別し、適切なタスクを実行します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティをプログラムで実行するコマンドを確認します。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
      </Docs>
    </Member>
  </Members>
</Type>