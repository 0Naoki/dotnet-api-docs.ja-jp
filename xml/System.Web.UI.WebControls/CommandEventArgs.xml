<Type Name="CommandEventArgs" FullName="System.Web.UI.WebControls.CommandEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="6b0be4890f6a8e5819813e6f7766f62df871757e" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69393495" /></Metadata><TypeSignature Language="C#" Value="public class CommandEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CommandEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CommandEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class CommandEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class CommandEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type CommandEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see langword="Command" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント`Command`は、コントロール<xref:System.Web.UI.WebControls.Button>または<xref:System.Web.UI.WebControls.ImageButton>コントロールがクリックされたときに発生します。  
  
 オブジェクト<xref:System.Web.UI.WebControls.CommandEventArgs>には、イベントハンドラー `Command`でアクセスできるイベントに関するデータが含まれています。 <xref:System.Web.UI.WebControls.CommandEventArgs>クラスで使用できるプロパティを使用して、などのコマンド`Ascending`を補完するオプションの引数に加え`Sort`て、実行するコマンドの名前を指定できます。  
  
 の<xref:System.Web.UI.WebControls.CommandEventArgs>インスタンスの初期プロパティ値の一覧につい<xref:System.Web.UI.WebControls.CommandEventArgs.%23ctor%2A>ては、コンストラクターを参照してください。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、の<xref:System.Web.UI.WebControls.CommandEventArgs>プロパティにアクセスして、実行するコマンドを決定する方法を示します。 この例では、 <xref:System.Web.UI.WebControls.Button.OnClick%2A> <xref:System.Web.UI.WebControls.Button>コントロールのプロパティを使用して、イベントハンドラーを宣言によって指定します。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 イベントハンドラーを指定し、 `Page_Load`メソッドのイベントにプログラムで追加する方法を次のコード例に示します。  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
    <altmember cref="E:System.Web.UI.WebControls.ImageButton.Command" />
    <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">ボタン Web サーバーコントロールの概要</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : System.Web.UI.WebControls.CommandEventArgs -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.CommandEventArgs" />。</param>
        <summary>他の <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> オブジェクトを指定して、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、指定された<xref:System.Web.UI.WebControls.CommandEventArgs> <xref:System.Web.UI.WebControls.CommandEventArgs>オブジェクトを使用して、クラスの新しいインスタンスを作成および初期化します。  
  
 このコンストラクターの呼び出し<xref:System.Web.UI.WebControls.CommandEventArgs>によってのインスタンスが作成されると、次のプロパティが指定された値に初期化されます。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|CommandName|`e.CommandName` パラメーター。|  
|CommandArgument|`e.CommandArgument` パラメーター。|  
  
   
  
## Examples  
 次の例では、指定された<xref:System.Web.UI.WebControls.CommandEventArgs> <xref:System.Web.UI.WebControls.CommandEventArgs>オブジェクトを使用して、クラスの新しいインスタンスを作成し、初期化する方法を示します。  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">ボタン Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CommandEventArgs (string commandName, object argument);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string commandName, object argument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CommandEventArgs.#ctor(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (commandName As String, argument As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CommandEventArgs(System::String ^ commandName, System::Object ^ argument);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.CommandEventArgs : string * obj -&gt; System.Web.UI.WebControls.CommandEventArgs" Usage="new System.Web.UI.WebControls.CommandEventArgs (commandName, argument)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="commandName" Type="System.String" />
        <Parameter Name="argument" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="commandName">コマンドの名前。</param>
        <param name="argument">コマンドの引数を格納する <see cref="T:System.Object" />。</param>
        <summary>コマンド名および引数を指定して、<see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、指定したコマンド名<xref:System.Web.UI.WebControls.CommandEventArgs>と引数を使用して、クラスの新しいインスタンスを作成し、初期化します。  
  
 このコンストラクターの呼び出し<xref:System.Web.UI.WebControls.CommandEventArgs>によってのインスタンスが作成されると、次のプロパティが指定された値に初期化されます。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|CommandName|`commandName` パラメーターの値。|  
|CommandArgument|`argument` パラメーターの値。|  
  
   
  
## Examples  
 次の例では、指定されたコマンド名と引数<xref:System.Web.UI.WebControls.CommandEventArgs>を使用して、クラスの新しいインスタンスを作成し、初期化する方法を示します。  
  
 [!code-csharp[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/CS/source.cs#1)]
 [!code-vb[Classic CommandEventArgs.CommandEventArgs1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic CommandEventArgs.CommandEventArgs1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">ボタン Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public object CommandArgument { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandArgument As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ CommandArgument { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandArgument : obj" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンドの引数を取得します。</summary>
        <value>コマンドの引数を格納する <see cref="T:System.Object" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 に<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>は、プログラマが設定した任意の文字列を含めることができます。 プロパティは、コマンド<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>に関する追加情報を提供できるようにすることで、プロパティを補完します。 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> たとえば、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティをに`Sort`設定し、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティをに`Ascending`設定すると、昇順で並べ替えるコマンドを指定できます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティを使用して、実行するコマンドの補足情報を決定する方法を示しています。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandArgument" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">ボタン Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandName : string" Usage="System.Web.UI.WebControls.CommandEventArgs.CommandName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コマンド名を取得します。</summary>
        <value>実行するコマンドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 実行する<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>コマンドを決定するには、プロパティを使用します。 プロパティ<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>には、プログラマが設定した任意の文字列を含めることができます。 プログラマは、コード内でコマンド名を特定し、適切なタスクを実行できます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>プロパティを使用して、実行するコマンドをプログラムで決定する方法を示しています。  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.ImageButton.CommandName" />
        <related type="Article" href="https://msdn.microsoft.com/library/66b3ce28-3b93-4f0a-951f-42fb5bb5fddf">ボタン Web サーバーコントロールの概要</related>
      </Docs>
    </Member>
  </Members>
</Type>
