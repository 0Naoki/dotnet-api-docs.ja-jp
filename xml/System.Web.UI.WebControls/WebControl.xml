<Type Name="WebControl" FullName="System.Web.UI.WebControls.WebControl">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c068abc06cbfefbd74eb3920d0b820aca7672b3b" /><Meta Name="ms.sourcegitcommit" Value="0e1f030650a307c745ee84ed547ef858acaea587" /><Meta Name="ms.translationtype" Value="HT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/29/2018" /><Meta Name="ms.locfileid" Value="52603687" /></Metadata><TypeSignature Language="C#" Value="public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit WebControl extends System.Web.UI.Control implements class System.Web.UI.IAttributeAccessor" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="VB.NET" Value="Public Class WebControl&#xA;Inherits Control&#xA;Implements IAttributeAccessor" />
  <TypeSignature Language="C++ CLI" Value="public ref class WebControl : System::Web::UI::Control, System::Web::UI::IAttributeAccessor" />
  <TypeSignature Language="F#" Value="type WebControl = class&#xA;    inherit Control&#xA;    interface IAttributeAccessor" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IAttributeAccessor</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.Themeable(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><see cref="N:System.Web.UI.WebControls" /> 名前空間のすべてのコントロールに共通するメソッド、プロパティ、およびイベントを定義する基本クラスとして機能します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl>クラスには、プロパティ、メソッド、およびすべての Web サーバー コントロールに共通するイベントが用意されています。 このクラスで定義されたプロパティを設定して、Web サーバー コントロールの動作と外観を制御できます。 使用して、コントロールのフォントの色と背景色を制御するなど、<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>と<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>プロパティでは、それぞれします。 罫線を表示できるコントロールに制御できます境界線の幅、罫線のスタイル、および境界線の色を設定して、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>、および<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティ。 使用して Web サーバー コントロールのサイズを指定することができます、<xref:System.Web.UI.WebControls.WebControl.Height%2A>と<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティ。  
  
 コントロールの動作は、特定のプロパティを設定して指定できます。 有効にし、設定して、コントロールを無効にすることができます、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ。 タブ オーダーでコントロールの配置は設定によって制御されます、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティ。 コントロールのツールヒントを指定するを設定、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>プロパティ。  
  
> [!NOTE]
>  このクラスで定義されているすべてのプロパティをサポートしないコントロール。 プロパティがサポートされているかどうかについては、特定のコントロールのドキュメントを参照してください。  
  
> [!NOTE]
>  このクラスの一部のプロパティは、ブラウザーによって異なる方法でレンダリングします。 表示するには、他のユーザーがある影響しない中にいくつかのプロパティは、まったく表示されません。 <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>のプロパティ、<xref:System.Web.HttpBrowserCapabilities>オブジェクトは、Web サーバー コントロールのレンダリング方法を決定します。 HTML 4.0 をサポートするブラウザーの<xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>プロパティには、通常<xref:System.Web.HttpBrowserCapabilities>HTML 4.0 のスタイル属性を使用して、オブジェクト、およびほとんどのプロパティがレンダリングされます。 HTML 4.0 のサポートに認識されていないブラウザーを使用して、<xref:System.Web.UI.Html32TextWriter>オブジェクト。 スタイル属性を関連する HTML 3.2 のタグ属性これに自動的にマップされます。 場合によってなどの<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>プロパティ、スタイル属性に変換する追加のタグなど`<font>`タグ。 場合によってがありますいないマッピングを実行します。 さまざまなブラウザーでプロパティを表示する方法の詳細については、特定のプロパティのドキュメントを参照してください。  
  
 インスタンスの初期プロパティ値の一覧については<xref:System.Web.UI.WebControls.WebControl>を参照してください、<xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>コンス トラクター。  
  
   
  
## Examples  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Height" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Width" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.TabIndex" />
    <altmember cref="P:System.Web.UI.WebControls.WebControl.ToolTip" />
    <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
    <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see langword="Span" /> HTML タグを表す <see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターはの新しいインスタンスを初期化するために使用される、<xref:System.Web.UI.WebControls.WebControl>を表すクラス、 `Span` HTML 要素。  
  
 次の表には、インスタンスのプロパティの初期値が表示されます。<xref:System.Web.UI.WebControls.WebControl>します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Span> 列挙型値。|  
  
> [!NOTE]
>  このコンス トラクターが直接呼び出されません。 初期化するために派生クラスのコンス トラクターによって呼び出されます多くの場合、代わりに、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>プロパティを<xref:System.Web.UI.HtmlTextWriterTag.Span>列挙値。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected WebControl (string tag);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(string tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (tag As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; WebControl(System::String ^ tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : string -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="tag" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="tag">HTML タグ。</param>
        <summary>指定した HTML タグを使用して、<see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.WebControl>クラスの指定された HTML タグを使用します。  
  
 次の表のインスタンスの初期プロパティ値<xref:System.Web.UI.WebControls.WebControl>します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag.Unknown> 列挙型値。|  
|`TagName`|`tag` パラメーターの値。|  
  
> [!NOTE]
>  このコンス トラクターが直接呼び出されません。 初期化するために派生クラスのコンス トラクターによって呼び出されます多くの場合、代わりに、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>と<xref:System.Web.UI.WebControls.WebControl.TagName%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagName" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public WebControl (System.Web.UI.HtmlTextWriterTag tag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.Web.UI.HtmlTextWriterTag tag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (tag As HtmlTextWriterTag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; WebControl(System::Web::UI::HtmlTextWriterTag tag);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.WebControl : System.Web.UI.HtmlTextWriterTag -&gt; System.Web.UI.WebControls.WebControl" Usage="new System.Web.UI.WebControls.WebControl tag" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="tag" Type="System.Web.UI.HtmlTextWriterTag" />
      </Parameters>
      <Docs>
        <param name="tag"><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値のいずれか 1 つ。</param>
        <summary>指定した HTML タグを使用して、<see cref="T:System.Web.UI.WebControls.WebControl" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.WebControl>クラスを使用して、指定<xref:System.Web.UI.HtmlTextWriterTag?displayProperty=nameWithType>値。  
  
 次の表には、インスタンスのプロパティの初期値が表示されます。<xref:System.Web.UI.WebControls.WebControl>します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|`TagKey`|<xref:System.Web.UI.HtmlTextWriterTag>によって指定された列挙値、`tag`パラメーター。|  
  
   
  
## Examples  
 次の例のコンス トラクターを使用する方法を示します、<xref:System.Web.UI.WebControls.WebControl>クラスを作成する、 `TextArea` HTML 要素と、Web フォーム ページ上に表示します。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx ファイル名拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[Classic WebControl.WebControl Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.WebControl Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.WebControl Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.WebControl Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="AccessKey">
      <MemberSignature Language="C#" Value="public virtual string AccessKey { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string AccessKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AccessKey As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ AccessKey { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.AccessKey : string with get, set" Usage="System.Web.UI.WebControls.WebControl.AccessKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールにすばやく移動できるアクセス キーを取得または設定します。</summary>
        <value>Web サーバー コントロールにすばやく移動できるアクセス キー。 既定値は <see cref="F:System.String.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> Web サーバー コントロールのキーボード ショートカットを指定するプロパティ。 これにより、キーボードの ALT キーと指定した文字のキーを押して、コントロールにすばやく移動することができます。 たとえば、コントロールのアクセス キーを文字列に設定`"D"`ALT + D を押すことで、ユーザーがコントロールに移動できることを示します。  
  
 1 つの文字列のみが許可されている、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>プロパティ。 このプロパティはどちらも値を設定しようとした場合`null`、<xref:System.String.Empty>も 1 つの文字の文字列では、例外がスローされます。  
  
> [!NOTE]
>  このプロパティは、以降 Internet Explorer 4.0 でのみサポートします。  
  
   
  
## Examples  
 次の例は、設定および使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>のプロパティを<xref:System.Web.UI.WebControls.TextBox>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[Classic WebControl.AccessKey Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.AccessKey Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.AccessKey Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたアクセス キーが <see langword="null" />、<see cref="F:System.String.Empty" />、または単一の文字列のいずれでもありません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriterTag" /> に表示する必要のある HTML 属性およびスタイルを追加します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 呼び出す通常のクライアントで Web サーバー コントロールの属性およびスタイルをレンダリングする、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>それぞれを挿入するメソッドの属性およびスタイルを個別に、<xref:System.Web.UI.HtmlTextWriter>出力ストリーム。 プロセスを簡略化するのには、このメソッドは、すべての呼び出しをカプセル化します、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>のすべての属性と、Web サーバー コントロールに関連付けられたスタイル。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter> 1 つのメソッドの呼び出しでストリームを出力します。 このメソッドが適切な属性を挿入する派生クラスでコントロールの開発者によって通常オーバーライドされ、にスタイル、<xref:System.Web.UI.HtmlTextWriter>クラスの出力ストリーム。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>クライアント スクリプトを挿入するメソッドを使用することはできません。 クライアント スクリプトを使用して、次を参照してください。、<xref:System.Web.UI.ClientScriptManager>クラス。  
  
   
  
## Examples  
 次の例から派生したクラスを作成する方法、<xref:System.Web.UI.WebControls.WebControl>クラス。 基本実装、<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>メソッドをオーバーライドして派生クラスに適切な属性を追加する、<xref:System.Web.UI.HtmlTextWriter>出力ストリーム。  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddAttribute" />
        <altmember cref="Overload:System.Web.UI.HtmlTextWriter.AddStyleAttribute" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ApplyStyle">
      <MemberSignature Language="C#" Value="public void ApplyStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ApplyStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ApplyStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ApplyStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.ApplyStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.ApplyStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">コピーされるスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定したスタイルの空白以外の要素を Web コントロールにコピーして、コントロールの既存のスタイル要素を上書きします。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>スタイルを適用するメソッド、<xref:System.Web.UI.WebControls.DataGrid>コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[WebControlApplyStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlApplyStyle/CS/webcontrolapplystylecs.aspx#1)]
 [!code-aspx-vb[WebControlApplyStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlApplyStyle/VB/webcontrolapplystylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Attributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.AttributeCollection Attributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.AttributeCollection Attributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Attributes As AttributeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::AttributeCollection ^ Attributes { System::Web::UI::AttributeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Attributes : System.Web.UI.AttributeCollection" Usage="System.Web.UI.WebControls.WebControl.Attributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.AttributeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのプロパティに対応しない任意の属性 (表示専用) のコレクションを取得します。</summary>
        <value>名前と値の組み合わせの <see cref="T:System.Web.UI.AttributeCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>コレクションには、Web サーバー コントロールの開始タグで宣言されたすべての属性のコレクションが含まれています。 これにより、Web サーバー コントロールに関連付けられている属性をプログラムで制御することができます。 コレクションに属性を追加したり、コレクションから属性を削除することができます。  
  
> [!NOTE]
>  このプロパティは、ブラウザーの設定に関係なく、コントロールの開始タグのコレクション内のすべての属性で表示されます。 すべてのブラウザーでは、表示されるすべての属性をサポートします。 サポートされていない属性は、ブラウザーによって、通常は無視されます。  
  
> [!NOTE]
>  クライアント側スクリプトを追加することはできません、<xref:System.Web.UI.WebControls.WebControl>インスタンスを使用して、<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>コレクション。 クライアント側スクリプトを追加するには、使用、<xref:System.Web.UI.Page.ClientScript%2A>プロパティを<xref:System.Web.UI.Page>コントロール。  
  
   
  
## Examples  
 例を次に示す方法、<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>のプロパティを<xref:System.Web.UI.WebControls.WebControl>、JavaScript の実行に使用できるコマンドの場合に、<xref:System.Web.UI.WebControls.TextBox>コントロールがフォーカスを失った。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[Classic WebControl.Attributes Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Attributes Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Attributes Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Attributes Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.AttributeCollection" />
        <altmember cref="T:System.Web.UI.ClientScriptManager" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BackColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BackColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの背景色を取得または設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>プロパティを Web サーバー コントロールの背景色を指定します。 使用してこのプロパティを設定、<xref:System.Drawing.Color?displayProperty=nameWithType>オブジェクト。  
  
> [!NOTE]
>  このプロパティは、特定のコントロールに表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>このプロパティを表示します。 適して<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>場合その`RepeatLayout`プロパティは`RepeatLayout.Table`ではなく、`RepeatLayout.Flow`します。  
  
 一般に、その出力を制御するだけ、`<table>`タグは、ほぼすべてのコントロールが HTML 4.0 でことができますに、HTML 3.2 での背景色を表示できます。  
  
 としてレンダリングされるコントロールの`<span>`タグ (など<xref:System.Web.UI.WebControls.Label>、すべての検証コントロール、およびリスト コントロールで、`RepeatLayout`プロパティに設定`RepeatLayout.Flow`)、このプロパティは Microsoft Internet Explorer 5 以降のバージョンでは動作Microsoft Internet explorer version 4。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>コントロールから継承される、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.BackColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BackColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BackColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BackColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.BorderColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web コントロールの境界線の色を取得または設定します。</summary>
        <value>コントロールの境界線の色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティを Web サーバー コントロールの境界線の色を指定します。 使用してこのプロパティを設定、<xref:System.Drawing.Color>オブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティが特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>コントロールは、このプロパティが表示されます。 動作しますが、 <xref:System.Web.UI.WebControls.CheckBoxList>、 <xref:System.Web.UI.WebControls.RadioButtonList>、および<xref:System.Web.UI.WebControls.DataList>されている場合、制御、`RepeatLayout`プロパティに設定されて`RepeatLayout.Table`ではなく、`RepeatLayout.Flow`します。 ただし、として表示される、`bordercolor`属性には、標準の HTML 3.2 の一部ではありません。 `bordercolor`属性は、Microsoft Internet Explorer バージョン 3.0 以降は他のほとんどのブラウザー機能します。  
  
 ときに、<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティが設定されていないと、ブラウザーは既定の境界線の色を使用します。 既定の配色を判断するのには、ブラウザーを参照してください。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>コントロールから継承される、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.BorderColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderColor Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberSignature Language="F#" Value="member this.BorderStyle : System.Web.UI.WebControls.BorderStyle with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線スタイルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> Web サーバー コントロールの境界線スタイルを指定するプロパティ。 このプロパティを設定のいずれかを使用して、<xref:System.Web.UI.WebControls.BorderStyle>列挙値。 次の表では、使用可能な値を示します。  
  
|枠線の種類|説明|  
|------------------|-----------------|  
|`NotSet`|罫線のスタイルが設定されていません。|  
|`None`|境界線なし|  
|`Dotted`|点線の境界線。|  
|`Dashed`|破線の境界線。|  
|`Solid`|実線の境界線。|  
|`Double`|二重実線の境界線。|  
|`Groove`|境界線をくぼみ表示にするための下降側の境界線。|  
|`Ridge`|境界線を浮き出して表示するための上昇側の境界線。|  
|`Inset`|コントロールをくぼんで表示するためのくぼみ表示の境界線。|  
|`Outset`|コントロールを浮き出して表示するためのアウトセット境界線。|  
  
> [!NOTE]
>  このプロパティは、任意の Web サーバー コントロール用の Microsoft Internet Explorer 4 より前のブラウザーでは表示されません。 HTML 3.2 でに相当するものはありません。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>コントロールから継承される、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.BorderStyle Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderStyle Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderStyle Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.BorderWidth : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.BorderWidth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線の幅を取得または設定します。</summary>
        <value>Web サーバー コントロールの境界線の幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティ、コントロールの境界線の幅を指定します。  
  
> [!NOTE]
>  このプロパティは、すべての Web サーバー コントロールでは機能しません。 など、テーブルとして表示するコントロールにのみ適用<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>します。  
  
 このプロパティは、<xref:System.Web.UI.WebControls.Unit>オブジェクト。 場合、<xref:System.Web.UI.WebControls.Unit.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.Unit>負の数値を含む、例外がスローされます。  
  
> [!NOTE]
>  境界線の幅は、Microsoft Internet Explorer バージョン 5 より前のブラウザーのピクセル単位でのみ表現できます。 すべてのユニットの種類は、Microsoft Internet Explorer 5 以降のバージョンでサポートされます。 詳細については、特定のコントロールを参照してください。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>から継承されたコントロール、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.BorderWidth Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.BorderWidth Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.BorderWidth Example/VB/sourcevb.aspx#1)]  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#1)]  
[!code-aspx-csharp[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/CS/borderpropertiescs.aspx#3)]
[!code-aspx-vb[System.Web.UI.WebControl.BorderProperties#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControl.BorderProperties/VB/borderpropertiesvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定した境界線の幅が負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style ControlStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style ControlStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ ControlStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.WebControl.ControlStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールのスタイルを取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>Web サーバー コントロールの外観プロパティをカプセル化する <see cref="T:System.Web.UI.WebControls.Style" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>プロパティのすべてのプロパティをカプセル化、<xref:System.Web.UI.WebControls.WebControl>など、コントロールの外観を指定するクラスを<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>と<xref:System.Web.UI.WebControls.WebControl.Font%2A>します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ControlStyleCreated">
      <MemberSignature Language="C#" Value="public bool ControlStyleCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ControlStyleCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ControlStyleCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ControlStyleCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.ControlStyleCreated : bool" Usage="System.Web.UI.WebControls.WebControl.ControlStyleCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.EditorBrowsable</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトが <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> プロパティに対して作成されたかどうかを示す値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value><see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトが <see cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" /> プロパティに対して作成された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CopyBaseAttributes">
      <MemberSignature Language="C#" Value="public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyBaseAttributes(class System.Web.UI.WebControls.WebControl controlSrc) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyBaseAttributes (controlSrc As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyBaseAttributes(System::Web::UI::WebControls::WebControl ^ controlSrc);" />
      <MemberSignature Language="F#" Value="member this.CopyBaseAttributes : System.Web.UI.WebControls.WebControl -&gt; unit" Usage="webControl.CopyBaseAttributes controlSrc" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlSrc" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="controlSrc">このメソッドの呼び出し元の Web サーバー コントロールにコピーされるプロパティを持つコピー元のコントロールを表す <see cref="T:System.Web.UI.WebControls.WebControl" />。</param>
        <summary>指定した Web サーバー コントロールから、<see cref="P:System.Web.UI.WebControls.WebControl.Style" /> オブジェクトでカプセル化されていないプロパティをこのメソッドの呼び出し元の Web サーバー コントロールにコピーします。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.CopyBaseAttributes%2A>メソッドのコピー、 <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>、 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>、 <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>、 <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>、および<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>からこのメソッドが呼び出される Web サーバー コントロールに指定された Web サーバー コントロールからプロパティ。 これは、Web サーバー コントロールは表示され、コントロールを使用するときに、新しいコントロールを動的に作成することによってを機能の場合によく使用します。 によってカプセル化されていない Web サーバー コントロールのすべてのプロパティをコピーするため、このメソッドはこのような状況で役に立ちます、<xref:System.Web.UI.WebControls.Style>オブジェクトのレンダリングされているタグの最も外側のコントロールに配置できるようにします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="controlSrc" /> は <see langword="null" /> です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="abstract member CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style&#xA;override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="webControl.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WebControl" /> クラスで、すべてのスタイル関連プロパティを実装するために内部的に使用されるスタイル オブジェクトを作成します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <returns>コントロールのすべてのスタイル関連プロパティを実装するために使用される <see cref="T:System.Web.UI.WebControls.Style" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.CreateControlStyle%2A>スタイルを作成するメソッドが使用されるすべてのスタイルを実装するために内部的に使用されるオブジェクトに関連するプロパティ。 派生クラスでは、クラスに適切なスタイルを作成するには、このメソッドをオーバーライドできます。 このメソッドは、主にコントロールの開発者によって使用されます。  
  
 **注**コントロールの開発者が返す必要があります、<xref:System.Web.UI.WebControls.Style>から派生した、<xref:System.Web.UI.WebControls.Style>基本コントロールを返す。 できないと想定できることを<xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>が特定スタイル型から派生したコントロールが別の型を返す可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.ControlStyle" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public virtual string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.CssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントで Web サーバー コントロールによって表示されるカスケード スタイル シート (CSS: Cascading Style Sheet) クラスを取得または設定します。</summary>
        <value>クライアントで Web サーバー コントロールによって表示される CSS クラス。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> Web サーバー コントロールのクライアントで表示するために CSS クラスを指定するプロパティ。 このプロパティは、すべてのコントロールのブラウザーで表示されます。 クラスの属性で、ブラウザーに関係なく常に表示されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 たとえば、次の Web サーバー コントロール宣言があるとします。  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 以前の Web サーバー コントロール宣言用のクライアントで、次の HTML にレンダリングされます。  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
 コントロールの外観をカスタマイズするカスケード スタイル シート (CSS) を使用する場合は、インライン スタイルまたは個別の CSS ファイルの両方ではなくいずれかを使用します。 インライン スタイルと独立した CSS ファイルの両方を使用して予期しない結果が発生する可能性があります。  
  
> [!NOTE]
>  CSS、設定をサポートしていないブラウザーで、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティには効果はありません。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>のスタイルを変更するプロパティを<xref:System.Web.UI.WebControls.HyperLink>コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[Classic WebControl.CssClass Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.CssClass Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.CssClass Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.CssClass Example/VB/sourcevb.aspx#1)]
 [!code-xml[Classic WebControl.CssClass Example#1](~/samples/snippets/common/VS_Snippets_WebNet/Classic WebControl.CssClass Example/Common/source.xml#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="DisabledCssClass">
      <MemberSignature Language="C#" Value="public static string DisabledCssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property string DisabledCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property DisabledCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property System::String ^ DisabledCssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DisabledCssClass : string with get, set" Usage="System.Web.UI.WebControls.WebControl.DisabledCssClass" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが無効の場合に、レンダリングされた HTML 要素に適用される CSS クラスを取得または設定します。</summary>
        <value>コントロールが無効の場合に、レンダリングされた HTML 要素に適用される CSS クラス。 既定値は "aspNetDisabled" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示される名前を変更するこのプロパティを使用できます、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>個々 の Web コントロールのプロパティ。 既定では、このプロパティは"aspNetDisabled"を返します。  
  
 ときに<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>が返される派生クラスでオーバーライド`false`の値、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>プロパティは、の値として表示される、`class`コントロールの HTML 要素の属性です。 その場合、値がある場合、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティ、両方の CSS クラスは、レンダリングされた HTML 要素に適用されます。 `class`属性の値では、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>プロパティ値の後に、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>スペースで区切られたプロパティ。  
  
 このプロパティは静的でのみに設定できることを意味する、<xref:System.Web.UI.WebControls.WebControl>クラス。 設定すると、どのような値は、Web アプリケーションのすべてのコントロールに使用されます。 個々 のコントロールに別の値を指定することはできません。  
  
 通常でコードを配置する"aspNetDisabled"の既定値から別のクラス名を使用する場合、`Application_Start`次の例に示すように、Global.asax ファイルのメソッド。  
  
```vb  
Private Sub Application_Start(  
    ByVal sender As Object, ByVal e As EventArgs)  
    WebControl.DisabledCssClass = "customDisabledClassName"  
End Sub  
```  
  
```csharp  
void Application_Start(object sender, EventArgs e)  
{  
    WebControl.DisabledCssClass = "customDisabledClassName";  
}  
```  
  
   
  
## Examples  
 次の例では、レンダリングされる HTML を無効にするに<xref:System.Web.UI.WebControls.Label>タイミングを制御、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>プロパティは`false`ときに、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>プロパティがその既定値とタイミング、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティが空です。  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 いる点を除き、次の例は、同じ条件下でレンダリングされる HTML、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティの値"SampleStyle"`:`  
  
 `<span id="Label1" class="aspNetDisabled SampleStyle">Test</span>`  
  
 詳細については、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="Enabled">
      <MemberSignature Language="C#" Value="public virtual bool Enabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Enabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Enabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Enabled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Enabled : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.Enabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールを有効にするかどうかを示す値を取得または設定します。</summary>
        <value>コントロールを有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>コントロールのプロパティに設定されて`false`コントロールが通常淡色表示されます。 コントロールが入力の要素の場合、ブラウザーには、ユーザーがクリックしてまたは入力ができないようにします。 サーバー コントロールにレンダリングされる HTML 要素が無効のマークを設定して、`disabled`属性またはその CSS`class`属性。 詳細については、次のトピックを参照してください。 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> および <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 このプロパティは、コントロール階層を伝達します。 コンテナー コントロールを無効にした場合、そのコンテナー内の子コントロールも無効にします。 詳細については、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> プロパティを参照してください。  
  
> [!NOTE]
>  カスタムの複合コントロールでこの継承動作は、子コントロールが作成されていないコントロールには適用されません。 設定するか、子の有効状態コントロールを作成または上書きしたとき、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを呼び出し、<xref:System.Web.UI.Control.EnsureChildControls%2A>メソッド。  
  
> [!NOTE]
>  コントロールを無効にすると、ブラウザー UI を介して、ユーザーがコントロールとの対話のみできないようにします。 ユーザーがページ上のコントロールが無効になっている場合でも、ページが処理されるポストバックを送信する要求を作成することができます。 ポストバック要求を処理する前に、コントロールが有効になっている、参照可能であることを確認します。  
  
 すべてのコントロールは、このプロパティをサポートします。 詳細については、個々 のコントロールを参照してください。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)します。  
  
   
  
## Examples  
 次の例では、有効または無効にする方法を示しています、<xref:System.Web.UI.WebControls.TextBox>から継承されたコントロール、<xref:System.Web.UI.WebControls.WebControl>基本クラスを設定してその<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ プログラムを使用します。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[Classic WebControl.Enabled Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Enabled Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Enabled Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Enabled Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.EnsureChildControls" />
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableTheming : bool with get, set" Usage="System.Web.UI.WebControls.WebControl.EnableTheming" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>テーマがこのコントロールに適用されるかどうかを示す値を取得または設定します。</summary>
        <value>テーマを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>プロパティは、指定したコントロールのテーマが有効かどうかを示します。 ときに、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>プロパティは`true`、コントロール スキンを適用するアプリケーションのテーマのディレクトリが検索されます。 テーマのディレクトリで特定のコントロールのスキンが存在しない場合、スキンは適用されません。  
  
 ときに、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>プロパティは`false`、テーマのディレクトリは検索されませんの内容と、<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>プロパティは使用されません。  
  
 オーバーライドする、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>値の親コントロールまたは格納されているページで設定します。 たとえば、親コントロールがある場合、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>プロパティに設定`false`、選択的に設定して、親内に含まれる子コントロールにテーマを適用することができます、<xref:System.Web.UI.WebControls.WebControl.EnableTheming%2A>プロパティを`true`個々 の子でコントロール。  
  
 テーマは、ページ、コンテナー、または制御レベルで有効にすることができます。 テーマは、ページまたはコンテナー レベルで無効になっている、ページまたはコンテナーに含まれるすべてのコントロールのテーマが無効です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableTheming" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SkinID" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3(v=vs.100)">ASP.NET のテーマの概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Font" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Font : System.Web.UI.WebControls.FontInfo" Usage="System.Web.UI.WebControls.WebControl.Font" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールに関連付けられたフォント プロパティを取得します。</summary>
        <value>Web サーバー コントロールのフォント プロパティを表す <see cref="T:System.Web.UI.WebControls.FontInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.Font%2A>プロパティを Web サーバー コントロールのフォント プロパティを指定します。 このプロパティが含まれていますサブプロパティ アクセス可能なには宣言の形式で`Property-Subproperty`(たとえば`Font-Bold`) またはの形式でプログラムによって`Property.Subproperty`(たとえば`Font.Bold`)。  
  
 ただし、1 つのサブプロパティは、Microsoft Internet Explorer のすべてのコントロール、version 4 より前のブラウザーでレンダリングされます。 : <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Name%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Names%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>、および<xref:System.Web.UI.WebControls.FontInfo.Size%2A>(名前のみ、フォント サイズをなどは`Small`、`Smaller`これには動作)。  
  
> [!NOTE]
>  これらのサブプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーでレンダリング、レンダリングされる HTML が以降のブラウザーによって異なります。 スタイル属性としてレンダリングでは、代わりにこれらのサブプロパティとしてレンダリングされます、HTML 要素など`<b>`と`<font>`します。  
  
 すべてのコントロールの以前のブラウザーで表示されない 1 つのサブプロパティは<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>します。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.Font%2A>プロパティからフォント情報を収集するために、<xref:System.Web.UI.WebControls.Label>コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[Classic WebControl.Font Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Font Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Font Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Font Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public virtual System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberSignature Language="F#" Value="member this.ForeColor : System.Drawing.Color with get, set" Usage="System.Web.UI.WebControls.WebControl.ForeColor" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの前景色 (通常はテキストの色) を取得または設定します。</summary>
        <value>コントロールの前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> Web サーバー コントロールの前景色を指定するプロパティ。 通常、前景色はテキストの色を表します。 このプロパティはブラウザーに表示 Microsoft Internet Explorer のすべてのコントロール、version 4 より前を除く、 <xref:System.Web.UI.WebControls.Image>、 <xref:System.Web.UI.WebControls.AdRotator>、<xref:System.Web.UI.WebControls.HyperLink>と<xref:System.Web.UI.WebControls.LinkButton>します。  
  
> [!NOTE]
>  Microsoft Internet Explorer バージョン 4 より前のブラウザーでは、このプロパティとしてレンダリング`<font>`タグ。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>から継承されたコントロール、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.ForeColor Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ForeColor Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ForeColor Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Drawing.Color" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="HasAttributes">
      <MemberSignature Language="C#" Value="public bool HasAttributes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasAttributes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasAttributes As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasAttributes { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasAttributes : bool" Usage="System.Web.UI.WebControls.WebControl.HasAttributes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに属性セットがあるかどうかを示す値を取得します。</summary>
        <value>コントロールに属性セットがある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.HasAttributes%2A>プロパティが返す`true`ときに、<xref:System.Web.UI.WebControls.WebControl>インスタンスが属性の名前/値ペア。 属性のペアは、プロパティにするか、ビュー ステートに設定できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Height" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Height : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Height" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの高さを取得または設定します。</summary>
        <value>コントロールの高さを表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は、<see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.Height%2A>プロパティを Web サーバー コントロールの高さを指定します。  
  
> [!NOTE]
>  このプロパティは Microsoft Internet Explorer version 4 より前のブラウザーですべてのコントロールは表示されません。 以前のブラウザーでこのプロパティにレンダリングされないコントロールには、 <xref:System.Web.UI.WebControls.Label>、 <xref:System.Web.UI.WebControls.HyperLink>、 <xref:System.Web.UI.WebControls.LinkButton>、および検証コントロール。 <xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>も以前のブラウザーでこのプロパティにレンダリングされないときに、`RepeatLayout`プロパティに設定されて`RepeatLayout.Flow`します。 さらに、ユニットの種類のみの`Pixel`と`Percentage`以前のブラウザーでサポートされています。  
  
 このプロパティは、非標準の HTML は、Web サーバーなどのコントロール表示する、テーブルとして<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>、サポートされていないこのプロパティ ブラウザー Microsoft Internet Explorer version 4 より前です。  
  
> [!NOTE]
>  設定する、<xref:System.Web.UI.WebControls.WebControl.Height%2A>プロパティ単位を型の既定以外の`Pixel`単位の型を特定する新しいユニットの種類を作成する必要があります。 コントロールの設定など<xref:System.Web.UI.WebControls.WebControl.Height%2A>プロパティ、100 の割合の値を次を実行できます。  
>   
>  `myWebControl.Width = Unit.Percentage(100);`  
>   
>  使用できるユニットの種類の詳細については、<xref:System.Web.UI.WebControls.WebControl.Height%2A>プロパティを参照してください、<xref:System.Web.UI.WebControls.Unit>クラス。  
  
   
  
## Examples  
 次の例では、宣言によって設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.Height%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>から継承されたコントロール、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.Height Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Height Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Height Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Height Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">高さが負の値に設定されました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
        <altmember cref="T:System.Web.UI.WebControls.Label" />
        <altmember cref="T:System.Web.UI.WebControls.HyperLink" />
        <altmember cref="T:System.Web.UI.WebControls.LinkButton" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="IsEnabled">
      <MemberSignature Language="C#" Value="protected internal bool IsEnabled { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEnabled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property IsEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property bool IsEnabled { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsEnabled : bool" Usage="System.Web.UI.WebControls.WebControl.IsEnabled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが有効かどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WebControl" /> オブジェクトが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これは読み取り専用プロパティです。 設定するコントロールを無効にする場合は、その<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを`false`します。  
  
 別のコントロールが含まれていない場合の制御の値、<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティは、の値と同じでは常に、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティ。  
  
 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティとは異なる値を持つ、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティとコントロールが別のコントロールの子である場合、次のすべての状況に該当する場合。  
  
-   値、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティまたは<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>親コントロールのプロパティは`false`します。  
  
-   <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>子コントロールのプロパティに設定されて`true`します。  
  
 このような状況では、子コントロールは、親コントロールの無効の状態を継承します。 <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>子コントロールのプロパティを返します`false`を子コントロールが明示的に無効を設定していない場合でも、コントロールが無効になっているかを示す、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを`false`します。 親コントロール自体があります、<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティに設定`true`しますが、可能性があります、その親から無効の状態を継承し、具合です。  
  
 設定を無効になっている要素マーク ASP.NET サーバー コントロールの HTML 要素をレンダリングするとき、`disabled`属性またはその CSS`class`属性。 詳細については、次のトピックを参照してください。 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> および <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="webControl.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary><see cref="M:System.Web.UI.WebControls.WebControl.SaveViewState" /> メソッドによって保存された前回の要求からビューステート情報を復元します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは主に、.NET Framework インフラストラクチャによって使用され、コードから直接使用するものではありません。 ただし、コントロールの開発者は、カスタム サーバー コントロールがビューステートを復元する方法を指定するには、このメソッドをオーバーライドすることができます。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))します。  
  
 <xref:System.Web.UI.WebControls.WebControl.LoadViewState%2A>メソッドは、以前に保存したビューステート情報を復元<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>要求。 <xref:System.Web.UI.WebControls.WebControl>クラスによって、base<xref:System.Web.UI.Control.LoadViewState%2A>を処理するメソッド、 <xref:System.Web.UI.Control.ViewState%2A>、 <xref:System.Web.UI.WebControls.WebControl.Style%2A>、および<xref:System.Web.UI.WebControls.WebControl.Attributes%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とします。ビュー ステートのサンプル</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフ サイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="MergeStyle">
      <MemberSignature Language="C#" Value="public void MergeStyle (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MergeStyle(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MergeStyle (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MergeStyle(System::Web::UI::WebControls::Style ^ s);" />
      <MemberSignature Language="F#" Value="member this.MergeStyle : System.Web.UI.WebControls.Style -&gt; unit" Usage="webControl.MergeStyle s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">コピーされるスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定したスタイルの空白以外の要素を Web コントロールにコピーしますが、コントロールの既存のスタイル要素は上書きしません。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.WebControl.MergeStyle%2A>のスタイルのスタイルをマージする方法、<xref:System.Web.UI.WebControls.DataGrid>コントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[WebControlMergeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlMergeStyle/CS/webcontrolmergestylecs.aspx#1)]
 [!code-aspx-vb[WebControlMergeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlMergeStyle/VB/webcontrolmergestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>指定された HTML ライターにコントロールを描画します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>メソッドはコントロールの開発者によって主に使用します。  
  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>メソッドを指定した Web コントロールを送信する<xref:System.Web.UI.HtmlTextWriter>インスタンス。 カスタム サーバー コントロールをクライアントに送信するには、このメソッドをオーバーライドします。  
  
 <xref:System.Web.UI.WebControls.WebControl.Render%2A>メソッドの最初の呼び出し、<xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>メソッド、<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>メソッド、および最後に、<xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A>コントロールをクライアントに送信するメソッド。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 開始タグを指定したライターに表示します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これが他のコントロールが開くと、Web サーバー コントロールのタグと終了タグの間の複数のコントロールを表示できるように公開されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの内容を指定したライターに出力します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上書き、 <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> begin と end タグの間でコントロールの内容をレンダリングするメソッド。 このメソッドの既定の実装は、すべての子コントロールをレンダリングします。  
  
 基本を呼び出す必要がありますか、コントロールに子コントロールがある場合は、<xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>メソッドまたは呼び出し、<xref:System.Web.UI.Control.RenderChildren%2A>子コントロールにレンダリングするテキスト ライターをポイントします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="abstract member RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit&#xA;override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="webControl.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 終了タグを指定したライターに表示します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 これが他のコントロールが開くと、Web サーバー コントロールのタグと終了タグの間の複数のコントロールを表示できるように公開されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="webControl.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドが呼び出された後に変更された状態を保存します。</summary>
        <returns>コントロールの現在のビュー ステートを格納するオブジェクト。このコントロールに関連付けられたビュー ステートがない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>メソッドはコントロールの開発者によって主に使用します。  
  
 ビュー ステートは、サーバー コントロールのプロパティの累積的な値です。 これらの値で自動的に配置、<xref:System.Web.UI.Control.ViewState%2A>インスタンスであるサーバー コントロールのプロパティの<xref:System.Web.UI.StateBag>クラス。 <xref:System.Web.UI.Control.ViewState%2A>保存状態のサーバー コントロールのライフ サイクルの段階の後に、プロパティの値が文字列オブジェクトを永続化します。 詳細については、次を参照してください。 [ASP.NET ページ ライフ サイクルの概要](https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991)します。  
  
 この文字列オブジェクトが、非表示の HTML に格納されている変数として、クライアントに返されるビューステートを保存すると、`input`要素。 オーバーライドすることで効率を向上させることができますをカスタム サーバー コントロールを作成するときに、<xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>メソッドと変更、<xref:System.Web.UI.Control.ViewState%2A>サーバー コントロールのプロパティ。 詳細については、次を参照してください。 [ASP.NET 状態管理の概要](https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100))します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とします。ビュー ステートのサンプル</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフ サイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="SkinID">
      <MemberSignature Language="C#" Value="public override string SkinID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkinID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property SkinID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkinID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkinID : string with get, set" Usage="System.Web.UI.WebControls.WebControl.SkinID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに適用するスキンを取得または設定します。</summary>
        <value>コントロールに適用するスキンの名前。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 スキンをコントロールで使用できるテーマのディレクトリ内の 1 つまたは複数のスキン ファイルに格納されます。 <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>プロパティでは、これらのコントロールに適用するスキンのどれを指定します。 スキンは、特定のコントロールに固有さまざまな種類のコントロール間のスキンの設定を共有することはできません。  
  
 設定しない場合、<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>プロパティ、コントロールを使用して既定のスキンが定義されている場合。 たとえば場合せず、スキン ID の定義、<xref:System.Web.UI.WebControls.Image>制御、そのスキンはすべてに適用されます<xref:System.Web.UI.WebControls.Image>コントロールを明示的に参照しない id のスキンとテーマを無効にするには設定されていません。 ID を使用して、スキンが定義されている場合、<xref:System.Web.UI.WebControls.Image>制御、そのスキンにのみ適用されます、<xref:System.Web.UI.WebControls.Image>制御が<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>その ID に設定されています。  
  
 テーマのディレクトリにスキン ファイルは、指定したスキンを含まない場合<xref:System.Web.UI.WebControls.WebControl.SkinID%2A>、<xref:System.ArgumentException>実行時に例外がスローされます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><see cref="P:System.Web.UI.WebControls.WebControl.SkinID" /> プロパティで指定されたスキンがテーマの中に存在しません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.EnableTheming" />
        <related type="Article" href="https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3">ASP.NET のテーマを理解します。</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="Style">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection Style { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.CssStyleCollection Style" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Style" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Style As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::CssStyleCollection ^ Style { System::Web::UI::CssStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Style : System.Web.UI.CssStyleCollection" Usage="System.Web.UI.WebControls.WebControl.Style" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの外側のタグにスタイル属性として表示されるテキスト属性のコレクションを取得します。</summary>
        <value>Web サーバー コントロールの外側のタグに表示される HTML スタイル属性を示す <see cref="T:System.Web.UI.CssStyleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、 <xref:System.Web.UI.WebControls.WebControl.Style%2A> Web サーバー コントロールの外側のタグで表示されるスタイル属性を管理するコレクション。 このプロパティは、すべてのコントロールのすべてのブラウザーで表示されます。  
  
> [!NOTE]
>  スタイル属性をサポートしないブラウザーにレンダリングされる HTML は無視します。  
  
 厳密に型指定されたスタイル プロパティが設定されたスタイル値 (たとえば、 `BackColor="Red"`) このコレクション内の対応する値を自動的にオーバーライドします。  
  
 このコレクションに設定されている値は、厳密に型指定されたスタイル プロパティで自動的には反映されません。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.Style%2A>プロパティを表示するか、<xref:System.Web.UI.WebControls.Label>ページ上のコントロール。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[Classic WebControl.Style Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Style Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Style Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Style Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="SupportsDisabledAttribute">
      <MemberSignature Language="C#" Value="public virtual bool SupportsDisabledAttribute { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsDisabledAttribute" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsDisabledAttribute As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsDisabledAttribute { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsDisabledAttribute : bool" Usage="System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの <see cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" /> プロパティが <see langword="false" /> の場合、レンダリングされた HTML 要素の <see langword="disabled" /> 属性を "無効" に設定するかどうかを示す値を取得します。</summary>
        <value>常に <see langword="true" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生クラスでは、このプロパティは、コントロールが無効になっているときに ASP.NET がそのコントロールの HTML をどのように描画するかを示します。  
  
## <a name="disabling-aspnet-web-controls"></a>無効にする ASP.NET Web コントロールします。  
 ときに、 <xref:System.Web.UI.WebControls.WebControl.Enabled%2A> ASP.NET コントロールのプロパティに設定されて`false`(つまり、コントロールが無効にした場合)、目的は、ASP.NET がページで、コントロールの表示が無効な状態 (通常は淡色表示) に表示する必要があります。 親コントロールが無効になっているもにはそのコントロールの子は、無効になっているように表示されます。 その場合、子コントロールの<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティに設定されて`false`場合でも、その<xref:System.Web.UI.WebControls.WebControl.Enabled%2A>プロパティを設定する`true`します。  
  
 ASP.NET 3.5 および以前のバージョン、ときに、コントロールの<xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>プロパティは`false`、ASP.NET のセット、`disabled`コントロールをレンダリングする HTML 要素の属性を"disabled"。 ただし、HTML 4.01 標準では、`disabled`のみユーザー入力に使用される特定の要素の属性。 たとえば、`disabled`属性は許可されて`input`要素ではなく`span`要素。  
  
 ほとんどのブラウザーでは、無効になっている既定の外観をサポートされている表示のみの要素に`disabled`属性。 ただし、HTML 標準に準拠して、ASP.NET 4 を既定では、無効な属性を省略します。  
  
## <a name="how-the-supportsdisabledattribute-property-is-used"></a>SupportsDisabledAttribute プロパティの使用方法  
 場合、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>プロパティは`true`、ASP.NET のレンダリングを`disabled`コントロールを無効にする属性します。 場合、このプロパティは`false`、ASP.NET のレンダリングを`class`コントロールを無効にする属性します。  
  
 派生クラスを返すには、このプロパティをオーバーライドする`false`次の条件に該当する場合。  
  
-   コントロールがサポートされていない HTML 要素を表示する、`disabled`属性。  
  
-   <xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ 4.0 より前の ASP.NET バージョン番号を示します。  
  
 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>プロパティは必ずしもコントロールに表示される HTML 要素をサポートしているかどうか (許可)、`disabled`属性。 コントロールの場合<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ 4.0 では、コントロールの値よりも低い ASP.NET バージョン番号を示します<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>プロパティが返す可能性があります`true`レンダリングされる HTML がサポートしていない場合でも、`disabled`属性。  
  
## <a name="backward-compatibility-for-disabled-controls"></a>無効なコントロールとの下位互換性  
 Visual Studio を使用して Web プロジェクトを ASP.NET 4 を以前のバージョンからアップグレードすると、Visual Studio は自動的に設定、 `controlRenderingCompatibilityVersion` Web.config ファイル内の属性 (どのセット、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティ) 以前のバージョン番号にします。 <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>プロパティは常に返します`true`ときに、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティが 4.0 よりも低い場合、これが原因で、以前のバージョンと同様に、無効になっているコントロールの HTML を表示する Web コントロール。 ASP.NET 4 で導入されたアルゴリズムを使用して HTML を表示するために、アップグレード済みの Web サイトを設定する場合は、変更または削除、`controlRenderingCompatibilityVersion`属性。 詳細については、<xref:System.Web.UI.Control.RenderingCompatibility%2A> プロパティを参照してください。  
  
## <a name="setting-a-disabled-appearance-by-using-css"></a>CSS を使用して無効な外観を設定します。  
 場合、<xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>コントロールのプロパティが`false`、コントロールが無効になっている、ASP.NET のセット、`class`の値にレンダリングされた HTML 要素の属性、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>プロパティ。 既定値、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>プロパティは"aspNetDisabled"です。  
  
 無効になっているコントロールの無効な外観を提供するには、値によって表されるクラスの CSS 規則を定義する必要があります、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=nameWithType>プロパティ。  
  
 コントロール 1 つ以上の値を持つ可能性がありますについてレンダリングされる HTML 要素の`class`属性の値がある場合、<xref:System.Web.UI.WebControls.WebControl.CssClass%2A>プロパティ。 詳細については、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> プロパティを参照してください。  
  
   
  
## Examples  
 次の例では、マークアップを示しますの無効な<xref:System.Web.UI.WebControls.Label>コントロール。  
  
 `<asp:Label id="Label1" runat="server" Text="Test" Enabled="false"/>`  
  
 ASP.NET 3.5 およびそれ以前のバージョンでは、このマークアップは、次の HTML を表示します。  
  
 `<span id="Label1" disabled="disabled">Test</span>`  
  
 ASP.NET 4 の場合の値、<xref:System.Web.UI.Control.RenderingCompatibility%2A>プロパティは 4.0 以降、場合に、<xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>の既定値に設定されて、同じマークアップは、次の HTML を表示します。  
  
 `<span id="Label1" class="aspNetDisabled">Test</span>`  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.RenderingCompatibility" />
        <altmember cref="P:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.DisabledCssClass" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Enabled" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.IsEnabled" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.GetAttribute">
      <MemberSignature Language="C#" Value="string IAttributeAccessor.GetAttribute (string name);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.IAttributeAccessor.GetAttribute(string name) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)" />
      <MemberSignature Language="VB.NET" Value="Function GetAttribute (name As String) As String Implements IAttributeAccessor.GetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.IAttributeAccessor.GetAttribute(System::String ^ name) = System::Web::UI::IAttributeAccessor::GetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.GetAttribute(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性の名前。</param>
        <summary>指定された名前の Web コントロールの属性を取得します。</summary>
        <returns>属性の値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23GetAttribute%2A>メソッドは明示的なインターフェイス メンバーの実装。 使用できる場合にのみのインスタンス、<xref:System.Web.UI.WebControls.WebControl>クラスにキャスト、<xref:System.Web.UI.IAttributeAccessor>インターフェイス。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IAttributeAccessor.SetAttribute">
      <MemberSignature Language="C#" Value="void IAttributeAccessor.SetAttribute (string name, string value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IAttributeAccessor.SetAttribute(string name, string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub SetAttribute (name As String, value As String) Implements IAttributeAccessor.SetAttribute" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IAttributeAccessor.SetAttribute(System::String ^ name, System::String ^ value) = System::Web::UI::IAttributeAccessor::SetAttribute;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IAttributeAccessor.SetAttribute(System.String,System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">属性の名前/値ペアの名前の構成要素。</param>
        <param name="value">属性の名前/値ペアの値の構成要素。</param>
        <summary>Web コントロールの属性を指定された名前と値に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.System%23Web%23UI%23IAttributeAccessor%23SetAttribute%2A>メソッドは明示的なインターフェイス メンバーの実装。 使用できる場合にのみのインスタンス、<xref:System.Web.UI.WebControls.WebControl>クラスにキャスト、<xref:System.Web.UI.IAttributeAccessor>インターフェイス。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Attributes" />
      </Docs>
    </Member>
    <Member MemberName="TabIndex">
      <MemberSignature Language="C#" Value="public virtual short TabIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int16 TabIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TabIndex As Short" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property short TabIndex { short get(); void set(short value); };" />
      <MemberSignature Language="F#" Value="member this.TabIndex : int16 with get, set" Usage="System.Web.UI.WebControls.WebControl.TabIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールのタブ インデックスを取得または設定します。</summary>
        <value>Web サーバー コントロールのタブ インデックス。 既定値は <see langword="0" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティを指定するか、Web フォーム ページ上の Web サーバー コントロールのタブ インデックスを確認します。 押したときに、`Tab`キー、Web サーバー コントロールにフォーカスが表示される順序が続く、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>各コントロールのプロパティ。 ページが最初に読み込まれると、最初の項目を受信するフォーカス、`Tab`キーが押されたはアドレス バーです。 次に、Web フォーム ページ上のコントロール、タブ付きに、昇順の値に基づいて、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>各コントロールのプロパティ。 複数のコントロールは、同じタブ インデックスを共有している場合、コントロールは、Web フォーム ページで宣言されている順序でフォーカスを受け取る。 最後に、0 のタブ インデックスを持つコントロールには、宣言された順序でタブ付き。  
  
> [!NOTE]
>  0 以外のタブ インデックスを持つコントロールのみが表示されます、`tabindex`属性。  
  
 タブ オーダーから Web サーバー コントロールを削除するには設定して、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>プロパティを負の値にします。  
  
> [!NOTE]
>  以降では、Internet Explorer 4 のみ、このプロパティがサポートされています。  
  
   
  
## Examples  
 次の例を使用する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>のプロパティ、<xref:System.Web.UI.WebControls.WebControl>ページ上のコントロールのタブ オーダーを設定します。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[Classic WebControl.TabIndex Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.TabIndex Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.TabIndex Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定したタブ インデックスが、-32768 から 32767 の間にありません。</exception>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.WebControl.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>この Web サーバー コントロールに対応する <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value><see cref="T:System.Web.UI.HtmlTextWriterTag" /> 列挙値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.TagKey%2A>を決定するプロパティ、<xref:System.Web.UI.HtmlTextWriterTag>この Web サーバー コントロールに関連付けられている値。 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TagName">
      <MemberSignature Language="C#" Value="protected virtual string TagName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TagName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.TagName" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property TagName As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::String ^ TagName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TagName : string" Usage="System.Web.UI.WebControls.WebControl.TagName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロール タグの名前を取得します。 このプロパティは、主にコントロールの開発者によって使用されます。</summary>
        <value>コントロール タグの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.TagName%2A>コントロール タグの名前を確認するには、この Web サーバー コントロールに関連付けられています。 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="ToolTip">
      <MemberSignature Language="C#" Value="public virtual string ToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ToolTip : string with get, set" Usage="System.Web.UI.WebControls.WebControl.ToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが Web サーバー コントロールの上を移動したときに表示されるテキストを取得または設定します。</summary>
        <value>マウス ポインターが Web サーバー コントロールの上を移動したときに表示されるテキスト。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>プロパティをカスタム Web サーバー コントロールにマウス ポインターを合わせたときに表示されるテキストを指定します。  
  
> [!NOTE]
>  このプロパティはすべてのブラウザーにレンダリングされます。 ただし、Microsoft Internet Explorer だけでは、ツールヒントとしてこのプロパティが表示されます。 その他のすべてのブラウザーには、このプロパティは無視します。  
  
 このプロパティは、の値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## Examples  
 次の例を設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>プロパティを<xref:System.Web.UI.WebControls.Button>コントロールから継承される、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
> [!NOTE]
>  次のコード サンプルでは、1 つのファイル コード モデルを使用して、分離コード ファイルに直接コピーすると、正常に動作しない可能性があります。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](https://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)します。  
  
 [!code-aspx-csharp[Classic WebControl.ToolTip Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.ToolTip Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.ToolTip Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WebControl.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="webControl.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールでそのビュー ステートの変化を追跡して、その変化をオブジェクトの <see cref="P:System.Web.UI.Control.ViewState" /> プロパティに保存できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>メソッドはコントロールの開発者によって主に使用します。  
  
 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>追跡と保存がコントロールのビューステートへの変更に開始する開始位置をマークします。 <xref:System.Web.UI.WebControls.WebControl.TrackViewState%2A>メソッドは自動的に ASP.NET サーバー コントロールが初期化されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.ViewState" />
        <altmember cref="P:System.Web.UI.Control.IsTrackingViewState" />
        <related type="Article" href="https://msdn.microsoft.com/library/9e98c7de-a888-48df-b14e-02ec8bef7681">コントロールの状態とします。ビュー ステートのサンプル</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
        <related type="Article" href="https://msdn.microsoft.com/library/0218d965-5d30-445b-b6a6-8870e70e63ce(v=vs.100)">ASP.NET 状態管理の概要</related>
        <related type="Article" href="https://msdn.microsoft.com/library/7949d756-1a79-464e-891f-904b1cfc7991">ASP.NET ページのライフ サイクルの概要</related>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WebControl.Width" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberSignature Language="F#" Value="member this.Width : System.Web.UI.WebControls.Unit with get, set" Usage="System.Web.UI.WebControls.WebControl.Width" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの幅を取得または設定します。</summary>
        <value>コントロールの幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は、<see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティを Web サーバー コントロールの幅を指定します。  
  
> [!NOTE]
>  このプロパティは Microsoft Internet Explorer version 4 より前のブラウザーですべてのコントロールは表示されません。 以前のブラウザーでこのプロパティにレンダリングされないコントロールには、 <xref:System.Web.UI.WebControls.Label>、 <xref:System.Web.UI.WebControls.HyperLink>、 <xref:System.Web.UI.WebControls.LinkButton>、および検証コントロール。 <xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>も以前のブラウザーでこのプロパティにレンダリングされないときに、`RepeatLayout`プロパティに設定されて`RepeatLayout.Flow`します。 さらに、ユニットの種類のみの`Pixel`と`Percentage`以前のブラウザーでサポートされています。  
  
 このプロパティは、非標準の HTML は、Web サーバーなどのコントロール表示する、テーブルとして<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>、サポートされていないこのプロパティ ブラウザー Microsoft Internet Explorer version 4 より前です。  
  
> [!NOTE]
>  設定する、<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティ単位を宣言によって型の既定値よりも`Pixel`単位の型を特定する新しいユニットの種類を作成する必要があります。 コントロールの設定など<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティ、100 の割合の値を次を実行できます。  
>   
>  `myWebControl.width = Unit.Percentage(100);`  
>   
>  使用できるユニットの種類の詳細については、<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティを参照してください、<xref:System.Web.UI.WebControls.Unit>クラス。  
  
   
  
## Examples  
 次の例では、宣言によって設定する方法を示しています、<xref:System.Web.UI.WebControls.WebControl.Width%2A>のプロパティ、<xref:System.Web.UI.WebControls.Table>から継承されたコントロール、<xref:System.Web.UI.WebControls.WebControl>基本クラス。  
  
 [!code-aspx-csharp[Classic WebControl.Width Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic WebControl.Width Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic WebControl.Width Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic WebControl.Width Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">Web サーバー コントロールの幅が負の値に設定されました。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <related type="Article" href="https://msdn.microsoft.com/library/143d14d6-9d12-4d4b-ae60-f00e0eb6938f">ASP.NET サーバー コントロールとブラウザーの機能</related>
        <related type="Article" href="https://msdn.microsoft.com/library/fbe26c16-cff4-4089-b3dd-877411f0c0ef">カスタム ASP.NET サーバー コントロールの開発</related>
      </Docs>
    </Member>
  </Members>
</Type>