<Type Name="TreeView" FullName="System.Web.UI.WebControls.TreeView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="644e5019335145296b521d6d60c4b71866ee67be" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69410793" /></Metadata><TypeSignature Language="C#" Value="public class TreeView : System.Web.UI.WebControls.HierarchicalDataBoundControl, System.Web.UI.ICallbackEventHandler, System.Web.UI.IPostBackDataHandler, System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit TreeView extends System.Web.UI.WebControls.HierarchicalDataBoundControl implements class System.Web.UI.ICallbackEventHandler, class System.Web.UI.IPostBackDataHandler, class System.Web.UI.IPostBackEventHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.TreeView" />
  <TypeSignature Language="VB.NET" Value="Public Class TreeView&#xA;Inherits HierarchicalDataBoundControl&#xA;Implements ICallbackEventHandler, IPostBackDataHandler, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class TreeView : System::Web::UI::WebControls::HierarchicalDataBoundControl, System::Web::UI::ICallbackEventHandler, System::Web::UI::IPostBackDataHandler, System::Web::UI::IPostBackEventHandler" />
  <TypeSignature Language="F#" Value="type TreeView = class&#xA;    inherit HierarchicalDataBoundControl&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackDataHandler&#xA;    interface ICallbackEventHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.HierarchicalDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.ICallbackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackDataHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("SelectedNodeChanged")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.TreeViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>目次などの階層データをツリー構造で表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [節](#nodes)  
  
-   [静的データ](#static_data)  
  
-   [バインド (データに)](#binding_to_data)  
  
-   [動的ノードの作成](#dynamic_node_population)  
  
-   [ユーザーインターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [スクロール](#scrolling)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.TreeView>コントロールは、目次やファイルディレクトリなどの階層データをツリー構造で表示するために使用され、次の機能をサポートしています。  
  
-   コントロールのノードを XML、表形式、またはリレーショナルデータにバインドできるようにするデータバインディング。  
  
-   <xref:System.Web.UI.WebControls.SiteMapDataSource>コントロールとの統合によるサイトナビゲーション。  
  
-   プレーンテキストまたはハイパーリンクとして表示できるノードテキスト。  
  
-   オブジェクトモデルへの<xref:System.Web.UI.WebControls.TreeView>プログラムによるアクセス。ツリーの作成、ノードの設定、プロパティの設定などを動的に行います。  
  
-   クライアント側のノードの作成 (サポートされているブラウザーの場合)。  
  
-   各ノードの横にチェックボックスを表示する機能。  
  
-   テーマ、ユーザー定義のイメージ、およびスタイルを使用したカスタマイズ可能な外観。  
  
    > [!NOTE]
    >  コントロール<xref:System.Web.UI.WebControls.TreeView>は、がに<xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> 設定さ`true`れている場合にのみ、コントロール内で使用されるように設計されています。 <xref:System.Web.UI.UpdatePanel>コントロールは、ポストバックを使用してページ全体を更新するのではなく、ページの選択された領域を更新するために使用されます。 詳細については、「 [UpdatePanel コントロールの概要](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)」および「[部分ページレンダリングの概要](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)」を参照してください。  
  
<a name="nodes"></a>   
## <a name="nodes"></a>ノード  
 <xref:System.Web.UI.WebControls.TreeView>コントロールはノードで構成されます。 ツリー内の各エントリはノードと呼ばれ、 <xref:System.Web.UI.WebControls.TreeNode>オブジェクトによって表されます。 ノードの種類は次のように定義されます。  
  
-   他のノードを含むノードは、*親ノード*と呼ばれます。  
  
-   別のノードに含まれるノードは、*子ノード*と呼ばれます。  
  
-   子を持たないノードは、*リーフノード*と呼ばれます。  
  
-   他のノードに含まれていないノードが、他のすべてのノードの先祖である場合は、*ルートノード*です。  
  
 ノードには親と子の両方を指定できますが、ルートノード、親ノード、およびリーフノードは相互に排他的です。 ノードのビジュアルおよび動作プロパティのいくつかは、ノードがルートノードか、子ノードか、リーフノードであるかによって決まります。  
  
 一般的なツリー構造にはルートノードが1つしか<xref:System.Web.UI.WebControls.TreeView>ありませんが、コントロールを使用すると、複数のルートノードをツリー構造に追加できます。 これは、製品カテゴリの一覧のように、単一のルートノードを表示せずに項目の一覧を表示する場合に便利です。  
  
 各ノードには<xref:System.Web.UI.WebControls.TreeNode.Text%2A> 、プロパティ<xref:System.Web.UI.WebControls.TreeNode.Value%2A>とプロパティがあります。 <xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティの値は、 <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Value%2A>に表示されます。このプロパティは、ノードに関連付けられているポストバックイベントに渡されるデータなど、ノードに関する追加データを格納するために使用されます。  
  
 ノードは、選択モードとナビゲーションモードの2つのモードのいずれかになります。 既定では、ノードは選択モードになっています。 ノードをナビゲーションモードにするには、ノード<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティを空の文字列 ("") 以外の値に設定します。 ノードを選択モードにするには、ノード<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティを空の文字列 ("") に設定します。  
  
> [!NOTE]
>  一部のインターネットブラウザーでは、 <xref:System.Web.UI.WebControls.TreeView>コントロールのパフォーマンスに影響を与える可能性のある制限があります。 たとえば、Microsoft Internet Explorer 6.0 では、URL 文字の制限である2067文字が投稿されます。 ノードの URL の文字数がその数値よりも大きい場合、そのノードを展開すると失敗し、例外はスローされません。  
  
<a name="static_data"></a>   
## <a name="static-data"></a>静的データ  
 <xref:System.Web.UI.WebControls.TreeView>コントロールの最も単純なデータモデルは静的データです。 宣言型の構文を使用して静的データを表示する`<Nodes>`には、最初に<xref:System.Web.UI.WebControls.TreeView>コントロールの開始タグと終了タグの間に開始タグと終了タグを入れ子にします。 次に、開始タグと終了`<asp:TreeNode>` `<Nodes>`タグの間に要素を入れ子にすることによって、ツリー構造を作成します。 各`<asp:TreeNode>`要素は、ツリー内のノードを表し、 <xref:System.Web.UI.WebControls.TreeNode>オブジェクトにマップされます。 各ノードのプロパティは、その`<asp:TreeNode>`要素の属性を設定することによって設定できます。 子ノードを作成するには`<asp:TreeNode>` 、親ノードの開始タグ`<asp:TreeNode>`と終了タグの間に追加の要素を入れ子にします。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>バインド (データに)  
 <xref:System.Web.UI.WebControls.TreeView>コントロールをデータにバインドすることもできます。 次の2つの方法のいずれかを<xref:System.Web.UI.WebControls.TreeView>使用して、コントロールを適切なデータソースの種類にバインドできます。  
  
-   コントロールは、 <xref:System.Web.UI.IHierarchicalDataSource> インターフェイスを実装する<xref:System.Web.UI.WebControls.SiteMapDataSource>任意のデータソースコントロール (コントロールやコントロールなど)を使用できます。<xref:System.Web.UI.WebControls.XmlDataSource> <xref:System.Web.UI.WebControls.TreeView> データソースコントロールにバインドするには、 <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> <xref:System.Web.UI.WebControls.TreeView>コントロールのプロパティをデータソースコントロール<xref:System.Web.UI.Control.ID%2A>の値に設定します。 コントロール<xref:System.Web.UI.WebControls.TreeView>は、指定されたデータソースコントロールに自動的にバインドされます。 これは、データにバインドするために推奨される方法です。  
  
-   コントロール<xref:System.Web.UI.WebControls.TreeView>は、 <xref:System.Xml.XmlDocument>オブジェクトまた<xref:System.Data.DataSet>はリレーションを持つオブジェクトにバインドすることもできます。 これらのデータソースのいずれかにバインドするに<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールのプロパティをデータソースに設定してから<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> 、メソッドを呼び出します。  
  
 各データ項目に複数のプロパティ (複数の属性を持つ XML 要素など) が含まれているデータソースにバインドする場合、既定では、データ`ToString`項目のメソッドによって返される値がノードに表示されます。 XML 要素の場合、ノードには、ツリーの基になる構造を示す要素名が表示されますが、それ以外の場合はあまり役に立ちません。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを使用してツリーノードバインディングを指定することで、特定のデータ項目プロパティにノードをバインドできます。 コレクションには`TreeNodeBinding` 、データ項目とそのバインド先のノードとの間のリレーションシップを定義するオブジェクトが含まれます。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> バインドの条件と、ノードに表示するデータ項目のプロパティを指定できます。 ツリーノードのバインドの詳細について<xref:System.Web.UI.WebControls.TreeNodeBinding>は、「」を参照してください。  
  
> [!IMPORTANT]
>  悪意のあるユーザーがコールバック要求を作成し、ページ開発者が<xref:System.Web.UI.WebControls.TreeView>表示していないコントロールのノードのデータを取得することができます。 そのため、データソースによってデータのセキュリティが実装されている必要があります。 データを非表示<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>にするには、プロパティを使用しないでください。  
  
<a name="dynamic_node_population"></a>   
## <a name="dynamic-node-population"></a>動的ノードの作成  
 場合によっては、データソースから返されるデータが多すぎるか、表示されるデータが実行時に取得される情報によって異なるため、ツリー構造を静的に定義するのは現実的ではありません。 このため、コントロールは<xref:System.Web.UI.WebControls.TreeView>動的なノードの作成をサポートしています。 `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティをに設定すると、ノードが展開されるときに、実行時にそのノードが設定されます。 ノードに動的にデータを設定するには、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベントのノードにデータを設定するロジックを含むイベント処理メソッドを定義する必要があります。  
  
 コールバックスクリプトをサポートするブラウザーでは、クライアント側のノードの作成も利用できます。 (これには、Internet Explorer 5.5 以降と他のいくつかのブラウザーが含まれます)。クライアント側のノードの作成で<xref:System.Web.UI.WebControls.TreeView>は、ユーザーがノードを展開するときに、サーバーへのラウンドトリップを必要とせずに、クライアントスクリプトを使用してノードを設定できます。 クライアント側のノードの作成の詳細について<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>は、「」を参照してください。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>ユーザーインターフェイスのカスタマイズ  
 <xref:System.Web.UI.WebControls.TreeView>コントロールの外観をカスタマイズするには、さまざまな方法があります。 まず、ノードの種類ごとに異なるスタイル (フォントサイズや色など) を指定できます。  
  
 カスケードスタイルシート (CSS) を使用してコントロールの外観をカスタマイズする場合は、インラインスタイルまたは別の CSS ファイルを使用しますが、両方は使用しません。 インラインスタイルと別の CSS ファイルの両方を使用すると、予期しない結果が発生する可能性があります。 コントロールでのスタイルシートの使用の詳細については、「 [Web サーバーコントロールと CSS スタイル](https://msdn.microsoft.com/library/782c2db6-fc9b-4243-8df9-a8ffe2f4cc42)」を参照してください。  
  
 次の表に、使用可能なノードのスタイルを示します。  
  
|"ノードスタイル" プロパティ|説明|  
|-------------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>|マウスポインターが上に置かれているときのノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>|リーフノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>|ノードの既定のスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>|親ノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>|ルートノードのスタイル設定。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>|選択されたノードのスタイル設定。|  
  
 また、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションを使用して、ツリー内の特定の深さのノードのスタイルを制御することもできます。 コレクションの最初のスタイルは、ツリーの最初のレベルにあるノードのスタイルに対応します。 コレクションの2番目のスタイルは、ツリーの2番目のレベルのノードのスタイルに対応します。 これは、子ノードがあるかどうかに関係なく、特定の深さのノードが同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するために最もよく使用されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションを使用して特定の深さレベルに対してスタイルが定義されている場合、そのスタイルは、その深さにあるノードのルート、親、またはリーフノードのスタイル設定よりも優先されます。  
  
 コントロールの外観を変更するもう1つの方法は、 <xref:System.Web.UI.WebControls.TreeView>コントロールに表示されるイメージをカスタマイズすることです。 次の表に示すプロパティを設定することによって、コントロールのさまざまな部分に対して独自のカスタムイメージセットを指定できます。  
  
|Image プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノードインジケーターに表示されるイメージの URL。 通常、このイメージはマイナス記号 (-) です。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノードインジケーターに表示されるイメージの URL。 この画像は通常、正符号 (+) です。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|親ノードを子ノードに接続するために使用される行イメージを含むフォルダーの URL です。 この<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティが効果を持つよう`true`にするには、プロパティもに設定する必要があります。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開できないノードインジケーターに表示されるイメージの URL。|  
  
> [!NOTE]
>  すべてのイメージプロパティをカスタマイズする必要はありません。 イメージプロパティが明示的に設定されていない場合は、組み込みの既定のイメージが使用されます。  
  
 コントロール<xref:System.Web.UI.WebControls.TreeView>では、ノードの横にチェックボックスを表示することもできます。 プロパティが<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>以外`TreeNodeTypes.None`の値に設定されている場合は、指定したノードの種類の横にチェックボックスが表示されます。  
  
> [!NOTE]
>  プロパティは、 <xref:System.Web.UI.WebControls.TreeNodeTypes>列挙メンバー値のビットごとの組み合わせに設定できます。 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>  
  
 ページがサーバー <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>にポストされるたびに、選択したノードがコレクションに自動的に設定されます。 チェックボックスが表示されている場合は<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> 、イベントを使用して、サーバーへのポスト間でチェックボックスの状態が変化するたびにカスタムルーチンを実行できます。  
  
<a name="events"></a>   
## <a name="events"></a>イベント  
 コントロール<xref:System.Web.UI.WebControls.TreeView>には、プログラミングできるいくつかのイベントが用意されています。 これにより、イベントが発生するたびにカスタムルーチンを実行できます。 次の表に、 <xref:System.Web.UI.WebControls.TreeView>コントロールでサポートされているイベントの一覧を示します。  
  
|event|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>|<xref:System.Web.UI.WebControls.TreeView>コントロールのチェックボックスがサーバーへのポスト間で状態を変更したときに発生します。|  
|<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>|<xref:System.Web.UI.WebControls.TreeView> コントロールでノードが選択されると発生します。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|<xref:System.Web.UI.WebControls.TreeView> コントロールでノードが展開されると発生します。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>|<xref:System.Web.UI.WebControls.TreeView> コントロールでノードが折りたたまれると発生します。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>|<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A> プロパティが `true` に設定されているノードが <xref:System.Web.UI.WebControls.TreeView> コントロールで展開されたときに発生します。|  
|<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>|<xref:System.Web.UI.WebControls.TreeView> コントロールで、データ項目をノードに関連付けると発生します。|  
  
<a name="scrolling"></a>   
## <a name="scrolling"></a>スクロール  
 コントロール<xref:System.Web.UI.WebControls.TreeView>には、スクロールが組み込まれていません。 スクロールを追加するには<xref:System.Web.UI.WebControls.TreeView> 、コントロールを<xref:System.Web.UI.WebControls.Panel>コントロールに配置<xref:System.Web.UI.WebControls.Panel>し、スクロールバーをコントロールに追加します。 詳細については、「 [Panel Web サーバーコントロールの概要](https://msdn.microsoft.com/library/127b61ed-87f2-46f4-92a3-785166e7245b)」を参照してください。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 このコントロールに既定で表示されるマークアップは、ユーザー補助の標準に準拠していない可能性があります。 このコントロールのアクセシビリティサポートの詳細については、「 [ASP.NET Controls And accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)」を参照してください。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:TreeView  
    AccessKey="string"  
    AutoGenerateDataBindings="True|False"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CollapseImageToolTip="string"  
    CollapseImageUrl="uri"  
    CssClass="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableClientScript="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ExpandDepth="string|FullyExpand|0|1|2|3|4|5|6|7|8|9|10|11|12|13|  
        14|15|16|17|18|19|20|21|22|23|24|25|26|27|28|29|30"  
    ExpandImageToolTip="string"  
    ExpandImageUrl="uri"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
       Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    ImageSet="Custom|XPFileExplorer|Msdn|WindowsHelp|Simple|Simple2|  
        BulletedList|BulletedList2|BulletedList3|BulletedList4|  
        Arrows|News|Contacts|Inbox|Events|Faq"  
    LineImagesFolder="string"  
    MaxDataBindDepth="integer"  
    NodeIndent="integer"  
    NodeWrap="True|False"  
    NoExpandImageUrl="uri"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelectedNodeChanged="SelectedNodeChanged event handler"  
    OnTreeNodeCheckChanged="TreeNodeCheckChanged event handler"  
    OnTreeNodeCollapsed="TreeNodeCollapsed event handler"  
    OnTreeNodeDataBound="TreeNodeDataBound event handler"  
    OnTreeNodeExpanded="TreeNodeExpanded event handler"  
    OnTreeNodePopulate="TreeNodePopulate event handler"  
    OnUnload="Unload event handler"  
    PathSeparator="string"  
    PopulateNodesFromClient="True|False"  
    runat="server"  
    ShowCheckBoxes="None|Root|Parent|Leaf|All"  
    ShowExpandCollapse="True|False"  
    ShowLines="True|False"  
    SkinID="string"  
    SkipLinkText="string"  
    Style="string"  
    TabIndex="integer"  
    Target="string"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <DataBindings>  
                <asp:TreeNodeBinding  
                    DataMember="string"  
                    Depth="integer"  
                    FormatString="string"  
                    ImageToolTip="string"  
                    ImageToolTipField="string"  
                    ImageUrl="uri"  
                    ImageUrlField="string"  
                    NavigateUrl="uri"  
                    NavigateUrlField="string"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    ShowCheckBox="string"  
                    Target="string"  
                    TargetField="string"  
                    Text="string"  
                    TextField="string"  
                    ToolTip="string"  
                    ToolTipField="string"  
                    Value="string"  
                    ValueField="string"  
                />  
        </DataBindings>  
        <HoverNodeStyle />  
        <LeafNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <LevelStyles>  
                <asp:TreeNodeStyle  
                    BackColor="color name|#dddddd"  
                    BorderColor="color name|#dddddd"  
                    BorderStyle="NotSet|None|Dotted|Dashed|Solid|  
                        Double|Groove|Ridge|Inset|Outset"  
                    BorderWidth="size"  
                    ChildNodesPadding="size"  
                    CssClass="string"  
                    Font-Bold="True|False"  
                    Font-Italic="True|False"  
                    Font-Names="string"  
                    Font-Overline="True|False"  
                    Font-Size="string|Smaller|Larger|XX-Small|  
                        X-Small|Small|Medium|Large|X-Large|XX-Large"  
                    Font-Strikeout="True|False"  
                    Font-Underline="True|False"  
                    ForeColor="color name|#dddddd"  
                    Height="size"  
                    HorizontalPadding="size"  
                    ImageUrl="uri"  
                    NodeSpacing="size"  
                    OnDisposed="Disposed event handler"  
                    VerticalPadding="size"  
                    Width="size"  
                />  
        </LevelStyles>  
        <Nodes>  
                <asp:TreeNode  
                    Checked="True|False"  
                    Expanded="string"  
                    ImageToolTip="string"  
                    ImageUrl="uri"  
                    NavigateUrl="uri"  
                    PopulateOnDemand="True|False"  
                    SelectAction="Select|Expand|SelectExpand|None"  
                    Selected="True|False"  
                    ShowCheckBox="string"  
                    Target="string"  
                    Text="string"  
                    ToolTip="string"  
                    Value="string"  
>  
                </asp:TreeNode>  
        </Nodes>  
        <NodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <ParentNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <RootNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
        <SelectedNodeStyle  
            BackColor="color name|#dddddd"  
            BorderColor="color name|#dddddd"  
            BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|  
                Groove|Ridge|Inset|Outset"  
            BorderWidth="size"  
            ChildNodesPadding="size"  
            CssClass="string"  
            Font-Bold="True|False"  
            Font-Italic="True|False"  
            Font-Names="string"  
            Font-Overline="True|False"  
            Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|  
                Medium|Large|X-Large|XX-Large"  
            Font-Strikeout="True|False"  
            Font-Underline="True|False"  
            ForeColor="color name|#dddddd"  
            Height="size"  
            HorizontalPadding="size"  
            ImageUrl="uri"  
            NodeSpacing="size"  
            OnDisposed="Disposed event handler"  
            VerticalPadding="size"  
            Width="size"  
        />  
</asp:TreeView>  
```  
  
   
  
## Examples  
 このセクションには、7つのコード例が含まれています。  
  
-   最初のコード例では、2番目のコード例のフレームを設定する方法を示します。  
  
-   2番目のコード例では、宣言型の構文を使用し<xref:System.Web.UI.WebControls.TreeView>て、コントロールに静的データを表示する方法を示します。  
  
-   3番目のコード例は、 <xref:System.Web.UI.WebControls.TreeView>コントロールを XML データソースにバインドする方法を示しています。  
  
-   4番目のコード例では、3番目のコード例のサンプル XML データを提供しています。  
  
-   5番目のコード例では、 <xref:System.Web.UI.WebControls.TreeView>コントロール<xref:System.Web.UI.WebControls.SiteMapDataSource>にバインドすることによって、コントロールをサイトナビゲーションに使用する方法を示します。  
  
-   6番目のコード例では、5番目のコード例のサンプルサイトマップデータを提供しています。  
  
-   7番目のコード例は、クライアントから<xref:System.Web.UI.WebControls.TreeView>コントロールのノードを設定する方法を示しています。  
  
 次のコード例は、フレームを設定する方法を示しています。コード例を次に示します。  
  
 [!code-aspx-csharp[TreeViewFrameSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameSet/CS/framecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameSet/VB/framevb.aspx#1)]  
  
 宣言型の構文を使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールに静的データを表示する方法を次のコード例に示します。 この例は、前の例のフレームセット内で、目次を表示するために使用されます。  
  
 [!code-aspx-csharp[TreeViewFrameExample#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFrameExample/CS/treeviewframecs.aspx#1)]
 [!code-aspx-vb[TreeViewFrameExample#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFrameExample/VB/treeviewframevb.aspx#1)]  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView>コントロールを XML データソースにバインドする方法を示しています。 この例を正しく動作させるには、このコード例の後に記載されているサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例は、前の例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 次のコード例は、コントロール<xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.SiteMapDataSource>をコントロールにバインドすることによって、コントロールをサイトナビゲーションに使用する方法を示しています。 この例を正しく動作させるには、このコード例の後に示したサンプルのサイトマップデータを、Web.config という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例は、前のコード例のサンプルサイトマップデータを示しています。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 クライアントから<xref:System.Web.UI.WebControls.TreeView>コントロールのノードを設定する方法を次のコード例に示します。 クライアント側のノードの作成が有効になっている場合、ノードは、サーバーにポストバックすることなく、クライアントで動的に設定されます。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.DataBoundControl.DataSourceID" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
    <altmember cref="T:System.Web.UI.IHierarchicalDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.Nodes" />
    <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
    <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
    <altmember cref="T:System.Web.UI.WebControls.SiteMapDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
    <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
    <related type="Article" href="https://msdn.microsoft.com/library/6b85a558-1df8-44cf-bea6-62e61bcc8d20">ASP.NET サイトマップ</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public TreeView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; TreeView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターを使用して、 <xref:System.Web.UI.WebControls.TreeView>クラスの新しいインスタンスを作成および初期化します。 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A> コントロールを<xref:System.Web.UI.WebControls.TreeView>ページに動的に追加するには、新しい<xref:System.Web.UI.WebControls.TreeView>オブジェクトを作成し、そのプロパティを設定して、 <xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType> <xref:System.Web.UI.WebControls.PlaceHolder>コントロールなどのコンテナーコントロールのコレクションに追加します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>コンストラクターを使用してコントロールを<xref:System.Web.UI.WebControls.TreeView>ページに動的に追加する方法を示します。 2番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例は、コンストラクターを使用<xref:System.Web.UI.WebControls.TreeView.%23ctor%2A>してコントロールを<xref:System.Web.UI.WebControls.TreeView>ページに動的に追加する方法を示しています。 この例を正しく動作させるには、このコード例の後に示したサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCtor/CS/treeviewctorcs.aspx#1)]
 [!code-aspx-vb[TreeViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCtor/VB/treeviewctorvb.aspx#1)]  
  
 次のコード例は、前の例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
  <Chapter Heading="Chapter 1">  
    <Section Heading="Section 1">  
    </Section>  
    <Section Heading="Section 2">  
    </Section>  
  </Chapter>  
  <Chapter Heading="Chapter 2">  
    <Section Heading="Section 1">  
    </Section>  
  </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> コントロールに、表示する必要のある HTML 属性およびスタイルを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.TreeView.AddAttributesToRender%2A>は、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateDataBindings">
      <MemberSignature Language="C#" Value="public bool AutoGenerateDataBindings { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateDataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateDataBindings As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateDataBindings { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateDataBindings : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールがツリー ノードのバインディングを自動的に生成するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールによりツリー ノードのバインディングが自動的に生成される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ツリーノードバインドは、データ項目とそのバインド先のノードとの間のリレーションシップを定義します。 各データ項目に複数のプロパティ (複数の属性を持つ XML 要素など) が含まれているデータソースに<xref:System.Web.UI.WebControls.TreeView>バインドする場合、コントロールはどのデータ項目プロパティ<xref:System.Web.UI.WebControls.TreeNode>にバインドするかを特定する必要があります。 `true` <xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode.Text%2A>プロパティがに設定されている場合、コントロールは、バインディングに関連付けられている<xref:System.Web.UI.WebControls.TreeNode>オブジェクトのプロパティを、の値に設定する既定のツリーノードのバインドを自動的に生成します。 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>データ項目の`ToString`メソッドによって返されます。  
  
> [!NOTE]
>  自動的に生成されたツリーノードのバインドは<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションに追加されません。  
  
 Xml 要素の場合、 `ToString`メソッドによって返される値は、xml ファイルの基になる構造を示す要素名になりますが、それ以外の場合はあまり役に立ちません。 より有用なツリーを作成するには、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションに設定することによって、独自のツリーノードバインディングを定義する必要があります。  
  
> [!NOTE]
>  コレクションを<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>定義する場合、コントロール<xref:System.Web.UI.WebControls.TreeView>は自動的に生成されたツリーノードのバインドではなく、これらの値を使用します。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>プロパティをに`false`設定して、ツリーノードの自動バインド生成を無効にする方法を示します。 2番目のコード例では、最初のコード例のサンプルサイトマップデータを提供します。  
  
 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A>プロパティをに`false`設定して、ツリーノードの自動バインド生成を無効にする方法を次のコード例に示します。 次<xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>に、 <xref:System.Web.UI.WebControls.SiteMapDataSource>コントロールのデータ項目<xref:System.Web.UI.WebControls.TreeView>とコントロールのノードとの間の関係を確立するために、コレクションを定義します。 この例を正しく動作させるには、このコード例の後に示したサンプルのサイトマップデータを、Web.config という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewAutoGenerateBindings#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/CS/treeviewautogeneratebindingscs.aspx#1)]
 [!code-aspx-vb[TreeViewAutoGenerateBindings#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewAutoGenerateBindings/VB/treeviewautogeneratebindingsvb.aspx#1)]  
  
 次のコード例は、前の例のサンプルサイトマップデータを示しています。  
  
```  
<siteMap>  
    <siteMapNode title="Home" description="Home" url="default.aspx">  
        <siteMapNode title="Products" description="Products" url="Products.aspx">  
            <siteMapNode title="Computers" url="Computers.aspx"/>  
            <siteMapNode title="Accessories" url="Accessories.aspx"/>       
        </siteMapNode>  
    </siteMapNode>  
</siteMap>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.DataBindings" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="CheckedNodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection CheckedNodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection CheckedNodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckedNodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ CheckedNodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckedNodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.CheckedNodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択したチェック ボックスを表示する <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロール内のノードを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトのコレクションを取得します。</summary>
        <value>選択したチェック ボックスを表示する <see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 内のノードを格納する <see cref="T:System.Web.UI.WebControls.TreeView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを<xref:System.Web.UI.WebControls.TreeView> 以外`TreeNodeType.None`の値に設定して、コントロールにチェックボックスを表示する場合は、プロパティを使用して、選択したチェックボックスを表示するノードを決定します。<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> このコレクションは、ツリー内でチェックボックスがオンになっているすべてのノードを反復処理するためによく使用されます。  
  
 イベントは、 <xref:System.Web.UI.WebControls.TreeView>コントロールのチェックボックスがサーバーへのポスト間で状態を変更したときに発生します。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  コレクション<xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>には、ツリー構造の深さ優先検査を使用して値が設定されます。各親ノードは、次の親ノードが設定される前に子ノードに処理されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールにチェックボックスがオンになっているノードを判別する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
      </Docs>
    </Member>
    <Member MemberName="CollapseAll">
      <MemberSignature Language="C#" Value="public void CollapseAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CollapseAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub CollapseAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CollapseAll();" />
      <MemberSignature Language="F#" Value="member this.CollapseAll : unit -&gt; unit" Usage="treeView.CollapseAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内のすべてのノードを閉じます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>は、ツリー内のすべてのノードを閉じる便利な方法を提供します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>メソッドを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のすべてのノードを同時に折りたたむ方法を示しています。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageToolTip">
      <MemberSignature Language="C#" Value="public string CollapseImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>折りたたみ可能なノード インジケーターに表示されるイメージのツールヒントを取得または設定します。</summary>
        <value>折りたたみ可能なノード インジケーターに表示されるイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>プロパティを使用して、折りたたみ可能なイメージのツールヒントを指定します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については<xref:System.ComponentModel.LocalizableAttribute> 、「」および「[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>プロパティを使用して、折りたたみ可能なノードインジケーターに表示されるイメージのツールヒントを指定する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="CollapseImageUrl">
      <MemberSignature Language="C#" Value="public string CollapseImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CollapseImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property CollapseImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CollapseImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CollapseImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>折りたたみ可能なノード インジケーターのカスタム イメージの URL を取得または設定します。</summary>
        <value>折りたたみ可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 ("") で、既定のマイナス記号 (-) のイメージを表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 折りたたみ可能<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>なノードインジケーターのカスタムイメージを指定するには、プロパティを使用します。 このイメージは、折りたたみ可能なノードの横に表示され、通常はマイナス記号 (-) です。  
  
 プロパティが<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>に`true`設定されている<xref:System.Web.UI.WebControls.TreeView>場合、コントロールには、ノードの横にプラス記号 (+) またはマイナス記号 (-) またはプレースホルダーイメージが表示され、ノードが展開可能か、折りたたみ可能か、または展開不可能かが示されます。 カスタムイメージを指定するには、最初<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>にプロパティ`TreeViewImageSet.Custom`をに設定し、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>次<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>に、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 、、およびの各プロパティをカスタムイメージの url に設定します。 イメージが指定されていない場合は、既定のイメージが使用されます。 展開ノードのインジケーターを非表示にする<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>には`false`、プロパティをに設定します。  
  
> [!NOTE]
>  カスタムイメージを使用するときに、 <xref:System.Web.UI.WebControls.TreeView>ノードがコントロール内で正しく配置されるようにするには、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>の各プロパティによって指定されたすべてのイメージが同じ大きさであることを確認してください。  
  
 折りたたみ可能なノードインジケーターにカスタムイメージを使用する場合は、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageToolTip%2A>プロパティを設定してイメージのツールヒントを指定することも検討してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>プロパティを使用して、折りたたみ可能なノードインジケーターのカスタムイメージを指定する方法を示しています。 表示するコード例とイメージをコントロールに表示するには、独自のイメージを指定し<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 、プロパティをに`TreeNodeImageSet.Custom`設定する必要があります。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberSignature Language="F#" Value="override this.CreateControlCollection : unit -&gt; System.Web.UI.ControlCollection" Usage="treeView.CreateControlCollection " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを格納するコレクションを作成します。</summary>
        <returns>常に <see cref="T:System.Web.UI.EmptyControlCollection" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.TreeView>は、子コントロールの埋め込みをサポートしていません。 このメソッドは、子コントロールの追加を防止し、常に<xref:System.Web.UI.EmptyControlCollection?displayProperty=nameWithType>オブジェクトを返すようにオーバーライドされています。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.EmptyControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateNode">
      <MemberSignature Language="C#" Value="protected internal virtual System.Web.UI.WebControls.TreeNode CreateNode ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.Web.UI.WebControls.TreeNode CreateNode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.CreateNode" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function CreateNode () As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Web::UI::WebControls::TreeNode ^ CreateNode();" />
      <MemberSignature Language="F#" Value="abstract member CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode&#xA;override this.CreateNode : unit -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.CreateNode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> クラスの新しいインスタンスを返します。 <see cref="M:System.Web.UI.WebControls.TreeView.CreateNode" /> はヘルパー メソッドです。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.TreeNode" /> の新しいインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、 <xref:System.Web.UI.WebControls.TreeNode>クラスの新しいインスタンスを返すヘルパーメソッドです。 <xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>  
  
 メソッド<xref:System.Web.UI.WebControls.TreeView.CreateNode%2A>は、主にコントロールの開発者によって使用されます。 クラスを<xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeNode>拡張してクラスを拡張するコントロール開発者は、このメソッドをオーバーライドして、 <xref:System.Web.UI.WebControls.TreeNode>から派生したオブジェクトを返す必要があります。 <xref:System.Web.UI.WebControls.TreeNode>クラスを拡張する一般的な理由は、メソッド<xref:System.Web.UI.WebControls.TreeNode.RenderPreText%2A>と<xref:System.Web.UI.WebControls.TreeNode.RenderPostText%2A>メソッドをオーバーライドすることです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="treeView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>基本クラスの <see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" /> メソッドを呼び出します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データバインドコントロールは、メソッド<xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A> <xref:System.Web.UI.WebControls.TreeView.DataBind%2A>の代わりにメソッドをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="DataBindings">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeBindingCollection DataBindings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataBindings As TreeNodeBindingCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeBindingCollection ^ DataBindings { System::Web::UI::WebControls::TreeNodeBindingCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataBindings : System.Web.UI.WebControls.TreeNodeBindingCollection" Usage="System.Web.UI.WebControls.TreeView.DataBindings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeViewBindingsEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeBindingCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ項目とそのバインド先のノードとの間の関係を定義する <see cref="T:System.Web.UI.WebControls.TreeNodeBinding" /> オブジェクトのコレクションを取得します。</summary>
        <value>データ項目とそのバインド先のノードとの間の関係を表す <see cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションには<xref:System.Web.UI.WebControls.TreeNodeBinding> 、データ項目とそのバインド先のノードとの間のリレーションシップを定義するオブジェクトが含まれます。 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> 各データ項目に複数のプロパティ (複数の属性を持つ XML 要素など) が含まれているデータソースにバインドする場合、既定では、データ`ToString`項目のメソッドによって返される値がノードに表示されます。 XML 要素の場合、ノードには、ツリーの基になる構造を示す要素名が表示されますが、それ以外の場合はあまり役に立ちません。 ノードを特定のデータ項目プロパティにバインドするには、ツリーノードのバインドを指定します。  
  
 データ項目とノード間のリレーションシップを定義する場合は、バインドの条件と、オブジェクトの<xref:System.Web.UI.WebControls.TreeNode>プロパティにバインドする値の両方を指定する必要があります。 条件は、データ項目をノードにバインドする必要があることを示します。 条件は、ノードの深さ、データメンバー、またはその両方で指定できます。 ノードの深さは、バインドされるノードレベルを指定します。 たとえば、ノードの深さを0に指定すると、レベル0のツリー構造内のすべてのノードが、ツリーノードのバインドを使用してバインドされます。 データメンバーは、基になるデータソースのデータ項目の種類を指定しますが、データソースによって異なる情報を表すことができます。 たとえば、XML 要素のデータメンバーは、要素の名前を指定します。  
  
 競合する<xref:System.Web.UI.WebControls.TreeNodeBinding>複数のオブジェクトが定義されている場合<xref:System.Web.UI.WebControls.TreeView> 、コントロールは次の優先順位でツリーノードのバインドを適用します。  
  
1.  深度とデータメンバーの両方を定義するオブジェクト。<xref:System.Web.UI.WebControls.TreeNodeBinding>  
  
2.  深さのみを定義するオブジェクト。<xref:System.Web.UI.WebControls.TreeNodeBinding>  
  
3.  データメンバーのみを定義するオブジェクト。<xref:System.Web.UI.WebControls.TreeNodeBinding>  
  
4.  深さもデータメンバーも定義しないオブジェクト。<xref:System.Web.UI.WebControls.TreeNodeBinding>  
  
 同じ優先順位条件を満たす複数のバインドが指定されている場合、コレクション内の最初のバインドが適用されます。  
  
 バインド条件が確立されたら、値にバインドできる<xref:System.Web.UI.WebControls.TreeNode>オブジェクトのプロパティをバインドできます。 データ項目の属性またはフィールドにバインドすることも、静的な値を表示することもできます。 <xref:System.Web.UI.WebControls.TreeNode>オブジェクトのプロパティを値にバインドする方法の詳細については<xref:System.Web.UI.WebControls.TreeNodeBinding>、「」を参照してください。  
  
 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションはプログラムによって設定できますが、通常は宣言によって設定されます。 ツリーノードのバインドを指定するには、まず、 `<DataBindings>` <xref:System.Web.UI.WebControls.TreeView>コントロールの開始タグと終了タグの間に開始タグと終了タグを入れ子にします。 次に、 `<asp:TreeNodeBinding>`指定する各ツリーノードバインド`<DataBindings>`の開始タグと終了タグの間に要素を配置します。  
  
 <xref:System.Web.UI.WebControls.TreeView.AutoGenerateDataBindings%2A> `true`コントロールのプロパティをに設定することによってデータバインディングを作成すると<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A> 、作成されるバインディングでは`true`、プロパティがに設定されます。 <xref:System.Web.UI.WebControls.TreeView> 宣言によって作成されるデータ<xref:System.Web.UI.WebControls.TreeNodeBinding.PopulateOnDemand%2A>バインディングでは`false`、プロパティがに設定されます。 宣言型の構文を使用すると、個々のデータバインディングの動作を制御できます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例は、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを使用して、データ項目とそのバインド先のノードとの間のリレーションシップを定義する方法を示しています。 2番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>コレクションを使用して、データ項目とそのバインド先のノードとの間のリレーションシップを定義する方法を示しています。 この例を正しく動作させるには、このコード例の後に記載されているサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。 この例で<xref:System.Web.UI.WebControls.TreeNodeBinding.DataMember%2A>は、バインディングのプロパティだけを指定します。 <xref:System.Web.UI.WebControls.TreeNodeBinding.Depth%2A>プロパティを指定することによって、わずかなパフォーマンスの向上を追加することもできます。  
  
 [!code-aspx-csharp[TreeViewXml#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewXml/CS/treeviewxmlcs.aspx#1)]
 [!code-aspx-vb[TreeViewXml#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewXml/VB/treeviewxmlvb.aspx#1)]  
  
 次のコード例は、前の例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBinding" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeBindingCollection" />
      </Docs>
    </Member>
    <Member MemberName="EnableClientScript">
      <MemberSignature Language="C#" Value="public bool EnableClientScript { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableClientScript" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableClientScript As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableClientScript { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableClientScript : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.EnableClientScript" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールがクライアント側のスクリプトを表示して、イベントの展開と折りたたみを処理するかどうかを示す値を取得または設定します。</summary>
        <value>互換性のあるブラウザーにクライアント側のスクリプトを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用して、コントロール<xref:System.Web.UI.WebControls.TreeView>が互換性のあるブラウザーでクライアント側スクリプトをレンダリングして、イベントの展開と折りたたみを処理するかどうかを指定します。 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A> このプロパティがに`true`設定されている場合、互換性のあるブラウザーでは、クライアント上のノードを展開したり折りたたんだりするためのコードを実行します。 クライアント側スクリプトを機能させるには、ツリーノードデータを事前に把握しておく必要があります。 クライアントスクリプトを使用すると、ノードが展開または折りたたまれるたびにサーバーへのポストバックが行われなくなります。  
  
 ツリーノードのデータが事前に認識されていない場合、 `PopulateNodesFromClient`プロパティもに`true`設定されていると、クライアントからノードを設定できます。 このシナリオでは、 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベントのイベント処理メソッドを指定してノードにデータを設定する必要もあります。 クライアント側のノードの作成の詳細について<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>は、「」を参照してください。  
  
> [!NOTE]
>  プロパティが<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>に`false`設定されている<xref:System.Web.UI.WebControls.TreeView>場合、コントロールはノードが展開または折りたたまれるたびにサーバーにポストバックされます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については<xref:System.Web.UI.ThemeableAttribute> 、「」および「 [ASP.NET theme and スキン](https://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)」を参照してください。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティを使用して、互換性のあるブラウザーでノードを展開および折りたたむために使用されるクライアント側のスクリプトを表示する方法を示します。 2番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例では、プロパティを<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>使用して、互換性のあるブラウザーでノードを展開および折りたたむために使用されるクライアント側のスクリプトを表示する方法を示します。 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティがに`false`設定されている場合は、ノードを展開したり折りたたんだりするために、サーバーへのポストが必要であることに注意してください。 この例を正しく動作させるには、このコード例の後に記載されているサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewEnableClientScript#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewEnableClientScript/CS/treeviewenableclientscriptcs.aspx#1)]
 [!code-aspx-vb[TreeViewEnableClientScript#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewEnableClientScript/VB/treeviewenableclientscriptvb.aspx#1)]  
  
 次のコード例は、前のコード例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      </Docs>
    </Member>
    <Member MemberName="ExpandAll">
      <MemberSignature Language="C#" Value="public void ExpandAll ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ExpandAll() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
      <MemberSignature Language="VB.NET" Value="Public Sub ExpandAll ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ExpandAll();" />
      <MemberSignature Language="F#" Value="member this.ExpandAll : unit -&gt; unit" Usage="treeView.ExpandAll " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ツリー内のすべてのノードを開きます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>メソッドを使用すると、ツリー内のすべてのノードを簡単に開くことができます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>メソッドを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のすべてのノードを同時に展開する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewExpandAll#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewExpandAll/CS/treeviewexpandallcs.aspx#1)]
 [!code-aspx-vb[TreeViewExpandAll#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewExpandAll/VB/treeviewexpandallvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandDepth">
      <MemberSignature Language="C#" Value="public int ExpandDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ExpandDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int ExpandDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.TreeView/TreeViewExpandDepthConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールが初めて表示されたときに展開されるレベル数を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeView" /> が最初に表示されるときの表示の深さ。 既定値は -1 です。すべてのノードが表示されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールが初めて表示されるときのレンダリングを制御します。 <xref:System.Web.UI.WebControls.TreeView.ExpandDepth%2A> 後続のポストバックでは、ノードは現在の展開された状態を保持します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.ExpandAll" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.CollapseAll" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageToolTip">
      <MemberSignature Language="C#" Value="public string ExpandImageToolTip { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageToolTip" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageToolTip As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageToolTip { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageToolTip : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>展開可能なノード インジケーターに表示されるイメージのツールヒントを取得または設定します。</summary>
        <value>展開可能なノード インジケーターに表示されるイメージのツールヒント。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>プロパティを使用して、イメージのツールヒントを指定します。 指定したテキストによって、補助技術デバイスにイメージの説明が表示され、コントロールをより使いやすくすることができます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については<xref:System.ComponentModel.LocalizableAttribute> 、「」および「[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>プロパティを使用して、展開可能なノードインジケーターに表示されるイメージのツールヒントを指定する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageToolTip" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      </Docs>
    </Member>
    <Member MemberName="ExpandImageUrl">
      <MemberSignature Language="C#" Value="public string ExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property ExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>展開可能なノード インジケーターのカスタム イメージの URL を取得または設定します。</summary>
        <value>展開可能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 ("") で、既定の正符号 (+) のイメージを表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>プロパティを使用して、展開可能なノードインジケーターのカスタムイメージを指定します。 このイメージは、展開可能なノードの横に表示され、通常はプラス記号 (+) です。  
  
 プロパティが<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>に`true`設定されている<xref:System.Web.UI.WebControls.TreeView>場合、コントロールには、ノードの横に正符号 (+) またはマイナス記号 (-) またはプレースホルダーイメージが表示され、ノードが展開可能か、折りたたみ可能か、または展開不可能かが示されます。 カスタムイメージを指定するには、最初<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>にプロパティ`TreeViewImageSet.Custom`をに設定し、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>次<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>に、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 、、およびの各プロパティをカスタムイメージの url に設定します。 イメージが指定されていない場合は、既定のイメージが使用されます。 展開ノードのインジケーターを非表示にする<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>には`false`、プロパティをに設定します。  
  
> [!NOTE]
>  カスタムイメージを使用するときに、 <xref:System.Web.UI.WebControls.TreeView>ノードがコントロール内で正しく配置されるようにするには、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>の各プロパティによって指定されたすべてのイメージが同じ大きさであることを確認してください。  
  
 カスタムイメージを正しく表示するには、をに<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A> `false`設定する必要がある場合があります。  
  
 展開可能なノードインジケーターにカスタムイメージを使用する場合は、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageToolTip%2A>プロパティを設定してイメージのツールヒントを指定することも検討してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>プロパティを使用して、展開可能なノードインジケーターのカスタムイメージを指定する方法を示しています。 表示するコード例とイメージをコントロールに表示するには、独自のイメージを指定し<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 、プロパティをに`TreeNodeImageSet.Custom`設定する必要があります。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageToolTip" />
      </Docs>
    </Member>
    <Member MemberName="FindNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode FindNode (string valuePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.WebControls.TreeNode FindNode(string valuePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.FindNode(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function FindNode (valuePath As String) As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::TreeNode ^ FindNode(System::String ^ valuePath);" />
      <MemberSignature Language="F#" Value="member this.FindNode : string -&gt; System.Web.UI.WebControls.TreeNode" Usage="treeView.FindNode valuePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="valuePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="valuePath">ノードの値パス。</param>
        <summary>指定された値パスにある <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロール内の <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトを取得します。</summary>
        <returns>指定した値パスにある <see cref="T:System.Web.UI.WebControls.TreeNode" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、指定した<xref:System.Web.UI.WebControls.TreeView>値のパスにあるコントロールからノードを取得します。 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A> 値パスには、ルートノードから現在のノードへのパスを形成するノード値の区切り記号で区切られたリストが含まれます。 各ノードには、プロパティに値<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>のパスが格納されます。 プロパティ<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>は、ノード値を区切るために使用される区切り文字を指定します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.FindNode%2A>メソッドを使用して<xref:System.Web.UI.WebControls.TreeView>コントロールからノードを取得する方法を示しています。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[TreeViewFindNode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewFindNode/CS/treeviewfindnodecs.aspx#1)]
 [!code-aspx-vb[TreeViewFindNode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewFindNode/VB/treeviewfindnodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      </Docs>
    </Member>
    <Member MemberName="GetCallbackResult">
      <MemberSignature Language="C#" Value="protected virtual string GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetCallbackResult () As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ GetCallbackResult();" />
      <MemberSignature Language="F#" Value="abstract member GetCallbackResult : unit -&gt; string&#xA;override this.GetCallbackResult : unit -&gt; string" Usage="treeView.GetCallbackResult " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.TreeView>は、 <xref:System.Web.UI.ICallbackEventHandler>インターフェイスを実装し、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>を使用してデータ<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>を取得し、メソッドを使用して取得したデータをコントロールに返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HoverNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style HoverNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style HoverNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HoverNodeStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ HoverNodeStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HoverNodeStyle : System.Web.UI.WebControls.Style" Usage="System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>マウス ポインターが上に置かれているときのノードの外観を設定できる、<see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> オブジェクトへの参照を取得します。</summary>
        <value>マウス ポインターが上に置かれているときのノードのスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティを使用して、マウスポインターが上に置かれているときのノードの外観を制御します。 このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定できます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `HoverNodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `HoverNodeStyle.ForeColor`)。 この機能は、スクリプト対応のクライアントでのみサポートされています。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティを使用するには、 `runat="server"`属性を`<head>`持つ要素を含める必要があります。  
  
 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルのプロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティのスタイル設定は<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>、、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A> 、、またはプロパティにある、対応するすべてのノードスタイル設定よりも優先されます。 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>  
  
 プロパティ<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>がに<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> 設定されているノードでは、プロパティはレンダリングさ`TreeNodeSelectAction.None`れません。  
  
 <xref:System.Web.UI.WebControls.TreeNodeStyle> <xref:System.Web.UI.WebControls.Style>オブジェクトである<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>およびプロパティとは異なり、プロパティはオブジェクトです。<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>プロパティを使用して、マウスポインターが上に置かれているときのノードの外観を制御する方法を示しています。 この例を使用するには、 `<head>` `runat="server"`属性を持つ要素を含める必要があります。  
  
 [!code-aspx-csharp[TreeViewHoverNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewHoverNodeStyle/CS/treeviewhovernodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewHoverNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewHoverNodeStyle/VB/treeviewhovernodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      </Docs>
    </Member>
    <Member MemberName="ImageSet">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeViewImageSet ImageSet { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeViewImageSet ImageSet" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberSignature Language="VB.NET" Value="Public Property ImageSet As TreeViewImageSet" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeViewImageSet ImageSet { System::Web::UI::WebControls::TreeViewImageSet get(); void set(System::Web::UI::WebControls::TreeViewImageSet value); };" />
      <MemberSignature Language="F#" Value="member this.ImageSet : System.Web.UI.WebControls.TreeViewImageSet with get, set" Usage="System.Web.UI.WebControls.TreeView.ImageSet" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeViewImageSet</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールに使用するイメージのグループを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 値のいずれか 1 つ。 既定値は、<see langword="TreeViewImageSet.Custom" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールに使用するイメージのグループを指定します。 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 定義済みのイメージのセットを選択して、コントロールに標準の外観を提供するか、独自のカスタムセットを定義することができます。  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>は、ノードのスタイル設定には影響しません。 カスタムの色と間隔を追加する場合<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>は、プロパティなど、適切なスタイルプロパティを設定します。  
  
 次の表に、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティの有効な値を示します。  
  
|イメージセット|説明|  
|---------------|-----------------|  
|`TreeViewImageSet.Arrows`|矢印イメージを使用する定義済みのイメージセット。|  
|`TreeViewImageSet.BulletedList`|ひし形の箇条書き画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.BulletedList2`|正方形の箇条書き画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.BulletedList3`|区分けされている、菱形の行頭文字イメージの定義済みセット。|  
|`TreeViewImageSet.BulletedList4`|区分けされ、レベルに応じてサイズが異なる、菱形の行頭文字イメージの別の定義済みセット。|  
|`TreeViewImageSet.Contacts`|MSN Messenger イメージを使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Custom`|ユーザー定義のイメージセット。|  
|`TreeViewImageSet.Events`|イベントログスタイルの画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Faq`|FAQ スタイルの画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Inbox`|電子メールスタイルの画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.News`|ニュースグループスタイルの画像を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Simple`|単純な図形のアウトラインを使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Simple2`|単純な塗りつぶされた図形を使用する定義済みのイメージセット。|  
|`TreeViewImageSet.Msdn`|MSDN イメージを使用する定義済みのイメージセット。|  
|`TreeViewImageSet.WindowsHelp`|Microsoft Windows ヘルプイメージを使用する定義済みのイメージセット。|  
|`TreeViewImageSet.XPFileExplorer`|Microsoft Windows XP で使用可能な Windows エクスプローラーイメージを使用する定義済みのイメージセット。|  
  
 イメージのカスタムセットを定義する場合は、次の表の各プロパティのイメージを指定する必要があります。 それ以外の場合は、そのプロパティの既定のイメージが使用されます。  
  
|プロパティ|説明|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>|折りたたみ可能なノードインジケーターのカスタムイメージの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>|展開可能なノードインジケーターのカスタムイメージの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>|ノードを接続する線のカスタムイメージが格納されているフォルダーの URL。|  
|<xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>|展開できないノードインジケーターのカスタムイメージの URL。|  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内の Windows エクスプローラーのイメージセットを表示する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewImageSet#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewImageSet/CS/treeviewimagesetcs.aspx#1)]
 [!code-aspx-vb[TreeViewImageSet#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewImageSet/VB/treeviewimagesetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定されたイメージ セットが、<see cref="T:System.Web.UI.WebControls.TreeViewImageSet" /> 値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="LeafNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle LeafNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LeafNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ LeafNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LeafNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>葉ノードの外観を設定できる <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> の葉ノードのスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール内のリーフノードの外観を制御するには、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeView> このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定することはできます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `LeafNodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `LeafNodeStyle.ForeColor`)。 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルプロパティは、次の優先順位に従って適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 目次スタイルのナビゲーションメニューを生成する必要がある場合は、特定のレベルのノードが子ノードを持っているかどうかに関係なく、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティを使用することを検討してください。スタイルのプロパティ。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のリーフノードの外観を制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewLeafNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLeafNodeStyle/CS/treeviewleafnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewLeafNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLeafNodeStyle/VB/treeviewleafnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LevelStyles">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyleCollection LevelStyles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LevelStyles As TreeNodeStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyleCollection ^ LevelStyles { System::Web::UI::WebControls::TreeNodeStyleCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.LevelStyles : System.Web.UI.WebControls.TreeNodeStyleCollection" Usage="System.Web.UI.WebControls.TreeView.LevelStyles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeStyleCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyleCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードのスタイルをツリーのレベル別に表す <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトのコレクションを取得します。</summary>
        <value>ノードのスタイルをツリーのレベル別に表す <see cref="T:System.Web.UI.WebControls.StyleCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コレクションは<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A> 、個々のスタイルプロパティ ( <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティなど) の代わりに使用して、ツリーの個々のレベルにあるノードのスタイルを制御します。 コレクションの最初のスタイルは、ツリーの最初のレベルのノードのスタイルに対応します。 コレクションの2番目のスタイルは、ツリーの2番目のレベルのノードのスタイルに対応します。 このプロパティは、子ノードがあるかどうかに関係なく、特定のレベルのノードが同じ外観を持つ、目次スタイルのナビゲーションメニューを生成するために最もよく使用されます。  
  
 スタイルのプロパティは、次の順序で適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>  
  
   
  
## Examples  
 次のコード例は、プロパティを使用<xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>してナビゲーションメニューを作成する方法を示しています。 コントロールは常に完全に展開され、展開ノードのインジケーターとイメージは非表示になります。 また、プロパティを使用して、ノードレベルの間隔を制御します。 <xref:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding%2A>  
  
 [!code-aspx-csharp[TreeViewLevelStyles#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLevelStyles/CS/treeviewlevelstylescs.aspx#1)]
 [!code-aspx-vb[TreeViewLevelStyles#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLevelStyles/VB/treeviewlevelstylesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.StyleCollection" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LineImagesFolder">
      <MemberSignature Language="C#" Value="public string LineImagesFolder { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string LineImagesFolder" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberSignature Language="VB.NET" Value="Public Property LineImagesFolder As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ LineImagesFolder { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.LineImagesFolder : string with get, set" Usage="System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子ノードを親ノードに接続するために使用される線のイメージを格納するフォルダーのパスを取得または設定します。</summary>
        <value>ノードを接続するために使用される線のイメージを格納するフォルダーのパス。 既定値は空の文字列 ("") です。<see cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.TreeView>は、プロパティがに`true`設定されて<xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>いる場合に、子ノードを親ノードに接続する線を表示できます。 行が表示されている<xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>場合は、プロパティを使用して、行に使用する事前レンダリングされたイメージのセットを含む Web アクセス可能なフォルダーを指定します。 次の表では、 <xref:System.Web.UI.WebControls.TreeView>コントロールで使用されるイメージについて説明します。  
  
|イメージ|説明|  
|-----------|-----------------|  
|ダッシュ .gif|ツリー構造にルートノードが1つだけ存在し、ルートノードがリーフの場合、ルートノードの横に表示される線イメージ。|  
|ダッシュのマイナス .gif|ルートノードが展開されていることを示すルートノードがツリー構造内に1つしかない場合に、ルートノードの横にマイナス記号 (-) イメージが表示されます。|  
|ダッシュ + .gif|ルートノードが折りたたまれていることを示すルートノードがツリー構造内に1つしかない場合に、ルートノードの横に正符号 (+) のイメージが表示されます。|  
|I. .gif|隣接するノードを接続するために表示される線のイメージ。|  
|L .gif|ノードがリーフの場合に分岐の最後のノードの横に表示される線イメージ。|  
|Lminus .gif|ノードが展開されていることを示すために分岐の最後のノードの横に表示される線イメージ。|  
|Lplus .gif|ノードが折りたたまれていることを示すために分岐の最後のノードの横に表示される線イメージ。|  
|-.Gif|ノードが展開されていることを示すために複数のルートノードを含むツリー構造内の最初のルートノードの横に表示されるマイナス記号 (-) イメージ。 このイメージには余分な行が含まれておらず、ルートノードが1回折りたたまれた後にのみ表示されます。 ページが最初に読み込まれると、Rminus gif イメージが表示されます。|  
|Noexpand. gif|リーフノードの横に表示される空白のスペーサーイメージ。 この画像を使用すると、テキストを垂直方向に整列させることができます。|  
|および .gif|ノードが折りたたまれていることを示すために複数のルートノードを含むツリー構造内の最初のルートノードの横に表示される正符号 (+) のイメージ。 このイメージには余分な行が含まれておらず、ルートノードが1回展開された後にのみ表示されます。 ページが最初に読み込まれると、Rplus .gif イメージが表示されます。|  
|R .gif|ノードがリーフノードであることを示すために複数のルートノードを含むツリー構造内の最初のルートノードの横に表示される線イメージ。|  
|Rminus.gif|ノードが展開されていることを示すために複数のルートノードを含むツリー構造内の最初のルートノードの横に表示されるマイナス記号 (-) イメージ。 このイメージには余分な行が含まれており、ページが最初に読み込まれたときにのみ表示されます。 ルートノードが1回折りたたまれると、-.gif イメージが表示されます。|  
|Rplus .gif|ノードが折りたたまれていることを示すために複数のルートノードを含むツリー構造内の最初のルートノードの横に表示される正符号 (+) のイメージ。 このイメージには余分な行が含まれており、ページが最初に読み込まれたときにのみ表示されます。 ルートノードが1回展開されると、プラス .gif イメージが表示されます。|  
|T .gif|ノードがリーフであることを示すために、ツリー構造の途中 (t の積集合) のノードの横に表示される線イメージ。|  
|Tminus.gif|ノードが展開されていることを示す、ツリー構造の途中 (t の積集合) のノードの横に表示されるマイナス記号 (-) イメージ。|  
|Tplus .gif|ノードが折りたたまれていることを示すために、ツリー構造の途中 (t の積集合) のノードの横に表示される正符号 (+) のイメージ。|  
  
> [!NOTE]
>  プロパティが設定されていない<xref:System.Web.UI.WebControls.TreeView>場合、コントロールは組み込みの既定のイメージ (20 ×20ピクセル) を使用します。 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>  
  
 Microsoft Visual Studio などのビジュアルデザイナーの中には、線の画像を生成するためのツールが用意されています。  
  
 実行時には、右から左へ表示するためのカスタムイメージは反転されません。 左から右方向と右から左方向の両方の Web ページをサポートするには、両方向のイメージセットを作成する必要があります。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールに表示する線イメージを含むフォルダーを指定する方法を示しています。 この例を使用するには、事前にラインデザイナーツールを使用して、一連の線イメージを作成します。 サンプルアプリケーションのディレクトリ内の LineImages という名前のフォルダーに配置します。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowLines" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="LoadPostData">
      <MemberSignature Language="C#" Value="protected virtual bool LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection);" />
      <MemberSignature Language="F#" Value="abstract member LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool&#xA;override this.LoadPostData : string * System.Collections.Specialized.NameValueCollection -&gt; bool" Usage="treeView.LoadPostData (postDataKey, postCollection)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信する名前と値すべてのコレクション。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>ポストバック イベントの結果、<see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET page framework は、 `true` <xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A>メソッド呼び出しから返されるすべてのサーバーコントロールを追跡し、それらの<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>コントロールに対してメソッドを呼び出します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="treeView.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">コントロールについて前回保存されたビューステートの値を格納しているオブジェクト。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxDataBindDepth">
      <MemberSignature Language="C#" Value="public int MaxDataBindDepth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxDataBindDepth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxDataBindDepth As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxDataBindDepth { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxDataBindDepth : int with get, set" Usage="System.Web.UI.WebControls.TreeView.MaxDataBindDepth" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールにバインドされるツリー レベルの最大数を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールにバインドされるツリー レベルの最大数。 既定値は -1 で、データ ソース内のすべてのツリー レベルをコントロールにバインドします。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールをデータソースにバインドする場合は、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>プロパティを使用して、コントロールにバインドするツリーレベルの数を制限します。 たとえば、このプロパティをに設定`2`すると、ルートノードと、ルートノードの直下にあるすべてのノードのみ<xref:System.Web.UI.WebControls.TreeView>がコントロールにバインドされます。 データソース内の残りのすべてのノードは無視されます。  
  
> [!IMPORTANT]
>  悪意のあるユーザーがコールバック要求を作成し、ページ開発者が<xref:System.Web.UI.WebControls.TreeView>表示していないコントロールのノードのデータを取得することができます。 そのため、データソースによってデータのセキュリティが実装されている必要があります。 データを非表示<xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>にするには、プロパティを使用しないでください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>プロパティを使用して、最初の2つのノードレベル (深度0と 1) のみを<xref:System.Web.UI.WebControls.TreeView>コントロールにバインドする方法を示します。 2番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.MaxDataBindDepth%2A>プロパティを使用して、最初の2つのノードレベル (深度0と 1) のみを<xref:System.Web.UI.WebControls.TreeView>コントロールにバインドする方法を示しています。 データソース内のすべてのノードレベルは無視されます。 この例を正しく動作させるには、このコード例の後に記載されているサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。  
  
 [!code-aspx-csharp[TreeViewMaxDataBindDepth#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/CS/treeviewmaxdatabinddepthcs.aspx#1)]
 [!code-aspx-vb[TreeViewMaxDataBindDepth#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewMaxDataBindDepth/VB/treeviewmaxdatabinddepthvb.aspx#1)]  
  
 次のコード例は、前のコード例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see langword="-1" /> 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandDepth" />
      </Docs>
    </Member>
    <Member MemberName="NodeIndent">
      <MemberSignature Language="C#" Value="public int NodeIndent { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 NodeIndent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeIndent As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int NodeIndent { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.NodeIndent : int with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeIndent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(20)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの子ノードのインデント幅 (ピクセル単位) を取得または設定します。</summary>
        <value>子ノードの左端と親ノードの左端の間隔 (ピクセル単位)。 既定値は 20 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>プロパティを使用して、子ノードの左端とその親ノードの左端との間隔を制御します。  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>は、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のすべての子ノードに影響します。 各ノードのインデント量を個別に制御することはできません。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.NodeIndent%2A>プロパティを使用して子ノードのインデントを制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewNodeIndent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeIndent/CS/treeviewnodeindentcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeIndent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeIndent/VB/treeviewnodeindentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.ChildNodesPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.HorizontalPadding" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.NodeSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeStyle.VerticalPadding" />
      </Docs>
    </Member>
    <Member MemberName="Nodes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeCollection Nodes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeCollection Nodes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Nodes As TreeNodeCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeCollection ^ Nodes { System::Web::UI::WebControls::TreeNodeCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Nodes : System.Web.UI.WebControls.TreeNodeCollection" Usage="System.Web.UI.WebControls.TreeView.Nodes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.TreeNodeCollectionEditor,System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールのルート ノードを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトのコレクションを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeCollection" /> 内のルート ノードを格納している <see cref="T:System.Web.UI.WebControls.TreeView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeNodeCollection>ツリー内のすべてのルートノードを含むオブジェクトを取得します。 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A> このコレクションは、すべてのルートノードをすばやく反復処理したり、ツリー内の特定のルートノードにアクセスしたりするためによく使用されます。  
  
> [!NOTE]
>  一般的なツリー構造にはルートノードが1つだけあります。ただし、 <xref:System.Web.UI.WebControls.TreeView>コントロールに複数のルートノードを追加することはできます。  
  
 プロパティ<xref:System.Web.UI.WebControls.TreeView.Nodes%2A>は、ツリー内のルートノードをプログラムで管理するためにも使用できます。 コレクションに対してオブジェクトの追加、挿入、 <xref:System.Web.UI.WebControls.TreeNode>削除、および取得を行うことができます。 コレクションの更新は、サーバーへの次の<xref:System.Web.UI.WebControls.TreeView>ラウンドトリップ後に、コントロールに自動的に反映されます。  
  
 ルートノードの子ノードにアクセスするには、ノード<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>のプロパティを使用します。 後続の各親レベルノードのプロパティを使用して、ノードレベルを下に移動します。<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.Nodes%2A>プロパティを使用してツリーを走査する方法を示しています。  
  
 [!code-aspx-csharp[TreeNodeCollectionCount#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeNodeCollectionCount/CS/treenodecollectioncountcs.aspx#1)]
 [!code-aspx-vb[TreeNodeCollectionCount#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeNodeCollectionCount/VB/treenodecollectioncountvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeCollection" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ChildNodes" />
      </Docs>
    </Member>
    <Member MemberName="NodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle NodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle NodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ NodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.NodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.NodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールのノードの既定の外観を設定できるようにする <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトへの参照を取得します。</summary>
        <value>ノードの既定のスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールの<xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>ノードの既定の外観を制御するには、プロパティを使用します。 このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定することはできます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `NodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `NodeStyle.ForeColor`)。 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルプロパティは、次の優先順位に従って適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>、 <xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A> 、またはプロパティの対応するノードスタイル設定は、プロパティのスタイル設定よりも優先されます。 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>  
  
 目次スタイルのナビゲーションメニューを生成する必要がある場合は、特定のレベルのノードが子ノードを持っているかどうかに関係なく、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティを使用することを検討してください。スタイルのプロパティ。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールのノードの外観を制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeStyle/CS/treeviewnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeStyle/VB/treeviewnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="NodeWrap">
      <MemberSignature Language="C#" Value="public bool NodeWrap { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool NodeWrap" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberSignature Language="VB.NET" Value="Public Property NodeWrap As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool NodeWrap { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.NodeWrap : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.NodeWrap" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノードの領域が不足している場合、ノードのテキストを折り返すかどうかを示す値を取得または設定します。</summary>
        <value>テキストを折り返す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>プロパティを使用して、領域が不足したときに各ノードに表示されるテキストを折り返すかどうかを指定します。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.NodeWrap%2A>プロパティを使用して<xref:System.Web.UI.WebControls.TreeView>コントロールのテキストをラップする方法を示しています。  
  
 [!code-aspx-csharp[TreeViewNodeWrap#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewNodeWrap/CS/treeviewnodewrapcs.aspx#1)]
 [!code-aspx-vb[TreeViewNodeWrap#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewNodeWrap/VB/treeviewnodewrapvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.WebControl.Font" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeIndent" />
      </Docs>
    </Member>
    <Member MemberName="NoExpandImageUrl">
      <MemberSignature Language="C#" Value="public string NoExpandImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NoExpandImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Property NoExpandImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ NoExpandImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NoExpandImageUrl : string with get, set" Usage="System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>展開不能なノード インジケーターのカスタム イメージの URL を取得または設定します。</summary>
        <value>展開不能なノードに表示されるカスタム イメージの URL。 既定値は空の文字列 ("") で、既定の空のイメージを表示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>プロパティを使用して、展開できないノードインジケーターのカスタムイメージを指定します。 拡張可能なノードインジケーターイメージ (またはスペーサー) は、リーフノードを親ノードまたはルートノードに揃えるために、リーフノードの横 (展開可能および折りたたみ可能なノードインジケーターの代わり) に表示されます。  
  
 プロパティが<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>に`true`設定されている<xref:System.Web.UI.WebControls.TreeView>場合、コントロールには、ノードの横に正符号 (+) またはマイナス記号 (-) またはプレースホルダーイメージが表示され、ノードが展開可能か、折りたたみ可能か、または展開不可能かが示されます。 カスタムイメージを指定するには、最初<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>にプロパティ`TreeViewImageSet.Custom`をに設定し、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>次<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>に、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 、、およびの各プロパティをカスタムイメージの url に設定します。 イメージが指定されていない場合は、既定のイメージが使用されます。 展開ノードのインジケーターを非表示にする<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>には`false`、プロパティをに設定します。  
  
> [!NOTE]
>  カスタムイメージを使用するときに、 <xref:System.Web.UI.WebControls.TreeView>ノードがコントロール内で正しく配置されるようにするには、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>、 <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>、および<xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>の各プロパティによって指定されたすべてのイメージが同じ大きさであることを確認してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>プロパティを使用して、展開できないノードインジケーターのカスタムイメージを指定する方法を示しています。 表示するコード例とイメージをコントロールに表示するには、独自のイメージを指定し<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A> 、プロパティをに`TreeNodeImageSet.Custom`設定する必要があります。  
  
 [!code-aspx-csharp[TreeViewCustomImage#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCustomImage/CS/treeviewcustomimagecs.aspx#1)]
 [!code-aspx-vb[TreeViewCustomImage#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCustomImage/VB/treeviewcustomimagevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ImageSet" />
        <altmember cref="T:System.Web.UI.WebControls.TreeViewImageSet" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="treeView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、 <xref:System.Web.UI.Control.Init>イベントを発生<xref:System.Web.UI.WebControls.TreeView>させるためにコントロールによって呼び出されます。 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> 通常、このクラスは、クラスを<xref:System.Web.UI.WebControls.TreeView>拡張するときにコントロールの開発者によって使用されます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnInit(System.EventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="treeView.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A>は、ポストバックに登録するためにオーバーライドされます。 クライアントスクリプトが有効になっている場合は、必要なスクリプトと非表示フィールドもレンダリングされます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnPreRender%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnPreRender(System.EventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="OnSelectedNodeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnSelectedNodeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSelectedNodeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSelectedNodeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSelectedNodeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnSelectedNodeChanged : EventArgs -&gt; unit&#xA;override this.OnSelectedNodeChanged : EventArgs -&gt; unit" Usage="treeView.OnSelectedNodeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが選択されたときに発生します。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新などのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 必要に応じて、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティを設定して、そのノードが選択されたときに発生するイベントを指定できます。  
  
> [!NOTE]
>  は<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティがに`TreeNodeSelectAction.None`設定されたノードに対してはレンダリングされません。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCheckChanged (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCheckChanged(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCheckChanged (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCheckChanged(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCheckChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは、 <xref:System.Web.UI.WebControls.TreeView>コントロールのチェックボックスがサーバーへのポスト間で状態を変更したときに発生します。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラス<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />でをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeCollapsed">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeCollapsed (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeCollapsed(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeCollapsed (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeCollapsed(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeCollapsed e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが折りたたまれたときに発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeDataBound (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeDataBound(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeDataBound (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeDataBound(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeDataBound e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>は、データ項目が<xref:System.Web.UI.WebControls.TreeView>コントロール内のノードにバインドされると発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodeExpanded">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodeExpanded (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodeExpanded(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodeExpanded (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodeExpanded(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodeExpanded e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが展開されるときに発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand> <xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand> <xref:System.Web.UI.WebControls.TreeView>ノードの<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティがまたはに設定されている場合は、コントロールでそのノードがクリックされたときにもイベントが発生します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="OnTreeNodePopulate">
      <MemberSignature Language="C#" Value="protected virtual void OnTreeNodePopulate (System.Web.UI.WebControls.TreeNodeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnTreeNodePopulate(class System.Web.UI.WebControls.TreeNodeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnTreeNodePopulate (e As TreeNodeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnTreeNodePopulate(System::Web::UI::WebControls::TreeNodeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit&#xA;override this.OnTreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventArgs -&gt; unit" Usage="treeView.OnTreeNodePopulate e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.TreeNodeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.TreeNodeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" /> コントロールの <see cref="T:System.Web.UI.WebControls.TreeView" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、ユーザー入力に依存するデータサイズやカスタムコンテンツによってツリー構造を静的に定義するのは現実的ではありません。 このため、コントロールは<xref:System.Web.UI.WebControls.TreeView>動的なノードの作成をサポートしています。 `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティをに設定すると、ノードが展開されるときに、実行時にそのノードが設定されます。  
  
 ノードを動的に設定するには、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>まずノードのプロパティを`true`に設定します。 次に、プログラムを使用してノードを<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>設定するイベントのイベント処理メソッドを定義します。 一般的なイベント処理メソッドは、データソースからノードデータを取得し、データをノード構造に配置した後、作成されるノード<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>のコレクションにノード構造を追加します。 ノード構造は、親ノードの<xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>コレクションにオブジェクトを追加することによって作成されます。  
  
> [!NOTE]
>  `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティがに設定されている場合は、ノードを動的に設定する必要があります。 その下にある別のノードを宣言によって入れ子にすることはできません。それ以外の場合は、ページでエラーが発生します。  
  
 サポートされているブラウザー (Microsoft Internet Explorer 4.0 互換のブラウザー以降) では、クライアント側のノードの作成も利用できます。 有効にすると、 <xref:System.Web.UI.WebControls.TreeView>コントロールは、ノードが展開されたときにクライアント上のノードを動的に設定できます。これにより、サーバーにポストバックする必要がなくなります。 クライアント側のノードの作成の詳細について<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>は、「」を参照してください。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスの<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />メソッドをオーバーライドする場合は、登録されて<see cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />いるデリゲートがイベントを受け取るように、基本クラスのメソッドを呼び出す必要があります。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
      </Docs>
    </Member>
    <Member MemberName="ParentNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle ParentNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ParentNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ ParentNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ParentNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールの親ノードの外観を設定できる <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールの親ノードのスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>親ノードの外観を制御するには、プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeView> このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定することはできます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `ParentNodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `ParentNodeStyle.ForeColor`)。 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルプロパティは、次の優先順位に従って適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 目次スタイルのナビゲーションメニューを生成する必要がある場合は、特定のレベルのノードが子ノードを持っているかどうかに関係なく、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティを使用することを検討してください。スタイルのプロパティ。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールの親ノードの外観を制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewParentNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewParentNodeStyle/CS/treeviewparentnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewParentNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewParentNodeStyle/VB/treeviewparentnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="PathSeparator">
      <MemberSignature Language="C#" Value="public char PathSeparator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance char PathSeparator" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberSignature Language="VB.NET" Value="Public Property PathSeparator As Char" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property char PathSeparator { char get(); void set(char value); };" />
      <MemberSignature Language="F#" Value="member this.PathSeparator : char with get, set" Usage="System.Web.UI.WebControls.TreeView.PathSeparator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue('/')</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> プロパティによって指定されたノード値を区切るために使用される文字を取得または設定します。</summary>
        <value><see cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" /> プロパティで指定されたノード値を区切るために使用される文字。 既定値はスラッシュ (/) です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>には、ルートノードから現在のノードへのパスを形成するノード値の区切り記号で区切られたリストが含まれます。 ノード値<xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>を区切るために使用する区切り文字を指定するには、プロパティを使用します。 この値は、通常、個々の値のリストを解析するときに使用されます。  
  
 <xref:System.Web.UI.WebControls.TreeView>コントロールに表示されるテキストによっては、競合を防ぐために区切り文字を変更する必要がある場合があります。 たとえば、区切り記号をコンマに設定した場合、表示されるテキストにはコンマを使用できません。それ以外の<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>場合、プロパティを正確に解析することはできません。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>プロパティを使用して、ノードの<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティの区切り文字を指定する方法を示しています。 この値は、個々の値の<xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>プロパティを解析するために使用されます。  
  
 [!code-aspx-csharp[TreeViewPathSeparator2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPathSeparator2/CS/treeviewpathseparatorcs.aspx#1)]
 [!code-aspx-vb[TreeViewPathSeparator2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPathSeparator2/VB/treeviewpathseparatorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.ValuePath" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding();" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : unit -&gt; unit" Usage="treeView.PerformDataBinding " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースに基づいてすべてのノードを作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドは、指定されたデータソースをコントロール<xref:System.Web.UI.WebControls.TreeView>にバインドするためにコントロールによって呼び出されるヘルパーメソッドです。 <xref:System.Web.UI.WebControls.TreeView.PerformDataBinding%2A>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッドは<see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />シールされているため、データ<see cref="M:System.Web.UI.WebControls.TreeView.PerformDataBinding" />のバインド時に追加のタスクを実行する必要がある場合は、メソッドをオーバーライドする必要があります。</para></block>
      </Docs>
    </Member>
    <Member MemberName="PopulateNodesFromClient">
      <MemberSignature Language="C#" Value="public bool PopulateNodesFromClient { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool PopulateNodesFromClient" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberSignature Language="VB.NET" Value="Public Property PopulateNodesFromClient As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool PopulateNodesFromClient { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.PopulateNodesFromClient : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントからの要求に応じてノードにデータを設定するかどうかを示す値を取得または設定します。</summary>
        <value>クライアントからの要求に応じてツリー ノード データを設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、ユーザー入力に依存するデータサイズやカスタムコンテンツによってツリー構造を静的に定義するのは現実的ではありません。 このため、コントロールは<xref:System.Web.UI.WebControls.TreeView>動的なノードの作成をサポートしています。 `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティをに設定すると、ノードが展開されるときに、実行時にそのノードが設定されます。  
  
 必要に応じてノードを設定できるだけでなく、サポートされているクライアントブラウザーでノードを直接設定することもできます。 プロパティがに`true`設定されている場合は、サービスがクライアントから呼び出され、ツリーノードが設定されます。これにより、サーバーにポストバックする必要がなくなります。 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A> それ以外の<xref:System.Web.UI.WebControls.TreeView>場合、コントロールはサーバーにポストバックしてノードにデータを設定します。  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>をに設定`true` するに<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>は、プロパティもに設定する必要があります。`true`  
  
 クライアント上のノードを設定するには、まず<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>プロパティを`true`に設定して<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>から、ノードのプロパティ`true`をに設定します。 次に、プログラムを使用してノードを<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>設定するイベントのイベント処理メソッドを定義します。 一般的なイベント処理メソッドは、データソースからノードデータを取得し、データをノード構造に配置した後、作成されるノード<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>のコレクションにノード構造を追加します。 ノード構造を作成するには<xref:System.Web.UI.WebControls.TreeNode> 、親ノード<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>のコレクションにオブジェクトを追加します。  
  
> [!NOTE]
>  `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティがに設定されている場合は、ノードを動的に設定する必要があります。 その下にある別のノードを宣言によって入れ子にすることはできません。それ以外の場合は、ページでエラーが発生します。  
  
> [!NOTE]
>  クライアント側のノードの作成機能は、コールバックスクリプトをサポートするブラウザーでサポートされています。 ブラウザーがコールバックスクリプトへ<xref:System.Web.Configuration.HttpCapabilitiesBase.SupportsCallback%2A> <xref:System.Web.HttpBrowserCapabilities>のアクセスをサポートしているかどうかを確認するには、クラスのプロパティを使用します。 クラスの<xref:System.Web.HttpBrowserCapabilities> <xref:System.Web.HttpRequest.Browser%2A>プロパティを使用して、現在の要求に対するクラスのインスタンスにアクセスできます。<xref:System.Web.HttpRequest>  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のノードをクライアント側で作成できるようにする方法を示しています。 クライアント側のノードの作成が有効になっていると、ノードがクライアントに動的に設定され、サーバーにポストバックする必要がなくなります。  
  
 [!code-aspx-csharp[TreeViewPopulateNodesFromClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/CS/treeviewpopulatenodesfromclientcs.aspx#1)]
 [!code-aspx-vb[TreeViewPopulateNodesFromClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewPopulateNodesFromClient/VB/treeviewpopulatenodesfromclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.EnableClientScript" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
      </Docs>
    </Member>
    <Member MemberName="RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaiseCallbackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaiseCallbackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaiseCallbackEvent : string -&gt; unit&#xA;override this.RaiseCallbackEvent : string -&gt; unit" Usage="treeView.RaiseCallbackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> メソッドは、<xref:System.Web.UI.WebControls.TreeView.System%23Web%23UI%23ICallbackEventHandler%23RaiseCallbackEvent%2A> メソッドのヘルパー メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="treeView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>フォームがサーバーにポストされたときに発生したイベントを <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールで処理できるようにします。 <see cref="M:System.Web.UI.WebControls.TreeView.RaisePostBackEvent(System.String)" /> メソッドは、<see cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" /> メソッドのヘルパー メソッドです。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このページでは、 `eventArgument`パラメーターの値が、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> <xref:System.Web.UI.IPostBackEventHandler?displayProperty=nameWithType>インターフェイスを実装するコントロールのメソッドに渡されます。 この<xref:System.Web.UI.WebControls.TreeView>コントロールは、ポストバックイベントが発生する原因となる HTML 要素もレンダリングします。 コントロールがクライアント側のスクリプトを表示してサーバーにポストバックする場合は、スクリプトの引数が`eventArgument`パラメーターに渡されます。 サーバーへの単純な送信によってポストバックイベントが発生し`eventArgument`た場合`null`、パラメーターはになります。  
  
 メソッド<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>は、HTML および Web サーバーコントロールによって実装される多くのイベントに対して機能を提供します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostDataChangedEvent ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostDataChangedEvent();" />
      <MemberSignature Language="F#" Value="abstract member RaisePostDataChangedEvent : unit -&gt; unit&#xA;override this.RaisePostDataChangedEvent : unit -&gt; unit" Usage="treeView.RaisePostDataChangedEvent " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの状態が変化したことを ASP.NET アプリケーションに通知するため、<see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールにシグナルを送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールの変更イベントは、 <xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A>メソッドから発生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="RenderBeginTag">
      <MemberSignature Language="C#" Value="public override void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderBeginTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderBeginTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderBeginTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderBeginTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderBeginTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 開始タグを指定したライターに表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.TreeView.RenderBeginTag%2A>は、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderContents : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderContents writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">Web ページにコンテンツを書き込むために使用する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの各ノードを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のノードをクライアントに表示します。 <xref:System.Web.UI.WebControls.TreeView.RenderContents%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="RenderEndTag">
      <MemberSignature Language="C#" Value="public override void RenderEndTag (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void RenderEndTag(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub RenderEndTag (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void RenderEndTag(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.RenderEndTag : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="treeView.RenderEndTag writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>コントロールの HTML 終了タグを指定したライターに表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.TreeView.RenderEndTag%2A>は、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RenderBeginTag(System.Web.UI.HtmlTextWriter)" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RootNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle RootNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RootNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ RootNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RootNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールのルート ノードの外観を設定できるようにする <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> のルート ノードのスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの<xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ルートノードの外観を制御するには、プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeView> このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定することはできます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `RootNodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `RootNodeStyle.ForeColor`)。 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルプロパティは、次の優先順位に従って適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
 目次スタイルのナビゲーションメニューを生成する必要がある場合は、特定のレベルのノードが子ノードを持っているかどうかに関係なく、 <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>プロパティを使用することを検討してください。スタイルのプロパティ。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールのルートノードの外観を制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewRootNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewRootNodeStyle/CS/treeviewrootnodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewRootNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewRootNodeStyle/VB/treeviewrootnodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="treeView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステート。それ以外の場合、コントロールに関連付けられたビューステートがないときは <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedNode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNode SelectedNode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNode SelectedNode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNode As TreeNode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNode ^ SelectedNode { System::Web::UI::WebControls::TreeNode ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNode : System.Web.UI.WebControls.TreeNode" Usage="System.Web.UI.WebControls.TreeView.SelectedNode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールで選択されたノードを表す <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNode" /> で選択されたノードを表す <see cref="T:System.Web.UI.WebControls.TreeView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロール内のノードのテキストは、選択モードとナビゲーションモードの2つのモードのいずれかになります。 既定では、ノードは選択モードになっています。 ノードをナビゲーションモードにするには、ノード<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティを空の文字列 ("") 以外の値に設定します。 ノードを選択モードにするには、ノード<xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>のプロパティを空の文字列 ("") に設定します。  
  
 ノードが選択モードの場合、ユーザーはノード内のテキストをクリックしてノードを選択できます。 コントロールで選択されているノードを確認するには、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeView>  
  
> [!NOTE]
>  コントロールが<xref:System.Web.UI.WebControls.TreeView>ハイパーリンクを表示するときにノードを選択することはできません。 ハイパーリンクが表示されると<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A> 、プロパティは`null`常にを返します。  
  
 ユーザーが新しいノード<xref:System.Web.UI.WebControls.TreeView> <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>のテキストをクリックしてコントロール内の別のノードを選択すると、イベントが既定で発生します。 プロパティの<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティを設定することによって、別のイベントを指定できます。 利用可能なオプションの一覧を次の表に示します。  
  
|選択操作|説明|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 必要に応じ<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>て、イベントまたはイベントを発生させます。<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードの選択時にイベントは発生しません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|ノードの選択時に <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントを発生させます。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|ノードの選択時に <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントと <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> イベントの両方を発生させます。 ノードは展開されているだけで、折りたたまれていません。|  
  
> [!NOTE]
>  は<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティがに`TreeNodeSelectAction.None`設定されたノードに対してはレンダリングされません。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールで選択されているノードの値を確認する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNode" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNodeBinding.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler SelectedNodeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler SelectedNodeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.SelectedNodeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event SelectedNodeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ SelectedNodeChanged;" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeChanged : EventHandler " Usage="member this.SelectedNodeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールでノードが選択されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが選択されたときに発生します。 これにより、このイベントが発生するたびに、表示されているコンテンツの更新などのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 必要に応じて、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>ノードのプロパティを設定して、そのノードが選択されたときに発生するイベントを指定できます。 利用可能なオプションの一覧を次の表に示します。  
  
|選択操作|説明|  
|----------------------|-----------------|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Expand>|ノードの展開と折りたたみを切り替えます。 必要に応じ<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>て、イベントまたはイベントを発生させます。<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.None>|ノードの選択時にイベントは発生しません。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.Select>|ノードの選択時に <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントを発生させます。|  
|<xref:System.Web.UI.WebControls.TreeNodeSelectAction.SelectExpand>|ノードの選択時に <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> イベントと <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> イベントの両方を発生させます。 ノードは展開されているだけで、折りたたまれていません。|  
  
> [!NOTE]
>  は<xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A> 、 <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティがに`TreeNodeSelectAction.None`設定されたノードに対してはレンダリングされません。  
  
 イベント<xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>は、ユーザーがノードをクリックしたときにポストバックされた場合にのみ発生します。 プロパティがプログラムに<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>よって変更された場合、イベントは発生しません。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが選択され<xref:System.Web.UI.WebControls.Label>たときにイベントを使用してコントロールを更新する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnSelectedNodeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SelectedNodeStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TreeNodeStyle SelectedNodeStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedNodeStyle As TreeNodeStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeStyle ^ SelectedNodeStyle { System::Web::UI::WebControls::TreeNodeStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedNodeStyle : System.Web.UI.WebControls.TreeNodeStyle" Usage="System.Web.UI.WebControls.TreeView.SelectedNodeStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールで選択されたノードの外観を制御する <see cref="T:System.Web.UI.WebControls.TreeView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeStyle" /> コントロールで選択されたノードのスタイルを表す <see cref="T:System.Web.UI.WebControls.TreeView" />。 既定値は <see langword="null" /> で、<see cref="P:System.Web.UI.WebControls.TreeView.SelectedNodeStyle" /> プロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールで選択されているノードの外観を制御するには、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティを使用します。 <xref:System.Web.UI.WebControls.TreeView> このプロパティは読み取り専用です。ただし、返される<xref:System.Web.UI.WebControls.TreeNodeStyle>オブジェクトのプロパティを設定することはできます。 プロパティは、 `Property-Subproperty`フォームで宣言によって設定できます。ここ`Subproperty`で、 <xref:System.Web.UI.WebControls.TreeNodeStyle>はオブジェクトのプロパティ ( `SelectedNodeStyle-ForeColor`など) です。 プロパティは、フォーム`Property.Subproperty`でプログラムを使用して設定することもできます (たとえば、 `SelectedNodeStyle.ForeColor`)。 一般的な設定には、カスタムの背景色、前景色、フォントプロパティ、およびノード間隔が含まれます。 スタイルプロパティは、次の優先順位に従って適用されます。  
  
1.  <xref:System.Web.UI.WebControls.TreeView.NodeStyle%2A>。  
  
2.  <xref:System.Web.UI.WebControls.TreeView.RootNodeStyle%2A>ノードの種類<xref:System.Web.UI.WebControls.TreeView.LeafNodeStyle%2A>に応じて、、 、または。<xref:System.Web.UI.WebControls.TreeView.ParentNodeStyle%2A> <xref:System.Web.UI.WebControls.TreeView.LevelStyles%2A>コレクションが定義されている場合は、この時点で適用され、他のノードスタイルプロパティはオーバーライドされます。  
  
3.  <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>。  
  
4.  <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.SelectedNodeStyle%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロールで選択されているノードの外観を制御する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewSelectedNodeStyle#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/CS/treeviewselectednodestylecs.aspx#1)]
 [!code-aspx-vb[TreeViewSelectedNodeStyle#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewSelectedNodeStyle/VB/treeviewselectednodestylevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LeafNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.HoverNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ParentNodeStyle" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.RootNodeStyle" />
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public string SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SelectedValue { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : string" Usage="System.Web.UI.WebControls.TreeView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>選択されたノードの値を取得します。</summary>
        <value>選択されたノードの値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.TreeView.SelectedValue%2A>は、選択したノードの値を確認する便利な方法を提供します。 このプロパティは、 <xref:System.Web.UI.WebControls.TreeNode.Value%2A> <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>プロパティによって参照される<xref:System.Web.UI.WebControls.TreeNode>オブジェクトのプロパティの値を返すだけです。 コントロールで現在選択されて<xref:System.Web.UI.WebControls.TreeView>いるノードがない場合は、空の文字列 ("") が返されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataBound">
      <MemberSignature Language="C#" Value="protected void SetNodeDataBound (System.Web.UI.WebControls.TreeNode node, bool dataBound);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataBound(class System.Web.UI.WebControls.TreeNode node, bool dataBound) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataBound (node As TreeNode, dataBound As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataBound(System::Web::UI::WebControls::TreeNode ^ node, bool dataBound);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataBound : System.Web.UI.WebControls.TreeNode * bool -&gt; unit" Usage="treeView.SetNodeDataBound (node, dataBound)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataBound" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataBound">ノードをデータ バインドとして設定する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>派生クラスにより、指定された <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールがデータ バインドかどうかを設定できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定し<xref:System.Web.UI.WebControls.TreeView.SetNodeDataBound%2A>た<xref:System.Web.UI.WebControls.TreeNode>がデータバインドされているかどうかを示すには、メソッドを使用します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>メソッド<see cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />は、 <see cref="T:System.Web.UI.WebControls.TreeView" />コントロールから派生したコントロールがノードの<see cref="P:System.Web.UI.WebControls.TreeNode.DataBound" />プロパティを設定できるようにするために用意されています。</para></block>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataItem">
      <MemberSignature Language="C#" Value="protected void SetNodeDataItem (System.Web.UI.WebControls.TreeNode node, object dataItem);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataItem(class System.Web.UI.WebControls.TreeNode node, object dataItem) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataItem (node As TreeNode, dataItem As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataItem(System::Web::UI::WebControls::TreeNode ^ node, System::Object ^ dataItem);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataItem : System.Web.UI.WebControls.TreeNode * obj -&gt; unit" Usage="treeView.SetNodeDataItem (node, dataItem)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataItem" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataItem"><see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ項目。</param>
        <summary>派生クラスは、指定された <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールのデータ項目を設定できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドを使用して、指定した<xref:System.Web.UI.WebControls.TreeNode>コントロールのデータ項目を指定します。 <xref:System.Web.UI.WebControls.TreeView.SetNodeDataItem%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="SetNodeDataPath">
      <MemberSignature Language="C#" Value="protected void SetNodeDataPath (System.Web.UI.WebControls.TreeNode node, string dataPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void SetNodeDataPath(class System.Web.UI.WebControls.TreeNode node, string dataPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.SetNodeDataPath(System.Web.UI.WebControls.TreeNode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub SetNodeDataPath (node As TreeNode, dataPath As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void SetNodeDataPath(System::Web::UI::WebControls::TreeNode ^ node, System::String ^ dataPath);" />
      <MemberSignature Language="F#" Value="member this.SetNodeDataPath : System.Web.UI.WebControls.TreeNode * string -&gt; unit" Usage="treeView.SetNodeDataPath (node, dataPath)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="node" Type="System.Web.UI.WebControls.TreeNode" />
        <Parameter Name="dataPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="node">設定する <see cref="T:System.Web.UI.WebControls.TreeNode" />。</param>
        <param name="dataPath"><see cref="T:System.Web.UI.WebControls.TreeNode" /> のデータ パス。</param>
        <summary>派生クラスは、指定された <see cref="T:System.Web.UI.WebControls.TreeNode" /> コントロールのデータ パスを設定できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定し<xref:System.Web.UI.WebControls.TreeView.SetNodeDataPath%2A>た<xref:System.Web.UI.WebControls.TreeNode>コントロールのデータパスを設定するには、メソッドを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataBound(System.Web.UI.WebControls.TreeNode,System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.TreeView.SetNodeDataItem(System.Web.UI.WebControls.TreeNode,System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ShowCheckBoxes">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TreeNodeTypes ShowCheckBoxes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowCheckBoxes As TreeNodeTypes" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TreeNodeTypes ShowCheckBoxes { System::Web::UI::WebControls::TreeNodeTypes get(); void set(System::Web::UI::WebControls::TreeNodeTypes value); };" />
      <MemberSignature Language="F#" Value="member this.ShowCheckBoxes : System.Web.UI.WebControls.TreeNodeTypes with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowCheckBoxes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeTypes</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールにチェック ボックスが表示されるノードの種類を示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 値のビットごとの組み合わせ。 既定値は、<see langword="TreeNodeType.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView>コントロールに複数ノードの選択サポートを提供するには、ノードのイメージの横にチェックボックスを表示します。 チェックボックス<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>を表示するノードの種類を指定するには、プロパティを使用します。 たとえば、このプロパティがに`TreeNodeType.Parent`設定されている場合、ツリー内の親ノードごとにチェックボックスが表示されます。 次の表に、このプロパティの有効な値を示します。  
  
|ノード型|説明|  
|---------------|-----------------|  
|`TreeNodeType.All`|すべてのノードのチェックボックスが表示されます。|  
|`TreeNodeType.Leaf`|すべてのリーフノードのチェックボックスが表示されます。|  
|`TreeNodeType.None`|チェックボックスは表示されません。|  
|`TreeNodeType.Parent`|すべての親ノードのチェックボックスが表示されます。|  
|`TreeNodeType.Root`|すべてのルートノードのチェックボックスが表示されます。|  
  
 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティに使用される列挙型は、フラグ列挙体で、ビットごとの演算を使用して値を結合できます。 たとえば、親ノードとリーフノードのチェックボックスを表示するには、ビットごとの or 演算子を`TreeNodeType.Parent`使用`TreeNodeType.Leaf`して、との値を結合します。  
  
 チェックボックスがオンになっているノードを特定するには、 <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>コレクションのノードを反復処理します。  
  
> [!NOTE]
>  この<xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>設定を上書きするには、 <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>各ノードのプロパティを設定します。  
  
 単一選択サポートのみを提供する必要がある場合は、プロパティ<xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>の使用を検討してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>プロパティを使用して、さまざまなノード型のチェックボックスを表示および非表示にする方法を示しています。  
  
 [!code-aspx-csharp[TreeViewShowCheckBoxes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowCheckBoxes/CS/treeviewshowcheckboxescs.aspx#1)]
 [!code-aspx-vb[TreeViewShowCheckBoxes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowCheckBoxes/VB/treeviewshowcheckboxesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">ビットごとの組み合わせの値が、<see cref="T:System.Web.UI.WebControls.TreeNodeTypes" /> 列挙体の範囲外にあります。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TreeNodeTypes" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.SelectedNode" />
      </Docs>
    </Member>
    <Member MemberName="ShowExpandCollapse">
      <MemberSignature Language="C#" Value="public bool ShowExpandCollapse { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowExpandCollapse" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowExpandCollapse As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowExpandCollapse { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowExpandCollapse : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowExpandCollapse" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ノード展開インジケーターが表示されるかどうかを示す値を取得または設定します。</summary>
        <value>ノード展開インジケーターを表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 展開ノードインジケーターは、ノードが展開されているか、折りたたまれているか、または拡張可能でないかを示すために使用されます。 プロパティを使用して、展開ノードインジケーターを<xref:System.Web.UI.WebControls.TreeView>コントロールに表示するかどうかを指定します。 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>  
  
 プロパティが<xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>に`true`設定されている<xref:System.Web.UI.WebControls.TreeView>場合、コントロールには、ノードの横に正符号 (+) またはマイナス記号 (-) またはプレースホルダーイメージが表示され、ノードが展開可能か、折りたたみ可能か、または展開不可能かが示されます。 カスタムイメージを指定するには、最初<xref:System.Web.UI.WebControls.TreeView.ImageSet%2A>にプロパティ`TreeViewImageSet.Custom`をに設定し、 <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>次<xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>に、 <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> 、、およびの各プロパティをカスタムイメージの url に設定します。 イメージが指定されていない場合は、既定のイメージが使用されます。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>プロパティを使用して、展開ノードのアイコンの表示と非表示を切り替える方法を示しています。  
  
 [!code-aspx-csharp[TreeViewShowExpandCollapse#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewShowExpandCollapse/CS/treeviewshowexpandcollapsecs.aspx#1)]
 [!code-aspx-vb[TreeViewShowExpandCollapse#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewShowExpandCollapse/VB/treeviewshowexpandcollapsevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.NoExpandImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.CollapseImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.ExpandImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="ShowLines">
      <MemberSignature Language="C#" Value="public bool ShowLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ShowLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberSignature Language="VB.NET" Value="Public Property ShowLines As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ShowLines { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ShowLines : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.ShowLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>子ノードを親ノードに接続する線を表示するかどうかを示す値を取得または設定します。</summary>
        <value>ノードを接続する線を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティを使用して、子ノードを接続している行を親ノードに表示するかどうかを指定します。 このプロパティがに`true`設定されている場合、コントロールは<xref:System.Web.UI.WebControls.TreeView> 、 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>プロパティによって指定された Web アクセス可能なフォルダーを行イメージに対して検索します。  
  
> [!NOTE]
>  プロパティが設定されていない<xref:System.Web.UI.WebControls.TreeView>場合、コントロールは組み込みの既定のイメージ (20 ×20ピクセル) を使用します。 <xref:System.Web.UI.WebControls.TreeView.LineImagesFolder%2A>  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.ShowLines%2A>プロパティを使用して、 <xref:System.Web.UI.WebControls.TreeView>コントロール内のノードを接続する線を表示する方法を示しています。 ラインデザイナーツールを使用して、ラインイメージのセットを作成し、サンプルアプリケーションのディレクトリ内の LineImages という名前のフォルダーに配置します。  
  
 [!code-aspx-csharp[TreeViewLineImagesFolderUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/CS/treeviewlineimagesfolderurlcs.aspx#1)]
 [!code-aspx-vb[TreeViewLineImagesFolderUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewLineImagesFolderUrl/VB/treeviewlineimagesfolderurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeView.LineImagesFolder" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.SkipLinkText : string with get, set" Usage="System.Web.UI.WebControls.TreeView.SkipLinkText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのコンテンツをスキップするスクリーン リーダー用の代替テキスト表示に使用する値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TreeView" /> が、スクリーン リーダーへのヒントとして、表示されないイメージの代替テキストとして表示する文字列。 既定値は、"ナビゲーション リンクのスキップ" です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティは、Web ページをよりアクセスしやすくするために設定できるプロパティです。 繰り返されるコンテンツを含む Web ページは、スクリーンリーダーのユーザーがコンテンツを読み上げないようにするメカニズムを提供できます。  
  
 コントロール<xref:System.Web.UI.WebControls.TreeView>は、スクリーン<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>リーダーがコントロール全体をスキップする手段として、プロパティを提供します。 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティが設定されている場合は、代替テキストを含む非表示のイメージがレンダリングされ、ユーザーはコントロールの末尾に移動するためのオプションを使用できるようになります。 スクリーンリーダーは、代替テキストを読み上げるだけで、イメージは1ピクセルのスペースしか占めません。 ページのレンダリングをピクセル単位で正確に制御するには、 <xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>プロパティを空の文字列 ("") に設定し、ツリーをスキップする独自のメカニズムを提供します。  
  
 既定では、プロパティは空の文字列に設定されます。これにより、スクリーンリーダーはコントロールをスキップしません。<xref:System.Web.UI.WebControls.TreeView.SkipLinkText%2A>  
  
 このプロパティの値は、ビューステートに格納されます。  
  
 このプロパティの値は、設定されると、デザイナーツールを使用してリソースファイルに自動的に保存できます。 詳細については<xref:System.ComponentModel.LocalizableAttribute> 、「」および「[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)」を参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.GetCallbackResult">
      <MemberSignature Language="C#" Value="string ICallbackEventHandler.GetCallbackResult ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance string System.Web.UI.ICallbackEventHandler.GetCallbackResult() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#GetCallbackResult" />
      <MemberSignature Language="VB.NET" Value="Function GetCallbackResult () As String Implements ICallbackEventHandler.GetCallbackResult" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::String ^ System.Web.UI.ICallbackEventHandler.GetCallbackResult() = System::Web::UI::ICallbackEventHandler::GetCallbackResult;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.GetCallbackResult</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを対象とするコールバック イベントの結果を返します。</summary>
        <returns>コールバックの結果。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.TreeView>は、 <xref:System.Web.UI.ICallbackEventHandler>インターフェイスを実装し、 <xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A>を使用してデータ<xref:System.Web.UI.WebControls.TreeView.GetCallbackResult%2A>を取得し、メソッドを使用して取得したデータをコントロールに返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent">
      <MemberSignature Language="C#" Value="void ICallbackEventHandler.RaiseCallbackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#ICallbackEventHandler#RaiseCallbackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseCallbackEvent (eventArgument As String) Implements ICallbackEventHandler.RaiseCallbackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System::String ^ eventArgument) = System::Web::UI::ICallbackEventHandler::RaiseCallbackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.ICallbackEventHandler.RaiseCallbackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>指定した引数を使用して、コールバック イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は<xref:System.Web.UI.WebControls.TreeView.RaiseCallbackEvent%2A> 、メソッドをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.ClientScriptManager.GetCallbackEventReference(System.String,System.String,System.String,System.String,System.String,System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.LoadPostData">
      <MemberSignature Language="C#" Value="bool IPostBackDataHandler.LoadPostData (string postDataKey, System.Collections.Specialized.NameValueCollection postCollection);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Web.UI.IPostBackDataHandler.LoadPostData(string postDataKey, class System.Collections.Specialized.NameValueCollection postCollection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      <MemberSignature Language="VB.NET" Value="Function LoadPostData (postDataKey As String, postCollection As NameValueCollection) As Boolean Implements IPostBackDataHandler.LoadPostData" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Web.UI.IPostBackDataHandler.LoadPostData(System::String ^ postDataKey, System::Collections::Specialized::NameValueCollection ^ postCollection) = System::Web::UI::IPostBackDataHandler::LoadPostData;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="postDataKey" Type="System.String" />
        <Parameter Name="postCollection" Type="System.Collections.Specialized.NameValueCollection" />
      </Parameters>
      <Docs>
        <param name="postDataKey">コントロールのキー識別子。</param>
        <param name="postCollection">受信する名前と値すべてのコレクション。</param>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのポストバック データを処理します。</summary>
        <returns>ポストバック イベントの結果、<see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの状態が変化した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は<xref:System.Web.UI.WebControls.TreeView.LoadPostData%2A> 、メソッドをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.LoadPostData(System.String,System.Collections.Specialized.NameValueCollection)" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent">
      <MemberSignature Language="C#" Value="void IPostBackDataHandler.RaisePostDataChangedEvent ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackDataHandler#RaisePostDataChangedEvent" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostDataChangedEvent () Implements IPostBackDataHandler.RaisePostDataChangedEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent() = System::Web::UI::IPostBackDataHandler::RaisePostDataChangedEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackDataHandler.RaisePostDataChangedEvent</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの状態が変化したことを ASP.NET アプリケーションに通知するため、<see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールにシグナルを送信します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は<xref:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent%2A> 、メソッドをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.RaisePostDataChangedEvent" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベント ハンドラーに渡すオプションのイベント引数を表す文字列。</param>
        <summary>フォームがサーバーにポストされたときに発生したイベントを <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールで処理できるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールの開発者は<xref:System.Web.UI.WebControls.TreeView.RaisePostBackEvent%2A> 、メソッドをオーバーライドする必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.TreeView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>常に <see cref="F:System.Web.UI.HtmlTextWriterTag.Div" /> 値を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.TreeView.TagKey%2A>を使用すると、出力ストリームは<xref:System.Web.UI.WebControls.TreeView>コントロールの適切な HTML マークアップを書き込むことができます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>プロパティをオーバーライドし<see cref="P:System.Web.UI.WebControls.TreeView.TagKey" />て、派生し<see cref="T:System.Web.UI.HtmlTextWriterTag" />たコントロールに使用する値を指定できます。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="Target">
      <MemberSignature Language="C#" Value="public string Target { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Target" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Target" />
      <MemberSignature Language="VB.NET" Value="Public Property Target As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Target { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Target : string with get, set" Usage="System.Web.UI.WebControls.TreeView.Target" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メニュー項目に関連付けられている Web ページの内容を表示する対象のウィンドウまたはフレームを取得または設定します。</summary>
        <value>リンクされた Web ページの内容を表示する対象のウィンドウまたはフレーム。 値は、次の表に示すアンダースコア (_) から始まる特殊な値を除き、大文字小文字を区別しない A から Z の範囲の文字で始まる必要があります。  
  
 <list type="table"><listheader><term> 対象の値 
 </term><description> コンテンツの表示先 
 </description></listheader><item><term><see langword="_blank" /></term><description> フレームなしの新しいウィンドウ。  
  
 </description></item><item><term><see langword="_parent" /></term><description> 直前のフレームセットの親。  
  
 </description></item><item><term><see langword="_search" /></term><description> 検索ペイン。  
  
 </description></item><item><term><see langword="_self" /></term><description> フォーカスのあるフレーム。  
  
 </description></item><item><term><see langword="_top" /></term><description> 最大化されたフレームなしのウィンドウ。  
  
 </description></item></list><block subset="none" type="note"><para>  
 ブラウザーのドキュメントを参照して、<see langword="_search" /> 値がサポートされているかどうか確認してください。  たとえば、Microsoft Internet Explorer 5.0 以降では <see langword="_search" /> ターゲット値がサポートされています。  
  
</para></block>  
  
 既定値は空の文字列 ("") です。フォーカスのあるウィンドウまたはフレームが更新されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.Target%2A>プロパティを使用して、ノードがクリックされたときにノードにリンクされている Web コンテンツを表示するウィンドウまたはフレームを指定します。  
  
> [!NOTE]
>  プロパティ<xref:System.Web.UI.WebControls.TreeView.Target%2A>は、 `target`属性としてレンダリングされます。 要素`target` の`anchor`属性は、XHTML 1.1 ドキュメント型定義では許可されていません。 <xref:System.Web.UI.WebControls.TreeView.Target%2A> に<xref:System.Web.UI.WebControls.TreeView>対してレンダリングされた出力が XHTML 1.1 に準拠している必要がある場合は、プロパティを設定しないでください。 詳細については、「 [Visual Studio と ASP.NET の XHTML 標準](https://msdn.microsoft.com/library/1b78d416-66bb-43a5-ac77-c703aab55b97)」を参照してください。  
>   
>  アクセス可能な Web ページを作成する場合は、 <xref:System.Web.UI.WebControls.TreeView.Target%2A>プロパティを使用して別のウィンドウを対象にすることは避けてください。 詳細については、「 [ASP.NET Controls And Accessibility](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)」を参照してください。  
  
 このプロパティの値は、ビューステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.Target%2A>プロパティを使用して、ノードがクリックされたときに新しいウィンドウ内のノードにリンクされている Web コンテンツを表示する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewTarget#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTarget/CS/treeviewtargetcs.aspx#1)]
 [!code-aspx-vb[TreeViewTarget#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTarget/VB/treeviewtargetvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.Target" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.TreeView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="treeView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのビューステートの変更を追跡し、コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに保存できるようにします。 この <see cref="T:System.Web.UI.StateBag" /> にアクセスするには、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティを使用します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.TreeView.TrackViewState%2A>メソッドは、コントロールのビューステートの一部として、コントロールの変更の追跡と保存を開始する開始点をマークするためにオーバーライドされます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCheckChanged">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCheckChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCheckChanged As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCheckChanged;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCheckChanged : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールのチェック ボックスの状態がサーバーへの各ポストの間に変更された場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは、 <xref:System.Web.UI.WebControls.TreeView>コントロールのチェックボックスがサーバーへのポスト間で状態を変更したときに発生します。 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> これにより、このイベントが発生するたびに、データベースまたは表示されているコンテンツの更新などのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 ポストバック時<xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged>にイベントが発生した場合でも、チェックボックスを変更してもポストバックは行われません。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeCheckChanged> <xref:System.Web.UI.WebControls.TreeView>コントロールのチェックボックスがサーバーへ<xref:System.Web.UI.WebControls.Label>のポスト間で状態を変更したときに、イベントを使用してコントロールを更新する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewCheckChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewCheckChanged/CS/treeviewcheckchangedcs.aspx#1)]
 [!code-aspx-vb[TreeViewCheckChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewCheckChanged/VB/treeviewcheckchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCheckChanged(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeCollapsed">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeCollapsed" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeCollapsed As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeCollapsed;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeCollapsed : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールでノードが折りたたまれると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが折りたたまれたときに発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、ユーザーが<xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> <xref:System.Web.UI.WebControls.TreeView>コントロールのノードを折りたたむと、イベント<xref:System.Web.UI.WebControls.Label>を使用してコントロールのコンテンツを更新する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeCollapsed(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeDataBound As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeDataBound;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeDataBound : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールで、データ項目をノードに関連付けると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>は、データ項目が<xref:System.Web.UI.WebControls.TreeView>コントロール内のノードにバインドされると発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 このセクションには、2 つのコード例が含まれています。 最初のコード例では、何らか<xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>の条件が満たされた場合に、イベントを使用してノードのイメージを変更する方法を示します。 2番目のコード例では、最初のコード例のサンプル XML データを提供します。  
  
 次のコード例は、 <xref:System.Web.UI.WebControls.TreeView.TreeNodeDataBound>何らかの条件が満たされた場合に、イベントを使用してノードのイメージを変更する方法を示しています。 この例を正しく動作させるには、このコード例の後に記載されているサンプル XML データを、books .xml という名前のファイルにコピーする必要があります。 また、この例を表示するには、独自のイメージを用意してください。  
  
 [!code-aspx-csharp[TreeViewTreeNodeDataBound#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/CS/treeviewtreenodedataboundcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeDataBound#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeDataBound/VB/treeviewtreenodedataboundvb.aspx#1)]  
  
 次のコード例は、前のコード例のサンプル XML データを示しています。  
  
```  
<Book Title="Book Title">  
    <Chapter Heading="Chapter 1">  
        <Section Heading="Section 1">  
        </Section>  
        <Section Heading="Section 2">  
        </Section>  
    </Chapter>  
    <Chapter Heading="Chapter 2">  
        <Section Heading="Section 1">  
        </Section>  
    </Chapter>  
</Book>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeDataBound(System.Web.UI.WebControls.TreeNodeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodeExpanded">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodeExpanded" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodeExpanded" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodeExpanded As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodeExpanded;" />
      <MemberSignature Language="F#" Value="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodeExpanded : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールでノードが展開されると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>は、 <xref:System.Web.UI.WebControls.TreeView>コントロールでノードが展開されるときに発生します。 これにより、このイベントが発生するたびにカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> `TreeNodeSelectAction.Expand` `TreeNodeSelectAction.SelectExpand` <xref:System.Web.UI.WebControls.TreeView>ノードの<xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>プロパティがまたはに設定されている場合は、コントロールでそのノードがクリックされたときにもイベントが発生します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次のコード例は、ユーザーが<xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> <xref:System.Web.UI.WebControls.TreeView>コントロールのノードを展開したとき<xref:System.Web.UI.WebControls.Label>に、イベントを使用してコントロールのコンテンツを更新する方法を示しています。  
  
 [!code-aspx-csharp[TreeViewTreeNodeExpand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodeExpand/CS/treeviewtreenodeexpandcs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodeExpand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodeExpand/VB/treeviewtreenodeexpandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodeExpanded(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.SelectAction" />
      </Docs>
    </Member>
    <Member MemberName="TreeNodePopulate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.TreeNodeEventHandler TreeNodePopulate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.TreeView.TreeNodePopulate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event TreeNodePopulate As TreeNodeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::TreeNodeEventHandler ^ TreeNodePopulate;" />
      <MemberSignature Language="F#" Value="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " Usage="member this.TreeNodePopulate : System.Web.UI.WebControls.TreeNodeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TreeNodeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" /> プロパティが <see langword="true" /> に設定されているノードが <see cref="T:System.Web.UI.WebControls.TreeView" /> コントロールで展開されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によっては、ユーザー入力に依存するデータサイズやカスタムコンテンツによってツリー構造を静的に定義するのは現実的ではありません。 このため、コントロールは<xref:System.Web.UI.WebControls.TreeView>動的なノードの作成をサポートしています。 `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティをに設定すると、ノードが展開されるときに、実行時にそのノードが設定されます。  
  
 ノードを動的に設定するには、 <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>まずノードのプロパティを`true`に設定します。 次に、プログラムによってノードを設定<xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>するイベントのイベント処理メソッドを定義します。 一般的なイベント処理メソッドは、データソースからノードデータを取得し、データをノード構造に配置した後、作成されるノード<xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>のコレクションにノード構造を追加します。 ノード構造は、親ノードの<xref:System.Web.UI.WebControls.TreeNode> <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>コレクションにオブジェクトを追加することによって作成されます。  
  
> [!NOTE]
>  `true`ノードの<xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>プロパティがに設定されている場合は、ノードを動的に設定する必要があります。 その下にある別のノードを宣言によって入れ子にすることはできません。それ以外の場合は、ページでエラーが発生します。  
  
 サポートされているブラウザー (Microsoft Internet Explorer 4.0 互換のブラウザー以降) では、クライアント側のノードの作成も利用できます。 これを有効にすると<xref:System.Web.UI.WebControls.TreeView> 、ノードの展開時にコントロールがクライアントのノードを動的に設定できるようになります。これにより、サーバーにポストバックする必要がなくなります。 クライアント側のノードの作成の詳細について<xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>は、「」を参照してください。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>イベントを使用して、サーバー上で<xref:System.Web.UI.WebControls.TreeView>コントロールのノードを動的に設定する方法を次のコード例に示します。 <xref:System.Web.UI.WebControls.TreeView.EnableClientScript%2A>プロパティがに`false`設定されていることに注意してください。これにより、展開ノードのイベントがクライアントで処理されなくなります。  
  
 [!code-aspx-csharp[TreeViewTreeNodePopulate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/TreeViewTreeNodePopulate/CS/treeviewtreenodepopulatecs.aspx#1)]
 [!code-aspx-vb[TreeViewTreeNodePopulate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/TreeViewTreeNodePopulate/VB/treeviewtreenodepopulatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.TreeView.OnTreeNodePopulate(System.Web.UI.WebControls.TreeNodeEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.TreeNode.PopulateOnDemand" />
        <altmember cref="P:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient" />
      </Docs>
    </Member>
    <Member MemberName="Visible">
      <MemberSignature Language="C#" Value="public override bool Visible { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Visible" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.TreeView.Visible" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property Visible As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool Visible { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Visible : bool with get, set" Usage="System.Web.UI.WebControls.TreeView.Visible" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールを UI としてページに表示するかどうかを示す値を取得または設定します。</summary>
        <value>コントロールがページに表示される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティがに`false`設定されている場合、コントロールはレンダリングされません。 <xref:System.Web.UI.WebControls.TreeView.Visible%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TreeView" />
      </Docs>
    </Member>
  </Members>
</Type>
