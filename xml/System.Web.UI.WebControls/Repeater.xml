<Type Name="Repeater" FullName="System.Web.UI.WebControls.Repeater">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="64199fe16fae1253fbbdaacc69777e9ab7d34b70" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600456" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Repeater : System.Web.UI.Control, System.Web.UI.INamingContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Repeater extends System.Web.UI.Control implements class System.Web.UI.INamingContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Repeater" />
  <TypeSignature Language="VB.NET" Value="Public Class Repeater&#xA;Inherits Control&#xA;Implements INamingContainer" />
  <TypeSignature Language="C++ CLI" Value="public ref class Repeater : System::Web::UI::Control, System::Web::UI::INamingContainer" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ItemCommand")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("DataSource")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.RepeaterDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>一覧として表示する各アイテムに指定したテンプレートを繰り返すことによりカスタム レイアウトを作成できる、データにバインドされたリスト コントロール。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [データ バインディング](#data_binding)  
  
-   [テンプレート](#templates)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.Repeater>コントロールは、基本的なテンプレート化されたデータにバインドされたリストです。 組み込みのレイアウトやスタイルがないため、すべてのレイアウト、書式設定、およびコントロールのテンプレート内のタグをスタイルを明示的に宣言する必要があります。  
  
 <xref:System.Web.UI.WebControls.Repeater>コントロールでは、マークアップ タグをテンプレート間で分割することができます。  テンプレートを使用してテーブルを作成するには、begin テーブル タグを含める (`<table>`) で、 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>、1 つのテーブルの行タグ (`<tr>`) で、 <xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>、およびエンド テーブル タグ (`</table>`) で、<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>です。  
  
 <xref:System.Web.UI.WebControls.Repeater>コントロールには、選択範囲の組み込み機能や編集のサポートがありません。 使用することができます、<xref:System.Web.UI.WebControls.Repeater.ItemCommand>コントロールに、テンプレートから生成されるコントロール イベントを処理するイベントです。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
<a name="data_binding"></a>   
## <a name="data-binding"></a>データ バインディング  
 <xref:System.Web.UI.WebControls.Repeater>コントロールのデータ バインディングをサポートするために 2 つのプロパティを提供します。 実装する任意のコレクションにデータをバインドする、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイス (など、 <xref:System.Data.DataView?displayProperty=nameWithType>、 <xref:System.Collections.ArrayList?displayProperty=nameWithType>、または配列)、または<xref:System.ComponentModel.IListSource>インターフェイスを使用して、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティをデータ ソースを指定します。 設定すると、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティ、データ バインディングを実行するコードを手動で記述する必要があります。 自動的にバインドする、<xref:System.Web.UI.WebControls.Repeater>コントロール、データ ソース コントロールで表されるデータ ソースを設定、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティを<xref:System.Web.UI.Control.ID%2A>を使用するデータ ソース コントロールのです。 設定すると、 <xref:System.Web.UI.WebControls.BaseDataList.DataSourceID%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Repeater>コントロールは、最初の要求で指定されたデータ ソース コントロールに自動的にバインドします。 そのため、必要はありませんを明示的に呼び出す、<xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>メソッドのデータ関連のプロパティを変更していない限り、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 A<xref:System.Web.UI.WebControls.Repeater>バインドを制御、<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>と<xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A>いずれかのデータにモデルが宣言されており、によって参照される、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティまたはデータ ソースで指定されたコントロールの<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティです。 <xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>、 <xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>、および<xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A>はデータにバインドされていません。  
  
 場合、<xref:System.Web.UI.WebControls.Repeater>コントロールのデータ ソースが設定されている、データは返されませんが、コントロールを表示、<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>と<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>で項目がありません。 データ ソースが場合`null`、<xref:System.Web.UI.WebControls.Repeater>はレンダリングされません。  
  
<a name="templates"></a>   
## <a name="templates"></a>テンプレート  
 少なくともすべて<xref:System.Web.UI.WebControls.Repeater>コントロールを定義する必要があります、<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>です。 ただし、次の表で説明されている他の省略可能なテンプレートを使用して、一覧の外観をカスタマイズできます。  
  
|テンプレート名|説明|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>|内容と、リスト内の項目のレイアウトを定義します。 このテンプレートが必要です。|  
|<xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A>|定義されている場合は、コンテンツと代替のレイアウトを決定 (0 から始まる奇数のインデックスの項目。 定義されていない場合<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>を使用します。|  
|<xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A>|定義されている場合は、項目 (および交互の項目) の間で表示されます。 定義されていない場合、区切り記号はレンダリングされません。|  
|<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>|定義されている場合は、コンテンツとリストのヘッダーのレイアウトを決定します。 定義されていない場合、ヘッダーは表示されません。|  
|<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>|定義されている場合は、コンテンツとリストのフッターのレイアウトを決定します。 定義されていない場合、ページ フッターはレンダリングされません。|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:Repeater  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDataBound="ItemDataBound event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    Visible="True|False"  
>  
        <AlternatingItemTemplate>  
            <!-- child controls -->  
        </AlternatingItemTemplate>  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <SeparatorTemplate>  
            <!-- child controls -->  
        </SeparatorTemplate>  
</asp:Repeater>  
```  
  
   
  
## Examples  
 Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=192873)です。  
  
 次のコード例は、次の 2 つの単純なを使用する方法を示します<xref:System.Web.UI.WebControls.Repeater>ページ上のコントロールです。 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>のデータ ソースを指定するプロパティが使用される、<xref:System.Web.UI.WebControls.Repeater>コントロール。 最初の<xref:System.Web.UI.WebControls.Repeater>テーブル内の項目を表示します。 2 番目<xref:System.Web.UI.WebControls.Repeater>コンマ区切りの一覧でそのアイテムが表示されます。  
  
 [!code-aspx-csharp[Classic Repeater Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater Example/VB/sourcevb.aspx#1)]  
  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>のデータ ソースを指定するプロパティ、<xref:System.Web.UI.WebControls.Repeater>コントロール。 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティに設定されている、<xref:System.Web.UI.Control.ID%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールのデータを取得するために使用します。 ページが読み込まれるときに、<xref:System.Web.UI.WebControls.Repeater>で指定されたデータ ソースにコントロールが自動的にバインド、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールとデータがユーザーに表示されます。  
  
 [!code-aspx-csharp[Repeater.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Repeater.DataSourceID/CS/repeater.datasourceidcs.aspx#1)]
 [!code-aspx-vb[Repeater.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Repeater.DataSourceID/VB/repeater.datasourceidvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
    <altmember cref="T:System.Web.UI.WebControls.DataList" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Repeater ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Repeater();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AlternatingItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate AlternatingItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AlternatingItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ AlternatingItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールの交互の項目を表示する方法を定義する <see cref="T:System.Web.UI.ITemplate" /> を実装するオブジェクトを取得または設定します。</summary>
        <value>交互の項目の表示方法を定義する <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 代替項目に異なる外観を指定するこのプロパティを使用して、<xref:System.Web.UI.WebControls.Repeater>で指定されたものと制御、<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>です。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate%2A>の代替項目を表示する、<xref:System.Web.UI.WebControls.Repeater>太字のフォントを持つ明るい青色のセル内のコントロールです。  
  
 [!code-aspx-csharp[Classic Repeater.AlternatingItemTemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.AlternatingItemTemplate Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.AlternatingItemTemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.AlternatingItemTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="CallingDataMethods">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CallingDataMethodsEventHandler CallingDataMethods" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.CallingDataMethods" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CallingDataMethods As CallingDataMethodsEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CallingDataMethodsEventHandler ^ CallingDataMethods;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CallingDataMethodsEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データのメソッドが呼び出されるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの目的は、オブジェクトが異なるに呼び出されるデータのメソッドがあることを指定する機会を提供する、<xref:System.Web.UI.Page>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Controls">
      <MemberSignature Language="C#" Value="public override System.Web.UI.ControlCollection Controls { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ControlCollection Controls" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Controls" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Controls As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ControlCollection ^ Controls { System::Web::UI::ControlCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.WebControls.Repeater" /> を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.ControlCollection" /> コントロールの子コントロールを格納している <see cref="T:System.Web.UI.WebControls.Repeater" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Repeater.Controls%2A>の子を管理するコレクションを制御、<xref:System.Web.UI.WebControls.Repeater>コントロール。 コレクションから子コントロールを取得することがよく使用されます。 追加でき、コレクションから子コントロールを削除できます。  
  
> [!NOTE]
>  内の子コントロールにアクセスする、<xref:System.Web.UI.WebControls.Repeater>を反復処理する、制御を<xref:System.Web.UI.WebControls.Repeater>コントロールの<xref:System.Web.UI.WebControls.Repeater.Items%2A>を取得するコレクション、<xref:System.Web.UI.WebControls.RepeaterItem>指定されたインデックスのです。 まず、**リピータ**項目の継承<xref:System.Web.UI.Control.FindControl%2A>を特定の ID を持つコントロールを取得する方法  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ControlCollection" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ASP.NET ページ フレームワークによって呼び出され、ポストバックまたはレンダリングの準備として、合成ベースの実装を使うサーバー コントロールに対し、それらのコントロールに含まれる子コントロールを作成するように通知します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy (bool useDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy(bool useDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateControlHierarchy(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateControlHierarchy (useDataSource As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateControlHierarchy(bool useDataSource);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="useDataSource" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="useDataSource">指定したデータ ソースを使用するかどうかを示します。</param>
        <summary>指定したデータ ソースを使用して、または指定したデータ ソースを使用せずに、コントロール階層を作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> 値を返します。</summary>
        <returns>
          <see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> 値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最初の呼び出し、<xref:System.Web.UI.WebControls.Repeater.SelectArguments%2A>プロパティの呼び出し、<xref:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments%2A>を返すメソッドを<xref:System.Web.UI.DataSourceSelectArguments.Empty%2A>値。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateItem">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.RepeaterItem CreateItem (int itemIndex, System.Web.UI.WebControls.ListItemType itemType);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.RepeaterItem CreateItem(int32 itemIndex, valuetype System.Web.UI.WebControls.ListItemType itemType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.CreateItem(System.Int32,System.Web.UI.WebControls.ListItemType)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateItem (itemIndex As Integer, itemType As ListItemType) As RepeaterItem" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::RepeaterItem ^ CreateItem(int itemIndex, System::Web::UI::WebControls::ListItemType itemType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="itemType" Type="System.Web.UI.WebControls.ListItemType" />
      </Parameters>
      <Docs>
        <param name="itemIndex">作成した項目を格納する <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロール内の指定位置。</param>
        <param name="itemType">作成する <see cref="T:System.Web.UI.WebControls.ListItemType" /> 項目の指定した型を表す <see cref="T:System.Web.UI.WebControls.Repeater" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> コントロール内の指定した位置に、指定した項目の型で <see cref="T:System.Web.UI.WebControls.Repeater" /> オブジェクトを作成します。</summary>
        <returns>新しい <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.Repeater.CreateItem%2A>カスタム サーバー内のメソッドは、常に、新しいを返すようにを制御<xref:System.Web.UI.WebControls.RepeaterItem>と対応するインデックスおよびカスタム型<xref:System.Web.UI.WebControls.Repeater>サーバー コントロールです。  
  
 [!code-aspx-csharp[CustomRepeaterCreateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterCreateItem/CS/custom_repeater_createitemcs.aspx#1)]
 [!code-aspx-vb[CustomRepeaterCreateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterCreateItem/VB/custom_repeater_createitemvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterCreateItem#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterCreateItem/CS/custom_repeater_createitem.cs#2)]
 [!code-vb[CustomRepeaterCreateItem#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterCreateItem/VB/custom_repeater_createitem.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreatingModelDataSource">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CreatingModelDataSourceEventHandler CreatingModelDataSource" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.CreatingModelDataSource" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CreatingModelDataSource As CreatingModelDataSourceEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::CreatingModelDataSourceEventHandler ^ CreatingModelDataSource;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CreatingModelDataSourceEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> オブジェクトが作成されるときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントの目的は、変更する機会を提供する、<xref:System.Web.UI.WebControls.ModelDataSourceView>インスタンスから派生するカスタム クラスを使用するシナリオで、<xref:System.Web.UI.WebControls.ModelDataSourceView>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>指定したデータ ソースに <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールとそのすべての子コントロールをバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>で指定されたデータ ソースにバインドするメソッド、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティを<xref:System.Web.UI.WebControls.Repeater>コントロール。 データ ソースをバインドすると、<xref:System.Web.UI.WebControls.Repeater>コントロールのコントロール、データ ソース内の情報が表示されます。  
  
 <xref:System.Web.UI.WebControls.BaseDataList.DataBind%2A>も通常、メソッドは、データ ソースとデータ ソース内の情報が更新された後にコントロールを一覧表示するデータを同期するために使用します。 これにより、データのリスト コントロールにも更新するデータ ソースを変更できます。  
  
 データのソースの場合、<xref:System.Web.UI.WebControls.Repeater>コントロールがで指定された、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティ、する必要はありませんを明示的に呼び出す、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>メソッドです。 ASP.NET に指定されたデータ ソース コントロールをバインドするには、自動的にこのメソッドを呼び出し、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
   
  
## Examples  
 次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>カスタム サーバー内のメソッドを制御できるように、常にカスタム イベントのデータ バインディング イベントを発生させます<xref:System.Web.UI.WebControls.Repeater>サーバー コントロールです。  
  
 [!code-aspx-csharp[CustomRepeaterDataBind#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterDataBind/CS/custom_repeater_databindcs.aspx#1)]
 [!code-aspx-vb[CustomRepeaterDataBind#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterDataBind/VB/custom_repeater_databindvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterDataBind#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterDataBind/CS/custom_repeater_databind.cs#2)]
 [!code-vb[CustomRepeaterDataBind#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterDataBind/VB/custom_repeater_databind.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataMember">
      <MemberSignature Language="C#" Value="public virtual string DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataMember" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataMember As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに連結する <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> の特定のテーブルを取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> 内のテーブルを指定する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 によって、データ ソースが指定されている場合、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティには、複数のデータ ソースが含まれています。 を使用して、<xref:System.Web.UI.WebControls.Repeater.DataMember%2A>プロパティ、コントロールにバインドする特定のソースを指定します。 たとえばがある場合、<xref:System.Data.DataSet?displayProperty=nameWithType>複数のテーブルには、コントロールにバインドするテーブルを指定する必要があります。 使用して、データ ソースを指定したら、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>データ ソースをコントロールにバインドするメソッド。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.Repeater.DataMember%2A>内のテーブルを指定するプロパティ、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>にバインドする、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 [!code-aspx-csharp[Classic Repeater.DataMember Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.DataMember Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.DataMember Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.DataMember Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual object DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSource As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>リストに読み込むデータを提供するデータ ソースを取得または設定します。</summary>
        <value>このコントロールにデータを提供するために使用する値のコレクションを格納している <see cref="T:System.Collections.IEnumerable" /> オブジェクトまたは <see cref="T:System.ComponentModel.IListSource" /> オブジェクト。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して作成するデータのソースを指定する、<xref:System.Web.UI.WebControls.Repeater>コントロール。 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>いずれかを指定できます<xref:System.Collections.IEnumerable?displayProperty=nameWithType>などのコレクション、<xref:System.Data.DataView?displayProperty=nameWithType>データベースにアクセスするため、 <xref:System.Collections.ArrayList?displayProperty=nameWithType>、配列、または、<xref:System.ComponentModel.IListSource>オブジェクト。 設定すると、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティ必要があります手動でコードを記述するデータ ソースにバインドします。  
  
 によって、データ ソースが指定されている場合、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティには、複数のデータ ソースが含まれています。 を使用して、<xref:System.Web.UI.WebControls.Repeater.DataMember%2A>プロパティ、コントロールにバインドする特定のソースを指定します。 たとえばがある場合、<xref:System.Data.DataSet?displayProperty=nameWithType>複数のテーブルには、コントロールにバインドするテーブルを指定する必要があります。 使用して、データ ソースを指定したら、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>データ ソースをコントロールにバインドするメソッド。  
  
 また、使用することができます、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>自動的にデータ ソース コントロールで表されるデータ ソースにバインドするプロパティです。 設定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Repeater>コントロールを自動的に指定されたデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>メソッドのプロパティを動的に変更していない限り、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 両方の値が指定されている場合、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティおよび<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティ ASP.NET は、データ ソースを解決できないと<xref:System.Web.HttpException?displayProperty=nameWithType>がスローされます。  
  
   
  
## Examples  
 次の例は、指定する方法を示します、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>の<xref:System.Web.UI.WebControls.Repeater>ページが読み込まれるときに制御します。  
  
 [!code-aspx-csharp[Classic Repeater.DataSource Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.DataSource Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.DataSource Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.DataSource Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">指定された <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> オブジェクトが、<see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールでサポートされているデータ ソースではありません。</exception>
        <exception cref="T:System.Web.HttpException">
          <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> プロパティと <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティの両方に値が指定されているため、データ ソースを解決できません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataMember" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      </Docs>
    </Member>
    <Member MemberName="DataSourceID">
      <MemberSignature Language="C#" Value="public virtual string DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataSourceID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty(typeof(System.Web.UI.DataSourceControl))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.Control.ID" /> コントロールがデータ ソースの取得に使用する必要があるデータ ソース コントロールの <see cref="T:System.Web.UI.WebControls.Repeater" /> プロパティを取得または設定します。</summary>
        <value>データ ソース コントロールの <see langword="ID" /> プロパティ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティへのアクセスを<xref:System.Web.UI.Control.ID%2A>データ ソースのプロパティを制御する、<xref:System.Web.UI.WebControls.Repeater>そのデータ ソースを取得するコントロールを使用する必要があります。 データ ソースによって参照されているコントロール、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティを実装する任意のコントロールにすることができます、<xref:System.Web.UI.IDataSource>インターフェイスです。 同じ名前付けコンテナーのいずれか、データ ソース コントロールが存在する必要があります、<xref:System.Web.UI.WebControls.Repeater>それを参照するコントロールの親コントロールで、または、<xref:System.Web.UI.WebControls.Repeater>コントロール。 値を指定すると、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Repeater>コントロールが、指定したデータ ソース コントロールにバインドします。 明示的に呼び出しのコードを記述する必要はありません、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>メソッドです。  
  
 また、使用することができます、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティにバインドする値のソースを指定する、<xref:System.Web.UI.WebControls.Repeater>コントロール。 データ ソースを実装するコレクションである必要があります、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイス (など、<xref:System.Data.DataView?displayProperty=nameWithType>または<xref:System.Collections.ArrayList?displayProperty=nameWithType>オブジェクト)、または<xref:System.ComponentModel.IListSource>インターフェイスです。 設定すると、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティ、データ バインディングを実行するコードを記述する必要があります。  
  
 両方の値が指定されている場合、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>と<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティ、ASP.NET は、データ ソースを解決するのにはできませんと<xref:System.Web.HttpException?displayProperty=nameWithType>例外がスローされます。  
  
 このプロパティの値は、ビュー ステートに格納されます。  
  
   
  
## Examples  
 次のコード例は、設定する方法を示します、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティを<xref:System.Web.UI.Control.ID%2A>のプロパティ、<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。 ページが読み込まれるときに、<xref:System.Web.UI.WebControls.Repeater>コントロールで指定されているデータ ソースに連結、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールとデータがユーザーに表示されます。  
  
 [!code-aspx-csharp[Repeater.DataSourceID#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Repeater.DataSourceID/CS/repeater.datasourceidcs.aspx#1)]
 [!code-aspx-vb[Repeater.DataSourceID#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Repeater.DataSourceID/VB/repeater.datasourceidvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">次の理由によりデータ ソースを解決できません。  
  
-   値が <see cref="P:System.Web.UI.WebControls.Repeater.DataSource" /> プロパティと <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティの両方に指定されています。  
  
-   <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティで指定されたデータ ソースがページ上にありません。  
  
-   <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティで指定されたデータ ソースが <see cref="T:System.Web.UI.IDataSource" /> を実装していません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
      </Docs>
    </Member>
    <Member MemberName="EnableTheming">
      <MemberSignature Language="C#" Value="public override bool EnableTheming { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableTheming" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.EnableTheming" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property EnableTheming As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableTheming { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このコントロールにテーマを適用するかどうかを示す値を取得または設定します。</summary>
        <value>
          テーマを使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.EnableTheming%2A>プロパティは、テーマが有効になっているかどうかを示します。 ときに、<xref:System.Web.UI.WebControls.Repeater.EnableTheming%2A>プロパティは`true`、コントロール スキンを適用するアプリケーションのテーマのディレクトリが検索されます。 テーマのディレクトリ内の特定のコントロール スキンが存在しない場合、スキンは適用されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; void EnsureDataBound();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールがデータ バインディングを必要とするかどうかと、<see cref="M:System.Web.UI.WebControls.Repeater.DataBind" /> メソッドを呼び出す前に有効なデータ ソース コントロールが指定されるかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 値を指定すると、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティが、ASP.NET は自動的にバインドされて、<xref:System.Web.UI.WebControls.Repeater>コントロールを指定したデータ ソース コントロール。 ASP.NET でのデータ バインディングを実行すると、<xref:System.Web.UI.WebControls.Repeater>コントロール、最初に呼び出して、<xref:System.Web.UI.WebControls.Repeater.EnsureDataBound%2A>コントロールがされていないデータにバインドされて有効なデータ ソースを制御することを実装していることを確認する方法、<xref:System.Web.UI.IDataSource>インターフェイスが指定されてその<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティです。 <xref:System.Web.UI.WebControls.Repeater.EnsureDataBound%2A>メソッドを呼び出します、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
        <altmember cref="M:System.Web.UI.WebControls.Repeater.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールのフッター セクションの表示方法を定義する <see cref="T:System.Web.UI.ITemplate" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールのフッター セクションの表示方法を定義する <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して制御するテンプレートを作成する方法のフッター セクション、<xref:System.Web.UI.WebControls.Repeater>コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>のフッターの外観を制御する、<xref:System.Web.UI.WebControls.Repeater>コントロール。 注意して、<xref:System.Web.UI.WebControls.Repeater.FooterTemplate%2A>テーブルの終了タグが含まれています (`</table>`)。  
  
 [!code-aspx-csharp[Classic Repeater.FooterTemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.FooterTemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="GetData">
      <MemberSignature Language="C#" Value="protected virtual System.Collections.IEnumerable GetData ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.IEnumerable GetData() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.GetData" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetData () As IEnumerable" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Collections::IEnumerable ^ GetData();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースから <see cref="T:System.Collections.IEnumerable" /> インターフェイスを返します。</summary>
        <returns>データ ソースのデータを表す <see cref="T:System.Collections.IEnumerable" /> を実装するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ ソースが指定されているか、<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>プロパティまたは、<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>と<xref:System.Web.UI.WebControls.Repeater.SelectArguments%2A>プロパティです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールのヘッダー セクションの表示方法を定義する <see cref="T:System.Web.UI.ITemplate" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールのヘッダー セクションの表示方法を定義する <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して制御するテンプレートを作成する方法のヘッダー セクション、<xref:System.Web.UI.WebControls.Repeater>コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>のヘッダーの外観を制御する、<xref:System.Web.UI.WebControls.Repeater>コントロール。 注意して、<xref:System.Web.UI.WebControls.Repeater.HeaderTemplate%2A>テーブルの開始タグが含まれています (`<table>`)。  
  
 [!code-aspx-csharp[Classic Repeater.FooterTemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.FooterTemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.FooterTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="Initialized">
      <MemberSignature Language="C#" Value="protected bool Initialized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Initialized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Initialized" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property Initialized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool Initialized { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが初期化されているかどうかを示す値を返します。</summary>
        <value>
          コントロールが初期化されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.Initialized%2A>プロパティは、ヘルパー プロパティかどうかをデータ バインディング必要なときに使用される、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A>、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>、または<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティを変更します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeItem">
      <MemberSignature Language="C#" Value="protected virtual void InitializeItem (System.Web.UI.WebControls.RepeaterItem item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeItem(class System.Web.UI.WebControls.RepeaterItem item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.InitializeItem(System.Web.UI.WebControls.RepeaterItem)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeItem (item As RepeaterItem)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeItem(System::Web::UI::WebControls::RepeaterItem ^ item);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Web.UI.WebControls.RepeaterItem" />
      </Parameters>
      <Docs>
        <param name="item">インライン テンプレートから初期化するコントロール。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> に子コントロールのサブ階層を繰り返し読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsBoundUsingDataSourceID">
      <MemberSignature Language="C#" Value="protected bool IsBoundUsingDataSourceID { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsBoundUsingDataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.IsBoundUsingDataSourceID" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsBoundUsingDataSourceID As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsBoundUsingDataSourceID { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティが設定されているかどうかを示す値を取得します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" /> プロパティが空の文字列 ("") 以外の値に設定されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.IsBoundUsingDataSourceID%2A>プロパティは、コントロールが、ASP.NET 2.0 のデータ ソース コントロールなど、バインドされているかどうかを決定するヘルパー プロパティ、<xref:System.Web.UI.WebControls.ObjectDataSource>または<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsDataBindingAutomatic">
      <MemberSignature Language="C#" Value="protected bool IsDataBindingAutomatic { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsDataBindingAutomatic" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.IsDataBindingAutomatic" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsDataBindingAutomatic As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsDataBindingAutomatic { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ バインディングが自動かどうか示す値を取得します。</summary>
        <value>
          データ バインディングが自動の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインディングが自動場合、<xref:System.Web.UI.WebControls.Repeater>コントロールがデータ ソース コントロールにバインドまたはかどうかモデル バインダーを使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As RepeaterCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::RepeaterCommandEventHandler ^ ItemCommand;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロール内でボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは、ボタン、<xref:System.Web.UI.WebControls.Repeater>コントロールをクリックします。  
  
 このイベントが発生するクライアントからラウンドト リップが発生します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 指定し、コードのハンドラーを次の例には、<xref:System.Web.UI.WebControls.Repeater.ItemCommand>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 ボタンについての情報が表示されるときに、<xref:System.Web.UI.WebControls.Button>内で制御、<xref:System.Web.UI.WebControls.Repeater>コントロールがクリックされました。  
  
 [!code-aspx-csharp[Classic Repeater.ItemCommand Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterItemEventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As RepeaterItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::RepeaterItemEventHandler ^ ItemCreated;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロール内に項目が作成されたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは内の項目が作成されるとき、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 指定し、コードのハンドラーを次の例には、<xref:System.Web.UI.WebControls.Repeater.ItemCreated>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 行の新しい項目の種類を示すテキストが表示されるたびに、<xref:System.Web.UI.WebControls.Repeater>項目を作成します。  
  
 [!code-aspx-csharp[Classic Repeater.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ItemDataBound">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.RepeaterItemEventHandler ItemDataBound;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.RepeaterItemEventHandler ItemDataBound" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Repeater.ItemDataBound" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDataBound As RepeaterItemEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::RepeaterItemEventHandler ^ ItemDataBound;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロール内の項目がデータ バインドされてから、ページ上に表示されるまでの間に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントは内の項目、<xref:System.Web.UI.WebControls.Repeater>コントロールがデータ バインドされています。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 指定し、コードのハンドラーを次の例には、<xref:System.Web.UI.WebControls.Repeater.ItemDataBound>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 内の項目にバインドされている後に、データが変更された、<xref:System.Web.UI.WebControls.Repeater>制御しますが、ページに表示される前にします。  
  
 [!code-aspx-csharp[Classic Repeater.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Items">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.RepeaterItemCollection Items { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.RepeaterItemCollection Items" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.Items" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Items As RepeaterItemCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::RepeaterItemCollection ^ Items { System::Web::UI::WebControls::RepeaterItemCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.RepeaterItemCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> コントロール内の <see cref="T:System.Web.UI.WebControls.Repeater" /> オブジェクトのコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.RepeaterItem" /> オブジェクトのコレクション。 既定値は空の <see cref="T:System.Web.UI.WebControls.RepeaterItemCollection" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater>コントロールは追加、<xref:System.Web.UI.WebControls.Repeater.Items%2A>コレクションのすべてのオブジェクトを列挙することでその<xref:System.Web.UI.WebControls.Repeater.DataSource%2A>です。 <xref:System.Web.UI.WebControls.Repeater.Items%2A>でコレクションを使用して、<xref:System.Web.UI.WebControls.Repeater>コントロール内の各項目をレンダリングするコントロール。  
  
   
  
## Examples  
 次の例で使用する方法、<xref:System.Web.UI.WebControls.Repeater.Items%2A>から選択した項目のインデックスを決定するプロパティ、<xref:System.Web.UI.WebControls.Repeater>コントロール。  
  
 [!code-aspx-csharp[Classic Repeater.Items Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.Items Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.Items Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.Items Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemCollection" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.ITemplate" /> コントロールの項目を表示する方法を定義する <see cref="T:System.Web.UI.WebControls.Repeater" /> を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> コントロール内の項目の表示方法を定義する <see cref="T:System.Web.UI.WebControls.Repeater" />。 既定値は <see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを使用して制御するテンプレートを作成する方法の項目を<xref:System.Web.UI.WebControls.Repeater>コントロールが表示されます。  
  
> [!CAUTION]
>  このコントロールは、悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示する使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次の例は、単純なを使用する方法を示しています。<xref:System.Web.UI.WebControls.Repeater>項目のテーブルを表示するコントロール。 使用に注意してください、<xref:System.Web.UI.WebControls.Repeater.ItemTemplate%2A>データ ソース内の各項目を表示します。  
  
 [!code-aspx-csharp[Classic Repeater.ItemTemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemTemplate Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemTemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemType">
      <MemberSignature Language="C#" Value="public virtual string ItemType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ItemType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.ItemType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemType As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ItemType { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>厳密に型指定されているデータ バインディングのモデル型名。</summary>
        <value>モデル型の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定して使用する場合、<xref:System.Web.UI.WebControls.Repeater.SelectMethod%2A>プロパティ、Select メソッドによって返される型はこのプロパティで指定された型でなければなりませんまたは、このプロパティによって指定された型にキャストできる必要があります。  
  
 Dynamic Data 機能を自動的にこのプロパティを設定できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態を表すオブジェクト。</param>
        <summary>
          <see cref="M:System.Web.UI.WebControls.Repeater.SaveViewState" /> メソッドによって保存された前回のページ要求からビュー ステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (sender As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <paramref name="EventArgs" /> パラメーターが <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> のインスタンスである場合、<see cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" /> イベントを発生させます。</summary>
        <returns>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> が発生した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 オーバーライドする方法を次のコード例に示します、<xref:System.Web.UI.WebControls.Repeater.OnDataBinding%2A>ようにする場合、イベント引数は、カスタム サーバー コントロール コマンドの種類、<xref:System.Web.UI.WebControls.Repeater>制御呼び出しでは常に、<xref:System.Web.UI.WebControls.Repeater.OnItemCommand%2A>と、イベントをさかのぼってまたはを返します`false`、イベントをキャンセルするとします。  
  
 [!code-aspx-csharp[CustomRepeaterOnBubbleEvent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/CS/custom_repeater_onbubbleeventcs.aspx#1)]
 [!code-aspx-vb[CustomRepeaterOnBubbleEvent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/VB/custom_repeater_onbubbleeventvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterOnBubbleEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/CS/custom_repeater_onbubbleevent.cs#2)]
 [!code-vb[CustomRepeaterOnBubbleEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnBubbleEvent/VB/custom_repeater_onbubbleevent.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCreatingModelDataSource">
      <MemberSignature Language="C#" Value="protected virtual void OnCreatingModelDataSource (System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCreatingModelDataSource(class System.Web.UI.WebControls.CreatingModelDataSourceEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCreatingModelDataSource (e As CreatingModelDataSourceEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCreatingModelDataSource(System::Web::UI::WebControls::CreatingModelDataSourceEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CreatingModelDataSourceEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">作成される <see cref="T:System.Web.UI.WebControls.ModelDataSource" /> オブジェクトへのアクセスを提供するオブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.CreatingModelDataSource" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataBinding">
      <MemberSignature Language="C#" Value="protected override void OnDataBinding (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnDataBinding(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataBinding(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnDataBinding (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnDataBinding(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see langword="DataBinding" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 オーバーライドする次のコード例を取り上げます、<xref:System.Web.UI.WebControls.Repeater.OnDataBinding%2A>ようにする場合、イベント引数は、カスタム サーバー コントロール コマンドの種類、<xref:System.Web.UI.WebControls.Repeater>制御呼び出しでは常に、<xref:System.Web.UI.WebControls.Repeater.OnItemCommand%2A>と、イベントをさかのぼってまたはを返します`false`、イベントをキャンセルするとします。  
  
 [!code-aspx-csharp[CustomRepeaterOnDataBinding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/CS/custom_repeater_ondatabindingcs.aspx#1)]
 [!code-aspx-vb[CustomRepeaterOnDataBinding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/VB/custom_repeater_ondatabindingvb.aspx#1)]  
  
 [!code-csharp[CustomRepeaterOnDataBinding#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/CS/custom_repeater_ondatabinding.cs#2)]
 [!code-vb[CustomRepeaterOnDataBinding#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomRepeaterOnDataBinding/VB/custom_repeater_ondatabinding.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnDataPropertyChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataPropertyChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataPropertyChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataPropertyChanged ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataPropertyChanged();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ バインディングが必要かどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged%2A>メソッドは、ときに呼び出されるヘルパー メソッド、 <xref:System.Web.UI.WebControls.Repeater.DataMember%2A>、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>、または<xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>プロパティを変更します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <see cref="M:System.Web.UI.WebControls.Repeater.OnDataPropertyChanged" /> が、コントロールのデータ バインディング フェーズで呼び出されます。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.Initialized" />
      </Docs>
    </Member>
    <Member MemberName="OnDataSourceViewChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnDataSourceViewChanged (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataSourceViewChanged(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataSourceViewChanged (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataSourceViewChanged(System::Object ^ sender, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" /> プロパティを <see langword="true" /> に設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged%2A>メソッドは、データのバインディング プロセスに参加しているヘルパー メソッドです。 このメソッドが呼び出されます、<xref:System.Web.UI.DataSourceView>関連付けられているデータ ソース コントロールであるオブジェクトをその<xref:System.Web.UI.DataSourceView.DataSourceViewChanged>イベント。 このイベントにより、<xref:System.Web.UI.WebControls.Repeater>コントロールのデータを更新されたデータにバインドします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.RepeaterCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.RepeaterCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As RepeaterCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::RepeaterCommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています、<xref:System.Web.UI.WebControls.Repeater.ItemCommand>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 ボタンについての情報が表示されるたびに、<xref:System.Web.UI.WebControls.Button>内で制御、<xref:System.Web.UI.WebControls.Repeater>コントロールがクリックされました。  
  
 [!code-aspx-csharp[Classic Repeater.ItemCommand Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemCommand Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCommand Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.WebControls.Repeater.OnItemCommand(System.Web.UI.WebControls.RepeaterCommandEventArgs)" />メソッドです。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterCommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (System.Web.UI.WebControls.RepeaterItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.Web.UI.WebControls.RepeaterItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As RepeaterItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(System::Web::UI::WebControls::RepeaterItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています、<xref:System.Web.UI.WebControls.Repeater.ItemCreated>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 行の新しい項目の種類を示すテキストが表示されるたびに、<xref:System.Web.UI.WebControls.Repeater>項目を作成します。  
  
 [!code-aspx-csharp[Classic Repeater.ItemCreated Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemCreated Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemCreated Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.WebControls.Repeater.OnItemCreated(System.Web.UI.WebControls.RepeaterItemEventArgs)" />メソッドです。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemCreated" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDataBound">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDataBound (System.Web.UI.WebControls.RepeaterItemEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDataBound(class System.Web.UI.WebControls.RepeaterItemEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDataBound (e As RepeaterItemEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDataBound(System::Web::UI::WebControls::RepeaterItemEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.RepeaterItemEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Repeater.ItemDataBound" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次の例は、処理する方法を示しています、<xref:System.Web.UI.WebControls.Repeater.ItemDataBound>のイベント、<xref:System.Web.UI.WebControls.Repeater>コントロール。 内の項目にバインドされている後に、データが変更された、<xref:System.Web.UI.WebControls.Repeater>制御しますが、ページに表示される前にします。  
  
 [!code-aspx-csharp[Classic Repeater.ItemDataBound Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.ItemDataBound Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.ItemDataBound Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合<see cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />派生クラスでは、基本クラスの呼び出しを必ず<see cref="M:System.Web.UI.WebControls.Repeater.OnItemDataBound(System.Web.UI.WebControls.RepeaterItemEventArgs)" />メソッドです。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Repeater.ItemDataBound" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.RepeaterItemEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="OnLoad">
      <MemberSignature Language="C#" Value="protected internal override void OnLoad (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnLoad(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnLoad(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnLoad (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnLoad(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> オブジェクト。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.Load" /> イベントを発生させ、その他の初期化を実行します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater.OnLoad%2A>メソッドは、通知、<xref:System.Web.UI.WebControls.Repeater>コントロールに関連付けられている、データベース クエリの設定など、ページの各 HTTP 要求に共通する処理を実行する必要があります。 ページのライフ サイクルでこの段階で、階層内のサーバー コントロールが作成され、初期化、ビュー ステートが復元され、フォーム上のコントロールがクライアント側のデータを反映します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.OnLoad(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <see cref="T:System.Web.UI.WebControls.RepeaterItemEventArgs" /> オブジェクトは、イベント データを格納しています。</param>
        <summary>
          <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.PreRender>イベントは、サーバー コントロールがページにレンダリングされるは、出力の前に、更新プログラムを実行するために使用します。 このイベント中に、サーバー コントロールのビュー ステートの変更を保存できます。 レンダリングのフェーズで行われた変更は保存されません。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.Control.PreRender" />
      </Docs>
    </Member>
    <Member MemberName="RequiresDataBinding">
      <MemberSignature Language="C#" Value="protected bool RequiresDataBinding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RequiresDataBinding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.RequiresDataBinding" />
      <MemberSignature Language="VB.NET" Value="Protected Property RequiresDataBinding As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool RequiresDataBinding { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールが、指定したデータ ソースにバインドされる必要があるかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Repeater" /> コントロールがデータ ソースにバインドされる必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Repeater>コントロール、<xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A>コントロールを呼び出す必要があるかどうかを決定するプロパティ、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>その指定されたデータ ソースにバインドするメソッド。  
  
 いずれかの set アクセサーが呼び出されるたびに、 <xref:System.Web.UI.WebControls.Repeater.DataSource%2A>、 <xref:System.Web.UI.WebControls.Repeater.DataSourceID%2A>、または<xref:System.Web.UI.WebControls.Repeater.DataMember%2A>後に、データ ソースを変更するプロパティ、<xref:System.Web.UI.WebControls.Repeater.OnInit%2A>メソッドは既に呼び出されて、ASP.NET 設定の値、<xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A>プロパティを`true`です。 値、<xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A>プロパティに設定されても`true`ときに、<xref:System.Web.UI.WebControls.Repeater.OnDataSourceViewChanged%2A>メソッドが呼び出されます。  
  
 ASP.NET 設定の値、<xref:System.Web.UI.WebControls.Repeater.RequiresDataBinding%2A>プロパティを`false`後すぐに、<xref:System.Web.UI.WebControls.Repeater.DataBind%2A>メソッドが呼び出されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSource" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataSourceID" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.DataMember" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ページがサーバーにポストバックされた後で発生したビュー ステートの変更を保存します。</summary>
        <returns>コントロールの現在のビュー ステート。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectArguments">
      <MemberSignature Language="C#" Value="protected System.Web.UI.DataSourceSelectArguments SelectArguments { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.DataSourceSelectArguments SelectArguments" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property SelectArguments As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Web::UI::DataSourceSelectArguments ^ SelectArguments { System::Web::UI::DataSourceSelectArguments ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.DataSourceSelectArguments" /> コントロールがデータ ソース コントロールからデータを取得するときに使用する <see cref="T:System.Web.UI.WebControls.Repeater" /> オブジェクトを取得します。</summary>
        <value>データの取得に使用する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクト。 既定値は、<see cref="P:System.Web.UI.DataSourceSelectArguments.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 最初の呼び出し、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトの呼び出し、<xref:System.Web.UI.WebControls.Repeater.CreateDataSourceSelectArguments%2A>メソッドを作成、<xref:System.Web.UI.DataSourceSelectArguments.Empty%2A>オブジェクト。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectMethod">
      <MemberSignature Language="C#" Value="public virtual string SelectMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SelectMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SelectMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SelectMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SelectMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データを読み取るために呼び出すメソッドの名前。</summary>
        <value>メソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティを設定すると、データのバインド方法として使用するモデル バインドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SeparatorTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SeparatorTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SeparatorTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Repeater.SeparatorTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SeparatorTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SeparatorTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.RepeaterItem))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>項目間の区切り記号の表示方法を定義する <see cref="T:System.Web.UI.ITemplate" /> インターフェイスを取得または設定します。</summary>
        <value>項目間の区切り記号の表示方法を定義する <see cref="T:System.Web.UI.ITemplate" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A>項目間の区切り記号を表示する方法を制御するテンプレートを作成するプロパティです。  
  
> [!CAUTION]
>  使用することができます、<xref:System.Web.UI.WebControls.Repeater.SeparatorTemplate%2A>悪意のあるクライアント スクリプトが含まれる可能性があります、ユーザー入力を表示するプロパティです。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコードをアプリケーションに表示する前に、クライアントから送信される情報を確認します。 ASP.NET は、入力要求の検証機能があり、ユーザー入力の中のスクリプトのブロックと HTML を提供します。 検証サーバー コントロールは、ユーザー入力を評価するも提供されます。 詳細については、次を参照してください。[検証サーバー コントロール構文](http://msdn.microsoft.com/library/96d2c59e-693c-4079-9b53-b3ff0d9e9133)です。  
  
   
  
## Examples  
 次のコード例では、アイテム間の区切り記号を表示する方法を制御するテンプレートを作成する方法を示します。  
  
 [!code-aspx-csharp[Classic Repeater.SeparatorTemplate Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Repeater.SeparatorTemplate Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Repeater.SeparatorTemplate Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Repeater.SeparatorTemplate Example/VB/sourcevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Repeater.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Repeater.AlternatingItemTemplate" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Repeater.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに変更を格納できるように、コントロールにビュー ステートの変更を追跡させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>