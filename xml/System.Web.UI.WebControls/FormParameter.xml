<Type Name="FormParameter" FullName="System.Web.UI.WebControls.FormParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e3045add10d9f1db9603f9b5491e014b17fc47d1" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37535936" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FormParameter : System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormParameter extends System.Web.UI.WebControls.Parameter" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class FormParameter&#xA;Inherits Parameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormParameter : System::Web::UI::WebControls::Parameter" />
  <TypeSignature Language="F#" Value="type FormParameter = class&#xA;    inherit Parameter" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.Parameter</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("FormField")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>HTTP 要求の <see cref="P:System.Web.HttpRequest.Form" /> フィールドの値をパラメーター オブジェクトにバインドします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Web.UI.WebControls.FormParameter>クラス内のフォーム変数の値をバインドする、<xref:System.Web.HttpRequest.Form%2A>をパラメーター化クエリまたはコマンドで使用されるパラメーターのコレクション。 場合、パラメーターにデータをバインドするコントロールは例外をスロー可能性があります、<xref:System.Web.UI.WebControls.FormParameter>が指定されて、対応するフォームの変数が渡されない。 これらもデータは表示されません、対応する値はありません、フォームの変数が渡された場合。 設定、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>適切な場所に、このような状況を回避するためにします。  
  
 <xref:System.Web.UI.WebControls.FormParameter>クラスには、<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>から継承しただけでなく、バインドするフォーム変数の名前を識別するには、プロパティ、<xref:System.Web.UI.WebControls.Parameter>クラス。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>は任意の方法で、フォーム要素によって渡される値は検証されません生の値が使用されます。 ほとんどの場合は、値を検証することができます、<xref:System.Web.UI.WebControls.FormParameter>など、イベントを処理することによって、データ ソース コントロールによって使用される前に、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`を使用するデータ ソース コントロールによって公開されるイベント。 設定して、データ操作をキャンセルするには、パラメーターの値が検証テストに合格しなかった場合、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティ、関連付けられている<xref:System.ComponentModel.CancelEventArgs>クラスを`true`します。  
  
   
  
## Examples  
 次のコード例に示しますを使用してデータベースにデータを挿入する方法、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールと単純な ASP.NET Web ページ。 データ テーブルの現在のデータが表示されます、<xref:System.Web.UI.WebControls.DropDownList>コントロール。 内の値を入力して新しいレコードを追加することができます、<xref:System.Web.UI.WebControls.TextBox>コントロールとボタンをクリックします。 指定された値が、データベースに挿入は、ボタンがクリックされたときに、<xref:System.Web.UI.WebControls.DropDownList>が更新されます。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/CS/sql24cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSource_24sql/VB/sql24vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ControlParameter" />
    <altmember cref="T:System.Web.UI.WebControls.CookieParameter" />
    <altmember cref="T:System.Web.UI.WebControls.ProfileParameter" />
    <altmember cref="T:System.Web.UI.WebControls.QueryStringParameter" />
    <altmember cref="T:System.Web.UI.WebControls.SessionParameter" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの名前のない新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>コンス トラクターは、すべてのプロパティの既定値で初期化されます。 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>に初期化されます<xref:System.String.Empty?displayProperty=nameWithType>します。 さらに、<xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティに初期化されます<xref:System.String.Empty?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Type%2A>プロパティに初期化されます<xref:System.TypeCode.Object?displayProperty=nameWithType>、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティに初期化されます<xref:System.Data.ParameterDirection.Input>、および<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティの初期化null (`Nothing` Visual Basic で)。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>は任意の方法で、フォーム要素によって渡される値は検証されません生の値が使用されます。 値を検証するほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter>など、イベントを処理することによって、データ ソース コントロールによって使用される前に、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`を使用するデータ ソース コントロールによって公開されるイベント。 設定して、データ操作をキャンセルするには、パラメーターの値が検証テストに合格しなかった場合、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティ、関連付けられている<xref:System.ComponentModel.CancelEventArgs>クラスを`true`します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/CS/fp1cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_1/VB/fp1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected FormParameter (System.Web.UI.WebControls.FormParameter original);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.FormParameter original) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New (original As FormParameter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; FormParameter(System::Web::UI::WebControls::FormParameter ^ original);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : System.Web.UI.WebControls.FormParameter -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter original" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="original" Type="System.Web.UI.WebControls.FormParameter" />
      </Parameters>
      <Docs>
        <param name="original">現在のインスタンスの初期化元になる <see cref="T:System.Web.UI.WebControls.FormParameter" /> インスタンス。</param>
        <summary>
          <paramref name="original" /> パラメーターで指定されたインスタンスの値を使用して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>コンス トラクターは、`protected`のクローンを作成するために使用するコピー コンス トラクター、<xref:System.Web.UI.WebControls.FormParameter>インスタンス。 値、<xref:System.Web.UI.WebControls.FormParameter>など、 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>、および<xref:System.Web.UI.WebControls.Parameter.Type%2A>新しいインスタンスに転送されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Clone" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。 既定値は、<see cref="F:System.String.Empty" /> です。</param>
        <summary>バインド先のフォーム変数フィールドを識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの名前付きの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>コンス トラクターは、指定したパラメーター名とパラメーターのバインド先のフォーム変数を識別する文字列で初期化されます。 <xref:System.Web.UI.WebControls.Parameter.Type%2A>と<xref:System.Web.UI.WebControls.Parameter.Direction%2A>プロパティは、既定値で初期化されます。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>は任意の方法で、フォーム要素によって渡される値は検証されません生の値が使用されます。 値を検証するほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter>など、イベントを処理することによって、データ ソース コントロールによって使用される前に、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`を使用するデータ ソース コントロールによって公開されるイベント。 設定して、データ操作をキャンセルするには、パラメーターの値が検証テストに合格しなかった場合、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティ、関連付けられている<xref:System.ComponentModel.CancelEventArgs>クラスを`true`します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/CS/fp2cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_2/VB/fp2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, System.Data.DbType dbType, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.Data.DbType dbType, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, System::Data::DbType dbType, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * System.Data.DbType * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, dbType, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="dbType" Type="System.Data.DbType" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="dbType">パラメーターのデータベース型。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。</param>
        <summary>バインド先のフォーム変数フィールドを識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormParameter (string name, TypeCode type, string formField);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string name, valuetype System.TypeCode type, string formField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (name As String, type As TypeCode, formField As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormParameter(System::String ^ name, TypeCode type, System::String ^ formField);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormParameter : string * TypeCode * string -&gt; System.Web.UI.WebControls.FormParameter" Usage="new System.Web.UI.WebControls.FormParameter (name, type, formField)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="type" Type="System.TypeCode" />
        <Parameter Name="formField" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">パラメーターの名前。</param>
        <param name="type">パラメーターが表す型。 既定値は、<see cref="F:System.TypeCode.Object" /> です。</param>
        <param name="formField">パラメーター オブジェクトのバインド先のフォーム変数の名前。 既定値は、<see cref="F:System.String.Empty" /> です。</param>
        <summary>バインド先のフォーム変数を識別する文字列を指定して、<see cref="T:System.Web.UI.WebControls.FormParameter" /> クラスの厳密に型指定された名前付きの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 A<xref:System.Web.UI.WebControls.FormParameter>オブジェクトを作成した、<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>コンス トラクターは、指定されたパラメーターの名前を持つ初期化<xref:System.Web.UI.WebControls.Parameter.Type%2A>、およびパラメーターのバインド先のフォーム変数を識別する文字列。 のみ、<xref:System.Web.UI.WebControls.Parameter.Direction%2A>と<xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>プロパティは、既定値で初期化されます。  
  
   
  
## Examples  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>は任意の方法で、フォーム要素によって渡される値は検証されません生の値が使用されます。 値を検証するほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter>など、イベントを処理することによって、データ ソース コントロールによって使用される前に、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`を使用するデータ ソース コントロールによって公開されるイベント。 設定して、データ操作をキャンセルするには、パラメーターの値が検証テストに合格しなかった場合、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティ、関連付けられている<xref:System.ComponentModel.CancelEventArgs>クラスを`true`します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/CS/fp3cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.FormParameter_3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.FormParameter_3/VB/fp3vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.Name" />
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Parameter Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Parameter Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Clone" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function Clone () As Parameter" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Parameter ^ Clone();" />
      <MemberSignature Language="F#" Value="override this.Clone : unit -&gt; System.Web.UI.WebControls.Parameter" Usage="formParameter.Clone " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Parameter</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.FormParameter" /> インスタンスの複製を返します。</summary>
        <returns>現在の <see cref="T:System.Web.UI.WebControls.FormParameter" /> とまったく同じインスタンス。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.Clone%2A>メソッドの呼び出し、<xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>の新しいインスタンスを初期化するために、コピー コンス トラクター、<xref:System.Web.UI.WebControls.FormParameter>現在のインスタンスの値を持つクラス。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)" />
      </Docs>
    </Member>
    <Member MemberName="Evaluate">
      <MemberSignature Language="C#" Value="protected internal override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object Evaluate(class System.Web.HttpContext context, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ Evaluate(System::Web::HttpContext ^ context, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Evaluate : System.Web.HttpContext * System.Web.UI.Control -&gt; obj" Usage="formParameter.Evaluate (context, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="context" Type="System.Web.HttpContext" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="context">要求の現在の <see cref="T:System.Web.HttpContext" />。</param>
        <param name="control">
          <see cref="T:System.Web.UI.Control" /> を使用したページに関連付けられている <see cref="T:System.Web.UI.WebControls.FormParameter" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.FormParameter" /> オブジェクトの値を更新して返します。</summary>
        <returns>パラメーターの更新された現在の値を表すオブジェクト。 コンテキストまたは要求が null (Visual Basic の場合は <see langword="Nothing" />) の場合、<see cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" /> メソッドは null を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter>フォーム変数にバインドを毎回、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>メソッドが呼び出されます。  
  
 `context`パラメーターを使用して、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>要求から指定されたフォーム フィールドの値を取得します。 `control`パラメーターは無視されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormParameter.FormField" />
      </Docs>
    </Member>
    <Member MemberName="FormField">
      <MemberSignature Language="C#" Value="public string FormField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FormField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberSignature Language="VB.NET" Value="Public Property FormField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FormField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FormField : string with get, set" Usage="System.Web.UI.WebControls.FormParameter.FormField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターのバインド先のフォーム変数の名前を取得または設定します。</summary>
        <value>パラメーターのバインド先のフォーム変数を識別する文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>で渡される名前/値ペアを識別、<xref:System.Web.HttpRequest.Form%2A>コレクション。 中に、<xref:System.Web.UI.WebControls.FormParameter.FormField%2A>プロパティは、ペアの名前を識別、<xref:System.Web.UI.WebControls.FormParameter>実行時に、対応する値にバインドします。 予期される形式の文字列変数の名前/値ペアがコレクション内の ASP.NET Web ページに渡されない場合、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>メソッドの値にパラメーターをバインドする、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>プロパティ、設定されている場合。 場合、<xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>が設定されていない、<xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>値にパラメーターをバインドするメソッドは失敗します。  
  
   
  
## Examples  
 次のコード例を使用してフィルター選択されたデータを表示する方法を示します、<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールと<xref:System.Web.UI.WebControls.FormParameter>中間層ビジネス オブジェクトからデータを取得して、<xref:System.Web.UI.WebControls.GridView>結果を表示するコントロール。  
  
 コード例は、 <xref:System.Web.UI.WebControls.TextBox>、<xref:System.Web.UI.WebControls.GridView>コントロール、<xref:System.Web.UI.WebControls.ObjectDataSource>制御、および送信ボタン。 既定で、 <xref:System.Web.UI.WebControls.TextBox> Northwind traders 社の従業員のいずれかの名前が表示されます。 <xref:System.Web.UI.WebControls.GridView>を名前で識別される従業員に関する情報が表示されます、<xref:System.Web.UI.WebControls.TextBox>します。 別の従業員のデータを取得するには、内の従業員のフル_ネームを入力、<xref:System.Web.UI.WebControls.TextBox>ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>プロパティによって取得されたデータをフィルター処理に使用する式を指定します、<xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>します。 このプロパティに含まれているパラメーターに評価されるパラメーターのプレース ホルダーを使用して、<xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>コレクション。 この例では、パラメーター プレース ホルダーは、<xref:System.Web.UI.WebControls.FormParameter>の値にバインドされている、<xref:System.Web.UI.WebControls.TextBox>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/objds9cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/objds9vb.aspx#1)]  
  
 次のコード例では、上記のコード例を使用する中間層ビジネス オブジェクトを示します。 この例は、2 つの基本クラスで構成されています。`EmployeeLogic`クラスは、ビジネス ロジックをカプセル化し、`NorthwindEmployee`クラスは、モデル クラスを読み込んで、データ層からデータを永続化に必要な基本機能のみを含みます。 わかりやすくするため、`EmployeeLogic`クラスは、データ層からデータを取得するのではなく、データの静的なセットを作成します。 サンプルではユーザーをフィルター処理を示すために、Northwind traders 社の従業員の完全な名前を指定するためにもこの例では便利です。 完全な作業例については、コンパイルし、ASP.NET のコード例が提供されると、これらのクラスを使用する必要があります。  
  
> [!IMPORTANT]
>  <xref:System.Web.UI.WebControls.FormParameter>は任意の方法で、フォーム要素によって渡される値は検証されません生の値が使用されます。 値を検証するほとんどの場合、<xref:System.Web.UI.WebControls.FormParameter>など、イベントを処理することによって、データ ソース コントロールによって使用される前に、 `Selecting`、 `Updating`、 `Inserting`、または`Deleting`を使用するデータ ソース コントロールによって公開されるイベント。 設定して、データ操作をキャンセルするには、パラメーターの値が検証テストに合格しなかった場合、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティ、関連付けられている<xref:System.ComponentModel.CancelEventArgs>クラスを`true`します。  
  
 [!code-csharp[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/CS/northwindemployee9.cs#2)]
 [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ObjectDataSource_9/VB/northwindemployee9.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Parameter.DefaultValue" />
        <altmember cref="M:System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="ValidateInput">
      <MemberSignature Language="C#" Value="public bool ValidateInput { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateInput" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateInput As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateInput { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateInput : bool with get, set" Usage="System.Web.UI.WebControls.FormParameter.ValidateInput" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>パラメーターでのクライアントの入力が検証されるかどうかを示す値を取得または設定します。</summary>
        <value>クライアントの入力が検証される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>