<Type Name="EntityDataSource" FullName="System.Web.UI.WebControls.EntityDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="827d8b0fab9fae849992a2952be1798203bb6743" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70462748" /></Metadata><TypeSignature Language="C#" Value="public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EntityDataSource extends System.Web.UI.DataSourceControl implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource, class System.Web.UI.WebControls.IQueryableDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.EntityDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class EntityDataSource&#xA;Inherits DataSourceControl&#xA;Implements IDynamicDataSource, IQueryableDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class EntityDataSource : System::Web::UI::DataSourceControl, System::Web::DynamicData::IDynamicDataSource, System::Web::UI::WebControls::IQueryableDataSource" />
  <TypeSignature Language="F#" Value="type EntityDataSource = class&#xA;    inherit DataSourceControl&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource&#xA;    interface IQueryableDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Entity</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IQueryableDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("EntitySetName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ASP.NET アプリケーション内のデータ バインド コントロールに対して Entity Data Model (EDM) を表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.EntityDataSource>コントロールをデータバインドコントロールと共に使用して、EDM からデータを取得したり、コードをほとんどまたはまったく使用せずに、Web ページ上のデータの表示、編集、並べ替えを行うことができます。 詳細については、「 [EntityDataSource Web サーバーコントロールの概要](https://msdn.microsoft.com/library/1f09af00-9578-4744-a029-765710a3c83f)」を参照してください。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:EntityDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    CommandText="string"  
    ConnectionString="string"  
    ContextType="typed ObjectContext"  
    ContextTypeName="string"  
    DefaultContainerName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    EntitySetName="string"  
    EntityTypeFilter="string"  
    GroupBy="string"  
    Include="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnException="IDynamicDataSource.Exception event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    StoreOriginalValuesInViewState="True|False"  
    Where="string"  
>  
        <CommandParameters />  
        <DeleteParameters />  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <UpdateParameters />  
        <WhereParameters />  
</asp:EntityDataSource>  
```  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/a2166b3d-d8ba-4a0a-8552-6ba1e3eaaee0">Entity Framework の概要</related>
    <related type="Article" href="https://msdn.microsoft.com/library/338d8a55-05cc-46b0-bbb8-1379d77068e9">オブジェクトの使用</related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EntityDataSource (System.Data.EntityClient.EntityConnection connection);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.EntityClient.EntityConnection connection) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (connection As EntityConnection)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EntityDataSource(System::Data::EntityClient::EntityConnection ^ connection);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.EntityDataSource : System.Data.EntityClient.EntityConnection -&gt; System.Web.UI.WebControls.EntityDataSource" Usage="new System.Web.UI.WebControls.EntityDataSource connection" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="connection" Type="System.Data.EntityClient.EntityConnection" />
      </Parameters>
      <Docs>
        <param name="connection">Entity Data Model (EDM) への <see cref="T:System.Data.EntityClient.EntityConnection" />。</param>
        <summary>指定された接続を使用して、<see cref="T:System.Web.UI.WebControls.EntityDataSource" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールが <see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" /> コレクション内の値に基づいて ORDER BY 句を動的に作成するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールが ORDER BY 句を作成する場合は <see langword="true" />。それ以外の場合 <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ParameterCollection> <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コントロールのプロパティがに`true`設定されている場合、コントロールは、プロパティに割り当てられているのパラメーターから order BY 句を自動的に生成します。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> <xref:System.Web.UI.WebControls.EntityDataSource> これにより、order by 句を<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティに明示的に割り当てる必要がなくなります。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>プロパティをに`true`設定した場合、 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティに値を明示的に割り当てることはできません。  
  
   
  
## Examples  
 次の例では、ORDER BY 句を自動的に生成し、 `OrderByDropDownList`の値を使用してパラメーターの値を設定します。  
  
```  
<asp:DropDownList AutoPostBack="true" ID="OrderByDropDownList" runat="server">  
    <asp:ListItem Value="TotalDue"></asp:ListItem>  
    <asp:ListItem Value="OrderDate"></asp:ListItem>  
</asp:DropDownList>  
  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:ControlParameter  
    ControlID="OrderByDropDownList"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 次の例では、ORDER BY 句を自動的に`DefaultValue`生成し、 `Parameter`要素の属性を使用してパラメーターの値を設定します。  
  
```  
<asp:EntityDataSource ID="EntityDataSourceWithAutoGenOrderBy" runat="server"   
ConnectionString="name=AdventureWorksEntities"   
DefaultContainerName="AdventureWorksEntities"   
EntitySetName="SalesOrderHeaders"   
Select="it.SalesOrderID, it.TotalDue, it.OrderDate"  
AutoGenerateOrderByClause="True">  
<OrderByParameters>  
    <asp:Parameter  
    DefaultValue="TotalDue"/>  
</OrderByParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause" /> プロパティが <see langword="true" /> に設定されており、<see cref="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" /> プロパティが null でない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールが <see cref="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" /> コレクションに定義された値に基づいて WHERE 句を動的に作成するかどうかを示す値を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールが WHERE 句を作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 エンティティ型の<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>プロパティを式にひずみしてクエリ結果をフィルター処理するには、プロパティを使用します。 `true` <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> <xref:System.Web.UI.WebControls.ParameterCollection>コントロールのプロパティがに設定されている場合、コントロールは、 `WHERE`プロパティの内のパラメーターから句を自動的に生成します。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> <xref:System.Web.UI.WebControls.EntityDataSource> 各<xref:System.Web.UI.WebControls.Parameter.Name%2A>パラメーターのプロパティは、クエリ結果に含まれるエンティティ型のプロパティ名と一致する必要があります。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>プロパティをに`true`設定する場合は、明示的に句を`WHERE` <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに割り当てないようにしてください。  
  
## <a name="example"></a>例  
 次の例では<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> 、プロパティがに`true`設定されています。 したがって、 <xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティのは、クエリ結果に含まれるエンティティ型のプロパティ名と一致する必要があります。 このクエリでは、SalesOrderHeader エンティティ型の SalesOrderID プロパティと TotalDue プロパティを選択します。 自動的に生成`WHERE`された句は、TotalDue 値を TotalDueList リストボックスコントロールで選択された値と比較することによって、クエリ結果をフィルター処理します。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Select="it.SalesOrderID, it.TotalDue"  
    AutoGenerateWhereClause="True">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="TotalDue" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
## <a name="example"></a>例  
 既定では、<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A> プロパティは `false` に設定されます。 これは、 `WHERE`句を指定する必要があることを意味します。 次の例では、 `WHERE`句は`Where="it.TotalDue < @totalDueParam"`で、totalDueParam はパラメーター名です。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeaderWithOutAutoParam" runat="server"   
   ConnectionString="name=AdventureWorksEntities"   
   DefaultContainerName="AdventureWorksEntities"   
   EntitySetName="SalesOrderHeaders"   
   Where="it.TotalDue < @totalDueParam"   
    Select="it.SalesOrderID, it.TotalDue">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="TotalDueList"   
           Name="totalDueParam" PropertyName="SelectedValue" DbType="Decimal" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause" /> プロパティが <see langword="true" /> に設定されており、<see cref="P:System.Web.UI.WebControls.EntityDataSource.Where" /> プロパティが null でない場合。</exception>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行時に <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールがデータ セクションでのナビゲーションをサポートするかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーがデータを閲覧できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.EntityDataSource>では、クエリによって返されるデータの自動ページングがサポートされています。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>プロパティは、データコントロールにバインドされたクエリによって返されるデータに対してページングを有効にするかどうかを示すブール型プロパティです。 このプロパティ`true`がに設定され<xref:System.Web.UI.WebControls.EntityDataSourceView>て<xref:System.Web.UI.WebControls.EntityDataSource>いる場合、コントロールは、データバインドコントロール<xref:System.Data.Objects.ObjectQuery%601>によってに渡された情報に基づいて、適切なクエリビルダーメソッドをに追加します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>プロパティの値によって、データ<xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>ソースをサポート<xref:System.Web.UI.WebControls.EntityDataSourceView>するコントロールのプロパティがまたは`true` `false`のどちらであるかが決まります。  
  
 ページングが有効になっているプロジェクションを定義する場合は、結果の順序付けに使用するプロパティを定義する必要があります。 つまり、 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティを設定し<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>て射影を定義し、をに`true`設定した場合は、プロパティを設定して注文を定義するか<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 、プロパティ`true`をに設定し、注文を追加する必要があります。パラメーター BY を<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コレクションに渡します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行時に <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールがデータの並べ替えをサポートするかどうかを示す値を取得または設定します。</summary>
        <value>ユーザーがデータを並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.EntityDataSource>は、クエリによって返されるデータを自動的に並べ替えることをサポートしています。 コントロールのプロパティは、データコントロールにバインドされているクエリによって返されるデータに対して並べ替えを有効にするかどうかを示すブール型プロパティです。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A> <xref:System.Web.UI.WebControls.EntityDataSource> このプロパティ`true`がに設定され<xref:System.Web.UI.WebControls.EntityDataSourceView>て<xref:System.Web.UI.WebControls.EntityDataSource>いる場合、コントロールは、データバインドコントロール<xref:System.Data.Objects.ObjectQuery%601>によってに渡された情報に基づいて、適切なクエリビルダーメソッドをに追加します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.AutoSort%2A>プロパティの値によって、データ<xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>ソース<xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>をサポートする<xref:System.Web.UI.WebControls.EntityDataSourceView>コントロールのプロパティとプロパティがまた`true`は`false`であるかどうかが決まります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection CommandParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CommandParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ CommandParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CommandParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.CommandParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリのパラメーターのコレクションを取得します。</summary>
        <value>クエリ コマンドに渡されるパラメーターが格納されている <see cref="T:System.Web.UI.WebControls.ParameterCollection" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>プロパティを使用し<xref:System.Web.UI.WebControls.ParameterCollection>て指定された明示的な Entity SQL クエリに渡されるパラメーターのにアクセスするために使用されます。 <xref:System.Web.UI.WebControls.EntityDataSource.CommandParameters%2A>  
  
   
  
## Examples  
 次の例では、製品オブジェクトのコレクションを返すコマンドテキスト Entity SQL を指定します。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 次の例では、射影された一連の列を返します。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
         FROM Products AS p   
         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
         ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
               ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
               ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CommandText">
      <MemberSignature Language="C#" Value="public string CommandText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CommandText : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.CommandText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリを定義する Entity SQL コマンドを取得または設定します。</summary>
        <value>Entity SQL クエリである <see langword="string" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティを使用すると、カスタム Entity SQL 式を使用するクエリを指定できます。 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> <xref:System.Web.UI.WebControls.EntityDataSource> SELECT ステートメントと同様に<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> 、は更新できない元のデータの射影を作成します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>プロパティが割り当てられると、update、insert、および delete の各機能が無効になります。 この場合、関連する<xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> `false` <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>コントロールのメソッド、、およびはすべて <xref:System.Web.UI.WebControls.EntityDataSourceView> を返します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A> <xref:System.Web.UI.WebControls.EntityDataSource> <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>プロパティが設定されている場合、、、またはの値がに`true`設定されている場合、コントロールにデータがバインドされているコントロールによってメソッドが呼び出されると、例外がスローされます。 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>  
  
 がプロパティの射影 (たとえば "`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`") <xref:System.Data.Common.DbDataRecord>を返すクエリに設定されている場合は、が返されます。 <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>  
  
   
  
## Examples  
 次の例では、指定された Entity SQL コマンドを使用して、Product オブジェクトのコレクションを返します。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT value p FROM Products AS p  
        WHERE p.ProductID  
        BETWEEN @OrderIdMin AND @OrderIdMax"  
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" >  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIdMin"   
            ControlID="ProductIdMin" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIdMax"   
            ControlID="ProductIdMax" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 次の例では、射影された一連の列を返します。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    CommandText="SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  
          FROM Products AS p   
          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax"   
          ContextTypeName="AdventureWorksModel. AdventureWorksEntities">  
    <CommandParameters>  
        <asp:ControlParameter Name="OrderIDMin"   
                ControlID="ProductIDMinTextBox" Type="Int32"/>  
        <asp:ControlParameter Name="OrderIDMax"   
                ControlID="ProductIDMaxTextBox" Type="Int32" />  
    </CommandParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ConnectionString">
      <MemberSignature Language="C#" Value="public string ConnectionString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ConnectionString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberSignature Language="VB.NET" Value="Public Property ConnectionString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ConnectionString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ConnectionString : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ConnectionString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリを実行するために使用する接続文字列を取得または設定します。</summary>
        <value>クエリの接続文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティは、アプリケーション構成ファイルの connectionStrings 要素に格納されている名前付き EDM 接続文字列から初期化できます。 [](https://msdn.microsoft.com/library/b6ffbb2e-a4d1-410e-8f7e-9755e92c65de) <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> <xref:System.Web.UI.WebControls.EntityDataSource> Entity Data Model ウィザードを使用して EDM を作成すると、アプリケーション構成ファイルに名前付きの EDM 接続が作成されます。 名前付き EDM 接続文字列がアプリケーション構成ファイルで見つかった場合、EntityDataSource デザイナーのデータソースの構成ウィザードでは、その接続がオプションとして表示されます。 詳細については、「[データソースの構成ウィザード (EntityDataSource コントロール)](https://msdn.microsoft.com/library/263976a5-2406-47c0-8919-c6af6e76d78e)」を参照してください。  
  
 プロパティが指定されていない場合<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 、 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>コントロールがを作成するには、プロパティと<xref:System.Data.Objects.ObjectContext>プロパティの両方が設定されている必要があります。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of EntityDataSourceContextCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatedEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> がエンティティ データ オブジェクトを操作するために使用する <see cref="T:System.Data.Objects.ObjectContext" /> の作成を完了した場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを処理し<xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSource>て、コントロールがクエリを実行し、変更を追跡するために使用するにアクセスします。 このコンテキストオブジェクトは、の<xref:System.Web.UI.WebControls.EntityDataSource>外部での連続する操作に格納および使用できます。 は、 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated>イベントによっ<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>て返されるから取得されます。 <xref:System.Data.Objects.ObjectContext> 詳細については、「[オブジェクトコンテキストのライフサイクル管理」 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)を参照してください。 オブジェクトコンテキストの詳細については、「 [Id 解決、状態管理、および Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)」を参照してください。  
  
 イベントを使用すると、以外<xref:System.Data.Objects.ObjectContext>の<xref:System.Web.UI.WebControls.EntityDataSource>操作のために作成されたを変数に割り当てることができます。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> プロパティ<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType>には、 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>イベントで作成されたコンテキストが含まれます。 イベントの<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>実行中にユーザーがコンテキストを割り当てない場合、に<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=nameWithType>含まれるコンテキストインスタンスは、、、また<xref:System.Web.UI.WebControls.EntityDataSource>は<xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=nameWithType>の各<xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=nameWithType>プロパティ<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=nameWithType>に基づいて、によって作成されたインスタンスになります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of EntityDataSourceContextCreatingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextCreatingEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>エンティティ データ オブジェクトの操作で使用される <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> を <see cref="T:System.Data.Objects.ObjectContext" /> が作成すると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>新しい<xref:System.Data.Objects.ObjectContext>を作成するのではなく、独自のイベントを処理します。 <xref:System.Data.Objects.ObjectContext> イベントが処理されない場合、またはハンドラーがを<xref:System.Data.Objects.ObjectContext>提供し<xref:System.Web.UI.WebControls.EntityDataSource>ない場合、はその構成に従って1つを作成します。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> がイベントに指定されると、同じ`Context`インスタンスが、連続するイベントのイベントオブジェクトのプロパティに割り当てられます。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> <xref:System.Data.Objects.ObjectContext> 詳細については、「[オブジェクトコンテキストのライフサイクル管理」 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)を参照してください。 オブジェクトコンテキストの詳細については、「 [Id 解決、状態管理、および Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)」を参照してください。  
  
   
  
## Examples  
 次<xref:System.Data.Objects.ObjectContext>の例は、 <xref:System.Web.UI.Page>オブジェクトの変数を作成<xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A>し、 <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>オブジェクトのプロパティに割り当てる方法を示しています。  
  
```csharp  
public partial class _Default : System.Web.UI.Page  
    {  
        AdventureWorksModel.AdventureWorksEntities objCtx =  
            new AdventureWorksModel.AdventureWorksEntities();  
  
        protected void EntityDataSource2_ContextCreating(object sender,   
            EntityDataSourceContextCreatingEventArgs e)  
        {  
            e.Context = objCtx;  
        }  
    }  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of EntityDataSourceContextDisposingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceContextDisposingEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Objects.ObjectContext" /> が破棄される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このイベントを処理し<xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSource>て、コントロールによって使用されるが破棄されないようにします。 この操作は、複数<xref:System.Data.Objects.ObjectContext> <xref:System.Web.UI.WebControls.EntityDataSource>のコントロールまたはインスタンスを使用して、ページ内の1つのインスタンスを使用する場合に実行します。 が<xref:System.Data.Objects.ObjectContext>破棄されないようにするには<xref:System.ComponentModel.CancelEventArgs.Cancel%2A> 、 <xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>オブジェクトのプロパティを`true`に設定します。 詳細については、「[オブジェクトコンテキストのライフサイクル管理」 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)を参照してください。 オブジェクトコンテキストの詳細については、「 [Id 解決、状態管理、および Change Tracking](https://msdn.microsoft.com/library/3bd49311-0e72-4ea4-8355-38fe57036ba0)」を参照してください。  
  
   
  
## Examples  
 今後の参照用<xref:System.Data.Objects.ObjectContext>に既存のインスタンスメンバーを保持<xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated>するには、次のコードに示すように、イベントをキャンセルします。  
  
```csharp  
protected void EntityDataSource2_ContextDisposing(object sender,   
    EntityDataSourceContextDisposingEventArgs e)  
{  
    e.Cancel = true;  
}  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextType">
      <MemberSignature Language="C#" Value="public Type ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextType As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Type ^ ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextType : Type with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Objects.ObjectContext" /> コントロールで使用される型指定された <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> を取得または設定します。</summary>
        <value><see cref="T:System.Data.Objects.ObjectContext" /> から派生するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールによって使用されるは<xref:System.Data.Objects.ObjectContext> 、 <xref:System.Web.UI.WebControls.EntityDataSource.ContextType%2A>プロパティからアクセスできます。 <xref:System.Web.UI.WebControls.EntityDataSource> 詳細については、「[オブジェクトコンテキストのライフサイクル管理」 (EntityDataSource)](https://msdn.microsoft.com/library/67bc2486-112c-47c3-b23f-0297f7ac2160)を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Data.Objects.ObjectContext" /> コントロールで使用される型指定された <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> の完全修飾名を取得または設定します。</summary>
        <value>型の完全修飾名を表す <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティは<xref:System.Web.UI.WebControls.EntityDataSource> 、コントロールによって使用さ<xref:System.Data.Objects.ObjectContext>れる型指定されたの完全修飾型名を指定する文字列です。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A> <xref:System.Web.UI.WebControls.EntityDataSource> プロパティが指定されていない場合<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 、 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>コントロールがを作成するには、プロパティと<xref:System.Data.Objects.ObjectContext>プロパティの両方が設定されている必要があります。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.EntityDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As EntityDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::EntityDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.EntityDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.EntityDataSourceView" Usage="entityDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.EntityDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>このコントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> の新しいインスタンスを作成します。</summary>
        <returns>データ バインド コントロールのインターフェイスとして動作するオブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムビューを提供するには、派生クラスでこのメソッドをオーバーライドします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultContainerName">
      <MemberSignature Language="C#" Value="public string DefaultContainerName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DefaultContainerName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberSignature Language="VB.NET" Value="Public Property DefaultContainerName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ DefaultContainerName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultContainerName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.DefaultContainerName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>既定のコンテナー名を取得または設定します。</summary>
        <value>既定のコンテナー名を表す <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティが指定されていない場合<xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> 、 <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>コントロールがを作成するには、プロパティと<xref:System.Data.Objects.ObjectContext>プロパティの両方が設定されている必要があります。 <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースからオブジェクトが削除された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベントは<xref:System.Data.Objects.ObjectContext.SaveChanges%2A> 、 <xref:System.Data.Objects.ObjectContext> メソッドがオブジェクトを削除するためにで正常に呼び出された直後に発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted> オブジェクトのプロパティは、削除されたオブジェクトにアクセスするために使用されます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> このオブジェクトの<xref:System.Data.EntityState.Detached>状態はです。  
  
 オブジェクトが<xref:System.Web.UI.WebControls.EntityDataSource.Deleted>削除されたときにエラーが発生した場合、イベント<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>が発生し<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> 、オブジェクトのプロパティは返さ<xref:System.Exception>れたに<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>設定され、 `null`プロパティはに設定されます。 <xref:System.Web.UI.WebControls.EntityDataSource.Deleted>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>削除の操作中に使用されるパラメーターのコレクションを取得します。</summary>
        <value>削除の操作中に使用されるパラメーターのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 以前を対象とする web アプリケーションでは、プロパティ値はビューステートに格納され、ポストバック間で自動的に維持されます。 ASP.NET 4.5 を対象とする web アプリケーションの場合、プロパティ値はビューステートに格納されないため、各 HTTP 要求の値を設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースからオブジェクトが削除される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.EntityDataSource.Deleting>は、オブジェクトを削除<xref:System.Data.Objects.ObjectContext.SaveChanges%2A>するために、 <xref:System.Data.Objects.ObjectContext>でメソッドが呼び出される前に発生します。 オブジェクトのプロパティは、削除するオブジェクトにアクセスするために使用されます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> このオブジェクトのプロパティが完全に設定されていない可能性があります。 オブジェクトを識別するために必要なプロパティのみを設定する必要があります。  
  
 オブジェクトが削除されないようにするに<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティ`true`をに設定します。  
  
 オブジェクト<xref:System.Web.UI.WebControls.EntityDataSource.Deleting>の削除の準備中にエラーが発生した場合は、イベントが<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>発生し、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティは返さ<xref:System.Exception>れたに設定されます。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Deleting>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールを通じてオブジェクトを削除できるかどうかを示す値を取得または設定します。</summary>
        <value>削除の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティが有効になっ<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>ている場合、を設定することはできません。  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> <xref:System.Web.UI.WebControls.EntityDataSourceView> `false`の`false` <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>プロパティに割り当てられた値によって、関連するオブジェクトのプロパティが強制的に返されます。 <xref:System.Web.UI.WebControls.EntityDataSource> `false` <xref:System.NotSupportedException> <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>プロパティがに設定されている場合、データバインドコントロールがに対し<xref:System.Web.UI.WebControls.EntityDataSourceView>てメソッドを呼び出すと、が発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>  
  
 更新可能性の条件のいずれかが満たさ<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>れず、プロパティがに`true`設定され<xref:System.Web.UI.WebControls.EntityDataSource>ている場合、は例外を発生させます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableFlattening">
      <MemberSignature Language="C#" Value="public bool EnableFlattening { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableFlattening" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableFlattening As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableFlattening { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableFlattening : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableFlattening" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ラッパーの作成を無効にするかどうかを示す値を取得または設定します。</summary>
        <value><see langword="true" />プロパティがフラット化される場合は。それ以外<see langword="false" />の場合は。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>  <xref:System.Web.UI.WebControls.EntityDataSource> を使用 <xref:System.ComponentModel.ICustomTypeDescriptor> してコントロールを初期化すると、によって、の各エンティティインスタンスが型のオブジェクトにラップされます。 <xref:System.Web.UI.WebControls.EntityDataSource> 詳細については、「オブジェクトのフラット化」 [(EntityDataSource)](https://msdn.microsoft.com/library/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールを通じてオブジェクトを追加できるかどうかを示す値を取得または設定します。</summary>
        <value>挿入の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティがに設定さ<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>れている場合`true`、を設定することはできません。  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> <xref:System.Web.UI.WebControls.EntityDataSourceView> `false`の`false` <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>プロパティに割り当てられた値によって、関連するオブジェクトのプロパティが強制的に返されます。 <xref:System.Web.UI.WebControls.EntityDataSource> `false` <xref:System.NotSupportedException> <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>プロパティがに設定されている場合、データバインドコントロールがに対し<xref:System.Web.UI.WebControls.EntityDataSourceView>てメソッドを呼び出すと、が発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>  
  
 更新可能性の条件のいずれかが満たさ<xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>れず、プロパティがに`true`設定され<xref:System.Web.UI.WebControls.EntityDataSource>ている場合、は例外を発生させます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールを通じてオブジェクトを変更できるかどうかを示す値を取得または設定します。</summary>
        <value>更新の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティがに設定さ<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>れている場合`true`、を設定することはできません。  
  
 <xref:System.Web.UI.WebControls.EntityDataSourceView> `false` <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>プロパティに割り当てられた値によって、関連するオブジェクトのプロパティが強制的に返されます。 `false`  <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> `false` <xref:System.NotSupportedException> <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>プロパティがに設定されている場合、データバインドコントロールがに対し<xref:System.Web.UI.WebControls.EntityDataSourceView>てメソッドを呼び出すと、が発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>  
  
 プロパティを<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>に`true`設定しても、更新可能性は保証されません。  
  
 更新可能性の条件のいずれかが満たさ<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>れず、プロパティがに`true`設定され<xref:System.Web.UI.WebControls.EntityDataSource>ている場合、は例外を発生させます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntitySetName">
      <MemberSignature Language="C#" Value="public string EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberSignature Language="VB.NET" Value="Public Property EntitySetName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntitySetName : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールで使用されるエンティティ セットの名前を取得または設定します。</summary>
        <value>エンティティ セットの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> のプロパティは、コントロールによってアクセスされるオブジェクトの型のエンティティセットを指定するために使用 <xref:System.Web.UI.WebControls.EntityDataSource> されます。 <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>プロパティの値は、コントロールによって使用される既定の select ステートメントです。 クエリが<xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>プロパティに指定された Entity SQL 式として指定されている場合、この設定は必要ありません。 詳細については、「[カスタムコマンドテキスト」 (EntityDataSource)](https://msdn.microsoft.com/library/d42e90d0-1443-474e-8940-53f504d6fc91)を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EntityTypeFilter">
      <MemberSignature Language="C#" Value="public string EntityTypeFilter { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EntityTypeFilter" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberSignature Language="VB.NET" Value="Public Property EntityTypeFilter As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ EntityTypeFilter { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EntityTypeFilter : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の派生型の結果のみ得られるようにクエリを制限する式を取得または設定します。</summary>
        <value>フィルター式。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールが特定の派生型<xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>を返す必要がある場合は、この派生型の名前を指定するようにプロパティも設定する必要があります。 <xref:System.Web.UI.WebControls.EntityDataSource> ポリモーフィックな<xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>結果を生成できるエンティティセットがプロパティによって指定<xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>されている場合、プロパティはデータを編集できるようにする必要があります。 これは、 <xref:System.Data.Objects.ObjectQuery%601.OfType%60%601?displayProperty=nameWithType> <xref:System.Data.Objects.ObjectQuery%601?displayProperty=nameWithType>メソッドをに適用するのと同じ効果があります。 データバインディングが読み取り専用の場合、 <xref:System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter%2A>プロパティは必要ありません。 この場合、クエリによって返されるオブジェクトのプロパティは、エンティティセットの既定のエンティティ型のプロパティになります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="entityDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="viewName">取得するビューの名前。 <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールがサポートするビューは 1 つだけであるため、<paramref name="viewName" /> は無視されます。</param>
        <summary>データ ソース コントロールに関連付けられた名前付きデータ ソース ビューを取得します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.EntityDataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.EntityDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.EntityDataSource>でサポートされるデータソースビューは1つだけです。 すべてのデータソースビューオブジェクトと同様<xref:System.Web.UI.WebControls.EntityDataSourceView>に、データソースコントロールに関連付けられているオブジェクトは、その機能を定義し、基になるデータベースからデータを取得するために必要なすべての作業を実行し、並べ替えなどの操作を実行します。挿入、削除、および更新。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="entityDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを取得します。</summary>
        <returns><see cref="T:System.Collections.ICollection" /> コントロールに関連付けられたビューの名前が格納されている <see cref="T:System.Web.UI.WebControls.EntityDataSource" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.EntityDataSource>は、基になるデータに対して1つのビューのみをサポートします。 メソッド<xref:System.Web.UI.WebControls.EntityDataSource.GetViewNames%2A>は、この1つのビュー名の単一要素のコレクションを文字列として返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリ結果をグループ化する方法を指定する Entity SQL 式を取得または設定します。</summary>
        <value>GROUP BY 句。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Include">
      <MemberSignature Language="C#" Value="public string Include { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Include" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberSignature Language="VB.NET" Value="Public Property Include As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Include { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Include : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Include" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリ結果に関連オブジェクトを含めることを指定する式を取得または設定します。</summary>
        <value>クエリの結果で返すクエリ パスをコンマで区切った一覧。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティは<xref:System.Web.UI.WebControls.EntityDataSource.Include%2A> 、特定のクエリ対象オブジェクトと共に返されるオブジェクトを定義するクエリパスのコンマ区切りリストを指定します。 <xref:System.Web.UI.WebControls.EntityDataSource> 文字列内の各コンマ区切り値は、によって実行さ<xref:System.Data.Objects.ObjectQuery%601.Include%2A> <xref:System.Data.Objects.ObjectQuery%601> [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]れるのメソッドを個別に呼び出したものとして、変更なしで渡されます。 このクエリは、 <xref:System.Web.UI.WebControls.EntityDataSource>コントロールによって規制されるデータのソースです。 プロパティは、 <xref:System.Data.Objects.ObjectQuery%601>実行前にに適用される引数です。 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>プロパティに指定された文字列は、の<xref:System.Data.Objects.ObjectQuery%601.Include%2A> <xref:System.Data.Objects.ObjectQuery%601>メソッドに渡される文字列と同じ形式を使用します。 クエリパスを使用して関連オブジェクトを自動的に読み込む方法の例については、「[方法: クエリパスを使用して結果を](https://msdn.microsoft.com/library/100bf7f5-00ba-4c17-8e27-7a8a14831093)整形する」を参照してください。  
  
 プロパティを<xref:System.Web.UI.WebControls.EntityDataSource.Include%2A>使用してクエリパスを指定する場合、関連エンティティのプロパティは読み取り専用のデータバインディングにのみ使用できます。 関連オブジェクトがクエリパスに明示的に含まれていない場合でも、プロパティ記述子はデータバインディングに使用できますが、プロパティ自体は null 値を返します。 この場合、関連するオブジェクトを明示的に読み込んで値を表示する必要があります。 詳細については、「[関連オブジェクトの読み込み](https://docs.microsoft.com/previous-versions/dotnet/netframework-4.0/bb896272(v=vs.100))」を参照してください。  
  
   
  
## Examples  
 次の XML マークアップは、返され`SalesOrderHeader` `Contact`たオブジェクトに関連するオブジェクトを返すクエリパスを定義します。 それぞれ`SalesOrderHeader`で、関連する`SalesOrderDetail`オブジェクト`Address`とオブジェクトも返されます。  
  
```  
<asp:EntityDataSource ID="ContactDataSource" runat="server"   
    AutoGenerateWhereClause="True" ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="Contact"   
    Include="SalesOrderHeader.SalesOrderDetail, SalesOrderHeader.Address">  
    <WhereParameters>  
        <asp:ControlParameter ControlID="customerId" Name="ContactID"   
            PropertyName="Text" />  
    </WhereParameters>  
</asp:EntityDataSource>  
```  
  
 前の XML の例は、 <xref:System.Data.Objects.ObjectQuery%601>という名前`customers`のと同じです。  
  
```  
ObjectQuery<Contact> customers =  
      context.Contact  
       .Where("it.ContactID = @ContactID",  
         new ObjectParameter("ContactID", customerId))  
        .Include("SalesOrderHeader.SalesOrderDetail")  
        .Include("SalesOrderHeader.Address");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースで新しいオブジェクトが作成された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted>イベントは、追加されたオブジェクトがデータソースで作成されたとき、またはオブジェクトデータがデータソースに保存されているときにエラーが発生した場合に発生します。 オブジェクトのプロパティは、追加されたオブジェクトにアクセスするために使用されます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>  
  
 このオブジェクトのプロパティには、データソースによって生成された値を含む、データソースから返される値が含まれます。  
  
 オブジェクト<xref:System.Web.UI.WebControls.EntityDataSource.Inserted>がデータソースに永続化されているときにエラーが発生した場合は、イベントが発生<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>し、 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>オブジェクトのプロパティ<xref:System.Exception>は返されたに設定されます。 <xref:System.Web.UI.WebControls.EntityDataSource.Inserted>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに新しいオブジェクトが保持される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting>イベントは、新しいオブジェクトがデータソースに保存される前に発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting>イベントを使用すると、追加するオブジェクトを変更または確認したり、別のオブジェクトを追加したり、操作をキャンセルしたりできます。 オブジェクトのプロパティ <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> から追加するオブジェクトにアクセスできます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> 別のオブジェクトを指定する場合、ユーザーは<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>プロパティで正しいエンティティ型を設定する必要があります。  
  
 オブジェクトの追加を停止するには、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティをに`true`設定します。  
  
 新しいオブジェクト<xref:System.Web.UI.WebControls.EntityDataSource.Inserting>の作成中にエラーが発生した場合は、イベントが<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>発生し、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティは返さ<xref:System.Exception>れたに設定されます。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Inserting>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入の操作中に使用されるパラメーターのコレクションを取得します。</summary>
        <value>挿入の操作中に使用されるパラメーターのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 以前を対象とする web アプリケーションでは、プロパティ値はビューステートに格納され、ポストバック間で自動的に維持されます。 ASP.NET 4.5 を対象とする web アプリケーションの場合、プロパティ値はビューステートに格納されないため、各 HTTP 要求の値を設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="entityDataSource.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">状態情報を格納している <see cref="T:System.Object" />。</param>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="entityDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納する <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Page.LoadComplete" /> コントロールを格納する <see cref="T:System.Web.UI.Page" /> コントロールに <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> イベント ハンドラーを追加します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="entityDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納する <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.Unload" /> イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリ結果を並べ替える方法を指定する Entity SQL 式を取得または設定します。</summary>
        <value>ORDER BY 句。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティは、Entity SQL クエリの[ORDER BY](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)式を表す文字列です。 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> <xref:System.Web.UI.WebControls.EntityDataSource> この文字列は、に<xref:System.Data.Objects.ObjectQuery%601> [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]よって実行されるに変更なしで渡されます。 このクエリは、 <xref:System.Web.UI.WebControls.EntityDataSource>コントロールによって規制されるデータのソースです。 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティに指定された文字列は、の<xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> <xref:System.Data.Objects.ObjectQuery%601>メソッドに渡される文字列と同じ形式を使用します。 [ORDER by](~/docs/framework/data/adonet/ef/language-reference/order-by-entity-sql.md)句を使用してクエリ結果を並べ替える方法の例については、「[方法: データを並べ替える](https://msdn.microsoft.com/library/c05f2506-cb9d-4ebc-822b-300042ad53e7)」を参照してください。  
  
   
  
## Examples  
 次の例の XML マークアップは、.aspx ファイルで、コントロールから値を取得し、それをパラメーターとして<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに渡します。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 前の XML の例は、 <xref:System.Data.Objects.ObjectQuery%601>という名前のと`onlineOrders`同じです。  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ORDER BY 句の作成に使用されるパラメーターのコレクションを取得します。</summary>
        <value>ORDER BY 句の作成に使用するパラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ParameterCollection> <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コントロールのプロパティがに`true`設定されている場合、コントロールは、プロパティに割り当てられているのパラメーターから order BY 句を自動的に生成します。 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> <xref:System.Web.UI.WebControls.EntityDataSource> これにより、order by 句を<xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティに明示的に割り当てる必要がなくなります。 <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>プロパティから order BY 句を作成するには、コレクション内<xref:System.Web.UI.WebControls.Parameter.Name%2A>のパラメーターのプロパティが、クエリから返される項目の1つのプロパティを識別する必要があります。  
  
   
  
## Examples  
 次の例では、ORDER BY 句を自動的に生成し、 `orderByDropDownList`の値を使用してパラメーターの値を設定します。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
    ConnectionString="name=AdventureWorksEntities"  
    DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
    EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
    Where="it.OnlineOrderFlag = true" AutoGenerateOrderByClause="True">  
    <OrderByParameters>  
        <asp:ControlParameter Name="OrderByParameter"   
            ControlID="orderByDropDownList" Type="String" />  
    </OrderByParameters>  
</asp:EntityDataSource>  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="QueryCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.QueryCreatedEventArgs&gt; QueryCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.QueryCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event QueryCreated As EventHandler(Of QueryCreatedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler&lt;System::Web::UI::WebControls::QueryCreatedEventArgs ^&gt; ^ QueryCreated;" />
      <MemberSignature Language="F#" Value="member this.QueryCreated : EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; " Usage="member this.QueryCreated : System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IQueryableDataSource.QueryCreated</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.QueryCreatedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールの構成時に指定された Entity SQL クエリを <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> が作成した後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、「 [EntityDataSource への LINQ クエリの適用](https://msdn.microsoft.com/library/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="entityDataSource.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.EntityDataSource" /> コントロールのプロパティの状態を保存します。</summary>
        <returns>状態情報を格納している <see cref="T:System.Object" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリの結果に含めるプロパティを定義するプロジェクションを取得または設定します。</summary>
        <value>ORDER BY 句の作成に使用するパラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティに<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>は、Entity SQL クエリの select ステートメントを表す文字列が含まれています。 [](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md) <xref:System.Web.UI.WebControls.EntityDataSource> これにより、クエリによって返されるオブジェクトから、指定された一連のプロパティを射影することができます。  
  
 この文字列は、に<xref:System.Data.Objects.ObjectQuery%601> [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]よって実行されるに変更なしで渡されます。 このクエリは、 <xref:System.Web.UI.WebControls.EntityDataSource>コントロールによって規制されるデータのソースです。 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティに指定された文字列は、の<xref:System.Data.Objects.ObjectQuery%601.Select%2A> <xref:System.Data.Objects.ObjectQuery%601>メソッドに渡される文字列と同じ形式を使用します。 [SELECT](~/docs/framework/data/adonet/ef/language-reference/select-entity-sql.md)句を使用してクエリのプロジェクションを定義する方法の例については、「[方法: 匿名型オブジェクトを返すクエリを実行](https://msdn.microsoft.com/library/3b264025-e911-4d73-90ce-992d2b9d189d)する」を参照してください。  
  
 予測データでは更新はサポートされていません。 これは、 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティを使用してプロジェクションを指定する場合、バインドされたデータバインディングは更新をサポートしないことを意味します。  
  
 ページングが有効になっているプロジェクションを定義する場合は、結果の順序付けに使用するプロパティを定義する必要があります。 つまり、 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティを定義済みのプロジェクションに設定<xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>し、をに`true`設定した場合は、 <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>プロパティを設定して注文を定義するか<xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> 、プロパティ`true`をに設定し、注文を追加する必要があります。パラメーター BY を<xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>コレクションに渡します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>、、または<xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>が<xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>有効になっている場合、を設定することはできません。  
  
 がプロパティの射影 ( `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`など) <xref:System.Data.Common.DbDataRecord>を返すクエリに設定されている場合は、が返されます。 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>  
  
   
  
## Examples  
 次の XML マークアップで<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>は、プロパティを使用して、製品の種類のプロパティを6つ持つプロジェクションを指定します。  
  
```  
<asp:EntityDataSource ID="ProductDataSource" runat="server"   
    ConnectionString="name=AdventureWorksEntities"   
    DefaultContainerName="AdventureWorksEntities"   
    EntitySetName="Product" OrderBy="it.[ProductID]"   
    Select="it.[ProductID], it.[Name], it.[ListPrice],   
    it.[Size], it.[Style], it.[Weight]">  
</asp:EntityDataSource>  
  
```  
  
 前の XML の例は、 <xref:System.Data.Objects.ObjectQuery%601>という名前`products`のと同じです。  
  
```  
ObjectQuery<Product> products = context.Product  
    .Select(it.[ProductID], it.[Name], it.[ListPrice],   
      it.[Size], it.[Style], it.[Weight])  
    .OrderBy("it.[ProductID]");  
  
```  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.EntityDataSource.Select" /> プロパティでクエリ プロジェクションおよび <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableUpdate" /> の値を指定する場合、<see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableDelete" />、または <see cref="P:System.Web.UI.WebControls.EntityDataSource.EnableInsert" /> は <see langword="true" /> です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of EntityDataSourceSelectedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectedEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリが実行された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selected>イベントは、クエリが実行され、データが返された後に発生します。 また、クエリの準備中または実行中にエラーが発生した場合にも発生します。  
  
 オブジェクトのプロパティに<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>は、クエリ<xref:System.Collections.IEnumerable>から返されるオブジェクトのが含まれています。 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> で返されたエンティティを取得して格納するための<xref:System.Web.UI.WebControls.EntityDataSource.Selected>イベントを処理します。 <xref:System.Web.UI.Control.ViewState%2A> これは、オブジェクトの変更をページに保持するために行います。  
  
 オブジェクトのプロパティは<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> 、ページングのためにデータバインドコントロールによって渡された値に関係なく、すべてのページに含まれるオブジェクトの合計数を示します。 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>は、ページングが有効になっている場合など、データバインドコントロールで必要な場合にのみ取得されます。  
  
 クエリの準備中または実行<xref:System.Web.UI.WebControls.EntityDataSource.Selected>時にエラーが発生した場合は、イベントが発生<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>し<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> 、オブジェクトのプロパティ<xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>は返さ<xref:System.Exception>れたに設定され、 `null`プロパティはに設定されます。 <xref:System.Web.UI.WebControls.EntityDataSource.Selected>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of EntityDataSourceSelectingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceSelectingEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリが作成され、実行される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting>イベントは、クエリが作成されて実行される前に発生します。 イベントを処理して<xref:System.Web.UI.WebControls.EntityDataSource>の構成を変更するか、データバインドコントロールの引数を読み取りまたは変更してから、クエリを構築して実行します。 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting>  
  
 オブジェクトのプロパティをに`true`設定して、クエリをキャンセルします。 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> <xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> 選択操作がキャンセルされると、データバインドコントロールにデータは返されません。  
  
 データ`AllowPaging`バインド<xref:System.Data.Objects.ObjectQuery%601.Top%2A> <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> <xref:System.Web.UI.WebControls.EntityDataSource> `true` <xref:System.Data.Objects.ObjectQuery%601> コントロールで <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> がに設定されている場合、は、およびの各プロパティの値を使用して、に対してクエリビルダーメソッドを呼び出します。 <xref:System.Data.Objects.ObjectQuery%601.Skip%2A> <xref:System.Web.UI.DataSourceSelectArguments>オブジェクト。  
  
 データ`AllowSorting`バインド<xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> `true` コントロールでがに <xref:System.Web.UI.WebControls.EntityDataSource.Selecting> 設定されている場合、イベントの処理時にオブジェクトのが変更される可能性があります。 <xref:System.Web.UI.DataSourceSelectArguments> ページマークアップで指定されたその他のクエリ演算子 (WHERE や ORDER BY など) は、 <xref:System.Web.UI.WebControls.EntityDataSource.Selecting>イベントが発生した後に適用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>射影を作成するために使用されるパラメーターのコレクションを取得します。</summary>
        <value>射影の作成に使用されるパラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスのメソッドと同様に、パラメーターは、 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティで定義されているプロジェクションに渡すことができます。 <xref:System.Data.Objects.ObjectQuery%601.Select%2A> <xref:System.Data.Objects.ObjectQuery%601> コントロールのプロパティは<xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A> 、クエリの<xref:System.Web.UI.WebControls.ParameterCollection> SELECT ステートメントに渡すパラメーターを含むを指定します。 <xref:System.Web.UI.WebControls.EntityDataSource> プロパティ<xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A>は、名前付き引数を使用して、 <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>プロパティに指定された文字列で指定されているパラメーターを参照します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.SelectParameters%2A>プロパティが設定されていない場合、パラメーターの代入は行われません。 SELECT ステートメント内のすべてのパラメーター名の先頭に "symbol`@"` `,` " が付いている必要があり<xref:System.Web.UI.WebControls.ParameterCollection>ます。 Null 値は、 <xref:System.Web.UI.WebControls.ParameterCollection>のパラメーターには使用できません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースから取得するデータをビューステートに保存して、そのデータが更新または削除される前に別のプロセスによって変更されていないことを確認する値を取得または設定します。</summary>
        <value>値をビューステートに保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は <see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 更新操作および削除操作を有効<xref:System.Web.UI.WebControls.EntityDataSource>にしたときに変更を追跡するには、読み込まれたオブジェクト<xref:System.Web.UI.PageStatePersister.ControlState%2A>の元の値に関する情報をに格納する必要があります。 この必要な情報をビューステートに格納すると、ページサイズが増加します。 <xref:System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState%2A>プロパティをに設定する`false`と、元の値をビューステートに格納することを無効にできます。 これを行うと、は[!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]更新されたオブジェクトの同時実行を追跡できません。 詳細については、「[データの更新」 (EntityDataSource)](https://msdn.microsoft.com/library/ca153eec-6817-4c1d-b262-efd6d35b0246)を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>部分メソッドで検証が失敗した場合、または例外が発生した場合に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception>は、ASP.NET 動的データとの互換性を確保するために実装されます。 <xref:System.Web.DynamicData.IDynamicDataSource>インターフェイスによって定義されるこのイベントは、 <xref:System.Web.UI.WebControls.EntityDataSource>によって明示的に実装されます。 このイベントのハンドラーをマークアップに登録できません。 これは、<xref:System.Web.UI.WebControls.EntityDataSource> のインスタンスが <xref:System.Web.DynamicData.IDynamicDataSource> インターフェイスにキャストされる場合のみ、使用できます。  
  
 イベント<xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception>は<xref:System.Web.DynamicData.DynamicValidatorEventArgs> 、 <xref:System.Exception> を返すオブジェクトを提供します。 イベント<xref:System.Web.UI.WebControls.EntityDataSource.System%23Web%23DynamicData%23IDynamicDataSource%23Exception>は、次の場合に発生する可能性があります。  
  
-   オブジェクトが作成されたとき。 これにより、オブジェクトの部分メソッドで、プロパティ設定の検証中に例外を発生させることができます。  
  
-   クエリの実行中に例外が発生した場合。  
  
-   挿入、更新、または削除の各操作の実行中に例外が発生した場合。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged">
      <MemberSignature Language="C#" Value="void IQueryableDataSource.RaiseViewChanged ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged" />
      <MemberSignature Language="VB.NET" Value="Sub RaiseViewChanged () Implements IQueryableDataSource.RaiseViewChanged" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged() = System::Web::UI::WebControls::IQueryableDataSource::RaiseViewChanged;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>パラメーター オブジェクトが変更されたためデータ バインド コントロールを再表示する必要がある旨を、データ バインド コントロールに通知します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.EntityDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="entityDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>サーバー コントロールにビューステートの変更を追跡させ、サーバー コントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに変更を格納できるようにします。 このオブジェクトは、<see cref="P:System.Web.UI.Control.ViewState" /> プロパティによってアクセスできます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、「<xref:System.Web.UI.Control.TrackViewState%2A>」を参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of EntityDataSourceChangedEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangedEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangedEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトへの変更がデータ ソースに保持された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 イベント<xref:System.Web.UI.WebControls.EntityDataSource.Updated>は、変更されたオブジェクトに対する変更がデータソースに保存されるとき、または変更の適用時にエラーが発生した場合に発生します。 オブジェクトのプロパティは、変更されたオブジェクトにアクセスするために使用されます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>  
  
 このオブジェクトのプロパティには、サーバーで生成された値を含む、データソースから返される値が含まれます。  
  
 変更がデータソース<xref:System.Web.UI.WebControls.EntityDataSource.Updated>に保存されたときにエラーが発生した場合は、イベントが発生<xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>し、オブジェクトのプロパティは<xref:System.Exception>返されたに設定されます。 <xref:System.Web.UI.WebControls.EntityDataSource.Updated>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>更新の操作中に使用されるパラメーターのコレクションを取得します。</summary>
        <value>更新の操作中に使用されるパラメーターのコレクション。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET 4 以前を対象とする web アプリケーションでは、プロパティ値はビューステートに格納され、ポストバック間で自動的に維持されます。 ASP.NET 4.5 を対象とする web アプリケーションの場合、プロパティ値はビューステートに格納されないため、各 HTTP 要求の値を設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.EntityDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of EntityDataSourceChangingEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::EntityDataSourceChangingEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.EntityDataSourceChangingEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>オブジェクトへの変更がデータ ソースに保持される前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updating>イベントは、オブジェクトのプロパティに対する変更がデータソースに保存される前に発生します。 <xref:System.Web.UI.WebControls.EntityDataSource.Updating>イベントを使用すると、オブジェクトへの変更を変更または確認したり、別のオブジェクトを指定したり、変更を保存する前に操作を取り消すことができます。 変更されたオブジェクトには、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティからアクセスできます。 別のオブジェクトを指定する場合、ユーザーは<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>プロパティで正しいエンティティ型を設定する必要があります。  
  
 同時実行<xref:System.Web.UI.WebControls.EntityDataSource.Updating>制御のために別の<xref:System.Data.Objects.ObjectStateEntry>元の値を設定するようにオブジェクトのを変更する必要がある場合は、イベントを処理します。 詳細については、「[変更の保存と同時実行制御の管理](https://msdn.microsoft.com/library/b8378601-4f26-4a05-a24a-f50aeb68610e)」を参照してください。  
  
 変更が永続化されないようにする<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>には、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトの`true`プロパティをに設定します。  
  
 オブジェクトのインスタンス<xref:System.Web.UI.WebControls.EntityDataSource.Updating>化またはプロパティの変更中にエラーが発生した場合は、イベントが発生<xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>し、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>オブジェクトのプロパティ<xref:System.Exception>は返されたに設定されます。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.Updating>イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。 これにより、例外が再度発生するのを防ぐことができます。 `false`プロパティに値を指定すると、は<xref:System.Web.UI.WebControls.EntityDataSource>例外を再発生させます。 <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.EntityDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリ結果をフィルター処理する方法を指定する Entity SQL 式を取得または設定します。</summary>
        <value>WHERE 句。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールのプロパティは、Entity SQL クエリの述語である WHERE 句を表す文字列です。 [](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md) <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> <xref:System.Web.UI.WebControls.EntityDataSource> この文字列は、に<xref:System.Data.Objects.ObjectQuery%601> [!INCLUDE[adonet_ef](~/includes/adonet-ef-md.md)]よって実行されるに変更なしで渡されます。 このクエリは、 <xref:System.Web.UI.WebControls.EntityDataSource>コントロールによって規制されるデータのソースです。 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに指定された文字列は、の<xref:System.Data.Objects.ObjectQuery%601.Where%2A> <xref:System.Data.Objects.ObjectQuery%601>メソッドに渡される文字列と同じ形式を使用します。 [WHERE](~/docs/framework/data/adonet/ef/language-reference/where-entity-sql.md)句を使用してクエリをフィルター処理する方法の例については、「[方法: データをフィルター](https://msdn.microsoft.com/library/776f8556-3350-4572-804a-b1513515c1b2)処理する」を参照してください。  
  
 エンティティ型プロパティを式にひずみしてクエリ結果をフィルター処理するには、 <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>プロパティに関する情報を参照してください。  
  
   
  
## Examples  
 次の例の XML マークアップは、.aspx ファイルで、コントロールから値を取得し、それをパラメーターとして<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに渡します。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 前の XML の例は、 <xref:System.Data.Objects.ObjectQuery%601>という名前`onlineOrders`のと同じです。  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.EntityDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Entity</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>WHERE 句を作成するために使用されるパラメーターのコレクションを取得します。</summary>
        <value>WHERE 句の作成に使用されるパラメーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスのメソッドと同様に、パラメーターは<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに割り当てられた述語に渡すことができます。 <xref:System.Data.Objects.ObjectQuery%601.Where%2A> <xref:System.Data.Objects.ObjectQuery%601> コントロールのプロパティは<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> 、クエリの<xref:System.Web.UI.WebControls.ParameterCollection> where 句に渡すパラメーターを含むを指定します。 <xref:System.Web.UI.WebControls.EntityDataSource> プロパティ<xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>は、名前付き引数を使用して、 <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに指定された文字列で指定されているパラメーターを参照します。  
  
 <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>プロパティが設定されていない場合、パラメーターの代入は行われません。 WHERE 句内のすべてのパラメーター名の前に記号 "`@"`が付いている場合は、 <xref:System.Web.UI.WebControls.ParameterCollection>に一致する名前が必要です。 Null 値は、 <xref:System.Web.UI.WebControls.ParameterCollection>のパラメーターには使用できません。  
  
   
  
## Examples  
 次の例の XML マークアップは、.aspx ファイルで、コントロールから値を取得し、それをパラメーターとして<xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>プロパティに渡します。  
  
```  
<asp:EntityDataSource ID="SalesOrderHeader" runat="server"   
  ConnectionString="name=AdventureWorksEntities"   
  DefaultContainerName="AdventureWorksEntities" EnableDelete="True"   
  EnableInsert="True" EnableUpdate="True" EntitySetName="SalesOrderHeader"   
  EntityTypeFilter="" OrderBy="it.TotalDue DESC" Select=""   
   Where="it.OnlineOrderFlag = TRUE AND it.TotalDue &gt; @ordercost">  
  <WhereParameters>  
    <asp:ControlParameter ControlID="costLimit" DbType="Int32"   
      DefaultValue="2500" Name="ordercost" PropertyName="Text" />  
  </WhereParameters>  
</asp:EntityDataSource>  
  
```  
  
 前の XML の例は、 <xref:System.Data.Objects.ObjectQuery%601>という名前`onlineOrders`のと同じです。  
  
```  
ObjectQuery<SalesOrderHeader> onlineOrders =  
      context.SalesOrderHeader  
       .Where("it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost",  
         new ObjectParameter("ordercost", orderCost))  
        .OrderBy("it.TotalDue DESC");  
  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
