<Type Name="QueryExtender" FullName="System.Web.UI.WebControls.QueryExtender">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b2badb999d7a70d9ef0f0d24c6b2aa9bfbef874f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389775" /></Metadata><TypeSignature Language="C#" Value="public class QueryExtender : System.Web.UI.Control" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit QueryExtender extends System.Web.UI.Control" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.QueryExtender" />
  <TypeSignature Language="VB.NET" Value="Public Class QueryExtender&#xA;Inherits Control" />
  <TypeSignature Language="C++ CLI" Value="public ref class QueryExtender : System::Web::UI::Control" />
  <TypeSignature Language="F#" Value="type QueryExtender = class&#xA;    inherit Control" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.Control</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("TargetControlID")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.QueryExtenderDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.QueryExtender), "QueryExtender.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.NonVisualControl</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true, "Expressions")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.TargetControlType(typeof(System.Web.UI.WebControls.IQueryableDataSource))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>データ ソース内で明示的な <see langword="Where" /> 句を使用せずに、データ ソースのデータをフィルター処理できるようにします。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#Introduction)  
  
-   [背景](#background)  
  
-   [フィルターオプション](#filter_options)  
  
-   [タスク](#Tasks)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a>はじめに  
 コントロールは、データソースの明示的`Where`な句を使用せずに、データソースから取得されるデータのフィルターを作成するために使用されます。 <xref:System.Web.UI.WebControls.QueryExtender> コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、宣言構文を使用してフィルター処理を指定するために使用できます。  
  
<a name="background"></a>   
## <a name="background"></a>背景  
 フィルター処理では、指定した条件に一致するレコードのみを表示することで、データソースからデータを除外します。 フィルター処理を使用すると、データセット内のデータに影響を与えずに、データセット内のデータのさまざまなビューを表示できます。  
  
 通常、フィルター処理を行うに`Where`は、データソースに対してクエリを実行するコマンドに適用する句を作成する必要があります。 ただし、 `Where`データソースコントロールのプロパティが、使用可能なすべての機能を公開していない可能性があります。 たとえば、QueryExtender コントロールを使用すると、データフィールドの先頭、末尾、または任意の場所で文字列を検索することによって、テーブルに対してクエリを実行できます。  
  
 LINQ で使用できるすべての機能を公開し、データのフィルター処理を簡単[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]にする<xref:System.Web.UI.WebControls.QueryExtender>ために、にはコントロールが用意されています。 この<xref:System.Web.UI.WebControls.QueryExtender>コントロールには、次のような利点があります。  
  
-   句を記述する`Where`よりも高度なフィルター処理を提供します。 たとえば、クエリを記述せずに<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>フィルターを使用して、Products テーブルでブール値を検索できます。  
  
-   <xref:System.Web.UI.WebControls.LinqDataSource> また<xref:System.Web.UI.WebControls.EntityDataSource> 、コントロールとコントロール、および使用するその他のデータソースコントロールに対して同じ構文を使用して、フィルターを指定することができます。  
  
-   コントロール、 <xref:System.Web.UI.WebControls.EntityDataSource>コントロール、また<xref:System.Web.UI.WebControls.LinqDataSource>はサードパーティのデータソースと共に使用できます。  
  
<a name="filter_options"></a>   
## <a name="filter-options"></a>フィルター オプション  
 コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、データのフィルター処理に使用できるさまざまなオプションをサポートしています。 コントロールを使用すると、文字列の検索、指定された範囲の数値の検索、およびテーブル内のプロパティ値と指定した値との比較を行うことができます。 コントロールを使用すると、データを並べ替えたり、カスタムクエリを提供したりすることもできます。  
  
 これらのオプションは、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールで LINQ 式として提供されます。 コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、動的データアプリケーションに[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]固有の式もサポートします。  
  
 次の表に、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールのデータをフィルター処理するために使用できるオプションを示します。  
  
|正規表現|説明|  
|----------------|-----------------|  
|<xref:System.Web.DynamicData.ControlFilterExpression>|(動的データのみ)ソースデータバインドコントロールで選択されているデータキーを使用して、データベースクエリを作成します。<br /><br /> このフィルターオプションの使用方法の詳細について[は、「方法:動的データ](https://msdn.microsoft.com/library/a5566986-7c30-4e71-b4a4-81cd16095749)の親テーブルの値を使用して、テーブルの行をフィルター処理します。|  
|<xref:System.Web.UI.WebControls.Expressions.CustomExpression>|データソースのユーザー定義式を指定します。 カスタム LINQ 式は、イベントハンドラーで呼び出すことができます。|  
|<xref:System.Web.DynamicData.DynamicFilterExpression>|(動的データのみ)指定された<xref:System.Web.DynamicData.DynamicFilter>コントロールを使用して、データベースクエリを作成します。<br /><br /> このフィルターオプションの使用方法の詳細について[は、「方法:動的データ](https://msdn.microsoft.com/library/b774e56a-a5b9-41b7-b114-699313ef2056)の外部キーを使用してテーブル行をフィルター処理します。|  
|<xref:System.Web.UI.WebControls.Expressions.MethodExpression>|データソースに対してユーザー定義の LINQ 式を指定します。 式は、メソッドで呼び出されます。|  
|<xref:System.Web.UI.WebControls.Expressions.OrderByExpression>|<xref:System.Linq.IQueryable>データソースオブジェクトに並べ替え式を適用します。 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression>値を適用した後、 <xref:System.Web.UI.WebControls.Expressions.OrderByExpression.ThenByExpressions%2A>値を指定することにより、追加の並べ替え操作を適用できます。|  
|<xref:System.Web.UI.WebControls.Expressions.PropertyExpression>|<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクションで指定されているデータフィールドとプロパティ値のプロパティを比較します。|  
|<xref:System.Web.UI.WebControls.Expressions.RangeExpression>|値が指定した値より大きいか小さいか、または値が2つの値の間にあるかどうかを判断します。|  
|<xref:System.Web.UI.WebControls.Expressions.SearchExpression>|1つまたは複数のフィールドの値を、指定した文字列値と比較します。|  
  
 これらの<xref:System.Web.UI.WebControls.QueryExtender>オプションを個別に使用することも、組み合わせて Web ページで複雑なフィルター処理を行うこともできます。 詳細については、「 [Queryextender Web サーバーコントロールの概要](https://msdn.microsoft.com/library/b93e32b9-af41-4539-a009-6cbbe809c702)」を参照してください。 [チュートリアル: 宣言型構文を使用した Web ページのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)  
  
<a name="Tasks"></a>   
## <a name="tasks"></a>タスク  
 次の表に、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールを使用してデータをフィルター処理する方法を示すタスクを示します。  
  
|ドキュメント|タスク|  
|--------------|----------|  
|[チュートリアル: 宣言型構文を使用した Web ページのデータのフィルター処理](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)|<xref:System.Web.UI.WebControls.QueryExtender>コントロールに用意されているフィルターオプションを使用する方法について説明します。|  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:QueryExtender   
    EnableViewState="True|False"  
    ID="string"  
    OnDataBinding="DataBiding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="UnLoad event handler"  
    Runat="server"  
    TargetControlID="string"  
    Visible="True|False"  
>  
        <asp:ControlFilterExpression   
            ControlD="string"  
            Column="string">   
        </asp:ControlFilterExpression>  
        <asp:DynamicFilterExpression  
            ControlD="string"  
        </asp:DynamicFilterExpression>  
        <asp:CustomExpression="string"  
            OnQuerying="OnQuerying event handler">  
        </asp:CustomExpression>  
        <asp:OrderByExpression="string"  
            DataField="string"  
            Direction="string">  
            <asp:ThenByExpression  
                 DataField="string"  
                 Direction="string"  
            </asp:ThenBy>  
        </asp:OrderByExpression>  
        <asp:PropertyExpression="string">  
                <!-- child controls -->  
        </asp:PropertyExpression  
        >  
        <asp:RangeExpression="integer"  
            Datafield="string"  
            MaxType="Exclusive|Inclusive|None"  
            MinType="Exclusive|Inclusive|None">  
                <!--child controls-->  
        </asp:RangeExpression>  
        <asp:SearchExpression="string"  
            ComparisonType="CurrentCulture|CurrentCultureIgnoreCase|  
                InvariantCulture|InvariantCultureIgnoreCase|  
                Ordinal|OrdinalIgnoreCase"  
            DataField="string"  
            SearchType="Contains|EndsWith|StartsWith">  
                <!--child controls-->  
        </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
   
  
## Examples  
 次の例では、コントロールを<xref:System.Web.UI.WebControls.QueryExtender>使用して、Web ページに検索機能を提供する方法を示します。 コントロールは、コントロール`TextBoxSearch`に入力されたテキストを使用して、 <xref:System.Web.UI.WebControls.LinqDataSource>コントロールから返されたデータ内の Products テーブルの ProductName 列および Supplier. CompanyName 列の内容を検索します。 <xref:System.Web.UI.WebControls.QueryExtender> オブジェクト<xref:System.Web.UI.WebControls.Expressions.SearchExpression>は、検索を実行するために使用されます。 プロパティ<xref:System.Web.UI.WebControls.Expressions.SearchExpression.DataFields%2A>は、検索するデータフィールドを指定します。 プロパティ<xref:System.Web.UI.WebControls.Expressions.SearchExpression.SearchType%2A>は、実行する検索の種類を指定します。 要素<xref:System.Web.UI.WebControls.ControlParameter>は、検索に使用するテキストを含むコントロールを指定します。 このコード例は、チュートリアルで[提供されている大規模な例の一部です。宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:SearchExpression DataFields="ProductName, Supplier.CompanyName"   
        SearchType="StartsWith">  
    <asp:ControlParameter ControlID="TextBoxSearch" />  
  </asp:SearchExpression>  
</asp:QueryExtender>  
```  
  
 次の例は、 <xref:System.Web.UI.WebControls.QueryExtender>コントロールを使用して、指定された範囲の値を Web ページで検索する方法を示しています。 コントロールは、 `TextBoxFrom` <xref:System.Web.UI.WebControls.LinqDataSource>および`TextBoxTo`コントロールに入力された値を使用して、コントロールから返されたデータ内の Products テーブルの ProductName 列および Supplier. CompanyName 列の値を検索します。 <xref:System.Web.UI.WebControls.QueryExtender>. 要素<xref:System.Web.UI.WebControls.ControlParameter>は、範囲の検索に使用する最小値と最大値を格納するテキストボックスコントロールを指定します。 プロパティ<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MinType%2A> と<xref:System.Web.UI.WebControls.Expressions.RangeExpression.MaxType%2A>プロパティは、返されるデータに最小値と最大値を含める必要があることを指定します。 このコード例は、 [「チュートリアル:宣言型の構文](https://msdn.microsoft.com/library/b305ae31-1a1b-4d07-a678-51457c17614f)を使用した Web ページ内のデータのフィルター処理。  
  
```  
<asp:LinqDataSource ID="dataSource" runat="server"   
    TableName="Products">  
</asp:LinqDataSource>  
<asp:QueryExtender TargetControlID="dataSource" runat="server">  
  <asp:RangeExpression DataField="UnitPrice" MinType="Inclusive"   
        MaxType="Inclusive">  
    <asp:ControlParameter ControlID="TextBoxFrom" />  
    <asp:ControlParameter ControlID="TexBoxTo" />  
  </asp:RangeExpression>  
</asp:QueryExtender>  
```  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.Expressions.QueryExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression" />
    <altmember cref="T:System.Web.UI.WebControls.Expressions.SearchType" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public QueryExtender ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; QueryExtender();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="DataSource">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.IQueryableDataSource DataSource { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.IQueryableDataSource DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataSource As IQueryableDataSource" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::IQueryableDataSource ^ DataSource { System::Web::UI::WebControls::IQueryableDataSource ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataSource : System.Web.UI.WebControls.IQueryableDataSource" Usage="System.Web.UI.WebControls.QueryExtender.DataSource" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.IQueryableDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリに使用するデータ ソース コントロール (<see cref="T:System.Web.UI.IDataSource" /> オブジェクト) を取得します。</summary>
        <value>クエリに使用するデータ ソース コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.QueryExtender>は、コントロール<xref:System.Web.UI.WebControls.LinqDataSource>と<xref:System.Web.UI.WebControls.EntityDataSource>コントロールをサポートします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException"><see cref="P:System.Web.UI.WebControls.QueryExtender.DataSource" /> プロパティが <see langword="null" /> である。</exception>
      </Docs>
    </Member>
    <Member MemberName="Expressions">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection Expressions" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Expressions As DataSourceExpressionCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ Expressions { System::Web::UI::WebControls::Expressions::DataSourceExpressionCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Expressions : System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection" Usage="System.Web.UI.WebControls.QueryExtender.Expressions" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerDefaultProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Expressions.DataSourceExpressionCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.IDataSource" /> コントロールに適用される式のコレクションを取得します。</summary>
        <value>データ ソース コントロールに適用される式のコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="queryExtender.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールの状態を表すオブジェクト。</param>
        <summary>永続化する必要がある <see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロール内の値の状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="queryExtender.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベントのデータ。</param>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> クラスの新しいインスタンスが初期化されると発生します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="queryExtender.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールの現在のビューステートを保存します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールについて前回保存した状態を格納しているオブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TargetControlID">
      <MemberSignature Language="C#" Value="public virtual string TargetControlID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TargetControlID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property TargetControlID As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ TargetControlID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TargetControlID : string with get, set" Usage="System.Web.UI.WebControls.QueryExtender.TargetControlID" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.IDReferenceProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クエリに使用する <see cref="T:System.Web.UI.IDataSource" /> コントロールの ID を取得または設定します。</summary>
        <value>クエリに使用するデータ ソース コントロールの ID。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.QueryExtender.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="queryExtender.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.QueryExtender" /> コントロールのビューステートの変更を追跡し、変更がコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納されるようにします。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>
