<Type Name="SqlDataSourceStatusEventArgs" FullName="System.Web.UI.WebControls.SqlDataSourceStatusEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="79f04dbd918c389eebdaca9d46dfba8955cb8e92" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30598596" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class SqlDataSourceStatusEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SqlDataSourceStatusEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SqlDataSourceStatusEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SqlDataSourceStatusEventArgs : EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ操作の完了時に、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> コントロールによって生成されたイベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>クラスが使用されて、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、および<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント データが実行した後、データベース操作に関する情報を渡すをソース コントロール。 この情報には、操作によって影響を受ける行の数、<xref:System.Data.Common.DbCommand>データ ソース操作、および原因となった例外情報を実行するために使用できるオブジェクト。 処理するイベント ハンドラー デリゲートを追加することによって、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Inserted>または<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>イベント、このデータを確認し、必要な追加の post 処理を実行できます。  
  
 <xref:System.Web.UI.WebControls.SqlDataSource>コントロールは、基になるデータ オブジェクト、データの操作の実行中に操作を処理できる多くのイベントを公開します。 次の表は、イベントの一覧し、関連付けられている<xref:System.EventArgs>とイベント ハンドラー クラスより適切な操作を使用してデータのライフ サイクルに対応するさまざまなイベントを探すには<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
|event|EventArgs|EventHandler|  
|-----------|---------------|------------------|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selecting> データが取得される前に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Inserting>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updating>、 <xref:System.Web.UI.WebControls.SqlDataSource.Deleting> update、または削除操作が実行される挿入、前に発生します。|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceCommandEventHandler>|  
|<xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>発生後、データの取得、insert、update、または削除操作が完了します。|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>|<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>|  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>戻り値とを使用する場合に返される出力パラメーターの値を検証するクラス、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールを設定するストアド プロシージャを使用して、<xref:System.Web.UI.WebControls.GridView>コントロール。 ストアド プロシージャに表示されるデータの選択、 <xref:System.Web.UI.WebControls.GridView>、また、整数の出力パラメーターと戻り値など、呼び出し元にその他の情報を渡しますが、します。 パラメーターを<xref:System.Web.UI.WebControls.SqlDataSource>ストアド プロシージャの使用方法に含まれる、<xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>コレクション情報を Web フォームからストアド プロシージャに渡すパラメーターの構成し、情報を渡すパラメーターのバックアップをフォームです。 <xref:System.Web.UI.WebControls.Parameter.Direction%2A>これらのパラメーターのプロパティが設定されて<xref:System.Data.ParameterDirection.Output>と<xref:System.Data.ParameterDirection.ReturnValue>です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
    <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SqlDataSourceStatusEventArgs (System.Data.Common.DbCommand command, int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Data.Common.DbCommand command, int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.#ctor(System.Data.Common.DbCommand,System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SqlDataSourceStatusEventArgs(System::Data::Common::DbCommand ^ command, int affectedRows, Exception ^ exception);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="command" Type="System.Data.Common.DbCommand" />
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="command">
          <see cref="T:System.Data.Common.DbCommand" /> コントロールによってデータベースに送信されるデータベース クエリ、コマンド、またはストアド プロシージャを表す <see cref="T:System.Web.UI.WebControls.SqlDataSource" />。</param>
        <param name="affectedRows">該当する場合は、データベース操作の影響を受けた行数。</param>
        <param name="exception">該当する場合は、データベース操作によってスローされた <see cref="T:System.Exception" />。</param>
        <summary>指定された出力パラメーター、戻り値、および、データベース操作によって影響を受ける行数を使用して、<see cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベース操作の影響を受けた行の数を取得します。</summary>
        <value>データベース操作の影響を受けた行の数。 既定値は -1 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 すべての操作は、操作によって影響を受ける行の数を返します。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.AffectedRows%2A>プロパティの戻り値と同じ値には、 <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>、 <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>、および<xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>メソッドです。  
  
 ときに、<xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>メソッドが呼び出され、データ ソースに設定されている<xref:System.Web.UI.WebControls.SqlDataSourceMode.DataReader>モードでは、戻り値は常に 0 です。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Update" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Insert" />
        <altmember cref="M:System.Web.UI.WebControls.SqlDataSource.Delete" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public System.Data.Common.DbCommand Command { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Data.Common.DbCommand Command" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Command As DbCommand" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Data::Common::DbCommand ^ Command { System::Data::Common::DbCommand ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Data.Common.DbCommand</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースに送信されたデータベース コマンドを取得します。</summary>
        <value>データベースに送信されたデータベース コマンドを表す <see cref="T:System.Data.Common.DbCommand" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 処理することができます、 <xref:System.Web.UI.WebControls.SqlDataSource.Selected>、 <xref:System.Web.UI.WebControls.SqlDataSource.Updated>、 <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>、または<xref:System.Web.UI.WebControls.SqlDataSource.Deleted>を調べてのプロパティを操作するイベント、<xref:System.Data.Common.DbCommand>によって送信された後、<xref:System.Web.UI.WebControls.SqlDataSource>データベースへのコントロールです。 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Command%2A>プロパティを通じて、データベースの操作が実行された後の戻り値と、出力パラメーターの値にアクセスできます。 その<xref:System.Data.Common.DbCommand.Parameters%2A>プロパティだけでなく<xref:System.Data.Common.DbCommand.CommandText%2A>プロパティは、をデータベースに SQL クエリ、コマンド、または送信されたストアド プロシージャの名前を表します。  
  
 すべての出力パラメーターはパラメーターを持つ具体的には、<xref:System.Data.ParameterDirection.InputOutput>または<xref:System.Data.ParameterDirection.Output>値を<xref:System.Web.UI.WebControls.Parameter.Direction%2A>のプロパティ、<xref:System.Web.UI.WebControls.Parameter>オブジェクト。 戻り値を持つパラメーターからでは、<xref:System.Data.ParameterDirection.ReturnValue>値。  
  
   
  
## Examples  
 次のコード例を使用する場合は、出力パラメーターの値を調べ、<xref:System.Web.UI.WebControls.SqlDataSource>ストアド プロシージャを使用して制御します。 <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>パラメーターを格納するコレクションを<xref:System.Web.UI.WebControls.SqlDataSource>ストアド プロシージャを使用し、情報をフォームに渡すパラメーターと同様に、ストアド プロシージャを Web フォームから情報を渡すパラメーターで構成されます。 このコード例に示されている例の一部である、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>クラスです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/CS/sql21cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SqlDataSourceStatusEventArgs_1/VB/sql21vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ操作中にデータベースによってスローされる例外のラッパーを取得します。</summary>
        <value>データベースが <see cref="T:System.Exception" /> プロパティとしてスローした例外をラップした <see cref="P:System.Exception.InnerException" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Exception>プロパティが実際にデータベースの操作によってスローされる例外を表していません。 スローされた例外を使用して、アクセスできる、<xref:System.Exception.InnerException%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Selected" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Updated" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Inserted" />
        <altmember cref="E:System.Web.UI.WebControls.SqlDataSource.Deleted" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データベースによりスローされた例外が処理されたかどうか示す値を取得または設定します。</summary>
        <value>
          データベースによりスローされた例外が処理され、<see cref="T:System.Web.UI.WebControls.SqlDataSource" /> がその例外をスローする必要がない場合は <see langword="true" /> が返されます。それ以外の場合は <see langword="false" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データベースが、例外がスローされた場合、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティに設定されている`false`によって例外をラップし、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception%2A>プロパティです。 使用する場合、 <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler>、確認することができます、<xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.Exception%2A>プロパティと、例外をハンドルします。 例外を処理する場合は、設定、<xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.ExceptionHandled%2A>プロパティを`true`または<xref:System.Web.UI.WebControls.SqlDataSource>コントロールは例外をスローします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.SqlDataSourceStatusEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs.Exception" />
      </Docs>
    </Member>
  </Members>
</Type>