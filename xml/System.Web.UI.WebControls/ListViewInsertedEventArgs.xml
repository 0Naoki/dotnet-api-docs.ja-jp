<Type Name="ListViewInsertedEventArgs" FullName="System.Web.UI.WebControls.ListViewInsertedEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="777ea05bad7f455b214cbd3f7043062d4d56c7e6" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39938549" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ListViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class ListViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class ListViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type ListViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <see cref="E:System.Web.UI.WebControls.ListView.ItemInserted" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.ListView>生成を制御、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベントでの Insert ボタンのときに、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレートをクリックすると、以降、<xref:System.Web.UI.WebControls.ListView>コントロールがデータ ソースのレコードを更新します。 (の Insert ボタンがボタンを持つ`CommandName`プロパティが"Insert"に設定します)。<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベントでは、自動生成された値の取得、挿入された項目をデータベースからなど、カスタム アクションを実行することができます。  
  
 A<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>オブジェクトは、イベント処理メソッドを項目の挿入位置とする発生した例外の数を決定することができます。 挿入操作によって影響を受ける項目の数を調べるには、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>プロパティを例外が発生したかどうかを確認します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>プロパティ。 データ ソース、使用に送信された挿入された項目のフィールド値にアクセスする必要がある場合、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>プロパティ。  
  
 既定で、<xref:System.Web.UI.WebControls.ListView>クリアの制御、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>を挿入する新しい項目の値を追加することができる挿入操作の後のテンプレート。 挿入操作中に例外が発生する場合を保持できます、<xref:System.Web.UI.WebControls.ListView>コントロールを設定して挿入モードで、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>プロパティを`true`します。 これは、再バインド、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>値に項目を挿入する前に試行したときのテンプレート。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>のハンドラーに渡されるオブジェクト、<xref:System.Web.UI.WebControls.ListView.ItemInserted>イベント。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.ListView.ItemInserted#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.ListView" />
    <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ListViewInsertedEventArgs (int affectedRows, Exception exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.ListViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ListViewInsertedEventArgs(int affectedRows, Exception ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.ListViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.ListViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.ListViewInsertedEventArgs (affectedRows, exception)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="exception" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">挿入操作の影響を受けた行の数。</param>
        <param name="exception">挿入操作が実行されたときに発生した例外。 例外が発生しなかった場合は、このパラメーターに <see langword="null" /> を使用します。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.ListViewInsertedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>クラス。  
  
> [!NOTE]
>  このコンス トラクターは、イベントを発生させる場合に主にコントロールの開発者によって使用されます。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs> クラスのインスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>|<xref:System.Exception?displayProperty=nameWithType>オブジェクトに含まれている、`e`パラメーター。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>|初期化`false`します。|  
|<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>|初期化`false`します。|  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の影響を受けた行の数を取得します。</summary>
        <value>挿入操作の影響を受けた行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows%2A>プロパティをデータ ソース コントロールによって返される、挿入操作の影響を受けたレコードの数を決定します。 通常、このプロパティは、次のシナリオで使用されます。  
  
-   1 つのレコードのみが挿入されたことを確認します。 正しく記述されていない insert ステートメントは、複数のレコードを挿入することができます。  
  
-   挿入操作中にエラーが発生しましたが、例外が発生しないために、レコードが挿入しないことを確認します。  
  
-   競合の検出 (オプティミスティック同時実行制御) をサポートするデータ ソース コントロールにレコードが挿入されたことを確認してその<xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティに設定、`ConflictOptions.CompareAllValues`列挙値。 このプロパティをサポートするコントロールが含まれる、<xref:System.Web.UI.WebControls.SqlDataSource>と<xref:System.Web.UI.WebControls.ObjectDataSource>コントロール。 プロパティがこの値を持つ、別のユーザーによって挿入されたレコードと同じキー値がある場合、レコードが挿入されていない可能性があります。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>のハンドラーに渡されるオブジェクト、<xref:System.Web.UI.WebControls.ListView.ItemInserted>挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>クラス。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作中に例外が発生した場合は、その例外を取得します。</summary>
        <value>挿入操作中に発生した例外。例外が発生しなかった場合は <see langword="null" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 例外が発生し、イベント ハンドラーの設定に、例外を処理する場合、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>プロパティを`true`します。 それ以外の場合、<xref:System.Web.UI.WebControls.ListView>コントロールは、例外を再スローします。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>のハンドラーに渡されるオブジェクト、<xref:System.Web.UI.WebControls.ListView.ItemInserted>挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>クラス。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作中に発生した例外がイベント ハンドラーで処理されたかどうかを示す値を取得または設定します。</summary>
        <value>イベント ハンドラーで例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作中に、例外が発生したときに使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.ExceptionHandled%2A>例外がイベント ハンドラーで処理されたかどうかを示すプロパティです。 このプロパティに設定しているときに`true`例外が処理され、再スローされないと見なされます。 このプロパティ設定されている場合`false`、<xref:System.Web.UI.WebControls.ListView>コントロールは、例外を再スローします。 発生した例外を調べるには、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception%2A>プロパティ。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>のハンドラーに渡されるオブジェクト、<xref:System.Web.UI.WebControls.ListView.ItemInserted>挿入操作中に例外が発生したかどうかを決定するイベントです。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>クラス。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレート内のコントロールに対してユーザーの入力値が保持されているかどうかを示す値を取得または設定します。</summary>
        <value>
          <see cref="P:System.Web.UI.WebControls.ListView.InsertItemTemplate" /> テンプレート内のコントロールに対しユーザーの入力値が保持されている場合は <see langword="true" />、ユーザーの入力値がコントロールの既定値に置き換えられている場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定で、<xref:System.Web.UI.WebControls.ListView>コントロールからのコントロールの値にリセット、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>挿入操作の後に、その既定値をテンプレート。 これにより、ユーザーが挿入される新しい項目の値を追加できます。 保持することができます、挿入操作中に例外が発生する場合、<xref:System.Web.UI.WebControls.ListView>コントロールを設定して挿入モードで、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>プロパティを`true`します。 これにより、維持、値内のコントロールの項目を挿入する前の試行から、<xref:System.Web.UI.WebControls.ListView.InsertItemTemplate%2A>テンプレート。  
  
   
  
## Examples  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.KeepInInsertMode%2A>挿入操作中にエラーが発生したときに、ユーザーが入力した値を保持するプロパティ。 このコード例が示されている例の一部、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs>クラス。  
  
 [!code-csharp[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/CS/ListViewItemInsertedCS.aspx#3)]
 [!code-vb[System.Web.UI.WebControls.ListView.ItemInserted#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.ListView.ItemInserted/VB/ListViewItemInsertedVB.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.ListViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入されたレコードのフィールドの名前と値のペアを取得します。</summary>
        <value>挿入されたレコードのフィールドの名前と値のペア。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>挿入されたレコードのフィールドの値にアクセスするプロパティ。 たとえば、挿入されたレコードのログを保持するのにこれらの値を使用できます。  
  
 <xref:System.Web.UI.WebControls.ListViewInsertedEventArgs.Values%2A>プロパティが返す、<xref:System.Collections.Specialized.OrderedDictionary>を実装するオブジェクト、<xref:System.Collections.Specialized.IOrderedDictionary>インターフェイス。 <xref:System.Collections.Specialized.OrderedDictionary>オブジェクトを含む<xref:System.Collections.DictionaryEntry>挿入されたレコードのフィールドを表すオブジェクト。 フィールド名にアクセスするには、使用、<xref:System.Collections.Specialized.OrderedDictionary.Keys%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Collections.Specialized.OrderedDictionary>オブジェクト。 同様を使用してフィールド値にアクセスすることができます、<xref:System.Collections.Specialized.OrderedDictionary.Values%2A?displayProperty=nameWithType>プロパティ。  
  
> [!NOTE]
>  簡単な方法としてのインデクサーを使用することも、<xref:System.Collections.Specialized.OrderedDictionary>値を直接フィールドにアクセスするオブジェクト。 インデクサーを使用するメリットは、フィールドの値を直接返すことです。 データ ソース フィールドの順序に依存するコントロール (など<xref:System.Web.UI.WebControls.AccessDataSource>) フィールド値にインデックスを使用してのみアクセスできます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.ListView" />
        <altmember cref="E:System.Web.UI.WebControls.ListView.ItemInserted" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
      </Docs>
    </Member>
  </Members>
</Type>