<Type Name="CustomValidator" FullName="System.Web.UI.WebControls.CustomValidator">
  <TypeSignature Language="C#" Value="public class CustomValidator : System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit CustomValidator extends System.Web.UI.WebControls.BaseValidator" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.CustomValidator" />
  <TypeSignature Language="VB.NET" Value="Public Class CustomValidator&#xA;Inherits BaseValidator" />
  <TypeSignature Language="C++ CLI" Value="public ref class CustomValidator : System::Web::UI::WebControls::BaseValidator" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.BaseValidator</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("ServerValidate")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:CustomValidator runat="server" ErrorMessage="CustomValidator"&gt;&lt;/{0}:CustomValidator&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="fff68-101">入力コントロールのユーザー定義検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="fff68-101">Performs user-defined validation on an input control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff68-102">使用して、<xref:System.Web.UI.WebControls.CustomValidator>入力コントロールの検証のユーザー定義関数を提供するコントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-102">Use the <xref:System.Web.UI.WebControls.CustomValidator> control to provide a user-defined validation function for an input control.</span></span> <span data-ttu-id="fff68-103"><xref:System.Web.UI.WebControls.CustomValidator>コントロールは、個別のコントロール、入力コントロールから、検証ことができるコントロールに、検証メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-103">The <xref:System.Web.UI.WebControls.CustomValidator> control is a separate control from the input control it validates, which allows you to control where the validation message is displayed.</span></span>  
  
 <span data-ttu-id="fff68-104">検証コントロールは、サーバーで常に検証を実行します。</span><span class="sxs-lookup"><span data-stu-id="fff68-104">Validation controls always perform validation on the server.</span></span> <span data-ttu-id="fff68-105">クライアントの検証を実行するスクリプトを有効にしたブラウザー (Internet Explorer 4.0 などとそれ以降) を許可する完全なクライアント側実装もあります。</span><span class="sxs-lookup"><span data-stu-id="fff68-105">They also have complete client-side implementation that allows script-enabled browsers (such as Microsoft Internet Explorer 4.0 and later) to perform validation on the client.</span></span> <span data-ttu-id="fff68-106">クライアント側の検証は、サーバーに送信される前に、ユーザー入力をチェックして、検証プロセスを強化します。</span><span class="sxs-lookup"><span data-stu-id="fff68-106">Client-side validation enhances the validation process by checking user input before it is sent to the server.</span></span> <span data-ttu-id="fff68-107">これにより、フォームを送信すると、サーバー側の検証に必要な情報のラウンド トリップを回避する前に、クライアントで検出されたエラーです。</span><span class="sxs-lookup"><span data-stu-id="fff68-107">This allows errors to be detected on the client before the form is submitted, thus avoiding the round trip of information necessary for server-side validation.</span></span>  
  
 <span data-ttu-id="fff68-108">サーバー側の検証機能を作成するには、ハンドラーを指定、<xref:System.Web.UI.WebControls.CustomValidator.ServerValidate>検証を実行するイベントです。</span><span class="sxs-lookup"><span data-stu-id="fff68-108">To create a server-side validation function, provide a handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event that performs the validation.</span></span> <span data-ttu-id="fff68-109">検証する入力コントロールから文字列を使用してアクセスできる、<xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.ServerValidateEventArgs>をパラメーターとして、イベント ハンドラーに渡されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fff68-109">The string from the input control to validate can be accessed by using the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the <xref:System.Web.UI.WebControls.ServerValidateEventArgs> object passed into the event handler as a parameter.</span></span> <span data-ttu-id="fff68-110">検証の結果が格納されているし、<xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A>のプロパティ、<xref:System.Web.UI.WebControls.ServerValidateEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="fff68-110">The result of the validation is then stored in the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property of the <xref:System.Web.UI.WebControls.ServerValidateEventArgs> object.</span></span>  
  
 <span data-ttu-id="fff68-111">クライアント側検証関数を作成するには、まず前に説明したサーバー側の検証機能を追加します。</span><span class="sxs-lookup"><span data-stu-id="fff68-111">To create a client-side validation function, first add the server-side validation function described earlier.</span></span> <span data-ttu-id="fff68-112">次に、ASP.NET (.aspx) ページに、クライアント側の検証スクリプト関数を追加します。</span><span class="sxs-lookup"><span data-stu-id="fff68-112">Next, add the client-side validation script function to the ASP.NET (.aspx) page.</span></span>  
  
 <span data-ttu-id="fff68-113">Visual Basic Scripting Edition (VBScript) を使用している場合、関数は、この形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-113">If you are using Visual Basic Scripting Edition (VBScript), the function must be in this form:</span></span>  
  
```  
Sub ValidationFunctionName(source, arguments)  
```  
  
 <span data-ttu-id="fff68-114">JScript を使用している場合、関数は、この形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-114">If you are using JScript, the function must be in this form:</span></span>  
  
```  
function ValidationFunctionName(source, arguments)  
```  
  
 <span data-ttu-id="fff68-115">`source`パラメーターへの参照、 \<span > の要素をレンダリング、<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-115">The `source` parameter is a reference to the \<span> element rendered for the <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span> <span data-ttu-id="fff68-116">これによりプログラムでコントロールを\<span > を変更するなどのタグ、<xref:System.Windows.Forms.HtmlElement.InnerHtml%2A>属性。</span><span class="sxs-lookup"><span data-stu-id="fff68-116">This allows you to programmatically control the \<span> tag, such as modifying the <xref:System.Windows.Forms.HtmlElement.InnerHtml%2A> attribute.</span></span> <span data-ttu-id="fff68-117">`arguments`パラメーターが 2 つのプロパティを持つオブジェクト: 値および IsValid です。</span><span class="sxs-lookup"><span data-stu-id="fff68-117">The `arguments` parameter is an object with two properties: Value and IsValid.</span></span> <span data-ttu-id="fff68-118">このパラメーターには、検証するかどうか、値が有効では、カスタム検証ルーチンに基づくを指定したり、コントロールの値を取得することができます。</span><span class="sxs-lookup"><span data-stu-id="fff68-118">This parameter allows you to get the value of the control to validate and to indicate whether the value is valid based on your custom validation routine.</span></span>  
  
 <span data-ttu-id="fff68-119">使用して、<xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A>クライアント側の検証スクリプト関数の名前を指定するプロパティに関連付けられている、<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-119">Use the <xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A> property to specify the name of the client-side validation script function associated with the <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span> <span data-ttu-id="fff68-120">スクリプト関数は、クライアントで実行されるので、関数は、VBScript や JScript など、対象のブラウザーをサポートする言語でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="fff68-120">Because the script function is executed on the client, the function must be in a language that the target browser supports, such as VBScript or JScript.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fff68-121">使用すると、<xref:System.Web.UI.WebControls.CustomValidator>内の制御、<xref:System.Web.UI.UpdatePanel>制御、検証コントロールと関連付けられているコントロールが同じパネルであるかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="fff68-121">When you use the <xref:System.Web.UI.WebControls.CustomValidator> control inside an <xref:System.Web.UI.UpdatePanel> control, make sure that the validator control and the control it is associated with are in the same panel.</span></span> <span data-ttu-id="fff68-122">使用しての詳細については、<xref:System.Web.UI.UpdatePanel>部分ページ更新プログラムの制御を参照してください[部分ページ レンダリング概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-122">For more information about using the <xref:System.Web.UI.UpdatePanel> control for partial-page updates, see [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
 <span data-ttu-id="fff68-123">使用して検証する入力コントロールから文字列をアクセス サーバー側の検証と同様に、<xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A>のプロパティ、`arguments`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="fff68-123">Like server-side validation, the string from the input control to validate is accessed by using the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the `arguments` parameter.</span></span> <span data-ttu-id="fff68-124">設定して、検証の結果を返す、<xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A>のプロパティ、`arguments`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="fff68-124">Return the result of the validation by setting the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid%2A> property of the `arguments` parameter.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="fff68-125">検証コントロールを使用する場合は、常に、処理を実行する前にサーバー側の検証の結果を確認する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-125">When using validator controls, you should always check the results of server-side validation before performing any processing.</span></span> <span data-ttu-id="fff68-126">ポストバックが後に、イベント メソッドを呼び出す前にページ検証コントロールを呼び出すし、集計には、その結果、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff68-126">After a postback but before your event methods are called, the page calls the validator controls and aggregates their results into the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="fff68-127">(検証コントロールを使用して明示的に呼び出すこともできます、`Validate`メソッドです)。独自のコードで、ことを確認する必要があります、<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>プロパティから返される`true`入力を処理する前にします。</span><span class="sxs-lookup"><span data-stu-id="fff68-127">(You can also call the validator controls explicitly using the `Validate` method.) In your own code, you should check that the <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> property returns `true` before processing input.</span></span> <span data-ttu-id="fff68-128">スクリプト対応のブラウザーは、検証チェックが失敗した場合も、常に確認する必要があります、クライアントで発生しているをポストバックを妨げる可能性も<xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType>検証済みのデータを処理する前にサーバー コードにします。</span><span class="sxs-lookup"><span data-stu-id="fff68-128">Even though script-enabled browsers might prevent a postback from occurring on the client if a validation check has failed, you should always also check <xref:System.Web.UI.Page.IsValid%2A?displayProperty=nameWithType> in server code before processing validated data.</span></span>  
  
 <span data-ttu-id="fff68-129">複数の検証コントロールは、さまざまな条件を検証する個々 の入力コントロールで使用できます。</span><span class="sxs-lookup"><span data-stu-id="fff68-129">Multiple validation controls can be used with an individual input control to validate different criteria.</span></span> <span data-ttu-id="fff68-130">たとえばで複数の検証コントロールを適用することができます、<xref:System.Web.UI.WebControls.TextBox>ユーザーがショッピング カートに追加する項目の数量を入力できるコントロールです。</span><span class="sxs-lookup"><span data-stu-id="fff68-130">For example, you can apply multiple validation controls on a <xref:System.Web.UI.WebControls.TextBox> control that allows the user to enter the quantity of items to add to a shopping cart.</span></span> <span data-ttu-id="fff68-131">使用することができます、<xref:System.Web.UI.WebControls.CustomValidator>コントロールを指定された値は、インベントリの量よりも小さいことを確認し、<xref:System.Web.UI.WebControls.RequiredFieldValidator>コントロールに値を入力することを確認する、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-131">You can use a <xref:System.Web.UI.WebControls.CustomValidator> control to ensure that the value specified is less than the amount in inventory and a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to ensure that the user enters a value into the <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="fff68-132">入力コントロールが空の場合は、検証関数は呼び出されません、検証は成功します。</span><span class="sxs-lookup"><span data-stu-id="fff68-132">If the input control is empty, no validation functions are called and validation succeeds.</span></span> <span data-ttu-id="fff68-133">使用して、<xref:System.Web.UI.WebControls.RequiredFieldValidator>コントロールをユーザーの入力コントロールにデータを入力する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-133">Use a <xref:System.Web.UI.WebControls.RequiredFieldValidator> control to require the user to enter data in the input control.</span></span>  
  
 <span data-ttu-id="fff68-134">使用可能であれば、<xref:System.Web.UI.WebControls.CustomValidator>コントロール設定を指定せず、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff68-134">It is possible to use a <xref:System.Web.UI.WebControls.CustomValidator> control without setting the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property.</span></span> <span data-ttu-id="fff68-135">これは、よくを複数の入力コントロールの検証またはなど、検証コントロールと共に使用することはできませんの入力コントロールを検証するとき、<xref:System.Web.UI.WebControls.CheckBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-135">This is commonly done when you are validating multiple input controls or validating input controls that cannot be used with validation controls, such as the <xref:System.Web.UI.WebControls.CheckBox> control.</span></span> <span data-ttu-id="fff68-136">ここで、<xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A>のプロパティ、`arguments`のイベント ハンドラーに渡されたパラメーター、<xref:System.Web.UI.WebControls.CustomValidator.ServerValidate>イベントれ、クライアント側の検証に関数常に空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="fff68-136">In this case, the <xref:System.Web.UI.WebControls.ServerValidateEventArgs.Value%2A> property of the `arguments` parameter passed to the event handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event and to the client-side validation function always contains an empty string ("").</span></span> <span data-ttu-id="fff68-137">ただし、これらの検証関数は依然として、サーバーとクライアントの両方で検証を行うために、適切な場所で呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-137">However, these validation functions are still called, where appropriate, to determine validity on both the server and client.</span></span> <span data-ttu-id="fff68-138">検証対象の値にアクセスするには、プログラムで検証し、適切なプロパティから値を取得する入力コントロールを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-138">To access the value to validate, you must programmatically reference the input control you want to validate and then retrieve the value from the appropriate property.</span></span> <span data-ttu-id="fff68-139">たとえば、検証するため、<xref:System.Web.UI.WebControls.CheckBox>サーバー上のコントロールを設定しないでください、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>のハンドラーに次のコードで使用して、検証コントロールのプロパティ、<xref:System.Web.UI.WebControls.CustomValidator.ServerValidate>イベント。</span><span class="sxs-lookup"><span data-stu-id="fff68-139">For example, to validate a <xref:System.Web.UI.WebControls.CheckBox> control on the server, do not set the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property of the validation control and use the following code for the handler for the <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event.</span></span>  
  
```vb  
Sub ServerValidation (source As object, args As ServerValidateEventArgs)  
    args.IsValid = (CheckBox1.Checked = True)  
 End Sub  
```  
  
```csharp  
void ServerValidation (object source, ServerValidateEventArgs args)  
 {  
    args.IsValid = (CheckBox1.Checked == true);  
 }  
```  
  
 <span data-ttu-id="fff68-140">検証コントロールの詳細については、次を参照してください。<xref:System.Web.UI.WebControls.BaseValidator>です。</span><span class="sxs-lookup"><span data-stu-id="fff68-140">For more information on validation controls, see <xref:System.Web.UI.WebControls.BaseValidator>.</span></span>  
  
## <a name="accessibility"></a><span data-ttu-id="fff68-141">ユーザー補助</span><span class="sxs-lookup"><span data-stu-id="fff68-141">Accessibility</span></span>  
 <span data-ttu-id="fff68-142">ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-142">For information about how to configure this control so that it generates markup that conforms to accessibility standards, see [Accessibility in Visual Studio and ASP.NET](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13) and [ASP.NET Controls and Accessibility](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff68-143">次のコード例は、サーバー側を作成する方法を示します<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-143">The following code example demonstrates how to create a server-side <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-144">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-144">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-145">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-145">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-146">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-146">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 <span data-ttu-id="fff68-147">次のコード例は、クライアント側を作成する方法を示します<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-147">The following code example demonstrates how to create a client-side <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span>  
  
 [!code-aspx-csharp[CustomValidatorClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorClient/CS/customvalidatorclientcs.aspx#1)]
 [!code-aspx-vb[CustomValidatorClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorClient/VB/customvalidatorclientvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
    <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
    <altmember cref="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
    <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
    <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
    <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventArgs" />
    <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
    <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public CustomValidator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; CustomValidator();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fff68-148"><see cref="T:System.Web.UI.WebControls.CustomValidator" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="fff68-148">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.CustomValidator" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
        <altmember cref="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
        <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventArgs" />
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.Value" />
        <altmember cref="P:System.Web.UI.WebControls.ServerValidateEventArgs.IsValid" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="fff68-149">クライアントに表示する出力ストリームを格納する <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="fff68-149">A <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream for rendering on the client.</span></span></param>
        <summary><span data-ttu-id="fff68-150"><see cref="T:System.Web.UI.WebControls.CustomValidator" /> コントロールのプロパティを、クライアントに表示する出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="fff68-150">Adds the properties of the <see cref="T:System.Web.UI.WebControls.CustomValidator" /> control to the output stream for rendering on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fff68-151">次のコード例は、オーバーライドする方法を示します、<xref:System.Web.UI.WebControls.CustomValidator.AddAttributesToRender%2A>カスタム サーバー コントロールできるように、<xref:System.Web.UI.WebControls.CustomValidator>エラー メッセージが常に太字で表示されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-151">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.CustomValidator.AddAttributesToRender%2A> method in a custom server control so that the <xref:System.Web.UI.WebControls.CustomValidator> error message always appears in bold.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-152">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-152">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-153">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-153">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-154">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-154">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomCustomValidatorAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/CS/custom_customvalidator_addattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/VB/custom_customvalidator_addattributestorendervb.aspx#1)]  
[!code-csharp[CustomCustomValidatorAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/CS/custom_customvalidator_addattributestorender.cs#2)]
[!code-vb[CustomCustomValidatorAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorAddAttributesToRender/VB/custom_customvalidator_addattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientValidationFunction">
      <MemberSignature Language="C#" Value="public string ClientValidationFunction { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ClientValidationFunction" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientValidationFunction As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ClientValidationFunction { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fff68-155">検証に使用するカスタム クライアント側スクリプト関数の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fff68-155">Gets or sets the name of the custom client-side script function used for validation.</span></span></summary>
        <value><span data-ttu-id="fff68-156">検証に使用するカスタム クライアント スクリプト関数の名前。</span><span class="sxs-lookup"><span data-stu-id="fff68-156">The name of the custom client script function used for validation.</span></span> <span data-ttu-id="fff68-157">既定値は <see cref="F:System.String.Empty" /> で、このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="fff68-157">The default value is <see cref="F:System.String.Empty" />, which indicates that this property is not set.</span></span>  
  
 <block subset="none" type="note"><para>  
 <span data-ttu-id="fff68-158">関数名にはかっこやパラメーターは使用できません。</span><span class="sxs-lookup"><span data-stu-id="fff68-158">The function name should not include any parentheses or parameters.</span></span>  
  
</para></block></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff68-159">このプロパティは、クライアント側検証を実行する関数の名前を設定します。</span><span class="sxs-lookup"><span data-stu-id="fff68-159">Set this property to the name of the function that performs the client-side validation.</span></span>  
  
 <span data-ttu-id="fff68-160">クライアントの検証関数は、対象のブラウザーで実行しているため、関数は JScript または VBScript などのブラウザーでサポートされているスクリプト言語を使用して書き込まれなければなりません。</span><span class="sxs-lookup"><span data-stu-id="fff68-160">Because the client validation function runs on the target browser, the function must be written using a scripting language supported by the browser, such as JScript or VBScript.</span></span>  
  
 <span data-ttu-id="fff68-161">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="fff68-161">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="fff68-162">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-162">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff68-163">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A>クライアント側検証を実行する関数の名前を指定するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff68-163">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.CustomValidator.ClientValidationFunction%2A> property to specify the name of the function that performs client-side validation.</span></span> <span data-ttu-id="fff68-164">検証関数は、偶数をチェックします。</span><span class="sxs-lookup"><span data-stu-id="fff68-164">The validation function checks for even numbers.</span></span> <span data-ttu-id="fff68-165">関数のパラメーターの説明は、の「解説」セクションを参照してください。<xref:System.Web.UI.WebControls.CustomValidator>です。</span><span class="sxs-lookup"><span data-stu-id="fff68-165">For a description of the function parameters, see the Remarks section of <xref:System.Web.UI.WebControls.CustomValidator>.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-166">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-166">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-167">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-167">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-168">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-168">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomValidatorClient#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorClient/CS/customvalidatorclientcs.aspx#1)]
 [!code-aspx-vb[CustomValidatorClient#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorClient/VB/customvalidatorclientvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="ControlPropertiesValid">
      <MemberSignature Language="C#" Value="protected override bool ControlPropertiesValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool ControlPropertiesValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function ControlPropertiesValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool ControlPropertiesValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fff68-169">コントロールのプロパティで値が有効かどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="fff68-169">Checks the properties of the control for valid values.</span></span></summary>
        <returns>
          <span data-ttu-id="fff68-170">コントロールのプロパティが有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fff68-170"><see langword="true" /> if the control properties are valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fff68-171">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid%2A>カスタム サーバー内のメソッドは制御と同じくらい visible プロパティの値を常に返すように、<xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A>のプロパティ、<xref:System.Web.UI.WebControls.CustomValidator>コントロールがページとが含まれています検証プロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff68-171">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.CustomValidator.ControlPropertiesValid%2A> method in a custom server control so that it always returns the value of the visible property, as long as the <xref:System.Web.UI.WebControls.BaseValidator.ControlToValidate%2A> property of the <xref:System.Web.UI.WebControls.CustomValidator> control is on the page and contains validation properties.</span></span>  
  
 [!code-aspx-csharp[CustomCustomValidatorControlPropertiesValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/CS/custom_customvalidator_controlpropertiesvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorControlPropertiesValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/VB/custom_customvalidator_controlpropertiesvalidvb.aspx#1)]  
[!code-csharp[CustomCustomValidatorControlPropertiesValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/CS/custom_customvalidator_controlpropertiesvalid.cs#2)]
[!code-vb[CustomCustomValidatorControlPropertiesValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorControlPropertiesValid/VB/custom_customvalidator_controlpropertiesvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EvaluateIsValid">
      <MemberSignature Language="C#" Value="protected override bool EvaluateIsValid ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool EvaluateIsValid() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.EvaluateIsValid" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function EvaluateIsValid () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool EvaluateIsValid();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="fff68-172"><see cref="M:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid" /> メソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="fff68-172">Overrides the <see cref="M:System.Web.UI.MobileControls.BaseValidator.EvaluateIsValid" /> method.</span></span></summary>
        <returns>
          <span data-ttu-id="fff68-173">入力コントロールの値が有効である場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fff68-173"><see langword="true" /> if the value in the input control is valid; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="fff68-174">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.CustomValidator.EvaluateIsValid%2A>カスタム サーバー コントロールのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="fff68-174">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.CustomValidator.EvaluateIsValid%2A> method in a custom server control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-175">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-175">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-176">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-176">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-177">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-177">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomCustomValidatorEvaluateIsValid#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/CS/custom_customvalidator_evaluateisvalidcs.aspx#1)]
 [!code-aspx-vb[CustomCustomValidatorEvaluateIsValid#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/VB/custom_customvalidator_evaluateisvalidvb.aspx#1)]  
[!code-csharp[CustomCustomValidatorEvaluateIsValid#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/CS/custom_customvalidator_evaluateisvalid.cs#2)]
[!code-vb[CustomCustomValidatorEvaluateIsValid#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomCustomValidatorEvaluateIsValid/VB/custom_customvalidator_evaluateisvalid.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnServerValidate">
      <MemberSignature Language="C#" Value="protected virtual bool OnServerValidate (string value);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool OnServerValidate(string value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function OnServerValidate (value As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool OnServerValidate(System::String ^ value);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="fff68-178">検証対象の値。</span><span class="sxs-lookup"><span data-stu-id="fff68-178">The value to validate.</span></span></param>
        <summary><span data-ttu-id="fff68-179"><see cref="T:System.Web.UI.WebControls.CustomValidator" /> コントロールの <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="fff68-179">Raises the <see cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" /> event for the <see cref="T:System.Web.UI.WebControls.CustomValidator" /> control.</span></span></summary>
        <returns>
          <span data-ttu-id="fff68-180"><paramref name="value" /> パラメーターによって指定された値の検証が成功した場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fff68-180"><see langword="true" /> if the value specified by the <paramref name="value" /> parameter passes validation; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff68-181"><xref:System.Web.UI.WebControls.CustomValidator.ServerValidate>イベントは、サーバー検証を行うときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fff68-181">The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server.</span></span>  
  
 <span data-ttu-id="fff68-182">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-182">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="fff68-183">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-183">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="fff68-184"><xref:System.Web.UI.WebControls.CustomValidator.OnServerValidate%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="fff68-184">The <xref:System.Web.UI.WebControls.CustomValidator.OnServerValidate%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="fff68-185">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="fff68-185">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff68-186">次のコード例を指定およびサーバー側のハンドラーをコーディングする方法を示します<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-186">The following code example demonstrates how to specify and code a handler for a server-side <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-187">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-187">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-188">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-188">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-189">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-189">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="fff68-190">派生クラスで <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-190">When overriding <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
      </Docs>
    </Member>
    <Member MemberName="ServerValidate">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.ServerValidateEventHandler ServerValidate" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.CustomValidator.ServerValidate" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ServerValidate As ServerValidateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::ServerValidateEventHandler ^ ServerValidate;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ServerValidateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fff68-191">サーバーで検証が実行されると発生します。</span><span class="sxs-lookup"><span data-stu-id="fff68-191">Occurs when validation is performed on the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff68-192"><xref:System.Web.UI.WebControls.CustomValidator.ServerValidate>イベントは、サーバー検証を行うときに発生します。</span><span class="sxs-lookup"><span data-stu-id="fff68-192">The <xref:System.Web.UI.WebControls.CustomValidator.ServerValidate> event is raised when validation is performed on the server.</span></span> <span data-ttu-id="fff68-193">このイベントが、入力コントロールのように、カスタム検証ルーチンを提供するため、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-193">This event is used to provide a custom validation routine for an input control, such as a <xref:System.Web.UI.WebControls.TextBox> control.</span></span>  
  
 <span data-ttu-id="fff68-194">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-194">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="fff68-195">次のコード例を指定およびサーバー側のハンドラーをコーディングする方法を示します<xref:System.Web.UI.WebControls.CustomValidator>コントロール。</span><span class="sxs-lookup"><span data-stu-id="fff68-195">The following code example demonstrates how to specify and code a handler for a server-side <xref:System.Web.UI.WebControls.CustomValidator> control.</span></span> <span data-ttu-id="fff68-196">カスタム検証ルーチンを作成の値を検証、<xref:System.Web.UI.WebControls.TextBox>数が偶数の制御し、検証の結果を表示します。</span><span class="sxs-lookup"><span data-stu-id="fff68-196">It creates a custom validation routine, validates the value of a <xref:System.Web.UI.WebControls.TextBox> control for an even number, and then displays the result of the validation.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="fff68-197">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="fff68-197">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="fff68-198">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="fff68-198">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="fff68-199">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="fff68-199">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[CustomValidatorServerValidate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomValidatorServerValidate/CS/customvalidatorservervalidatecs.aspx#1)]
 [!code-aspx-vb[CustomValidatorServerValidate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomValidatorServerValidate/VB/customvalidatorservervalidatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.CustomValidator.OnServerValidate(System.String)" />
        <altmember cref="T:System.Web.UI.WebControls.ServerValidateEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="ValidateEmptyText">
      <MemberSignature Language="C#" Value="public bool ValidateEmptyText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ValidateEmptyText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateEmptyText As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ValidateEmptyText { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="fff68-200">空のテキストを検証するかどうかを示すブール値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="fff68-200">Gets or sets a Boolean value indicating whether empty text should be validated.</span></span></summary>
        <value>
          <span data-ttu-id="fff68-201">空のテキストを検証する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="fff68-201"><see langword="true" /> if empty text should be validated; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="fff68-202">個々 の検証は、対象のコントロールに関連付けることができます。</span><span class="sxs-lookup"><span data-stu-id="fff68-202">Each validator can be associated with a targeted control.</span></span> <span data-ttu-id="fff68-203">対象のコントロールが含まれていた、空の文字列値など、.NET Framework の以前のバージョンで、<xref:System.Web.UI.WebControls.TextBox.Text%2A>プロパティの値を持つ<xref:System.String.Empty?displayProperty=nameWithType>、バリデーター (を除き、<xref:System.Web.UI.WebControls.RequiredFieldValidator>性検証ツール) は対象のコントロールを評価していないと、単に戻ったら、検証が成功しました。</span><span class="sxs-lookup"><span data-stu-id="fff68-203">In previous versions of the .NET Framework, if the targeted control had an empty string value, such as a  <xref:System.Web.UI.WebControls.TextBox.Text%2A> property having a value of <xref:System.String.Empty?displayProperty=nameWithType>, the validator (except for the <xref:System.Web.UI.WebControls.RequiredFieldValidator> validator) would not evaluate the targeted control and would simply return that the validation passed.</span></span>  
  
 <span data-ttu-id="fff68-204"><xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A>は .NET Framework version 2.0 の新しいプロパティです。</span><span class="sxs-lookup"><span data-stu-id="fff68-204">The <xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A> property is new for the .NET Framework version 2.0.</span></span>  <span data-ttu-id="fff68-205">場合<xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A>に設定されている`true`、バリデーターがコントロールの値を評価 (を指定した条件を使用して、<xref:System.Web.UI.WebControls.CustomValidator>コントロール) の検証結果を返します。</span><span class="sxs-lookup"><span data-stu-id="fff68-205">If <xref:System.Web.UI.WebControls.CustomValidator.ValidateEmptyText%2A> is set to `true`, the validator evaluates the control's value (using the criteria specified to the <xref:System.Web.UI.WebControls.CustomValidator> control) and returns the validation results.</span></span> <span data-ttu-id="fff68-206">このプロパティにより、開発者の結果を評価する、<xref:System.Web.UI.WebControls.CustomValidator>対象のコントロールの値に関係なく制御します。</span><span class="sxs-lookup"><span data-stu-id="fff68-206">This property allows developers to evaluate the results of a <xref:System.Web.UI.WebControls.CustomValidator> control regardless of the value of the targeted control.</span></span>  
  
 <span data-ttu-id="fff68-207">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="fff68-207">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="fff68-208">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="fff68-208">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.BaseValidator" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>