<Type Name="FormViewInsertedEventArgs" FullName="System.Web.UI.WebControls.FormViewInsertedEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="93a01b61626399a49dc1b1d9ad1b521165fcf9fc" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70402908" /></Metadata><TypeSignature Language="C#" Value="public class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormViewInsertedEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class FormViewInsertedEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormViewInsertedEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type FormViewInsertedEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロールは、コントロール<xref:System.Web.UI.WebControls.FormView.ItemInserted>内で挿入ボタン`CommandName` (プロパティが "Insert" に設定されているボタン) をクリックしたときに、コントロール<xref:System.Web.UI.WebControls.FormView>がレコードを挿入した後に、イベントを発生させます。 <xref:System.Web.UI.WebControls.FormView> これにより、このイベントが発生するたびに、挿入操作の結果を確認するなどのカスタムルーチンを実行するイベント処理メソッドを提供できます。  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>オブジェクトは、イベント処理メソッドに渡されます。これにより、影響を受けるレコードの数と発生した可能性のある例外を確認できます。 挿入操作によって影響を受けたレコードの数を確認<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>するには、プロパティを使用します。 プロパティを<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>使用して、例外が発生したかどうかを確認します。 また、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>プロパティを設定することによって、イベント処理メソッドで例外が処理されたかどうかを示すこともできます。 挿入されたレコードの値にアクセスする必要がある場合<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>は、プロパティを使用します。  
  
 既定では、 <xref:System.Web.UI.WebControls.FormView>コントロールは、挿入操作の後に<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> 、プロパティによって指定されたモードに戻ります。 挿入操作中に例外が発生した場合は、 <xref:System.Web.UI.WebControls.FormView> <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>プロパティをに設定する`true`ことによって、コントロールを挿入モードのままにすることができます。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> クラスのインスタンスの初期プロパティ値一覧については、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.%23ctor%2A> コンストラクターに関するトピックを参照してください。  
  
   
  
## Examples  
 次の例は、イベント<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> <xref:System.Web.UI.WebControls.FormView.ItemInserted>のイベント処理メソッドに渡されたオブジェクトを使用して、挿入操作中に例外が発生したかどうかを判断する方法を示しています。  
  
> [!IMPORTANT]
>  この例には、セキュリティ上の脅威となる可能性のあるユーザー入力を受け付けるテキストボックスが含まれています。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.FormView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormViewInsertedEventArgs (int affectedRows, Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(int32 affectedRows, class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormViewInsertedEventArgs.#ctor(System.Int32,System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (affectedRows As Integer, e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormViewInsertedEventArgs(int affectedRows, Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.FormViewInsertedEventArgs : int * Exception -&gt; System.Web.UI.WebControls.FormViewInsertedEventArgs" Usage="new System.Web.UI.WebControls.FormViewInsertedEventArgs (affectedRows, e)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="affectedRows" Type="System.Int32" />
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="affectedRows">挿入操作の影響を受けた行の数。</param>
        <param name="e">挿入操作が実行されたときに発生した例外を表す <see cref="T:System.Exception" />。 例外が発生しなかった場合は、このパラメーターに <see langword="null" /> を使用します。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンストラクターを使用して、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>クラスの新しいインスタンスを初期化します。  
  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> インスタンスの初期プロパティ値を次の表に示します。  
  
|プロパティ|初期値|  
|--------------|-------------------|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>|`affectedRows` パラメーターの値。|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>|パラメーターに格納されて<xref:System.Exception?displayProperty=nameWithType>いるオブジェクト。 `e`|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>|に`false`初期化されます。|  
|<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>|に`false`初期化されます。|  
  
> [!NOTE]
>  このコンストラクターは、イベントを発生させるときに、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      </Docs>
    </Member>
    <Member MemberName="AffectedRows">
      <MemberSignature Language="C#" Value="public int AffectedRows { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 AffectedRows" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property AffectedRows As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int AffectedRows { int get(); };" />
      <MemberSignature Language="F#" Value="member this.AffectedRows : int" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の影響を受けた行の数を取得します。</summary>
        <value>挿入操作の影響を受けた行の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>の影響を受けるレコードの数を確認するには、プロパティを使用します。 このプロパティは、通常、次の状況で正しいレコード数が挿入されたことを確認するために使用されます。  
  
-   レコードが1つだけ挿入されたことを確認します。 不適切に記述された insert ステートメントで複数のレコードを挿入できる場合もあります。  
  
-   挿入操作中に例外を発生させないエラーが発生したときに、レコードが挿入されたことを確認します。  
  
-   競合検出 (オプティミスティック同時実行) をサポートするデータソースコントロール<xref:System.Web.UI.WebControls.SqlDataSource> (や<xref:System.Web.UI.WebControls.ObjectDataSource>コントロールなど) で、 <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>プロパティが`ConflictOptions.CompareAllValues`列挙値に設定されている場合に、レコードが挿入されたことを確認します。 この設定では、別のユーザーによってレコードと同じキー値を持つレコードが挿入されない可能性があります。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>プロパティを使用して、挿入操作中にレコードが挿入されたことを確認する方法を示しています。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作中に例外が発生した場合は、その例外を取得します。</summary>
        <value>挿入操作中に発生した例外を表す <see cref="T:System.Exception" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>プロパティを使用して、挿入操作中に発生した例外 (存在する場合) を確認します。 例外が発生しなかった場合、このプロパティは `null` を返します。  
  
> [!NOTE]
>  例外が発生し、イベントハンドラーで例外を処理する場合は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>プロパティをに`true`設定してください。それ以外の場合は<xref:System.Web.UI.WebControls.FormView> 、コントロールによって例外が再スローされます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>プロパティを使用して、挿入操作中に例外が発生したかどうかを判断する方法を示しています。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作中に発生した例外がイベント ハンドラーで処理されたかどうかを示す値を取得または設定します。</summary>
        <value>イベント ハンドラーで例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入操作中に例外が発生した場合は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>プロパティを使用して、例外がイベントハンドラーで処理されたかどうかを示します。 このプロパティがに`true`設定されている場合、例外は処理済みと見なされ、再スローされません。 このプロパティがに`false`設定されている場合、コントロールは<xref:System.Web.UI.WebControls.FormView>例外を再スローします。 発生した例外を特定するには<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> 、プロパティを使用します。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>プロパティを使用して、例外がイベントハンドラーで処理されたことを示す方法を示しています。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      </Docs>
    </Member>
    <Member MemberName="KeepInInsertMode">
      <MemberSignature Language="C#" Value="public bool KeepInInsertMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool KeepInInsertMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberSignature Language="VB.NET" Value="Public Property KeepInInsertMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool KeepInInsertMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.KeepInInsertMode : bool with get, set" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入操作の後で、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを挿入モードのまま維持するかどうかを示す値を取得または設定します。</summary>
        <value>挿入操作後に挿入モードのまま維持する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、 <xref:System.Web.UI.WebControls.FormView>コントロールは<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>プロパティによって指定されたモードに戻ります。 プロパティを<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>使用して、挿入<xref:System.Web.UI.WebControls.FormView>操作後にコントロールを挿入モードのままにするかどうかを指定します。 <xref:System.Web.UI.WebControls.FormView>コントロールを挿入モードのままにするには、この`true`プロパティをに設定します。  
  
> [!NOTE]
>  このプロパティは、通常とは異なる方法でコントロールの動作を必要とする状況 (例外が発生しているなど) が発生した場合にのみ使用してください。 既定で<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>コントロールを挿入モードのままにする必要がある場合は、代わりにプロパティを設定します。 <xref:System.Web.UI.WebControls.FormView>  
  
   
  
## Examples  
 次の例では、挿入操作<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>中に例外が<xref:System.Web.UI.WebControls.FormView>発生した場合に、プロパティを使用してコントロールを挿入モードに維持する方法を示します。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      </Docs>
    </Member>
    <Member MemberName="Values">
      <MemberSignature Language="C#" Value="public System.Collections.Specialized.IOrderedDictionary Values { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Specialized.IOrderedDictionary Values" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Values As IOrderedDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Specialized::IOrderedDictionary ^ Values { System::Collections::Specialized::IOrderedDictionary ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Values : System.Collections.Specialized.IOrderedDictionary" Usage="System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Specialized.IOrderedDictionary</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入されたレコードのフィールドの名前と値のペアを格納しているディクショナリを取得します。</summary>
        <value>挿入されたレコードのフィールドの名前と値のペアのディクショナリを格納している <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 挿入さ<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>れたレコードのフィールドの値にアクセスするには、プロパティを使用します。 たとえば、これらの値を使用して、挿入されたレコードのログを保持することができます。  
  
 プロパティ<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>は、 <xref:System.Collections.Specialized.IOrderedDictionary?displayProperty=nameWithType>インターフェイス<xref:System.Collections.Specialized.OrderedDictionary>を実装するオブジェクトを返します。 オブジェクト<xref:System.Collections.Specialized.OrderedDictionary>には<xref:System.Collections.DictionaryEntry?displayProperty=nameWithType> 、挿入されたレコードのフィールドを表すオブジェクトが含まれています。 フィールド名にアクセスするには、 <xref:System.Collections.Specialized.OrderedDictionary.Keys%2A> <xref:System.Collections.Specialized.OrderedDictionary>オブジェクトのプロパティを使用します。 同様に、 <xref:System.Collections.Specialized.OrderedDictionary.Values%2A>プロパティを使用してフィールド値にアクセスすることもできます。  
  
> [!NOTE]
>  ショートカットとして、 <xref:System.Collections.Specialized.OrderedDictionary>オブジェクトのインデクサーを使用して、フィールド値に直接アクセスすることもできます。 インデクサーを使用する利点は、フィールド値が直接返されることです。 フィールドの順序に依存するデータソースコントロール ( <xref:System.Web.UI.WebControls.AccessDataSource>など) は、インデックスによってのみフィールド値にアクセスできます。  
  
   
  
## Examples  
 次の例は、 <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>コレクション内の項目を反復処理する方法を示しています。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgsValues#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/CS/formviewinsertedeventargsvaluescs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgsValues#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgsValues/VB/formviewinsertedeventargsvaluesvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormView" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="T:System.Collections.Specialized.OrderedDictionary" />
        <altmember cref="T:System.Collections.DictionaryEntry" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Keys" />
        <altmember cref="P:System.Collections.Specialized.OrderedDictionary.Values" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      </Docs>
    </Member>
  </Members>
</Type>
