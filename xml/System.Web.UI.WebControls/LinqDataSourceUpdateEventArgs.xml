<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSourceUpdateEventArgs.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5ad4de834753cb8cf7c08131b0ca92f63c49de8d7.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ad4de834753cb8cf7c08131b0ca92f63c49de8d7</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Provides data for the <ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.WebControls.LinqDataSource.Updating" /&gt;</ph> イベントのデータを提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object is passed to any event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>オブジェクトは、のいずれかのイベント ハンドラーに渡される、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object to examine the data before the update operation is executed in the data source.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>をデータ ソースの更新操作が実行される前に、データを調べるオブジェクト。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can then validate the data, examine validation exceptions thrown by the data class, or change a value before the update.</source>
          <target state="translated">データを検証、データ クラスによってスローされた検証例外、または更新前に、の値を変更し、ことができます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can also cancel the update operation.</source>
          <target state="translated">また、更新操作を取り消すことができます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> object contains the data that was originally retrieved from the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>オブジェクトには、最初に、データ ソースから取得したデータが含まれています。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> object contains the data that will be saved in the data source during the update operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>オブジェクトには、更新操作中に、データ ソースに保存されるデータが含まれています。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If the object that represents the data source throws a validation exception before updating the data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains an instance of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> class.</source>
          <target state="translated">データ ソースを表すオブジェクトが、データを更新する前に検証例外がスローされた場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>プロパティにはインスタンスが含まれています、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can retrieve all the validation exceptions through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph> property.</source>
          <target state="translated">すべての検証例外を取得することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If no validation exception is thrown, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property contains <ph id="ph2">`null`</ph>.</source>
          <target state="translated">検証例外がスローされない場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>プロパティが含まれます<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If you handle the validation exceptions and do not want the exception to be re-thrown, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">検証の例外を処理して再スローされる例外を作成したくない場合は、設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values from the data source in view state on the Web page, except those whose <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph> attribute is marked as <ph id="ph3">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>いるものを除き、Web ページで状態管理ストアが、元に値をデータ ソースから<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute&gt;</ph>属性マークが付いている<ph id="ph3">`UpdateCheck.Never`</ph>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL automatically checks the integrity of the data before updating the data.</source>
          <target state="translated">LINQ to SQL は、自動的にデータを更新する前に、データの整合性をチェックします。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It does this by comparing the current values in the data source with the original values stored in view state.</source>
          <target state="translated">この機能を使用するには、ビュー ステートに格納されている元の値をデータ ソースの現在の値を比較します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>LINQ to SQL raises an exception if the values in the data source have changed.</source>
          <target state="translated">LINQ to SQL では、データ ソースの値が変更された場合に例外が発生します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>You can perform additional data validation by creating a handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">ハンドラーを作成することで、追加のデータ検証を行うことができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">例からのプロパティを比較する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティを決定するかどうかの値、<ph id="ph3">`Category`</ph>プロパティが変更されました。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">場合は、<ph id="ph1">`CategoryChanged`</ph>内のオブジェクトのプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">使用して検証例外メッセージが表示されて、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>The exception that occurred when validating the data to update.</source>
          <target state="translated">更新するデータの検証時に発生した例外。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class with the specified exception.</source>
          <target state="translated">指定した例外を使用して、<ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the initial values that were retrieved from the data source.</source>
          <target state="translated">データ ソースから取得した初期値が格納された、<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> プロパティで指定された型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the values that will be saved in the data source.</source>
          <target state="translated">データ ソースに保存する値が格納された、<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> プロパティで指定された型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.#ctor(System.Object,System.Object)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>Gets the exception that was thrown while the data was being validated before the update operation.</source>
          <target state="translated">更新操作の前に行われていたデータ検証中にスローされた例外を取得します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The exception, if an error occurred; otherwise, <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">エラーが発生した場合は例外。それ以外の場合は <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>If a validation exception is raised before the update operation is performed, the exception is stored in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">更新操作が実行される前に検証例外が発生する場合、例外は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the exception through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">イベント ハンドラーで、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベントでの例外を取得することができます、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.Exception">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">使用して検証例外メッセージが表示されて、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</source>
          <target state="translated">例外が既に処理済みで、再度スローする必要がないかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the exception was handled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">例外が処理された場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>You can create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to examine validation exceptions that occurred before the update operation.</source>
          <target state="translated">イベント ハンドラーを作成することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>更新操作の前に発生した検証の例外を検査するイベントです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you handle the exception and do not want it to be thrown again, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">例外の処理を再度スローすることは望ましくない場合は、設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the exception will be propagated to the next event handler in the call stack.</source>
          <target state="translated">設定しない場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>例外は、呼び出し履歴内の次のイベント ハンドラーに反映されます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.ExceptionHandled">
          <source>It displays any validation exception messages by using a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph> control.</source>
          <target state="translated">使用して検証例外メッセージが表示されて、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.Label&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Gets the object that contains the values that will be saved in the data source.</source>
          <target state="translated">データ ソースに保存する値が格納されたオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data to save.</source>
          <target state="translated">保存するデータが格納された、<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> プロパティで指定された型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>Create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event and retrieve the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to validate the data.</source>
          <target state="translated">イベント ハンドラーを作成、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベントを取得、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティ、データを検証します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>You can also change the data or cancel the update operation.</source>
          <target state="translated">また、データを変更したり、更新操作をキャンセルできます。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">例からのプロパティを比較する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティを決定するかどうかの値、<ph id="ph3">`Category`</ph>プロパティが変更されました。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">場合は、<ph id="ph1">`CategoryChanged`</ph>内のオブジェクトのプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>Gets the object that contains the values that were originally retrieved from the data source.</source>
          <target state="translated">データ ソースから取得された元の値が格納されたオブジェクトを取得します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>An object of the type specified in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> property that contains the data that was retrieved from the data source.</source>
          <target state="translated">データ ソースから取得したデータが格納された、<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /&gt;</ph> プロパティで指定された型のオブジェクト。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property to check the original values against the current values in the data source and to cancel the update operation or take other action.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>データ ソースの現在の値に対して元の値を確認および更新操作をキャンセルしたり、他の操作を行ったりするプロパティです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property contains values for only the properties that are persisted in view state in the Web page.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> Web ページ ビューに永続化されるプロパティのみが状態のプロパティに値が含まれます。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>A property is persisted under these circumstances:</source>
          <target state="translated">プロパティは、このような状況下で永続化されます。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When it is displayed in a data-bound control.</source>
          <target state="translated">ときにデータ バインド コントロールに表示されます。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>When the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph> attribute is set to <ph id="ph3">`Always`</ph> or <ph id="ph4">`WhenChanged`</ph>.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A?displayProperty=nameWithType&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute?displayProperty=nameWithType&gt;</ph>属性に設定されている<ph id="ph3">`Always`</ph>または<ph id="ph4">`WhenChanged`</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If the <ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph> property is set to <ph id="ph2">`Never`</ph> and the value is not displayed in a data-bound control, the value is not stored in the Web page.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Data.Linq.Mapping.ColumnAttribute.UpdateCheck%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`Never`</ph>と値がデータ バインド コントロールに表示されない場合、値は、Web ページには格納されません。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>In that case, it cannot be assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property.</source>
          <target state="translated">その場合は、割り当てることができないを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>The example shows how to compare properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to determine whether the value in the <ph id="ph3">`Category`</ph> property has changed.</source>
          <target state="translated">例からのプロパティを比較する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティを決定するかどうかの値、<ph id="ph3">`Category`</ph>プロパティが変更されました。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject">
          <source>If so, the <ph id="ph1">`CategoryChanged`</ph> property of the object in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">場合は、<ph id="ph1">`CategoryChanged`</ph>内のオブジェクトのプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティに設定されている<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>