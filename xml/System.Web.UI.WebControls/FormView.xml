<Type Name="FormView" FullName="System.Web.UI.WebControls.FormView">
  <Metadata><Meta Name="ms.openlocfilehash" Value="87c8d50032e81f46a1881910bfdfe2405d8512e2" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55308722" /></Metadata><TypeSignature Language="C#" Value="public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FormView extends System.Web.UI.WebControls.CompositeDataBoundControl implements class System.Web.UI.IDataItemContainer, class System.Web.UI.INamingContainer, class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IDataBoundControl, class System.Web.UI.WebControls.IDataBoundItemControl, class System.Web.UI.WebControls.IPostBackContainer" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FormView" />
  <TypeSignature Language="VB.NET" Value="Public Class FormView&#xA;Inherits CompositeDataBoundControl&#xA;Implements IDataBoundItemControl, IDataItemContainer, IPostBackContainer, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class FormView : System::Web::UI::WebControls::CompositeDataBoundControl, System::Web::UI::IDataItemContainer, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IDataBoundItemControl, System::Web::UI::WebControls::IPostBackContainer" />
  <TypeSignature Language="F#" Value="type FormView = class&#xA;    inherit CompositeDataBoundControl&#xA;    interface IDataItemContainer&#xA;    interface INamingContainer&#xA;    interface IPostBackEventHandler&#xA;    interface IPostBackContainer&#xA;    interface IDataBoundItemControl&#xA;    interface IDataBoundControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeDataBoundControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IDataItemContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.INamingContainer</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IDataBoundItemControl</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IPostBackContainer</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("PageIndexChanging")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("SelectedValue")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Web.UI.DataKeyProperty("DataKey")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザー定義のテンプレートを使用して、データ ソースから取得した単一レコードの値を表示します。 <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを使用して、レコードを編集、削除、および挿入することができます。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [テンプレート](#templates)  
  
-   [データへのバインド](#binding_to_data)  
  
-   [データ操作](#data_operations)  
  
-   [ユーザー インターフェイスのカスタマイズ](#customizing_the_user_interface)  
  
-   [イベント](#events)  
  
-   [ユーザー補助](#accessibility)  
  
-   [CSS スタイルを適用します。](#applying_styles)  
  
-   [宣言構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 <xref:System.Web.UI.WebControls.FormView>コントロールを使用すると、データ ソースから 1 つのレコードを表示します。 似ています、<xref:System.Web.UI.WebControls.DetailsView>コントロールを除いて、行のフィールドではなく、ユーザー定義のテンプレートが表示されます。 独自のテンプレートを作成、データを表示する方法を制御するのには柔軟性が提供されます。 <xref:System.Web.UI.WebControls.FormView>コントロールは、次の機能をサポートしています。  
  
-   などのデータ ソース コントロールにバインド<xref:System.Web.UI.WebControls.SqlDataSource>と<xref:System.Web.UI.WebControls.ObjectDataSource>します。  
  
-   組み込みの挿入機能します。  
  
-   組み込みの更新と機能を削除しています。  
  
-   組み込みのページング機能。  
  
-   プログラムによるアクセスを<xref:System.Web.UI.WebControls.FormView>プロパティを動的に設定、イベントを処理し、オブジェクト モデルです。  
  
-   ユーザー定義のテンプレート、テーマ、およびスタイルを使用したカスタマイズ可能な外観です。  
  
<a name="templates"></a>   
## <a name="templates"></a>テンプレート  
 <xref:System.Web.UI.WebControls.FormView>コンテンツを表示するコントロールをコントロールのさまざまな部分のテンプレートを作成する必要があります。 ほとんどのテンプレートは、省略可能です。ただし、コントロールが構成されているモード用のテンプレートを作成する必要があります。 たとえば、<xref:System.Web.UI.WebControls.FormView>レコードの挿入をサポートするコントロールの挿入項目テンプレートが定義されている必要があります。 次の表には、作成できるさまざまなテンプレートが一覧表示します。  
  
|テンプレートの種類|説明|  
|-------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|データのコンテンツを定義します。 行の場合に、<xref:System.Web.UI.WebControls.FormView>コントロールが編集モード。 通常、このテンプレートには、入力コントロールとするユーザーが既存のレコードの編集に使用できるコマンド ボタンが含まれます。|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>|空のデータ行には、ときに表示されるは、コンテンツを定義、<xref:System.Web.UI.WebControls.FormView>コントロールが任意のレコードがないデータ ソースにバインドされています。 通常、このテンプレートには、データ ソースにレコードが含まれていないことをユーザーにアラートを生成するコンテンツが含まれます。|  
|<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>|フッター行のコンテンツを定義します。 通常、このテンプレートには、フッター行に表示するには、その他のコンテンツが含まれます。 **注:** 代わりは、フッター行に設定して表示されるテキストを単純に指定できます、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>プロパティ。|  
|<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>|ヘッダー行のコンテンツを定義します。 通常、このテンプレートには、ヘッダー行に表示するには、その他のコンテンツが含まれます。 **注:** 代わりに、設定して、ヘッダー行に表示するテキストを単に指定できます、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>プロパティ。|  
|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|データのコンテンツを定義します。 行の場合に、<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用モードです。 通常、このテンプレートには、既存のレコードの値を表示するコンテンツが含まれます。|  
|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|データのコンテンツを定義します。 行の場合に、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モード。 通常、このテンプレートには、入力コントロールと、ユーザーが新しいレコードを追加するコマンド ボタンが含まれます。|  
|<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>|ページング機能が有効になっているときに表示されるページ行のコンテンツを定義します (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)。 通常、このテンプレートをユーザーが別のレコードに移動できるコントロールが含まれます。 **注:**<xref:System.Web.UI.WebControls.FormView>コントロールが組み込みのページャー行ユーザー インターフェイス (UI)。 独自のカスタムのページ行を作成する場合にのみ、ページ テンプレートを作成する必要があります。|  
  
 項目テンプレートでフィールドの値を表示するには、データ バインディング式を使用します。 データ バインド式の詳細については、次を参照してください。[データ バインド式の構文](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)します。  
  
 項目テンプレートの編集と挿入項目テンプレートの入力コントロールは、双方向のバインド式を使用してデータ ソースのフィールドにバインドできます。 これにより、<xref:System.Web.UI.WebControls.FormView>コントロールを自動的に更新プログラムの入力コントロールの値を抽出または操作を挿入します。 双方向のバインド式は、入力コントロールを使用する元のフィールド値を自動的に表示する項目テンプレートの編集でも。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)します。  
  
<a name="binding_to_data"></a>   
## <a name="binding-to-data"></a>データへのバインド  
 <xref:System.Web.UI.WebControls.FormView>コントロールをデータ ソース コントロールにバインドできます (など<xref:System.Web.UI.WebControls.SqlDataSource>、 <xref:System.Web.UI.WebControls.ObjectDataSource>、または<xref:System.Web.UI.WebControls.AccessDataSource>) または実装する任意のデータ ソースのコレクションを<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイスなど<xref:System.Data.DataView?displayProperty=nameWithType>、 <xref:System.Collections.ArrayList?displayProperty=nameWithType>、 <xref:System.Collections.Generic.List%601?displayProperty=nameWithType>、または他のコレクション型。 次のメソッドのいずれかを使用してバインド、<xref:System.Web.UI.WebControls.FormView>コントロールを適切なデータ ソースの種類。  
  
-   データ ソース コントロールにバインドするには、設定、<xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>のプロパティ、<xref:System.Web.UI.WebControls.FormView>コントロールを<xref:System.Web.UI.Control.ID%2A>データ ソース コントロールの値。 <xref:System.Web.UI.WebControls.FormView>コントロールは自動的に指定されたデータ ソース コントロールにバインドし、活用できるため、データ ソース コントロールの機能を挿入、更新、削除、およびページング機能を実行します。 これは、データにバインドする推奨される方法です。  
  
-   実装するデータ ソースにバインドする、<xref:System.Collections.IEnumerable?displayProperty=nameWithType>インターフェイスをプログラムで設定、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>のプロパティ、<xref:System.Web.UI.WebControls.FormView>データ ソースへの制御を呼び出して、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>メソッド。 このメソッドを使用する場合、<xref:System.Web.UI.WebControls.FormView>コントロールでは組み込みの挿入、更新、削除、およびページング機能を提供しません。 適切なイベントを使用してこの機能を提供する必要があります。  
  
 データ バインディングの詳細については、次を参照してください。 [ASP.NET データ アクセス コンテンツ マップ](https://msdn.microsoft.com/library/f9219396-a0fa-481f-894d-e3d9c67d64f2)します。  
  
> [!NOTE]
>  このコントロールは、悪意のあるクライアント スクリプトを含めることがユーザー入力を表示に使用できます。 スクリプトの実行可能ファイル、SQL ステートメント、またはその他のコード、アプリケーションで表示する前に、クライアントから送信されるすべての情報を確認します。 可能であれば、値が HTML エンコード前に、このコントロールに表示されているを強くお勧めします。 ASP.NET では、入力要求の検証機能があり、ユーザー入力でのブロック スクリプトと HTML を提供します。 検証サーバー コントロールは、ユーザー入力の評価にも提供されます。 詳細については、次を参照してください。[検証コントロールの概要](https://docs.microsoft.com/previous-versions/dotnet/netframework-3.0/2e4hd649(v=vs.85))します。  
  
<a name="data_operations"></a>   
## <a name="data-operations"></a>データ操作  
 <xref:System.Web.UI.WebControls.FormView>コントロールは、更新、削除、挿入、およびコントロール内の項目をページにユーザーに許可する多くの組み込み機能を提供します。 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールがデータ ソース コントロールにバインドされている、<xref:System.Web.UI.WebControls.FormView>コントロールは、データ ソース コントロールの機能を活用し、自動更新、削除、挿入、およびページング機能を提供します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView>コントロールは、update、delete、insert、およびその他の種類のデータ ソースとページング操作のサポートを提供できます。 ただし、これらの操作の実装で適切なイベント ハンドラーを提供する必要があります。  
  
 <xref:System.Web.UI.WebControls.FormView>コントロール テンプレートを使用して、これは、更新、削除、または挿入操作を実行するコマンド ボタンを自動的に生成する方法を用意されていません。 これらのコマンド ボタンは、適切なテンプレートに手動で含める必要があります。 <xref:System.Web.UI.WebControls.FormView>コントロールによって認識される特定のボタンを持つ、`CommandName`プロパティが特定の値に設定します。 次の表のコマンドは、ボタン、<xref:System.Web.UI.WebControls.FormView>コントロールによって認識します。  
  
|ボタン|CommandName 値|説明|  
|------------|-----------------------|-----------------|  
|キャンセル|[キャンセル]|操作をキャンセルして、ユーザーが入力した値を破棄する更新操作または挿入に使用されます。 <xref:System.Web.UI.WebControls.FormView>で指定されたモードを返しますの制御、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>プロパティ。|  
|削除|"削除"|削除操作でデータ ソースから表示されているレコードを削除するために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemDeleting>と<xref:System.Web.UI.WebControls.FormView.ItemDeleted>イベント。|  
|編集|[編集]|更新操作で配置するために使用、<xref:System.Web.UI.WebControls.FormView>編集モードで制御します。 指定されたコンテンツ、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>データ行のプロパティが表示されます。|  
|挿入|"Insert"|挿入操作で、ユーザーが指定した値を使用してデータ ソースに新しいレコードを挿入しようとするために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemInserting>と<xref:System.Web.UI.WebControls.FormView.ItemInserted>イベント。|  
|新規作成|"New"|挿入操作で配置するために使用、<xref:System.Web.UI.WebControls.FormView>挿入モードで制御します。 指定されたコンテンツ、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>データ行のプロパティが表示されます。|  
|ページ|"Page"|ページングを実行するページ行のボタンを表すには、ページング操作で使用します。 ページング操作を指定するには、設定、 `CommandArgument` "Next"、"Prev"、"First"、"Last"、または移動先ページのインデックスをボタンのプロパティ。 発生させる、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>と<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>イベント。 **注:** 通常、この種類のボタンは、ポケットベル テンプレートでのみ使用されます。|  
|更新|[更新]|更新操作で、ユーザーが指定した値を持つデータ ソースに表示されているレコードを更新しようとするために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemUpdating>と<xref:System.Web.UI.WebControls.FormView.ItemUpdated>イベント。|  
  
 (すぐに表示されているレコードを削除します) を削除 ボタンとは異なり、編集または新規のボタンがクリックされたときに、<xref:System.Web.UI.WebControls.FormView>コントロールが編集または挿入モードをそれぞれに入ります。 コンテンツを編集モードに含まれている、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>現在のデータ項目のプロパティが表示されます。 通常、項目テンプレートの編集は、[編集] ボタンは [キャンセル] ボタンと更新プログラムに置き換えられますされるように定義されます。 入力フィールドのデータ型の適切なコントロール (など、<xref:System.Web.UI.WebControls.TextBox>または<xref:System.Web.UI.WebControls.CheckBox>コントロール) は、フィールドの値を変更するユーザーにでも通常は表示されます。 キャンセル ボタンをクリックすると変更を破棄中に、データ ソースのレコードを更新の更新 ボタンをクリックします。  
  
 含まれるコンテンツでは、同様に、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>コントロールが挿入モードのときに、データ項目のプロパティが表示されます。 項目を挿入するテンプレートは通常、新しいボタンが、挿入し、[キャンセル] ボタン、置き換えし、空の入力コントロールが新しいレコードの値を入力するユーザーの表示になるように定義されます。 [キャンセル] ボタンをクリックすると変更を破棄中に、データ ソースにレコードが挿入 [挿入] ボタンをクリックします。  
  
 <xref:System.Web.UI.WebControls.FormView>コントロールは、ユーザーがデータ ソース内の他のレコードに移動するページング機能を提供します。 ページ行が表示されます、有効にすると、<xref:System.Web.UI.WebControls.FormView>ページ ナビゲーション コントロールを格納しているコントロール。 ページングを有効にするには設定、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティを`true`します。 含まれるオブジェクトのプロパティを設定してページ行をカスタマイズすることができます、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>と<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>プロパティ。 使用して、独自の UI を作成する、組み込みのページャー行 UI を使用する代わりに、<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>プロパティ。  
  
<a name="customizing_the_user_interface"></a>   
## <a name="customizing-the-user-interface"></a>ユーザー インターフェイスのカスタマイズ  
 外観をカスタマイズすることができます、<xref:System.Web.UI.WebControls.FormView>コントロールのさまざまな部分のスタイル プロパティを設定して制御します。 次の表は、異なるスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>|ときに行のデータのスタイル設定、<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードにします。|  
|<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>|表示される空のデータ行のスタイルの設定、<xref:System.Web.UI.WebControls.FormView>データ ソースにレコードが含まれていない場合を制御します。|  
|<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>|フッター行のスタイルの設定、<xref:System.Web.UI.WebControls.FormView>コントロール。|  
|<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>|ヘッダー行のスタイルの設定、<xref:System.Web.UI.WebControls.FormView>コントロール。|  
|<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>|ときに行のデータのスタイル設定、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードにします。|  
|<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>|表示されるページ行のスタイルの設定、<xref:System.Web.UI.WebControls.FormView>ページング機能が有効になっているかを制御します。|  
|<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>|ときに行のデータのスタイル設定、<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用モードにします。|  
  
<a name="events"></a>   
## <a name="events"></a>イベント  
 <xref:System.Web.UI.WebControls.FormView>コントロールには、プログラミングに使用できるいくつかのイベントが用意されています。 これにより、イベントが発生するたびに、カスタムのルーチンを実行することができます。 次の表に、によってサポートされるイベント、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
|event|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ItemCommand>|<xref:System.Web.UI.WebControls.FormView> コントロール内のボタンをクリックすると発生します。 このイベントは、コントロールにボタンがクリックされたときにタスクを実行する多くの場合、使用します。|  
|<xref:System.Web.UI.WebControls.FormView.ItemCreated>|発生するすべて<xref:System.Web.UI.WebControls.FormViewRow>にオブジェクトを作成、<xref:System.Web.UI.WebControls.FormView>コントロール。 このイベントが表示される前に、レコードの値を変更するよく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleted>|[削除] ボタンのときに発生します (ボタンをその`CommandName`プロパティが"Delete"に設定) した後をクリックして、<xref:System.Web.UI.WebControls.FormView>コントロールがデータ ソースからレコードを削除します。 このイベントは、削除操作の結果を確認するよく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemDeleting>|発生する前に Delete ボタンがクリックされたとき、<xref:System.Web.UI.WebControls.FormView>コントロールがデータ ソースからレコードを削除します。 このイベントは削除操作をキャンセルによく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserted>|Insert ボタンのときに発生します (ボタンをその`CommandName`プロパティが"Insert"に設定) した後をクリックして、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを挿入します。 このイベントは、挿入操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemInserting>|前に、[挿入] ボタンがクリックされたときに発生します、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを挿入します。 このイベントは、挿入操作をキャンセルするよく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdated>|Update ボタンのときに発生します (ボタンをその`CommandName`プロパティが「更新」に設定) した後をクリックして、<xref:System.Web.UI.WebControls.FormView>コントロールは、行を更新します。 このイベントは、更新操作の結果の確認によく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ItemUpdating>|前に更新 ボタンがクリックされたときに発生します、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを更新します。 このイベントは、更新操作をキャンセルするよく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|後に発生、<xref:System.Web.UI.WebControls.FormView>コントロールがモードを変更 (編集、挿入、または読み取り専用モードの場合) にします。 このイベントは、タスクを実行する多くの場合、使用時に、<xref:System.Web.UI.WebControls.FormView>コントロールがモードを変更します。|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|前に発生、<xref:System.Web.UI.WebControls.FormView>コントロールがモードを変更 (編集、挿入、または読み取り専用モードの場合) にします。 このイベントは、モードの変更をキャンセルするよく使用されます。|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理した後に発生します。 このイベントは通常、ユーザーがコントロールで別のレコードに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理する前に発生します。 このイベントは、ページング操作をキャンセルするよく使用されます。|  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください[Visual Studio と ASP.NET のユーザー補助機能](https://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやユーザー補助機能](https://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)。  
  
<a name="applying_styles"></a>   
## <a name="applying-css-styles"></a>CSS スタイルを適用します。  
 <xref:System.Web.UI.WebControls.FormView>コントロールでは、マークアップで CSS スタイル規則を指定することができます。 外観をカスタマイズするテンプレートを使用する場合、<xref:System.Web.UI.WebControls.FormView>コントロール、テンプレートのマークアップで CSS スタイルを指定することができます。 その場合は、他の外側のテーブルを必要はありません。 テーブルが設定して表示されないように、<xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>プロパティを`false`します。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言構文  
  
```  
<asp:FormView  
    AccessKey="string"  
    AllowPaging="True|False"  
    BackColor="color name|#dddddd"  
    BackImageUrl="uri"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    Caption="string"  
    CaptionAlign="NotSet|Top|Bottom|Left|Right"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DataKeyNames="string"  
    DataMember="string"  
    DataSource="string"  
    DataSourceID="string"  
    DefaultMode="ReadOnly|Edit|Insert"  
    EmptyDataText="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    FooterText="string"  
    ForeColor="color name|#dddddd"  
    GridLines="None|Horizontal|Vertical|Both"  
    HeaderText="string"  
    Height="size"  
    HorizontalAlign="NotSet|Left|Center|Right|Justify"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDataBound="DataBound event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnItemCommand="ItemCommand event handler"  
    OnItemCreated="ItemCreated event handler"  
    OnItemDeleted="ItemDeleted event handler"  
    OnItemDeleting="ItemDeleting event handler"  
    OnItemInserted="ItemInserted event handler"  
    OnItemInserting="ItemInserting event handler"  
    OnItemUpdated="ItemUpdated event handler"  
    OnItemUpdating="ItemUpdating event handler"  
    OnLoad="Load event handler"  
    OnModeChanged="ModeChanged event handler"  
    OnModeChanging="ModeChanging event handler"  
    OnPageIndexChanged="PageIndexChanged event handler"  
    OnPageIndexChanging="PageIndexChanging event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PageIndex="integer"  
    PagerSettings-FirstPageImageUrl="uri"  
    PagerSettings-FirstPageText="string"  
    PagerSettings-LastPageImageUrl="uri"  
    PagerSettings-LastPageText="string"  
    PagerSettings-Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
        NumericFirstLast"  
    PagerSettings-NextPageImageUrl="uri"  
    PagerSettings-NextPageText="string"  
    PagerSettings-PageButtonCount="integer"  
    PagerSettings-Position="Bottom|Top|TopAndBottom"  
    PagerSettings-PreviousPageImageUrl="uri"  
    PagerSettings-PreviousPageText="string"  
    PagerSettings-Visible="True|False"  
    RenderTable="True|False"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <EditItemTemplate>  
            <!-- child controls -->  
        </EditItemTemplate>  
        <EditRowStyle />  
        <EmptyDataRowStyle />  
        <EmptyDataTemplate>  
            <!-- child controls -->  
        </EmptyDataTemplate>  
        <FooterStyle />  
        <FooterTemplate>  
            <!-- child controls -->  
        </FooterTemplate>  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <InsertItemTemplate>  
            <!-- child controls -->  
        </InsertItemTemplate>  
        <InsertRowStyle />  
        <ItemTemplate>  
            <!-- child controls -->  
        </ItemTemplate>  
        <PagerSettings  
            FirstPageImageUrl="uri"  
            FirstPageText="string"  
            LastPageImageUrl="uri"  
            LastPageText="string"  
            Mode="NextPrevious|Numeric|NextPreviousFirstLast|  
                NumericFirstLast"  
            NextPageImageUrl="uri"  
            NextPageText="string"  
            OnPropertyChanged="PropertyChanged event handler"  
            PageButtonCount="integer"  
            Position="Bottom|Top|TopAndBottom"  
            PreviousPageImageUrl="uri"  
            PreviousPageText="string"  
            Visible="True|False"  
        />  
        <PagerStyle />  
        <PagerTemplate>  
            <!-- child controls -->  
        </PagerTemplate>  
        <RowStyle />  
</asp:FormView>  
```  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView>から値を表示するコントロールを<xref:System.Web.UI.WebControls.SqlDataSource>コントロール。  
  
 [!code-aspx-csharp[FormViewSimple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSimple/CS/formviewsimplecs.aspx#1)]
 [!code-aspx-vb[FormViewSimple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSimple/VB/formviewsimplevb.aspx#1)]  
  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView>既存のレコードを編集するコントロール。  
  
> [!IMPORTANT]
>  この例ではコントロールには、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスがあります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[FormView#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormView/CS/formvieweditcs.aspx#1)]
 [!code-aspx-vb[FormView#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormView/VB/formvieweditvb.aspx#1)]  
  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView>新しいレコードを挿入するコントロール。  
  
> [!IMPORTANT]
>  この例ではコントロールには、潜在的なセキュリティ上の脅威がユーザー入力を受け付けるテキスト ボックスがあります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
    <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
    <altmember cref="T:System.Web.UI.WebControls.AccessDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.SqlDataSource" />
    <altmember cref="T:System.Web.UI.WebControls.ObjectDataSource" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
    <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
    <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FormView ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FormView();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.FormView>クラス。 動的に追加する、<xref:System.Web.UI.WebControls.FormView>ページにコントロールを作成する新しい<xref:System.Web.UI.WebControls.FormView>オブジェクト、そのプロパティを設定し、追加するに、<xref:System.Web.UI.Control.Controls%2A?displayProperty=nameWithType>コンテナーのコレクションを制御するよう<xref:System.Web.UI.WebControls.PlaceHolder>します。  
  
   
  
## Examples  
 次の例では、動的に追加する方法、<xref:System.Web.UI.WebControls.FormView>ページにコントロール。  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.Controls" />
        <altmember cref="T:System.Web.UI.WebControls.PlaceHolder" />
      </Docs>
    </Member>
    <Member MemberName="AllowPaging">
      <MemberSignature Language="C#" Value="public virtual bool AllowPaging { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowPaging" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowPaging As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowPaging { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowPaging : bool with get, set" Usage="System.Web.UI.WebControls.FormView.AllowPaging" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページング機能が有効かどうかを示す値を取得または設定します。</summary>
        <value>ページング機能を有効にする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>コントロールが組み込みページング機能では、ユーザーがデータ ソース内の別のレコードに移動できるようにします。 ページング機能をサポートする任意のデータ ソース オブジェクトで使用できます、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスまたはページング機能をサポートするデータ ソース。  
  
 ページング機能を有効にするには設定、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティを`true`します。 使用して、基になるデータ ソース内の項目の合計数を決定することができます、<xref:System.Web.UI.WebControls.FormView.PageCount%2A>プロパティ。 現在表示されている項目のインデックスを調べるには、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ。  
  
 ページャー行と呼ばれる追加の行が自動的に表示でページングが有効にすると、<xref:System.Web.UI.WebControls.FormView>コントロール。 ページ行は、ページ ナビゲーション コントロールを含み、上部、下部、または上部とコントロールの下部に表示されることができます。 ページ行が、4 つの組み込みページャーを表示モード。 次の表では、4 つのモードについて説明します。  
  
|モード|説明|  
|----------|-----------------|  
|`PagerButton.NextPrevious`|戻るボタンと [次へ] ボタンで構成されるページ編集コントロールのセット。|  
|`PagerButton.NextPreviousFirstLast`|次に、最初と最後のボタンの前で構成されるページ編集コントロールの A が設定されます。|  
|`PagerButton.Numeric`|直接ページにアクセスする番号付きリンク ボタンで構成されるページ編集コントロールのセット。 これは、既定のモードです。|  
|`PagerButton.NumericFirstLast`|番号付き、先頭と末尾のリンク ボタンで構成されるページ編集コントロールのセット。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView>コントロールはページ行を自動的に非データ ソースには、2 つ未満のレコードが含まれている場合。  
  
 使用して、ページャー (ポケットベル表示モードで、時刻、および、ページャー コントロールのテキスト ラベルに表示するページのリンクの数) などの設定を管理することができます、<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>プロパティ。 (その背景色とフォントの色を含む) のページ行の外観を制御するには、使用、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>プロパティ。 <xref:System.Web.UI.WebControls.FormView>コントロールでは、ページ行用のカスタム テンプレートを定義することもできます。 カスタムのページャー行テンプレートを作成する方法の詳細については、次を参照してください。<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>します。  
  
 <xref:System.Web.UI.WebControls.FormView>コントロールがページングが発生したときに、カスタム アクションを実行するのに使用できるいくつかのイベントを提供します。 次の表には、使用可能なイベントが一覧表示します。  
  
|event|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理した後に発生します。 このイベントは通常、ユーザーがコントロールで別のレコードに移動した後にタスクを実行する必要がある場合に使用します。|  
|<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>|ページャー ボタンの 1 つがクリックされた場合に、<xref:System.Web.UI.WebControls.FormView> コントロールがページング操作を処理する前に発生します。 このイベントは、ページング操作をキャンセルするよく使用されます。|  
  
> [!NOTE]
>  変更すると、これらのイベントは発生しませんが、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ プログラムを使用します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>でページング機能を有効にするプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="BackImageUrl">
      <MemberSignature Language="C#" Value="public virtual string BackImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BackImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property BackImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ BackImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.BackImageUrl : string with get, set" Usage="System.Web.UI.WebControls.FormView.BackImageUrl" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの背景に表示するイメージの URL を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの背景に表示するイメージの URL。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>の背景に表示するイメージの URL を指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
> [!NOTE]
>  指定したイメージがより小さい場合、<xref:System.Web.UI.WebControls.FormView>背景を埋めるためにコントロール、イメージを並べて表示します。 イメージがコントロールよりも大きい場合は、画像はトリミングされます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>のバック グラウンドでカスタム イメージを表示するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 [!code-aspx-csharp[FormViewBackImageUrl#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewBackImageUrl/CS/formviewbackimageurlcs.aspx#1)]
 [!code-aspx-vb[FormViewBackImageUrl#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewBackImageUrl/VB/formviewbackimageurlvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="BottomPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow BottomPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property BottomPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ BottomPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.BottomPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.BottomPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの下部に表示されるページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの下部のページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングが有効な場合 (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.FormView>コントロール。 ページの行には、ユーザーが、他のレコードに移動できるようにし、上部、下部、または上部との両方で、コントロールの下部に表示できるコントロールが含まれています。 使用して、<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>プロパティをプログラムでアクセス、<xref:System.Web.UI.WebControls.FormViewRow>下部のページ行を表すオブジェクトを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>プロパティは後でのみ使用可能な<xref:System.Web.UI.WebControls.FormView>コントロールは、下部のページ行を作成、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 このプロパティは通常、例ではカスタム コンテンツを追加するときに、下部のページ行をプログラムで操作する必要がある場合に使用します。 変更しても、<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>プロパティは、後に実行する必要があります、<xref:System.Web.UI.WebControls.FormViewRow>作成以外の場合、下部のページ行を表すオブジェクトが表示された、<xref:System.Web.UI.WebControls.FormView>コントロールには、すべての変更が上書きされます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>の下部に表示されるページ行にアクセスするプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。 他のコンテンツ ページの行が更新されます。  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="Caption">
      <MemberSignature Language="C#" Value="public virtual string Caption { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Caption" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Caption" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property Caption As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ Caption { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Caption : string with get, set" Usage="System.Web.UI.WebControls.FormView.Caption" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素に表示するテキストを取得または設定します。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素に表示されるテキストを表す文字列。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.Caption%2A>プロパティの HTML キャプション要素に表示するテキストを指定する、<xref:System.Web.UI.WebControls.FormView>コントロール。 指定したテキストは、支援技術デバイスのコントロールをよりアクセスできるようにするために使用するテーブルの説明を提供します。  
  
 その他のユーザー補助のサポート、<xref:System.Web.UI.WebControls.FormView>によってコントロールが提供される、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>プロパティの HTML キャプション要素の配置を指定する、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 このプロパティは、の値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.Caption%2A>でレンダリングされる HTML キャプション要素のテキストを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      </Docs>
    </Member>
    <Member MemberName="CaptionAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.TableCaptionAlign CaptionAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CaptionAlign As TableCaptionAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::TableCaptionAlign CaptionAlign { System::Web::UI::WebControls::TableCaptionAlign get(); void set(System::Web::UI::WebControls::TableCaptionAlign value); };" />
      <MemberSignature Language="F#" Value="member this.CaptionAlign : System.Web.UI.WebControls.TableCaptionAlign with get, set" Usage="System.Web.UI.WebControls.FormView.CaptionAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableCaptionAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの HTML キャプション要素の水平位置または垂直位置を取得または設定します。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 値のいずれか。 既定値は、<see langword="TableCaptionAlign.NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>プロパティの HTML キャプション要素の水平方向または垂直方向の位置を指定する、<xref:System.Web.UI.WebControls.FormView>コントロール。 このプロパティは、補助技術デバイスのユーザーにとって、より使いやすいコントロールを実現するための手段として用意されています。  
  
 このプロパティを設定のいずれかを使用して、<xref:System.Web.UI.WebControls.TableCaptionAlign>列挙値。 次の表では、使用可能な値を示します。  
  
|[値]|説明|  
|-----------|-----------------|  
|`TableCaptionAlign.Bottom`|キャプション要素は、テーブルの下部に揃えて配置されます。|  
|`TableCaptionAlign.Left`|キャプション要素は、テーブルの左側に揃えて配置されます。|  
|`TableCaptionAlign.NotSet`|キャプション要素の配置は設定されていません。|  
|`TableCaptionAlign.Right`|キャプション要素は、テーブルの右側に揃えて配置されます。|  
|`TableCaptionAlign.Top`|キャプション要素は、テーブルの上部に揃えて配置されます。|  
  
> [!NOTE]
>  このプロパティに設定しているときに`TableCaptionAlign.NotSet`ブラウザーの既定値が使用します。  
  
 その他のユーザー補助のサポート、<xref:System.Web.UI.WebControls.FormView>によってコントロールが提供される、<xref:System.Web.UI.WebControls.FormView.Caption%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.FormView.Caption%2A>プロパティの HTML キャプション要素に表示するテキストを指定する、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
   
  
## Examples  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> HTML が内の要素をキャプションを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールの左側にあるコントロールをレンダリングする必要があります。  
  
 [!code-aspx-csharp[FormViewCaption#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCaption/CS/formviewcaptioncs.aspx#1)]
 [!code-aspx-vb[FormViewCaption#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCaption/VB/formviewcaptionvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が <see cref="T:System.Web.UI.WebControls.TableCaptionAlign" /> 列挙値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.TableCaptionAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Caption" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellPadding : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellPadding" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの内容とセルの境界線との間隔を取得または設定します。</summary>
        <value>セルの内容とセルの境界線の間の間隔 (ピクセル単位)。 既定値は -1 です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>プロパティ セルの内容とセルの境界線の間の間隔を制御します。 指定されたパディングの量は、セルの 4 辺すべてに追加されます。  
  
 同じ列のすべてのセルを<xref:System.Web.UI.WebControls.FormView>コントロールを持つ同じ幅。 余白の量は最も広いセルに適用され、列の他のすべてのセルはセルの幅に合わせて調整されます。 同様に、同じ行のすべてのセルには、同じ高さがあります。 余白の量は、行の行内のセルに適用され、行の他のすべてのセルはセルの高さに調整されます。 個々 のセルのサイズを指定することはできません。  
  
 セルの間隔を調整するのには、使用、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>プロパティ。  
  
> [!NOTE]
>  このプロパティが設定されていない場合は、ブラウザーの既定値が使用されます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>プロパティのセルの内容とセルの境界線の間の間隔を指定します。  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.CellSpacing : int with get, set" Usage="System.Web.UI.WebControls.FormView.CellSpacing" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル間の間隔を取得または設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>プロパティ内の隣接するセル間の間隔を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 この間隔は、垂直方向および水平方向の両方に適用されます。 セルの間隔は、コントロール全体の統一されています。 行または列の個別のセルの間隔を指定することはできません。  
  
> [!NOTE]
>  このプロパティを 0 より大きい値に設定し、設定すると、<xref:System.Web.UI.WebControls.FormView.GridLines%2A>プロパティ セルの境界線が表示される値にギャップは隣接するセルの境界線間に表示されます。 このような状況で、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>プロパティは、この時間差のサイズを制御します。  
  
 セルの内容とセルの境界線の間の間隔を調整するを使用して、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>の隣接するセル間の間隔を指定するプロパティ。  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="ChangeMode">
      <MemberSignature Language="C#" Value="public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void ChangeMode(valuetype System.Web.UI.WebControls.FormViewMode newMode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChangeMode (newMode As FormViewMode)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChangeMode(System::Web::UI::WebControls::FormViewMode newMode);" />
      <MemberSignature Language="F#" Value="member this.ChangeMode : System.Web.UI.WebControls.FormViewMode -&gt; unit" Usage="formView.ChangeMode newMode" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newMode" Type="System.Web.UI.WebControls.FormViewMode" />
      </Parameters>
      <Docs>
        <param name="newMode"><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 列挙値のいずれか。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを指定したデータ入力モードに切り替えます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>をプログラムで切り替える方法、<xref:System.Web.UI.WebControls.FormView>編集、挿入、および読み取り専用モード間の制御。 このメソッドは更新も、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティを指定したモード。 次の表では、さまざまなモード値を示します。  
  
|モード|説明|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードは、レコードの値を更新するユーザーを許可します。|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードは、データ ソースに新しいレコードを追加するユーザーを許可します。|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>コントロールが通常の表示モードは、読み取り専用モードです。|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ModeChanged>と<xref:System.Web.UI.WebControls.FormView.ModeChanging>イベントは、このメソッドが呼び出されたときに発生しません。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>を返すメソッドを<xref:System.Web.UI.WebControls.FormView>コントロール、ユーザーが別のレコードに移動するたびに読み取り専用モードにします。  
  
 [!code-aspx-csharp[FormViewChangeMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewChangeMode/CS/formviewchangemodecs.aspx#1)]
 [!code-aspx-vb[FormViewChangeMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewChangeMode/VB/formviewchangemodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance int32 CreateChildControls(class System.Collections.IEnumerable dataSource, bool dataBinding) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateChildControls (dataSource As IEnumerable, dataBinding As Boolean) As Integer" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override int CreateChildControls(System::Collections::IEnumerable ^ dataSource, bool dataBinding);" />
      <MemberSignature Language="F#" Value="override this.CreateChildControls : System.Collections.IEnumerable * bool -&gt; int" Usage="formView.CreateChildControls (dataSource, dataBinding)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataSource" Type="System.Collections.IEnumerable" />
        <Parameter Name="dataBinding" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataSource">コントロール階層の作成に使用するデータ ソースを表す <see cref="T:System.Collections.IEnumerable" />。</param>
        <param name="dataBinding">コントロール階層が直接データ ソースから作成されることを示す場合は <see langword="true" />。コントロール階層がビューステートから作成されることを示す場合は <see langword="false" />。</param>
        <summary>データ ソースを指定して、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの表示に使用するコントロール階層を作成します。</summary>
        <returns>データ ソースから作成される項目の数。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateChildControls%28System.Collections.IEnumerable%2CSystem.Boolean%29>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールのコントロール階層を作成する、<xref:System.Web.UI.WebControls.FormView>コントロール。 ときに、`dataBinding`パラメーターが`true`、コントロール階層を作成する前に、データ バインディングを実行します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.DataSourceView" /> コントロールのバインド先である <see cref="T:System.Web.UI.IDataSource" /> の <see cref="T:System.Web.UI.WebControls.FormView" /> が <see langword="null" /> です。</exception>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、コントロール階層を作成するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
        <altmember cref="M:System.Web.UI.Control.CreateChildControls" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberSignature Language="F#" Value="override this.CreateControlStyle : unit -&gt; System.Web.UI.WebControls.Style" Usage="formView.CreateControlStyle " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの既定のテーブル スタイル オブジェクトを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Style" /> コントロールの既定のテーブル スタイルを格納している <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateControlStyle%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールの既定のテーブル スタイル オブジェクトを作成します。 既定のスタイルを設定するだけでなく、<xref:System.Web.UI.WebControls.TableStyle>オブジェクト、このメソッドも設定、<xref:System.Web.UI.WebControls.FormView.CellPadding%2A>プロパティを 0 にします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、独自の既定のスタイルを作成するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.Style" />
        <altmember cref="T:System.Web.UI.WebControls.TableStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateDataSourceSelectArguments">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateDataSourceSelectArguments () As DataSourceSelectArguments" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceSelectArguments ^ CreateDataSourceSelectArguments();" />
      <MemberSignature Language="F#" Value="override this.CreateDataSourceSelectArguments : unit -&gt; System.Web.UI.DataSourceSelectArguments" Usage="formView.CreateDataSourceSelectArguments " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceSelectArguments</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>処理のためにデータ ソースに渡される引数を格納する <see cref="T:System.Web.UI.DataSourceSelectArguments" /> オブジェクトを作成します。</summary>
        <returns>データ ソースに渡される引数が格納された <see cref="T:System.Web.UI.DataSourceSelectArguments" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールを作成する、<xref:System.Web.UI.DataSourceSelectArguments>データ ソースに渡される引数を格納するオブジェクト。 この実装で、<xref:System.Web.UI.DataSourceSelectArguments>オブジェクトには、ページング操作の引数が含まれています。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、データ ソースに渡される、独自の値を指定するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Web.UI.DataSourceSelectArguments" />
        <altmember cref="M:System.Web.UI.WebControls.DataBoundControl.CreateDataSourceSelectArguments" />
      </Docs>
    </Member>
    <Member MemberName="CreateRow">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.FormViewRow CreateRow(int32 itemIndex, valuetype System.Web.UI.WebControls.DataControlRowType rowType, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateRow (itemIndex As Integer, rowType As DataControlRowType, rowState As DataControlRowState) As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::FormViewRow ^ CreateRow(int itemIndex, System::Web::UI::WebControls::DataControlRowType rowType, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow&#xA;override this.CreateRow : int * System.Web.UI.WebControls.DataControlRowType * System.Web.UI.WebControls.DataControlRowState -&gt; System.Web.UI.WebControls.FormViewRow" Usage="formView.CreateRow (itemIndex, rowType, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="itemIndex" Type="System.Int32" />
        <Parameter Name="rowType" Type="System.Web.UI.WebControls.DataControlRowType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="itemIndex">表示するデータ項目の 0 から始まるインデックス。</param>
        <param name="rowType"><see cref="T:System.Web.UI.WebControls.DataControlRowType" /> 列挙値のいずれか。</param>
        <param name="rowState"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 列挙値のビットごとの組み合わせ。</param>
        <summary>指定した項目のインデックス、行の種類、および行の状態を使用して、<see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクトを作成します。</summary>
        <returns>指定した項目のインデックス、行の種類、および行の状態の <see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateRow%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールを作成する、<xref:System.Web.UI.WebControls.FormViewRow>コントロール内の行を表すオブジェクトです。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラスを返すには、このメソッドをオーバーライドすることができます、<see cref="T:System.Web.UI.WebControls.FormViewRow" />カスタム設定を持つオブジェクト。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
      </Docs>
    </Member>
    <Member MemberName="CreateTable">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.Table CreateTable ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.Table CreateTable() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.CreateTable" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateTable () As Table" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::Table ^ CreateTable();" />
      <MemberSignature Language="F#" Value="abstract member CreateTable : unit -&gt; System.Web.UI.WebControls.Table&#xA;override this.CreateTable : unit -&gt; System.Web.UI.WebControls.Table" Usage="formView.CreateTable " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Table</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのコンテナー テーブルを作成します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.Table" /> コントロールのコンテナー テーブルを表す <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.CreateTable%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールのコンテナーとして機能するテーブルを作成するコントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.Table" />
      </Docs>
    </Member>
    <Member MemberName="CurrentMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode CurrentMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CurrentMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FormViewMode CurrentMode { System::Web::UI::WebControls::FormViewMode get(); };" />
      <MemberSignature Language="F#" Value="member this.CurrentMode : System.Web.UI.WebControls.FormViewMode" Usage="System.Web.UI.WebControls.FormView.CurrentMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在の日付入力モードを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 値のいずれか。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティを確認するかどうか、<xref:System.Web.UI.WebControls.FormView>コントロールが編集、挿入、または読み取り専用モードにします。 次の表では、さまざまなモード値を示します。  
  
|モード|説明|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードは、レコードの値を更新するユーザーを許可します。|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードは、データ ソースに新しいレコードを追加するユーザーを許可します。|  
|`FormView.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>コントロールが通常の表示モードは、読み取り専用モードです。|  
  
 この値は通常によって自動的に設定、<xref:System.Web.UI.WebControls.FormView>新規、更新、挿入、削除、またはキャンセル コマンド ボタンがクリックされたときを制御します。 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールは、アクションに対する応答でモードを変更、次の表にイベントが発生します。 これにより、イベントが発生したときに、適切なルーチンを実行するカスタム イベント ハンドラーを作成することができます。  
  
|event|説明|  
|-----------|-----------------|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanged>|発生したときに、<xref:System.Web.UI.WebControls.FormView>コントロールは、モードを変更モードの変更後。 このイベントは、タスクを実行する通常使用されるたびに、<xref:System.Web.UI.WebControls.FormView>コントロールがモードを変更します。|  
|<xref:System.Web.UI.WebControls.FormView.ModeChanging>|発生したときに、<xref:System.Web.UI.WebControls.FormView>コントロールは、モードを変更モードの変更の前にします。 このイベントは通常、モードの変更をキャンセルするに使用します。|  
  
 **注**を使用して、モードをプログラムで変更すると、これらのイベントは発生しませんが、<xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>メソッド。  
  
   
  
## Examples  
 次の例を使用する方法を示します、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティを確認するかどうか、<xref:System.Web.UI.WebControls.FormView>コントロールが編集、挿入、または読み取り専用モードにします。 ユーザーが別のレコード間を移動しようとしたかどうか、<xref:System.Web.UI.WebControls.FormView>コントロールが編集の詳細は、ページング操作が取り消されました。  
  
 [!code-aspx-csharp[FormViewCurrentMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCurrentMode/CS/formviewcurrentmodecs.aspx#1)]
 [!code-aspx-vb[FormViewCurrentMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCurrentMode/VB/formviewcurrentmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DefaultMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DataBind">
      <MemberSignature Language="C#" Value="public override sealed void DataBind ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void DataBind() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DataBind" />
      <MemberSignature Language="VB.NET" Value="Public Overrides NotOverridable Sub DataBind ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void DataBind();" />
      <MemberSignature Language="F#" Value="override this.DataBind : unit -&gt; unit" Usage="formView.DataBind " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>データ ソースを <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DataBind>をデータ ソースからデータをバインドするメソッド、<xref:System.Web.UI.WebControls.FormView>コントロール。 このメソッドは、コントロールのアクティブ テンプレート内のすべてのデータ バインディング式を解決します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />
      </Docs>
    </Member>
    <Member MemberName="DataItem">
      <MemberSignature Language="C#" Value="public virtual object DataItem { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object DataItem" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItem As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Object ^ DataItem { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItem : obj" Usage="System.Web.UI.WebControls.FormView.DataItem" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItem</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされたデータ項目を取得します。</summary>
        <value><see cref="T:System.Object" /> コントロールにバインドされたデータ項目を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DataItem%2A>データ項目にアクセスするプロパティにバインドされて、<xref:System.Web.UI.WebControls.FormView>コントロール。 データ項目が現在のレコードのフィールドの値に直接アクセスするよく使用されます。 種類、<xref:System.Object>これによって返されるプロパティは、データ ソースによって異なります。 たとえば、<xref:System.Web.UI.WebControls.SqlDataSource>コントロールにバインドする、<xref:System.Web.UI.WebControls.FormView>コントロール、<xref:System.Data.DataRowView>オブジェクトが返されます。  
  
> [!NOTE]
>  このプロパティは、データ バインディングが行われた後にのみ使用できます。 データ バインディングが発生する前に、このプロパティを返します`null`します。 このプロパティも適用可能でない場合に、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードと返します`null`します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.DataItem%2A>データ項目のフィールドの値を決定するプロパティ。  
  
 [!code-aspx-csharp[FormViewCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCtor/CS/formviewctorcs.aspx#1)]
 [!code-aspx-vb[FormViewCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCtor/VB/formviewctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="Overload:System.Web.UI.DataBinder.Eval" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataItemCount">
      <MemberSignature Language="C#" Value="public int DataItemCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DataItemCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int DataItemCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemCount : int" Usage="System.Web.UI.WebControls.FormView.DataItemCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内のデータ項目の数を取得します。</summary>
        <value>データ ソース内のデータ項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DataItemCount%2A>プロパティをデータ ソースに含まれるデータ項目の数を決定します。 このプロパティにはと同じ値が含まれています、<xref:System.Web.UI.WebControls.FormView.PageCount%2A>プロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
      </Docs>
    </Member>
    <Member MemberName="DataItemIndex">
      <MemberSignature Language="C#" Value="public virtual int DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataItemIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Value="member this.DataItemIndex : int" Usage="System.Web.UI.WebControls.FormView.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされているデータ項目のインデックスを取得します。</summary>
        <value>データ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドされているデータ項目のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A>データ項目のインデックスを決定するプロパティにバインドされて、<xref:System.Web.UI.WebControls.FormView>データ ソースからのコントロール。 このプロパティにはと同じ値が含まれています、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ。  
  
> [!NOTE]
>  ときにこのプロパティは適用されません、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードにします。 コントロールが挿入モードのとき、<xref:System.Web.UI.WebControls.FormView.DataItemIndex%2A>プロパティは-1 を返します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItem" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataItemCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
      </Docs>
    </Member>
    <Member MemberName="DataKey">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.DataKey DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKey" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property DataKey As DataKey" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::DataKey ^ DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DataKey : System.Web.UI.WebControls.DataKey" Usage="System.Web.UI.WebControls.FormView.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されているレコードの主キーを表す <see cref="T:System.Web.UI.WebControls.DataKey" /> オブジェクトを取得します。</summary>
        <value>表示されているレコードの主キーを表す <see cref="T:System.Web.UI.WebControls.DataKey" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView>コントロールが自動的に作成されます、<xref:System.Web.UI.WebControls.DataKey>フィールドまたはで示されているフィールドのキー/値ペアを格納しているオブジェクト、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>現在のレコードのプロパティ。 使用して、<xref:System.Web.UI.WebControls.FormView.DataKey%2A>これを取得するプロパティ<xref:System.Web.UI.WebControls.DataKey>オブジェクト。 このプロパティは通常、キーとその対応する値で指定されたフィールドの取得に使用、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティ。  
  
> [!NOTE]
>  簡単な方法として使用することも、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>で表示されている最初のキー フィールドの値を決定するプロパティ、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.DataKey%2A>キー フィールドの値を決定するプロパティ。  
  
 [!code-aspx-csharp[FormViewDataKey#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDataKey/CS/formviewdatakeycs.aspx#1)]
 [!code-aspx-vb[FormViewDataKey#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDataKey/VB/formviewdatakeyvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DataKeyNames">
      <MemberSignature Language="C#" Value="public virtual string[] DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataKeyNames As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property cli::array &lt;System::String ^&gt; ^ DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataKeyNames : string[] with get, set" Usage="System.Web.UI.WebControls.FormView.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.StringArrayConverter))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.DataFieldEditor, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースのキー フィールドの名前を格納する配列を取得または設定します。</summary>
        <value>データ ソースのキー フィールドの名前を格納する配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティをデータ ソースの主キーを表すフィールド名のコンマ区切りのリストを指定します。 ときに、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView>コントロールが自動的に作成されます、<xref:System.Web.UI.WebControls.DataKey>フィールドまたはで示されているフィールドのキー/値ペアを格納しているオブジェクト、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>現在のレコードのプロパティ。 <xref:System.Web.UI.WebControls.DataKey>でオブジェクトが格納されているし、<xref:System.Web.UI.WebControls.FormView.DataKey%2A>プロパティ。  
  
> [!NOTE]
>  設定する必要があります、 <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> 、組み込みの更新、削除、および挿入の機能のプロパティ、<xref:System.Web.UI.WebControls.FormView>動作を制御します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>データ ソースのキー フィールドを指定するプロパティにバインドされて、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      </Docs>
    </Member>
    <Member MemberName="DefaultMode">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.FormViewMode DefaultMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DefaultMode As FormViewMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewMode DefaultMode { System::Web::UI::WebControls::FormViewMode get(); void set(System::Web::UI::WebControls::FormViewMode value); };" />
      <MemberSignature Language="F#" Value="member this.DefaultMode : System.Web.UI.WebControls.FormViewMode with get, set" Usage="System.Web.UI.WebControls.FormView.DefaultMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが更新、挿入、またはキャンセルの各操作後に戻る、データ入力モードを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewMode" /> 値のいずれか。 既定値は、<see langword="FormViewMode.ReadOnly" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.FormView>に制御が戻ります編集、挿入、または読み取り専用モード後、update、insert、または取り消し操作を実行します。 既定で、<xref:System.Web.UI.WebControls.FormView>読み取り専用モードに制御が戻ります。 ただし、保持することができます、<xref:System.Web.UI.WebControls.FormView>編集を制御または適切な値にこのプロパティを設定してモードを挿入します。 次の表では、さまざまなモード値を示します。  
  
|モード|説明|  
|----------|-----------------|  
|`FormViewMode.Edit`|<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードは、レコードの値を更新するユーザーを許可します。|  
|`FormViewMode.Insert`|<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードは、データ ソースに新しいレコードを追加するユーザーを許可します。|  
|`FormViewMode.ReadOnly`|<xref:System.Web.UI.WebControls.FormView>コントロールが通常の表示モードは、読み取り専用モードです。|  
  
 このプロパティは、よく際に使用される、<xref:System.Web.UI.WebControls.FormView>コントロールは、1 つの目的をなどを挿入またはレコードを編集するだけにします。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>保持するプロパティを<xref:System.Web.UI.WebControls.FormView>更新操作の後の編集モードでコントロール。  
  
 [!code-aspx-csharp[FormViewDefaultMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDefaultMode/CS/formviewdefaultmodecs.aspx#1)]
 [!code-aspx-vb[FormViewDefaultMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDefaultMode/VB/formviewdefaultmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した値が <see cref="T:System.Web.UI.WebControls.FormViewMode" /> 列挙値ではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.FormViewMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CurrentMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      </Docs>
    </Member>
    <Member MemberName="DeleteItem">
      <MemberSignature Language="C#" Value="public virtual void DeleteItem ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DeleteItem() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.DeleteItem" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub DeleteItem ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void DeleteItem();" />
      <MemberSignature Language="F#" Value="abstract member DeleteItem : unit -&gt; unit&#xA;override this.DeleteItem : unit -&gt; unit" Usage="formView.DeleteItem " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードをデータ ソースから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.DeleteItem%2A>プログラムでの現在のレコードを削除するメソッドを<xref:System.Web.UI.WebControls.FormView>データ ソースからのコントロール。 このメソッドは通常の外部から現在のレコードを削除する必要がある場合に使用、<xref:System.Web.UI.WebControls.FormView>など、ページ上の異なるコントロールから制御します。 発生させるこのメソッドを呼び出す、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>と<xref:System.Web.UI.WebControls.FormView.ItemDeleting>イベント。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.DeleteItem%2A>プログラムでの現在のレコードを削除するメソッドを<xref:System.Web.UI.WebControls.FormView>データ ソースからのコントロール。  
  
 [!code-aspx-csharp[FormViewDeleteItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteItem/CS/formviewdeleteitemcs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteItem/VB/formviewdeleteitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="DeleteMethod">
      <MemberSignature Language="C#" Value="public virtual string DeleteMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DeleteMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DeleteMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DeleteMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DeleteMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.DeleteMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが削除操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが削除操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web フォームでモデル バインドの使用に関するチュートリアルについては、次を参照してください。[モデル バインディングと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EditItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EditItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EditItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EditItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EditItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EditItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードの項目用のカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが編集モードの場合のデータ行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>コントロールがコントロールの現在のモードに基づいて、データ行を別のテンプレートを表示します (で指定された、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティ)。 次の表では、各モードで使用されるテンプレートを示します。  
  
|モード|テンプレートの表示|  
|----------|-----------------------|  
|編集|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 使用して、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>ときに行のデータの独自のユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードにします。 項目テンプレート編集にはには、通常、既存のレコードだけでなく、レコードを更新して、更新操作をキャンセル コマンド ボタンの値を更新するユーザーの入力コントロールが含まれます。  
  
 カスタム テンプレート、最初の場所を指定する`<EditItemTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<EditItemTemplate>`タグ。 双方向のバインド式を使用すると、フィールドを入力コントロールに関連付けることができます。 これにより、<xref:System.Web.UI.WebControls.FormView>編集モードに関連付けられている入力コントロールに自動的に元のフィールドの値を表示するコントロール。 レコードが更新されたときに、<xref:System.Web.UI.WebControls.FormView>コントロールは、関連付けられている入力コントロールからの更新されたフィールドの値を自動的に抽出します。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)します。 組み込みのキャンセルと更新操作を実行するコマンド ボタンを作成すると、テンプレートにコマンド ボタン コントロールを追加、`CommandName`次の表に表示されているプロパティの値のいずれかに設定します。  
  
|コマンド ボタンの種類|CommandName 値|  
|-------------------------|-----------------------|  
|キャンセル|[キャンセル]|  
|更新|[更新]|  
  
 使用して項目テンプレートの外観を制御することができます、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、編集モードのデータ行用のカスタム テンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="EditRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EditRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EditRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EditRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EditRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EditRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが編集モードの場合のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが編集モードの場合のデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>ときに行のデータの外観を制御するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードにします。 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードでは、データ行で指定されたユーザー定義コンテンツが表示されます、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>プロパティ。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EditRowStyle-ForeColor`)。  
  
-   入れ子、`<EditRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EditRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>ときに行のデータのカスタム スタイルを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードにします。  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property EmptyDataRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ EmptyDataRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールにバインドされたデータ ソースにレコードが格納されていない場合に表示される空のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value>空のデータ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.TableItemStyle" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>プロパティで空のデータ行の外観を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 コントロールにバインドされているデータ ソースにレコードが含まれていない場合は、空のデータ行が表示されます。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `EmptyDataRowStyle-ForeColor`)。  
  
-   入れ子、`<EmptyDataRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `EmptyDataRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>ときに空のデータ行が表示されるは、カスタム スタイルを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールが任意のレコードがないデータ ソースにバインドされています。  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate EmptyDataTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ EmptyDataTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レコードが格納されていないデータ ソースに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされている場合に表示される空のデータ行用の、ユーザー定義のコンテンツを取得または設定します。</summary>
        <value>空のデータ行用のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のデータ行を表示する、<xref:System.Web.UI.WebControls.FormView>コントロールにバインドされているデータ ソースにレコードが含まれていない場合を制御します。 空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を使用して定義することができます、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティ。 空のデータ行用のカスタム テンプレートを指定するには、最初に`<EmptyDataTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<EmptyDataTemplate>`タグ。 空のデータ行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>プロパティ。 設定して、空のデータ行の組み込みの UI を使用することができます、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>と<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティが優先されます。  
  
   
  
## Examples  
 次の例では、空のデータ行には、ときに表示されるは、カスタム テンプレートを定義する方法、<xref:System.Web.UI.WebControls.FormView>コントロールが任意のレコードがないデータ ソースにバインドされています。  
  
 [!code-aspx-csharp[FormViewEmptyDataTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataTemplate/CS/formviewemptydatatemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataTemplate/VB/formviewemptydatatemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="EmptyDataText">
      <MemberSignature Language="C#" Value="public virtual string EmptyDataText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string EmptyDataText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EmptyDataText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ EmptyDataText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.EmptyDataText : string with get, set" Usage="System.Web.UI.WebControls.FormView.EmptyDataText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>レコードが格納されていないデータ ソースに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされている場合に表示される、空のデータ行に表示されるテキストを取得または設定します。</summary>
        <value>空のデータ行に表示されるテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 空のデータ行を表示する、<xref:System.Web.UI.WebControls.FormView>コントロールにバインドされているデータ ソースにレコードが含まれていない場合を制御します。 使用して、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>プロパティを空のデータ行に表示するテキストを指定します。 空のデータ行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>プロパティ。 代わりに、空のデータ行の独自のカスタム ユーザー インターフェイス (UI) を定義するには、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>と<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティが優先されます。  
  
 このプロパティは、の値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>プロパティを空のデータ行に表示するテキストを指定します。  
  
 [!code-aspx-csharp[FormViewEmptyDataText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEmptyDataText/CS/formviewemptydatatextcs.aspx#1)]
 [!code-aspx-vb[FormViewEmptyDataText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEmptyDataText/VB/formviewemptydatatextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="EnableModelValidation">
      <MemberSignature Language="C#" Value="public virtual bool EnableModelValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableModelValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property EnableModelValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool EnableModelValidation { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableModelValidation : bool with get, set" Usage="System.Web.UI.WebControls.FormView.EnableModelValidation" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入または更新の操作中に発生する例外を検証コントロールが処理するかどうかを示す値を取得または設定します。</summary>
        <value>挿入または更新の操作中に発生する例外を検証コントロールが処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="EnsureDataBound">
      <MemberSignature Language="C#" Value="protected override void EnsureDataBound ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void EnsureDataBound() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.EnsureDataBound" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub EnsureDataBound ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void EnsureDataBound();" />
      <MemberSignature Language="F#" Value="override this.EnsureDataBound : unit -&gt; unit" Usage="formView.EnsureDataBound " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>必要に応じて <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータにバインドされていることを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A>メソッドは、ヘルパー メソッドで使用される、<xref:System.Web.UI.WebControls.FormView>ことを確認するクラス、<xref:System.Web.UI.WebControls.FormView>コントロールは適切なタイミング データにバインドします。 <xref:System.Web.UI.WebControls.FormView.EnsureDataBound%2A>中にメソッドが呼び出されます、通常、<xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>データ バインド コントロールがまだバインドされていないときに、データ ソースにコントロールをバインドするメソッドでは、データ バインディングが必要です。 このバージョンのメソッドはデータ バインディングの発生を防ぐためにオーバーライドされてときに、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モード。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BaseDataBoundControl.EnsureDataBound" />
      </Docs>
    </Member>
    <Member MemberName="ExtractRowValues">
      <MemberSignature Language="C#" Value="protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void ExtractRowValues(class System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub ExtractRowValues (fieldValues As IOrderedDictionary, includeKeys As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void ExtractRowValues(System::Collections::Specialized::IOrderedDictionary ^ fieldValues, bool includeKeys);" />
      <MemberSignature Language="F#" Value="abstract member ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit&#xA;override this.ExtractRowValues : System.Collections.Specialized.IOrderedDictionary * bool -&gt; unit" Usage="formView.ExtractRowValues (fieldValues, includeKeys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="fieldValues" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="includeKeys" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="fieldValues">現在のデータ項目のフィールド値を格納する <see cref="T:System.Collections.Specialized.IOrderedDictionary" />。</param>
        <param name="includeKeys">キー フィールドを含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データ行内で宣言された各フィールドの値を取得し、それらを指定した <see cref="T:System.Collections.Specialized.IOrderedDictionary" /> オブジェクトに格納します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ExtractRowValues%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>データ行内で宣言されている各フィールドの値を取得するコントロール。 データ行に現在のモードに基づいて別のテンプレートが表示されるため、このメソッドは、現在のモードに対応するテンプレートで宣言されているフィールドの値のみを取得します。 次の表は、使用可能なモードと対応するテンプレートを示します。  
  
|モード|テンプレート|  
|----------|--------------|  
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|編集|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 抽出された値を使用して、複数のキー フィールドを含めるかどうかを指定することができます、`includeKeys`パラメーター。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、フィールドの値を取得する、独自のルーチンを作成するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Collections.Specialized.IOrderedDictionary" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="M:System.Web.UI.IBindableTemplate.ExtractValues(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="FooterRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow FooterRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property FooterRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ FooterRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.FooterRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのフッター行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのフッター行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下部でフッター行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>または<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A>プロパティをプログラムでアクセス、<xref:System.Web.UI.WebControls.FormViewRow>フッター行を表すオブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>プロパティは後でのみ使用可能な<xref:System.Web.UI.WebControls.FormView>コントロールのフッター行を作成し、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 このプロパティは通常、たとえばカスタム コンテンツを追加するときに、フッター行をプログラムで操作する必要がある場合に使用します。 変更しても、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A>プロパティは、後に実行する必要があります、 <xref:System.Web.UI.WebControls.FormView> 。 それ以外にコントロールが発生しました、<xref:System.Web.UI.WebControls.FormView>コントロールには、すべての変更が上書きされます。  
  
 フッター行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.FooterRow%2A>中にフッター行のプロパティをプログラムで変更するプロパティ、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="FooterStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle FooterStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FooterStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ FooterStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FooterStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.FooterStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのフッター行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下部でフッター行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>または<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>プロパティ内のフッター行の外観を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `FooterStyle-ForeColor`)。  
  
-   入れ子、`<FooterStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `FooterStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>フッター行のカスタム スタイルを指定するプロパティ。  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="FooterTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FooterTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FooterTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.FooterTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフッター行のユーザー定義コンテンツを取得または設定します。</summary>
        <value>フッター行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下部でフッター行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>または<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティを設定します。 使用してフッター行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティ。 フッター行のカスタム テンプレートを指定するには、最初に`<FooterTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<FooterTemplate>`タグ。 フッター行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>プロパティ。 または、単にテキストを表示できますフッター行に設定して、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>と<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティが優先されます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>フッター行を表示するためにカスタム テンプレートを定義するプロパティ。  
  
 [!code-aspx-csharp[FormViewFooterTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterTemplate/CS/formviewfootertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewFooterTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterTemplate/VB/formviewfootertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FooterText">
      <MemberSignature Language="C#" Value="public virtual string FooterText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FooterText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.FooterText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FooterText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FooterText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.FooterText : string with get, set" Usage="System.Web.UI.WebControls.FormView.FooterText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフッター行に表示するテキストを取得または設定します。</summary>
        <value>フッター行に表示するテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 下部でフッター行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>または<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>フッター行に表示するテキストを指定するプロパティ。 フッター行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>プロパティ。 設定して、フッター行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>と<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティが優先されます。  
  
 このプロパティは、の値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>フッター行に表示するテキストを指定するプロパティ。  
  
 [!code-aspx-csharp[FormViewFooterText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewFooterText/CS/formviewfootertextcs.aspx#1)]
 [!code-aspx-vb[FormViewFooterText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewFooterText/VB/formviewfootertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="GridLines">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.GridLines GridLines" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.GridLines" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property GridLines As GridLines" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::GridLines GridLines { System::Web::UI::WebControls::GridLines get(); void set(System::Web::UI::WebControls::GridLines value); };" />
      <MemberSignature Language="F#" Value="member this.GridLines : System.Web.UI.WebControls.GridLines with get, set" Usage="System.Web.UI.WebControls.FormView.GridLines" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.GridLines</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのグリッド線のスタイルを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.GridLines" /> 値のいずれか 1 つ。 既定値は、<see langword="GridLines.None" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.GridLines%2A>の枠線のスタイルを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。 次の表では、使用できるスタイルを示します。  
  
|スタイル|説明|  
|-----------|-----------------|  
|`GridLines.None`|グリッド線は表示されません。|  
|`GridLines.Horizontal`|水平グリッド線だけが表示されます。|  
|`GridLines.Vertical`|垂直グリッド線だけが表示されます。|  
|`GridLines.Both`|水平および垂直のグリッドの線が表示されます。|  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.GridLines%2A>垂直および水平のグリッドの線を表示するプロパティ。  
  
 [!code-aspx-csharp[FormViewCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewCellPadding/CS/formviewcellpaddingcs.aspx#1)]
 [!code-aspx-vb[FormViewCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewCellPadding/VB/formviewcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridLines" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      </Docs>
    </Member>
    <Member MemberName="HeaderRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow HeaderRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HeaderRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ HeaderRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.HeaderRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのヘッダー行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのヘッダー行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上部のヘッダー行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>または<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>プロパティをプログラムでアクセス、<xref:System.Web.UI.WebControls.FormViewRow>ヘッダー行を表すオブジェクト。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>プロパティは後でのみ使用可能な<xref:System.Web.UI.WebControls.FormView>コントロールはヘッダー行を作成、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 このプロパティは通常、カスタム コンテンツを追加するときにヘッダー行をプログラムで操作する必要がある場合に使用します。 変更しても、<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>プロパティは、後に実行する必要があります、 <xref:System.Web.UI.WebControls.FormView> 。 それ以外にコントロールが発生しました、<xref:System.Web.UI.WebControls.FormView>コントロールには、すべての変更が上書きされます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>時にヘッダー行のプロパティをプログラムで変更するプロパティ、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HeaderStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.HeaderStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのヘッダー行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのヘッダー行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上部のヘッダー行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>または<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>プロパティでヘッダー行の外観を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `HeaderStyle-ForeColor`)。  
  
-   入れ子、`<HeaderStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `HeaderStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>ヘッダー行のカスタム スタイルを指定するプロパティ。  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのヘッダー行のユーザー定義コンテンツを取得または設定します。</summary>
        <value>ヘッダー行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は <see langword="null" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上部のヘッダー行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>または<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティを設定します。 使用して、ヘッダー行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティ。 ヘッダー行のカスタム テンプレートを指定するには、最初に`<HeaderTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<HeaderTemplate>`タグ。 ヘッダー行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>プロパティ。 または、単にテキストを表示できます、ヘッダー行を設定して、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>と<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティが優先されます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>ヘッダー行を表示するためにカスタム テンプレートを定義するプロパティ。  
  
 [!code-aspx-csharp[FormViewHeaderTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderTemplate/CS/formviewheadertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderTemplate/VB/formviewheadertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.FormView.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのヘッダー行に表示するテキストを取得または設定します。</summary>
        <value>ヘッダー行に表示するテキスト。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 上部のヘッダー行が表示されます、<xref:System.Web.UI.WebControls.FormView>タイミングを制御、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>または<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティを設定します。 使用して、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>ヘッダー行に表示するテキストを指定するプロパティ。 ヘッダー行のスタイルを制御するには、使用、<xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>プロパティ。 設定して、ヘッダー行の独自のカスタム ユーザー インターフェイス (UI) を定義することができます、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>このプロパティではなくプロパティ。  
  
> [!NOTE]
>  どちらの場合、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>と<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティが優先されます。  
  
 このプロパティは、の値を設定すると、デザイナーのツールを使用してリソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](https://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>ヘッダー行に表示するテキストを指定するプロパティ。  
  
 [!code-aspx-csharp[FormViewHeaderText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHeaderText/CS/formviewheadertextcs.aspx#1)]
 [!code-aspx-vb[FormViewHeaderText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHeaderText/VB/formviewheadertextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataText" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterText" />
      </Docs>
    </Member>
    <Member MemberName="HorizontalAlign">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.HorizontalAlign HorizontalAlign" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HorizontalAlign As HorizontalAlign" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::HorizontalAlign HorizontalAlign { System::Web::UI::WebControls::HorizontalAlign get(); void set(System::Web::UI::WebControls::HorizontalAlign value); };" />
      <MemberSignature Language="F#" Value="member this.HorizontalAlign : System.Web.UI.WebControls.HorizontalAlign with get, set" Usage="System.Web.UI.WebControls.FormView.HorizontalAlign" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Layout")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.HorizontalAlign</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ページ上の <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの水平方向の配置を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.HorizontalAlign" /> 値のいずれか 1 つ。 既定値は、<see langword="HorizontalAlign.NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>の水平方向の配置を指定するプロパティを<xref:System.Web.UI.WebControls.FormView>ページ内のコントロール。 次の表では、さまざまな水平方向の配置スタイルを示します。  
  
|HorizontalAlign 値|説明|  
|---------------------------|-----------------|  
|`HorizontalAlign.NotSet`|水平方向の配置、<xref:System.Web.UI.WebControls.FormView>コントロールが設定されていません。|  
|`HorizontalAlign.Left`|<xref:System.Web.UI.WebControls.FormView>コントロールがページの左側に配置します。|  
|`HorizontalAlign.Center`|<xref:System.Web.UI.WebControls.FormView>コントロールがページの中央に配置します。|  
|`HorizontalAlign.Right`|<xref:System.Web.UI.WebControls.FormView>コントロールが右揃えのページ。|  
|`HorizontalAlign.Justify`|<xref:System.Web.UI.WebControls.FormView>コントロール、ページの左と右の余白に揃えて配置されます。|  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>ことを指定するプロパティを<xref:System.Web.UI.WebControls.FormView>ページで、コントロールを中央揃えにする必要があります。  
  
 [!code-aspx-csharp[FormViewHorizontalAlign#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewHorizontalAlign/CS/formviewhorizontalaligncs.aspx#1)]
 [!code-aspx-vb[FormViewHorizontalAlign#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewHorizontalAlign/VB/formviewhorizontalalignvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.HorizontalAlign" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BackImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellPadding" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.CellSpacing" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.GridLines" />
      </Docs>
    </Member>
    <Member MemberName="InitializePager">
      <MemberSignature Language="C#" Value="protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializePager(class System.Web.UI.WebControls.FormViewRow row, class System.Web.UI.WebControls.PagedDataSource pagedDataSource) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializePager(System::Web::UI::WebControls::FormViewRow ^ row, System::Web::UI::WebControls::PagedDataSource ^ pagedDataSource);" />
      <MemberSignature Language="F#" Value="abstract member InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit&#xA;override this.InitializePager : System.Web.UI.WebControls.FormViewRow * System.Web.UI.WebControls.PagedDataSource -&gt; unit" Usage="formView.InitializePager (row, pagedDataSource)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
        <Parameter Name="pagedDataSource" Type="System.Web.UI.WebControls.PagedDataSource" />
      </Parameters>
      <Docs>
        <param name="row">ページ行を格納している <see cref="T:System.Web.UI.WebControls.FormViewRow" />。</param>
        <param name="pagedDataSource">現在のページのデータを格納している <see cref="T:System.Web.UI.WebControls.PagedDataSource" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのページ行を作成します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializePager%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>ページ行を作成するコントロール。 作成、<xref:System.Web.UI.WebControls.TableCell>のプロパティを使用してナビゲーション コントロールを格納しているオブジェクト、<xref:System.Web.UI.WebControls.PagedDataSource>オブジェクトに含まれている、`pagedDataSource`パラメーター。 セルがで指定した行を追加し、`row`パラメーター。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、独自のページ行を作成するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.PagedDataSource" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeRow">
      <MemberSignature Language="C#" Value="protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeRow(class System.Web.UI.WebControls.FormViewRow row) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeRow (row As FormViewRow)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeRow(System::Web::UI::WebControls::FormViewRow ^ row);" />
      <MemberSignature Language="F#" Value="abstract member InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit&#xA;override this.InitializeRow : System.Web.UI.WebControls.FormViewRow -&gt; unit" Usage="formView.InitializeRow row" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="row" Type="System.Web.UI.WebControls.FormViewRow" />
      </Parameters>
      <Docs>
        <param name="row">初期化する <see cref="T:System.Web.UI.WebControls.FormViewRow" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.FormViewRow" /> オブジェクトを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.InitializeRow%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールを指定された初期化<xref:System.Web.UI.WebControls.FormViewRow>オブジェクト。 <xref:System.Web.UI.WebControls.FormViewRow>行型で指定された行の状態に基づくオブジェクトが初期化されてその<xref:System.Web.UI.WebControls.FormViewRow.RowType%2A>と<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>プロパティでは、それぞれします。 適切なコンテンツに追加し、<xref:System.Web.UI.WebControls.FormViewRow>オブジェクト。 次の表では、各行型を初期化する方法について説明します。  
  
|行の種類|説明|  
|--------------|-----------------|  
|データ行|内容、 <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>、 <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>、または<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>にプロパティを追加、<xref:System.Web.UI.WebControls.FormViewRow>オブジェクトの値に応じて、<xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>プロパティ。|  
|空のデータ行|値、<xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>プロパティまたはの内容、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティに追加されます、<xref:System.Web.UI.WebControls.FormViewRow>プロパティの設定に応じて、オブジェクト。 両方のプロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>プロパティが優先されます。|  
|フッター行|値、<xref:System.Web.UI.WebControls.FormView.FooterText%2A>プロパティまたはの内容、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティに追加されます、<xref:System.Web.UI.WebControls.FormViewRow>プロパティの設定に応じて、オブジェクト。 両方のプロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>プロパティが優先されます。|  
|ヘッダー行|値、<xref:System.Web.UI.WebControls.FormView.HeaderText%2A>プロパティまたはの内容、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティに追加されます、<xref:System.Web.UI.WebControls.FormViewRow>プロパティの設定に応じて、オブジェクト。 両方のプロパティが設定されている場合、<xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>プロパティが優先されます。|  
  
> [!NOTE]
>  このメソッドは、ページ行を初期化できません。 ページ行を作成するには、使用、<xref:System.Web.UI.WebControls.FormView.InitializePager%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、独自のカスタム行を作成するには、このメソッドをオーバーライドできます。</para></block>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowState" />
        <altmember cref="T:System.Web.UI.WebControls.DataControlRowType" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="public virtual void InsertItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InsertItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InsertItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InsertItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member InsertItem : bool -&gt; unit&#xA;override this.InsertItem : bool -&gt; unit" Usage="formView.InsertItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">このメソッドが呼び出されたときにページの検証を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>現在のレコードをデータ ソースに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードを使用して、<xref:System.Web.UI.WebControls.FormView.InsertItem%2A>をプログラムでデータ ソースの現在のレコードを挿入する方法。 このメソッドは通常の外部から現在のレコードを挿入する必要がある場合に使用、<xref:System.Web.UI.WebControls.FormView>など、ページ上の異なるコントロールから制御します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView>このメソッドが呼び出された、それ以外の場合、コントロールが挿入モードである必要があります、<xref:System.Web.HttpException>がスローされます。  
  
 挿入操作の前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。 発生させるこのメソッドを呼び出す、<xref:System.Web.UI.WebControls.FormView.ItemInserted>と<xref:System.Web.UI.WebControls.FormView.ItemInserting>イベント。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.InsertItem%2A>をプログラムでの現在のレコードを挿入する方法、<xref:System.Web.UI.WebControls.FormView>データ ソース内のコントロール。  
  
 [!code-aspx-csharp[FormViewInsertItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItem/CS/formviewinsertitemcs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItem/VB/formviewinsertitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが挿入モードではないときに、このメソッドは呼び出されています。  
  
または 
<see cref="T:System.Web.UI.DataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトが null です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="InsertItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate InsertItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ InsertItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.InsertItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>挿入モードの項目用のカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが挿入モードの場合のデータ行のカスタム コンテンツを含む <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>コントロールがコントロールの現在のモードに基づいて、データ行を別のテンプレートを表示します (で指定された、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティ)。 次の表では、各モードで使用されるテンプレートを示します。  
  
|モード|テンプレートの表示|  
|----------|-----------------------|  
|編集|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 使用して、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>ときに行のデータの独自のユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードにします。 通常、項目を挿入するテンプレートには、コマンド ボタンの挿入操作をキャンセルして、レコードを挿入するほか、新しいレコードの値を入力するユーザーの入力コントロールが含まれます。  
  
 カスタム テンプレート、最初の場所を指定する`<InsertItemTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<InsertItemTemplate>`タグ。 双方向のバインド式を使用すると、フィールドを入力コントロールに関連付けることができます。 レコードが挿入されるときに、<xref:System.Web.UI.WebControls.FormView>コントロールは、関連付けられている入力コントロールからのフィールドの値を自動的に抽出します。 双方向のバインド式の詳細については、次を参照してください。[データベースへのバインド](https://msdn.microsoft.com/library/ab7b2846-975b-4057-a948-45527497c742)します。 組み込みのキャンセルを実行し、操作を挿入するコマンド ボタンを作成すると、テンプレートにコマンド ボタン コントロールを追加、`CommandName`次の表に表示されているプロパティの値のいずれかに設定します。  
  
|コマンド ボタンの種類|CommandName 値|  
|-------------------------|-----------------------|  
|キャンセル|[キャンセル]|  
|挿入|"Insert"|  
  
 使用して項目テンプレートの外観を制御することができます、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、挿入モードのデータ行用のカスタム テンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      </Docs>
    </Member>
    <Member MemberName="InsertMethod">
      <MemberSignature Language="C#" Value="public virtual string InsertMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string InsertMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property InsertMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ InsertMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.InsertMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.InsertMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが挿入操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが挿入操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web フォームでモデル バインドの使用に関するチュートリアルについては、次を参照してください。[モデル バインディングと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertRowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle InsertRowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertRowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ InsertRowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertRowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.InsertRowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが挿入モードの場合にこのコントロールのデータ行の外観を設定できる、<see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが挿入モードの場合にこのコントロールのデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>ときに行のデータの外観を制御するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードにします。 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モードでは、データ行で指定されたユーザー定義コンテンツが表示されます、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>プロパティ。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。  
  
 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `InsertRowStyle-ForeColor`)。  
  
-   入れ子、`<InsertRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `InsertRowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>行のプロパティをデータのカスタム スタイルを指定するときに、<xref:System.Web.UI.WebControls.FormView>コントロールが挿入モード。  
  
 [!code-aspx-csharp[FormViewInsertItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertItemTemplate/CS/formviewinsertitemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewInsertItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertItemTemplate/VB/formviewinsertitemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
      </Docs>
    </Member>
    <Member MemberName="IsBindableType">
      <MemberSignature Language="C#" Value="public virtual bool IsBindableType (Type type);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool IsBindableType(class System.Type type) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.IsBindableType(System.Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool IsBindableType(Type ^ type);" />
      <MemberSignature Language="F#" Value="abstract member IsBindableType : Type -&gt; bool&#xA;override this.IsBindableType : Type -&gt; bool" Usage="formView.IsBindableType type" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="type">確認するデータ型を表す <see cref="T:System.Type" />。</param>
        <summary>指定したデータ型を <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフィールドにバインドできるかどうかを確認します。</summary>
        <returns>指定したデータ型を <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのフィールドにバインドできる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.IsBindableType%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロール内のフィールドに指定したデータ型をバインドできるかどうかを決定するコントロール。 <xref:System.Web.UI.WebControls.FormView>コントロールは、次のデータ型をサポートしています。  
  
-   などのすべてのプリミティブ データ型<xref:System.Boolean>、 <xref:System.Byte>、<xref:System.Int32>など。  
  
-   <xref:System.DateTime>  
  
-   <xref:System.Decimal>  
  
-   <xref:System.Guid>  
  
-   <xref:System.String>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラスで使用できるデータ型の制限を追加するには、このメソッドをオーバーライドすることができます、<see cref="T:System.Web.UI.WebControls.FormView" />コントロール。</para></block>
        <altmember cref="P:System.Type.IsPrimitive" />
        <altmember cref="T:System.DateTime" />
        <altmember cref="T:System.Decimal" />
        <altmember cref="T:System.Guid" />
        <altmember cref="T:System.String" />
      </Docs>
    </Member>
    <Member MemberName="ItemCommand">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCommand" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCommand As FormViewCommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewCommandEventHandler ^ ItemCommand;" />
      <MemberSignature Language="F#" Value="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " Usage="member this.ItemCommand : System.Web.UI.WebControls.FormViewCommandEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewCommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内のボタンをクリックすると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCommand>とき内のボタン イベントが発生、<xref:System.Web.UI.WebControls.FormView>コントロールがクリックされました。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
 内でボタンを<xref:System.Web.UI.WebControls.FormView>コントロールは、コントロールの組み込み機能の一部を呼び出すもことができます。 これらの操作のいずれかを実行するには、設定、`CommandName`の次の表に、値の 1 つのボタンのプロパティ。  
  
|CommandName 値|説明|  
|-----------------------|-----------------|  
|[キャンセル]|編集または挿入操作をキャンセルし、返します、<xref:System.Web.UI.WebControls.FormView>コントロールで指定されたモードを<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>プロパティ。 発生させる、<xref:System.Web.UI.WebControls.FormView.ModeChanged>と<xref:System.Web.UI.WebControls.FormView.ModeChanging>イベント。|  
|"削除"|現在のレコードを削除します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>と<xref:System.Web.UI.WebControls.FormView.ItemDeleting>イベント。|  
|[編集]|配置、<xref:System.Web.UI.WebControls.FormView>編集モードで制御します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ModeChanged>と<xref:System.Web.UI.WebControls.FormView.ModeChanging>イベント。|  
|"Insert"|現在のレコードをデータ ソースに挿入します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemInserted>と<xref:System.Web.UI.WebControls.FormView.ItemInserting>イベント。|  
|"New"|配置、<xref:System.Web.UI.WebControls.FormView>挿入モードで制御します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ModeChanged>と<xref:System.Web.UI.WebControls.FormView.ModeChanging>イベント。|  
|"Page"|ページング操作を実行します。 設定、 `CommandArgument` "First"、"Last"するボタン、[次へ]、"Prev"、またはを実行するページング操作の種類を指定するページ番号のプロパティ。 発生させる、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>と<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>イベント。|  
|[更新]|データ ソースの現在のレコードを更新します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemUpdated>と<xref:System.Web.UI.WebControls.FormView.ItemUpdating>イベント。|  
  
 ただし、<xref:System.Web.UI.WebControls.FormView.ItemCommand>イベントは、前の表に一覧表示 ボタンがクリックされたときに発生しますが、操作のテーブルに表示されるイベントを使用することをお勧めします。  
  
 A<xref:System.Web.UI.WebControls.FormViewCommandEventArgs>オブジェクトがクリックされたボタンのコマンドの引数とコマンドの名前を決定することができるイベント処理メソッドに渡されます。 コマンドの引数とコマンドの名前を調べるには、<xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>と<xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>プロパティでは、それぞれします。 使用してイベントを発生させたコントロールにアクセスすることも、<xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>プロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemCommand>でボタンのクリックを処理するイベントを<xref:System.Web.UI.WebControls.FormView>コントロール。 現在表示されている項目を追加、ユーザーは、[追加] ボタンをクリックすると、<xref:System.Web.UI.WebControls.ListBox>コントロール。  
  
 [!code-aspx-csharp[FormViewItemCommandEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCommandEventArgs/CS/formviewcommandeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewItemCommandEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCommandEventArgs/VB/formviewcommandeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandName" />
        <altmember cref="P:System.Web.UI.WebControls.CommandEventArgs.CommandArgument" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemCreated">
      <MemberSignature Language="C#" Value="public event EventHandler ItemCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ItemCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemCreated As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ItemCreated;" />
      <MemberSignature Language="F#" Value="member this.ItemCreated : EventHandler " Usage="member this.ItemCreated : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにすべての行が作成された後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ItemCreated>ですべての行が作成された後にイベントが発生した、<xref:System.Web.UI.WebControls.FormView>コントロール。 これは、コントロールが最初にレンダリングされるとき、またはユーザーが別のレコードに移動したときに発生します。 このイベントを使用するへの追加や、このイベントが発生するたびに、行の内容の変更など、カスタムのルーチンを実行するイベント処理メソッドを提供します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.ItemCreated>イベントが発生する前に、<xref:System.Web.UI.WebControls.FormView>コントロールがデータにバインドします。 バインドされたフィールドの値を変更するには、使用、<xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>イベント。  
  
 ヘッダー、フッター、およびポケットベルの行にアクセスすることができます、<xref:System.Web.UI.WebControls.FormView>コントロールを使用して、 <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>、 <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>、 <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>、または<xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>プロパティでは、それぞれします。 データ行にアクセスするには、使用、<xref:System.Web.UI.WebControls.FormView.Row%2A>プロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemCreated>のテキストを更新するイベントを<xref:System.Web.UI.WebControls.Label>ページ行に含まれるコントロール。  
  
 [!code-aspx-csharp[FormViewItemCreated#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewItemCreated/CS/formviewitemcreatedcs.aspx#1)]
 [!code-aspx-vb[FormViewItemCreated#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewItemCreated/VB/formviewitemcreatedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.Row" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleted As FormViewDeletedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeletedEventHandler ^ ItemDeleted;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " Usage="member this.ItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeletedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Delete ボタンがクリックされた場合に、削除操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>イベントと削除 ボタン (ボタンをその`CommandName`プロパティが"Delete"に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.FormView>制御レコードを削除します。 これにより、このイベントが発生するたびに、削除操作の結果を確認してなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>と発生した例外の影響を受けたレコードの数を決定することができるイベント処理メソッドにオブジェクトが渡されます。 削除操作によって影響を受けたレコードの数を調べるには、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>プロパティを任意の例外が発生したかどうかを判断します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>プロパティ。 キー フィールドと削除されたレコードの非キー フィールドの名前/値ペアにアクセスする場合は、使用、<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>プロパティでは、それぞれします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>削除操作中に例外が発生したかどうかを決定するイベントです。  
  
 [!code-aspx-csharp[FormViewDeletedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeletedEventArgs/CS/formviewdeletedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeletedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeletedEventArgs/VB/formviewdeletedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemDeleting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemDeleting As FormViewDeleteEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewDeleteEventHandler ^ ItemDeleting;" />
      <MemberSignature Language="F#" Value="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " Usage="member this.ItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewDeleteEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Delete ボタンがクリックされた場合に、削除操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemDeleting>イベントと削除 ボタン (付きのボタンの`CommandName`プロパティが"Delete"に設定)、コントロール内をクリックする前に、<xref:System.Web.UI.WebControls.FormView>制御レコードを削除します。 これにより、このイベントが発生するたびに、削除する前に、レコードの確認など、カスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>オブジェクトが削除されるレコードのインデックスを確認して、削除操作をキャンセルするかを示すことができます、イベント処理メソッドに渡されます。 レコードのインデックスを調べるには、<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>プロパティ。 削除操作をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。 使用しても、キー フィールドと非キー フィールドにアクセスすることができます、<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A>プロパティでは、それぞれします。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、 <xref:System.Web.UI.WebControls.FormView.ItemDeleting> delete 操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[FormViewDeleteEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewDeleteEventArgs/CS/formviewdeleteeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewDeleteEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewDeleteEventArgs/VB/formviewdeleteeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserted">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserted As FormViewInsertedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertedEventHandler ^ ItemInserted;" />
      <MemberSignature Language="F#" Value="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " Usage="member this.ItemInserted : System.Web.UI.WebControls.FormViewInsertedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Insert ボタンがクリックされた場合に、挿入操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemInserted>ときの Insert ボタンにイベント (ボタンをその`CommandName`プロパティが"Insert"に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを挿入します。 これにより、このイベントが発生するたびに、挿入操作の結果を確認してなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>と発生した例外の影響を受けたレコードの数を決定することができるイベント処理メソッドにオブジェクトが渡されます。 挿入操作によって影響を受けたレコードの数を調べるには、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>プロパティを任意の例外が発生したかどうかを判断します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>プロパティ。 挿入されたレコードの値にアクセスする必要がある場合、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>プロパティ。  
  
 既定で、<xref:System.Web.UI.WebControls.FormView>コントロールで指定されたモードに戻る、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>挿入操作の後のプロパティ。 保持する、<xref:System.Web.UI.WebControls.FormView>挿入モードでコントロールを設定、<xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>プロパティを`true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemInserted>挿入操作中に例外が発生したかどうかを決定するイベントです。  
  
 [!code-aspx-csharp[FormViewInsertedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertedEventArgs/CS/formviewinsertedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertedEventArgs/VB/formviewinsertedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemInserting">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemInserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemInserting As FormViewInsertEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewInsertEventHandler ^ ItemInserting;" />
      <MemberSignature Language="F#" Value="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " Usage="member this.ItemInserting : System.Web.UI.WebControls.FormViewInsertEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewInsertEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Insert ボタンがクリックされた場合に、挿入操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemInserting>ときの Insert ボタンにイベント (ボタンをその`CommandName`プロパティが"Insert"に設定) コントロール内でをクリックする前に、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを挿入します。 これにより、このイベントが発生するたびに、データ ソースに挿入する前に、レコードの値をエンコード HTML などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewInsertEventArgs>オブジェクトに送信される省略可能なコマンド引数の値を決定することができるイベント処理メソッドに渡される、<xref:System.Web.UI.WebControls.FormView>コントロールと挿入操作を取り消す必要があることを指定します。 コマンドの引数の値に対応して、`CommandArgument`の Insert ボタンのプロパティ。 ときに、`CommandArgument`の Insert ボタンのプロパティの設定を使用して、<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>コマンドの引数の値を決定するプロパティ。 挿入操作をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。 読み取りまたはを使用して、新しいレコードのフィールド値を変更することができますも、<xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>プロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemInserting>挿入操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[FormViewInsertEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewInsertEventArgs/CS/formviewinserteventargscs.aspx#1)]
 [!code-aspx-vb[FormViewInsertEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewInsertEventArgs/VB/formviewinserteventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewInsertEventArgs.Values" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate ItemTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ItemTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ ItemTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ItemTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.ItemTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView), System.ComponentModel.BindingDirection.TwoWay)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが読み取り専用モードの場合、このコントロールのデータ行にカスタム コンテンツを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.ITemplate" /> コントロールが読み取り専用モードの場合にデータ行のカスタム コンテンツを含む <see cref="T:System.Web.UI.WebControls.FormView" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>コントロールがコントロールの現在のモードに基づいて、データ行を別のテンプレートを表示します (で指定された、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティ)。 次の表では、各モードで使用されるテンプレートを示します。  
  
|モード|テンプレートの表示|  
|----------|-----------------------|  
|編集|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
 使用して、<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>ときに行のデータの独自のユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用モードにします。 項目テンプレートには、通常、レコードのフィールドの値を表示、編集、挿入、およびレコードの削除のためのコマンド ボタン コントロールが含まれます。  
  
 カスタム テンプレート、最初の場所を指定する`<ItemTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<ItemTemplate>`タグ。 コントロールにバインドされているデータ ソースのフィールドの値を表示するには、データ バインディング式を使用します。 データ バインディング式の詳細については、次を参照してください。[データ バインド式の構文](https://msdn.microsoft.com/library/676beb1d-ddfa-4153-bba8-3c86dcb7ceca)します。 組み込みの削除、編集、および新しいレコードの操作を実行するコマンド ボタンを作成すると、テンプレートにコマンド ボタン コントロールを追加、`CommandName`次の表に表示されているプロパティの値のいずれかに設定します。  
  
|コマンド ボタンの種類|CommandName 値|  
|-------------------------|-----------------------|  
|削除|"削除"|  
|編集|[編集]|  
|新規作成|"New"|  
  
 使用して項目テンプレートの外観を制御することができます、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、読み取り専用モードのデータ行用のカスタム テンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdated">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdated As FormViewUpdatedEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdatedEventHandler ^ ItemUpdated;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " Usage="member this.ItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdatedEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Update ボタンがクリックされた場合に、更新操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemUpdated>ときの Update ボタンにイベント (付きのボタンの`CommandName`プロパティが「更新」に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを更新します。 これにより、このイベントが発生するたびに、更新操作の結果を確認してなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>と発生した例外の影響を受けたレコードの数を決定することができるイベント処理メソッドにオブジェクトが渡されます。 更新操作によって影響を受けたレコードの数を調べるには、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>プロパティ。 使用して、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>プロパティを任意の例外が発生したかどうかを判断します。 設定して、イベント処理メソッドで例外が処理されたかどうかを指定することも、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>プロパティ。 更新されたレコードのキー フィールドの値にアクセスする必要がある場合、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>プロパティ。 元と更新された非キー フィールドの値を使用してアクセスできる、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>と<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>プロパティ、それぞれします。  
  
 既定で、<xref:System.Web.UI.WebControls.FormView>コントロールで指定されたモードに戻る、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>更新操作の後のプロパティ。 保持する、<xref:System.Web.UI.WebControls.FormView>編集モードでコントロールを設定、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>プロパティを`true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemUpdated>更新操作中に例外が発生したかどうかを決定するイベントです。  
  
 [!code-aspx-csharp[FormViewUpdatedEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdatedEventArgs/CS/formviewupdatedeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdatedEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdatedEventArgs/VB/formviewupdatedeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventHandler" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ItemUpdating">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ItemUpdating As FormViewUpdateEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewUpdateEventHandler ^ ItemUpdating;" />
      <MemberSignature Language="F#" Value="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " Usage="member this.ItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewUpdateEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の Update ボタンがクリックされた場合に、更新操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.ItemUpdating>ときの Update ボタンにイベント (ボタンをその`CommandName`プロパティが「更新」に設定) コントロール内でをクリックする前に、<xref:System.Web.UI.WebControls.FormView>コントロールは、レコードを更新します。 これにより、このイベントが発生するたびに、データ ソースで更新する前に、レコードの値をエンコード HTML などのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
 A<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>オブジェクトに送信される省略可能なコマンド引数の値を決定することができるイベント処理メソッドに渡される、<xref:System.Web.UI.WebControls.FormView>コントロールと、更新操作をキャンセルするかを指定します。 コマンドの引数の値に対応して、`CommandArgument`の Update ボタンのプロパティ。 ときに、`CommandArgument`の Update ボタンのプロパティの設定を使用して、<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>コマンドの引数の値を決定するプロパティ。 更新操作をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。 読み取りまたはを使用して、ユーザーが入力した新しい値を変更することも、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>と<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>プロパティ。 <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>プロパティには、キーのフィールドが含まれています。 中に、<xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>プロパティには、非キー フィールドが含まれています。 元のキー以外のフィールド値にアクセスする必要がある場合、<xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>プロパティ。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ItemUpdating>更新操作をキャンセルするイベントです。  
  
 [!code-aspx-csharp[FormViewUpdateEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateEventArgs/CS/formviewupdateeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateEventArgs/VB/formviewupdateeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadControlState : obj -&gt; unit" Usage="formView.LoadControlState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> コントロールの状態を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> プロパティが <see langword="false" /> に設定されていても、永続化する必要がある <see cref="P:System.Web.UI.Control.EnableViewState" /> コントロールのプロパティの状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadControlState%2A>メソッドを使用して、負荷の状態を<xref:System.Web.UI.WebControls.FormView>コントロールのプロパティ、永続化する必要がある場合であっても、<xref:System.Web.UI.Control.EnableViewState%2A>プロパティに設定されて`false`します。  
  
> [!NOTE]
>  このメソッドは、拡張する場合に主にコントロールの開発者によって使用されます、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
        <altmember cref="M:System.Web.UI.Control.LoadControlState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="formView.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState"><see cref="T:System.Object" /> コントロールの状態を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</param>
        <summary>以前に保存した <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのビュー ステートを読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.LoadViewState%2A>メソッドの以前に保存したビューステートの読み込みに使用されます、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
> [!NOTE]
>  このメソッドは、拡張する場合に主にコントロールの開発者によって使用されます、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Object" />
        <altmember cref="M:System.Web.UI.Control.LoadViewState(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ModeChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ModeChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ModeChanged;" />
      <MemberSignature Language="F#" Value="member this.ModeChanged : EventHandler " Usage="member this.ModeChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集、挿入、および読み取り専用の各モード間の切り替えを行った場合に、モードの変更後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanged>イベントが発生したときに、<xref:System.Web.UI.WebControls.FormView>コントロールがモードが実際に変更してから、編集、挿入、および読み取り専用モードでは、間の切り替えを試行します。 同期中など、カスタムのルーチンを実行するイベント処理メソッドを提供することができます、<xref:System.Web.UI.WebControls.FormView>をこのイベントが発生するたびに、他のコントロールとコントロール。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ModeChanged>のヘッダー行に現在のモードを表示するイベントを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 [!code-aspx-csharp[FormViewModeChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeChanged/CS/formviewmodechangedcs.aspx#1)]
 [!code-aspx-vb[FormViewModeChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeChanged/VB/formviewmodechangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModeChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.ModeChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ModeChanging As FormViewModeEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewModeEventHandler ^ ModeChanging;" />
      <MemberSignature Language="F#" Value="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " Usage="member this.ModeChanging : System.Web.UI.WebControls.FormViewModeEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewModeEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集、挿入、および読み取り専用の各モード間の切り替えを行う場合に、モードの変更前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.ModeChanging>イベントが発生したときに、<xref:System.Web.UI.WebControls.FormView>コントロールが、モードが実際に変更する前に編集、挿入、および読み取り専用モードでは、間の切り替えを試行します。 構成など、カスタムのルーチンを実行するイベント処理メソッドを提供することができます、<xref:System.Web.UI.WebControls.FormView>特定のモードの制御や、このイベントが発生するたびに、モードの変更をキャンセルします。  
  
 A<xref:System.Web.UI.WebControls.FormViewModeEventArgs>オブジェクトがこのモードを決定することができます、イベント処理メソッドに渡される、<xref:System.Web.UI.WebControls.FormView>を決定する、コントロールの切り替えがかどうか、<xref:System.Web.UI.WebControls.FormView.ModeChanging>ユーザーが編集操作をキャンセルした結果としてイベントが発生したか挿入操作を取り消す必要があることを示します。 新しいモードを調べるには、<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>プロパティ。 使用することも、<xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>プロパティのいずれかに設定することで、代替のモードに切り替えて、<xref:System.Web.UI.WebControls.FormViewMode>列挙値。 使用して、<xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>プロパティをユーザーが編集操作をキャンセルするかどうかを判断します。 挿入操作をキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.ModeChanging>行の場合に、ポケットベルを非表示にするイベント、<xref:System.Web.UI.WebControls.FormView>編集モードに遷移を制御します。  
  
 [!code-aspx-csharp[FormViewModeEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewModeEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewModeEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewModeEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ModifiedOuterTableStylePropertyName">
      <MemberSignature Language="C#" Value="protected internal virtual string ModifiedOuterTableStylePropertyName ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance string ModifiedOuterTableStylePropertyName() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function ModifiedOuterTableStylePropertyName () As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::String ^ ModifiedOuterTableStylePropertyName();" />
      <MemberSignature Language="F#" Value="abstract member ModifiedOuterTableStylePropertyName : unit -&gt; string&#xA;override this.ModifiedOuterTableStylePropertyName : unit -&gt; string" Usage="formView.ModifiedOuterTableStylePropertyName " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに関連付けられているテーブル固有の CSS スタイル規則が既定値に設定されているかどうかを判断します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに関連付けられている既定の CSS スタイル規則。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 テーブルに固有の CSS スタイル規則が使用して既定値に設定されて、 <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>、 <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>、 <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>、 <xref:System.Web.UI.WebControls.FormView.GridLines%2A>、<xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>と<xref:System.Web.UI.WebControls.Style.Font%2A>プロパティ。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnBubbleEvent : obj * EventArgs -&gt; bool" Usage="formView.OnBubbleEvent (source, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>コントロールの下位階層から渡されたイベントを処理します。</summary>
        <returns>イベントをさらにコントロールの上位階層に渡す必要がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=nameWithType>メソッドは、必要に応じて別のコントロール階層から渡されたイベントを処理するために、コントロールによって使用される、<xref:System.Web.UI.Control.RaiseBubbleEvent%2A>メソッド。 プロパティを調べることで、イベントを処理するかどうかを決定しますが、<xref:System.EventArgs>オブジェクトに含まれている、`e`パラメーター。 イベントを処理する必要がある場合、メソッドは、適切な操作を実行します。 その他のイベントは無視され、コントロールの階層構造に渡します。 このメソッドでは、その戻り値を使用してコントロールの階層構造でさらに、イベントを渡すかどうかを示します。  
  
 <xref:System.Web.UI.WebControls.FormView>コントロールがコントロールによって認識されるボタンのいずれかがクリックされたときに、適切な操作を実行するには、このメソッドの基本実装をオーバーライドします。 次の表のコマンドは、ボタン、<xref:System.Web.UI.WebControls.FormView>コントロールによって認識します。  
  
|ボタン|CommandName 値|説明|  
|------------|-----------------------|-----------------|  
|キャンセル|[キャンセル]|操作をキャンセルして、ユーザーが入力した値を破棄する更新操作または挿入に使用されます。 <xref:System.Web.UI.WebControls.FormView>で指定されたモードを返しますの制御、<xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>プロパティ。|  
|削除|"削除"|削除操作でデータ ソースから表示されているレコードを削除するために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemDeleting>と<xref:System.Web.UI.WebControls.FormView.ItemDeleted>イベント。|  
|編集|[編集]|更新操作で配置するために使用、<xref:System.Web.UI.WebControls.FormView>編集モードで制御します。 指定されたコンテンツ、<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>データ行のプロパティが表示されます。|  
|挿入|"Insert"|挿入操作で、ユーザーが指定した値を持つデータ ソースに新しいレコードを挿入しようとするために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemInserting>と<xref:System.Web.UI.WebControls.FormView.ItemInserted>イベント。|  
|新規作成|"New"|挿入操作で配置するために使用、<xref:System.Web.UI.WebControls.FormView>挿入モードで制御します。 指定されたコンテンツ、<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>データ行のプロパティが表示されます。|  
|ページ|"Page"|ページングを実行するページ行のボタンを表すには、ページング操作で使用します。 ページング操作を指定するには、設定、 `CommandArgument` "Next"、"Prev"、"First"、"Last"、または移動先ページのインデックスをボタンのプロパティ。 発生させる、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>と<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>イベント。 **注:** 通常、この種類のボタンは、ポケットベル テンプレートでのみ使用されます。|  
|更新|[更新]|更新操作で、ユーザーが指定した値を持つデータ ソースに表示されているレコードを更新しようとするために使用します。 発生させる、<xref:System.Web.UI.WebControls.FormView.ItemUpdating>と<xref:System.Web.UI.WebControls.FormView.ItemUpdated>イベント。|  
  
 このバージョンのメソッドを返します`true`これらのボタンのいずれかを処理する場合。 イベント バブルの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>拡張するとき、<see cref="T:System.Web.UI.WebControls.FormView" />クラス、独自のイベントを処理するには、このメソッドをオーバーライドできます。 イベントをコントロールの階層構造のさらに渡される必要があるかどうかを示す戻り値を使用してください。</para></block>
        <altmember cref="M:System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="formView.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.Control.Init" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.Control.Init>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnInit%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.Control.Init" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCommand(class System.Web.UI.WebControls.FormViewCommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCommand (e As FormViewCommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCommand(System::Web::UI::WebControls::FormViewCommandEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit&#xA;override this.OnItemCommand : System.Web.UI.WebControls.FormViewCommandEventArgs -&gt; unit" Usage="formView.OnItemCommand e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCommand" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemCommand>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCommand" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewCommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemCreated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemCreated (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemCreated(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemCreated (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemCreated(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemCreated : EventArgs -&gt; unit&#xA;override this.OnItemCreated : EventArgs -&gt; unit" Usage="formView.OnItemCreated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemCreated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemCreated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleted(class System.Web.UI.WebControls.FormViewDeletedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleted (e As FormViewDeletedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleted(System::Web::UI::WebControls::FormViewDeletedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit&#xA;override this.OnItemDeleted : System.Web.UI.WebControls.FormViewDeletedEventArgs -&gt; unit" Usage="formView.OnItemDeleted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemDeleted>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeletedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemDeleting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemDeleting(class System.Web.UI.WebControls.FormViewDeleteEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemDeleting (e As FormViewDeleteEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemDeleting(System::Web::UI::WebControls::FormViewDeleteEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit&#xA;override this.OnItemDeleting : System.Web.UI.WebControls.FormViewDeleteEventArgs -&gt; unit" Usage="formView.OnItemDeleting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemDeleting>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemDeleting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが削除操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemDeleting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewDeleteEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserted">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserted(class System.Web.UI.WebControls.FormViewInsertedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserted (e As FormViewInsertedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserted(System::Web::UI::WebControls::FormViewInsertedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit&#xA;override this.OnItemInserted : System.Web.UI.WebControls.FormViewInsertedEventArgs -&gt; unit" Usage="formView.OnItemInserted e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserted" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemInserted>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserted%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserted" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemInserting">
      <MemberSignature Language="C#" Value="protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemInserting(class System.Web.UI.WebControls.FormViewInsertEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemInserting (e As FormViewInsertEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemInserting(System::Web::UI::WebControls::FormViewInsertEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit&#xA;override this.OnItemInserting : System.Web.UI.WebControls.FormViewInsertEventArgs -&gt; unit" Usage="formView.OnItemInserting e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemInserting" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemInserting>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemInserting%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが挿入操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemInserting" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewInsertEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdated">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdated(class System.Web.UI.WebControls.FormViewUpdatedEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdated (e As FormViewUpdatedEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdated(System::Web::UI::WebControls::FormViewUpdatedEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit&#xA;override this.OnItemUpdated : System.Web.UI.WebControls.FormViewUpdatedEventArgs -&gt; unit" Usage="formView.OnItemUpdated e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemUpdated>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdated%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdatedEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnItemUpdating">
      <MemberSignature Language="C#" Value="protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnItemUpdating(class System.Web.UI.WebControls.FormViewUpdateEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnItemUpdating (e As FormViewUpdateEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnItemUpdating(System::Web::UI::WebControls::FormViewUpdateEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit&#xA;override this.OnItemUpdating : System.Web.UI.WebControls.FormViewUpdateEventArgs -&gt; unit" Usage="formView.OnItemUpdating e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ItemUpdating>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnItemUpdating%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ユーザーが更新操作をキャンセルしなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewUpdateEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanged : EventArgs -&gt; unit&#xA;override this.OnModeChanged : EventArgs -&gt; unit" Usage="formView.OnModeChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ModeChanged>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnModeChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnModeChanging(class System.Web.UI.WebControls.FormViewModeEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnModeChanging (e As FormViewModeEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnModeChanging(System::Web::UI::WebControls::FormViewModeEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit&#xA;override this.OnModeChanging : System.Web.UI.WebControls.FormViewModeEventArgs -&gt; unit" Usage="formView.OnModeChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.ModeChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.ModeChanging>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnModeChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、モードの変更がキャンセルされなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.ModeChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewModeEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanged (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanged(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanged (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanged(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanged : EventArgs -&gt; unit&#xA;override this.OnPageIndexChanged : EventArgs -&gt; unit" Usage="formView.OnPageIndexChanged e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPageIndexChanging">
      <MemberSignature Language="C#" Value="protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPageIndexChanging(class System.Web.UI.WebControls.FormViewPageEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPageIndexChanging (e As FormViewPageEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPageIndexChanging(System::Web::UI::WebControls::FormViewPageEventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit&#xA;override this.OnPageIndexChanging : System.Web.UI.WebControls.FormViewPageEventArgs -&gt; unit" Usage="formView.OnPageIndexChanging e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />。</param>
        <summary><see cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A>メソッドを呼び出して、<xref:System.Web.UI.WebControls.FormView>させるコントロール、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>イベント。 通常は、使用コントロールの開発者によって拡張する場合に、<xref:System.Web.UI.WebControls.FormView>クラス。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
 <xref:System.Web.UI.WebControls.FormView.OnPageIndexChanging%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">このメソッドは、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがデータ ソース コントロールにバインドされていない場合、ページング操作がキャンセルされなかった場合、およびイベントにイベント ハンドラーが登録されていない場合に呼び出されます。</exception>
        <block subset="none" type="overrides"><para>派生クラスで <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" /> メソッドを呼び出してください。</para></block>
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="PageCount">
      <MemberSignature Language="C#" Value="public virtual int PageCount { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageCount" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageCount" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PageCount As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageCount { int get(); };" />
      <MemberSignature Language="F#" Value="member this.PageCount : int" Usage="System.Web.UI.WebControls.FormView.PageCount" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソース内の全レコードを表示するために必要なページの合計数を取得します。</summary>
        <value>基になるデータ ソース内の項目の数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング機能が有効な場合 (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)、使用、<xref:System.Web.UI.WebControls.FormView.PageCount%2A>プロパティを基になるデータ ソース内のレコードの合計数を決定します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView>コントロールは、一度に 1 つのレコードを表示、この値は、データ ソース内のすべてのレコードを表示するために必要なページの合計数に対応します。 データ バインディングが発生した後、この値はまで正確ではありません。  
  
 基になるデータ ソースから現在のレコードのインデックスを調べるには、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PageCount%2A>プロパティをコントロールに表示されるレコードの合計数を決定します。  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndex">
      <MemberSignature Language="C#" Value="public virtual int PageIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 PageIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PageIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int PageIndex { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.PageIndex : int with get, set" Usage="System.Web.UI.WebControls.FormView.PageIndex" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>表示されているページのインデックスを取得または設定します。</summary>
        <value>基になるデータ ソースから <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示されているデータ項目の 0 から始まるインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページング機能が有効な場合 (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`) を使用して、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティを現在表示されているレコードのインデックスを確認します。 プログラムで表示されているレコードを変更するのに、このプロパティを使用することもできます。  
  
> [!NOTE]
>  表示されます。 レコードのページ数を決定するのにこのプロパティを使用するページング機能が有効になっているときにもできます。ただし、このプロパティは 0 から始まることに注意します。  
  
 データ ソース内の項目の合計数を調べるには、<xref:System.Web.UI.WebControls.FormView.PageCount%2A>プロパティ。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティを表示されているレコードのページ インデックスを確認します。  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が -1 未満です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanged">
      <MemberSignature Language="C#" Value="public event EventHandler PageIndexChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler PageIndexChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ PageIndexChanged;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanged : EventHandler " Usage="member this.PageIndexChanged : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> プロパティの値が変更された場合に、ページング操作後に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>ページャー ボタンをクリックしたときにイベント (付きのボタンの`CommandName`プロパティが「ページ」に設定) コントロール内でをクリックした後は、<xref:System.Web.UI.WebControls.FormView>コントロールがページング操作を処理します。 これにより、このイベントが発生するたびに、カスタム ルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ。  
  
 ページ行のページャー ボタンにあるは、通常、<xref:System.Web.UI.WebControls.FormView>コントロール。 このイベントは多くの場合、同期に使用、<xref:System.Web.UI.WebControls.FormView>コントロールを<xref:System.Web.UI.WebControls.GridView>コントロールの動作を設定するか、<xref:System.Web.UI.WebControls.FormView>ページング操作後のコントロール。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PageIndexChanged>に返すイベント、<xref:System.Web.UI.WebControls.FormView>ユーザーが別のレコードに移動したときに、読み取り専用モードにします。  
  
 [!code-aspx-csharp[FormViewPageIndexChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageIndexChanged/CS/formviewpageindexchangedcs.aspx#1)]
 [!code-aspx-vb[FormViewPageIndexChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageIndexChanged/VB/formviewpageindexchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.EventHandler" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PageIndexChanging">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PageIndexChanging As FormViewPageEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::FormViewPageEventHandler ^ PageIndexChanging;" />
      <MemberSignature Language="F#" Value="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " Usage="member this.PageIndexChanging : System.Web.UI.WebControls.FormViewPageEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewPageEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.FormView.PageIndex" /> プロパティの値が変更された場合に、ページング操作前に発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView>生成を制御、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>ページャー ボタンをクリックしたときにイベント (ボタンをその`CommandName`プロパティが「ページ」に設定) コントロール内でをクリックする前に、<xref:System.Web.UI.WebControls.FormView>コントロールがページング操作を処理します。 これにより、このイベントが発生するたびに、ページング操作のキャンセルなどのカスタムのルーチンを実行するイベント処理メソッドを提供できます。  
  
> [!NOTE]
>  プログラムで設定すると、このイベントは発生しませんが、<xref:System.Web.UI.WebControls.FormView.PageIndex%2A>プロパティ。  
  
 ページ行のページャー ボタンにあるは、通常、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 A<xref:System.Web.UI.WebControls.FormViewPageEventArgs>オブジェクトは、イベント処理メソッドをユーザーが選択したページのインデックスを確認して、ページング操作を取り消す必要があることを示すことができます。 ユーザーが選択したページのインデックスを調べるには、<xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>プロパティ。 ページング操作をキャンセルするには設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>のプロパティ、<xref:System.Web.UI.WebControls.FormViewPageEventArgs>オブジェクトを`true`します。  
  
 イベントを処理する方法の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PageIndexChanging>ページング操作をキャンセルするイベントです。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](https://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[FormViewPageEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPageEventArgs/CS/formviewmodeeventargscs.aspx#1)]
 [!code-aspx-vb[FormViewPageEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPageEventArgs/VB/formviewmodeeventargsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventArgs" />
        <altmember cref="T:System.Web.UI.WebControls.FormViewPageEventHandler" />
        <altmember cref="P:System.ComponentModel.CancelEventArgs.Cancel" />
        <altmember cref="P:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="PagerSettings">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.PagerSettings PagerSettings" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property PagerSettings As PagerSettings" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::PagerSettings ^ PagerSettings { System::Web::UI::WebControls::PagerSettings ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerSettings : System.Web.UI.WebControls.PagerSettings" Usage="System.Web.UI.WebControls.FormView.PagerSettings" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.PagerSettings</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.PagerSettings" /> コントロールのページャー ボタンのプロパティを設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.PagerSettings" /> コントロールのページャー ボタンのプロパティを設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>プロパティのページ行の設定を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 ページング機能が有効にすると、ページの行が表示されます (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)、ユーザーがコントロール内の異なるレコードに移動できるようにするコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクトを返します。 フォームのプロパティを宣言によって設定できます`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.PagerSettings>オブジェクト (たとえば、 `PagerSettings-Mode`)。 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerSettings.Mode`)。 通常、一般的な設定には、ページ行の表示モードとカスタム テキストまたはイメージのナビゲーション コントロールが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>プロパティ ページの行のプロパティを指定します。  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle PagerStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PagerStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ PagerStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PagerStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.PagerStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのページ行の外観を設定できる <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールのページ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>プロパティのページ行の外観を制御するため、<xref:System.Web.UI.WebControls.FormView>コントロール。 ページング機能が有効にすると、ページの行が表示されます (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `PagerStyle-ForeColor`)。  
  
-   入れ子、`<PagerRowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `PagerStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>プロパティ ページの行のスタイル設定を指定します。  
  
 [!code-aspx-csharp[FormViewAllowPaging#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewAllowPaging/CS/formviewallowpagingcs.aspx#1)]
 [!code-aspx-vb[FormViewAllowPaging#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewAllowPaging/VB/formviewallowpagingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.RowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PagerTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate PagerTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PagerTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ PagerTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberSignature Language="F#" Value="member this.PagerTemplate : System.Web.UI.ITemplate with get, set" Usage="System.Web.UI.WebControls.FormView.PagerTemplate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.FormView))</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのページ行用のカスタム コンテンツを取得または設定します。</summary>
        <value>ページ行のカスタム コンテンツを含んだ <see cref="T:System.Web.UI.ITemplate" />。 既定値は null で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページャー行を表示する、<xref:System.Web.UI.WebControls.FormView>制御ページング機能が有効な場合 (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティが設定を true に)。 ページの行には、ユーザーがコントロール内の別のページに移動できるようにするコントロールが含まれています。 使用して、独自の UI を定義する、組み込みのページャー行ユーザー インターフェイス (UI) を使用する代わりに、<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>プロパティ。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>プロパティが設定されて、組み込みのページャー行 UI よりも優先されます。  
  
 ページ行用のカスタム テンプレートを指定するには、最初に`<PagerTemplate>`タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。 開始タグと終了の間でテンプレートの内容を一覧表示できますし、`<PagerTemplate>`タグ。 ページ行の外観を制御するには、使用、<xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>プロパティ。  
  
 通常、ボタン コントロールは、ページング操作を実行するページのテンプレートに追加されます。 <xref:System.Web.UI.WebControls.FormView>コントロールは、ときにボタン コントロールのページング操作を実行します。 その`CommandName`"ページ"に設定するプロパティをクリックします。 ボタンの`CommandArgument`プロパティが実行するページング操作の種類を決定します。 次の表に、コマンド引数の値でサポートされている、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
|CommandArgument 値|説明|  
|---------------------------|-----------------|  
|[次へ]|次のページに移動します。|  
|"Prev"|前のページに移動します。|  
|"First"|最初のページに移動します。|  
|"Last"|最後のページに移動します。|  
|整数値|指定したページ番号に移動します。|  
  
   
  
## Examples  
 次の例では、カスタム ページのテンプレートを定義する方法を示します。  
  
 [!code-aspx-csharp[FormViewPagerTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewPagerTemplate/CS/formviewpagertemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewPagerTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewPagerTemplate/VB/formviewpagertemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.ITemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="PerformDataBinding">
      <MemberSignature Language="C#" Value="protected internal override void PerformDataBinding (System.Collections.IEnumerable data);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void PerformDataBinding(class System.Collections.IEnumerable data) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub PerformDataBinding (data As IEnumerable)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void PerformDataBinding(System::Collections::IEnumerable ^ data);" />
      <MemberSignature Language="F#" Value="override this.PerformDataBinding : System.Collections.IEnumerable -&gt; unit" Usage="formView.PerformDataBinding data" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="data" Type="System.Collections.IEnumerable" />
      </Parameters>
      <Docs>
        <param name="data">データ ソースを表す <see cref="T:System.Collections.IEnumerable" />。</param>
        <summary>指定したデータ ソースを <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールにバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PerformDataBinding%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールのコントロールに指定したデータ ソースをバインドします。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><see cref="M:System.Web.UI.WebControls.BaseDataBoundControl.DataBind" />メソッドはシールされているデータをバインドするときに、その他のタスクを実行する必要がある場合は、このメソッドをオーバーライドする必要があります。</para></block>
        <altmember cref="T:System.Collections.IEnumerable" />
      </Docs>
    </Member>
    <Member MemberName="PrepareControlHierarchy">
      <MemberSignature Language="C#" Value="protected internal virtual void PrepareControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void PrepareControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.PrepareControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub PrepareControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void PrepareControlHierarchy();" />
      <MemberSignature Language="F#" Value="abstract member PrepareControlHierarchy : unit -&gt; unit&#xA;override this.PrepareControlHierarchy : unit -&gt; unit" Usage="formView.PrepareControlHierarchy " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのコントロール階層を設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.PrepareControlHierarchy%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールでのコントロール階層を設定する、<xref:System.Web.UI.WebControls.FormView>コントロールがレンダリングされる前に制御します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberSignature Language="F#" Value="abstract member RaisePostBackEvent : string -&gt; unit&#xA;override this.RaisePostBackEvent : string -&gt; unit" Usage="formView.RaisePostBackEvent eventArgument" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">発生する 1 つ以上のイベントの <see cref="T:System.Web.UI.WebControls.CommandEventArgs" /> を作成するためのイベント引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに適切なイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの呼び出し、<xref:System.Web.UI.WebControls.FormView.RaisePostBackEvent%2A>ポストバック イベントが発生したときに、メソッドの適切なイベントを発生させる、<xref:System.Web.UI.WebControls.FormView>コントロール。 この呼び出しは、読み込みと変更通知が完了すると後、は、事前に発生する前に、ページのライフ サイクルで発生します。 作成するこのメソッドが実装されて、<xref:System.Web.UI.WebControls.CommandEventArgs>発生するイベントのオブジェクト。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者によって主に使用されます、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
        <altmember cref="T:System.Web.UI.IPostBackEventHandler" />
        <altmember cref="M:System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)" />
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="formView.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに表示する出力ストリームを格納している <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>クライアントに <see cref="T:System.Web.UI.WebControls.FormView" /> コントロールを表示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.Render%2A>メソッドを指定して、クライアントのブラウザーにサーバー コントロールの内容を表示するために使用<xref:System.Web.UI.HtmlTextWriter>オブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="RenderOuterTable">
      <MemberSignature Language="C#" Value="public virtual bool RenderOuterTable { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RenderOuterTable" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property RenderOuterTable As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool RenderOuterTable { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RenderOuterTable : bool with get, set" Usage="System.Web.UI.WebControls.FormView.RenderOuterTable" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IRenderOuterTableControl.RenderOuterTable</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>インライン スタイルを適用するために、コントロールがレンダリングされる HTML を <see langword="table" /> 要素内に囲むかどうかを示す値を取得または設定します。</summary>
        <value>コントロールがレンダリングされる HTML を <see langword="true" /> 要素内に囲む場合は <see langword="table" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 インライン スタイル プロパティを作成するために<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>をコントロールに表示されるすべての HTML が当てはまる場合、ASP.NET でレンダリングされる HTML を囲む、`table`要素。 外部しない場合`table`レンダリングする要素には、このプロパティを設定する`false`します。 その場合は、インライン、コントロール全体に適用するスタイル プロパティを設定しようとすると、例外がスローされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Row">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow Row { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow Row" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.Row" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property Row As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ Row { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Row : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.Row" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのデータ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールのデータ行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.Row%2A>プロパティをプログラムでアクセス、<xref:System.Web.UI.WebControls.FormViewRow>データ行を表すオブジェクト。 データ行には、現在のモードで表示されたテンプレートに基づいて異なるコンテンツが含まれています (で指定された、<xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>プロパティ)。 現在のモードのテンプレートの内容のみアクセスできます。 次の表では、各モードで使用されるテンプレートを示します。  
  
|モード|テンプレートの表示|  
|----------|-----------------------|  
|編集|<xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|  
|挿入|<xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|  
|読み取り専用|<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.Row%2A>プロパティは後でのみ使用できます、<xref:System.Web.UI.WebControls.FormView>コントロール内のデータ行を作成し、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 このプロパティは通常、例ではカスタム コンテンツを追加するときに、データ行をプログラムで操作する必要がある場合に使用します。 変更しても、<xref:System.Web.UI.WebControls.FormView.Row%2A>プロパティは、後に実行する必要があります、 <xref:System.Web.UI.WebControls.FormView> 。 それ以外のデータ バインド コントロールが表示されて、<xref:System.Web.UI.WebControls.FormView>コントロールには、すべての変更が上書きされます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.Row%2A>の中にデータ行のプロパティにアクセスするプロパティ、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 [!code-aspx-csharp[FormViewRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewRow/CS/formviewrowcs.aspx#1)]
 [!code-aspx-vb[FormViewRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewRow/VB/formviewrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
      </Docs>
    </Member>
    <Member MemberName="RowStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle RowStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RowStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ RowStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.RowStyle : System.Web.UI.WebControls.TableItemStyle" Usage="System.Web.UI.WebControls.FormView.RowStyle" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Content)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが読み取り専用モードの場合にこのコントロールのデータ行の外観を設定できるようにする、<see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトへの参照を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.TableItemStyle" /> コントロールが読み取り専用モードの場合にこのコントロールのデータ行のスタイルを表す <see cref="T:System.Web.UI.WebControls.FormView" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>ときに行のデータの外観を制御するプロパティを<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用 (表示) モード。 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用モードでは、データ行で指定されたユーザー定義コンテンツが表示されます、<xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>プロパティ。 このプロパティは読み取り専用です。ただしのプロパティを設定することができます、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクトを返します。 プロパティは、宣言によって、次のメソッドのいずれかを使用して設定できます。  
  
-   開始タグに属性を配置、 <xref:System.Web.UI.WebControls.FormView> 、フォームのコントロール`Property-Subproperty`ここで、`Subproperty`のプロパティである、<xref:System.Web.UI.WebControls.TableItemStyle>オブジェクト (たとえば、 `RowStyle-ForeColor`)。  
  
-   入れ子、`<RowStyle>`要素開始タグと終了タグの間、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 プロパティがフォームにプログラムで設定することもできます`Property.Subproperty`(たとえば、 `RowStyle.ForeColor`)。 通常、一般的な設定には、カスタムの背景色、前景色、およびフォントのプロパティが含まれます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.RowStyle%2A>行のプロパティをデータのカスタム スタイルを指定するときに、<xref:System.Web.UI.WebControls.FormView>コントロールが読み取り専用モードです。  
  
 [!code-aspx-csharp[FormViewEditItemTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewEditItemTemplate/CS/formviewedititemtemplatecs.aspx#1)]
 [!code-aspx-vb[FormViewEditItemTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewEditItemTemplate/VB/formviewedititemtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableItemStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.ItemTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.EmptyDataRowStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.FooterStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.InsertRowStyle" />
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberSignature Language="F#" Value="override this.SaveControlState : unit -&gt; obj" Usage="formView.SaveControlState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> プロパティが <see langword="false" /> に設定されていても、永続化する必要がある <see cref="P:System.Web.UI.Control.EnableViewState" /> コントロールのプロパティの状態を保存します。</summary>
        <returns>サーバー コントロールの現在のビューステートを返します。 コントロールに関連付けられているビューステートがない場合、メソッドは <see langword="null" /> を返します。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用して、状態の保存を<xref:System.Web.UI.WebControls.FormView>場合であっても、永続化する必要があるコントロールのプロパティ、<xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=nameWithType>プロパティに設定されて`false`します。  
  
> [!NOTE]
>  このメソッドは、拡張するコントロールの開発者によって主に使用されます、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Control.EnableViewState" />
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="formView.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のビューステートを保存します。</summary>
        <returns><see cref="T:System.Object" /> コントロールの保存された状態を格納している <see cref="T:System.Web.UI.WebControls.FormView" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.SaveViewState%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロール、コントロールの状態を保存します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectedValue">
      <MemberSignature Language="C#" Value="public object SelectedValue { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SelectedValue" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectedValue As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SelectedValue { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectedValue : obj" Usage="System.Web.UI.WebControls.FormView.SelectedValue" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードのデータ キー値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のレコードのデータ キー値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティが設定されて、<xref:System.Web.UI.WebControls.FormView>コントロールが自動的に作成されます、<xref:System.Web.UI.WebControls.DataKey>フィールドまたはで示されているフィールドのキー/値ペアを格納しているオブジェクト、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>現在のレコードのプロパティ。 <xref:System.Web.UI.WebControls.DataKey>オブジェクトは、主キー フィールドまたは現在のレコードのフィールドを表しておりに格納されている場合は、<xref:System.Web.UI.WebControls.FormView.DataKey%2A>プロパティ。 使用する代わりに、<xref:System.Web.UI.WebControls.FormView.DataKey%2A>データ キーの値にアクセスするプロパティを使用することができます、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>ショートカット プロパティです。  
  
> [!NOTE]
>  ときに、<xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>プロパティには、複数のフィールドが一覧表示、このプロパティが表示されている最初のフィールドの値を返します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>キー フィールドの値を決定するプロパティ。  
  
 [!code-aspx-csharp[FormViewSelectedValue#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewSelectedValue/CS/formviewselectedvaluecs.aspx#1)]
 [!code-aspx-vb[FormViewSelectedValue#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewSelectedValue/VB/formviewselectedvaluevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKey" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.DataKeyNames" />
      </Docs>
    </Member>
    <Member MemberName="SetPageIndex">
      <MemberSignature Language="C#" Value="public void SetPageIndex (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetPageIndex(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetPageIndex (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetPageIndex(int index);" />
      <MemberSignature Language="F#" Value="member this.SetPageIndex : int -&gt; unit" Usage="formView.SetPageIndex index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">設定するインデックス。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに現在表示されているページのインデックスを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DataItemIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DataItemIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataItemIndex As Integer Implements IDataItemContainer.DataItemIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DataItemIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DataItemIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DataItemIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの説明については、<see cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" /> のトピックを参照してください。</summary>
        <value>表示インデックスを表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.IDataItemContainer> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DataItemIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IDataItemContainer.DisplayIndex">
      <MemberSignature Language="C#" Value="int System.Web.UI.IDataItemContainer.DisplayIndex { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DisplayIndex As Integer Implements IDataItemContainer.DisplayIndex" />
      <MemberSignature Language="C++ CLI" Value="property int System::Web::UI::IDataItemContainer::DisplayIndex { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.IDataItemContainer.DisplayIndex" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IDataItemContainer.DisplayIndex</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>このメンバーの説明については、<see cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" /> のトピックを参照してください。</summary>
        <value>常に 0 を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.IDataItemContainer> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.IDataItemContainer" />
        <altmember cref="P:System.Web.UI.IDataItemContainer.DisplayIndex" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument">イベントの引数。</param>
        <summary>サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのイベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページの呼び出し、<xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>メソッド ポストバック イベントが発生します。 この呼び出しは、読み込みおよび変更の通知が完了すると、後からは、ページが表示されるページのライフ サイクルで発生します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames">
      <MemberSignature Language="C#" Value="string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames" />
      <MemberSignature Language="VB.NET" Value=" Property DataKeyNames As String() Implements IDataBoundControl.DataKeyNames" />
      <MemberSignature Language="C++ CLI" Value="property cli::array &lt;System::String ^&gt; ^ System::Web::UI::WebControls::IDataBoundControl::DataKeyNames { cli::array &lt;System::String ^&gt; ^ get(); void set(cli::array &lt;System::String ^&gt; ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataKeyNames" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataKeyNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示される項目の主キー フィールドの名前が格納された配列を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに表示される項目の主キー フィールドの名前が格納された配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataMember">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember" />
      <MemberSignature Language="VB.NET" Value=" Property DataMember As String Implements IDataBoundControl.DataMember" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataMember { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataMember" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataMember</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースに複数のデータ項目一覧が含まれている場合に、<see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされるデータ項目の一覧の名前を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールがバインドされるデータ項目の一覧の名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSource">
      <MemberSignature Language="C#" Value="object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource" />
      <MemberSignature Language="VB.NET" Value=" Property DataSource As Object Implements IDataBoundControl.DataSource" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Web::UI::WebControls::IDataBoundControl::DataSource { System::Object ^ get(); void set(System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSource" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSource</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータの一覧を格納しているオブジェクトを取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータの一覧を格納しているオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceID">
      <MemberSignature Language="C#" Value="string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID" />
      <MemberSignature Language="VB.NET" Value=" Property DataSourceID As String Implements IDataBoundControl.DataSourceID" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceID { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceID" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceID</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース コントロールの ID を取得または設定します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース コントロールの ID。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject">
      <MemberSignature Language="C#" Value="System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataSourceObject As IDataSource Implements IDataBoundControl.DataSourceObject" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::IDataSource ^ System::Web::UI::WebControls::IDataBoundControl::DataSourceObject { System::Web::UI::IDataSource ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundControl.DataSourceObject" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundControl.DataSourceObject</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.IDataSource</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが取得するデータ項目の一覧を格納しているデータ ソース オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.DataKey">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property DataKey As DataKey Implements IDataBoundItemControl.DataKey" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataKey ^ System::Web::UI::WebControls::IDataBoundItemControl::DataKey { System::Web::UI::WebControls::DataKey ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.DataKey" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.DataKey</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataKey</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の行のデータ キー値を表すオブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロール内の行のデータ キー値を表すオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IDataBoundItemControl.Mode">
      <MemberSignature Language="C#" Value="System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Mode As DataBoundControlMode Implements IDataBoundItemControl.Mode" />
      <MemberSignature Language="C++ CLI" Value="property System::Web::UI::WebControls::DataBoundControlMode System::Web::UI::WebControls::IDataBoundItemControl::Mode { System::Web::UI::WebControls::DataBoundControlMode get(); };" />
      <MemberSignature Language="F#" Usage="System.Web.UI.WebControls.IDataBoundItemControl.Mode" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IDataBoundItemControl.Mode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataBoundControlMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のモードを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの現在のモード。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.FormView> のインスタンスが <xref:System.Web.UI.WebControls.IDataBoundControl> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions">
      <MemberSignature Language="C#" Value="System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Web.UI.PostBackOptions System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(class System.Web.UI.WebControls.IButtonControl buttonControl) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Function GetPostBackOptions (buttonControl As IButtonControl) As PostBackOptions Implements IPostBackContainer.GetPostBackOptions" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Web::UI::PostBackOptions ^ System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System::Web::UI::WebControls::IButtonControl ^ buttonControl) = System::Web::UI::WebControls::IPostBackContainer::GetPostBackOptions;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="buttonControl" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="buttonControl">サーバーにポスト バックされるボタン コントロール。</param>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのポストバック イベントのオプションを確認します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールのポストバック イベントのオプション。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.System%23Web%23UI%23WebControls%23IPostBackContainer%23GetPostBackOptions%2A>メソッドは、ヘルパー メソッドによって呼び出される、<xref:System.Web.UI.WebControls.FormView>コントロールを作成する、<xref:System.Web.UI.PostBackOptions>コントロールのポストバック イベントのオプションを格納しているオブジェクト。 <xref:System.Web.UI.PostBackOptions>オブジェクトは通常のパラメーターとして使用、<xref:System.Web.UI.Page.GetPostBackEventReference%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="buttonControl" /> パラメーターに格納されているオブジェクトが <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException"><paramref name="buttonControl" /> の <see cref="P:System.Web.UI.WebControls.IButtonControl.CausesValidation" /> プロパティが <see langword="true" /> です。</exception>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberSignature Language="F#" Value="member this.TagKey : System.Web.UI.HtmlTextWriterTag" Usage="System.Web.UI.WebControls.FormView.TagKey" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールの <see cref="T:System.Web.UI.HtmlTextWriterTag" /> 値を取得します。</summary>
        <value>常に <see langword="HtmlTextWriterTag.Table" /> を返します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FormView.TagKey%2A>プロパティにより、適切な HTML マークアップを記述する出力ストリーム、<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para>指定するには、このプロパティをオーバーライドできます<see cref="T:System.Web.UI.HtmlTextWriterTag" />派生コントロールに使用する値。</para></block>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
        <altmember cref="P:System.Web.UI.WebControls.WebControl.TagKey" />
      </Docs>
    </Member>
    <Member MemberName="TopPagerRow">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FormViewRow TopPagerRow" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property TopPagerRow As FormViewRow" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::FormViewRow ^ TopPagerRow { System::Web::UI::WebControls::FormViewRow ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.TopPagerRow : System.Web.UI.WebControls.FormViewRow" Usage="System.Web.UI.WebControls.FormView.TopPagerRow" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FormViewRow</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの上部に表示されるページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FormViewRow" /> コントロールの上部のページ行を表す <see cref="T:System.Web.UI.WebControls.FormView" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ページングが有効な場合 (ときに、<xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>プロパティに設定されて`true`)、ページャー行と呼ばれる追加の行がで自動的に表示されます、<xref:System.Web.UI.WebControls.FormView>コントロール。 ページの行には、ユーザーが、他のレコードに移動できるようにし、上部、下部、または上部との両方で、コントロールの下部に表示できるコントロールが含まれています。 使用して、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>プロパティをプログラムでアクセス、<xref:System.Web.UI.WebControls.FormViewRow>上部のページ行を表すオブジェクトを<xref:System.Web.UI.WebControls.FormView>コントロール。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>プロパティは後でのみ使用可能な<xref:System.Web.UI.WebControls.FormView>コントロールは、上部のページ行を作成、<xref:System.Web.UI.WebControls.FormView.ItemCreated>イベント。  
  
 このプロパティは通常、例ではカスタム コンテンツを追加するときに、上部のページ行をプログラムで操作する必要がある場合に使用します。 変更しても、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>プロパティは、後に実行する必要があります、 <xref:System.Web.UI.WebControls.FormView> 。 それ以外のデータにバインドされているコントロールが表示されて、<xref:System.Web.UI.WebControls.FormView>コントロールには、すべての変更が上書きされます。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>の上部に表示されるページ行にアクセスするプロパティを<xref:System.Web.UI.WebControls.FormView>コントロール。 他のコンテンツ ページの行が更新されます。  
  
 [!code-aspx-csharp[FormViewTopPagerRow#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewTopPagerRow/CS/formviewtoppagerrowcs.aspx#1)]
 [!code-aspx-vb[FormViewTopPagerRow#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewTopPagerRow/VB/formviewtoppagerrowvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FormViewRow" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.AllowPaging" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageCount" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PageIndex" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerSettings" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerStyle" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.PagerTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.FormView.BottomPagerRow" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemCreated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanged" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.PageIndexChanging" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="formView.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールに対するビューステートの変更の追跡と保存を始める開始点にマークを付けます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドをオーバーライドして、コントロールのビューステートの一部としてコントロールに対する変更の追跡と保存を開始する開始点をマークします。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
        <altmember cref="P:System.Web.UI.Control.ViewState" />
      </Docs>
    </Member>
    <Member MemberName="UpdateItem">
      <MemberSignature Language="C#" Value="public virtual void UpdateItem (bool causesValidation);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void UpdateItem(bool causesValidation) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub UpdateItem (causesValidation As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void UpdateItem(bool causesValidation);" />
      <MemberSignature Language="F#" Value="abstract member UpdateItem : bool -&gt; unit&#xA;override this.UpdateItem : bool -&gt; unit" Usage="formView.UpdateItem causesValidation" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="causesValidation" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="causesValidation">このメソッドが呼び出されたときにページの検証を実行する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>データ ソースの現在のレコードを更新します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.FormView>コントロールが編集モードでは、使用、<xref:System.Web.UI.WebControls.FormView.UpdateItem%2A>メソッドをプログラムでデータ ソースの現在のレコードを更新します。 このメソッドは通常の外部から現在のレコードを更新する必要がある場合に使用、<xref:System.Web.UI.WebControls.FormView>など、ページ上の異なるコントロールから制御します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.FormView>このメソッドが呼び出された、それ以外の場合、コントロールが編集モードである必要があります、<xref:System.Web.HttpException>がスローされます。  
  
 更新操作前にページの検証を実行するかどうかを指定するには、使用、`causesValidation`パラメーター。 発生させるこのメソッドを呼び出す、<xref:System.Web.UI.WebControls.FormView.ItemUpdated>と<xref:System.Web.UI.WebControls.FormView.ItemUpdating>イベント。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.FormView.UpdateItem%2A>にプログラムでの現在のレコードを更新する方法、<xref:System.Web.UI.WebControls.FormView>データ ソース内のコントロール。  
  
 [!code-aspx-csharp[FormViewUpdateItem#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FormViewUpdateItem/CS/formviewupdateitemcs.aspx#1)]
 [!code-aspx-vb[FormViewUpdateItem#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FormViewUpdateItem/VB/formviewupdateitemvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><see cref="T:System.Web.UI.WebControls.FormView" /> コントロールが編集モードではないときに、このメソッドが呼び出されています。  
  
または 
<see cref="T:System.Web.UI.DataSourceView" /> コントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.FormView" /> オブジェクトが null です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FormView.EditItemTemplate" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdated" />
        <altmember cref="E:System.Web.UI.WebControls.FormView.ItemUpdating" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.DeleteItem" />
        <altmember cref="M:System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)" />
      </Docs>
    </Member>
    <Member MemberName="UpdateMethod">
      <MemberSignature Language="C#" Value="public virtual string UpdateMethod { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UpdateMethod" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UpdateMethod As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UpdateMethod { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.UpdateMethod : string with get, set" Usage="System.Web.UI.WebControls.FormView.UpdateMethod" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールが更新操作を実行するときに呼び出されるページのメソッドの名前を取得または設定します。</summary>
        <value>コントロールが更新操作を実行するときに呼び出されるページ上のメソッドの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Web フォームでモデル バインドの使用に関するチュートリアルについては、次を参照してください。[モデル バインディングと Web フォーム](/aspnet/web-forms/overview/presenting-and-managing-data/model-binding/retrieving-data)します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>