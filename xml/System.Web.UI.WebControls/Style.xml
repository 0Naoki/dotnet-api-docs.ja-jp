<Type Name="Style" FullName="System.Web.UI.WebControls.Style">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7da88f648f89a160af4f1d4aecafd2e29e2b96c2" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600256" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Style : System.ComponentModel.Component, System.Web.UI.IStateManager" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Style extends System.ComponentModel.Component implements class System.Web.UI.IStateManager" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Style" />
  <TypeSignature Language="VB.NET" Value="Public Class Style&#xA;Inherits Component&#xA;Implements IStateManager" />
  <TypeSignature Language="C++ CLI" Value="public ref class Style : System::ComponentModel::Component, System::Web::UI::IStateManager" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.Component</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IStateManager</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.ToolboxItem(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.EmptyStringExpandableObjectConverter))</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>Web サーバー コントロールのスタイルを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Style>クラスは、Web サーバー コントロールの外観を制御し、共通の外観を指定する複数の Web サーバー コントロールに適用できるプロパティをカプセル化します。 コントロールのフォントの色と背景色を設定して指定できます、<xref:System.Web.UI.WebControls.WebControl.BackColor%2A>と<xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>プロパティ、それぞれします。 枠線を表示できるコントロールを制御できます境界線の幅、罫線のスタイル、および境界線の色を設定して、 <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>、 <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>、および<xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>プロパティです。 使用して、Web サーバー コントロールのサイズを指定することも、<xref:System.Web.UI.WebControls.WebControl.Height%2A>と<xref:System.Web.UI.WebControls.WebControl.Width%2A>プロパティです。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Style.BackColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.ForeColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderWidth" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderStyle" />
    <altmember cref="P:System.Web.UI.WebControls.Style.BorderColor" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Height" />
    <altmember cref="P:System.Web.UI.WebControls.Style.Width" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Style" /> クラスの新しいインスタンスを初期化します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>既定値を使用して <see cref="T:System.Web.UI.WebControls.Style" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.Style>クラスです。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Style (System.Web.UI.StateBag bag);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.StateBag bag) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.#ctor(System.Web.UI.StateBag)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (bag As StateBag)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Style(System::Web::UI::StateBag ^ bag);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="bag" Type="System.Web.UI.StateBag" />
      </Parameters>
      <Docs>
        <param name="bag">スタイル情報の格納先の状態バッグを表す <see cref="T:System.Web.UI.StateBag" />。</param>
        <summary>指定した状態バッグ情報を使用して、<see cref="T:System.Web.UI.WebControls.Style" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.Style>クラスを使用して、<xref:System.Web.UI.StateBag?displayProperty=nameWithType>によって指定された、`bag`パラメーター。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.StateBag" />
      </Docs>
    </Member>
    <MemberGroup MemberName="AddAttributesToRender">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> に表示する必要のある HTML 属性およびスタイルを追加します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> に表示する必要のある HTML 属性およびスタイルを追加します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアント上の Web サーバー コントロールの属性およびスタイルを表示するために通常を呼び出す、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>それぞれを挿入するメソッドの属性およびスタイル指定に個別に、<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>出力ストリーム。 このメソッドをプロセスを簡略化には、すべての呼び出しをカプセル化、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>すべての属性と、Web サーバー コントロールに関連付けられたスタイル。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 1 つのメソッドの呼び出しでストリームを出力します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="public virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer, System.Web.UI.WebControls.WebControl owner);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer, class System.Web.UI.WebControls.WebControl owner) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.AddAttributesToRender(System.Web.UI.HtmlTextWriter,System.Web.UI.WebControls.WebControl)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub AddAttributesToRender (writer As HtmlTextWriter, owner As WebControl)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer, System::Web::UI::WebControls::WebControl ^ owner);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
        <Parameter Name="owner" Type="System.Web.UI.WebControls.WebControl" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <param name="owner">
          <see cref="T:System.Web.UI.WebControls.WebControl" /> に関連付けられた Web サーバー コントロールを表す <see cref="T:System.Web.UI.WebControls.WebControl" /> または <see cref="T:System.Web.UI.WebControls.Style" /> 派生オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> と Web サーバー コントロールに、表示する必要のある HTML 属性およびスタイルを追加します。 このメソッドは、主にコントロールの開発者によって使用されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クライアント上の Web サーバー コントロールの属性およびスタイルを表示するために通常を呼び出す、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>それぞれを挿入するメソッドの属性およびスタイル指定に個別に、<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>出力ストリーム。 このメソッドをプロセスを簡略化には、すべての呼び出しをカプセル化、<xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=nameWithType>と<xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=nameWithType>すべての属性と、Web サーバー コントロールに関連付けられたスタイル。 すべての属性およびスタイルは挿入、 <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> 1 つのメソッドの呼び出しでストリームを出力します。 このメソッドは、通常、適切な属性を挿入する派生クラス内でコントロールの開発者によってオーバーライドし、にスタイル、<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>クラスの出力ストリーム。  
  
   
  
## Examples  
 次の例から派生するクラスを作成する方法を示します、<xref:System.Web.UI.WebControls.WebControl>クラスです。 基本実装、<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A>メソッドをオーバーライドして派生クラスに該当する属性を追加、<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>出力ストリーム。  
  
 [!code-csharp[WebControlAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/WebControlAddAttributesToRender/CS/addattrib.cs#1)]
 [!code-vb[WebControlAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/WebControlAddAttributesToRender/VB/addattrib.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddAttribute(System.String,System.String)" />
        <altmember cref="M:System.Web.UI.HtmlTextWriter.AddStyleAttribute(System.String,System.String)" />
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="BackColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BackColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BackColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BackColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BackColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BackColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの背景色を取得または設定します。</summary>
        <value>コントロールの背景色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.BackColor%2A>プロパティを Web サーバー コントロールの背景色を指定します。 このプロパティを使用して、<xref:System.Drawing.Color?displayProperty=nameWithType>オブジェクト。  
  
> [!NOTE]
>  このプロパティは、のみ特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>このプロパティを表示します。 に対しては機能も<xref:System.Web.UI.WebControls.CheckBoxList>、<xref:System.Web.UI.WebControls.RadioButtonList>と<xref:System.Web.UI.WebControls.DataList>場合その`RepeatLayout`プロパティは`RepeatLayout.Table`、および not`RepeatLayout.Flow`です。  
  
 一般に、その出力でのみ制御、`<table>`タグは、ほとんどのコントロールが HTML 4.0 でできる一方に、HTML 3.2 での背景色を表示できます。  
  
 としてレンダリングするコントロールの`<span>`タグ (を含む<xref:System.Web.UI.WebControls.Label>、すべて検証コントロール、およびリスト コントロールとその`RepeatLayout`プロパティに設定`RepeatLayout.Flow`)、このプロパティは Microsoft Internet explorer 5 以降のバージョンのではなく Microsoft Internet Explorer version 4 では動作します。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color BorderColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color BorderColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderColor" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color BorderColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線の色を取得または設定します。</summary>
        <value>コントロールの境界線の色を表す <see cref="T:System.Drawing.Color" />。 既定値は <see cref="F:System.Drawing.Color.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.BorderColor%2A>プロパティを Web サーバー コントロールの境界線の色を指定します。 このプロパティを使用して、<xref:System.Drawing.Color?displayProperty=nameWithType>オブジェクト。  
  
> [!NOTE]
>  このプロパティは、のみ特定のコントロールで表示されます。 たとえば、 <xref:System.Web.UI.WebControls.Table>、 <xref:System.Web.UI.WebControls.Panel>、 <xref:System.Web.UI.WebControls.DataGrid>、 <xref:System.Web.UI.WebControls.Calendar>、および<xref:System.Web.UI.WebControls.ValidationSummary>このプロパティを表示します。 に対しては機能も<xref:System.Web.UI.WebControls.CheckBoxList>、 <xref:System.Web.UI.WebControls.RadioButtonList>、および<xref:System.Web.UI.WebControls.DataList>場合、`RepeatLayout`プロパティは`RepeatLayout.Table`および not`RepeatLayout.Flow`です。 ただし、これは、`bordercolor`属性は、すべてのブラウザーで動作しない可能性があります。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
        <altmember cref="T:System.Web.UI.WebControls.Table" />
        <altmember cref="T:System.Web.UI.WebControls.Panel" />
        <altmember cref="T:System.Web.UI.WebControls.DataGrid" />
        <altmember cref="T:System.Web.UI.WebControls.Calendar" />
        <altmember cref="T:System.Web.UI.WebControls.ValidationSummary" />
        <altmember cref="T:System.Web.UI.WebControls.CheckBoxList" />
        <altmember cref="T:System.Web.UI.WebControls.RadioButtonList" />
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
        <altmember cref="T:System.Web.UI.WebControls.RepeatLayout" />
      </Docs>
    </Member>
    <Member MemberName="BorderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.BorderStyle BorderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderStyle" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderStyle As BorderStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::BorderStyle BorderStyle { System::Web::UI::WebControls::BorderStyle get(); void set(System::Web::UI::WebControls::BorderStyle value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.BorderStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線スタイルを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値のいずれか。 既定値は、<see langword="NotSet" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.BorderStyle%2A>プロパティを Web サーバー コントロールの境界線スタイルを指定します。 このプロパティのいずれかを使用して、<xref:System.Web.UI.WebControls.BorderStyle>列挙値。 次の表は、使用可能な値を一覧表示します。  
  
|枠線の種類|説明|  
|------------------|-----------------|  
|`NotSet`|罫線のスタイルが設定されていません。|  
|`None`|境界線なし|  
|`Dotted`|点線の境界線。|  
|`Dashed`|破線の境界線。|  
|`Solid`|実線の境界線。|  
|`Double`|二重実線の境界線です。|  
|`Groove`|境界線をくぼみ表示にするための下降側の境界線。|  
|`Ridge`|境界線を浮き出して表示するための上昇側の境界線。|  
|`Inset`|コントロールをくぼんで表示するためのくぼみ表示の境界線。|  
|`Outset`|コントロールを浮き出して表示するためのアウトセット境界線。|  
  
> [!NOTE]
>  このプロパティは、一部のブラウザーでは表示されません。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が <see cref="T:System.Web.UI.WebControls.BorderStyle" /> 列挙値の 1 つではありません。</exception>
        <altmember cref="T:System.Web.UI.WebControls.BorderStyle" />
      </Docs>
    </Member>
    <Member MemberName="BorderWidth">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit BorderWidth { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit BorderWidth" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.BorderWidth" />
      <MemberSignature Language="VB.NET" Value="Public Property BorderWidth As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit BorderWidth { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの境界線の幅を取得または設定します。</summary>
        <value>Web サーバー コントロールの境界線の幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> で、このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.BorderWidth%2A>プロパティ、コントロールの境界線の幅を指定します。  
  
> [!NOTE]
>  このプロパティは、すべての Web サーバー コントロールでは機能しません。 など、テーブルとして表示するコントロールにのみ適用されます<xref:System.Web.UI.WebControls.Table>と<xref:System.Web.UI.WebControls.DataGrid>です。  
  
 このプロパティは、<xref:System.Web.UI.WebControls.Unit>オブジェクト。 場合、<xref:System.Web.UI.WebControls.Unit.Value%2A>のプロパティ、<xref:System.Web.UI.WebControls.Unit>負の数値を含む、例外がスローされます。  
  
> [!NOTE]
>  罫線の幅は、Microsoft Internet Explorer バージョン 5 以降のブラウザーのピクセル単位でのみ公開できます。 すべてのユニットの種類は、Microsoft Internet Explorer 5 およびそれ以降のバージョンでサポートされます。 詳細については、特定のコントロールを参照してください。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">指定した境界線の幅が負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="CopyFrom">
      <MemberSignature Language="C#" Value="public virtual void CopyFrom (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyFrom(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CopyFrom (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyFrom(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">コピーするスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.Style" /> のスタイル プロパティをこのメソッドの呼び出し元である <see cref="T:System.Web.UI.WebControls.Style" /> クラスのインスタンスに複製します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.CopyFrom%2A>メソッドを指定のスタイル プロパティを複製する<xref:System.Web.UI.WebControls.Style>のインスタンスに、<xref:System.Web.UI.WebControls.Style>からこのメソッドが呼び出されるクラスです。  
  
 使用して、スタイルが登録される<xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>を使用して、コピーと<xref:System.Web.UI.WebControls.Style.CopyFrom%28System.Web.UI.WebControls.Style%29?displayProperty=nameWithType>、のみ、<xref:System.Web.UI.WebControls.Style.CssClass%2A>プロパティは変換先、個々 のすべてのプロパティにコピーします。 これは、コピー先のスタイルのプロパティを点検しするか、予期しない結果に可能性があります。 使用している場合など、<xref:System.Web.UI.WebControls.FontInfo.CopyFrom%28System.Web.UI.WebControls.FontInfo%29?displayProperty=nameWithType>フォント情報のコピー元、<xref:System.Web.UI.WebControls.Style.Font%2A>のプロパティ、<xref:System.Web.UI.WebControls.Style>登録されている、スタイル、フォントの個々 の設定は得られません。  
  
> [!CAUTION]
>  現在のインスタンスに設定されているものも含め、すべてのプロパティ、<xref:System.Web.UI.WebControls.Style>クラス、関連付けられているプロパティで置き換えられます、<xref:System.Web.UI.WebControls.Style>によって指定された、`s`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> が設定されています。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="CssClass">
      <MemberSignature Language="C#" Value="public string CssClass { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.CssClass" />
      <MemberSignature Language="VB.NET" Value="Public Property CssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CssClass { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.CssClassProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>クライアントで Web サーバー コントロールによって表示されるカスケード スタイル シート (CSS: Cascading Style Sheet) クラスを取得または設定します。</summary>
        <value>クライアントで Web サーバー コントロールによって表示される CSS クラス。 既定値は、<see cref="F:System.String.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.CssClass%2A>プロパティを Web サーバー コントロールのクライアントで表示するために、CSS クラスを指定します。 このプロパティは、すべてのコントロールのブラウザーに表示されます。 常としてレンダリングされます、`class`属性に、ブラウザーに関係なく、します。  
  
 たとえば、次の Web サーバー コントロールの宣言があるとします。  
  
```  
<asp:TextBox id="TextBox1" ForeColor="Red" CssClass="class1" />  
```  
  
 次の HTML は Web サーバー コントロールの宣言は、以前のクライアントでレンダリングされます。  
  
```  
<input type=text class="class1" style="ForeColor:red">  
```  
  
> [!NOTE]
>  CSS、設定をサポートしていないブラウザーで、<xref:System.Web.UI.WebControls.Style.CssClass%2A>プロパティには影響はありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="FillStyleAttributes">
      <MemberSignature Language="C#" Value="protected virtual void FillStyleAttributes (System.Web.UI.CssStyleCollection attributes, System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void FillStyleAttributes(class System.Web.UI.CssStyleCollection attributes, class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.FillStyleAttributes(System.Web.UI.CssStyleCollection,System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub FillStyleAttributes (attributes As CssStyleCollection, urlResolver As IUrlResolutionService)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void FillStyleAttributes(System::Web::UI::CssStyleCollection ^ attributes, System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="attributes" Type="System.Web.UI.CssStyleCollection" />
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="attributes">スタイル プロパティを追加する対象の <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクト。</param>
        <param name="urlResolver">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</param>
        <summary>指定されたオブジェクトのスタイル プロパティを <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクトに追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.FillStyleAttributes%2A>を指定したオブジェクトのスタイル プロパティを追加するメソッドを<xref:System.Web.UI.CssStyleCollection?displayProperty=nameWithType>オブジェクト。 実装する必要がありますを指定したオブジェクト<xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>です。 すべてのクラスから派生した<xref:System.Web.UI.Control>実装<xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Font">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.FontInfo Font { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.FontInfo Font" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Font" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Font As FontInfo" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::FontInfo ^ Font { System::Web::UI::WebControls::FontInfo ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.FontInfo</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールに関連付けられたフォント プロパティを取得します。</summary>
        <value>Web サーバー コントロールのフォント プロパティを表す <see cref="T:System.Web.UI.WebControls.FontInfo" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.Font%2A>プロパティを Web サーバー コントロールのフォントのプロパティを指定します。 このプロパティが含まれていますサブプロパティ アクセス可能なには宣言の形式で`Property-Subproperty`(たとえば`Font-Bold`) またはの形式でプログラムによって`Property.Subproperty`(たとえば`Font.Bold`)。  
  
 1 つを除くすべてのサブプロパティは、Microsoft Internet Explorer のすべてのコントロール バージョン 4 の前にブラウザーで表示されます。 : <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Name%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Names%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>、 <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>、および<xref:System.Web.UI.WebControls.FontInfo.Size%2A>(ただしなど、フォント サイズの名前のみ`Small`、`Smaller`は動作)。  
  
> [!NOTE]
>  これらのサブプロパティは、Microsoft Internet Explorer version 4 より前のブラウザーでレンダリング、レンダリングされる HTML は以降のブラウザーで異なるです。 スタイル属性としてレンダリングでは、代わりにこれらのサブプロパティとしてレンダリングされます、HTML 要素など`<b>`と`<font>`です。  
  
 一部のブラウザーに表示されない 1 つのサブプロパティが<xref:System.Web.UI.WebControls.FontInfo.Overline%2A>です。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.FontInfo" />
      </Docs>
    </Member>
    <Member MemberName="ForeColor">
      <MemberSignature Language="C#" Value="public System.Drawing.Color ForeColor { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Drawing.Color ForeColor" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ForeColor" />
      <MemberSignature Language="VB.NET" Value="Public Property ForeColor As Color" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Drawing::Color ForeColor { System::Drawing::Color get(); void set(System::Drawing::Color value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Drawing.Color), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.TypeConverter(typeof(System.Web.UI.WebControls.WebColorConverter))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Drawing.Color</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの前景色 (通常はテキストの色) を取得または設定します。</summary>
        <value>コントロールの前景色を表す <see cref="T:System.Drawing.Color" />。 既定値は、<see cref="F:System.Drawing.Color.Empty" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.ForeColor%2A>プロパティを Web サーバー コントロールの前景色を指定します。 通常、前景色はテキストの色を表します。 このプロパティはブラウザーに表示 Microsoft Internet Explorer のすべてのコントロール、version 4 より前を除く、 <xref:System.Web.UI.WebControls.Image>、 <xref:System.Web.UI.WebControls.AdRotator>、<xref:System.Web.UI.WebControls.HyperLink>と<xref:System.Web.UI.WebControls.LinkButton>です。  
  
> [!NOTE]
>  スタイルをサポートしているブラウザーの場合は、このプロパティは、フォント要素としてレンダリングされます。  
  
   
  
## Examples  
 この例で使用する方法、<xref:System.Web.UI.WebControls.Style>一度に複数のコントロールのスタイル プロパティを変更するオブジェクト。 いずれかされるたびに、<xref:System.Web.UI.WebControls.Style>プロパティの値の変更、各コントロールを呼び出す必要があります、<xref:System.Web.UI.WebControls.WebControl.ApplyStyle%2A>メソッドです。 含まれているすべてのコントロールが示されているすべてのプロパティをサポートすることに注意してください。 コントロールが特定のプロパティをサポートしていない場合、プロパティ値が変更されたときに、コントロールの外観は変更されません。  
  
> [!NOTE]
>  次のコード サンプルでは、単一ファイルのコード モデルを使用し、正常に動作しない場合は、分離コード ファイルに直接コピーします。 このコード サンプルは、.aspx 拡張子を持つ空のテキスト ファイルにコピーする必要があります。 Web フォームのコード モデルの詳細については、次を参照してください。 [ASP.NET Web フォーム ページのコード モデル](http://msdn.microsoft.com/library/81b13e7a-b95b-4285-906f-d2dd77411417)です。  
  
 [!code-aspx-csharp[StyleClass#1](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#1)]
 [!code-aspx-vb[StyleClass#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#1)]  
[!code-aspx-csharp[StyleClass#3](~/samples/snippets/csharp/VS_Snippets_WebNet/StyleClass/CS/styleclasscs.aspx#3)]
[!code-aspx-vb[StyleClass#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/StyleClass/VB/styleclassvb.aspx#3)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Drawing.Color" />
      </Docs>
    </Member>
    <Member MemberName="GetStyleAttributes">
      <MemberSignature Language="C#" Value="public System.Web.UI.CssStyleCollection GetStyleAttributes (System.Web.UI.IUrlResolutionService urlResolver);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.UI.CssStyleCollection GetStyleAttributes(class System.Web.UI.IUrlResolutionService urlResolver) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.GetStyleAttributes(System.Web.UI.IUrlResolutionService)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStyleAttributes (urlResolver As IUrlResolutionService) As CssStyleCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::CssStyleCollection ^ GetStyleAttributes(System::Web::UI::IUrlResolutionService ^ urlResolver);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.CssStyleCollection</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="urlResolver" Type="System.Web.UI.IUrlResolutionService" />
      </Parameters>
      <Docs>
        <param name="urlResolver">現在の場所 (URL) のコンテキスト情報を格納している <see cref="T:System.Web.UI.IUrlResolutionService" /> 実装オブジェクト。</param>
        <summary>指定された <see cref="T:System.Web.UI.CssStyleCollection" /> 実装オブジェクトの <see cref="T:System.Web.UI.IUrlResolutionService" /> オブジェクトを取得します。</summary>
        <returns>
          <see cref="T:System.Web.UI.CssStyleCollection" /> オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.GetStyleAttributes%2A>を取得する方法、<xref:System.Web.UI.CssStyleCollection?displayProperty=nameWithType>の指定されたオブジェクト<xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>-オブジェクトを実装します。 すべてのクラスから派生した<xref:System.Web.UI.Control>実装<xref:System.Web.UI.IUrlResolutionService?displayProperty=nameWithType>です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.CssStyleCollection" />
        <altmember cref="T:System.Web.UI.IUrlResolutionService" />
      </Docs>
    </Member>
    <Member MemberName="Height">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Height { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Height" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Height" />
      <MemberSignature Language="VB.NET" Value="Public Property Height As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit Height { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの高さを取得または設定します。</summary>
        <value>Web サーバー コントロールの高さを表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.Height%2A>プロパティを指定するか、Web サーバー コントロールの高さを決定します。 このプロパティは、<xref:System.Web.UI.WebControls.Unit>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Unit.Value" /> の <see cref="T:System.Web.UI.WebControls.Unit" /> プロパティが負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
    <Member MemberName="IsEmpty">
      <MemberSignature Language="C#" Value="public virtual bool IsEmpty { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsEmpty" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsEmpty" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property IsEmpty As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool IsEmpty { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>保護されているプロパティ。 スタイル要素が状態バッグで定義されているかどうかを示す値を取得します。</summary>
        <value>
          状態バッグでスタイル要素が定義されていない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTrackingViewState">
      <MemberSignature Language="C#" Value="protected bool IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property IsTrackingViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property bool IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル要素が状態バッグで定義されているかどうかを示す値を返します。</summary>
        <value>
          状態バッグで定義されているスタイル要素がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.IsTrackingViewState%2A>スタイル要素を状態バッグで定義されているかどうかを決定するプロパティです。 このプロパティは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected internal void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void LoadViewState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">以前に保存した状態。</param>
        <summary>以前に保存した状態を読み込みます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MergeWith">
      <MemberSignature Language="C#" Value="public virtual void MergeWith (System.Web.UI.WebControls.Style s);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void MergeWith(class System.Web.UI.WebControls.Style s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.MergeWith(System.Web.UI.WebControls.Style)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub MergeWith (s As Style)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void MergeWith(System::Web::UI::WebControls::Style ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.Web.UI.WebControls.Style" />
      </Parameters>
      <Docs>
        <param name="s">結合するスタイルを表す <see cref="T:System.Web.UI.WebControls.Style" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.Style" /> のスタイル プロパティをこのメソッドの呼び出し元である <see cref="T:System.Web.UI.WebControls.Style" /> クラスのインスタンスに結合します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.MergeWith%2A>メソッドの指定したスタイルのプロパティを結合する<xref:System.Web.UI.WebControls.Style>のインスタンスと、<xref:System.Web.UI.WebControls.Style>からこのメソッドが呼び出されるクラスです。  
  
> [!CAUTION]
>  スタイル クラスの現在のインスタンスに既に設定されているものを除き、すべてのプロパティの対応するプロパティに置き換えられます、<xref:System.Web.UI.WebControls.Style>によって指定された、`s`パラメーター。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <see cref="P:System.Web.UI.WebControls.Style.RegisteredCssClass" /> が設定されています。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Style.CopyFrom(System.Web.UI.WebControls.Style)" />
      </Docs>
    </Member>
    <Member MemberName="RegisteredCssClass">
      <MemberSignature Language="C#" Value="public string RegisteredCssClass { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string RegisteredCssClass" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.RegisteredCssClass" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property RegisteredCssClass As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ RegisteredCssClass { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Advanced)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに登録されているカスケード スタイル シート (CSS) を取得します。</summary>
        <value>現在のインスタンスをページに登録したときに使用した CSS クラス名。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.RegisteredCssClass%2A>プロパティ、コントロールに登録されている CSS クラスを取得します。  
  
 スタイルが現在のページで登録されている、<xref:System.Web.UI.IStyleSheet.RegisterStyle%2A>メソッドで、検索、`<head runat="server"``>`によって表される、埋め込まれたスタイル シートで、現在のインスタンスのプロパティが置かれるページの要素を`<style>`関連付けられているコントロールに固有のクラス名の下の要素。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Reset">
      <MemberSignature Language="C#" Value="public virtual void Reset ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Reset() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.Reset" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub Reset ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Reset();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>定義されたスタイル要素を状態バッグから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドを使用すると、状態バッグから定義されたスタイル要素を削除できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected internal virtual object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保護されているメソッド。 <see cref="M:System.Web.UI.WebControls.Style.TrackViewState" /> メソッドの呼び出し後に変更された状態をすべて保存します。</summary>
        <returns>保存した状態を表すオブジェクト。 既定値は、<see langword="null" /> です。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetBit">
      <MemberSignature Language="C#" Value="protected internal virtual void SetBit (int bit);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void SetBit(int32 bit) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetBit(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub SetBit (bit As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void SetBit(int bit);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="bit" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="bit">ビットマスク値。</param>
        <summary>保護されている内部メソッド。 状態バッグに格納されているスタイル プロパティを示す内部ビットマスク フィールドを設定します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SetDirty">
      <MemberSignature Language="C#" Value="public void SetDirty ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetDirty() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.SetDirty" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetDirty ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetDirty();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Style" /> にマークを付けて、その状態がビューステートに記録されるようにします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Style.SetDirty%2A>メソッドが直接呼び出される、<xref:System.Web.UI.WebControls.StyleCollection.SetDirtyObject%2A>のメソッド、 <xref:System.Web.UI.WebControls.StyleCollection>、マークする、<xref:System.Web.UI.WebControls.Style>オブジェクトの状態をビューステートに記録します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.IsTrackingViewState">
      <MemberSignature Language="C#" Value="bool System.Web.UI.IStateManager.IsTrackingViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Web.UI.IStateManager.IsTrackingViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#IsTrackingViewState" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsTrackingViewState As Boolean Implements IStateManager.IsTrackingViewState" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Web.UI.IStateManager.IsTrackingViewState { bool get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.IStateManager.IsTrackingViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サーバー コントロールがビューステートの変更を追跡しているかどうかを示す値を取得します。</summary>
        <value>
          ビューステート バッグで定義されているスタイル要素がある場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.LoadViewState">
      <MemberSignature Language="C#" Value="void IStateManager.LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub LoadViewState (state As Object) Implements IStateManager.LoadViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.LoadViewState(System::Object ^ state) = System::Web::UI::IStateManager::LoadViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.LoadViewState(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">以前に保存した状態。</param>
        <summary>以前に保存した状態を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.SaveViewState">
      <MemberSignature Language="C#" Value="object IStateManager.SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.Web.UI.IStateManager.SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Function SaveViewState () As Object Implements IStateManager.SaveViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.Web.UI.IStateManager.SaveViewState() = System::Web::UI::IStateManager::SaveViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.SaveViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態の変化を示すオブジェクトを返します。</summary>
        <returns>保存した状態を表すオブジェクト。 既定値は、<see langword="null" /> です。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IStateManager.TrackViewState">
      <MemberSignature Language="C#" Value="void IStateManager.TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IStateManager.TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.System#Web#UI#IStateManager#TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Sub TrackViewState () Implements IStateManager.TrackViewState" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IStateManager.TrackViewState() = System::Web::UI::IStateManager::TrackViewState;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>状態変化の追跡を開始します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 これは、<xref:System.Web.UI.WebControls.Style> のインスタンスが <xref:System.Web.UI.IStateManager> インターフェイスにキャストされる場合のみ、使用できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected internal virtual void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Style.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual void TrackViewState();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IStateManager.TrackViewState</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>保護されているメソッド。 状態変化の追跡の開始位置をコントロールにマークします。 追跡の開始後に加えられた変更はすべて追跡され、コントロールのビューステートの一部として保存されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ViewState">
      <MemberSignature Language="C#" Value="protected internal System.Web.UI.StateBag ViewState { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.StateBag ViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.ViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property ViewState As StateBag" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::Web::UI::StateBag ^ ViewState { System::Web::UI::StateBag ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.StateBag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>スタイル要素を保持している状態バックを取得します。</summary>
        <value>定義されたスタイル要素を保持している状態バッグ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 状態バッグのプライベート フィールド名は大文字小文字を区別します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Width">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Unit Width { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.Unit Width" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Style.Width" />
      <MemberSignature Language="VB.NET" Value="Public Property Width As Unit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Unit Width { System::Web::UI::WebControls::Unit get(); void set(System::Web::UI::WebControls::Unit value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(typeof(System.Web.UI.WebControls.Unit), "")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Unit</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>Web サーバー コントロールの幅を取得または設定します。</summary>
        <value>Web サーバー コントロールの幅を表す <see cref="T:System.Web.UI.WebControls.Unit" />。 既定値は <see cref="F:System.Web.UI.WebControls.Unit.Empty" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Style.Width%2A>プロパティを指定するか、Web サーバー コントロールの幅を決定します。 このプロパティは、<xref:System.Web.UI.WebControls.Unit>です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <see cref="P:System.Web.UI.WebControls.Unit.Value" /> の <see cref="T:System.Web.UI.WebControls.Unit" /> プロパティが負の値です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.Unit" />
      </Docs>
    </Member>
  </Members>
</Type>