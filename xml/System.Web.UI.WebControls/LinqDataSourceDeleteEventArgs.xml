<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e2b71466503545e1fe4f5a1fc92673f501881afa" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39812846" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceDeleteEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="12006-101">
        <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> イベントのデータを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="12006-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> event.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12006-102"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>オブジェクトは、のいずれかのハンドラーに渡される、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="12006-102">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object is passed to any handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="12006-103"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティが削除されるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="12006-103">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property contains the data that will be deleted.</span></span>  
  
 <span data-ttu-id="12006-104">データ ソースを表すオブジェクトをデータを削除する前に検証例外をスローした場合、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティにはインスタンスが含まれています、<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>クラス。</span><span class="sxs-lookup"><span data-stu-id="12006-104">If the object that represents the data source throws a validation exception before it deletes the data, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="12006-105">すべての検証例外を取得することができます、<xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="12006-105">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="12006-106">検証例外がスローされない場合、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティを含む`null`します。</span><span class="sxs-lookup"><span data-stu-id="12006-106">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="12006-107">検証の例外を処理して再スローされる例外を作成したくない場合は、設定、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-107">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="12006-108">イベント ハンドラーを作成する、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント データ クラスからの検証エラーを調査したり、削除操作をキャンセルする、データを検証します。</span><span class="sxs-lookup"><span data-stu-id="12006-108">You create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the data, to examine validation errors from the data class, or to cancel the delete operation.</span></span> <span data-ttu-id="12006-109">設定して削除操作をキャンセル、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-109">You cancel the delete operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="12006-110">既定で、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール ストアのビューで、データ ソースから、元の値があるものを除き、Web ページで状態<xref:System.Data.Linq.Mapping.ColumnAttribute>属性がマーク`UpdateCheck.Never`します。</span><span class="sxs-lookup"><span data-stu-id="12006-110">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state in the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="12006-111">LINQ to SQL は、自動的にデータを削除する前に、データの整合性をチェックします。</span><span class="sxs-lookup"><span data-stu-id="12006-111">LINQ to SQL automatically checks the integrity of the data before deleting the data.</span></span> <span data-ttu-id="12006-112">この機能を使用するには、ビュー ステートに格納されている元の値をデータ ソースの現在の値を比較します。</span><span class="sxs-lookup"><span data-stu-id="12006-112">It does this by comparing the current values in the data source with the original values that are stored in view state.</span></span> <span data-ttu-id="12006-113">追加のデータ検証を実行するには、ハンドラーを作成して、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="12006-113">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12006-114">次の例のプロパティに基づいて削除操作をキャンセルする方法を示しています、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティと、Web ページからの値。</span><span class="sxs-lookup"><span data-stu-id="12006-114">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="12006-115">例では、ユーザーを選択する必要があります、<xref:System.Web.UI.WebControls.CheckBox>と商品を削除することを確認する制御レコードの`OnSale`プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-115">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="12006-116">
            <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-116">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs originalObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject">
          <span data-ttu-id="12006-117">削除するデータが格納された、<see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> プロパティで指定された型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-117">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12006-118">
            <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-118">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception">
          <span data-ttu-id="12006-119">削除するデータの検証時に発生した例外。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-119">The exception that occurred when validating the data to delete.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="12006-120">指定した例外を使用して、<see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-120">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class with the specified exception.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12006-121">削除操作の前に行われていたデータ検証中にスローされた例外を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-121">Gets the exception that was thrown while the data was being validated before the delete operation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12006-122">エラーが発生した場合は例外。それ以外の場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-122">The exception, if an error occurred; otherwise, <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12006-123">例外が格納されている削除の操作を実行する前に検証例外がスローされた場合、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="12006-123">If a validation exception is thrown before the delete operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="12006-124">イベント ハンドラーで、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントでの例外を取得することができます、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="12006-124">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12006-125">例外が既に処理済みで、再度スローする必要がないかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-125">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12006-126">例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-126">
              <see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12006-127">イベント ハンドラーを作成することができます、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> delete 操作の前にスローされた検証例外を確認するイベントです。</span><span class="sxs-lookup"><span data-stu-id="12006-127">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to examine validation exceptions that were thrown before the delete operation.</span></span> <span data-ttu-id="12006-128">例外を処理しを再度スローするように、設定、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-128">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="12006-129">設定しない場合、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティを`true`例外が呼び出し履歴内の次のイベント ハンドラーに伝達されます。</span><span class="sxs-lookup"><span data-stu-id="12006-129">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="12006-130">削除するデータを表すオブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-130">Gets the object that represents the data to delete.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="12006-131">削除するデータが格納された、<see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> プロパティで指定された型のオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="12006-131">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="12006-132">使用することができます、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティが削除される前に、データと対話します。</span><span class="sxs-lookup"><span data-stu-id="12006-132">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property to interact with the data before it is deleted.</span></span> <span data-ttu-id="12006-133">データを検証するまたはイベントをキャンセルするには、設定、<xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-133">You can validate the data, or you can cancel the event by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span> <span data-ttu-id="12006-134">内のオブジェクトの値を変更することでレコードが削除を変更することができます、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="12006-134">You can modify which record is deleted by changing the value or values of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="12006-135">次の例のプロパティに基づいて削除操作をキャンセルする方法を示しています、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティと、Web ページからの値。</span><span class="sxs-lookup"><span data-stu-id="12006-135">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="12006-136">例では、ユーザーを選択する必要があります、<xref:System.Web.UI.WebControls.CheckBox>と商品を削除することを確認する制御レコードの`OnSale`プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="12006-136">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>