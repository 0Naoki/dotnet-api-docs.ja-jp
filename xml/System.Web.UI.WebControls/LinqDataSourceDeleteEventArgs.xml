<Type Name="LinqDataSourceDeleteEventArgs" FullName="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="fed16329a67968fe3391ed20f1c1cf0dc0b94a4f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69413347" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSourceDeleteEventArgs : System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSourceDeleteEventArgs extends System.ComponentModel.CancelEventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSourceDeleteEventArgs&#xA;Inherits CancelEventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSourceDeleteEventArgs : System::ComponentModel::CancelEventArgs" />
  <TypeSignature Language="F#" Value="type LinqDataSourceDeleteEventArgs = class&#xA;    inherit CancelEventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ComponentModel.CancelEventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="6cb97-101"><see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> イベントのデータを提供します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-101">Provides data for the <see cref="E:System.Web.UI.WebControls.LinqDataSource.Deleting" /> event.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb97-102">オブジェクトは、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントの任意のハンドラーに渡されます。 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs></span><span class="sxs-lookup"><span data-stu-id="6cb97-102">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object is passed to any handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="6cb97-103">プロパティ<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>は、削除されるデータを格納します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-103">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property contains the data that will be deleted.</span></span>  
  
 <span data-ttu-id="6cb97-104">データソースを表すオブジェクトが、データを削除する前に検証例外をスローした<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>場合、プロパティには<xref:System.Web.UI.WebControls.LinqDataSourceValidationException>クラスのインスタンスが含まれます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-104">If the object that represents the data source throws a validation exception before it deletes the data, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains an instance of the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> class.</span></span> <span data-ttu-id="6cb97-105"><xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A>プロパティを使用して、すべての検証例外を取得できます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-105">You can retrieve all the validation exceptions through the <xref:System.Web.UI.WebControls.LinqDataSourceValidationException.InnerExceptions%2A> property.</span></span> <span data-ttu-id="6cb97-106">検証例外がスローされなかった<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>場合、 `null`プロパティにはが格納されます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-106">If no validation exception is thrown, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property contains `null`.</span></span> <span data-ttu-id="6cb97-107">検証例外を処理し、例外が再スローされないようにする場合は、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-107">If you handle the validation exceptions and do not want the exception to be re-thrown, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="6cb97-108"><xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントのイベントハンドラーを作成して、データを検証したり、データクラスから検証エラーを調べたり、削除操作をキャンセルしたりします。</span><span class="sxs-lookup"><span data-stu-id="6cb97-108">You create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the data, to examine validation errors from the data class, or to cancel the delete operation.</span></span> <span data-ttu-id="6cb97-109">削除操作をキャンセルするには、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティを`true`に設定します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-109">You cancel the delete operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="6cb97-110">既定では、 <xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、データソースの元の値を Web ページのビューステートに格納します。 <xref:System.Data.Linq.Mapping.ColumnAttribute>ただし、属性が`UpdateCheck.Never`としてマークされているものは除きます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-110">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values from the data source in view state in the Web page, except those whose <xref:System.Data.Linq.Mapping.ColumnAttribute> attribute is marked as `UpdateCheck.Never`.</span></span> <span data-ttu-id="6cb97-111">LINQ to SQL は、データを削除する前に、データの整合性を自動的にチェックします。</span><span class="sxs-lookup"><span data-stu-id="6cb97-111">LINQ to SQL automatically checks the integrity of the data before deleting the data.</span></span> <span data-ttu-id="6cb97-112">これを行うには、データソースの現在の値と、ビューステートに格納されている元の値を比較します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-112">It does this by comparing the current values in the data source with the original values that are stored in view state.</span></span> <span data-ttu-id="6cb97-113">イベントのハンドラーを作成することにより、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>追加のデータ検証を実行できます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-113">You can perform additional data validation by creating a handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cb97-114">次の例は、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティのプロパティおよび Web ページの値に基づいて削除操作を取り消す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cb97-114">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="6cb97-115">この例では、ユーザーは、 <xref:System.Web.UI.WebControls.CheckBox> `OnSale`プロパティがに`true`設定されている場合に、製品レコードを削除するかどうかを確認するために、コントロールを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cb97-115">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="6cb97-116">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="6cb97-116">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="6cb97-117"><see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-117">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (object originalObject);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(object originalObject) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (originalObject As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Object ^ originalObject);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : obj -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs originalObject" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="originalObject" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="originalObject"><span data-ttu-id="6cb97-118">削除するデータが格納された、<see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> プロパティで指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6cb97-118">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span></span></param>
        <summary><span data-ttu-id="6cb97-119"><see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-119">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSourceDeleteEventArgs (System.Web.UI.WebControls.LinqDataSourceValidationException exception);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.UI.WebControls.LinqDataSourceValidationException exception) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.#ctor(System.Web.UI.WebControls.LinqDataSourceValidationException)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (exception As LinqDataSourceValidationException)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSourceDeleteEventArgs(System::Web::UI::WebControls::LinqDataSourceValidationException ^ exception);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs : System.Web.UI.WebControls.LinqDataSourceValidationException -&gt; System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" Usage="new System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs exception" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="exception" Type="System.Web.UI.WebControls.LinqDataSourceValidationException" />
      </Parameters>
      <Docs>
        <param name="exception"><span data-ttu-id="6cb97-120">削除するデータの検証時に発生した例外。</span><span class="sxs-lookup"><span data-stu-id="6cb97-120">The exception that occurred when validating the data to delete.</span></span></param>
        <summary><span data-ttu-id="6cb97-121">指定した例外を使用して、<see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-121">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs" /> class with the specified exception.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.LinqDataSourceValidationException Exception { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.LinqDataSourceValidationException Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Exception As LinqDataSourceValidationException" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::LinqDataSourceValidationException ^ Exception { System::Web::UI::WebControls::LinqDataSourceValidationException ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Exception : System.Web.UI.WebControls.LinqDataSourceValidationException" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceValidationException</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb97-122">削除操作の前に行われていたデータ検証中にスローされた例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-122">Gets the exception that was thrown while the data was being validated before the delete operation.</span></span></summary>
        <value><span data-ttu-id="6cb97-123">エラーが発生した場合は例外。それ以外の場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="6cb97-123">The exception, if an error occurred; otherwise, <see langword="null" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb97-124">削除操作が実行される前に検証例外がスローされた場合、例外は<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティに格納されます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-124">If a validation exception is thrown before the delete operation is performed, the exception is stored in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span> <span data-ttu-id="6cb97-125"><xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントのイベントハンドラーでは、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティを使用して例外を取得できます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-125">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you can retrieve the exception through the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExceptionHandled">
      <MemberSignature Language="C#" Value="public bool ExceptionHandled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ExceptionHandled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberSignature Language="VB.NET" Value="Public Property ExceptionHandled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ExceptionHandled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ExceptionHandled : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb97-126">例外が既に処理済みで、再度スローする必要がないかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-126">Gets or sets a value that indicates whether the exception was handled and that it should not be thrown again.</span></span></summary>
        <value><span data-ttu-id="6cb97-127">例外が処理された場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="6cb97-127"><see langword="true" /> if the exception was handled; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb97-128"><xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントのイベントハンドラーを作成して、削除操作の前にスローされた検証例外を調べることができます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-128">You can create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to examine validation exceptions that were thrown before the delete operation.</span></span> <span data-ttu-id="6cb97-129">例外を処理し、再度スローしないようにする場合は、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティをに`true`設定します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-129">If you handle the exception and do not want it to be thrown again, set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`.</span></span> <span data-ttu-id="6cb97-130"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A>プロパティをに`true`設定しなかった場合、例外は呼び出し履歴の次のイベントハンドラーに反映されます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-130">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.ExceptionHandled%2A> property to `true`, the exception will be propagated to the next event handler in the call stack.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OriginalObject">
      <MemberSignature Language="C#" Value="public object OriginalObject { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object OriginalObject" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OriginalObject As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ OriginalObject { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OriginalObject : obj" Usage="System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="6cb97-131">削除するデータを表すオブジェクトを取得します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-131">Gets the object that represents the data to delete.</span></span></summary>
        <value><span data-ttu-id="6cb97-132">削除するデータが格納された、<see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> プロパティで指定された型のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="6cb97-132">An object of the type specified in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.TableName" /> property that contains the data to delete.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="6cb97-133"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティを使用して、データを削除する前に操作することができます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-133">You can use the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property to interact with the data before it is deleted.</span></span> <span data-ttu-id="6cb97-134">データを検証することも、 <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>プロパティをに`true`設定してイベントをキャンセルすることもできます。</span><span class="sxs-lookup"><span data-stu-id="6cb97-134">You can validate the data, or you can cancel the event by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property to `true`.</span></span> <span data-ttu-id="6cb97-135">削除するレコードを変更するには、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティでオブジェクトの値を変更します。</span><span class="sxs-lookup"><span data-stu-id="6cb97-135">You can modify which record is deleted by changing the value or values of the object in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="6cb97-136">次の例は、 <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティのプロパティおよび Web ページの値に基づいて削除操作を取り消す方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="6cb97-136">The following example shows how to cancel the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="6cb97-137">この例では、ユーザーは、 <xref:System.Web.UI.WebControls.CheckBox> `OnSale`プロパティがに`true`設定されている場合に、製品レコードを削除するかどうかを確認するために、コントロールを選択する必要があります。</span><span class="sxs-lookup"><span data-stu-id="6cb97-137">In the example, users must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that they want to delete a product record when its `OnSale` property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
