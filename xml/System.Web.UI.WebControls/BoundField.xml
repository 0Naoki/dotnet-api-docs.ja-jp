<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="0d04960f9a5f61606a010cb75057f85c783b4586" />
    <Meta Name="ms.sourcegitcommit" Value="0ec122ee5f3681159b8460ab15b409fd6e3d3ae0" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="10/04/2018" />
    <Meta Name="ms.locfileid" Value="48655909" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>データ バインド コントロール内にテキストとして表示されるフィールドを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField>クラスのデータ バインド コントロールによって使用されます (など<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>) フィールドの値をテキストとして表示します。 <xref:System.Web.UI.WebControls.BoundField>オブジェクトが使用されているデータ バインド コントロールによって異なる方法で表示されます。 たとえば、<xref:System.Web.UI.WebControls.GridView>コントロールに表示、<xref:System.Web.UI.WebControls.BoundField>列としてオブジェクト中に、<xref:System.Web.UI.WebControls.DetailsView>コントロールが行として表示します。  
  
 表示するフィールドを指定する、<xref:System.Web.UI.WebControls.BoundField>オブジェクト、設定、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>プロパティ、フィールドの名前にします。 設定を表示する前に、フィールドの値を HTML エンコードされたは、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティを`true`します。 フィールドの値を設定して、カスタム書式指定文字列を適用することができます、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。 ときに、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティは`true`フィールドのエンコードされた文字列値は、カスタム書式指定文字列で使用します。 既定では、書式指定文字列は、データ バインド コントロールが読み取り専用モードの場合にのみフィールドの値に適用されます。 書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。 設定してカスタムのキャプションを表示するには、フィールドの値が null の場合、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。 <xref:System.Web.UI.WebControls.BoundField>オブジェクトは、空の文字列にも自動的に変換できます ("") を設定して値を null 値をフィールド、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティを`true`します。  
  
 非表示にすることができます、<xref:System.Web.UI.WebControls.BoundField>を設定してデータ バインド コントロール内のオブジェクト、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>プロパティを`false`します。 フィールドの値が編集モードで変更されていることを防ぐためには、設定、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>プロパティを`true`します。 データにバインドされた制御レコードの挿入をサポートする (など、<xref:System.Web.UI.WebControls.DetailsView>コントロール)、非表示にすることができます、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを設定して、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>プロパティを`false`します。 挿入モードでの自動生成されたキー フィールドを非表示にするときにこれは一般的です。  
  
 ヘッダーとフッター セクションをカスタマイズすることができます、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 ヘッダーまたはページ フッターのセクションでは、キャプションを表示するには、設定、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>または<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>プロパティでは、それぞれします。 設定して、イメージを表示するテキストを表示するヘッダーのセクションでは、代わりに、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>プロパティ。 ヘッダー セクションを非表示にできる、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを設定して、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>プロパティを`false`します。  
  
> [!NOTE]
>  一部のデータ バインド コントロール (など、<xref:System.Web.UI.WebControls.GridView>コントロール) を表示またはコントロールのすべてのヘッダー セクションのみを非表示にできます。 これらのデータ バインド コントロールをサポートしていない、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>個々 のバインドされたフィールドのプロパティ。 表示または (該当する場合)、データ バインド コントロールのすべてのヘッダー セクションを非表示には、使用して、コントロールの`ShowHeader`プロパティ。  
  
 外観をカスタマイズできる、<xref:System.Web.UI.WebControls.BoundField>フィールドのさまざまな部分のスタイル プロパティを設定して、オブジェクト (フォントの色や背景色、)。 次の表は、異なるスタイル プロパティを一覧表示します。  
  
|スタイル プロパティ|説明|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|子の Web サーバー コントロールのスタイル設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|フッター セクションのスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|ヘッダー セクションのスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|内のデータ項目のスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。|  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField>内のフィールドの値を表示するオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.BoundField>クラス。 このコンス トラクターは、動的に作成されたデータ バインド コントロールにフィールドを追加するときに通常使用されます。  
  
 動的に追加する、<xref:System.Web.UI.WebControls.BoundField>データ バインド コントロールにオブジェクトを新規作成<xref:System.Web.UI.WebControls.BoundField>オブジェクトでそのプロパティを設定し、データ バインド コントロールのフィールド コレクションに追加します。 たとえば、使用する場合、<xref:System.Web.UI.WebControls.GridView>コントロールを追加、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。  
  
> [!NOTE]
>  フィールドは、データ バインド コントロールに動的に追加することができます、強くお勧めするフィールドに静的に宣言されているとし、表示/非表示、必要に応じて。 すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが減ります。  
  
   
  
## Examples  
 次のコード例は、コンス トラクターを使用して動的に追加する方法を示します、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> オブジェクトを格納しているデータ バインド コントロールが編集モードである場合に、<see cref="T:System.Web.UI.WebControls.BoundField" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</summary>
        <value>編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 データ バインド コントロール (など<xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.FormView>、および<xref:System.Web.UI.WebControls.GridView>) ユーザーが読み取り、編集、またはレコードを挿入できるようにするさまざまな表示モードがあります。 既定では、書式指定文字列を指定して、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティは、データ バインド コントロールが読み取り専用モードの場合にのみ、フィールド値に適用します。 書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。  
  
> [!NOTE]
>  A<xref:System.Web.UI.WebControls.BoundField>オブジェクトは自動的に削除されませんデータ ソースのフィールドが更新されたときに書式設定します。 格納されている値の一部として書式設定したくない場合は、書式設定をプログラムで削除する必要があります。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>中にフィールドの値を文字列の書式を適用するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードにします。 書式設定し、プログラムで削除データ ソースの値が更新される前にされます。  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ ソースでデータ フィールドを更新したときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</summary>
        <value>空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ユーザーは、フィールドの値を更新またはレコードを挿入するときの空の文字列を入力する可能性があります。 使用して、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティをデータ ソースのデータ フィールドが更新されたときに空の文字列値が自動的に null に変換するかどうかを指定します。  
  
> [!NOTE]
>  既定で、<xref:System.Web.UI.WebControls.BoundField>オブジェクトでは、null 値が、空の文字列として表示されます。 別の値を表示するには、設定、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>ことを指定するプロパティを空の文字列 ("") フィールドの値は null に自動的に変換する必要があります。  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.BoundField" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>メソッドは、ヘルパー メソッドで使用される、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>メソッドは、現在のプロパティをコピーする<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.DataControlField>メソッドによって作成されたオブジェクト。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>空の <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを作成します。</summary>
        <returns>空の <see cref="T:System.Web.UI.WebControls.BoundField" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.CreateField%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>空を作成するメソッドを<xref:System.Web.UI.WebControls.BoundField>、現在のプロパティをコピーするオブジェクト<xref:System.Web.UI.WebControls.BoundField>オブジェクトします。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドするデータ フィールドの名前を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドするデータ フィールドの名前。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>プロパティにバインドするデータ フィールドの名前を指定する、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 指定したフィールドの値が表示されます、<xref:System.Web.UI.WebControls.BoundField>テキストとしてのオブジェクト。 必要に応じて設定して、表示されるテキストをフォーマットすることができます、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。  
  
> [!NOTE]
>  フィールドの値が null の場合、空の文字列 ("") は、既定値を表示します。 代替のキャプションを指定するには、設定、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>に表示するフィールドを指定するプロパティを<xref:System.Web.UI.WebControls.BoundField>のフィールド列を<xref:System.Web.UI.WebControls.GridView>コントロール。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールドの値の表示形式を指定する文字列を取得または設定します。</summary>
        <value>フィールドの値の表示形式を指定する書式指定文字列。 既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>で表示される値のカスタムの表示形式を指定するプロパティ、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 場合、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティが設定されていない場合、特別な書式を持たない、フィールドの値が表示されます。  
  
> [!NOTE]
>  3.5 より前のバージョンの ASP.NET で設定する必要があります、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティを`false`書式を設定するためにはフィールドしない文字列データ型。 格納されている書式指定文字列の前に、既定の変換メソッドによって、フィールドの値を文字列に変換は、それ以外の場合、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティが適用されます。  
  
 既定では、書式指定文字列がフィールドの値に適用、データ バインド コントロールを格納している場合にのみ、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは読み取り専用モードにします。 書式指定文字列を編集モードでフィールドの値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。  
  
 書式指定文字列に任意のリテラル文字列をでき、通常、フィールドの値のプレース ホルダーが含まれます。 たとえば、書式指定文字列で`Item Value: {0}`のフィールドの値に置き換えられます、{0}プレース ホルダー文字列が表示されたら、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 書式指定文字列の残りの部分は、リテラル テキストとして表示されます。  
  
 書式指定文字列にプレース ホルダーが含まれていない場合は、(データ ソースからのフィールドの値は含まれません)、最終的な表示テキストの書式指定文字列自体のみが含まれます。 プレース ホルダーが前の例で示すように、中かっこで囲まれた 0 (ゼロ) の場合は、既定の方法で、フィールドの値が文字列に変換されます。 0 には、フィールドの値の書式設定方法を指定する文字列を追加できます。 たとえば、プレース ホルダー`{0:C}`数値フィールドがフィールドの値が通貨形式に変換されることを指定します。  
  
 使用して書式設定が適用される、<xref:System.String.Format%2A>メソッド。 左中かっこに続く数値をそのメソッドで使用される構文の一部であり、プレース ホルダーを使用する一連の値のどれを示します。 各セルにフィールド値の 1 つだけがあるため、左中かっこに続く番号は 0 にのみ設定できます。  
  
 次の表では、標準書式文字の数値フィールドの一覧表示します。 これらの形式の文字はを除き、大文字小文字が区別`X`、指定されている場合は、16 進数の文字が表示されます。 表示する数の有効桁数または小数点以下桁数を指定するには、ほとんどの書式指定文字に数値を追加できます。  
  
> [!NOTE]
>  ほとんどの場合、書式設定は、サーバーのカルチャ設定に依存します。 カルチャ設定の例は、`en-US`します。  
  
|書式指定文字|説明|例|  
|----------------------|-----------------|-------------|  
|`C` または `c`|通貨書式で数値を表示します。 小数点以下桁数を指定することができます。|書式: `{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> 書式: `{0:C3}`<br /><br /> 123.456  -> $123.456|  
|`D` または `d`|10 進数形式で整数値を表示します。 以下の桁数を指定できます。 (種類は、"decimal"と呼ばれて、数値としてフォーマットされます整数。)|書式: `{0:D}`<br /><br /> 1234 -> 1234<br /><br /> 書式: `{0:D6}`<br /><br /> 1234  -> 001234|  
|`E` または `e`|指数 (指数) 形式で数値を表示します。 小数点以下桁数を指定することができます。|書式: `{0:E}`<br /><br /> 1052.0329112756 -> 1.052033E+003<br /><br /> 書式: `{0:E2}`<br /><br /> -1052.0329112756 -> -1.05e+003|  
|`F` または `f`|固定形式で数値を表示します。 小数点以下桁数を指定することができます。|書式: `{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> 書式: `{0:F3}`<br /><br /> 1234.567 -> 1234.567|  
|`G` または `g`|一般的な形式 (最も簡潔なのか、固定小数点または科学的表記法) では、数値の値を表示します。 有効桁数を指定することができます。|書式: `{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> 書式: `{0:G2}`<br /><br /> -123.456 -> -120|  
|`N` または `n`|(グループ区切り記号と省略可能なマイナス記号を含む) の番号形式で数値を表示します。 小数点以下桁数を指定することができます。|書式: `{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> 書式: `{0:N4}`<br /><br /> 1234.567 -> 1,234.5670|  
|`P` または `p`|数値をパーセント形式で表示します。 小数点以下桁数を指定することができます。|書式: `{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> 書式: `{0:P1}`<br /><br /> .5 -> 50.0%|  
|`R` または `r`|表示<xref:System.Single>、 <xref:System.Double>、または`BigInteger`ラウンドト リップ書式内の値。|書式: `{0:R}`<br /><br /> 123456789.12345678 -> 123456789.12345678|  
|`X` または `x`|16 進形式で整数値を表示します。 以下の桁数を指定できます。|書式: `{0:X}`<br /><br /> 255 -> FF<br /><br /> 書式: `{0:x4}`<br /><br /> 255  -> 00ff|  
  
 詳細については、およびその他のカルチャ値の書式を示す例については、「 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)します。 カスタム数値書式指定文字列を作成することもできます。 詳細については、「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」をご覧ください。  
  
 次の表に、書式文字の<xref:System.DateTime>フィールド。 これらの書式指定のほとんどは、カルチャ設定によって異なる出力にあります。 これらの例は、 <xref:System.DateTime> 2009 年 6 月 15 日の値のカルチャ設定と 1時 45分: 30 PM`en-US`します。  
  
|書式指定文字|説明|例|  
|----------------------|-----------------|-------------|  
|`d`|短い形式の日付パターン。|書式: `{0:d}`<br /><br /> 2009 年 6 月 15 日-&GT; 2009 年 6 月 15 日の午後 1時 45分: 30|  
|`D`|長い形式の日付パターン。|書式: `{0:D}`<br /><br /> 2009 年 6 月 15 日-> 2009 年 6 月 15 日月曜日の午後 1時 45分: 30|  
|`f`|完全な日付と時刻のパターン (短い形式の時刻)。|書式: `{0:f}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 1時 45分|  
|`F`|完全な日付と時刻のパターン (長い形式の時刻)。|書式: `{0:F}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 1時 45分: 30|  
|`g`|一般の日付と時刻のパターン (短い形式の時刻)。|書式: `{0:g}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 に -&GT; 2009 年 6 月 15 日午後 1時 45分|  
|`G`|一般の日付と時刻のパターン (長い形式の時刻)。|書式: `{0:G}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 に -&GT; 2009 年 6 月 15 日午後 1時 45分: 30|  
|`M` または `m`|月日パターン。|書式: `{0:M}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 が 6 月 15 日->|  
|`O` または `o`|ラウンドトリップする日付と時刻のパターン。|書式: `{0:o}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000|  
|`R` または `r`|RFC1123 パターン (については、次を参照してください。 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>)。|書式: `{0:R}`<br /><br /> 6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT|  
|`s`|並べ替え可能な日付と時刻のパターン。|書式: `{0:s}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30|  
|`t`|短い形式の時刻パターン。|書式: `{0:t}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30-1時 45分 PM を &GT;|  
|`T`|長い形式の時刻パターン。|書式: `{0:T}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30-1時 45分: 30 PM を &GT;|  
|`u`|並べ替え可能な日付と時刻のパターン (世界時刻)。|書式: `{0:u}`<br /><br /> 6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z|  
|`U`|完全な日付と時刻のパターン (世界時刻)。|書式: `{0:U}`<br /><br /> 2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 8時 45分: 30|  
|`Y` または `y`|年月パターン。|書式: `{0:Y}`<br /><br /> 2009 年 6 月 15 日-> 2009 年 6 月の 1時 45分: 30 PM|  
  
 詳細については、およびその他のカルチャ値の書式を示す例については、「 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。 カスタム日時書式指定文字列を作成することもできます。 詳細については、次を参照してください。 [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。  
  
   
  
## Examples  
 Visual Studio の Web サイトのプロジェクトとソース コードはこのトピックと共に使用できます:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191889)します。  
  
 次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ フィールドの値のカスタムの表示形式を指定します。  
  
  
  
 次の例では、この例によって生成される出力の 1 つの行を示します。  
  
|ProductID|name|ProductNumber|ListPrice|[太さ]|ModifiedDate|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">.NET での型の書式設定</related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary">指定したセルの値の格納に使用する <see cref="T:System.Collections.IDictionary" />。</param>
        <param name="cell">取得する値を格納している <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つ。</param>
        <param name="includeReadOnly">読み込み専用のフィールドの値を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>指定した <see cref="T:System.Collections.IDictionary" /> オブジェクトに、指定した <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトの値を読み込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>メソッドが、指定したフィールドの値を取得する便利な方法として提供される<xref:System.Web.UI.WebControls.TableCell>でオブジェクトを<xref:System.Web.UI.WebControls.BoundField>オブジェクト。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 このメソッドに戻り値はありません。 フィールドの値がを介して参照によって返される代わりに、<xref:System.Collections.IDictionary?displayProperty=nameWithType>ために、オブジェクトが渡される、`dictionary`パラメーター。 反復処理するメソッドが呼び出された後、<xref:System.Collections.IDictionary?displayProperty=nameWithType>フィールド値にアクセスするオブジェクト。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.TableCell>オブジェクトが読み取り専用フィールドの値が含まれていますで渡す必要があります`true`の`includeReadOnly`パラメーターをそれらの値が含まれます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue">書式を変換するフィールド値。</param>
        <param name="encode">値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</summary>
        <returns>
          <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> で指定した書式に変換するフィールド値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A>メソッドは、フィールドの値で指定された形式に変換するために使用するヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。 フィールドの値が null の場合の値、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティが返されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタム書式指定のルーチンを実行するには、このメソッドをオーバーライドできます。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイナーで <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを表示するときにフィールド値に使用される値を取得します。</summary>
        <returns>デザイナーでフィールド値として表示する値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>メソッドはどのような値を表示するときにフィールドの表示を決定するためのヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>デザイナー内のオブジェクト。 実際のデータは、デザイン時に、データ ソースから取得することはできません、このメソッドによって返される値が表示されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラスをデザイナーでフィールドに表示する別の値を返すには、このメソッドをオーバーライドできます。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer">フィールド値のコンテナー。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドされているフィールドの値を取得します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドされているフィールドの値。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.GetValue%2A>メソッドは、ヘルパー メソッド、フィールドの値を決定するために使用します。 場合、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは、デザイナーで表示されていると、デザイン時にフィールドの値を決定することはできませんから返される値、<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>実際のフィールド値の代わりにメソッドが返されます。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <paramref name="controlContainer" /> パラメーターによって指定されたコンテナーが <see langword="null" /> です。  
  
\- または 
<paramref name="controlContainer" /> パラメーターで指定されたコンテナーにデータ項目がありません。  
  
\- または 
データ フィールドが見つかりませんでした。</exception>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、フィールドの値を決定するカスタムのルーチンを提供するには、このメソッドをオーバーライドできます。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>データ コントロールのヘッダーに表示するテキストを取得または設定します。</summary>
        <value>データ コントロールのヘッダーに表示されるテキスト。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>フレンドリ名をデータ コントロール フィールドを識別するプロパティ。 最も一般的なアプリケーション、<xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>プロパティがデータ バインドのフィールドに意味のある列の名前を指定して、<xref:System.Web.UI.WebControls.GridView>または<xref:System.Web.UI.WebControls.DetailsView>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</summary>
        <value>フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>フィールドの値に表示される前に、それぞれの文字列表現を HTML エンコードされた、かどうかを指定するプロパティを<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 たとえば、このプロパティは`true`の文字列値"\<スクリプト >"としてレンダリングされます"&lt;スクリプト&gt;"。 場合、このプロパティは`false`文字列をレンダリングは変更されません。  
  
> [!NOTE]
>  クロスサイト スクリプト攻撃や悪意のあるコンテンツが表示されていることを防ぐために HTML エンコードのフィールドの値します。 可能であれば、このプロパティを有効にする必要があります。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティ フィールドの値がで表示される前に HTML エンコードされたをされていることを防ぐために、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> プロパティを <see cref="T:System.Web.UI.WebControls.BoundField" /> 値に適用することで作成されるテキストを表示するときに、HTML エンコードするかどうかを示す値を取得または設定します。</summary>
        <value>テキストを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 HTML エンコードの値は、クロスサイト スクリプト攻撃や悪意のあるコンテンツが表示されないようにできます。 HTML エンコードは便利な場合にも、文字列の表示など、ブラウザーで HTML コードを表示する"\<br/>"、改行を挿入する代わりに (`<br/>`要素) ページでします。  
  
> [!NOTE]
>  このプロパティは、ASP.NET 3.5 の新機能です。 このプロパティを設定`false`の既定の動作を復元、 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 3.5 より前のバージョンの ASP.NET のプロパティ。 詳細については、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting">並べ替えがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</param>
        <param name="control">
          <see cref="T:System.Web.UI.WebControls.BoundField" /> を所有しているデータ コントロール。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを初期化します。</summary>
        <returns>常に <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.Initialize%2A>メソッドは、データ コントロール、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは、の基本的なオブジェクトの初期化の実行に関連付けられているフィールドが、決して行コレクションに追加する前に、フィールドのインスタンス。 などのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>呼び出し、<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>メソッドでその`CreateChildControls`などの他のメソッドの前にメソッド`CreateRow`はデータを特定の行を作成すると呼ばれます。  
  
 カスタムのデータ バインドを作成している場合は、このメソッドを制御する呼び出しで使用して<xref:System.Web.UI.WebControls.TableCell>の基本的な初期化を実行するオブジェクト、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。 場合、このメソッドを実装、 <xref:System.Web.UI.WebControls.BoundField>-派生型を設定する前に、オブジェクトの初期化を必要と<xref:System.Web.UI.WebControls.TableCell>データ オブジェクトまたはコントロールで、<xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="cellType">
          <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか 1 つ。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つ。</param>
        <param name="rowIndex">行の 0 から始まるインデックス。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッドによって実装されます<xref:System.Web.UI.WebControls.BoundField>-テキストとコントロールを追加する型の派生を<xref:System.Web.UI.WebControls.TableCell>テーブルを使用して、ユーザー インターフェイス (UI) を表示するデータ コントロールのオブジェクト。 これらのデータ コントロール、完全なテーブル構造の行を作成するときに、コントロールの`CreateChildControls`メソッドが呼び出されます。 <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッドを呼び出して、`InitializeRow`などのメソッドのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>します。  
  
 カスタムのデータ バインドを作成している場合は、このメソッドを制御する呼び出しで使用して<xref:System.Web.UI.WebControls.TableCell>データやコントロールにテーブル構造のセルを初期化するオブジェクト。 記述するときに、このメソッドを実装、 <xref:System.Web.UI.WebControls.BoundField>-クラスを派生します。  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</param>
        <param name="rowState">
          <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか 1 つ。</param>
        <summary>指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>メソッドは、内のセルを初期化するために使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタムの初期化ルーチンを実行するには、このメソッドをオーバーライドできます。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">復元するコントロールの状態を表します。</param>
        <summary>このフィールドの、以前保存したビューステート情報を復元します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>フィールド値が null の場合にフィールドに表示するキャプションを取得または設定します。</summary>
        <value>フィールド値が null の場合にフィールドに表示するキャプション。 既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 場合によってフィールドの値は、データ ソースの null として格納されます。 設定して null 値を持つフィールドを表示するカスタム キャプションを指定することができます、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。 Null フィールドの値が空の文字列として表示される場合、このプロパティが設定されていない ("")。 レコードが更新またはユーザーが値を入力した場合、データ バインド コントロールに挿入されたプロパティで指定されたこの (空の文字列) 以外、データ バインド コントロール内のフィールドのデータ ソースの値が自動的に変換を null にします。  
  
> [!NOTE]
>  空の文字列フィールドの値を null 値に変換するには、設定、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティを`true`します。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> null フィールドの値を表示するカスタム キャプションを指定するプロパティ。  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのフィールドの値をバインドします。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>メソッドは、対応するセルにデータ ソースのフィールドの値をバインドするために使用するヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">フィールド値のバインド先のコントロールが <see cref="T:System.Web.UI.WebControls.TextBox" /> と <see cref="T:System.Web.UI.WebControls.TableCell" /> のどちらでもありません。</exception>
        <block subset="none" type="overrides">
          <para>拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタム バインドのルーチンを実行するには、このメソッドをオーバーライドできます。</para>
        </block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>編集モードでフィールドの値を変更できるかどうかを示す値を取得または設定します。</summary>
        <value>編集モードでフィールド値を変更できないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>に表示される値を防ぐためにプロパティを<xref:System.Web.UI.WebControls.BoundField>から変更されているオブジェクト。 データ バインド コントロールが編集モードでは、ときに読み取り専用フィールドが編集コントロールなしのプレーン テキストとして表示されます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>プロパティが編集モードにのみ適用されます。 フィールドが挿入モードで表示されることを防ぐために使用して、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>プロパティ。  
  
   
  
## Examples  
 次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>に表示されるキー フィールドの値を防ぐためにプロパティを<xref:System.Web.UI.WebControls.BoundField>編集モードでは変更されてからのオブジェクト。  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトで HTML エンコーディングがサポートされるかどうかを示す値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> で HTML エンコーディングがサポートされる場合は、必ず <see langword="true" /> が返されます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>プロパティで使用されるヘルパー プロパティ、<xref:System.Web.UI.WebControls.BoundField>クラスと派生クラスをクラスで HTML エンコーディングがサポートされているかどうかを判断します。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生する場合、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、クラスで HTML エンコーディングがサポートされているかどうかを示すには、このプロパティをオーバーライドすることができます。</para>
        </block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>"this" 式を表します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このフィールドはことを示すために使用、<xref:System.Web.UI.WebControls.BoundField>自体ではなく、データ ソースのフィールド、データ ソースに対してオブジェクトがバインドする必要があります。 ここでは、オブジェクトの`ToString` フィールドに値が表示されます。  
  
 このフィールドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールがクライアントの入力を検証するかどうかを決定する値を取得または設定します。</summary>
        <value>コントロールがクライアントの入力を検証するかどうかを決定する値。 既定値は、<see cref="F:System.Web.UI.ValidateRequestMode.Inherit" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A>メソッドは、コントロールに含まれているかどうかを判断するために使用するヘルパー メソッドを<xref:System.Web.UI.WebControls.BoundField>オブジェクトのコールバックをサポートします。 このメソッドは、コールバックがサポートされていることを示す空のメソッド (コードが含まれていないメソッド) として実装されています。  
  
> [!NOTE]
>  このメソッドは、主にコントロールの開発者によって使用されます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>派生するクラス、<see cref="T:System.Web.UI.WebControls.BoundField" />クラスは、コントロールがコールバックをサポートするフィールドに含まれるかどうかを示すには、このメソッドをオーバーライドできます。 コールバックがサポートされていることを示す場合、例外をスローしない空のメソッドとしてこのメソッドを実装します。それ以外の場合、コールバックがサポートされていない理由を説明するメッセージと共に例外をスローします。</para>
        </block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>