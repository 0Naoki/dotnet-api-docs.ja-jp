<Type Name="BoundField" FullName="System.Web.UI.WebControls.BoundField">
  <Metadata><Meta Name="ms.openlocfilehash" Value="17dd5582629af3cc927ad2efa47188f93acd2675" /><Meta Name="ms.sourcegitcommit" Value="756d085f27705e86604f1bba5f2086ee23761acf" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="01/30/2019" /><Meta Name="ms.locfileid" Value="55323633" /></Metadata><TypeSignature Language="C#" Value="public class BoundField : System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit BoundField extends System.Web.UI.WebControls.DataControlField" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.BoundField" />
  <TypeSignature Language="VB.NET" Value="Public Class BoundField&#xA;Inherits DataControlField" />
  <TypeSignature Language="C++ CLI" Value="public ref class BoundField : System::Web::UI::WebControls::DataControlField" />
  <TypeSignature Language="F#" Value="type BoundField = class&#xA;    inherit DataControlField" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.DataControlField</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="e80a6-101">データ バインド コントロール内にテキストとして表示されるフィールドを表します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-101">Represents a field that is displayed as text in a data-bound control.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-102"><xref:System.Web.UI.WebControls.BoundField>クラスのデータ バインド コントロールによって使用されます (など<xref:System.Web.UI.WebControls.GridView>と<xref:System.Web.UI.WebControls.DetailsView>) フィールドの値をテキストとして表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-102">The <xref:System.Web.UI.WebControls.BoundField> class is used by data-bound controls (such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>) to display the value of a field as text.</span></span> <span data-ttu-id="e80a6-103"><xref:System.Web.UI.WebControls.BoundField>オブジェクトが使用されているデータ バインド コントロールによって異なる方法で表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-103">The <xref:System.Web.UI.WebControls.BoundField> object is displayed differently depending on the data-bound control in which it is used.</span></span> <span data-ttu-id="e80a6-104">たとえば、<xref:System.Web.UI.WebControls.GridView>コントロールに表示、<xref:System.Web.UI.WebControls.BoundField>列としてオブジェクト中に、<xref:System.Web.UI.WebControls.DetailsView>コントロールが行として表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-104">For example, the <xref:System.Web.UI.WebControls.GridView> control displays a <xref:System.Web.UI.WebControls.BoundField> object as a column, while the <xref:System.Web.UI.WebControls.DetailsView> control displays it as a row.</span></span>  
  
 <span data-ttu-id="e80a6-105">表示するフィールドを指定する、<xref:System.Web.UI.WebControls.BoundField>オブジェクト、設定、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>プロパティ、フィールドの名前にします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-105">To specify the field to display in a <xref:System.Web.UI.WebControls.BoundField> object, set the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to the field's name.</span></span> <span data-ttu-id="e80a6-106">設定を表示する前に、フィールドの値を HTML エンコードされたは、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-106">The field's value can be HTML-encoded before it is displayed by setting the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `true`.</span></span> <span data-ttu-id="e80a6-107">フィールドの値を設定して、カスタム書式指定文字列を適用することができます、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-107">You can apply a custom formatting string to the field's value by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span> <span data-ttu-id="e80a6-108">ときに、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティは`true`フィールドのエンコードされた文字列値は、カスタム書式指定文字列で使用します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-108">When the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property is `true`, the encoded string value of the field is used in the custom format string.</span></span> <span data-ttu-id="e80a6-109">既定では、書式指定文字列は、データ バインド コントロールが読み取り専用モードの場合にのみフィールドの値に適用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-109">By default, the formatting string is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="e80a6-110">書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-110">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span> <span data-ttu-id="e80a6-111">設定してカスタムのキャプションを表示するには、フィールドの値が null の場合、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-111">If a field's value is null, you can display a custom caption by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="e80a6-112"><xref:System.Web.UI.WebControls.BoundField>オブジェクトは、空の文字列にも自動的に変換できます ("") を設定して値を null 値をフィールド、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-112">The <xref:System.Web.UI.WebControls.BoundField> object can also automatically convert empty string ("") field values to null values by setting the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="e80a6-113">非表示にすることができます、<xref:System.Web.UI.WebControls.BoundField>を設定してデータ バインド コントロール内のオブジェクト、<xref:System.Web.UI.WebControls.DataControlField.Visible%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-113">You can hide a <xref:System.Web.UI.WebControls.BoundField> object in a data-bound control by setting the <xref:System.Web.UI.WebControls.DataControlField.Visible%2A> property to `false`.</span></span> <span data-ttu-id="e80a6-114">フィールドの値が編集モードで変更されていることを防ぐためには、設定、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-114">To prevent the value of a field from being modified in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to `true`.</span></span> <span data-ttu-id="e80a6-115">データにバインドされた制御レコードの挿入をサポートする (など、<xref:System.Web.UI.WebControls.DetailsView>コントロール)、非表示にすることができます、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを設定して、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-115">In data-bound controls that support inserting records (such as the <xref:System.Web.UI.WebControls.DetailsView> control), you can hide a <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property to `false`.</span></span> <span data-ttu-id="e80a6-116">挿入モードでの自動生成されたキー フィールドを非表示にするときにこれは一般的です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-116">This is commonly done when you want to hide an automatically generated key field in insert mode.</span></span>  
  
 <span data-ttu-id="e80a6-117">ヘッダーとフッター セクションをカスタマイズすることができます、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-117">You can customize the header and footer sections of a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-118">ヘッダーまたはページ フッターのセクションでは、キャプションを表示するには、設定、<xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>または<xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>プロパティでは、それぞれします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-118">To display a caption in the header or footer sections, set the <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> or <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> properties, respectively.</span></span> <span data-ttu-id="e80a6-119">設定して、イメージを表示するテキストを表示するヘッダーのセクションでは、代わりに、<xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-119">Instead of displaying text in the header section, you can display an image by setting the <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> property.</span></span> <span data-ttu-id="e80a6-120">ヘッダー セクションを非表示にできる、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを設定して、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-120">The header section can be hidden in the <xref:System.Web.UI.WebControls.BoundField> object by setting the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-121">一部のデータ バインド コントロール (など、<xref:System.Web.UI.WebControls.GridView>コントロール) を表示またはコントロールのすべてのヘッダー セクションのみを非表示にできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-121">Some data-bound controls (such as the <xref:System.Web.UI.WebControls.GridView> control) can show or hide only the entire header section of the control.</span></span> <span data-ttu-id="e80a6-122">これらのデータ バインド コントロールをサポートしていない、<xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>個々 のバインドされたフィールドのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-122">These data-bound controls do not support the <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> property for an individual bound field.</span></span> <span data-ttu-id="e80a6-123">表示または (該当する場合)、データ バインド コントロールのすべてのヘッダー セクションを非表示には、使用して、コントロールの`ShowHeader`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-123">To show or hide the entire header section of a data-bound control (if available), use the control's `ShowHeader` property.</span></span>  
  
 <span data-ttu-id="e80a6-124">外観をカスタマイズできる、<xref:System.Web.UI.WebControls.BoundField>フィールドのさまざまな部分のスタイル プロパティを設定して、オブジェクト (フォントの色や背景色、)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-124">You also can customize the appearance of the <xref:System.Web.UI.WebControls.BoundField> object (font color, background color, and so on) by setting the style properties for the different parts of the field.</span></span> <span data-ttu-id="e80a6-125">次の表は、異なるスタイル プロパティを一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-125">The following table lists the different style properties.</span></span>  
  
|<span data-ttu-id="e80a6-126">スタイル プロパティ</span><span class="sxs-lookup"><span data-stu-id="e80a6-126">Style property</span></span>|<span data-ttu-id="e80a6-127">説明</span><span class="sxs-lookup"><span data-stu-id="e80a6-127">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>|<span data-ttu-id="e80a6-128">子の Web サーバー コントロールのスタイル設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-128">The style settings for the child Web server controls of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>|<span data-ttu-id="e80a6-129">フッター セクションのスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-129">The style settings for the footer section of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>|<span data-ttu-id="e80a6-130">ヘッダー セクションのスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-130">The style settings for the header section of the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
|<xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>|<span data-ttu-id="e80a6-131">内のデータ項目のスタイルの設定、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-131">The style settings for the data items in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>|  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-132">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField>内のフィールドの値を表示するオブジェクト、<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e80a6-132">The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.BoundField> object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.GridView" />
    <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
    <altmember cref="T:System.Web.UI.WebControls.DetailsView" />
    <altmember cref="P:System.Web.UI.WebControls.DetailsView.Fields" />
    <altmember cref="T:System.Web.UI.WebControls.ButtonField" />
    <altmember cref="T:System.Web.UI.WebControls.CheckBoxField" />
    <altmember cref="T:System.Web.UI.WebControls.CommandField" />
    <altmember cref="T:System.Web.UI.WebControls.DataControlField" />
    <altmember cref="T:System.Web.UI.WebControls.HyperLinkField" />
    <altmember cref="T:System.Web.UI.WebControls.TemplateField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.InsertVisible" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
    <altmember cref="P:System.Web.UI.WebControls.CheckBoxField.Text" />
    <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
    <altmember cref="P:System.Web.UI.WebControls.DataControlField.Visible" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public BoundField ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; BoundField();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e80a6-133"><see cref="T:System.Web.UI.WebControls.BoundField" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-133">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.BoundField" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-134">新しいインスタンスを初期化するためにこのコンス トラクターを使用して、<xref:System.Web.UI.WebControls.BoundField>クラス。</span><span class="sxs-lookup"><span data-stu-id="e80a6-134">Use this constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.BoundField> class.</span></span> <span data-ttu-id="e80a6-135">このコンス トラクターは、動的に作成されたデータ バインド コントロールにフィールドを追加するときに通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-135">This constructor is commonly used when adding fields to a dynamically created data-bound control.</span></span>  
  
 <span data-ttu-id="e80a6-136">動的に追加する、<xref:System.Web.UI.WebControls.BoundField>データ バインド コントロールにオブジェクトを新規作成<xref:System.Web.UI.WebControls.BoundField>オブジェクトでそのプロパティを設定し、データ バインド コントロールのフィールド コレクションに追加します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-136">To dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a data-bound control, create a new <xref:System.Web.UI.WebControls.BoundField> object, set its properties, and then add it to the data-bound control's field collection.</span></span> <span data-ttu-id="e80a6-137">たとえば、使用する場合、<xref:System.Web.UI.WebControls.GridView>コントロールを追加、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.GridView.Columns%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="e80a6-137">For example, if you are using the <xref:System.Web.UI.WebControls.GridView> control, add the <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.GridView.Columns%2A> collection.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-138">フィールドは、データ バインド コントロールに動的に追加することができます、強くお勧めするフィールドに静的に宣言されているとし、表示/非表示、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="e80a6-138">Although you can dynamically add fields to a data-bound control, it is strongly recommended that fields be statically declared and then shown or hidden, as appropriate.</span></span> <span data-ttu-id="e80a6-139">すべてのフィールドを静的に宣言すると、親データ バインド コントロールのビュー ステートのサイズが減ります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-139">Statically declaring all of your fields reduces the size of the view state for the parent data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-140">次のコード例は、コンス トラクターを使用して動的に追加する方法を示します、<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e80a6-140">The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundFieldCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldCtor/CS/boundfieldctorcs.aspx#1)]
 [!code-aspx-vb[BoundFieldCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldCtor/VB/boundfieldctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.GridView" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.Columns" />
      </Docs>
    </Member>
    <Member MemberName="ApplyFormatInEditMode">
      <MemberSignature Language="C#" Value="public virtual bool ApplyFormatInEditMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ApplyFormatInEditMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ApplyFormatInEditMode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ApplyFormatInEditMode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ApplyFormatInEditMode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-141"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> オブジェクトを格納しているデータ バインド コントロールが編集モードである場合に、<see cref="T:System.Web.UI.WebControls.BoundField" /> プロパティで指定した書式指定文字列をフィールド値に適用するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-141">Gets or sets a value indicating whether the formatting string specified by the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property is applied to field values when the data-bound control that contains the <see cref="T:System.Web.UI.WebControls.BoundField" /> object is in edit mode.</span></span></summary>
        <value><span data-ttu-id="e80a6-142">編集モードで書式指定文字列をフィールド値に適用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-142"><see langword="true" /> to apply the formatting string to field values in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e80a6-143">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-143">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-144">データ バインド コントロール (など<xref:System.Web.UI.WebControls.DetailsView>、 <xref:System.Web.UI.WebControls.FormView>、および<xref:System.Web.UI.WebControls.GridView>) ユーザーが読み取り、編集、またはレコードを挿入できるようにするさまざまな表示モードがあります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-144">Data-bound controls (such as <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, and <xref:System.Web.UI.WebControls.GridView>) have different display modes that allow the user to read, edit, or insert records.</span></span> <span data-ttu-id="e80a6-145">既定では、書式指定文字列を指定して、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティは、データ バインド コントロールが読み取り専用モードの場合にのみ、フィールド値に適用します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-145">By default, the formatting string specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied to field values only when the data-bound control is in read-only mode.</span></span> <span data-ttu-id="e80a6-146">書式指定文字列をデータ バインド コントロールが編集モードの間に表示される値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-146">To apply the formatting string to values displayed while the data-bound control is in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-147">A<xref:System.Web.UI.WebControls.BoundField>オブジェクトは自動的に削除されませんデータ ソースのフィールドが更新されたときに書式設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-147">A <xref:System.Web.UI.WebControls.BoundField> object does not automatically remove the formatting when the field is updated in the data source.</span></span> <span data-ttu-id="e80a6-148">格納されている値の一部として書式設定したくない場合は、書式設定をプログラムで削除する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-148">If you do not want the formatting as part of the value stored, you will need to remove the formatting programmatically.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-149">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>中にフィールドの値を文字列の書式を適用するプロパティを<xref:System.Web.UI.WebControls.GridView>コントロールが編集モードにします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-149">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode.</span></span> <span data-ttu-id="e80a6-150">書式設定し、プログラムで削除データ ソースの値が更新される前にされます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-150">The formatting is then programmatically removed before the value is updated in the data source.</span></span>  
  
 [!code-aspx-csharp[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldapplyformatineditmode/CS/boundfieldapplyformatineditmodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldApplyFormatInEditMode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldapplyformatineditmode/VB/boundfieldapplyformatineditmodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="E:System.Web.UI.WebControls.GridView.RowUpdating" />
        <altmember cref="E:System.Web.UI.WebControls.DetailsView.ItemUpdating" />
      </Docs>
    </Member>
    <Member MemberName="ConvertEmptyStringToNull">
      <MemberSignature Language="C#" Value="public virtual bool ConvertEmptyStringToNull { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ConvertEmptyStringToNull" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ConvertEmptyStringToNull As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ConvertEmptyStringToNull { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ConvertEmptyStringToNull : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-151">データ ソースでデータ フィールドを更新したときに、空の文字列値 ("") を null 値に自動的に変換するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-151">Gets or sets a value indicating whether empty string values ("") are automatically converted to null values when the data field is updated in the data source.</span></span></summary>
        <value><span data-ttu-id="e80a6-152">空の文字列値を null 値に自動的に変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-152"><see langword="true" /> to automatically convert empty string values to null values; otherwise, the <see langword="false" />.</span></span> <span data-ttu-id="e80a6-153">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-153">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-154">ユーザーは、フィールドの値を更新またはレコードを挿入するときの空の文字列を入力する可能性があります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-154">Sometimes the user might enter an empty string for a field value when updating or inserting records.</span></span> <span data-ttu-id="e80a6-155">使用して、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティをデータ ソースのデータ フィールドが更新されたときに空の文字列値が自動的に null に変換するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-155">Use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify whether an empty string value is automatically converted to null when the data field is updated in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-156">既定で、<xref:System.Web.UI.WebControls.BoundField>オブジェクトでは、null 値が、空の文字列として表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-156">By default, a <xref:System.Web.UI.WebControls.BoundField> object displays null values as empty strings.</span></span> <span data-ttu-id="e80a6-157">別の値を表示するには、設定、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-157">To display a different value, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-158">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>ことを指定するプロパティを空の文字列 ("") フィールドの値は null に自動的に変換する必要があります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-158">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to specify that an empty string ("") field value should automatically be converted to null.</span></span>  
  
 [!code-aspx-csharp[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/csharp/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/CS/boundfieldconvertemptystingtonullcs.aspx#1)]
 [!code-aspx-vb[BoundFieldConvertEmptyStringToNull#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/boundfieldconvertemptystringtonull/VB/boundfieldconvertemptystingtonullvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="CopyProperties">
      <MemberSignature Language="C#" Value="protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void CopyProperties(class System.Web.UI.WebControls.DataControlField newField) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub CopyProperties (newField As DataControlField)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void CopyProperties(System::Web::UI::WebControls::DataControlField ^ newField);" />
      <MemberSignature Language="F#" Value="override this.CopyProperties : System.Web.UI.WebControls.DataControlField -&gt; unit" Usage="boundField.CopyProperties newField" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="newField" Type="System.Web.UI.WebControls.DataControlField" />
      </Parameters>
      <Docs>
        <param name="newField"><span data-ttu-id="e80a6-159">現在の <see cref="T:System.Web.UI.WebControls.DataControlField" /> のプロパティをコピーする <see cref="T:System.Web.UI.WebControls.BoundField" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-159">The <see cref="T:System.Web.UI.WebControls.DataControlField" /> to copy the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> to.</span></span></param>
        <summary><span data-ttu-id="e80a6-160"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトの現在のプロパティを、指定された <see cref="T:System.Web.UI.WebControls.DataControlField" /> オブジェクトにコピーします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-160">Copies the properties of the current <see cref="T:System.Web.UI.WebControls.BoundField" /> object to the specified <see cref="T:System.Web.UI.WebControls.DataControlField" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-161"><xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A>メソッドは、ヘルパー メソッドで使用される、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>メソッドは、現在のプロパティをコピーする<xref:System.Web.UI.WebControls.BoundField>オブジェクトを<xref:System.Web.UI.WebControls.DataControlField>メソッドによって作成されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-161">The <xref:System.Web.UI.WebControls.BoundField.CopyProperties%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> method to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to the <xref:System.Web.UI.WebControls.DataControlField> object created by the method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CreateField" />
      </Docs>
    </Member>
    <Member MemberName="CreateField">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.DataControlField CreateField ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.DataControlField CreateField() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.CreateField" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateField () As DataControlField" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::DataControlField ^ CreateField();" />
      <MemberSignature Language="F#" Value="override this.CreateField : unit -&gt; System.Web.UI.WebControls.DataControlField" Usage="boundField.CreateField " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.DataControlField</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e80a6-162">空の <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-162">Creates an empty <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="e80a6-163">空の <see cref="T:System.Web.UI.WebControls.BoundField" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-163">An empty <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-164"><xref:System.Web.UI.WebControls.BoundField.CreateField%2A>メソッドで使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType>空を作成するメソッドを<xref:System.Web.UI.WebControls.BoundField>、現在のプロパティをコピーするオブジェクト<xref:System.Web.UI.WebControls.BoundField>オブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-164">The <xref:System.Web.UI.WebControls.BoundField.CreateField%2A> method is a helper method used by the <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=nameWithType> method to create an empty <xref:System.Web.UI.WebControls.BoundField> object to copy the properties of the current <xref:System.Web.UI.WebControls.BoundField> object to.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.CloneField" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)" />
      </Docs>
    </Member>
    <Member MemberName="DataField">
      <MemberSignature Language="C#" Value="public virtual string DataField { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataField" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataField" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataField As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataField { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataField : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataField" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
          <AttributeName>System.ComponentModel.TypeConverter("System.Web.UI.Design.DataSourceViewSchemaConverter, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-165"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドするデータ フィールドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-165">Gets or sets the name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="e80a6-166"><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドするデータ フィールドの名前。</span><span class="sxs-lookup"><span data-stu-id="e80a6-166">The name of the data field to bind to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span> <span data-ttu-id="e80a6-167">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-167">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-168">使用して、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>プロパティにバインドするデータ フィールドの名前を指定する、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-168">Use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify the name of the data field to bind to the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-169">指定したフィールドの値が表示されます、<xref:System.Web.UI.WebControls.BoundField>テキストとしてのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-169">The values of the specified field are displayed in the <xref:System.Web.UI.WebControls.BoundField> object as text.</span></span> <span data-ttu-id="e80a6-170">必要に応じて設定して、表示されるテキストをフォーマットすることができます、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-170">You can optionally format the displayed text by setting the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-171">フィールドの値が null の場合、空の文字列 ("") は、既定値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-171">If a field's value is null, an empty string ("") is displayed for the value by default.</span></span> <span data-ttu-id="e80a6-172">代替のキャプションを指定するには、設定、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-172">To specify an alternate caption, set the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-173">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.DataField%2A>に表示するフィールドを指定するプロパティを<xref:System.Web.UI.WebControls.BoundField>のフィールド列を<xref:System.Web.UI.WebControls.GridView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e80a6-173">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.DataField%2A> property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      </Docs>
    </Member>
    <Member MemberName="DataFormatString">
      <MemberSignature Language="C#" Value="public virtual string DataFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string DataFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DataFormatString As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ DataFormatString { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.DataFormatString : string with get, set" Usage="System.Web.UI.WebControls.BoundField.DataFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-174">フィールドの値の表示形式を指定する文字列を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-174">Gets or sets the string that specifies the display format for the value of the field.</span></span></summary>
        <value><span data-ttu-id="e80a6-175">フィールドの値の表示形式を指定する書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="e80a6-175">A formatting string that specifies the display format for the value of the field.</span></span> <span data-ttu-id="e80a6-176">既定値は空の文字列 ("") です。この値は、フィールド値に適用される特定の書式が設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-176">The default is an empty string (""), which indicates that no special formatting is applied to the field value.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-177">使用して、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>で表示される値のカスタムの表示形式を指定するプロパティ、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-177">Use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values that are displayed in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-178">場合、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティが設定されていない場合、特別な書式を持たない、フィールドの値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-178">If the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is not set, the field's value is displayed without any special formatting.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-179">3.5 より前のバージョンの ASP.NET で設定する必要があります、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティを`false`書式を設定するためにはフィールドしない文字列データ型。</span><span class="sxs-lookup"><span data-stu-id="e80a6-179">In versions of ASP.NET earlier than 3.5, you must set the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to `false` in order to format fields that are not string data types.</span></span> <span data-ttu-id="e80a6-180">格納されている書式指定文字列の前に、既定の変換メソッドによって、フィールドの値を文字列に変換は、それ以外の場合、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティが適用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-180">Otherwise, the field value is converted to a string by the default conversion method before the format string that is stored in the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property is applied.</span></span>  
  
 <span data-ttu-id="e80a6-181">既定では、書式指定文字列がフィールドの値に適用、データ バインド コントロールを格納している場合にのみ、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは読み取り専用モードにします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-181">By default, the formatting string is applied to the field value only when the data-bound control that contains the <xref:System.Web.UI.WebControls.BoundField> object is in read-only mode.</span></span> <span data-ttu-id="e80a6-182">書式指定文字列を編集モードでフィールドの値に適用するには、設定、<xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-182">To apply the formatting string to field values while in edit mode, set the <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> property to `true`.</span></span>  
  
 <span data-ttu-id="e80a6-183">書式指定文字列に任意のリテラル文字列をでき、通常、フィールドの値のプレース ホルダーが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-183">The formatting string can be any literal string and usually includes a placeholder for the field's value.</span></span> <span data-ttu-id="e80a6-184">たとえば、書式指定文字列で`Item Value: {0}`のフィールドの値に置き換えられます、{0}プレース ホルダー文字列が表示されたら、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-184">For example, in the formatting string `Item Value: {0}`, the field's value is substituted for the {0} placeholder when the string is displayed in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-185">書式指定文字列の残りの部分は、リテラル テキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-185">The rest of the formatting string is displayed as literal text.</span></span>  
  
 <span data-ttu-id="e80a6-186">書式指定文字列にプレース ホルダーが含まれていない場合は、(データ ソースからのフィールドの値は含まれません)、最終的な表示テキストの書式指定文字列自体のみが含まれます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-186">If the formatting string does not include a placeholder, only the formatting string itself is included in the final display text (the field's value from the data source is not included).</span></span> <span data-ttu-id="e80a6-187">プレース ホルダーが前の例で示すように、中かっこで囲まれた 0 (ゼロ) の場合は、既定の方法で、フィールドの値が文字列に変換されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-187">If the placeholder is a 0 (zero) enclosed in curly braces as shown in the preceding example, the field value is converted to a string by the default method.</span></span> <span data-ttu-id="e80a6-188">0 には、フィールドの値の書式設定方法を指定する文字列を追加できます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-188">You can append to the zero a string that specifies how the field value should be formatted.</span></span> <span data-ttu-id="e80a6-189">たとえば、プレース ホルダー`{0:C}`数値フィールドがフィールドの値が通貨形式に変換されることを指定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-189">For example, the placeholder `{0:C}` for a numeric field specifies that value of the field should be converted to a currency format.</span></span>  
  
 <span data-ttu-id="e80a6-190">使用して書式設定が適用される、<xref:System.String.Format%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e80a6-190">Formatting is applied by using the <xref:System.String.Format%2A> method.</span></span> <span data-ttu-id="e80a6-191">左中かっこに続く数値をそのメソッドで使用される構文の一部であり、プレース ホルダーを使用する一連の値のどれを示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-191">The number that follows the left curly brace is part of the syntax used by that method and indicates which one of a series of values the placeholder should use.</span></span> <span data-ttu-id="e80a6-192">各セルにフィールド値の 1 つだけがあるため、左中かっこに続く番号は 0 にのみ設定できます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-192">Because there is only one field value in each cell, the number that follows the left curly brace can only be set to 0.</span></span>  
  
 <span data-ttu-id="e80a6-193">次の表では、標準書式文字の数値フィールドの一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-193">The following table lists the standard format characters for numeric fields.</span></span> <span data-ttu-id="e80a6-194">これらの形式の文字はを除き、大文字小文字が区別`X`、指定されている場合は、16 進数の文字が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-194">These format characters are not case-sensitive, except for `X`, which displays hexadecimal characters in the case that is specified.</span></span> <span data-ttu-id="e80a6-195">表示する数の有効桁数または小数点以下桁数を指定するには、ほとんどの書式指定文字に数値を追加できます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-195">You can append a number to most format characters in order to specify how many significant digits or decimal places you want to display.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-196">ほとんどの場合、書式設定は、サーバーのカルチャ設定に依存します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-196">In most cases, formatting depends on the server's culture setting.</span></span> <span data-ttu-id="e80a6-197">カルチャ設定の例は、`en-US`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-197">The examples are for a culture setting of `en-US`.</span></span>  
  
|<span data-ttu-id="e80a6-198">書式指定文字</span><span class="sxs-lookup"><span data-stu-id="e80a6-198">Format character</span></span>|<span data-ttu-id="e80a6-199">説明</span><span class="sxs-lookup"><span data-stu-id="e80a6-199">Description</span></span>|<span data-ttu-id="e80a6-200">例</span><span class="sxs-lookup"><span data-stu-id="e80a6-200">Example</span></span>|  
|----------------------|-----------------|-------------|  
|<span data-ttu-id="e80a6-201">`C` または `c`</span><span class="sxs-lookup"><span data-stu-id="e80a6-201">`C` or `c`</span></span>|<span data-ttu-id="e80a6-202">通貨書式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-202">Displays numeric values in currency format.</span></span> <span data-ttu-id="e80a6-203">小数点以下桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-203">You can specify the number of decimal places.</span></span>|<span data-ttu-id="e80a6-204">書式: `{0:C}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-204">Format: `{0:C}`</span></span><br /><br /> <span data-ttu-id="e80a6-205">123.456 -> $123.46</span><span class="sxs-lookup"><span data-stu-id="e80a6-205">123.456 -> $123.46</span></span><br /><br /> <span data-ttu-id="e80a6-206">書式: `{0:C3}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-206">Format: `{0:C3}`</span></span><br /><br /> <span data-ttu-id="e80a6-207">123.456  -> $123.456</span><span class="sxs-lookup"><span data-stu-id="e80a6-207">123.456  -> $123.456</span></span>|  
|<span data-ttu-id="e80a6-208">`D` または `d`</span><span class="sxs-lookup"><span data-stu-id="e80a6-208">`D` or `d`</span></span>|<span data-ttu-id="e80a6-209">10 進数形式で整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-209">Displays integer values in decimal format.</span></span> <span data-ttu-id="e80a6-210">以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-210">You can specify the number of digits.</span></span> <span data-ttu-id="e80a6-211">(種類は、"decimal"と呼ばれて、数値としてフォーマットされます整数。)</span><span class="sxs-lookup"><span data-stu-id="e80a6-211">(Although the type is referred to as "decimal", the numbers are formatted as integers.)</span></span>|<span data-ttu-id="e80a6-212">書式: `{0:D}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-212">Format: `{0:D}`</span></span><br /><br /> <span data-ttu-id="e80a6-213">1234 -> 1234</span><span class="sxs-lookup"><span data-stu-id="e80a6-213">1234 -> 1234</span></span><br /><br /> <span data-ttu-id="e80a6-214">書式: `{0:D6}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-214">Format: `{0:D6}`</span></span><br /><br /> <span data-ttu-id="e80a6-215">1234  -> 001234</span><span class="sxs-lookup"><span data-stu-id="e80a6-215">1234  -> 001234</span></span>|  
|<span data-ttu-id="e80a6-216">`E` または `e`</span><span class="sxs-lookup"><span data-stu-id="e80a6-216">`E` or `e`</span></span>|<span data-ttu-id="e80a6-217">指数 (指数) 形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-217">Displays numeric values in scientific (exponential) format.</span></span> <span data-ttu-id="e80a6-218">小数点以下桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-218">You can specify the number of decimal places.</span></span>|<span data-ttu-id="e80a6-219">書式: `{0:E}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-219">Format: `{0:E}`</span></span><br /><br /> <span data-ttu-id="e80a6-220">1052.0329112756 -> 1.052033E+003</span><span class="sxs-lookup"><span data-stu-id="e80a6-220">1052.0329112756 -> 1.052033E+003</span></span><br /><br /> <span data-ttu-id="e80a6-221">書式: `{0:E2}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-221">Format: `{0:E2}`</span></span><br /><br /> <span data-ttu-id="e80a6-222">-1052.0329112756 -> -1.05e+003</span><span class="sxs-lookup"><span data-stu-id="e80a6-222">-1052.0329112756 -> -1.05e+003</span></span>|  
|<span data-ttu-id="e80a6-223">`F` または `f`</span><span class="sxs-lookup"><span data-stu-id="e80a6-223">`F` or `f`</span></span>|<span data-ttu-id="e80a6-224">固定形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-224">Displays numeric values in fixed format.</span></span> <span data-ttu-id="e80a6-225">小数点以下桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-225">You can specify the number of decimal places.</span></span>|<span data-ttu-id="e80a6-226">書式: `{0:F}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-226">Format: `{0:F}`</span></span><br /><br /> <span data-ttu-id="e80a6-227">1234.567 -> 1234.57</span><span class="sxs-lookup"><span data-stu-id="e80a6-227">1234.567 -> 1234.57</span></span><br /><br /> <span data-ttu-id="e80a6-228">書式: `{0:F3}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-228">Format: `{0:F3}`</span></span><br /><br /> <span data-ttu-id="e80a6-229">1234.567 -> 1234.567</span><span class="sxs-lookup"><span data-stu-id="e80a6-229">1234.567 -> 1234.567</span></span>|  
|<span data-ttu-id="e80a6-230">`G` または `g`</span><span class="sxs-lookup"><span data-stu-id="e80a6-230">`G` or `g`</span></span>|<span data-ttu-id="e80a6-231">一般的な形式 (最も簡潔なのか、固定小数点または科学的表記法) では、数値の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-231">Displays numeric values in general format (the most compact of either fixed-point or scientific notation).</span></span> <span data-ttu-id="e80a6-232">有効桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-232">You can specify the number of significant digits.</span></span>|<span data-ttu-id="e80a6-233">書式: `{0:G}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-233">Format: `{0:G}`</span></span><br /><br /> <span data-ttu-id="e80a6-234">-123.456 -> -123.456</span><span class="sxs-lookup"><span data-stu-id="e80a6-234">-123.456 -> -123.456</span></span><br /><br /> <span data-ttu-id="e80a6-235">書式: `{0:G2}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-235">Format: `{0:G2}`</span></span><br /><br /> <span data-ttu-id="e80a6-236">-123.456 -> -120</span><span class="sxs-lookup"><span data-stu-id="e80a6-236">-123.456 -> -120</span></span>|  
|<span data-ttu-id="e80a6-237">`N` または `n`</span><span class="sxs-lookup"><span data-stu-id="e80a6-237">`N` or `n`</span></span>|<span data-ttu-id="e80a6-238">(グループ区切り記号と省略可能なマイナス記号を含む) の番号形式で数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-238">Displays numeric values in number format (including group separators and optional negative sign).</span></span> <span data-ttu-id="e80a6-239">小数点以下桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-239">You can specify the number of decimal places.</span></span>|<span data-ttu-id="e80a6-240">書式: `{0:N}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-240">Format: `{0:N}`</span></span><br /><br /> <span data-ttu-id="e80a6-241">1234.567 -> 1,234.57</span><span class="sxs-lookup"><span data-stu-id="e80a6-241">1234.567 -> 1,234.57</span></span><br /><br /> <span data-ttu-id="e80a6-242">書式: `{0:N4}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-242">Format: `{0:N4}`</span></span><br /><br /> <span data-ttu-id="e80a6-243">1234.567 -> 1,234.5670</span><span class="sxs-lookup"><span data-stu-id="e80a6-243">1234.567 -> 1,234.5670</span></span>|  
|<span data-ttu-id="e80a6-244">`P` または `p`</span><span class="sxs-lookup"><span data-stu-id="e80a6-244">`P` or `p`</span></span>|<span data-ttu-id="e80a6-245">数値をパーセント形式で表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-245">Displays numeric values in percent format.</span></span> <span data-ttu-id="e80a6-246">小数点以下桁数を指定することができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-246">You can specify the number of decimal places.</span></span>|<span data-ttu-id="e80a6-247">書式: `{0:P}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-247">Format: `{0:P}`</span></span><br /><br /> <span data-ttu-id="e80a6-248">1 -> 100.00%</span><span class="sxs-lookup"><span data-stu-id="e80a6-248">1 -> 100.00%</span></span><br /><br /> <span data-ttu-id="e80a6-249">書式: `{0:P1}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-249">Format: `{0:P1}`</span></span><br /><br /> <span data-ttu-id="e80a6-250">.5 -> 50.0%</span><span class="sxs-lookup"><span data-stu-id="e80a6-250">.5 -> 50.0%</span></span>|  
|<span data-ttu-id="e80a6-251">`R` または `r`</span><span class="sxs-lookup"><span data-stu-id="e80a6-251">`R` or `r`</span></span>|<span data-ttu-id="e80a6-252">表示<xref:System.Single>、 <xref:System.Double>、または`BigInteger`ラウンドト リップ書式内の値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-252">Displays <xref:System.Single>, <xref:System.Double>, or `BigInteger` values in round-trip format.</span></span>|<span data-ttu-id="e80a6-253">書式: `{0:R}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-253">Format: `{0:R}`</span></span><br /><br /> <span data-ttu-id="e80a6-254">123456789.12345678 -> 123456789.12345678</span><span class="sxs-lookup"><span data-stu-id="e80a6-254">123456789.12345678 -> 123456789.12345678</span></span>|  
|<span data-ttu-id="e80a6-255">`X` または `x`</span><span class="sxs-lookup"><span data-stu-id="e80a6-255">`X` or `x`</span></span>|<span data-ttu-id="e80a6-256">16 進形式で整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-256">Displays integer values in hexadecimal format.</span></span> <span data-ttu-id="e80a6-257">以下の桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-257">You can specify the number of digits.</span></span>|<span data-ttu-id="e80a6-258">書式: `{0:X}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-258">Format: `{0:X}`</span></span><br /><br /> <span data-ttu-id="e80a6-259">255 -> FF</span><span class="sxs-lookup"><span data-stu-id="e80a6-259">255 -> FF</span></span><br /><br /> <span data-ttu-id="e80a6-260">書式: `{0:x4}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-260">Format: `{0:x4}`</span></span><br /><br /> <span data-ttu-id="e80a6-261">255  -> 00ff</span><span class="sxs-lookup"><span data-stu-id="e80a6-261">255  -> 00ff</span></span>|  
  
 <span data-ttu-id="e80a6-262">詳細については、およびその他のカルチャ値の書式を示す例については、「 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-262">For more information and for examples that show formatting for other culture values, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md).</span></span> <span data-ttu-id="e80a6-263">カスタム数値書式指定文字列を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-263">You can also create custom numeric format strings.</span></span> <span data-ttu-id="e80a6-264">詳細については、「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="e80a6-264">For more information, see [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
 <span data-ttu-id="e80a6-265">次の表に、書式文字の<xref:System.DateTime>フィールド。</span><span class="sxs-lookup"><span data-stu-id="e80a6-265">The following table lists format characters for <xref:System.DateTime> fields.</span></span> <span data-ttu-id="e80a6-266">これらの書式指定のほとんどは、カルチャ設定によって異なる出力にあります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-266">Most of these formatting specifications result in a different output depending on culture settings.</span></span> <span data-ttu-id="e80a6-267">これらの例は、 <xref:System.DateTime> 2009 年 6 月 15 日の値のカルチャ設定と 1時 45分: 30 PM`en-US`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-267">The examples are for a <xref:System.DateTime> value of 6/15/2009 1:45:30 PM with a culture setting of `en-US`.</span></span>  
  
|<span data-ttu-id="e80a6-268">書式指定文字</span><span class="sxs-lookup"><span data-stu-id="e80a6-268">Format character</span></span>|<span data-ttu-id="e80a6-269">説明</span><span class="sxs-lookup"><span data-stu-id="e80a6-269">Description</span></span>|<span data-ttu-id="e80a6-270">例</span><span class="sxs-lookup"><span data-stu-id="e80a6-270">Example</span></span>|  
|----------------------|-----------------|-------------|  
|`d`|<span data-ttu-id="e80a6-271">短い形式の日付パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-271">Short date pattern.</span></span>|<span data-ttu-id="e80a6-272">書式: `{0:d}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-272">Format: `{0:d}`</span></span><br /><br /> <span data-ttu-id="e80a6-273">2009 年 6 月 15 日-&GT; 2009 年 6 月 15 日の午後 1時 45分: 30</span><span class="sxs-lookup"><span data-stu-id="e80a6-273">6/15/2009 1:45:30 PM -> 6/15/2009</span></span>|  
|`D`|<span data-ttu-id="e80a6-274">長い形式の日付パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-274">Long date pattern.</span></span>|<span data-ttu-id="e80a6-275">書式: `{0:D}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-275">Format: `{0:D}`</span></span><br /><br /> <span data-ttu-id="e80a6-276">2009 年 6 月 15 日-> 2009 年 6 月 15 日月曜日の午後 1時 45分: 30</span><span class="sxs-lookup"><span data-stu-id="e80a6-276">6/15/2009 1:45:30 PM ->Monday, June 15, 2009</span></span>|  
|`f`|<span data-ttu-id="e80a6-277">完全な日付と時刻のパターン (短い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-277">Full date/time pattern (short time).</span></span>|<span data-ttu-id="e80a6-278">書式: `{0:f}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-278">Format: `{0:f}`</span></span><br /><br /> <span data-ttu-id="e80a6-279">2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 1時 45分</span><span class="sxs-lookup"><span data-stu-id="e80a6-279">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45 PM</span></span>|  
|`F`|<span data-ttu-id="e80a6-280">完全な日付と時刻のパターン (長い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-280">Full date/time pattern (long time).</span></span>|<span data-ttu-id="e80a6-281">書式: `{0:F}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-281">Format: `{0:F}`</span></span><br /><br /> <span data-ttu-id="e80a6-282">2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 1時 45分: 30</span><span class="sxs-lookup"><span data-stu-id="e80a6-282">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 1:45:30 PM</span></span>|  
|`g`|<span data-ttu-id="e80a6-283">一般の日付と時刻のパターン (短い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-283">General date/time pattern (short time).</span></span>|<span data-ttu-id="e80a6-284">書式: `{0:g}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-284">Format: `{0:g}`</span></span><br /><br /> <span data-ttu-id="e80a6-285">2009 年 6 月 15 日午後 1時 45分: 30 に -&GT; 2009 年 6 月 15 日午後 1時 45分</span><span class="sxs-lookup"><span data-stu-id="e80a6-285">6/15/2009 1:45:30 PM -> 6/15/2009 1:45 PM</span></span>|  
|`G`|<span data-ttu-id="e80a6-286">一般の日付と時刻のパターン (長い形式の時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-286">General date/time pattern (long time).</span></span>|<span data-ttu-id="e80a6-287">書式: `{0:G}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-287">Format: `{0:G}`</span></span><br /><br /> <span data-ttu-id="e80a6-288">2009 年 6 月 15 日午後 1時 45分: 30 に -&GT; 2009 年 6 月 15 日午後 1時 45分: 30</span><span class="sxs-lookup"><span data-stu-id="e80a6-288">6/15/2009 1:45:30 PM -> 6/15/2009 1:45:30 PM</span></span>|  
|<span data-ttu-id="e80a6-289">`M` または `m`</span><span class="sxs-lookup"><span data-stu-id="e80a6-289">`M` or `m`</span></span>|<span data-ttu-id="e80a6-290">月日パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-290">Month/day pattern.</span></span>|<span data-ttu-id="e80a6-291">書式: `{0:M}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-291">Format: `{0:M}`</span></span><br /><br /> <span data-ttu-id="e80a6-292">2009 年 6 月 15 日午後 1時 45分: 30 が 6 月 15 日-></span><span class="sxs-lookup"><span data-stu-id="e80a6-292">6/15/2009 1:45:30 PM -> June 15</span></span>|  
|<span data-ttu-id="e80a6-293">`O` または `o`</span><span class="sxs-lookup"><span data-stu-id="e80a6-293">`O` or `o`</span></span>|<span data-ttu-id="e80a6-294">ラウンドトリップする日付と時刻のパターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-294">Round-trip date/time pattern.</span></span>|<span data-ttu-id="e80a6-295">書式: `{0:o}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-295">Format: `{0:o}`</span></span><br /><br /> <span data-ttu-id="e80a6-296">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000</span><span class="sxs-lookup"><span data-stu-id="e80a6-296">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30.0900000</span></span>|  
|<span data-ttu-id="e80a6-297">`R` または `r`</span><span class="sxs-lookup"><span data-stu-id="e80a6-297">`R` or `r`</span></span>|<span data-ttu-id="e80a6-298">RFC1123 パターン (については、次を参照してください。 <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-298">RFC1123 pattern (for information, see <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=nameWithType>).</span></span>|<span data-ttu-id="e80a6-299">書式: `{0:R}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-299">Format: `{0:R}`</span></span><br /><br /> <span data-ttu-id="e80a6-300">6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT</span><span class="sxs-lookup"><span data-stu-id="e80a6-300">6/15/2009 1:45:30 PM -> Mon, 15 Jun 2009 20:45:30 GMT</span></span>|  
|`s`|<span data-ttu-id="e80a6-301">並べ替え可能な日付と時刻のパターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-301">Sortable date/time pattern.</span></span>|<span data-ttu-id="e80a6-302">書式: `{0:s}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-302">Format: `{0:s}`</span></span><br /><br /> <span data-ttu-id="e80a6-303">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30</span><span class="sxs-lookup"><span data-stu-id="e80a6-303">6/15/2009 1:45:30 PM -> 2009-06-15T13:45:30</span></span>|  
|`t`|<span data-ttu-id="e80a6-304">短い形式の時刻パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-304">Short time pattern.</span></span>|<span data-ttu-id="e80a6-305">書式: `{0:t}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-305">Format: `{0:t}`</span></span><br /><br /> <span data-ttu-id="e80a6-306">2009 年 6 月 15 日午後 1時 45分: 30-1時 45分 PM を &GT;</span><span class="sxs-lookup"><span data-stu-id="e80a6-306">6/15/2009 1:45:30 PM -> 1:45 PM</span></span>|  
|`T`|<span data-ttu-id="e80a6-307">長い形式の時刻パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-307">Long time pattern.</span></span>|<span data-ttu-id="e80a6-308">書式: `{0:T}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-308">Format: `{0:T}`</span></span><br /><br /> <span data-ttu-id="e80a6-309">2009 年 6 月 15 日午後 1時 45分: 30-1時 45分: 30 PM を &GT;</span><span class="sxs-lookup"><span data-stu-id="e80a6-309">6/15/2009 1:45:30 PM -> 1:45:30 PM</span></span>|  
|`u`|<span data-ttu-id="e80a6-310">並べ替え可能な日付と時刻のパターン (世界時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-310">Universal sortable date/time pattern.</span></span>|<span data-ttu-id="e80a6-311">書式: `{0:u}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-311">Format: `{0:u}`</span></span><br /><br /> <span data-ttu-id="e80a6-312">6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z</span><span class="sxs-lookup"><span data-stu-id="e80a6-312">6/15/2009 1:45:30 PM -> 2009-06-15 20:45:30Z</span></span>|  
|`U`|<span data-ttu-id="e80a6-313">完全な日付と時刻のパターン (世界時刻)。</span><span class="sxs-lookup"><span data-stu-id="e80a6-313">Universal full date/time pattern.</span></span>|<span data-ttu-id="e80a6-314">書式: `{0:U}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-314">Format: `{0:U}`</span></span><br /><br /> <span data-ttu-id="e80a6-315">2009 年 6 月 15 日午後 1時 45分: 30 に -> 2009 年 6 月 15 日月曜日午後 8時 45分: 30</span><span class="sxs-lookup"><span data-stu-id="e80a6-315">6/15/2009 1:45:30 PM -> Monday, June 15, 2009 8:45:30 PM</span></span>|  
|<span data-ttu-id="e80a6-316">`Y` または `y`</span><span class="sxs-lookup"><span data-stu-id="e80a6-316">`Y` or `y`</span></span>|<span data-ttu-id="e80a6-317">年月パターン。</span><span class="sxs-lookup"><span data-stu-id="e80a6-317">Year month pattern.</span></span>|<span data-ttu-id="e80a6-318">書式: `{0:Y}`</span><span class="sxs-lookup"><span data-stu-id="e80a6-318">Format: `{0:Y}`</span></span><br /><br /> <span data-ttu-id="e80a6-319">2009 年 6 月 15 日-> 2009 年 6 月の 1時 45分: 30 PM</span><span class="sxs-lookup"><span data-stu-id="e80a6-319">6/15/2009 1:45:30 PM -> June, 2009</span></span>|  
  
 <span data-ttu-id="e80a6-320">詳細については、およびその他のカルチャ値の書式を示す例については、「 [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-320">For more information and for examples that show formatting for other culture values, see [Standard Date and Time Format Strings](~/docs/standard/base-types/standard-date-and-time-format-strings.md).</span></span> <span data-ttu-id="e80a6-321">カスタム日時書式指定文字列を作成することもできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-321">You can also create custom date and time format strings.</span></span> <span data-ttu-id="e80a6-322">詳細については、次を参照してください。 [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-322">For more information, see [Custom Date and Time Format Strings](~/docs/standard/base-types/custom-date-and-time-format-strings.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-323">Visual Studio の Web サイトのプロジェクトとソース コードにこのトピックで提供されています。[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=191889)します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-323">A Visual Studio Web site project with source code is available to accompany this topic: [Download](https://go.microsoft.com/fwlink/?LinkId=191889).</span></span>  
  
 <span data-ttu-id="e80a6-324">次の例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ フィールドの値のカスタムの表示形式を指定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-324">The following example shows how to use the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property to specify a custom display format for the values of a field.</span></span>  
  
  
  
 <span data-ttu-id="e80a6-325">次の例では、この例によって生成される出力の 1 つの行を示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-325">The following example shows one row of the output that is produced by this example.</span></span>  
  
|<span data-ttu-id="e80a6-326">ProductID</span><span class="sxs-lookup"><span data-stu-id="e80a6-326">ProductID</span></span>|<span data-ttu-id="e80a6-327">name</span><span class="sxs-lookup"><span data-stu-id="e80a6-327">Name</span></span>|<span data-ttu-id="e80a6-328">ProductNumber</span><span class="sxs-lookup"><span data-stu-id="e80a6-328">ProductNumber</span></span>|<span data-ttu-id="e80a6-329">ListPrice</span><span class="sxs-lookup"><span data-stu-id="e80a6-329">ListPrice</span></span>|<span data-ttu-id="e80a6-330">[太さ]</span><span class="sxs-lookup"><span data-stu-id="e80a6-330">Weight</span></span>|<span data-ttu-id="e80a6-331">ModifiedDate</span><span class="sxs-lookup"><span data-stu-id="e80a6-331">ModifiedDate</span></span>|  
|---------------|----------|-------------------|---------------|------------|------------------|  
|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="e80a6-332">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="e80a6-332">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ExtractValuesFromCell">
      <MemberSignature Language="C#" Value="public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ExtractValuesFromCell(class System.Collections.Specialized.IOrderedDictionary dictionary, class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ExtractValuesFromCell (dictionary As IOrderedDictionary, cell As DataControlFieldCell, rowState As DataControlRowState, includeReadOnly As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ExtractValuesFromCell(System::Collections::Specialized::IOrderedDictionary ^ dictionary, System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState, bool includeReadOnly);" />
      <MemberSignature Language="F#" Value="override this.ExtractValuesFromCell : System.Collections.Specialized.IOrderedDictionary * System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState * bool -&gt; unit" Usage="boundField.ExtractValuesFromCell (dictionary, cell, rowState, includeReadOnly)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dictionary" Type="System.Collections.Specialized.IOrderedDictionary" />
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="includeReadOnly" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dictionary"><span data-ttu-id="e80a6-333">指定したセルの値の格納に使用する <see cref="T:System.Collections.IDictionary" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-333">A <see cref="T:System.Collections.IDictionary" /> used to store the values of the specified cell.</span></span></param>
        <param name="cell"><span data-ttu-id="e80a6-334">取得する値を格納している <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-334">The <see cref="T:System.Web.UI.WebControls.TableCell" /> that contains the values to retrieve.</span></span></param>
        <param name="rowState"><span data-ttu-id="e80a6-335"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e80a6-335">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <param name="includeReadOnly"><span data-ttu-id="e80a6-336">読み込み専用のフィールドの値を含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-336"><see langword="true" /> to include the values of read-only fields; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e80a6-337">指定した <see cref="T:System.Collections.IDictionary" /> オブジェクトに、指定した <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトの値を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-337">Fills the specified <see cref="T:System.Collections.IDictionary" /> object with the values from the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-338"><xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A>メソッドが、指定したフィールドの値を取得する便利な方法として提供される<xref:System.Web.UI.WebControls.TableCell>でオブジェクトを<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-338">The <xref:System.Web.UI.WebControls.BoundField.ExtractValuesFromCell%2A> method is provided as a convenient way to retrieve the values of the fields from the specified <xref:System.Web.UI.WebControls.TableCell> object in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-339">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-339">This method is used primarily by control developers.</span></span>  
  
 <span data-ttu-id="e80a6-340">このメソッドに戻り値はありません。</span><span class="sxs-lookup"><span data-stu-id="e80a6-340">This method does not have a return value.</span></span> <span data-ttu-id="e80a6-341">フィールドの値がを介して参照によって返される代わりに、<xref:System.Collections.IDictionary?displayProperty=nameWithType>ために、オブジェクトが渡される、`dictionary`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="e80a6-341">Instead, the field values are returned by reference through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object passed in for the `dictionary` parameter.</span></span> <span data-ttu-id="e80a6-342">反復処理するメソッドが呼び出された後、<xref:System.Collections.IDictionary?displayProperty=nameWithType>フィールド値にアクセスするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-342">After the method has been called, iterate through the <xref:System.Collections.IDictionary?displayProperty=nameWithType> object to access the field values.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-343">場合、<xref:System.Web.UI.WebControls.TableCell>オブジェクトが読み取り専用フィールドの値が含まれていますで渡す必要があります`true`の`includeReadOnly`パラメーターをそれらの値が含まれます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-343">If the <xref:System.Web.UI.WebControls.TableCell> object contains read-only field values, you must pass in `true` for the `includeReadOnly` parameter to include those values.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IDictionary" />
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
      </Docs>
    </Member>
    <Member MemberName="FormatDataValue">
      <MemberSignature Language="C#" Value="protected virtual string FormatDataValue (object dataValue, bool encode);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance string FormatDataValue(object dataValue, bool encode) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function FormatDataValue (dataValue As Object, encode As Boolean) As String" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::String ^ FormatDataValue(System::Object ^ dataValue, bool encode);" />
      <MemberSignature Language="F#" Value="abstract member FormatDataValue : obj * bool -&gt; string&#xA;override this.FormatDataValue : obj * bool -&gt; string" Usage="boundField.FormatDataValue (dataValue, encode)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dataValue" Type="System.Object" />
        <Parameter Name="encode" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="dataValue"><span data-ttu-id="e80a6-344">書式を変換するフィールド値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-344">The field value to format.</span></span></param>
        <param name="encode"><span data-ttu-id="e80a6-345">値をエンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-345"><see langword="true" /> to encode the value; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="e80a6-346"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのセルの指定したフィールド値を書式変換します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-346">Formats the specified field value for a cell in the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="e80a6-347"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> で指定した書式に変換するフィールド値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-347">The field value converted to the format specified by <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-348"><xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A>メソッドは、フィールドの値で指定された形式に変換するために使用するヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-348">The <xref:System.Web.UI.WebControls.BoundField.FormatDataValue%2A> method is a helper method used to transform a field value to the format specified by the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span> <span data-ttu-id="e80a6-349">フィールドの値が null の場合の値、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティが返されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-349">If a field value is null, the value of the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property is returned.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-350">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-350">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-351">拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタム書式指定のルーチンを実行するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-351">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom formatting routine.</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="GetDesignTimeValue">
      <MemberSignature Language="C#" Value="protected virtual object GetDesignTimeValue ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetDesignTimeValue() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetDesignTimeValue () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetDesignTimeValue();" />
      <MemberSignature Language="F#" Value="abstract member GetDesignTimeValue : unit -&gt; obj&#xA;override this.GetDesignTimeValue : unit -&gt; obj" Usage="boundField.GetDesignTimeValue " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e80a6-352">デザイナーで <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを表示するときにフィールド値に使用される値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-352">Retrieves the value used for a field's value when rendering the <see cref="T:System.Web.UI.WebControls.BoundField" /> object in a designer.</span></span></summary>
        <returns><span data-ttu-id="e80a6-353">デザイナーでフィールド値として表示する値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-353">The value to display in the designer as the field's value.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-354"><xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>メソッドはどのような値を表示するときにフィールドの表示を決定するためのヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>デザイナー内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-354">The <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is a helper method used to determine what value to display for a field when rendering the <xref:System.Web.UI.WebControls.BoundField> object in a designer.</span></span> <span data-ttu-id="e80a6-355">実際のデータは、デザイン時に、データ ソースから取得することはできません、このメソッドによって返される値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-355">If real data cannot be retrieved from the data source at design time, the value returned by this method is displayed instead.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-356">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-356">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-357">拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラスをデザイナーでフィールドに表示する別の値を返すには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-357">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to return a different value to display for the field in a designer.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="protected virtual object GetValue (System.Web.UI.Control controlContainer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance object GetValue(class System.Web.UI.Control controlContainer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetValue (controlContainer As Control) As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Object ^ GetValue(System::Web::UI::Control ^ controlContainer);" />
      <MemberSignature Language="F#" Value="abstract member GetValue : System.Web.UI.Control -&gt; obj&#xA;override this.GetValue : System.Web.UI.Control -&gt; obj" Usage="boundField.GetValue controlContainer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="controlContainer" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="controlContainer"><span data-ttu-id="e80a6-358">フィールド値のコンテナー。</span><span class="sxs-lookup"><span data-stu-id="e80a6-358">The container for the field value.</span></span></param>
        <summary><span data-ttu-id="e80a6-359"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトにバインドされているフィールドの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-359">Retrieves the value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="e80a6-360"><see cref="T:System.Web.UI.WebControls.BoundField" /> にバインドされているフィールドの値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-360">The value of the field bound to the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-361"><xref:System.Web.UI.WebControls.BoundField.GetValue%2A>メソッドは、ヘルパー メソッド、フィールドの値を決定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-361">The <xref:System.Web.UI.WebControls.BoundField.GetValue%2A> method is a helper method used to determine the value of a field.</span></span> <span data-ttu-id="e80a6-362">場合、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは、デザイナーで表示されていると、デザイン時にフィールドの値を決定することはできませんから返される値、<xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>実際のフィールド値の代わりにメソッドが返されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-362">If the <xref:System.Web.UI.WebControls.BoundField> object is being displayed in a designer and the field value cannot be determined at design time, the value returned from the <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> method is returned instead of the actual field value.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-363">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-363">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e80a6-364"><paramref name="controlContainer" /> パラメーターによって指定されたコンテナーが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-364">The container specified by the <paramref name="controlContainer" /> parameter is <see langword="null" />.</span></span>  
  
<span data-ttu-id="e80a6-365">または</span><span class="sxs-lookup"><span data-stu-id="e80a6-365">-or-</span></span> 
<span data-ttu-id="e80a6-366"><paramref name="controlContainer" /> パラメーターで指定されたコンテナーにデータ項目がありません。</span><span class="sxs-lookup"><span data-stu-id="e80a6-366">The container specified by the <paramref name="controlContainer" /> parameter does not have a data item.</span></span>  
  
<span data-ttu-id="e80a6-367">または</span><span class="sxs-lookup"><span data-stu-id="e80a6-367">-or-</span></span> 
<span data-ttu-id="e80a6-368">データ フィールドが見つかりませんでした。</span><span class="sxs-lookup"><span data-stu-id="e80a6-368">The data field was not found.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-369">拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、フィールドの値を決定するカスタムのルーチンを提供するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-369">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to provide a custom routine to determine a field's value.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.GetDesignTimeValue" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public override string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.HeaderText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.HeaderText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-370">データ コントロールのヘッダーに表示するテキストを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-370">Gets or sets the text that is displayed in the header of a data control.</span></span></summary>
        <value><span data-ttu-id="e80a6-371">データ コントロールのヘッダーに表示されるテキスト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-371">The text displayed in the header of a data control.</span></span> <span data-ttu-id="e80a6-372">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-372">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-373">使用して、<xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>フレンドリ名をデータ コントロール フィールドを識別するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-373">Use the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property to identify a field in a data control with a friendly name.</span></span> <span data-ttu-id="e80a6-374">最も一般的なアプリケーション、<xref:System.Web.UI.WebControls.BoundField.HeaderText%2A>プロパティがデータ バインドのフィールドに意味のある列の名前を指定して、<xref:System.Web.UI.WebControls.GridView>または<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="e80a6-374">The most common application of the <xref:System.Web.UI.WebControls.BoundField.HeaderText%2A> property is to provide meaningful column names to data-bound fields in a <xref:System.Web.UI.WebControls.GridView> or <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncode">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncode { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncode : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-375">フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-375">Gets or sets a value indicating whether field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="e80a6-376">フィールド値を <see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに表示する前に HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-376"><see langword="true" /> if field values are HTML-encoded before they are displayed in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e80a6-377">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-377">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-378">使用して、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>フィールドの値に表示される前に、それぞれの文字列表現を HTML エンコードされた、かどうかを指定するプロパティを<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-378">Use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-379">たとえば、このプロパティは`true`の文字列値"\<スクリプト >"としてレンダリングされます"&lt;スクリプト&gt;"。</span><span class="sxs-lookup"><span data-stu-id="e80a6-379">For example, if this property is `true`, a string value of "\<script>" would be rendered as "&lt;script&gt;".</span></span> <span data-ttu-id="e80a6-380">場合、このプロパティは`false`文字列をレンダリングは変更されません。</span><span class="sxs-lookup"><span data-stu-id="e80a6-380">If this property is `false`, the string would be rendered unchanged.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-381">クロスサイト スクリプト攻撃や悪意のあるコンテンツが表示されていることを防ぐために HTML エンコードのフィールドの値します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-381">HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="e80a6-382">可能であれば、このプロパティを有効にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-382">This property should be enabled whenever possible.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-383">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>プロパティ フィールドの値がで表示される前に HTML エンコードされたをされていることを防ぐために、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-383">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 [!code-aspx-csharp[BoundFieldHtmlEncode#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldHtmlEncode/CS/BoundFieldHtmlEncodecs.aspx#1)]
 [!code-aspx-vb[BoundFieldHtmlEncode#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldHtmlEncode/VB/BoundFieldHtmlEncodevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="HtmlEncodeFormatString">
      <MemberSignature Language="C#" Value="public virtual bool HtmlEncodeFormatString { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HtmlEncodeFormatString" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HtmlEncodeFormatString As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool HtmlEncodeFormatString { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.HtmlEncodeFormatString : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-384"><see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> プロパティを <see cref="T:System.Web.UI.WebControls.BoundField" /> 値に適用することで作成されるテキストを表示するときに、HTML エンコードするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-384">Gets or sets a value that indicates whether text that is created by applying the <see cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" /> property to the <see cref="T:System.Web.UI.WebControls.BoundField" /> value should be HTML encoded when it is displayed.</span></span></summary>
        <value><span data-ttu-id="e80a6-385">テキストを HTML エンコードする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-385"><see langword="true" /> if the text should be HTML-encoded; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e80a6-386">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-386">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-387">HTML エンコードの値は、クロスサイト スクリプト攻撃や悪意のあるコンテンツが表示されないようにできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-387">HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed.</span></span> <span data-ttu-id="e80a6-388">HTML エンコードは便利な場合にも、文字列の表示など、ブラウザーで HTML コードを表示する"\<br/>"、改行を挿入する代わりに (`<br/>`要素) ページでします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-388">HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string "\<br/>" instead of inserting a line break (`<br/>` element) in the page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-389">このプロパティは、ASP.NET 3.5 の新機能です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-389">This property is new in ASP.NET 3.5.</span></span> <span data-ttu-id="e80a6-390">このプロパティを設定`false`の既定の動作を復元、 <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> 3.5 より前のバージョンの ASP.NET のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-390">Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5.</span></span> <span data-ttu-id="e80a6-391">詳細については、<xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> プロパティを参照してください。</span><span class="sxs-lookup"><span data-stu-id="e80a6-391">For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public override bool Initialize (bool enableSorting, System.Web.UI.Control control);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Initialize(bool enableSorting, class System.Web.UI.Control control) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Initialize(bool enableSorting, System::Web::UI::Control ^ control);" />
      <MemberSignature Language="F#" Value="override this.Initialize : bool * System.Web.UI.Control -&gt; bool" Usage="boundField.Initialize (enableSorting, control)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="enableSorting" Type="System.Boolean" />
        <Parameter Name="control" Type="System.Web.UI.Control" />
      </Parameters>
      <Docs>
        <param name="enableSorting"><span data-ttu-id="e80a6-392">並べ替えがサポートされる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-392"><see langword="true" /> if sorting is supported; otherwise, <see langword="false" />.</span></span></param>
        <param name="control"><span data-ttu-id="e80a6-393"><see cref="T:System.Web.UI.WebControls.BoundField" /> を所有しているデータ コントロール。</span><span class="sxs-lookup"><span data-stu-id="e80a6-393">The data control that owns the <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></param>
        <summary><span data-ttu-id="e80a6-394"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-394">Initializes the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <returns><span data-ttu-id="e80a6-395">常に <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-395"><see langword="false" /> in all cases.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-396"><xref:System.Web.UI.WebControls.BoundField.Initialize%2A>メソッドは、データ コントロール、<xref:System.Web.UI.WebControls.BoundField>オブジェクトは、の基本的なオブジェクトの初期化の実行に関連付けられているフィールドが、決して行コレクションに追加する前に、フィールドのインスタンス。</span><span class="sxs-lookup"><span data-stu-id="e80a6-396">The <xref:System.Web.UI.WebControls.BoundField.Initialize%2A> method is called by the data control with which the <xref:System.Web.UI.WebControls.BoundField> object is associated to perform basic object initialization for instances of the field, before the field is ever added to a rows collection.</span></span> <span data-ttu-id="e80a6-397">などのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>呼び出し、<xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>メソッドでその`CreateChildControls`などの他のメソッドの前にメソッド`CreateRow`はデータを特定の行を作成すると呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-397">Data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView> call the <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> method in their `CreateChildControls` methods before other methods such as `CreateRow` are called to create specific rows with data.</span></span>  
  
 <span data-ttu-id="e80a6-398">カスタムのデータ バインドを作成している場合は、このメソッドを制御する呼び出しで使用して<xref:System.Web.UI.WebControls.TableCell>の基本的な初期化を実行するオブジェクト、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-398">Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to perform basic initialization for a <xref:System.Web.UI.WebControls.BoundField> object.</span></span> <span data-ttu-id="e80a6-399">場合、このメソッドを実装、 <xref:System.Web.UI.WebControls.BoundField>-派生型を設定する前に、オブジェクトの初期化を必要と<xref:System.Web.UI.WebControls.TableCell>データ オブジェクトまたはコントロールで、<xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="e80a6-399">Implement this method if your <xref:System.Web.UI.WebControls.BoundField>-derived type requires any object initialization before it populates <xref:System.Web.UI.WebControls.TableCell> objects with data or controls in the <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.TableCell" />
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeCell">
      <MemberSignature Language="C#" Value="public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void InitializeCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlCellType cellType, valuetype System.Web.UI.WebControls.DataControlRowState rowState, int32 rowIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub InitializeCell (cell As DataControlFieldCell, cellType As DataControlCellType, rowState As DataControlRowState, rowIndex As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void InitializeCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlCellType cellType, System::Web::UI::WebControls::DataControlRowState rowState, int rowIndex);" />
      <MemberSignature Language="F#" Value="override this.InitializeCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlCellType * System.Web.UI.WebControls.DataControlRowState * int -&gt; unit" Usage="boundField.InitializeCell (cell, cellType, rowState, rowIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="cellType" Type="System.Web.UI.WebControls.DataControlCellType" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
        <Parameter Name="rowIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="e80a6-400">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-400">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</span></span></param>
        <param name="cellType"><span data-ttu-id="e80a6-401"><see cref="T:System.Web.UI.WebControls.DataControlCellType" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e80a6-401">One of the <see cref="T:System.Web.UI.WebControls.DataControlCellType" /> values.</span></span></param>
        <param name="rowState"><span data-ttu-id="e80a6-402"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e80a6-402">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <param name="rowIndex"><span data-ttu-id="e80a6-403">行の 0 から始まるインデックス。</span><span class="sxs-lookup"><span data-stu-id="e80a6-403">The zero-based index of the row.</span></span></param>
        <summary><span data-ttu-id="e80a6-404">指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-404">Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-405"><xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッドによって実装されます<xref:System.Web.UI.WebControls.BoundField>-テキストとコントロールを追加する型の派生を<xref:System.Web.UI.WebControls.TableCell>テーブルを使用して、ユーザー インターフェイス (UI) を表示するデータ コントロールのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-405">The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is implemented by <xref:System.Web.UI.WebControls.BoundField>-derived types to add text and controls to a <xref:System.Web.UI.WebControls.TableCell> object of a data control that uses tables to display a user interface (UI).</span></span> <span data-ttu-id="e80a6-406">これらのデータ コントロール、完全なテーブル構造の行を作成するときに、コントロールの`CreateChildControls`メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-406">These data controls create the complete table structure row-by-row when the control's `CreateChildControls` method is called.</span></span> <span data-ttu-id="e80a6-407"><xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>メソッドを呼び出して、`InitializeRow`などのメソッドのデータ コントロール<xref:System.Web.UI.WebControls.DetailsView>と<xref:System.Web.UI.WebControls.GridView>します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-407">The <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> method is called by the `InitializeRow` method of data controls such as <xref:System.Web.UI.WebControls.DetailsView> and <xref:System.Web.UI.WebControls.GridView>.</span></span>  
  
 <span data-ttu-id="e80a6-408">カスタムのデータ バインドを作成している場合は、このメソッドを制御する呼び出しで使用して<xref:System.Web.UI.WebControls.TableCell>データやコントロールにテーブル構造のセルを初期化するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-408">Call this method when you are writing a custom data-bound control that uses <xref:System.Web.UI.WebControls.TableCell> objects to initialize the cells of the table structure with data or controls.</span></span> <span data-ttu-id="e80a6-409">記述するときに、このメソッドを実装、 <xref:System.Web.UI.WebControls.BoundField>-クラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-409">Implement this method when you are writing a <xref:System.Web.UI.WebControls.BoundField>-derived class.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      </Docs>
    </Member>
    <Member MemberName="InitializeDataCell">
      <MemberSignature Language="C#" Value="protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void InitializeDataCell(class System.Web.UI.WebControls.DataControlFieldCell cell, valuetype System.Web.UI.WebControls.DataControlRowState rowState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub InitializeDataCell (cell As DataControlFieldCell, rowState As DataControlRowState)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void InitializeDataCell(System::Web::UI::WebControls::DataControlFieldCell ^ cell, System::Web::UI::WebControls::DataControlRowState rowState);" />
      <MemberSignature Language="F#" Value="abstract member InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit&#xA;override this.InitializeDataCell : System.Web.UI.WebControls.DataControlFieldCell * System.Web.UI.WebControls.DataControlRowState -&gt; unit" Usage="boundField.InitializeDataCell (cell, rowState)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="cell" Type="System.Web.UI.WebControls.DataControlFieldCell" />
        <Parameter Name="rowState" Type="System.Web.UI.WebControls.DataControlRowState" />
      </Parameters>
      <Docs>
        <param name="cell"><span data-ttu-id="e80a6-410">初期化する <see cref="T:System.Web.UI.WebControls.TableCell" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-410">The <see cref="T:System.Web.UI.WebControls.TableCell" /> to initialize.</span></span></param>
        <param name="rowState"><span data-ttu-id="e80a6-411"><see cref="T:System.Web.UI.WebControls.DataControlRowState" /> 値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="e80a6-411">One of the <see cref="T:System.Web.UI.WebControls.DataControlRowState" /> values.</span></span></param>
        <summary><span data-ttu-id="e80a6-412">指定された <see cref="T:System.Web.UI.WebControls.TableCell" /> オブジェクトを、指定された行の状態に初期化します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-412">Initializes the specified <see cref="T:System.Web.UI.WebControls.TableCell" /> object to the specified row state.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-413"><xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A>メソッドは、内のセルを初期化するために使用されるヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-413">The <xref:System.Web.UI.WebControls.BoundField.InitializeDataCell%2A> method is a helper method used to initialize a cell in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-414">拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタムの初期化ルーチンを実行するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-414">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom initialization routine.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)" />
        <altmember cref="M:System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ state);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="boundField.LoadViewState state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state"><span data-ttu-id="e80a6-415">復元するコントロールの状態を表します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-415">Represents the control state to be restored.</span></span></param>
        <summary><span data-ttu-id="e80a6-416">このフィールドの、以前保存したビューステート情報を復元します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-416">Restores the previously stored view-state information for this field.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="NullDisplayText">
      <MemberSignature Language="C#" Value="public virtual string NullDisplayText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string NullDisplayText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property NullDisplayText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ NullDisplayText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.NullDisplayText : string with get, set" Usage="System.Web.UI.WebControls.BoundField.NullDisplayText" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-417">フィールド値が null の場合にフィールドに表示するキャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-417">Gets or sets the caption displayed for a field when the field's value is null.</span></span></summary>
        <value><span data-ttu-id="e80a6-418">フィールド値が null の場合にフィールドに表示するキャプション。</span><span class="sxs-lookup"><span data-stu-id="e80a6-418">The caption displayed for a field when the field's value is null.</span></span> <span data-ttu-id="e80a6-419">既定値は空の文字列 ("") です。このプロパティが設定されていないことを示します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-419">The default is an empty string (""), which indicates that this property is not set.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-420">場合によってフィールドの値は、データ ソースの null として格納されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-420">Sometimes a field's value is stored as null in the data source.</span></span> <span data-ttu-id="e80a6-421">設定して null 値を持つフィールドを表示するカスタム キャプションを指定することができます、<xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-421">You can specify a custom caption to display for fields that have a null value by setting the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property.</span></span> <span data-ttu-id="e80a6-422">Null フィールドの値が空の文字列として表示される場合、このプロパティが設定されていない ("")。</span><span class="sxs-lookup"><span data-stu-id="e80a6-422">If this property is not set, null field values are displayed as empty strings ("").</span></span> <span data-ttu-id="e80a6-423">レコードが更新またはユーザーが値を入力した場合、データ バインド コントロールに挿入されたプロパティで指定されたこの (空の文字列) 以外、データ バインド コントロール内のフィールドのデータ ソースの値が自動的に変換を null にします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-423">When a record is being updated or inserted in a data-bound control, if the user enters the value specified by this property (other than an empty string) for a field in a data-bound control, that value is automatically converted to null in the data source.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-424">空の文字列フィールドの値を null 値に変換するには、設定、<xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>プロパティを`true`します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-424">To convert an empty string field value to a null value, set the <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A> property to `true`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-425">次のコード例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> null フィールドの値を表示するカスタム キャプションを指定するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-425">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> property to specify a custom caption to display for null field values.</span></span>  
  
 [!code-aspx-csharp[BoundFieldNullDisplayText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundFieldNullDisplayText/CS/boundfieldnulldisplaytextcs.aspx#1)]
 [!code-aspx-vb[BoundFieldNullDisplayText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundFieldNullDisplayText/VB/boundfieldnulldisplaytextvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataField" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.DataFormatString" />
        <altmember cref="P:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull" />
      </Docs>
    </Member>
    <Member MemberName="OnDataBindField">
      <MemberSignature Language="C#" Value="protected virtual void OnDataBindField (object sender, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnDataBindField(object sender, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnDataBindField (sender As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnDataBindField(System::Object ^ sender, EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="abstract member OnDataBindField : obj * EventArgs -&gt; unit&#xA;override this.OnDataBindField : obj * EventArgs -&gt; unit" Usage="boundField.OnDataBindField (sender, e)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sender" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="sender"><span data-ttu-id="e80a6-426">イベントのソース。</span><span class="sxs-lookup"><span data-stu-id="e80a6-426">The source of the event.</span></span></param>
        <param name="e"><span data-ttu-id="e80a6-427">イベント データを格納している <see cref="T:System.EventArgs" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-427">An <see cref="T:System.EventArgs" /> that contains the event data.</span></span></param>
        <summary><span data-ttu-id="e80a6-428"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトのフィールドの値をバインドします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-428">Binds the value of a field to the <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-429"><xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>メソッドは、対応するセルにデータ ソースのフィールドの値をバインドするために使用するヘルパー メソッド、<xref:System.Web.UI.WebControls.BoundField>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-429">The <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A> method is a helper method used to bind the value of a field in the data source to a corresponding cell in the <xref:System.Web.UI.WebControls.BoundField> object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><span data-ttu-id="e80a6-430">フィールド値のバインド先のコントロールが <see cref="T:System.Web.UI.WebControls.TextBox" /> と <see cref="T:System.Web.UI.WebControls.TableCell" /> のどちらでもありません。</span><span class="sxs-lookup"><span data-stu-id="e80a6-430">The control to which the field value is bound is not a <see cref="T:System.Web.UI.WebControls.TextBox" /> or a <see cref="T:System.Web.UI.WebControls.TableCell" />.</span></span></exception>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-431">拡張するとき、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、カスタム バインドのルーチンを実行するには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-431">When extending the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this method to perform a custom binding routine.</span></span></para></block>
        <altmember cref="T:System.EventArgs" />
        <altmember cref="T:System.Web.HttpException" />
      </Docs>
    </Member>
    <Member MemberName="ReadOnly">
      <MemberSignature Language="C#" Value="public virtual bool ReadOnly { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool ReadOnly { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.ReadOnly : bool with get, set" Usage="System.Web.UI.WebControls.BoundField.ReadOnly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-432">編集モードでフィールドの値を変更できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-432">Gets or sets a value indicating whether the value of the field can be modified in edit mode.</span></span></summary>
        <value><span data-ttu-id="e80a6-433">編集モードでフィールド値を変更できないようにする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="e80a6-433"><see langword="true" /> to prevent the value of the field from being modified in edit mode; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="e80a6-434">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-434">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-435">使用して、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>に表示される値を防ぐためにプロパティを<xref:System.Web.UI.WebControls.BoundField>から変更されているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-435">Use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified.</span></span> <span data-ttu-id="e80a6-436">データ バインド コントロールが編集モードでは、ときに読み取り専用フィールドが編集コントロールなしのプレーン テキストとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-436">When a data-bound control is in edit mode, fields that are read-only are displayed as plain text, without any editing controls.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-437"><xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>プロパティが編集モードにのみ適用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-437">The <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property applies only to edit mode.</span></span> <span data-ttu-id="e80a6-438">フィールドが挿入モードで表示されることを防ぐために使用して、<xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="e80a6-438">To prevent fields from showing up in insert mode, use the <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e80a6-439">次のコード例は、使用する方法を示します、<xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>に表示されるキー フィールドの値を防ぐためにプロパティを<xref:System.Web.UI.WebControls.BoundField>編集モードでは変更されてからのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="e80a6-439">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.</span></span>  
  
 [!code-aspx-csharp[BoundField#1](~/samples/snippets/csharp/VS_Snippets_WebNet/BoundField/CS/boundfieldcs.aspx#1)]
 [!code-aspx-vb[BoundField#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/BoundField/VB/boundfieldvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.DetailsView.AutoGenerateEditButton" />
        <altmember cref="P:System.Web.UI.WebControls.GridView.AutoGenerateEditButton" />
      </Docs>
    </Member>
    <Member MemberName="SupportsHtmlEncode">
      <MemberSignature Language="C#" Value="protected virtual bool SupportsHtmlEncode { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsHtmlEncode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable ReadOnly Property SupportsHtmlEncode As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property bool SupportsHtmlEncode { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsHtmlEncode : bool" Usage="System.Web.UI.WebControls.BoundField.SupportsHtmlEncode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-440"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトで HTML エンコーディングがサポートされるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-440">Gets a value indicating whether HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" /> object.</span></span></summary>
        <value><span data-ttu-id="e80a6-441"><see cref="T:System.Web.UI.WebControls.BoundField" /> で HTML エンコーディングがサポートされる場合は、必ず <see langword="true" /> が返されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-441">Always returns <see langword="true" /> to indicate that HTML encoding is supported by a <see cref="T:System.Web.UI.WebControls.BoundField" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-442"><xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A>プロパティで使用されるヘルパー プロパティ、<xref:System.Web.UI.WebControls.BoundField>クラスと派生クラスをクラスで HTML エンコーディングがサポートされているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-442">The <xref:System.Web.UI.WebControls.BoundField.SupportsHtmlEncode%2A> property is a helper property used by the <xref:System.Web.UI.WebControls.BoundField> class and derived classes to determine whether HTML encoding is supported by the class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-443">派生する場合、<see cref="T:System.Web.UI.WebControls.BoundField" />クラス、クラスで HTML エンコーディングがサポートされているかどうかを示すには、このプロパティをオーバーライドすることができます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-443">When deriving from the <see cref="T:System.Web.UI.WebControls.BoundField" /> class, you can override this property to indicate whether HTML encoding is supported by the class.</span></span></para></block>
        <altmember cref="P:System.Web.UI.WebControls.BoundField.HtmlEncode" />
        <altmember cref="Overload:System.Web.HttpServerUtility.HtmlEncode" />
      </Docs>
    </Member>
    <Member MemberName="ThisExpression">
      <MemberSignature Language="C#" Value="public static readonly string ThisExpression;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string ThisExpression" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly ThisExpression As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ ThisExpression;" />
      <MemberSignature Language="F#" Value=" staticval mutable ThisExpression : string" Usage="System.Web.UI.WebControls.BoundField.ThisExpression" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-444">"this" 式を表します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-444">Represents the "this" expression.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-445">このフィールドはことを示すために使用、<xref:System.Web.UI.WebControls.BoundField>自体ではなく、データ ソースのフィールド、データ ソースに対してオブジェクトがバインドする必要があります。</span><span class="sxs-lookup"><span data-stu-id="e80a6-445">This field is used to indicate that the <xref:System.Web.UI.WebControls.BoundField> object should bind against the data source itself, rather than a field of the data source.</span></span> <span data-ttu-id="e80a6-446">ここでは、オブジェクトの`ToString` フィールドに値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-446">In this case, the object's `ToString` value will be displayed in the field.</span></span>  
  
 <span data-ttu-id="e80a6-447">このフィールドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-447">This field is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <forInternalUseOnly />
      </Docs>
    </Member>
    <Member MemberName="ValidateRequestMode">
      <MemberSignature Language="C#" Value="public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.ValidateRequestMode ValidateRequestMode" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberSignature Language="VB.NET" Value="Public Property ValidateRequestMode As ValidateRequestMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::ValidateRequestMode ValidateRequestMode { System::Web::UI::ValidateRequestMode get(); void set(System::Web::UI::ValidateRequestMode value); };" />
      <MemberSignature Language="F#" Value="member this.ValidateRequestMode : System.Web.UI.ValidateRequestMode with get, set" Usage="System.Web.UI.WebControls.BoundField.ValidateRequestMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ValidateRequestMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="e80a6-448">コントロールがクライアントの入力を検証するかどうかを決定する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-448">Gets or sets a value that determines whether the control validates client input or not.</span></span></summary>
        <value><span data-ttu-id="e80a6-449">コントロールがクライアントの入力を検証するかどうかを決定する値。</span><span class="sxs-lookup"><span data-stu-id="e80a6-449">A value that determines whether the control validates client input or not.</span></span> <span data-ttu-id="e80a6-450">既定値は、<see cref="F:System.Web.UI.ValidateRequestMode.Inherit" /> です。</span><span class="sxs-lookup"><span data-stu-id="e80a6-450">The default is <see cref="F:System.Web.UI.ValidateRequestMode.Inherit" />.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ValidateSupportsCallback">
      <MemberSignature Language="C#" Value="public override void ValidateSupportsCallback ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void ValidateSupportsCallback() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub ValidateSupportsCallback ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void ValidateSupportsCallback();" />
      <MemberSignature Language="F#" Value="override this.ValidateSupportsCallback : unit -&gt; unit" Usage="boundField.ValidateSupportsCallback " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="e80a6-451"><see cref="T:System.Web.UI.WebControls.BoundField" /> オブジェクトに格納されているコントロールがコールバックをサポートしているかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="e80a6-451">Determines whether the controls contained in a <see cref="T:System.Web.UI.WebControls.BoundField" /> object support callbacks.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e80a6-452"><xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A>メソッドは、コントロールに含まれているかどうかを判断するために使用するヘルパー メソッドを<xref:System.Web.UI.WebControls.BoundField>オブジェクトのコールバックをサポートします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-452">The <xref:System.Web.UI.WebControls.BoundField.ValidateSupportsCallback%2A> method is a helper method used to determine whether the controls contained in a <xref:System.Web.UI.WebControls.BoundField> object support callbacks.</span></span> <span data-ttu-id="e80a6-453">このメソッドは、コールバックがサポートされていることを示す空のメソッド (コードが含まれていないメソッド) として実装されています。</span><span class="sxs-lookup"><span data-stu-id="e80a6-453">This method has been implemented as an empty method (a method that does not contain any code) to indicate that callbacks are supported.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="e80a6-454">このメソッドは、主にコントロールの開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-454">This method is used primarily by control developers.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><para><span data-ttu-id="e80a6-455">派生するクラス、<see cref="T:System.Web.UI.WebControls.BoundField" />クラスは、コントロールがコールバックをサポートするフィールドに含まれるかどうかを示すには、このメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="e80a6-455">Classes that derive from the <see cref="T:System.Web.UI.WebControls.BoundField" /> class can override this method to indicate whether the controls contained by the field support callbacks.</span></span> <span data-ttu-id="e80a6-456">コールバックがサポートされていることを示す場合、例外をスローしない空のメソッドとしてこのメソッドを実装します。それ以外の場合、コールバックがサポートされていない理由を説明するメッセージと共に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="e80a6-456">To indicate that callbacks are supported, implement this method as an empty method that does not throw an exception; otherwise, throw an exception with a useful message describing why callbacks are not supported.</span></span></para></block>
        <altmember cref="M:System.Web.UI.WebControls.DataControlField.ValidateSupportsCallback" />
      </Docs>
    </Member>
  </Members>
</Type>