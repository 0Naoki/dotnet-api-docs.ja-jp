<Type Name="SendMailErrorEventArgs" FullName="System.Web.UI.WebControls.SendMailErrorEventArgs">
  <Metadata><Meta Name="ms.openlocfilehash" Value="00715f412bbf912e6bff44346d1360d65931b831" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69389469" /></Metadata><TypeSignature Language="C#" Value="public class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit SendMailErrorEventArgs extends System.EventArgs" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.SendMailErrorEventArgs" />
  <TypeSignature Language="VB.NET" Value="Public Class SendMailErrorEventArgs&#xA;Inherits EventArgs" />
  <TypeSignature Language="C++ CLI" Value="public ref class SendMailErrorEventArgs : EventArgs" />
  <TypeSignature Language="F#" Value="type SendMailErrorEventArgs = class&#xA;    inherit EventArgs" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.EventArgs</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><see cref="T:System.Web.UI.WebControls.ChangePassword" />、<see cref="T:System.Web.UI.WebControls.CreateUserWizard" />、<see cref="T:System.Web.UI.WebControls.PasswordRecovery" /> など各コントロールの <see langword="SendMailError" /> イベントのデータを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 オブジェクト<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>には、 <xref:System.Web.UI.WebControls.ChangePassword>コントロールまたは<xref:System.Web.UI.WebControls.CreateUserWizard>コントロールが電子メールメッセージを送信できない場合に SMTP メールプロバイダーによって生成されるエラーメッセージが含まれています。 このような場合、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>オブジェクトは<xref:System.Web.UI.WebControls.SendMailErrorEventHandler>に送信されます。  
  
 イベントを処理するデリゲートを作成します。<xref:System.Web.UI.WebControls.SendMailErrorEventHandler> イベントを処理すると、例外が発生した場合でも Web アプリケーションを引き続き実行できます。 これは、電子メールメッセージを送信することが重要ではない場合に便利です。 たとえば、ユーザーがマルチステップウィザードを使用して作業しているときに例外が発生した場合は、エラーをログに記録し、情報メッセージをユーザーに表示し、ユーザーがウィザードを完了できるようにすると便利です。  
  
 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>プロパティを調べて、例外の実際の原因を特定します。 例外の最も一般的な理由は、マシン構成ファイルの[ &lt;smtp&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)に構成エラーがあることです。 このようなエラーは、通常、アプリケーションの開発とデバッグ中に検出されますが、メールサーバーは運用環境では予期せず失敗する可能性があり、そのような状況でアプリケーション全体を失敗させるかどうかを判断する必要があります。 それ以外の場合は、イベントを処理することで、アプリケーションを続行できます。  
  
 例外が処理さ<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>れた`true`ことを通知するには、プロパティをに設定する必要があります。そうしないと、例外が再スローされ、元の呼び出し履歴とエラーメッセージが含まれます。  
  
 イベントの<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベントハンドラーを作成しない場合、またはイベントハンドラーを作成し、プロパティをに設定<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>したまま`false`にした場合、電子メールメッセージの送信時にエラーが発生した場合、Web アプリケーションは実行を停止し、ASP.NET はになります。エラーメッセージを表示します。  
  
 また<xref:System.Web.UI.WebControls.ChangePassword.OnSendMailError%2A> 、メソッドは、では<xref:System.Web.UI.WebControls.SendMailErrorEventHandler>なく、派生クラスがイベントを処理できるようにします。 これは、または<xref:System.Web.UI.WebControls.ChangePassword> <xref:System.Web.UI.WebControls.CreateUserWizard>から派生したクラスでイベントを処理する場合に推奨される手法です。  
  
 イベントの処理の詳細については、「 [ASP.NET Web Forms Pages のサーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用する ASP.NET ページを示しています。このページには、sendmailerror という名前<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>のイベントのイベントハンドラーが含まれています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法 :単純なフォーム認証](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)を実装します。  
  
 パスワードの変更が成功した場合、 `SendingMail`イベントハンドラーのコードはユーザーに電子メールメッセージを送信して、変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーの構成方法の詳細については[、NIB を参照してください。方法: IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)で SMTP 仮想サーバーをインストールして構成します。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、 `SendMailError`電子メールメッセージを送信できない場合は、関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 オブジェクトのプロパティは、エラーが処理`true`されたことを示すためにに設定されます。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><para>派生クラス<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />でをオーバーライドする場合は、基本クラスの<see cref="M:System.Web.UI.WebControls.ChangePassword.OnSendMailError(System.Web.UI.WebControls.SendMailErrorEventArgs)" />メソッドを呼び出して、登録されているデリゲートがイベントを受け取ることができるようにします。</para></block>
    <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
    <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
    <altmember cref="T:System.Net.Mail.MailMessage" />
    <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET Web ページでのサーバーイベント処理</related>
    <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">イベントの処理と発生</related>
    <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
    <related type="Article" href="https://msdn.microsoft.com/library/d85075bc-9c1a-4453-8a0c-539b10853c9c">ログインコントロールのセキュリティ保護</related>
    <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Web アプリケーションの基本的なセキュリティプラクティス</related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public SendMailErrorEventArgs (Exception e);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Exception e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.SendMailErrorEventArgs.#ctor(System.Exception)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (e As Exception)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; SendMailErrorEventArgs(Exception ^ e);" />
      <MemberSignature Language="F#" Value="new System.Web.UI.WebControls.SendMailErrorEventArgs : Exception -&gt; System.Web.UI.WebControls.SendMailErrorEventArgs" Usage="new System.Web.UI.WebControls.SendMailErrorEventArgs e" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="e" Type="System.Exception" />
      </Parameters>
      <Docs>
        <param name="e">例外を格納した <see cref="T:System.Exception" /> オブジェクト。</param>
        <summary><see cref="T:System.Web.UI.WebControls.SendMailErrorEventArgs" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>To be added.</remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET Web ページでのサーバーイベント処理</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">イベントの処理と発生</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
    <Member MemberName="Exception">
      <MemberSignature Language="C#" Value="public Exception Exception { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Exception Exception" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberSignature Language="VB.NET" Value="Public Property Exception As Exception" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property Exception ^ Exception { Exception ^ get(); void set(Exception ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Exception : Exception with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Exception</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>電子メール メッセージを送信できなかったときに、SMTP メール サービスによってスローされる例外を返します。</summary>
        <value>例外を格納した <see cref="T:System.Exception" /> オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>は、電子メールメッセージが<xref:System.Web.UI.WebControls.ChangePassword>コントロールまた<xref:System.Web.UI.WebControls.CreateUserWizard>はで送信できない場合に SMTP メールプロバイダーによってスローされる例外を格納します。 この例外の最も一般的な原因は、コンピューター構成ファイルの[ &lt;smtp&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)に構成エラーがあることです。これにより、次の例外メッセージが生成されます。`The transport failed to connect to the server.`  
  
 を使用して<xref:System.Web.UI.WebControls.MailDefinition.EmbeddedObjects%2A>ファイルを埋め込むときに電子メールメッセージにエラーがある場合、例外はスローされません。 代わりに、メールメッセージが表示されると、埋め込みファイルが破損しているように見えます。  
  
 例外が処理さ<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>れたことを通知するに<xref:System.Web.UI.WebControls.SendMailErrorEventArgs>は、 `true`の`e`パラメーターとして渡されるオブジェクトをに設定する必要があります。それ以外の場合は、例外が再スローされ、元の呼び出し履歴とエラーメッセージが含まれます。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、という名前`SendMailError`の<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法 :単純なフォーム認証](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)を実装します。  
  
 パスワードの変更が成功した場合、 `SendingMail`イベントハンドラーのコードはユーザーに電子メールメッセージを送信して、変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーの構成方法の詳細については[、NIB を参照してください。方法: IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)で SMTP 仮想サーバーをインストールして構成します。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、 `SendMailError`電子メールメッセージを送信できない場合は、関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 オブジェクトのプロパティは、エラーが処理`true`されたことを示すためにに設定されます。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET Web ページでのサーバーイベント処理</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">イベントの処理と発生</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
    <Member MemberName="Handled">
      <MemberSignature Language="C#" Value="public bool Handled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Handled" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberSignature Language="VB.NET" Value="Public Property Handled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Handled { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Handled : bool with get, set" Usage="System.Web.UI.WebControls.SendMailErrorEventArgs.Handled" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="P:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception" /> プロパティに格納されている SMTP 例外が処理されたかどうかを示します。</summary>
        <value><see langword="true" /> の場合、その例外は <see cref="T:System.Web.UI.WebControls.SendMailErrorEventHandler" /> デリゲートによって処理されています。 <see langword="false" /> の場合、元のコール スタックとエラー メッセージを含んだ例外が再度スローされます。  
  
既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>は、 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Exception%2A>が処理されたかどうかを示します。 この例外は、電子メールメッセージが<xref:System.Web.UI.WebControls.ChangePassword>コントロール<xref:System.Web.UI.WebControls.CreateUserWizard>またはで送信できない場合に、SMTP メールプロバイダーによって発生します。 例外の最も一般的な理由は、マシン構成ファイルの[ &lt;smtp&gt;要素 (ネットワーク設定)](~/docs/framework/configure-apps/file-schema/network/smtp-element-network-settings.md)に構成エラーがあることです。 このようなエラーは、通常、アプリケーションの開発とデバッグ中に検出されますが、メールサーバーは運用環境では予期せず失敗する可能性があり、そのような状況でアプリケーション全体を失敗させるかどうかを判断する必要があります。 それ以外の場合は、イベントを処理することで、アプリケーションを続行できます。  
  
 イベントの<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベントハンドラーを作成しない場合、またはイベントハンドラーを作成し、プロパティをに設定<xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A>したまま`false`にした場合、電子メールメッセージの送信時にエラーが発生した場合、Web アプリケーションは実行を停止し、ASP.NET はになります。エラーメッセージを表示します。 イベントを処理すると、例外が発生した場合でも Web アプリケーションを引き続き実行できます。 これは、電子メールメッセージを送信することが重要ではない場合に便利です。 たとえば、ユーザーがマルチステップウィザードを使用して作業しているときに例外が発生した場合は、エラーをログに記録し、情報メッセージをユーザーに表示し、ユーザーがウィザードを完了できるようにすると便利です。  
  
   
  
## Examples  
 次のコード例は、 <xref:System.Web.UI.WebControls.ChangePassword> Web コントロールを使用し、という名前`SendMailError`の<xref:System.Web.UI.WebControls.ChangePassword.SendMailError>イベントのイベントハンドラーを含む ASP.NET ページを示しています。 このコード例では、ASP.NET Web サイトが ASP.NET メンバーシップとフォーム認証を使用するように構成されていること、および名前とパスワードがわかっているユーザーが作成されていることを前提としています。 詳細については、「[方法 :単純なフォーム認証](https://msdn.microsoft.com/library/9522bc8d-1a41-480a-aa11-c389a4ac2d2e)を実装します。  
  
 パスワードの変更が成功した場合、 `SendingMail`イベントハンドラーのコードはユーザーに電子メールメッセージを送信して、変更を確認しようとします。 このコード例を機能させるには、サーバーで SMTP が既に構成されている必要があります。 SMTP サーバーの構成方法の詳細については[、NIB を参照してください。方法: IIS 6.0](https://msdn.microsoft.com/library/ed204b58-24af-47d0-9687-60e5df5f17f8)で SMTP 仮想サーバーをインストールして構成します。 この例では、SMTP サーバーを構成する必要はありません。この例は、電子メールメッセージの送信に失敗したかをテストするために構築されています。  
  
 メールサーバーが正しく構成されていない場合、またはその他のエラーが発生し、 `SendMailError`電子メールメッセージを送信できない場合は、関数が呼び出されます。 ユーザーにメッセージが表示されます。 さらに、MySamplesSite という名前のイベントソースが既に存在することを前提として、イベントが Windows アプリケーションイベントログに記録されます。 指定されたイベントソースを作成するには、次のコード例を参照してください。 イベントソースの作成の詳細については、「 [ASP.NET Web Forms Pages」の「サーバーイベント処理](https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9)」を参照してください。 オブジェクトのプロパティは、エラーが処理`true`されたことを示すためにに設定されます。 <xref:System.Web.UI.WebControls.SendMailErrorEventArgs.Handled%2A> <xref:System.Web.UI.WebControls.SendMailErrorEventArgs>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/CS/changepassword_cs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.SendMailErrorEventHandler#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.SendMailErrorEventHandler/VB/changepassword_vb.aspx#1)]  
  
 MySamplesSite という名前のイベントソースをアプリケーションログにプログラムによって追加する必要がある場合は、次のコード例を使用します。 最初のコード例が正しく機能するためには、このイベントソースが存在している必要があります。 次のコード例では、管理者特権が必要です。  
  
 [!code-csharp[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/CS/createeventsource.cs#1)]
 [!code-vb[System.Diagnostics.EventLog.CreateEventSource#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Diagnostics.EventLog.CreateEventSource/VB/createeventsource.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.CreateUserWizard.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.ChangePassword.SendMailError" />
        <altmember cref="E:System.Web.UI.WebControls.PasswordRecovery.SendMailError" />
        <altmember cref="T:System.Net.Mail.MailMessage" />
        <related type="Article" href="https://msdn.microsoft.com/library/765bfc89-33ee-4d0d-bbe6-3b172c06def9">ASP.NET Web ページでのサーバーイベント処理</related>
        <related type="Article" href="https://msdn.microsoft.com/library/b6f65241-e0ad-4590-a99f-200ce741bb1f">イベントの処理と発生</related>
        <related type="Article" href="https://msdn.microsoft.com/library/448f7802-0aa8-4304-abf7-82e138877dc8">Web サイト管理ツールの [アプリケーション] タブ</related>
      </Docs>
    </Member>
  </Members>
</Type>
