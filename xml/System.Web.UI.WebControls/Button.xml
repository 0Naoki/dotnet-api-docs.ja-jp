<Type Name="Button" FullName="System.Web.UI.WebControls.Button">
  <TypeSignature Language="C#" Value="public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Button extends System.Web.UI.WebControls.WebControl implements class System.Web.UI.IPostBackEventHandler, class System.Web.UI.WebControls.IButtonControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Button" />
  <TypeSignature Language="VB.NET" Value="Public Class Button&#xA;Inherits WebControl&#xA;Implements IButtonControl, IPostBackEventHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class Button : System::Web::UI::WebControls::WebControl, System::Web::UI::IPostBackEventHandler, System::Web::UI::WebControls::IButtonControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.UI.IPostBackEventHandler</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.WebControls.IButtonControl</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Click")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("Text")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.SupportsEventValidation</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Button runat="server" Text="Button"&gt;&lt;/{0}:Button&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="4aefc-101">Web ページにプッシュ ボタン コントロールを表示します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-101">Displays a push button control on the Web page.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="4aefc-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="4aefc-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="4aefc-103">Introduction</span></span>](#Introduction)  
  
-   [<span data-ttu-id="4aefc-104">ポストバック ボタンの動作およびサーバー イベント</span><span class="sxs-lookup"><span data-stu-id="4aefc-104">Button Postback Behavior and Server Events</span></span>](#ButtonPostbackBehaviorandServerEvents)  
  
-   [<span data-ttu-id="4aefc-105">クライアント スクリプトのボタン イベントの処理</span><span class="sxs-lookup"><span data-stu-id="4aefc-105">Handling Button Events in Client Script</span></span>](#HandlingButtonEventsinClientScript)  
  
-   [<span data-ttu-id="4aefc-106">ボタン コントロールと検証</span><span class="sxs-lookup"><span data-stu-id="4aefc-106">Button Controls and Validation</span></span>](#ButtonControlsAndValidation)  
  
-   [<span data-ttu-id="4aefc-107">データ コントロール内のボタン</span><span class="sxs-lookup"><span data-stu-id="4aefc-107">Buttons in Data Controls</span></span>](#ButtonsInDataControls)  
  
-   [<span data-ttu-id="4aefc-108">コントロールへのデータ バインディング</span><span class="sxs-lookup"><span data-stu-id="4aefc-108">Binding Data to the Controls</span></span>](#BindingDataToTheControls)  
  
-   [<span data-ttu-id="4aefc-109">UpdatePanel コントロールでのボタンを使用します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-109">Using Buttons with UpdatePanel Controls</span></span>](#UsingButtonsWithUpdatePanelControls)  
  
-   [<span data-ttu-id="4aefc-110">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="4aefc-110">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="Introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="4aefc-111">はじめに</span><span class="sxs-lookup"><span data-stu-id="4aefc-111">Introduction</span></span>  
 <span data-ttu-id="4aefc-112">使用して、<xref:System.Web.UI.WebControls.Button>コントロールをユーザーがサーバーにページを投稿できる Web ページのプッシュ ボタンを作成します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-112">Use the <xref:System.Web.UI.WebControls.Button> control to create a push button on the Web page that lets users to post a page to the server.</span></span> <span data-ttu-id="4aefc-113">コントロールは、ポストバックに応答を処理できるサーバー コードでイベントをトリガーします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-113">The control triggers an event in server code that you can handle to respond to the postback.</span></span> <span data-ttu-id="4aefc-114">ページが通知されるかを実行し、ページの送信をキャンセルする前に処理できるクライアント スクリプト内のイベントを発生する可能性もします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-114">It can also raise an event in client script that you can handle before the page is posted or that can run and then cancel submission of the page.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-115">ASP.NET には、いくつかの種類異なる方法で Web ページに表示するの各ボタン コントロールにはが含まれています。</span><span class="sxs-lookup"><span data-stu-id="4aefc-115">ASP.NET includes several kinds of button controls, each of which appears differently on Web pages.</span></span> <span data-ttu-id="4aefc-116"><xref:System.Web.UI.WebControls.Button>プッシュ ボタンとしてレンダリングするコントロールを<xref:System.Web.UI.WebControls.LinkButton>; リンクとしてレンダリングするコントロールを<xref:System.Web.UI.WebControls.ImageButton>画像としてレンダリングするコントロールを<xref:System.Web.UI.WebControls.ImageMap>コントロールで、ユーザーがクリックしてできるホット スポットのあるグラフィックスを作成することができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-116">They are the <xref:System.Web.UI.WebControls.Button> control, which renders as a push button; the <xref:System.Web.UI.WebControls.LinkButton> control, which renders as a link; and the <xref:System.Web.UI.WebControls.ImageButton> control, which renders as an image; and the <xref:System.Web.UI.WebControls.ImageMap> control, which lets you create a graphic that has hotspots that users can click.</span></span> <span data-ttu-id="4aefc-117">既定では、すべてのボタン コントロールは、クリックされたときに、ページを送信します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-117">By default, all button controls submit the page when clicked.</span></span> <span data-ttu-id="4aefc-118">使用することも、<xref:System.Web.UI.HtmlControls.HtmlButton>と<xref:System.Web.UI.HtmlControls.HtmlInputButton>サーバー コードでプログラミング可能である、ページ上のボタンを作成するコントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-118">You can also use the <xref:System.Web.UI.HtmlControls.HtmlButton> and <xref:System.Web.UI.HtmlControls.HtmlInputButton> controls to create buttons on the page that are programmable in server code.</span></span> <span data-ttu-id="4aefc-119">HTML や Web サーバー コントロールの違いの詳細については、「 [ASP.NET Web サーバー コントロールの概要](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-119">For details about the differences between HTML and Web server controls, see [ASP.NET Web Server Controls Overview](http://msdn.microsoft.com/library/0d4854a3-6e79-4b7b-a27f-ac57cd9c2a84).</span></span>  
  
 <span data-ttu-id="4aefc-120">既定では、<xref:System.Web.UI.WebControls.Button>コントロールは、送信ボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-120">By default, a <xref:System.Web.UI.WebControls.Button> control is a Submit button.</span></span> <span data-ttu-id="4aefc-121">[送信] ボタンには、コマンド名はありません (によって指定された、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティ)、ボタンや Web ページがサーバーに戻す投稿するだけに関連付けられています。</span><span class="sxs-lookup"><span data-stu-id="4aefc-121">A Submit button does not have a command name (specified by the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property) associated with the button and simply posts the Web page back to the server.</span></span> <span data-ttu-id="4aefc-122">イベント ハンドラーを指定することができます、<xref:System.Web.UI.WebControls.Button.Click>送信ボタンがクリックされたときに、プログラムから、操作を制御するイベントが実行されました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-122">You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event to programmatically control the actions performed when the Submit button is clicked.</span></span>  
  
 <span data-ttu-id="4aefc-123">コマンド ボタンなどのボタンに関連付けられているコマンド名では`Sort`を設定して、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-123">A Command button has a command name associated with the button, such as `Sort`, by setting the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property.</span></span> <span data-ttu-id="4aefc-124">これにより、複数作成<xref:System.Web.UI.WebControls.Button>の Web ページし、コントロール プログラムで判断するため<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-124">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-125">使用することも、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>などを実行するコマンドに関する追加情報を提供するコマンド ボタンを持つプロパティ`Ascending`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-125">You can also use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property with a command button to provide additional information about the command to perform, such as `Ascending`.</span></span> <span data-ttu-id="4aefc-126">イベント ハンドラーを指定することができます、<xref:System.Web.UI.WebControls.Button.Command>コマンド ボタンがクリックされたときに、プログラムから、操作を制御するイベントが実行されました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-126">You can provide an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to programmatically control the actions performed when the Command button is clicked.</span></span>  
  
<a name="ButtonPostbackBehaviorandServerEvents"></a>   
## <a name="button-postback-behavior-and-server-events"></a><span data-ttu-id="4aefc-127">ポストバック ボタンの動作およびサーバー イベント</span><span class="sxs-lookup"><span data-stu-id="4aefc-127">Button Postback Behavior and Server Events</span></span>  
 <span data-ttu-id="4aefc-128">ユーザーには、任意の Web サーバー コントロールのボタンがクリックすると、ページがサーバーに送信されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-128">When a user clicks any Web server control button, the page is sent to the server.</span></span> <span data-ttu-id="4aefc-129">これにより、Web ページを処理して、保留中のイベントがサーバー側コードで発生します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-129">This causes the Web page to be processed and any pending events to be raised in server-based code.</span></span> <span data-ttu-id="4aefc-130">すべてのページとコントロールの処理が完了したら、ページが自身を表示、ブラウザーをもう一度です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-130">When all page and control processing has finished, the page renders itself to the browser again.</span></span>  
  
 <span data-ttu-id="4aefc-131">ボタンに上げることができます独自<xref:System.Web.UI.WebControls.Button.Click>イベントまたは<xref:System.Web.UI.WebControls.Button.Command>イベントで、サーバー ベースのコードを使用して処理することができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-131">The buttons can raise their own <xref:System.Web.UI.WebControls.Button.Click> events or <xref:System.Web.UI.WebControls.Button.Command> event, which you can handle by using server-based code.</span></span> <span data-ttu-id="4aefc-132">これは、ボタンの従来の HTML ページやクライアント ベースの Web アプリケーションでは、イベントとは異なる`onclick`クライアントで実行されている JavaScript を使用してイベントを処理します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-132">This is different than events in traditional HTML pages or in client-based Web applications, where a button's `onclick` event is handled by using JavaScript that runs in the client.</span></span> <span data-ttu-id="4aefc-133">詳細については、次を参照してください。 [ASP.NET Web フォーム サーバー コントロールのイベント モデル](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-133">For more information, see [ASP.NET Web Forms Server Control Event Model](http://msdn.microsoft.com/library/6304bff7-1b0e-4641-8acb-6d3b0badc4a3).</span></span>  
  
 <span data-ttu-id="4aefc-134">ユーザーは、ボタン コントロールをクリックして、ときにページがサーバーにポストされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-134">When users click a button control, the page is posted back to the server.</span></span> <span data-ttu-id="4aefc-135">既定では、ページが、それ自体へポストされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-135">By default, the page is posted back to itself,</span></span>  
  
 <span data-ttu-id="4aefc-136">別のページに現在のページにポストするボタンを構成することができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-136">You can configure buttons to post the current page to another page.</span></span> <span data-ttu-id="4aefc-137">これは、複数ページのフォームの作成に役立つことができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-137">This can be useful for creating multi-page forms.</span></span> <span data-ttu-id="4aefc-138">詳細については、「[ページ間の ASP.NET Web フォームの送信](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-138">For details, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).</span></span>  
  
<a name="HandlingButtonEventsinClientScript"></a>   
## <a name="handling-button-events-in-client-script"></a><span data-ttu-id="4aefc-139">クライアント スクリプトのボタン イベントの処理</span><span class="sxs-lookup"><span data-stu-id="4aefc-139">Handling Button Events in Client Script</span></span>  
 <span data-ttu-id="4aefc-140">ボタン コントロールには、サーバー イベントとクライアントのイベントの両方を生成できます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-140">Button controls can raise both server events and client events.</span></span> <span data-ttu-id="4aefc-141">ポストバック後にサーバー イベントが発生し、これらは、ページ用に記述するサーバー側コードで処理します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-141">Server events occur after postback, and they are handled in the server-side code that you write for the page.</span></span> <span data-ttu-id="4aefc-142">クライアント イベントは、ECMAScript (JavaScript)、通常、クライアント スクリプトの処理され、ページを送信する前に発生します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-142">Client events are handled in client script, typically ECMAScript (JavaScript), and are raised before the page is submitted.</span></span> <span data-ttu-id="4aefc-143">クライアント側のイベントを ASP.NET ボタン コントロールに追加すると、ページを送信する前に確認のダイアログ ボックスを表示するなどのタスクを実行し、送信をキャンセルできます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-143">By adding client-side events to ASP.NET button controls, you can perform tasks such as displaying confirmation dialog boxes before submitting the page, and potentially cancel the submission.</span></span> <span data-ttu-id="4aefc-144">詳細については、「 [ASP.NET Web Pages でのクライアント スクリプト](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa)と[する方法: クライアント スクリプト ボタンの Web サーバー コントロール イベントに応答](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-144">For details, see [Client Script in ASP.NET Web Pages](http://msdn.microsoft.com/library/13edb6b9-2dea-43c6-b8c1-a47207de19aa) and [How to: Respond to Button Web Server Control Events in Client Script](http://msdn.microsoft.com/library/1ab97f0b-1c38-4897-85b0-ac915f6a182b).</span></span>  
  
 <span data-ttu-id="4aefc-145">することも、<xref:System.Web.UI.WebControls.Button>も (HTTP POST 操作を実行する) ではなくポストバックを実行するクライアント スクリプトを使用するコントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-145">You might also want the <xref:System.Web.UI.WebControls.Button> control to also use client script to perform the postback (instead of simply performing an HTTP POST operation).</span></span> <span data-ttu-id="4aefc-146">これは、ページ上の他の要素へのアタッチなど、ポストバックをプログラムで操作する場合に役立ちます。 ことができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-146">This can be useful if you want to programmatically manipulate the postback, such as attaching it to other elements on the page.</span></span> <span data-ttu-id="4aefc-147">設定することができます、<xref:System.Web.UI.WebControls.Button>コントロールの<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>プロパティを`true`が発生する、<xref:System.Web.UI.WebControls.Button>クライアント スクリプトを使用するコントロールがポストバックをベースです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-147">You can set the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to `true` to cause the <xref:System.Web.UI.WebControls.Button> control to use client-script based postback.</span></span>  
  
<a name="ButtonControlsAndValidation"></a>   
## <a name="button-controls-and-validation"></a><span data-ttu-id="4aefc-148">ボタン コントロールと検証</span><span class="sxs-lookup"><span data-stu-id="4aefc-148">Button Controls and Validation</span></span>  
 <span data-ttu-id="4aefc-149">ページには、既定では、ASP.NET の検証コントロールが含まれている場合に、そのチェックを実行する検証コントロール ボタン コントロールをクリックするとします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-149">If a page contains ASP.NET validator controls, by default, clicking a button control causes the validator control to perform its check.</span></span> <span data-ttu-id="4aefc-150">検証コントロールでクライアント側の検証が有効な場合、検証チェックに失敗した場合に、ページが送信されません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-150">If client-side validation is enabled for a validator control, the page is not submitted if a validation check has failed.</span></span>  
  
 <span data-ttu-id="4aefc-151">次の表では、検証プロセスをより正確に制御するためのボタン コントロールでサポートされているプロパティについて説明します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-151">The following table describes the properties supported by button controls that enable you to control the validation process more precisely.</span></span>  
  
|<span data-ttu-id="4aefc-152">プロパティ</span><span class="sxs-lookup"><span data-stu-id="4aefc-152">Property</span></span>|<span data-ttu-id="4aefc-153">説明</span><span class="sxs-lookup"><span data-stu-id="4aefc-153">Description</span></span>|  
|--------------|-----------------|  
|<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>|<span data-ttu-id="4aefc-154">ボタンをクリックすると検証チェックも実行するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-154">Specifies whether clicking the button also performs a validation check.</span></span> <span data-ttu-id="4aefc-155">このプロパティを設定`false`検証チェックを防ぐためにします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-155">Set this property to `false` to prevent a validation check.</span></span>|  
|<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>|<span data-ttu-id="4aefc-156">ボタンがクリックされたときに、ページ上のどの検証コントロールが呼び出されますを指定できます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-156">Enables you to specify which validators on the page are called when the button is clicked.</span></span> <span data-ttu-id="4aefc-157">検証グループが作成されていない場合、ボタンのクリックは検証コントロール、ページ上のすべてを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-157">If no validation groups are established, a button click calls all of the validators that are on the page.</span></span>|  
  
 <span data-ttu-id="4aefc-158">詳細については、「[ASP.NET Web ページにおけるユーザー入力の検証](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-158">For more information, see [Validating User Input in ASP.NET Web Pages](http://msdn.microsoft.com/library/4ad3dacb-89e0-4cee-89ac-40a3f2a85461).</span></span>  
  
<a name="ButtonsInDataControls"></a>   
## <a name="buttons-in-data-controls"></a><span data-ttu-id="4aefc-159">データ コントロール内のボタン</span><span class="sxs-lookup"><span data-stu-id="4aefc-159">Buttons in Data Controls</span></span>  
 <span data-ttu-id="4aefc-160">ボタンの Web サーバー コントロールは多くの場合、コントロールで使用データなどの<xref:System.Web.UI.WebControls.DataList>、 <xref:System.Web.UI.WebControls.GridView>、および<xref:System.Web.UI.WebControls.Repeater>リスト コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-160">Button Web server controls are often used in data controls, such as in the <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, and <xref:System.Web.UI.WebControls.Repeater> list controls.</span></span> <span data-ttu-id="4aefc-161">ような場合、通常に応答しない、ボタンに直接イベント をクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-161">In those cases, you typically do not respond directly to the button click event.</span></span> <span data-ttu-id="4aefc-162">代わりに、データ コントロールのボタンは、データ コントロールに固有であるイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-162">Instead, a button in a data control raises an event that is specific to the data control.</span></span> <span data-ttu-id="4aefc-163">たとえば、<xref:System.Web.UI.WebControls.DataList>ボタンを発生させる可能性があります、コントロール、<xref:System.Web.UI.WebControls.DataList>コントロールの<xref:System.Web.UI.WebControls.DataList.ItemCommand>イベントを発生させるのではなく、<xref:System.Web.UI.WebControls.Button>コントロールの<xref:System.Web.UI.WebControls.Button.Click>イベント。</span><span class="sxs-lookup"><span data-stu-id="4aefc-163">For example, in the <xref:System.Web.UI.WebControls.DataList> control, a button might raise the <xref:System.Web.UI.WebControls.DataList> control's <xref:System.Web.UI.WebControls.DataList.ItemCommand> event instead of raising the <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event.</span></span>  
  
 <span data-ttu-id="4aefc-164">ボタンを設定することができますので、データ連結リスト コントロールには、多くのボタンを含めることができます、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティ、イベントの一部として渡す値を指定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-164">Because data-bound list controls can contain many buttons, you can set the button's <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a value to pass as part of the event.</span></span> <span data-ttu-id="4aefc-165">クリックしてされたボタンを表示するには、この引数をテストできます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-165">You can then test for this argument to see which button was clicked.</span></span>  
  
<a name="BindingDataToTheControls"></a>   
## <a name="binding-data-to-the-controls"></a><span data-ttu-id="4aefc-166">コントロールへのデータ バインディング</span><span class="sxs-lookup"><span data-stu-id="4aefc-166">Binding Data to the Controls</span></span>  
 <span data-ttu-id="4aefc-167">ボタンの Web サーバー コントロールをデータ ソースにバインドするには、プロパティの設定を制御するために動的にします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-167">You can bind the button Web server controls to a data source in order to control their property settings dynamically.</span></span> <span data-ttu-id="4aefc-168">たとえば、ボタンを設定することができます<xref:System.Web.UI.WebControls.Button.Text%2A>データ バインドを使用してプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-168">For example, you can set a button's <xref:System.Web.UI.WebControls.Button.Text%2A> property by using data binding.</span></span>  
  
<a name="UsingButtonsWithUpdatePanelControls"></a>   
## <a name="using-buttons-with-updatepanel-controls"></a><span data-ttu-id="4aefc-169">UpdatePanel コントロールでのボタンを使用します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-169">Using Buttons with UpdatePanel Controls</span></span>  
 <span data-ttu-id="4aefc-170">部分ページ レンダリングを使うとポストバックなしでページの一部を更新できます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-170">Partial-page rendering makes it possible to refresh portions of a page without a postback.</span></span> <span data-ttu-id="4aefc-171"><xref:System.Web.UI.UpdatePanel> コントロールを使用すると、部分ページ レンダリングに参加しているページの部分をマークできます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-171"><xref:System.Web.UI.UpdatePanel> controls enable you to mark parts of the page that participate in partial-page rendering.</span></span> <span data-ttu-id="4aefc-172">既定では、内部のコントロールの動作、<xref:System.Web.UI.UpdatePanel>コントロールを含む<xref:System.Web.UI.WebControls.Button>コントロール、ポストバックではなく、非同期ポストバックを実行することです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-172">By default, the behavior of controls inside an <xref:System.Web.UI.UpdatePanel> control, including <xref:System.Web.UI.WebControls.Button> controls, is to perform an asynchronous postback instead of a postback.</span></span> <span data-ttu-id="4aefc-173">これによって、更新の内容のみ、<xref:System.Web.UI.UpdatePanel>ポストバックが発生元からを制御します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-173">This refreshes only the contents of the <xref:System.Web.UI.UpdatePanel> control from which the postback originates.</span></span>  
  
 <span data-ttu-id="4aefc-174">シナリオだけでなく、<xref:System.Web.UI.WebControls.Button>内にあるコントロール、<xref:System.Web.UI.UpdatePanel>使用できるコントロール、<xref:System.Web.UI.WebControls.Button>で制御<xref:System.Web.UI.UpdatePanel>次のシナリオでのコントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-174">In addition to the scenario of a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control, you can use <xref:System.Web.UI.WebControls.Button> controls with <xref:System.Web.UI.UpdatePanel> controls in the following scenarios:</span></span>  
  
-   <span data-ttu-id="4aefc-175">定義する、<xref:System.Web.UI.WebControls.Button>外にあるコントロール、<xref:System.Web.UI.UpdatePanel>として制御、<xref:System.Web.UI.AsyncPostBackTrigger>パネルのコントロールです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-175">Defining a <xref:System.Web.UI.WebControls.Button> control that is outside an <xref:System.Web.UI.UpdatePanel> control as an <xref:System.Web.UI.AsyncPostBackTrigger> control for that panel.</span></span> <span data-ttu-id="4aefc-176">ボタンがクリックされたときに、非同期ポストバックを実行し、パネルの内容を更新します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-176">When the button is clicked, it performs an asynchronous postback and refreshes the contents of the panel.</span></span>  
  
-   <span data-ttu-id="4aefc-177">定義する、<xref:System.Web.UI.WebControls.Button>内にあるコントロール、<xref:System.Web.UI.UpdatePanel>として制御、<xref:System.Web.UI.PostBackTrigger>パネルのです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-177">Defining a <xref:System.Web.UI.WebControls.Button> control that is inside an <xref:System.Web.UI.UpdatePanel> control as a <xref:System.Web.UI.PostBackTrigger> for the panel.</span></span> <span data-ttu-id="4aefc-178">内部にある場合でもポストバックを実行 ボタンがクリックされたときに、<xref:System.Web.UI.UpdatePanel>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-178">When the button is clicked, it performs a postback even though it is inside an <xref:System.Web.UI.UpdatePanel> control.</span></span>  
  
 <span data-ttu-id="4aefc-179">部分ページ レンダリングと使用の詳細については<xref:System.Web.UI.UpdatePanel>コントロールを参照してください[UpdatePanel コントロールの概要](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)と[部分ページ レンダリングの概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-179">For more information about partial-page rendering and using <xref:System.Web.UI.UpdatePanel> controls, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="4aefc-180">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="4aefc-180">Declarative Syntax</span></span>  
  
```  
<asp:Button  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CausesValidation="True|False"  
    CommandArgument="string"  
    CommandName="string"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnClick="Click event handler"  
    OnClientClick="string"  
    OnCommand="Command event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    PostBackUrl="uri"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    Text="string"  
    ToolTip="string"  
    UseSubmitBehavior="True|False"  
    ValidationGroup="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-181">次のコード例は、送信を作成する方法を示します<xref:System.Web.UI.WebControls.Button>コンテンツ サーバーに Web ページにポストするコントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-181">The following code example demonstrates how to create a Submit <xref:System.Web.UI.WebControls.Button> control that posts the Web page content back to the server.</span></span>  
  
 [!code-aspx-csharp[Classic Button Example#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Classic Button Example/CS/sourcecs.aspx#1)]
 [!code-aspx-vb[Classic Button Example#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Classic Button Example/VB/sourcevb.aspx#1)]  
  
 <span data-ttu-id="4aefc-182">次のコード例は、コマンドを作成する方法を示します<xref:System.Web.UI.WebControls.Button>コントロールをリストを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-182">The following code example demonstrates how to create a Command <xref:System.Web.UI.WebControls.Button> control that sorts a list.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
    <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
    <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Button ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Button();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4aefc-183"><see cref="T:System.Web.UI.WebControls.Button" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-183">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.Button" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-184">このコンス トラクターを使用して作成しの新しいインスタンスを初期化、<xref:System.Web.UI.WebControls.Button>クラスです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-184">Use this constructor to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-185">次のコード例を作成しの新しいインスタンスを初期化する方法を示しています、<xref:System.Web.UI.WebControls.Button>クラスです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-185">The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
 [!code-aspx-csharp[ButtonCtor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCtor/CS/buttonctorcs.aspx#1)]
 [!code-aspx-vb[ButtonCtor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCtor/VB/buttonctorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="4aefc-186">クライアントに表示する出力ストリームを格納している <see cref="T:System.Web.UI.HtmlTextWriter" />。</span><span class="sxs-lookup"><span data-stu-id="4aefc-186">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that contains the output stream to render on the client.</span></span></param>
        <summary><span data-ttu-id="4aefc-187"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールの属性を、クライアントに表示する出力ストリームに追加します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-187">Adds the attributes of the <see cref="T:System.Web.UI.WebControls.Button" /> control to the output stream for rendering on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aefc-188">オーバーライドする方法を次のコード例に示します、<xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A>カスタム サーバー コントロールできるように、<xref:System.Web.UI.WebControls.Button>常に、テキストは赤で表示されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-188">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.AddAttributesToRender%2A> method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.</span></span>  
  
 [!code-aspx-csharp[CustomButtonAddAttributesToRender#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorendercs.aspx#1)]
 [!code-aspx-vb[CustomButtonAddAttributesToRender#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorendervb.aspx#1)]  
[!code-csharp[CustomButtonAddAttributesToRender#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/CS/custombuttonaddattributestorender.cs#2)]
[!code-vb[CustomButtonAddAttributesToRender#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonAddAttributesToRender/VB/custombuttonaddattributestorender.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CausesValidation">
      <MemberSignature Language="C#" Value="public virtual bool CausesValidation { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CausesValidation" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CausesValidation" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CausesValidation As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool CausesValidation { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CausesValidation</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-189"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに検証を実行するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-189">Gets or sets a value indicating whether validation is performed when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <value>
          <span data-ttu-id="4aefc-190"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに検証を実行する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4aefc-190"><see langword="true" /> if validation is performed when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4aefc-191">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-191">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-192">既定では、ページの検証が実行されるときに、<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-192">By default, page validation is performed when a <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-193">ページの検証は、入力コントロールをすべて検証コントロールによって指定された検証規則を合格ページ上の検証コントロールに関連付けられているかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-193">Page validation determines whether the input controls associated with a validation control on the page all pass the validation rules specified by the validation control.</span></span>  
  
 <span data-ttu-id="4aefc-194">指定するか、クライアントとサーバーの両方で検証を実行するかどうかを判断するときに、<xref:System.Web.UI.WebControls.Button>を使用してコントロールがクリックされた、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-194">You can specify or determine whether validation is performed on both the client and the server when a <xref:System.Web.UI.WebControls.Button> control is clicked by using the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property.</span></span> <span data-ttu-id="4aefc-195">検証が実行されるを防ぐためには、設定、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティを`false`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-195">To prevent validation from being performed, set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false`.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-196">設定する必要があります、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティを`false`を使用する場合、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティに別のページをポストします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-196">You should set the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to `false` when you are using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to post back to a different page.</span></span> <span data-ttu-id="4aefc-197">別のページに戻るときに、明示的に検証をチェックする必要があります。</span><span class="sxs-lookup"><span data-stu-id="4aefc-197">You should explicitly check validation when posting back to a different page.</span></span> <span data-ttu-id="4aefc-198">例については、「解説」セクションを参照してください、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-198">For an example, see the Remarks section of the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span>  
  
 <span data-ttu-id="4aefc-199">通常、このプロパティに設定`false`の`reset`または`clear`ボタンがクリックされたときに実行される検証が実行できなくボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-199">This property is commonly set to `false` for a `reset` or `clear` button to prevent validation from being performed when the button is clicked.</span></span>  
  
 <span data-ttu-id="4aefc-200">ときの値、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティに設定されている`true`、使用することも、<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>プロパティを対象の検証グループの名前を指定する、<xref:System.Web.UI.WebControls.Button>コントロールが原因で検証します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-200">When the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, you can also use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation.</span></span>  
  
 <span data-ttu-id="4aefc-201">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-201">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-202">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-202">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-203">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>ページ検証の発生を防ぐためにプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-203">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property to prevent page validation from occurring.</span></span> <span data-ttu-id="4aefc-204">なお、<xref:System.Web.UI.WebControls.BaseValidator.Validate%2A>メソッドをアクティブにない各検証コントロール個別にします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-204">Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aefc-205">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4aefc-205">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4aefc-206">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-206">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4aefc-207">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-207">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[ButtonControlCausesValidation#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonControlCausesValidation/CS/buttoncausesvalidationcs.aspx#1)]
 [!code-aspx-vb[ButtonControlCausesValidation#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonControlCausesValidation/VB/buttoncausesvalidationvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.Page.Validate" />
        <altmember cref="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      </Docs>
    </Member>
    <Member MemberName="Click">
      <MemberSignature Language="C#" Value="public event EventHandler Click;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler Click" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Click" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Click As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event EventHandler ^ Click;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Click</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-208"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-208">Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-209"><xref:System.Web.UI.WebControls.Button.Click>イベントが発生したときに、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-209">The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-210">このイベントは通常に関連付けられているコマンド名がない場合に使用、 <xref:System.Web.UI.WebControls.Button> (たとえば、送信ボタン) を制御します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-210">This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).</span></span>  
  
 <span data-ttu-id="4aefc-211">イベント処理の詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-211">For more information about handling events, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-212">指定し、コードのイベント ハンドラーを次のコード例には、<xref:System.Web.UI.WebControls.Button.Click>イベント、Web でメッセージを表示するためにページ、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-212">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="Command">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.CommandEventHandler Command;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.CommandEventHandler Command" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Button.Command" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Command As CommandEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::CommandEventHandler ^ Command;" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.UI.WebControls.IButtonControl.Command</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.CommandEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-213"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに発生します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-213">Occurs when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-214"><xref:System.Web.UI.WebControls.Button.Command>イベントが発生したときに、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-214">The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-215">このイベントは通常使用時に、コマンド名など`Sort`に関連付けられている、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-215">This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="4aefc-216">これにより、複数作成<xref:System.Web.UI.WebControls.Button>の Web ページし、コントロール プログラムで判断するため<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-216">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-217"><xref:System.Web.UI.WebControls.Button.Command>の形式でコントロールの階層構造をイベントは、`BubbleEvent`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-217">The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.</span></span>  
  
 <span data-ttu-id="4aefc-218">イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-218">For more information about handling events, see [NIB: Consuming Events](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-219">指定し、コードのイベント ハンドラーを次のコード例には、<xref:System.Web.UI.WebControls.Button.Command>イベント一覧を並べ替えるときに、<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-219">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-220">この例を示す、イベント ハンドラー宣言によってを使用して、<xref:System.Web.UI.WebControls.Button.OnClick%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-220">This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 <span data-ttu-id="4aefc-221">次のコード例は、イベント ハンドラーを指定し、プログラム内のイベントに追加する方法を示します、`Page_Load`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-221">The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.</span></span>  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventHandler" />
      </Docs>
    </Member>
    <Member MemberName="CommandArgument">
      <MemberSignature Language="C#" Value="public string CommandArgument { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandArgument" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandArgument" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandArgument As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandArgument { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandArgument</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-222">関連付けられている <see cref="E:System.Web.UI.WebControls.Button.Command" /> と共に <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> イベントに渡された省略可能なパラメーターを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-222">Gets or sets an optional parameter passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event along with the associated <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</span></span></summary>
        <value><span data-ttu-id="4aefc-223">関連付けられている<see cref="E:System.Web.UI.WebControls.Button.Command" /> と共に <see cref="P:System.Web.UI.WebControls.Button.CommandName" /> イベントに渡された省略可能なパラメーター。</span><span class="sxs-lookup"><span data-stu-id="4aefc-223">An optional parameter passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event along with the associated <see cref="P:System.Web.UI.WebControls.Button.CommandName" />.</span></span> <span data-ttu-id="4aefc-224">既定値は <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-224">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-225">使用して、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを補完するパラメーターを指定する、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-225">Use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to specify a parameter that compliments the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-226">設定できますが、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティ自体には、通常のみを使用するときに、<xref:System.Web.UI.WebControls.Button.CommandName%2A>でもプロパティが設定されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-226">Although you can set the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property by itself, it is normally only used when the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property is also set.</span></span>  
  
 <span data-ttu-id="4aefc-227"><xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを補完、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を実行するコマンドに関する追加情報を提供することによりプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-227">The <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property complements the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property by allowing you to provide additional information about the command to perform.</span></span> <span data-ttu-id="4aefc-228">たとえば、設定した場合、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティを`Sort`と<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを`Ascending`、昇順で並べ替えるには、コマンドを指定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-228">For example, if you set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to `Sort` and the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to `Ascending`, you specify a command to sort in ascending order.</span></span>  
  
 <span data-ttu-id="4aefc-229">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-229">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-230">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-230">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-231">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティを作成する、<xref:System.Web.UI.WebControls.Button>コントロールを昇順でリストを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-231">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="CommandName">
      <MemberSignature Language="C#" Value="public string CommandName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CommandName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.CommandName" />
      <MemberSignature Language="VB.NET" Value="Public Property CommandName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CommandName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.CommandName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-232"><see cref="T:System.Web.UI.WebControls.Button" /> イベントに渡された <see cref="E:System.Web.UI.WebControls.Button.Command" /> コントロールに関連付けられているコマンド名を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-232">Gets or sets the command name associated with the <see cref="T:System.Web.UI.WebControls.Button" /> control that is passed to the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event.</span></span></summary>
        <value><span data-ttu-id="4aefc-233"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールのコマンド名。</span><span class="sxs-lookup"><span data-stu-id="4aefc-233">The command name of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span> <span data-ttu-id="4aefc-234">既定値は <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-234">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-235">複数を設定するときに<xref:System.Web.UI.WebControls.Button>Web ページ上のコントロールを使用して、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を指定するか、コマンド名を特定するプロパティがそれぞれに関連付けられている<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-235">When you have multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page, use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to specify or determine the command name associated with each <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="4aefc-236">設定することができます、<xref:System.Web.UI.WebControls.Button.CommandName%2A>を実行するコマンドを識別する任意の文字列を持つプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-236">You can set the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property with any string that identifies the command to perform.</span></span> <span data-ttu-id="4aefc-237">プログラムでのコマンドの名前を決定することができますし、<xref:System.Web.UI.WebControls.Button>を制御し、適切なアクションを実行します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-237">You can then programmatically determine the command name of the <xref:System.Web.UI.WebControls.Button> control and perform the appropriate actions.</span></span>  
  
 <span data-ttu-id="4aefc-238">追加コマンドについては、よう`Ascending`を使用して指定することがあります、<xref:System.Web.UI.WebControls.Button.CommandArgument%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-238">Additional information about the command, such as `Ascending`, may be specified by using the <xref:System.Web.UI.WebControls.Button.CommandArgument%2A> property.</span></span>  
  
 <span data-ttu-id="4aefc-239">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-239">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-240">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-240">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-241">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティを作成する、<xref:System.Web.UI.WebControls.Button>コントロールをリストを並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-241">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.CommandName%2A> property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
        <altmember cref="P:System.Web.UI.WebControls.Button.CommandArgument" />
      </Docs>
    </Member>
    <Member MemberName="GetPostBackOptions">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.PostBackOptions GetPostBackOptions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function GetPostBackOptions () As PostBackOptions" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::PostBackOptions ^ GetPostBackOptions();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.PostBackOptions</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="4aefc-242"><see cref="T:System.Web.UI.PostBackOptions" /> コントロールのポストバック動作を表す <see cref="T:System.Web.UI.WebControls.Button" /> オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-242">Creates a <see cref="T:System.Web.UI.PostBackOptions" /> object that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</span></span></summary>
        <returns><span data-ttu-id="4aefc-243"><see cref="T:System.Web.UI.PostBackOptions" /> コントロールのポストバック動作を表す <see cref="T:System.Web.UI.WebControls.Button" />。</span><span class="sxs-lookup"><span data-stu-id="4aefc-243">A <see cref="T:System.Web.UI.PostBackOptions" /> that represents the <see cref="T:System.Web.UI.WebControls.Button" /> control's postback behavior.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-244"><xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A>メソッドを作成、<xref:System.Web.UI.PostBackOptions>を表すオブジェクト、<xref:System.Web.UI.WebControls.Button>コントロールのポストバック動作します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-244">The <xref:System.Web.UI.WebControls.Button.GetPostBackOptions%2A> method creates a <xref:System.Web.UI.PostBackOptions> object that represents the <xref:System.Web.UI.WebControls.Button> control's postback behavior.</span></span> <span data-ttu-id="4aefc-245"><xref:System.Web.UI.PostBackOptions>オブジェクトが通常に渡され、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType>参照を取得するクライアント側スクリプト関数に、呼び出されたときに使用される、メソッドにより、サーバーのページへのポストバックをします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-245">The <xref:System.Web.UI.PostBackOptions> object is then typically passed to the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=nameWithType> method, which is used to obtain a reference to a client-side script function that, when invoked, causes the server to post back to the page.</span></span>  
  
 <span data-ttu-id="4aefc-246">拡張する場合、このメソッドは、主にコントロールの開発者によって使用、<xref:System.Web.UI.WebControls.Button>クラスです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-246">This method is used primarily by control developers when extending the <xref:System.Web.UI.WebControls.Button> class.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4aefc-247">オーバーライドすることができます、<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />をボタン コントロールのポストバック オプションを変更したり、ボタンがクリックされたときに、クライアント側スクリプトを呼び出すには、派生クラス内のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-247">You can override the <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> method in your derived class to modify the postback options for the button control, or to call client-side script when the button is clicked.</span></span> <span data-ttu-id="4aefc-248">必ず、基本クラスの<see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" />メソッド標準ポストバック オプションが設定されるようにします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-248">Be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.GetPostBackOptions" /> method so that the standard postback options are set.</span></span></para>
        </block>
        <altmember cref="T:System.Web.UI.PostBackOptions" />
      </Docs>
    </Member>
    <Member MemberName="OnClick">
      <MemberSignature Language="C#" Value="protected virtual void OnClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4aefc-249">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="4aefc-249">The event data.</span></span></param>
        <summary><span data-ttu-id="4aefc-250"><see cref="E:System.Web.UI.WebControls.Button.Click" /> コントロールの <see cref="T:System.Web.UI.WebControls.Button" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-250">Raises the <see cref="E:System.Web.UI.WebControls.Button.Click" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-251"><xref:System.Web.UI.WebControls.Button.Click>イベントが発生したときに、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-251">The <xref:System.Web.UI.WebControls.Button.Click> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-252">このイベントは通常に関連付けられているコマンド名がない場合に使用、 <xref:System.Web.UI.WebControls.Button> (たとえば、送信ボタン) を制御します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-252">This event is commonly used when no command name is associated with the <xref:System.Web.UI.WebControls.Button> control (for instance, with a Submit button).</span></span>  
  
 <span data-ttu-id="4aefc-253">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-253">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4aefc-254">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-254">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4aefc-255"><xref:System.Web.UI.WebControls.Button.OnClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-255">The <xref:System.Web.UI.WebControls.Button.OnClick%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4aefc-256">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-256">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-257">指定し、コードのイベント ハンドラーを次のコード例には、 <xref:System.Web.UI.WebControls.Button.Click> Web ページで、単純なメッセージを表示するためにイベント。</span><span class="sxs-lookup"><span data-stu-id="4aefc-257">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4aefc-258">派生クラスで <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-258">When overriding <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.OnClick(System.EventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="T:System.EventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnClientClick">
      <MemberSignature Language="C#" Value="public virtual string OnClientClick { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OnClientClick" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.OnClientClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property OnClientClick As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ OnClientClick { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-259"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールの <see cref="E:System.Web.UI.WebControls.Button.Click" /> イベントが発生したときに実行されるクライアント側スクリプトを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-259">Gets or sets the client-side script that executes when a <see cref="T:System.Web.UI.WebControls.Button" /> control's <see cref="E:System.Web.UI.WebControls.Button.Click" /> event is raised.</span></span></summary>
        <value><span data-ttu-id="4aefc-260"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールの <see cref="E:System.Web.UI.WebControls.Button.Click" /> イベントが発生したときに実行されるクライアント側スクリプト。</span><span class="sxs-lookup"><span data-stu-id="4aefc-260">The client-side script that executes when a <see cref="T:System.Web.UI.WebControls.Button" /> control's <see cref="E:System.Web.UI.WebControls.Button.Click" /> event is raised.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-261">使用して、<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>ときに実行するその他のクライアント側スクリプトを指定するプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールの<xref:System.Web.UI.WebControls.Button.Click>イベントが発生します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-261">Use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control's <xref:System.Web.UI.WebControls.Button.Click> event is raised.</span></span> <span data-ttu-id="4aefc-262">このプロパティが表示されるを指定する、スクリプト、<xref:System.Web.UI.WebControls.Button>コントロールの`OnClick`だけでなく、コントロールの属性には、クライアント側のスクリプトが事前定義されています。</span><span class="sxs-lookup"><span data-stu-id="4aefc-262">The script that you specify for this property is rendered in the <xref:System.Web.UI.WebControls.Button> control's `OnClick` attribute in addition to the control's predefined client-side script.</span></span>  
  
 <span data-ttu-id="4aefc-263">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-263">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-264">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-264">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-265">Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=192871)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-265">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).</span></span>  
  
 <span data-ttu-id="4aefc-266">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.OnClientClick%2A>ときに実行するその他のクライアント側スクリプトを指定するプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-266">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.OnClientClick%2A> property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
 [!code-aspx-csharp[Button.OnClientClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.OnClientClick/cs/button.onclientclickcs.aspx#1)]
 [!code-aspx-vb[Button.OnClientClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.OnClientClick/vb/button.onclientclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
      </Docs>
    </Member>
    <Member MemberName="OnCommand">
      <MemberSignature Language="C#" Value="protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCommand(class System.Web.UI.WebControls.CommandEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCommand (e As CommandEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCommand(System::Web::UI::WebControls::CommandEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.CommandEventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4aefc-267">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="4aefc-267">The event data.</span></span></param>
        <summary><span data-ttu-id="4aefc-268"><see cref="E:System.Web.UI.WebControls.Button.Command" /> コントロールの <see cref="T:System.Web.UI.WebControls.Button" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-268">Raises the <see cref="E:System.Web.UI.WebControls.Button.Command" /> event of the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-269"><xref:System.Web.UI.WebControls.Button.Command>イベントが発生したときに、<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-269">The <xref:System.Web.UI.WebControls.Button.Command> event is raised when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-270">このイベントは通常使用時に、コマンド名など`Sort`に関連付けられている、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-270">This event is commonly used when a command name, such as `Sort`, is associated with the <xref:System.Web.UI.WebControls.Button> control.</span></span> <span data-ttu-id="4aefc-271">これにより、複数作成<xref:System.Web.UI.WebControls.Button>の Web ページし、コントロール プログラムで判断するため<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-271">This allows you to create multiple <xref:System.Web.UI.WebControls.Button> controls on a Web page and programmatically determine which <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-272"><xref:System.Web.UI.WebControls.Button.Command>の形式でコントロールの階層構造をイベントは、`BubbleEvent`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-272">The <xref:System.Web.UI.WebControls.Button.Command> event is raised through the control hierarchy in the form of the `BubbleEvent`.</span></span>  
  
 <span data-ttu-id="4aefc-273">イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-273">Raising an event invokes the event handler through a delegate.</span></span> <span data-ttu-id="4aefc-274">詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-274">For more information, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
 <span data-ttu-id="4aefc-275"><xref:System.Web.UI.WebControls.Button.OnCommand%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-275">The <xref:System.Web.UI.WebControls.Button.OnCommand%2A> method also allows derived classes to handle the event without attaching a delegate.</span></span> <span data-ttu-id="4aefc-276">派生クラスでイベントを処理する場合は、この手法をお勧めします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-276">This is the preferred technique for handling the event in a derived class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-277">指定し、コードのイベント ハンドラーを次のコード例には、<xref:System.Web.UI.WebControls.Button.Command>イベント一覧を並べ替えるときに、<xref:System.Web.UI.WebControls.Button>コントロールがクリックされました。</span><span class="sxs-lookup"><span data-stu-id="4aefc-277">The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-278">この例を示す、イベント ハンドラー宣言によってを使用して、<xref:System.Web.UI.WebControls.Button.OnClick%2A>のプロパティ、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-278">This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonCommandNameArgument#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommandNameArgument/CS/buttoncommandnamecs.aspx#1)]
 [!code-aspx-vb[ButtonCommandNameArgument#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommandNameArgument/VB/buttoncommandnamevb.aspx#1)]  
  
 <span data-ttu-id="4aefc-279">次のコード例は、イベント ハンドラーを指定し、プログラム内のイベントに追加する方法を示します、`Page_Load`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-279">The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.</span></span>  
  
 [!code-aspx-csharp[ButtonCommand#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonCommand/CS/buttoncommandcs.aspx#1)]
 [!code-aspx-vb[ButtonCommand#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonCommand/VB/buttoncommandvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="4aefc-280">派生クラスで <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> をオーバーライドする場合は、登録されているデリゲートがイベントを受け取ることができるように、基本クラスの <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> メソッドを呼び出してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-280">When overriding <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> in a derived class, be sure to call the base class's <see cref="M:System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)" /> method so that registered delegates receive the event.</span></span></para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
        <altmember cref="T:System.Web.UI.WebControls.CommandEventArgs" />
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="4aefc-281">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="4aefc-281">The event data.</span></span></param>
        <summary><span data-ttu-id="4aefc-282">クライアントに表示する前にボタンがクリックされたかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-282">Determines whether the button has been clicked prior to rendering on the client.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-283"><xref:System.Web.UI.WebControls.Button.OnPreRender%2A>からカスタム クラスを派生している場合、メソッドは、主にコントロールの開発者によって使用、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-283">The <xref:System.Web.UI.WebControls.Button.OnPreRender%2A> method is used primarily by control developers when deriving a custom class from the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostBackUrl">
      <MemberSignature Language="C#" Value="public virtual string PostBackUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string PostBackUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.PostBackUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property PostBackUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ PostBackUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.PostBackUrl</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty("*.aspx")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-284"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに現在のページからのポスト先となるページの URL を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-284">Gets or sets the URL of the page to post to from the current page when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span></summary>
        <value><span data-ttu-id="4aefc-285"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクリックされたときに現在のページからのポスト先となる Web ページの URL。</span><span class="sxs-lookup"><span data-stu-id="4aefc-285">The URL of the Web page to post to from the current page when the <see cref="T:System.Web.UI.WebControls.Button" /> control is clicked.</span></span> <span data-ttu-id="4aefc-286">既定値は空の文字列 ("") です。この場合、ページはそのページ自体にポストバックされます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-286">The default value is an empty string (""), which causes the page to post back to itself.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-287"><xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティでは、ページ間を使用して post を実行することができます、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-287">The <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="4aefc-288">のみ正しく指定したパスは、このプロパティで動作します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-288">Only correctly specified paths work with this property.</span></span> <span data-ttu-id="4aefc-289">たとえば、相対パス (Test/default.aspx) 絶対パス (https://localhost/WebApp/default.aspx)および virtual (~ \Test\default.aspx) 正常に動作します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-289">For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\Test\default.aspx) work correctly.</span></span> <span data-ttu-id="4aefc-290">正しく書式設定されていないパスなど"/Test/default.aspx"または"\Test\default.aspx"が動作しません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-290">Incorrectly formed paths such as "/Test/default.aspx" or "\Test\default.aspx" do not work.</span></span> <span data-ttu-id="4aefc-291">参照してください[ASP.NET Web プロジェクト パス](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd)正しいパスを作成する方法についてはします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-291">See [ASP.NET Web Project Paths](http://msdn.microsoft.com/library/2447f50c-b849-483c-8093-85ed53e7a5bd) for a discussion on creating correct paths.</span></span>  
  
 <span data-ttu-id="4aefc-292">設定、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティときに投稿する Web ページの URL を<xref:System.Web.UI.WebControls.Button>コントロールをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-292">Set the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked.</span></span> <span data-ttu-id="4aefc-293">たとえば、指定する`Page2.aspx`を含むページが発生、<xref:System.Web.UI.WebControls.Button>に投稿するコントロール`Page2.aspx`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-293">For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`.</span></span> <span data-ttu-id="4aefc-294">値を指定しない場合、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>自体へのプロパティ ページのポストバックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-294">If you do not specify a value for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property, the page posts back to itself.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aefc-295">サーバー側の検証コントロールをページ間のポストバックを実行するときに、ことを確認する必要があります、ページの<xref:System.Web.UI.Page.IsValid%2A>プロパティは`true`ポストバックを処理する前にします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-295">When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback.</span></span> <span data-ttu-id="4aefc-296">ページ間のポストバックの場合は、ページを確認するが、<xref:System.Web.UI.Page.PreviousPage%2A>です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-296">In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>.</span></span> <span data-ttu-id="4aefc-297">次の VB コードは、これを行う方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="4aefc-297">The following VB code shows how this is done:</span></span>  
  
```  
Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  
        If Page.PreviousPage.IsValid Then  
            ' Handle the post back  
        Else  
            Response.Write("Invalid")  
        End If  
End Sub  
```  
  
 <span data-ttu-id="4aefc-298">ページ間の送信方法の詳細については、次を参照してください。[ページ間の ASP.NET Web フォームの送信](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-298">For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](http://msdn.microsoft.com/library/fedf234e-b7c4-4644-a9e8-c1c0870b043b).</span></span>  
  
 <span data-ttu-id="4aefc-299">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-299">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-300">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-300">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-301">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>ページ間の post を実行するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-301">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property to perform a cross-page post.</span></span> <span data-ttu-id="4aefc-302">ユーザーがクリックしたとき、<xref:System.Web.UI.WebControls.Button>コントロール、ページがポストで指定された対象のページに、テキスト ボックスに入力された値、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-302">When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span> <span data-ttu-id="4aefc-303">このサンプルを実行するには、このコード例と同じディレクトリにターゲット ページのファイルを作成することも必要があります。</span><span class="sxs-lookup"><span data-stu-id="4aefc-303">To run this sample, you must also create a file for the target page in the same directory as this code example.</span></span> <span data-ttu-id="4aefc-304">ターゲット ページのコードは、次の例で提供されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-304">The code for target page is provided in the next example.</span></span>  
  
 [!code-aspx-csharp[Button.PostBackUrlProperty#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlProperty/CS/button.postbackurlpropertycs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlProperty#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlProperty/VB/button.postbackurlpropertyvb.aspx#1)]  
  
 <span data-ttu-id="4aefc-305">次のコード例を使用する方法を示しています、<xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType>から別のページを使用して送信された値にアクセスするプロパティ、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-305">The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=nameWithType> property to access a value that was posted from another page using the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property.</span></span> <span data-ttu-id="4aefc-306">このページは、前のページからポストされ、し、ユーザーに表示される文字列を取得します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-306">This page gets the string that was posted from the previous page and displays it to the user.</span></span> <span data-ttu-id="4aefc-307">に、エラーが発生直接このコード例を実行しようとする場合の値、`text`フィールド`null`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-307">If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`.</span></span> <span data-ttu-id="4aefc-308">代わりに、このコードを使用して、対象ページを作成し、前の例のコードと同じディレクトリにファイルを配置します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-308">Instead, use this code to create a target page and place the file in the same directory as the code for the previous example.</span></span> <span data-ttu-id="4aefc-309">ファイルの名前が指定された値に対応する必要があります、<xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>前の例です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-309">The name of the file must correspond to the value specified for the <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> property in the previous example.</span></span> <span data-ttu-id="4aefc-310">前の例のコードを実行するときにこのページは自動的に実行クロス ページのポストバックが発生したとき。</span><span class="sxs-lookup"><span data-stu-id="4aefc-310">When you run the code for the previous example, this page will execute automatically when the cross page post occurs.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aefc-311">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4aefc-311">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4aefc-312">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-312">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4aefc-313">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-313">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Button.PostBackUrlPage2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.PostBackUrlPage2/CS/button.postbackurlpage2cs.aspx#1)]
 [!code-aspx-vb[Button.PostBackUrlPage2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.PostBackUrlPage2/VB/button.postbackurlpage2vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.Page.PreviousPage" />
      </Docs>
    </Member>
    <Member MemberName="RaisePostBackEvent">
      <MemberSignature Language="C#" Value="protected virtual void RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub RaisePostBackEvent (eventArgument As String)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void RaisePostBackEvent(System::String ^ eventArgument);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="4aefc-314">イベントの引数。</span><span class="sxs-lookup"><span data-stu-id="4aefc-314">The argument for the event.</span></span></param>
        <summary><span data-ttu-id="4aefc-315">サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.Button" /> コントロールのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-315">Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-316">このイベントは内部で使用される、<xref:System.Web.UI.WebControls.Button>コントロール、発生させる、クリックしてされたとき、<xref:System.Web.UI.WebControls.Button.Click>イベントを定義されている場合と、<xref:System.Web.UI.WebControls.Button.Command>イベント。</span><span class="sxs-lookup"><span data-stu-id="4aefc-316">This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="RenderContents">
      <MemberSignature Language="C#" Value="protected internal override void RenderContents (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void RenderContents(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub RenderContents (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void RenderContents(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><span data-ttu-id="4aefc-317">HTML コンテンツをクライアントに表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="4aefc-317">A <see cref="T:System.Web.UI.HtmlTextWriter" /> object that represents the output stream to render HTML content on the client.</span></span></param>
        <summary><span data-ttu-id="4aefc-318">コントロールの内容を指定したライターに出力します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-318">Renders the contents of the control to the specified writer.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="4aefc-319">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.Button.RenderContents%2A>常に次のカスタム テキストを表示するようにカスタム サーバー内のメソッドが制御<xref:System.Web.UI.WebControls.Button>サーバー コントロールです。</span><span class="sxs-lookup"><span data-stu-id="4aefc-319">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.RenderContents%2A> method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.</span></span>  
  
 [!code-aspx-csharp[CustomButtonRenderContents#1](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontentscs.aspx#1)]
 [!code-aspx-vb[CustomButtonRenderContents#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontentsvb.aspx#1)]  
[!code-csharp[CustomButtonRenderContents#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRenderContents/CS/custombuttonrendercontents.cs#2)]
[!code-vb[CustomButtonRenderContents#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRenderContents/VB/custombuttonrendercontents.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="System.Web.UI.IPostBackEventHandler.RaisePostBackEvent">
      <MemberSignature Language="C#" Value="void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(string eventArgument) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)" />
      <MemberSignature Language="VB.NET" Value="Sub RaisePostBackEvent (eventArgument As String) Implements IPostBackEventHandler.RaisePostBackEvent" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System::String ^ eventArgument) = System::Web::UI::IPostBackEventHandler::RaisePostBackEvent;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="eventArgument" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="eventArgument"><span data-ttu-id="4aefc-320">イベントの引数。</span><span class="sxs-lookup"><span data-stu-id="4aefc-320">The argument for the event.</span></span></param>
        <summary><span data-ttu-id="4aefc-321">サーバーへのポストバック時に、<see cref="T:System.Web.UI.WebControls.Button" /> コントロールのイベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-321">Raises events for the <see cref="T:System.Web.UI.WebControls.Button" /> control when it posts back to the server.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-322">このイベントは内部で使用される、<xref:System.Web.UI.WebControls.Button>コントロール、発生させる、クリックしてされたとき、<xref:System.Web.UI.WebControls.Button.Click>イベントを定義されている場合と、<xref:System.Web.UI.WebControls.Button.Command>イベント。</span><span class="sxs-lookup"><span data-stu-id="4aefc-322">This event is used internally by the <xref:System.Web.UI.WebControls.Button> control, when it is clicked, to raise a <xref:System.Web.UI.WebControls.Button.Click> event, and if defined, a <xref:System.Web.UI.WebControls.Button.Command> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-323">次のコード例をオーバーライドする方法を示しています、<xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A>ことを常に発生させるためのメソッド、<xref:System.Web.UI.WebControls.Button.OnClick%2A>カスタム イベント<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-323">The following code example demonstrates how to override the <xref:System.Web.UI.WebControls.Button.System%23Web%23UI%23IPostBackEventHandler%23RaisePostBackEvent%2A> method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-csharp[CustomButtonRaisePostBackEvent#2](~/samples/snippets/csharp/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/CS/custombuttonraisepostbackevent.cs#2)]
 [!code-vb[CustomButtonRaisePostBackEvent#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/CustomButtonRaisePostBackEvent/VB/custombuttonraisepostbackevent.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="E:System.Web.UI.WebControls.Button.Click" />
        <altmember cref="E:System.Web.UI.WebControls.Button.Command" />
      </Docs>
    </Member>
    <Member MemberName="Text">
      <MemberSignature Language="C#" Value="public string Text { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Text" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.Text" />
      <MemberSignature Language="VB.NET" Value="Public Property Text As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Text { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.Text</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-324"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールに表示するテキスト キャプションを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-324">Gets or sets the text caption displayed in the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span></summary>
        <value><span data-ttu-id="4aefc-325"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールに表示するテキスト キャプション。</span><span class="sxs-lookup"><span data-stu-id="4aefc-325">The text caption displayed in the <see cref="T:System.Web.UI.WebControls.Button" /> control.</span></span> <span data-ttu-id="4aefc-326">既定値は <see cref="F:System.String.Empty" /> です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-326">The default value is <see cref="F:System.String.Empty" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-327">使用して、<xref:System.Web.UI.WebControls.Button.Text%2A>プロパティに表示するキャプションを指定、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-327">Use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify or determine the caption to display in the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 <span data-ttu-id="4aefc-328">このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-328">The value of this property, when set, can be saved automatically to a resource file by using a designer tool.</span></span> <span data-ttu-id="4aefc-329">詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-329">For more information, see <xref:System.ComponentModel.LocalizableAttribute> and [Globalization and Localization](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-330">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.Text%2A>に表示されるキャプションを指定するプロパティ、<xref:System.Web.UI.WebControls.Button>コントロール。</span><span class="sxs-lookup"><span data-stu-id="4aefc-330">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.Text%2A> property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.</span></span>  
  
 [!code-aspx-csharp[ButtonClickText#1](~/samples/snippets/csharp/VS_Snippets_WebNet/ButtonClickText/cs/ButtonClickCS.aspx#1)]
 [!code-aspx-vb[ButtonClickText#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/ButtonClickText/vb/ButtonClickVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.String.Empty" />
      </Docs>
    </Member>
    <Member MemberName="UseSubmitBehavior">
      <MemberSignature Language="C#" Value="public virtual bool UseSubmitBehavior { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool UseSubmitBehavior" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.UseSubmitBehavior" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property UseSubmitBehavior As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool UseSubmitBehavior { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-331"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがクライアント ブラウザーの送信機構を使用するのか、ASP.NET のポストバック機構を使用するのかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-331">Gets or sets a value indicating whether the <see cref="T:System.Web.UI.WebControls.Button" /> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</span></span></summary>
        <value>
          <span data-ttu-id="4aefc-332">コントロールがブラウザーの送信機構を使用する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="4aefc-332"><see langword="true" /> if the control uses the client browser's submit mechanism; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="4aefc-333">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-333">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-334">使用して、<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>プロパティを指定するかどうか、<xref:System.Web.UI.WebControls.Button>コントロールでクライアントを使用してブラウザーのメカニズム、または ASP.NET ポストバックのメカニズムを送信します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-334">Use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify whether a <xref:System.Web.UI.WebControls.Button> control uses the client browser's submit mechanism or the ASP.NET postback mechanism.</span></span> <span data-ttu-id="4aefc-335">既定でこのプロパティの値は`true`、原因、<xref:System.Web.UI.WebControls.Button>送信機構をブラウザーを使用して制御します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-335">By default the value of this property is `true`, causing the <xref:System.Web.UI.WebControls.Button> control to use the browser's submit mechanism.</span></span> <span data-ttu-id="4aefc-336">指定した場合`false`、ASP.NET ページ フレームワークでは、サーバーにフォームを投稿するページにクライアント側スクリプトを追加します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-336">If you specify `false`, the ASP.NET page framework adds client-side script to the page to post the form to the server.</span></span>  
  
 <span data-ttu-id="4aefc-337">ときに、<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>プロパティは`false`、コントロールの開発者が使用できる、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>クライアントを返すメソッドをポストバック イベントを<xref:System.Web.UI.WebControls.Button>です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-337">When the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is `false`, control developers can use the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method to return the client postback event for the <xref:System.Web.UI.WebControls.Button>.</span></span> <span data-ttu-id="4aefc-338">によって返される文字列、<xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>メソッドは、クライアント側の関数呼び出しのテキストが含まれており、クライアント側のイベント ハンドラーに挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-338">The string returned by the <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> method contains the text of the client-side function call and can be inserted into a client-side event handler.</span></span>  
  
 <span data-ttu-id="4aefc-339">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-339">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-340">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-340">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-341">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>送信方法を指定するプロパティを<xref:System.Web.UI.WebControls.Button>サーバーへのポストバック時にコントロールを使用しています。</span><span class="sxs-lookup"><span data-stu-id="4aefc-341">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server.</span></span> <span data-ttu-id="4aefc-342"><xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>プロパティに設定されている`false`、ポストバック メカニズムの原因で、ASP.NET を使用してボタンをクリックします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-342">The <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A> property is set to `false`, causing the button to use the ASP.NET postback mechanism.</span></span> <span data-ttu-id="4aefc-343">ブラウザーの ソースの表示コマンドを使用して、レンダリングされるページのソース コードを表示する場合、クライアント側のスクリプトがサーバーにフォームを投稿する ASP.NET ページ フレームワークによって追加されたことが表示されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-343">If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.</span></span>  
  
 [!code-aspx-csharp[Button.UseSubmitBehavior#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.UseSubmitBehavior/CS/button.usesubmitbehaviorcs.aspx#1)]
 [!code-aspx-vb[Button.UseSubmitBehavior#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.UseSubmitBehavior/VB/button.usesubmitbehaviorvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.UI.ClientScriptManager.GetPostBackEventReference" />
      </Docs>
    </Member>
    <Member MemberName="ValidationGroup">
      <MemberSignature Language="C#" Value="public virtual string ValidationGroup { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ValidationGroup" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Button.ValidationGroup" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ValidationGroup As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ValidationGroup { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.UI.WebControls.IButtonControl.ValidationGroup</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="4aefc-344"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがサーバーにポストバックされるときに検証が実行されるコントロールのグループを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-344">Gets or sets the group of controls for which the <see cref="T:System.Web.UI.WebControls.Button" /> control causes validation when it posts back to the server.</span></span></summary>
        <value><span data-ttu-id="4aefc-345"><see cref="T:System.Web.UI.WebControls.Button" /> コントロールがサーバーにポストバックされるときに検証が実行されるコントロールのグループ。</span><span class="sxs-lookup"><span data-stu-id="4aefc-345">The group of controls for which the <see cref="T:System.Web.UI.WebControls.Button" /> control causes validation when it posts back to the server.</span></span> <span data-ttu-id="4aefc-346">既定値は、空の文字列 ("") です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-346">The default value is an empty string ("").</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="4aefc-347">検証グループを使用すると、ページ上の検証コントロールを特定のカテゴリに割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-347">Validation groups allow you to assign validation controls on a page to a specific category.</span></span> <span data-ttu-id="4aefc-348">各グループの検証は、ページ上の他の検証グループとは無関係に検証できます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-348">Each validation group can be validated independently of other validation groups on the page.</span></span> <span data-ttu-id="4aefc-349">使用して、<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>プロパティを対象の検証グループの名前を指定する、<xref:System.Web.UI.WebControls.Button>サーバーへのポストバック時にコントロールによって検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-349">Use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the name of the validation group for which the <xref:System.Web.UI.WebControls.Button> control causes validation when it posts back to the server.</span></span>  
  
 <span data-ttu-id="4aefc-350">このプロパティは、有効される場合にのみの値、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティに設定されている`true`です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-350">This property has an effect only when the value of the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`.</span></span> <span data-ttu-id="4aefc-351">値を指定すると、<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>プロパティ、指定されたグループの一部である検証コントロールだけは、検証、<xref:System.Web.UI.WebControls.Button>コントロールは、サーバーに再度ポストします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-351">When you specify a value for the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property, only the validation controls that are part of the specified group are validated when the <xref:System.Web.UI.WebControls.Button> control posts back to the server.</span></span> <span data-ttu-id="4aefc-352">このプロパティの値を指定しないかどうか、<xref:System.Web.UI.WebControls.Button.CausesValidation%2A>プロパティに設定されている`true`サーバーへのコントロールのポストバック時に検証グループに割り当てられていないページ上のすべての検証コントロールが検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-352">If you do not specify a value for this property and the <xref:System.Web.UI.WebControls.Button.CausesValidation%2A> property is set to `true`, all validation controls on the page that are not assigned to a validation group are validated when the control posts back to the server.</span></span>  
  
 <span data-ttu-id="4aefc-353">このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。</span><span class="sxs-lookup"><span data-stu-id="4aefc-353">This property cannot be set by themes or style sheet themes.</span></span> <span data-ttu-id="4aefc-354">詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</span><span class="sxs-lookup"><span data-stu-id="4aefc-354">For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="4aefc-355">次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>ときに検証するためにコントロールを指定するプロパティ、<xref:System.Web.UI.WebControls.Button>コントロールは、サーバーに再度ポストします。</span><span class="sxs-lookup"><span data-stu-id="4aefc-355">The following code example demonstrates how to use the <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server.</span></span> <span data-ttu-id="4aefc-356">ページには、ユーザーからのデータをキャプチャする 3 つのテキスト ボックス、3 つが含まれています。<xref:System.Web.UI.WebControls.RequiredFieldValidator>コントロールを、ユーザーは空白でないテキスト ボックスを確認してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-356">The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank.</span></span> <span data-ttu-id="4aefc-357"><xref:System.Web.UI.WebControls.RequiredFieldValidator>制御では、最初の 2 つのテキスト ボックス、`PersonalInfoGroup`検証グループおよび<xref:System.Web.UI.WebControls.RequiredFieldValidator>では、3 つ目のテキスト ボックスの制御、`LocationInfoGroup`検証グループ。</span><span class="sxs-lookup"><span data-stu-id="4aefc-357">The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group.</span></span> <span data-ttu-id="4aefc-358">ときに`Button1`がクリックすると、検証グループ内にあるコントロールだけ`PersonalInfoGroup`検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-358">When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated.</span></span> <span data-ttu-id="4aefc-359">ときに`Button2`クリックすると、検証グループ内のコントロールのみ`LocationInfoGroup`を検証します。</span><span class="sxs-lookup"><span data-stu-id="4aefc-359">When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="4aefc-360">この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。</span><span class="sxs-lookup"><span data-stu-id="4aefc-360">This example has a text box that accepts user input, which is a potential security threat.</span></span> <span data-ttu-id="4aefc-361">既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。</span><span class="sxs-lookup"><span data-stu-id="4aefc-361">By default, ASP.NET Web pages validate that user input does not include script or HTML elements.</span></span> <span data-ttu-id="4aefc-362">詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="4aefc-362">For more information, see [Script Exploits Overview](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07).</span></span>  
  
 [!code-aspx-csharp[Button.ValidationGroup#1](~/samples/snippets/csharp/VS_Snippets_WebNet/Button.ValidationGroup/CS/button.validationgroupcs.aspx#1)]
 [!code-aspx-vb[Button.ValidationGroup#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/Button.ValidationGroup/VB/button.validationgroupvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Button.CausesValidation" />
        <altmember cref="T:System.Web.UI.WebControls.RequiredFieldValidator" />
      </Docs>
    </Member>
  </Members>
</Type>