<Type Name="WizardStepCollection" FullName="System.Web.UI.WebControls.WizardStepCollection">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4895124758e4164497681734d2183a706ba07baa" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51862761" /></Metadata><TypeSignature Language="C#" Value="public sealed class WizardStepCollection : System.Collections.IList" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit WizardStepCollection extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.WizardStepCollection" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class WizardStepCollection&#xA;Implements IList" />
  <TypeSignature Language="C++ CLI" Value="public ref class WizardStepCollection sealed : System::Collections::IList" />
  <TypeSignature Language="F#" Value="type WizardStepCollection = class&#xA;    interface IList&#xA;    interface ICollection&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.ICollection</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ウィザードとして機能するコントロールの <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 派生オブジェクトのコレクションを表します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepCollection>を格納および管理のコレクション クラスが使用される<xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトなど、ウィザードとして機能するコントロールを<xref:System.Web.UI.WebControls.CreateUserWizard>コントロールまたは<xref:System.Web.UI.WebControls.Wizard>コントロール。 たとえば、<xref:System.Web.UI.WebControls.Wizard>コントロール、<xref:System.Web.UI.WebControls.WizardStepCollection>クラスに対するその<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>プロパティ。  
  
 複数の方法でアクセスできますが、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクト、 <xref:System.Web.UI.WebControls.WizardStepCollection>:  
  
-   使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>に直接アクセスするプロパティを<xref:System.Web.UI.WebControls.WizardStepBase>-特定の 0 から始まるインデックス位置にあるオブジェクトを派生します。  
  
-   使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>コレクションを反復処理に使用できる列挙子を作成します。  
  
-   使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>の内容をコピーする方法、<xref:System.Web.UI.WebControls.WizardStepCollection>のコレクションを<xref:System.Array>オブジェクト。  
  
   
  
## Examples  
 次の例では、設定する方法について、<xref:System.Web.UI.WebControls.WizardStepCollection>宣言型構文を使用してコレクション。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/CS/wizardstepcollectiondeclarecs.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionDeclare#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionDeclare/VB/wizardstepcollectiondeclarevb.aspx#3)]  
  
 次の例では、プログラムで設定する方法について、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollectioncs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollection#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollectionvb.aspx#1)]  
  
 以下は、前の例では、Web ページの分離コード ファイルです。  
  
 [!code-csharp[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/CS/wizardstepcollection.cs#2)]
 [!code-vb[System.Web.UI.WebControls.WizardStepCollection#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollection/VB/wizardstepcollection.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
    <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
    <altmember cref="T:System.Web.UI.WebControls.Wizard" />
    <altmember cref="T:System.Web.UI.WebControls.CreateUserWizard" />
    <altmember cref="T:System.Web.UI.WebControls.Login" />
    <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
  </Docs>
  <Members>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Add : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Add wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクションに追加する <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトをコレクションの末尾に追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。 追加する、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトをコレクションの特定のインデックスの場所では、使用、<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッド。  
  
   
  
## Examples  
 プログラムで作成する次のコード例に示します、<xref:System.Web.UI.WebControls.Wizard>コントロールとを使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッドを追加する<xref:System.Web.UI.WebControls.WizardStepBase>-派生<xref:System.Web.UI.WebControls.WizardStep>オブジェクトを<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>コレクション。 例では、注意、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロールのインスタンスである、<xref:System.Web.UI.WebControls.WizardStepCollection>クラス。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="AddAt">
      <MemberSignature Language="C#" Value="public void AddAt (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void AddAt(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub AddAt (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void AddAt(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.AddAt : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.AddAt (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを挿入するインデックス位置。</param>
        <param name="wizardStep"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクションに追加する <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</param>
        <summary>指定したインデックス位置に、指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションの指定したインデックス位置にオブジェクトを派生します。  
  
 追加する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>収集、使用、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public void Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Clear" />
      <MemberSignature Language="VB.NET" Value="Public Sub Clear ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void Clear();" />
      <MemberSignature Language="F#" Value="abstract member Clear : unit -&gt; unit&#xA;override this.Clear : unit -&gt; unit" Usage="wizardStepCollection.Clear " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクションからすべての <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>すべてを削除するメソッド、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトから、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。  
  
> [!NOTE]
>  後に、<xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>メソッドの削除、 <xref:System.Web.UI.WebControls.WizardStepBase>-、コレクションから派生したオブジェクト、<xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>のプロパティ、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクションが 0 の値を持ちます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public bool Contains (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Contains(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Contains(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function Contains (wizardStep As WizardStepBase) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Contains(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Contains : System.Web.UI.WebControls.WizardStepBase -&gt; bool" Usage="wizardStepCollection.Contains wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクション内で検索する <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションに特定の <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが格納されているかどうかを確認します。</summary>
        <returns><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Contains%2A>判断するメソッドかどうかを<xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトがコレクションに含まれています。 このメソッドは通常の存在をテストに使用、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトを削除するなどのタスクを実行する前に、 <xref:System.Web.UI.WebControls.WizardStepBase>-オブジェクトをコレクションから派生します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="wizardStep" /> は <see langword="null" />です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (System.Web.UI.WebControls.WizardStepBase[] array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Web.UI.WebControls.WizardStepBase[] array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CopyTo (array As WizardStepBase(), index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(cli::array &lt;System::Web::UI::WebControls::WizardStepBase ^&gt; ^ array, int index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : System.Web.UI.WebControls.WizardStepBase[] * int -&gt; unit" Usage="wizardStepCollection.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Web.UI.WebControls.WizardStepBase[]" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">コレクションからコピーされた項目の格納先となるインデックス番号が 0 から始まる <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクト配列。</param>
        <param name="index">コピーされた項目を受け取る配列の格納開始位置。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクション内のすべての項目を互換性のある 1 次元の <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクト配列にコピーします。コピー先の配列の指定したインデックス位置からコピーが開始されます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>メソッドを指定した 0 から始まる配列にコレクションの内容をコピーします。 項目をコピーするには、ターゲット配列の指定したインデックスから始まります。 内の項目にアクセスする配列の構文を使用するには、項目は、配列では後、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。  
  
 代わりに、使用することも、<xref:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator%2A>コレクション内の項目へのアクセスに使用できる列挙子を作成します。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.WizardStepCollection.CopyTo%2A>コピーする方法、<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクトをコレクションから配列にします。 配列を表示する反復し、<xref:System.Web.UI.Control.ID%2A>の各プロパティ<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクト。 例では、注意、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロールのインスタンスである、<xref:System.Web.UI.WebControls.WizardStepCollection>クラス。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/CS/wizardstepcollectioncopytocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionCopyTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionCopyTo/VB/wizardstepcollectioncopytovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Count">
      <MemberSignature Language="C#" Value="public int Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Count" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Count As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Count { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Count : int" Usage="System.Web.UI.WebControls.WizardStepCollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> コレクション内の <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクトの数を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> の派生オブジェクトの数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>プロパティの数を決定する<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクト、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。 <xref:System.Web.UI.WebControls.WizardStepCollection.Count%2A>プロパティは通常、上の特定のコレクションを反復処理にバインドされている場合に使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="wizardStepCollection.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コレクション内の <see cref="T:System.Collections.IEnumerator" /> の派生オブジェクトを反復処理するために使用できる <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の実装オブジェクトを返します。</summary>
        <returns><see cref="T:System.Collections.IEnumerator" /> コレクション内のすべての <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが格納された <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の実装オブジェクト。</returns>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.CopyTo(System.Web.UI.WebControls.WizardStepBase[],System.Int32)" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public int IndexOf (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 IndexOf(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.IndexOf(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function IndexOf (wizardStep As WizardStepBase) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int IndexOf(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.IndexOf : System.Web.UI.WebControls.WizardStepBase -&gt; int" Usage="wizardStepCollection.IndexOf wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクション内で検索する <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</param>
        <summary>コレクション内の指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトの位置を表すインデックス値を確認します。</summary>
        <returns>見つかった場合は、渡された、現在の <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクション内の最初に出現した <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクトの 0 から始まるインデックス。それ以外の場合は -1。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.IndexOf%2A>メソッドの指定したインデックスを決定する<xref:System.Web.UI.WebControls.WizardStepBase>-現在のオブジェクトを派生<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。 場合、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトがコレクション内では、メソッドは-1 を返します。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public void Insert (int index, System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Insert(int32 index, class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Insert(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Insert (index As Integer, wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Insert(int index, System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Insert : int * System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Insert (index, wizardStep)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="index"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを挿入するインデックス位置。</param>
        <param name="wizardStep"><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクションに挿入する <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</param>
        <summary>このコレクション内の指定したインデックス位置に、指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A>メソッドを追加、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションの指定したインデックス位置にオブジェクトを派生します。  
  
 また、使用することができます、<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>を追加するメソッド、 <xref:System.Web.UI.WebControls.WizardStepBase>-コレクションにオブジェクトを派生します。 追加する、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生したオブジェクトの末尾に、<xref:System.Web.UI.WebControls.WizardStepCollection>収集、使用、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッド。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A>メソッドと<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッドは、基本的に同じ機能を実行します。 ときに、<xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A>メソッドが呼び出されると、単に渡す、`wizardStep`と`index`パラメーターを<xref:System.Web.UI.WebControls.WizardStepCollection.AddAt%2A>メソッド。  
  
   
  
## Examples  
 プログラムで作成する次のコード例に示します、<xref:System.Web.UI.WebControls.Wizard>コントロールとを使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A>メソッドを追加する<xref:System.Web.UI.WebControls.WizardStepBase>-派生するオブジェクト、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>コレクション。 例では、注意、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロールのインスタンスである、<xref:System.Web.UI.WebControls.WizardStepCollection>クラス。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/CS/wizardstepcollectioninsertcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionInsert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionInsert/VB/wizardstepcollectioninsertvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Add(System.Web.UI.WebControls.WizardStepBase)" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.AddAt(System.Int32,System.Web.UI.WebControls.WizardStepBase)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクション内の <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを変更できるかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションを変更できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Wizard" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Web.UI.WebControls.WizardStepCollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスが同期されている (スレッド セーフである) かどうかを示す値を取得します。</summary>
        <value>常に <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティはから派生した、<xref:System.Collections.ICollection>インターフェイスし、常にオーバーライドは`false`。  
  
 詳細については、<xref:System.Web.UI.WebControls.WizardStepCollection.IsSynchronized%2A>プロパティを参照してください、<xref:System.Collections.ICollection.IsSynchronized%2A>のプロパティ、<xref:System.Collections.ICollection>インターフェイス  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.IsSynchronized" />
        <altmember cref="T:System.Collections.ICollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase this[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(index As Integer) As WizardStepBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WizardStepBase ^ default[int] { System::Web::UI::WebControls::WizardStepBase ^ get(int index); };" />
      <MemberSignature Language="F#" Value="member this.Item(int) : System.Web.UI.WebControls.WizardStepBase" Usage="System.Web.UI.WebControls.WizardStepCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">取得する <see cref="T:System.Web.UI.WebControls.WizardStep" /> オブジェクトのインデックス。</param>
        <summary>コレクションの指定したインデックス位置にある <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コレクションの指定したインデックス位置にある <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> の派生オブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Item%2A>プロパティを取得する、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトで指定したインデックス位置にある、<xref:System.Web.UI.WebControls.WizardStepCollection>配列表記を使用してコレクション。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public void Remove (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Remove(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Remove (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Remove(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberSignature Language="F#" Value="member this.Remove : System.Web.UI.WebControls.WizardStepBase -&gt; unit" Usage="wizardStepCollection.Remove wizardStep" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">コレクションから削除する <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトをコレクションから削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>を削除するメソッド、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトから、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。 また、使用することができます、<xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>を削除するメソッド、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトの指定した位置から、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。  
  
   
  
## Examples  
 次の例では、使用する方法、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>を削除するメソッド、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトから、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション。 例では、注意、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロールのインスタンスである、<xref:System.Web.UI.WebControls.WizardStepCollection>クラス。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/CS/wizardstepcollectionremovecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardStepCollectionRemove#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardStepCollectionRemove/VB/wizardstepcollectionremovevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトが <see langword="null" /> です。</exception>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="RemoveAt">
      <MemberSignature Language="C#" Value="public void RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub RemoveAt (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void RemoveAt(int index);" />
      <MemberSignature Language="F#" Value="abstract member RemoveAt : int -&gt; unit&#xA;override this.RemoveAt : int -&gt; unit" Usage="wizardStepCollection.RemoveAt index" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">削除する <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトのインデックス。</param>
        <summary>コレクションの指定した位置から <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを削除します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.WizardStepCollection.RemoveAt%2A>を削除するメソッド、 <xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトから、<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション内の指定したインデックス位置。 特定の削除または、<xref:System.Web.UI.WebControls.WizardStepBase>の派生オブジェクトを使用してコレクションから、<xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>メソッド。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="M:System.Web.UI.WebControls.WizardStepCollection.Remove(System.Web.UI.WebControls.WizardStepBase)" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Web.UI.WebControls.WizardStepCollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションへのアクセスを同期するために使用できるオブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクションへのアクセスを同期するために使用できるオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この実装で返されるオブジェクトが、<xref:System.Web.UI.WebControls.WizardStepCollection>オブジェクト自体です。  
  
 詳細については、<xref:System.Web.UI.WebControls.WizardStepCollection.SyncRoot%2A>プロパティを参照してください、<xref:System.Collections.ICollection.SyncRoot%2A>のプロパティ、<xref:System.Collections.ICollection>インターフェイス。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Collections.ICollection.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.CopyTo">
      <MemberSignature Language="C#" Value="void ICollection.CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.ICollection.CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.ICollection.CopyTo(Array ^ array, int index) = System::Collections::ICollection::CopyTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array"><see cref="T:System.Array" /> からの項目のコピー先となる、インデックス番号が 0 から始まる <see cref="T:System.Web.UI.WebControls.WizardStepCollection" />。</param>
        <param name="index">コピーされたコンテンツが格納される配列の格納開始位置。</param>
        <summary><see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> コレクション内のすべての項目を 1 次元の配列にコピーします。コピー先の配列の指定したインデックス位置からコピーが開始されます。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">コレクションの末尾に追加する <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトをコレクションの末尾に追加します。</summary>
        <returns>新しい要素が挿入された位置。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">コレクション内で検索する <see cref="T:System.Object" />。</param>
        <summary>指定したオブジェクトがコレクションに格納されているかどうかを確認します。</summary>
        <returns><see cref="T:System.Object" /> が <see cref="T:System.Collections.IList" /> に存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">コレクション内で検索されるオブジェクト。</param>
        <summary>コレクション内の指定したオブジェクトの位置を表すインデックス値を確認します。</summary>
        <returns>コレクション内の指定したオブジェクトのインデックス値。</returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">コレクション内のオブジェクトの挿入位置のインデックス。</param>
        <param name="value">コレクションに挿入するオブジェクト。</param>
        <summary>指定したオブジェクトをコレクション内の指定した位置に挿入します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System::Collections::IList::IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コレクションが固定サイズかどうかを示す値を取得します。</summary>
        <value>コレクションが固定サイズの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System::Collections::IList::Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">コレクションから取得するオブジェクトのインデックス。</param>
        <summary>コレクション内の指定したインデックス位置のオブジェクトを取得します。</summary>
        <value>取得するオブジェクト。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティでは、myCollection[index] という構文を使用して、コレクション内の特定の要素にアクセスできます。  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.WizardStepCollection.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">コレクションから削除するオブジェクト。</param>
        <summary>指定されたオブジェクトをコレクションから削除します。</summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/c0cc4b96-8d75-41f7-977a-4d75098d7a9e">ウィザードの Web サーバー コントロール</related>
      </Docs>
    </Member>
  </Members>
</Type>