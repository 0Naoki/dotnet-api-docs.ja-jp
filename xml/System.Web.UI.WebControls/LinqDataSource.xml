<Type Name="LinqDataSource" FullName="System.Web.UI.WebControls.LinqDataSource">
  <Metadata><Meta Name="ms.openlocfilehash" Value="729f547459d16d92aa81f597137e6216474a2b35" /><Meta Name="ms.sourcegitcommit" Value="bac13a81377b1c4ebf3990e3287a6f1700f73751" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="03/19/2019" /><Meta Name="ms.locfileid" Value="57924383" /></Metadata><TypeSignature Language="C#" Value="public class LinqDataSource : System.Web.UI.WebControls.ContextDataSource, System.Web.DynamicData.IDynamicDataSource" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit LinqDataSource extends System.Web.UI.WebControls.ContextDataSource implements class System.Web.DynamicData.IDynamicDataSource, class System.Web.UI.IDataSource" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.LinqDataSource" />
  <TypeSignature Language="VB.NET" Value="Public Class LinqDataSource&#xA;Inherits ContextDataSource&#xA;Implements IDynamicDataSource" />
  <TypeSignature Language="C++ CLI" Value="public ref class LinqDataSource : System::Web::UI::WebControls::ContextDataSource, System::Web::DynamicData::IDynamicDataSource" />
  <TypeSignature Language="F#" Value="type LinqDataSource = class&#xA;    inherit ContextDataSource&#xA;    interface IDynamicDataSource&#xA;    interface IDataSource" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.ContextDataSource</BaseTypeName>
    <BaseTypeName FrameworkAlternate="netframework-3.5">System.Web.UI.DataSourceControl</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.DynamicData.IDynamicDataSource</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Web.UI.IDataSource</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("Selecting")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultProperty("ContextTypeName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.bmp")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ParseChildren(true)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.PersistChildren(false)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.LinqDataSourceDesigner, System.Web.Extensions.Design, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.ComponentModel.ToolboxItemFilter("System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35", System.ComponentModel.ToolboxItemFilterType.Require)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-3.5">
      <AttributeName>System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.LinqDataSource), "LinqDataSource.ico")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="00723-101">ASP.NET Web ページでマークアップ テキストを通じて統合言語クエリ (LINQ) を使用し、データ オブジェクトのデータを取得したり変更したりできるようにします。</span><span class="sxs-lookup"><span data-stu-id="00723-101">Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="00723-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="00723-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="00723-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="00723-104">操作の順序</span><span class="sxs-lookup"><span data-stu-id="00723-104">Order of Operations</span></span>](#order_of_operations)  
  
-   [<span data-ttu-id="00723-105">データの並べ替え</span><span class="sxs-lookup"><span data-stu-id="00723-105">Ordering Data</span></span>](#ordering_data)  
  
-   [<span data-ttu-id="00723-106">データのグループ化</span><span class="sxs-lookup"><span data-stu-id="00723-106">Grouping Data</span></span>](#grouping_data)  
  
-   [<span data-ttu-id="00723-107">データの変更</span><span class="sxs-lookup"><span data-stu-id="00723-107">Data Modifications</span></span>](#data_modifications)  
  
-   [<span data-ttu-id="00723-108">実行時に値を評価します。</span><span class="sxs-lookup"><span data-stu-id="00723-108">Evaluating Values at Run Time</span></span>](#evaluating_value_at_run_time)  
  
-   [<span data-ttu-id="00723-109">ストアド プロシージャの使用</span><span class="sxs-lookup"><span data-stu-id="00723-109">Working with Stored Procedures</span></span>](#working_with_stored_procedures)  
  
-   [<span data-ttu-id="00723-110">宣言構文</span><span class="sxs-lookup"><span data-stu-id="00723-110">Declarative Syntax</span></span>](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="00723-111">はじめに</span><span class="sxs-lookup"><span data-stu-id="00723-111">Introduction</span></span>  
 <span data-ttu-id="00723-112">統合言語クエリ (LINQ) は、クエリ演算子のセットを定義するクエリ構文です。NET ベースのプログラミング言語です。</span><span class="sxs-lookup"><span data-stu-id="00723-112">Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</span></span> <span data-ttu-id="00723-113">データ オブジェクトには、メモリ内のデータ コレクションをまたはデータベースからデータを表すオブジェクトを指定できます。</span><span class="sxs-lookup"><span data-stu-id="00723-113">The data object can be an in-memory data collection or an object that represents data from a database.</span></span> <span data-ttu-id="00723-114">取得したり、各操作に対する SQL コマンドを記述することがなく、データを変更できます。</span><span class="sxs-lookup"><span data-stu-id="00723-114">You can retrieve or modify the data without having to write SQL commands for each operation.</span></span>  
  
 <span data-ttu-id="00723-115"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールでは、ASP.NET Web ページで LINQ を使用してマークアップのテキストでプロパティを設定することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-115">The <xref:System.Web.UI.WebControls.LinqDataSource> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</span></span> <span data-ttu-id="00723-116"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータ コマンドを自動的に生成する LINQ to SQL を使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-116">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically generate the data commands.</span></span> <span data-ttu-id="00723-117">LINQ to SQL の詳細については、次を参照してください。 [LINQ to SQL](https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)します。</span><span class="sxs-lookup"><span data-stu-id="00723-117">For more information about LINQ to SQL, see [LINQ to SQL](https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="00723-118">設定する、メモリ内のデータ コレクションからデータを取得するときに、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティをデータ コレクションを含むクラスにします。</span><span class="sxs-lookup"><span data-stu-id="00723-118">When you are retrieving data from an in-memory data collection, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that contains the data collection.</span></span> <span data-ttu-id="00723-119">設定する、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティをプロパティまたはフィールドをデータ コレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="00723-119">You set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property or field that returns the data collection.</span></span> <span data-ttu-id="00723-120">たとえば、という名前のクラスがある`Person`という名前のプロパティを格納している`FavoriteCities`文字列値の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="00723-120">For example, you might have a class named `Person` that contains a property named `FavoriteCities` that returns an array of string values.</span></span> <span data-ttu-id="00723-121">その場合を設定する、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティを`Person`設定と、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティを`FavoriteCities`します。</span><span class="sxs-lookup"><span data-stu-id="00723-121">In that case, you set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to `Person` and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to `FavoriteCities`.</span></span>  
  
 <span data-ttu-id="00723-122">データベースのクエリを実行するときに、まず、データベースとそのテーブルを表すエンティティ クラスを作成する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-122">When you are querying a database, you must first create entity classes that represent the database and its tables.</span></span> <span data-ttu-id="00723-123">使用することができます、[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]または、SqlMetal.exe ユーティリティは、これらのクラスを生成します。</span><span class="sxs-lookup"><span data-stu-id="00723-123">You can use the [!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)] or the SqlMetal.exe utility to generate these classes.</span></span> <span data-ttu-id="00723-124">設定する、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティをデータベースを表すクラスにし、設定、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティをデータベース テーブルを表すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-124">You then set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the class that represents the database and set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the database table.</span></span>  
  
<a name="order_of_operations"></a>   
## <a name="order-of-operations"></a><span data-ttu-id="00723-125">操作の順序</span><span class="sxs-lookup"><span data-stu-id="00723-125">Order of Operations</span></span>  
 <span data-ttu-id="00723-126"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールには、次の順序でのデータ操作が適用されます。</span><span class="sxs-lookup"><span data-stu-id="00723-126">The <xref:System.Web.UI.WebControls.LinqDataSource> control applies data operations in the following order:</span></span>  
  
1.  <span data-ttu-id="00723-127">場所 (データが返されるレコードの指定)。</span><span class="sxs-lookup"><span data-stu-id="00723-127">Where (specify which data records to return).</span></span>  
  
2.  <span data-ttu-id="00723-128">順序 (並べ替え) では。</span><span class="sxs-lookup"><span data-stu-id="00723-128">Order By (sort).</span></span>  
  
3.  <span data-ttu-id="00723-129">グループ (値を共有するデータの集計レコード) では。</span><span class="sxs-lookup"><span data-stu-id="00723-129">Group By (aggregate data records that share values).</span></span>  
  
4.  <span data-ttu-id="00723-130">Order By (並べ替えのグループ化されたデータ) のグループ。</span><span class="sxs-lookup"><span data-stu-id="00723-130">Order Groups By (sort grouped data).</span></span>  
  
5.  <span data-ttu-id="00723-131">(どのフィールドまたはプロパティを返す指定) を選択します。</span><span class="sxs-lookup"><span data-stu-id="00723-131">Select (specify which fields or properties to return).</span></span>  
  
6.  <span data-ttu-id="00723-132">自動並べ替え (ユーザーが選択したプロパティでデータ レコードの並べ替え) をダブルクリックします。</span><span class="sxs-lookup"><span data-stu-id="00723-132">Auto-sort (sort data records by a property that the user has selected).</span></span>  
  
7.  <span data-ttu-id="00723-133">自動ページ (ユーザーによって選択されたデータ レコードのサブセットを取得)。</span><span class="sxs-lookup"><span data-stu-id="00723-133">Auto-page (retrieve a subset of data records that were selected by the user).</span></span>  
  
 <span data-ttu-id="00723-134">条件を追加することができます、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティをクエリから返されるデータ レコードをフィルター処理します。</span><span class="sxs-lookup"><span data-stu-id="00723-134">You can add conditions to the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter the data records that are returned from a query.</span></span> <span data-ttu-id="00723-135">場合、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティが設定されていない、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータ オブジェクトからすべてのレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-135">If the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is not set, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves every record from the data object.</span></span>  
  
<a name="ordering_data"></a>   
## <a name="ordering-data"></a><span data-ttu-id="00723-136">データの並べ替え</span><span class="sxs-lookup"><span data-stu-id="00723-136">Ordering Data</span></span>  
 <span data-ttu-id="00723-137">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティから返されたデータを並べ替えるにはプロパティの名前を指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-137">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify the names of properties from the returned data to sort by.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00723-138">使用すると、<xref:System.Web.UI.WebControls.LinqDataSource>で制御する[!INCLUDE[ss2k](~/includes/ss2k-md.md)]または[!INCLUDE[ssEW](~/includes/ssew-md.md)]と<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティに設定されて`true`で値を指定する必要があります、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-138">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="00723-139">既定で、<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-139">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="00723-140">値を割り当てる場合、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを含める必要がありますすべての identity 列で、クエリで返されるプロパティの一覧。</span><span class="sxs-lookup"><span data-stu-id="00723-140">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
<a name="grouping_data"></a>   
## <a name="grouping-data"></a><span data-ttu-id="00723-141">データのグループ化</span><span class="sxs-lookup"><span data-stu-id="00723-141">Grouping Data</span></span>  
 <span data-ttu-id="00723-142">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティに同じ値を持つデータ レコードの統合を使用するプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-142">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used to consolidate data records that have the same values.</span></span> <span data-ttu-id="00723-143">データをグループ化するときに含めることができます`Key`と`It`でのプロパティを動的に作成されるが、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-143">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-144">`Key`プロパティまたは複数のデータをグループ化に使用されたプロパティの値を参照します。</span><span class="sxs-lookup"><span data-stu-id="00723-144">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="00723-145">たとえば、という名前のプロパティでグループ化する`Category`、`Key`プロパティ内のすべての一意の値が格納されます、`Category`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-145">For example, if you group by a property named `Category`, the `Key` property will contain all unique values in the `Category` property.</span></span> <span data-ttu-id="00723-146">`It`プロパティはデータのグループ内の個々 のレコードのコレクションを参照します。</span><span class="sxs-lookup"><span data-stu-id="00723-146">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="00723-147">反復処理することができます、`It`プロパティをグループ化操作に統合されている個々 のレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-147">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="00723-148">たとえば、という名前のプロパティでグループ化する`Category`、`It`プロパティにはで共通の値を共有するすべての個別のレコードが含まれています、`Category`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-148">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="00723-149">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティをグループ化されたデータの並べ替えに使用するプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-149">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify the properties to use for sorting the grouped data.</span></span> <span data-ttu-id="00723-150">データをグループ化するときに、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティは、グループ化されたデータ内の各レコードの並べ替え方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-150">When you group data, the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property specifies how the individual records within the grouped data are sorted.</span></span>  
  
 <span data-ttu-id="00723-151">既定で、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータ オブジェクトからすべてのプロパティの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-151">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves values for all the properties from a data object.</span></span> <span data-ttu-id="00723-152">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを使用できるプロパティのサブセットを操作するかどうかに返すプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-152">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to specify which properties to return if you want to work with a subset of available properties.</span></span> <span data-ttu-id="00723-153">選択操作では、Where、後に適用される Order By と Group By 操作。</span><span class="sxs-lookup"><span data-stu-id="00723-153">The Select operation is applied after the Where, Order By, and Group By operations.</span></span> <span data-ttu-id="00723-154">そのため、Select 句で別名を作成する場合は、エイリアスは他の句で使用できません。</span><span class="sxs-lookup"><span data-stu-id="00723-154">Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</span></span>  
  
<a name="data_modifications"></a>   
## <a name="data-modifications"></a><span data-ttu-id="00723-155">データ変更</span><span class="sxs-lookup"><span data-stu-id="00723-155">Data Modifications</span></span>  
 <span data-ttu-id="00723-156">使用してデータの変更が有効になっているかどうかを指定することができます、 <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>、 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>、および<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-156">You can specify whether data modifications are enabled by using the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, and <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> properties.</span></span> <span data-ttu-id="00723-157">データを変更するためのユーザー インターフェイス、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、通常提供、データ バインド コントロールを介してなど、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-157">The user interface for modifying data from a <xref:System.Web.UI.WebControls.LinqDataSource> control is typically provided through a data-bound control, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span> <span data-ttu-id="00723-158">設定だけでなく<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>、 <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>、または<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>に`true`データの自動変更を有効にする、次の条件が必要です。</span><span class="sxs-lookup"><span data-stu-id="00723-158">In addition to setting <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> to `true`, the following conditions are required to enable automatic data modifications:</span></span>  
  
-   <span data-ttu-id="00723-159"><xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティに値を割り当てることができません。</span><span class="sxs-lookup"><span data-stu-id="00723-159">The <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="00723-160"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティに値を割り当てることができません。</span><span class="sxs-lookup"><span data-stu-id="00723-160">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property cannot be assigned a value.</span></span>  
  
-   <span data-ttu-id="00723-161">割り当てられているクラス、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.DataContext>します。</span><span class="sxs-lookup"><span data-stu-id="00723-161">The class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span>  
  
-   <span data-ttu-id="00723-162">プロパティに割り当てられている、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.Table%601>します。</span><span class="sxs-lookup"><span data-stu-id="00723-162">The property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="00723-163">プロパティは、2 つの方法でデータ バインド コントロールに表示されるを制限することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-163">You can restrict which properties are displayed in a data-bound control in two ways.</span></span> <span data-ttu-id="00723-164">設定するか、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティのサブセットを追加することで、データ バインド コントロールのフィールドを定義できます<xref:System.Web.UI.WebControls.DataControlField>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-164">You can either set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties, or you can define the fields for a data-bound control by adding <xref:System.Web.UI.WebControls.DataControlField> controls.</span></span> <span data-ttu-id="00723-165">ただし、設定した場合、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ、自動更新、挿入、および削除操作を有効に いることを意味します。</span><span class="sxs-lookup"><span data-stu-id="00723-165">However, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, it means that automatic update, insert, and delete operations cannot be enabled.</span></span> <span data-ttu-id="00723-166">使用可能なプロパティのサブセットを操作するときに、データの自動変更を有効にする場合は設定しないでください、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-166">If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-167">代わりに、データ オブジェクトからすべてのプロパティを取得し、管理、データ バインド コントロールを使用して表示します。</span><span class="sxs-lookup"><span data-stu-id="00723-167">Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</span></span> <span data-ttu-id="00723-168">使用すると、<xref:System.Web.UI.WebControls.DetailsView>コントロールまたは<xref:System.Web.UI.WebControls.GridView>コントロールを設定する必要も、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>または<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティ`false`します。</span><span class="sxs-lookup"><span data-stu-id="00723-168">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> properties to `false`.</span></span> <span data-ttu-id="00723-169">これは、データ バインド コントロールが編集、およびデータを削除するためのボタンを自動的に追加することを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="00723-169">This prevents the data-bound control from automatically including buttons for editing and deleting the data.</span></span> <span data-ttu-id="00723-170">データ バインド コントロールに表示されていない任意の値は、ビュー ステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="00723-170">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="00723-171">渡される変更されていないデータ ソースにデータ更新が実行されるとします。</span><span class="sxs-lookup"><span data-stu-id="00723-171">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
<a name="evaluating_value_at_run_time"></a>   
## <a name="evaluating-values-at-run-time"></a><span data-ttu-id="00723-172">実行時に値を評価します。</span><span class="sxs-lookup"><span data-stu-id="00723-172">Evaluating Values at Run Time</span></span>  
 <span data-ttu-id="00723-173">フィルター処理、並べ替え、実行時に値を評価するがある場合または値をグループ化するパラメーターを追加することができる場合、 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>、 <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>、 <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>、または<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-173">If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>, <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>, or <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collections.</span></span>  
  
 <span data-ttu-id="00723-174">既定値を指定する場合は、パラメーターを追加することができます、<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-174">If you want to specify default values, you can add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="00723-175">処理することができますを確認またはデータの操作が実行される前に、値を変更する場合、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>、 <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>、または<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-175">If you want to examine or modify values before the data operation is executed, you can handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserting>, <xref:System.Web.UI.WebControls.LinqDataSource.Selecting>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updating> events.</span></span> <span data-ttu-id="00723-176">データ操作をキャンセルするには、ユーザー入力に基づいてデータ クラスのプロパティを設定するときに発生した検証エラーを確認したりこれらのイベントを処理することもできます。</span><span class="sxs-lookup"><span data-stu-id="00723-176">You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</span></span>  
  
 <span data-ttu-id="00723-177">データ操作が完了した後は、値を調べ、処理、 <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>、 <xref:System.Web.UI.WebControls.LinqDataSource.Selected>、または<xref:System.Web.UI.WebControls.LinqDataSource.Updated>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-177">To examine values after the data operation has finished, handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted>, <xref:System.Web.UI.WebControls.LinqDataSource.Inserted>, <xref:System.Web.UI.WebControls.LinqDataSource.Selected>, or <xref:System.Web.UI.WebControls.LinqDataSource.Updated> events.</span></span>  
  
<a name="working_with_stored_procedures"></a>   
## <a name="working-with-stored-procedures"></a><span data-ttu-id="00723-178">ストアド プロシージャの使用</span><span class="sxs-lookup"><span data-stu-id="00723-178">Working with Stored Procedures</span></span>  
 <span data-ttu-id="00723-179">使用する、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールのイベント ハンドラーを作成して、ストアド プロシージャからデータを取得する、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-179">You use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from a stored procedure by creating an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="00723-180">イベント ハンドラー、ストアド プロシージャを表すデータ コンテキスト クラスでメソッドを呼び出し、設定した結果、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-180">In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object.</span></span> <span data-ttu-id="00723-181">自動更新を有効にする、insert、およびデータの削除操作する場合は、メソッドから返される型がで指定されている型を一致する必要があります、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-181">If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="00723-182">データ コンテキストのメソッドを作成する方法の詳細については、次を参照してください。[方法。ストアド プロシージャや関数にマップされる DataContext メソッドを作成する (O/R デザイナー)](https://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</span><span class="sxs-lookup"><span data-stu-id="00723-182">For more information about creating data context methods, see [How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)](https://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a).</span></span>  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="00723-183">宣言構文</span><span class="sxs-lookup"><span data-stu-id="00723-183">Declarative Syntax</span></span>  
  
```  
<asp:LinqDataSource  
    AutoGenerateOrderByClause="True|False"  
    AutoGenerateWhereClause="True|False"  
    AutoPage="True|False"  
    AutoSort="True|False"  
    ContextTypeName="string"  
    EnableDelete="True|False"  
    EnableInsert="True|False"  
    EnableTheming="True|False"  
    EnableUpdate="True|False"  
    EnableViewState="True|False"  
    GroupBy="string"  
    ID="string"  
    OnContextCreated="ContextCreated event handler"  
    OnContextCreating="ContextCreating event handler"  
    OnContextDisposing="ContextDisposing event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDeleted="Deleted event handler"  
    OnDeleting="Deleting event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnInserted="Inserted event handler"  
    OnInserting="Inserting event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnSelected="Selected event handler"  
    OnSelecting="Selecting event handler"  
    OnUnload="Unload event handler"  
    OnUpdated="Updated event handler"  
    OnUpdating="Updating event handler"  
    OrderBy="string"  
    runat="server"  
    Select="string"  
    SkinID="string"  
    StoreOriginalValuesInViewState="True|False"  
    TableName="string"  
    Visible="True|False"  
    Where="string"  
>  
        <GroupByParameters />  
        <InsertParameters />  
        <OrderByParameters />  
        <SelectParameters />  
        <WhereParameters />  
</asp:LinqDataSource>  
```  
  
   
  
## Examples  
 <span data-ttu-id="00723-184">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>という名前のエンティティ クラスからデータを取得するコントロール`Products`します。</span><span class="sxs-lookup"><span data-stu-id="00723-184">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that retrieves data from an entity class named `Products`.</span></span> <span data-ttu-id="00723-185">使用してエンティティ クラスが生成される可能性がありますが、[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]または SqlMetal.exe ユーティリティ。</span><span class="sxs-lookup"><span data-stu-id="00723-185">The entity class could have been generated by using the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility.</span></span> <span data-ttu-id="00723-186"><xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>で値があるレコードのみを返すプロパティを設定、 `Price` 50 を超えるプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-186">The <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is set to return only records that have a value in the `Price` property greater than 50.</span></span> <span data-ttu-id="00723-187">A<xref:System.Web.UI.WebControls.GridView>コントロールにバインドする、<xref:System.Web.UI.WebControls.LinqDataSource>データを表示するコントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-187">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="00723-188">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを更新、削除、およびデータ ソースのレコードを挿入することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-188">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that enables users to update, delete, and insert records in the data source.</span></span> <span data-ttu-id="00723-189">A<xref:System.Web.UI.WebControls.DetailsView>コントロールにバインドする、<xref:System.Web.UI.WebControls.LinqDataSource>制御し、表示され、データを変更することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-189">A <xref:System.Web.UI.WebControls.DetailsView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control and enables users to see and modify the data.</span></span> <span data-ttu-id="00723-190">選択、更新、削除、またはレコードを挿入するために SQL コマンドが必要ないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="00723-190">Notice that no SQL commands are required in order to select, update, delete, or insert the records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 <span data-ttu-id="00723-191">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>Web ページ内の値に基づいてイベントをデータ オブジェクトを設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-191">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event that sets the data object based on a value in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="00723-192">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを 2 つの列でグループを構成します。</span><span class="sxs-lookup"><span data-stu-id="00723-192">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="00723-193">`Key`プロパティを 2 つのプロパティを持つオブジェクトを参照して`ProductCategory`と`Color`します。</span><span class="sxs-lookup"><span data-stu-id="00723-193">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="00723-194">によって表されるオブジェクト`It`(エイリアス) は名前が変更されましたが、`Products`します。</span><span class="sxs-lookup"><span data-stu-id="00723-194">The object represented by `It` is renamed (aliased) to `Products`.</span></span> <span data-ttu-id="00723-195">名前が変更された`Products`オブジェクトには、グループ内の個々 のレコードのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-195">The renamed `Products` object contains a collection of the individual records in a grouping.</span></span> <span data-ttu-id="00723-196">各インスタンスにはからのすべての列が含まれて、`Products`テーブル。</span><span class="sxs-lookup"><span data-stu-id="00723-196">Each instance will contain all the columns from the `Products` table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="00723-197">次の例では 2 つ<xref:System.Web.UI.WebControls.ListView>からデータを表示するコントロール、<xref:System.Web.UI.WebControls.LinqDataSource>前の例で制御します。</span><span class="sxs-lookup"><span data-stu-id="00723-197">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls that display the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="00723-198">1 つ<xref:System.Web.UI.WebControls.ListView>グループ化されたデータとその他のコントロールを表示します<xref:System.Web.UI.WebControls.ListView>コントロールがそのグループに属している製品の個別の名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="00723-198">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data, and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="00723-199">入れ子になったデータ バインド コントロールの<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>プロパティに設定されて`Products`のエイリアスである、`It`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-199">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
    </remarks>
    <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="00723-200">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="00723-200">LINQ to SQL</span></span></related>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public LinqDataSource ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; LinqDataSource();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-201"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="00723-201">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateOrderByClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateOrderByClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateOrderByClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateOrderByClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateOrderByClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateOrderByClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-202"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールが <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> コレクション内の値に基づいて Order By 句を動的に作成するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-202">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates an Order By clause based on values in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /> collection.</span></span></summary>
        <value><span data-ttu-id="00723-203"><see langword="true" /> 場合、<see cref="T:System.Web.UI.WebControls.LinqDataSource" />コントロールが Order By 句を作成します。 そうしないと、<see langword="false" />します。</span><span class="sxs-lookup"><span data-stu-id="00723-203"><see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control creates the Order By clause; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-204">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-204">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-205">設定すると、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>プロパティを`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール内の値に基づいている Order By 句を動的に作成する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-205">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates an Order By clause that is based on the values in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="00723-206"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、最初のパラメーターによって、データの並べ替えし、各追加のパラメーターのデータをさらに並べ替えます。</span><span class="sxs-lookup"><span data-stu-id="00723-206">The <xref:System.Web.UI.WebControls.LinqDataSource> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</span></span> <span data-ttu-id="00723-207">パラメーターが含まれている`null`または空の値は、Order By 句に含まれません。</span><span class="sxs-lookup"><span data-stu-id="00723-207">Parameters that contain `null` or an empty value are not included in the Order By clause.</span></span>  
  
 <span data-ttu-id="00723-208">設定しないでください、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティと、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>に設定されている`true`パーサーは、Order By 句を動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-208">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true`, because the parser dynamically creates the Order By clause.</span></span> <span data-ttu-id="00723-209"><xref:System.Web.UI.WebControls.LinqDataSource>場合、コントロールが例外をスロー、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>に設定されている`true`と<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティの値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="00723-209">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> is set to `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-210">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>に設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-210">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> set to `true`.</span></span> <span data-ttu-id="00723-211">パラメーターが含まれている、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>から注文プロパティに基づいてデータの名前をユーザー コレクションを選択、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-211">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoGenerateWhereClause">
      <MemberSignature Language="C#" Value="public bool AutoGenerateWhereClause { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoGenerateWhereClause" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoGenerateWhereClause As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoGenerateWhereClause { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoGenerateWhereClause : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.AutoGenerateWhereClause</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-212"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールが <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> コレクションに定義された値に基づいて Where 句を動的に作成するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-212">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control dynamically creates a Where clause based on values defined in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /> collection.</span></span></summary>
        <value><span data-ttu-id="00723-213"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールが Where 句を作成する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-213"><see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control will create the Where clause; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-214">既定値は、<see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-214">The default is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-215">設定すると、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティを`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール、場所を動的に作成する句のパラメーターから、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-215">When you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="00723-216">各パラメーターに追加する、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクションが必要です、<xref:System.Web.UI.WebControls.Parameter.Name%2A>プロパティが照会されるデータ オブジェクトのプロパティに一致する値に設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-216">Each parameter that you add to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection must have its <xref:System.Web.UI.WebControls.Parameter.Name%2A> property set to a value that matches a property in the data object that is being queried.</span></span> <span data-ttu-id="00723-217">自動的に生成された句が指定された値がであるかどうかを確認は、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション データ オブジェクトに一致するプロパティの値に等しい。</span><span class="sxs-lookup"><span data-stu-id="00723-217">The automatically generated Where clause will check whether the value specified in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection equals the value of the matching property in the data object.</span></span> <span data-ttu-id="00723-218">パラメーターが論理リンクは 1 つ以上のパラメーターを指定する場合`AND`操作。</span><span class="sxs-lookup"><span data-stu-id="00723-218">If you provide more than one parameter, the parameters are linked with a logical `AND` operation.</span></span> <span data-ttu-id="00723-219">パラメーターが含まれている`null`または空の値は、where は含まれていない句。</span><span class="sxs-lookup"><span data-stu-id="00723-219">Parameters that contain `null` or an empty value are not included in the Where clause.</span></span>  
  
 <span data-ttu-id="00723-220">自動的に生成された<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>句が等しいかどうかのみをテストでき、パラメーターでのみをリンクすることができます、`AND`操作。</span><span class="sxs-lookup"><span data-stu-id="00723-220">The automatically generated <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause can test only for equality and can link parameters only with the `AND` operation.</span></span> <span data-ttu-id="00723-221">設定しないでください、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティを`true`等しいかどうかをテストしません条件を追加する必要がある場合、またはパラメーターに関連した場合、`OR`操作。</span><span class="sxs-lookup"><span data-stu-id="00723-221">Do not set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` if you have to add a condition that does not test for equality or if you have to relate parameters with the `OR` operation.</span></span> <span data-ttu-id="00723-222">設定して、これらのタスクを行うことができます、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティを`false`内のプレース ホルダーを追加して、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>内の各パラメーターのプロパティ、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-222">You can accomplish these tasks by setting the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `false` and adding placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="00723-223"><xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティ、各プレース ホルダー名を付ける、@ 記号。</span><span class="sxs-lookup"><span data-stu-id="00723-223">In the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property, preface each placeholder name with the @ symbol.</span></span>  
  
 <span data-ttu-id="00723-224">設定しない、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティと、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティは`true`パーサーは、Where を動的に作成するため、句。</span><span class="sxs-lookup"><span data-stu-id="00723-224">You do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property when the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, because the parser dynamically creates the Where clause.</span></span> <span data-ttu-id="00723-225"><xref:System.Web.UI.WebControls.LinqDataSource>場合、コントロールが例外をスロー、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティは`true`と<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティの値が割り当てられます。</span><span class="sxs-lookup"><span data-stu-id="00723-225">The <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true` and the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is assigned values.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-226">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>に設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-226">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> set to `true`.</span></span> <span data-ttu-id="00723-227">A<xref:System.Web.UI.WebControls.GridView>コントロールにバインドする、<xref:System.Web.UI.WebControls.LinqDataSource>クエリから返されるデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="00723-227">A <xref:System.Web.UI.WebControls.GridView> control is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control to display the data that is returned from the query.</span></span> <span data-ttu-id="00723-228">A<xref:System.Web.UI.WebControls.DropDownList>コントロールが含まれるは 3 つの値に設定されます。</span><span class="sxs-lookup"><span data-stu-id="00723-228">A <xref:System.Web.UI.WebControls.DropDownList> control is included that is populated with three values.</span></span> <span data-ttu-id="00723-229">パラメーターが含まれている、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>設定名前を持つコレクション`Category,`データ オブジェクトのプロパティのいずれかに一致します。</span><span class="sxs-lookup"><span data-stu-id="00723-229">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection with the name set to `Category,` which matches one of the properties of the data object.</span></span> <span data-ttu-id="00723-230">その<xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A>の ID に設定されて、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-230">Its <xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A> property is set to the ID of the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="00723-231"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールが自動的に作成、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>からユーザーが選択した値に基づいてレコードをフィルターするプロパティ、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-231">The <xref:System.Web.UI.WebControls.LinqDataSource> control automatically creates the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to filter records based on the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span> <span data-ttu-id="00723-232">クエリのレコードを返すが`Category`プロパティから、ユーザーが選択した値に一致する、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-232">The query returns the records whose `Category` property matches the value that the user has selected from the <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default7.aspx#7)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#7](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default7.aspx#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoPage">
      <MemberSignature Language="C#" Value="public bool AutoPage { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoPage" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoPage As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoPage { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoPage : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoPage" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-233">実行時に <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールがデータ セクションでのナビゲーションをサポートするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-233">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports navigation through sections of the data at run time.</span></span></summary>
        <value><span data-ttu-id="00723-234">ユーザーがデータを閲覧できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-234"><see langword="true" /> if the user can page through the data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-235">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-235">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-236">設定、<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティを`true`でページングを有効にする、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-236">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property to `true` to enable paging in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-237">データをページにユーザーを有効にする接続へのページングのインターフェイスを提供するデータ バインド コントロールを<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-237">To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-238">ときに、<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティに設定されて`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータ バインド コントロール内の 1 つのページのための十分なレコードだけを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-238">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves only enough records for one page in the data-bound control.</span></span> <span data-ttu-id="00723-239">使用して、<xref:System.Linq.Enumerable.Skip%2A>と<xref:System.Linq.Enumerable.Take%2A>を現在のページのレコードを取得するメソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-239">It uses the <xref:System.Linq.Enumerable.Skip%2A> and <xref:System.Linq.Enumerable.Take%2A> methods to retrieve the records for the current page.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-240">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティに設定`true`と<xref:System.Web.UI.WebControls.GridView>コントロールにバインドされている、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-240">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-241"><xref:System.Web.UI.WebControls.GridView.AllowPaging%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>に設定されているコントロール`true`できるように、データ ページをユーザー インターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="00723-241">The <xref:System.Web.UI.WebControls.GridView.AllowPaging%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users page through the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AutoSort">
      <MemberSignature Language="C#" Value="public bool AutoSort { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AutoSort" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberSignature Language="VB.NET" Value="Public Property AutoSort As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AutoSort { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AutoSort : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.AutoSort" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-242">実行時に <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールがデータの並べ替えをサポートするかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-242">Gets or sets a value that indicates whether the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control supports sorting the data at run time.</span></span></summary>
        <value><span data-ttu-id="00723-243">ユーザーがデータを並べ替えられる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-243"><see langword="true" /> if the user can sort the data; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-244">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-244">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-245"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、データの並べ替えの 2 つのアプローチをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="00723-245">The <xref:System.Web.UI.WebControls.LinqDataSource> control supports two approaches for sorting data.</span></span> <span data-ttu-id="00723-246">使用することができます、<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>または実行時の並べ替えを有効にするプロパティを設定できる、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>デザイン時に並べ替えを定義するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-246">You can use the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to enable run-time sorting or you can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to define the sorting at design time.</span></span>  
  
 <span data-ttu-id="00723-247">設定、<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>プロパティを`true`で並べ替えを有効にする、<xref:System.Web.UI.WebControls.LinqDataSource>データ バインド コントロールの並べ替え式に基づいているコントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-247">Set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property to `true` to enable sorting in a <xref:System.Web.UI.WebControls.LinqDataSource> control that is based on the sort expression from a data-bound control.</span></span> <span data-ttu-id="00723-248">データ バインド コントロールは、ユーザーは、並べ替えに使用するプロパティの実行時に選択できるようにするインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="00723-248">The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</span></span>  
  
 <span data-ttu-id="00723-249">設定によってデータが返される順序をプログラムで設定できる、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティまたはプロパティの並べ替えに使用するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-249">You can programmatically set the order in which data is returned by setting the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to the property or properties used for sorting.</span></span> <span data-ttu-id="00723-250">ときに、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティがプロパティに設定し、<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>プロパティは`true`で式の後に、データ バインド コントロールの並べ替え式が適用される、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-250">When the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property is set to a property and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is `true`, the sort expression from the data-bound control is applied after the expression in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="00723-251">そのため、データの最終的な並べ替えを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-251">Therefore, this determines the final sorting of the data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-252">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>プロパティに設定`true`と<xref:System.Web.UI.WebControls.GridView>コントロールにバインドされている、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-252">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property set to `true` and a <xref:System.Web.UI.WebControls.GridView> control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-253"><xref:System.Web.UI.WebControls.GridView.AllowSorting%2A>のプロパティ、<xref:System.Web.UI.WebControls.GridView>に設定されているコントロール`true`ユーザー データを並べ替えできるようにするインターフェイスを提供します。</span><span class="sxs-lookup"><span data-stu-id="00723-253">The <xref:System.Web.UI.WebControls.GridView.AllowSorting%2A> property of the <xref:System.Web.UI.WebControls.GridView> control is set to `true` to provide the interface that lets users sort the data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; ContextCreated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ ContextCreated;" />
      <MemberSignature Language="F#" Value="member this.ContextCreated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.ContextCreated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-254">コンテキスト タイプ オブジェクトのインスタンスが作成された後に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-254">Occurs after an instance of the context type object is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-255">処理、<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated>イベント コンテキスト タイプ オブジェクトを確認またはオブジェクトの作成中に発生する例外を確認します。</span><span class="sxs-lookup"><span data-stu-id="00723-255">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated> event to examine the context type object or examine exceptions that are raised while the object is being created.</span></span> <span data-ttu-id="00723-256">コンテキスト型のオブジェクトを取得する、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>このイベントに関連付けられているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-256">You retrieve the context type object from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is associated with this event.</span></span> <span data-ttu-id="00723-257">データの操作中に発生した例外を取得する、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-257">You retrieve the exception that was raised during the data operation from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="00723-258">コンテキスト タイプ オブジェクトは、select、update、insert、および削除操作中に作成され、要求全体で再利用されます。</span><span class="sxs-lookup"><span data-stu-id="00723-258">The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</span></span>  
  
 <span data-ttu-id="00723-259">1 つの時間が、イベントが発生しない場合があります。</span><span class="sxs-lookup"><span data-stu-id="00723-259">There is one time when the event is not raised.</span></span> <span data-ttu-id="00723-260">これは、プログラムで設定すると、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティ中にオブジェクトを<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-260">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object during the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="00723-261">追加の条件がビュー状態、または内のオブジェクトに格納される元のいずれかの値がないこと、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティの実装、<xref:System.Data.Linq.ITable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="00723-261">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextCreating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; ContextCreating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextCreating As EventHandler(Of LinqDataSourceContextEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceContextEventArgs ^&gt; ^ ContextCreating;" />
      <MemberSignature Language="F#" Value="member this.ContextCreating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " Usage="member this.ContextCreating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceContextEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-262">コンテキスト タイプ オブジェクトのインスタンスが作成される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-262">Occurs before an instance of the context type object is created.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-263">既定で、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールで指定されている型のインスタンスを作成、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-263">By default, the <xref:System.Web.UI.WebControls.LinqDataSource> control creates an instance of the type that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="00723-264"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、オブジェクトのインスタンスを作成するデータ コンテキスト オブジェクトの既定のコンス トラクターを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="00723-264">The <xref:System.Web.UI.WebControls.LinqDataSource> control calls the default constructor of the data context object to create an instance of the object.</span></span> <span data-ttu-id="00723-265">既定以外のコンス トラクターを使用する必要があるかで指定されたものとは異なるオブジェクトを作成する必要が、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-265">It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span> <span data-ttu-id="00723-266">その場合は、処理する必要があります、<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>イベントを手動でデータ コンテキスト オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-266">In that case, you must handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event and manually create the data context object.</span></span>  
  
 <span data-ttu-id="00723-267">コンテキスト タイプ オブジェクトは、select、update、insert、および削除操作中に作成されます。</span><span class="sxs-lookup"><span data-stu-id="00723-267">The context type object is created during select, update, insert, and delete operations.</span></span>  
  
 <span data-ttu-id="00723-268">1 つの時間が、イベントが発生しない場合があります。</span><span class="sxs-lookup"><span data-stu-id="00723-268">There is one time when the event is not raised.</span></span> <span data-ttu-id="00723-269">これは、プログラムで設定すると、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティのイベント ハンドラー内のオブジェクトを<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-269">This is when you programmatically set the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property to an object in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="00723-270">追加の条件がビュー状態、または内のオブジェクトに格納される元のいずれかの値がないこと、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A>プロパティの実装、<xref:System.Data.Linq.ITable>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="00723-270">An additional condition is that either the original values do not have to be stored in view state, or the object in the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A> property implements the <xref:System.Data.Linq.ITable> interface.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-271">次の例では、中に既定以外のコンス トラクターを使用して、データ コンテキスト オブジェクトを作成する方法を示しています、<xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-271">The following example shows how to create the data context object by using a non-default constructor during the <xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating> event.</span></span> <span data-ttu-id="00723-272">コードをオブジェクトに割り当てます、<xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-272">The code assigns the object to the <xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A> property.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.ContextCreating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.ContextCreating/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextDisposing">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; ContextDisposing" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ContextDisposing As EventHandler(Of LinqDataSourceDisposeEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDisposeEventArgs ^&gt; ^ ContextDisposing;" />
      <MemberSignature Language="F#" Value="member this.ContextDisposing : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " Usage="member this.ContextDisposing : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDisposeEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-273">コンテキスト タイプ オブジェクトが破棄される前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-273">Occurs before disposing the context type object.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-274">処理する、<xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing>イベントを手動でオブジェクトを破棄する場合、またはを実行するクリーンアップ、オブジェクトが破棄される前に、オブジェクトに固有であります。</span><span class="sxs-lookup"><span data-stu-id="00723-274">You handle the <xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ContextTypeName">
      <MemberSignature Language="C#" Value="public override string ContextTypeName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ContextTypeName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Property ContextTypeName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ ContextTypeName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ContextTypeName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.ContextTypeName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-275">取得するデータが値として格納されているプロパティを含む型の名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-275">Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</span></span></summary>
        <value><span data-ttu-id="00723-276">取得するデータが含まれているクラスの名前。</span><span class="sxs-lookup"><span data-stu-id="00723-276">The name of the class to retrieve data from.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-277">使用すると、<xref:System.Web.UI.WebControls.LinqDataSource>メモリ内のデータ コレクションまたはデータベースからデータを取得するコントロールを 2 つのプロパティを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-277">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</span></span> <span data-ttu-id="00723-278">最初は、データ ソースを表すデータ コンテキスト クラスです。</span><span class="sxs-lookup"><span data-stu-id="00723-278">The first is a data context class that represents the data source.</span></span> <span data-ttu-id="00723-279">2 つ目は、データを含むデータ コンテキスト クラスのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="00723-279">The second is a property in the data context class that contains the data.</span></span> <span data-ttu-id="00723-280">設定する、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティ データ コンテキスト クラスの名前を設定、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティをデータが含まれるデータのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-280">You set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the data context class and you set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the data collection that contains the data.</span></span>  
  
 <span data-ttu-id="00723-281">たとえば、データベースからデータを取得すると設定、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティをデータベースを表すクラスの名前にします。</span><span class="sxs-lookup"><span data-stu-id="00723-281">For example, when you retrieve data from a database, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that represents the database.</span></span> <span data-ttu-id="00723-282">設定しても、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティをデータベース内のテーブルを表すプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-282">Also set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that represents the table in the database.</span></span> <span data-ttu-id="00723-283">データベースからクラスを生成するには、使用、[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]またはそれらのクラスを自動的に生成する SqlMetal.exe ユーティリティ。</span><span class="sxs-lookup"><span data-stu-id="00723-283">To generate classes from a database, use the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)] or the SqlMetal.exe utility to automatically generate those classes.</span></span>  
  
 <span data-ttu-id="00723-284">配列など、メモリ内のデータ コレクションからデータを取得する場合、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティ配列プロパティが含まれるクラスの名前にします。</span><span class="sxs-lookup"><span data-stu-id="00723-284">When you retrieve data from an in-memory data collection such as an array, set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to the name of the class that contains the array property.</span></span> <span data-ttu-id="00723-285">設定し、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティを配列を取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-285">Then set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the property that gets the array.</span></span>  
  
 <span data-ttu-id="00723-286">自動更新を有効にするのには、挿入、または削除操作を<xref:System.Web.UI.WebControls.LinqDataSource>コントロールに割り当てられているクラス、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.DataContext>します。</span><span class="sxs-lookup"><span data-stu-id="00723-286">To enable automatic update, insert, or delete operations through the <xref:System.Web.UI.WebControls.LinqDataSource> control, the class assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext>.</span></span> <span data-ttu-id="00723-287">さらに、プロパティに割り当てられている、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.Table%601>します。</span><span class="sxs-lookup"><span data-stu-id="00723-287">In addition, the property assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span> <span data-ttu-id="00723-288">クラスの任意の型の名前を割り当てることができる場合、いない必要がありますの自動更新を有効にする insert、または削除操作、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-288">If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property.</span></span>  
  
 <span data-ttu-id="00723-289">クラスのインスタンスからデータを選択する方法については、次を参照してください。、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-289">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-290">次の例は、設定する方法を示します、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティを文字列の配列を含むクラスにします。</span><span class="sxs-lookup"><span data-stu-id="00723-290">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property to a class that contains an array of strings.</span></span> <span data-ttu-id="00723-291">クラスにプロパティを設定する方法も示します (によって生成された、 [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) データベースを表します。</span><span class="sxs-lookup"><span data-stu-id="00723-291">It also shows how to set the property to a class (generated by the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]) that represents a database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="00723-292">という名前のクラス`ExampleDataContext`表しますデータベース テーブルが表示されないことこの例では。</span><span class="sxs-lookup"><span data-stu-id="00723-292">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="00723-293">この例を動作させるには、名前付き Example.dbml テーブルをドラッグして、上にムービーをという名前の LINQ に SQL クラスを追加することでこのクラスを作成する必要があります、[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="00723-293">For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="00723-294">という名前のクラス`ExampleDataContext`という名前のプロパティで`Movies`が生成されます。</span><span class="sxs-lookup"><span data-stu-id="00723-294">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="00723-295">次の例は、という名前のクラスを示しています。`MovieLibrary`内で参照される、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-295">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="00723-296">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="00723-296">LINQ to SQL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CreateQueryableView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.QueryableDataSourceView CreateQueryableView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateQueryableView () As QueryableDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::QueryableDataSourceView ^ CreateQueryableView();" />
      <MemberSignature Language="F#" Value="override this.CreateQueryableView : unit -&gt; System.Web.UI.WebControls.QueryableDataSourceView" Usage="linqDataSource.CreateQueryableView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.QueryableDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-297">クエリ可能なビューを返します。</span><span class="sxs-lookup"><span data-stu-id="00723-297">Returns a queryable view.</span></span></summary>
        <returns><span data-ttu-id="00723-298">クエリ可能なビュー。</span><span class="sxs-lookup"><span data-stu-id="00723-298">A queryable view.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateView">
      <MemberSignature Language="C#" Value="protected virtual System.Web.UI.WebControls.LinqDataSourceView CreateView ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Web.UI.WebControls.LinqDataSourceView CreateView() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.CreateView" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function CreateView () As LinqDataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual System::Web::UI::WebControls::LinqDataSourceView ^ CreateView();" />
      <MemberSignature Language="F#" Value="abstract member CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView&#xA;override this.CreateView : unit -&gt; System.Web.UI.WebControls.LinqDataSourceView" Usage="linqDataSource.CreateView " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.LinqDataSourceView</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-299">このコントロールに関連付けられている <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> クラスの新しいインスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-299">Creates a new instance of the <see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /> class that is associated with this control.</span></span></summary>
        <returns><span data-ttu-id="00723-300">データ バインド コントロールのインターフェイスとして動作するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-300">An object that acts as the interface for data-bound controls.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-301">カスタム ビューを提供するには、派生クラスでこのメソッドをオーバーライドできます。</span><span class="sxs-lookup"><span data-stu-id="00723-301">To provide a custom view, you can override this method in a derived class.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Delete">
      <MemberSignature Language="C#" Value="public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Delete(class System.Collections.IDictionary keys, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Delete (keys As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Delete(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Delete : System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Delete (keys, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="00723-302">削除するレコードの行のキー値。</span><span class="sxs-lookup"><span data-stu-id="00723-302">The row key values for the records to be deleted.</span></span></param>
        <param name="oldValues"><span data-ttu-id="00723-303">データの競合を検出するために評価される行の値。</span><span class="sxs-lookup"><span data-stu-id="00723-303">The row values that are evaluated to detect data conflicts.</span></span></param>
        <summary><span data-ttu-id="00723-304">削除の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-304">Performs a delete operation.</span></span></summary>
        <returns><span data-ttu-id="00723-305">削除操作によって影響を受けたレコードの数。</span><span class="sxs-lookup"><span data-stu-id="00723-305">The number of records affected by the delete operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-306">通常を呼び出す必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>コードからメソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-306">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method from your code.</span></span> <span data-ttu-id="00723-307">使用すると、<xref:System.Web.UI.WebControls.LinqDataSource>データ バインド コントロールをデータ バインド コントロールでは自動的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>メソッド、ユーザーがレコードを削除する操作。</span><span class="sxs-lookup"><span data-stu-id="00723-307">When you use a <xref:System.Web.UI.WebControls.LinqDataSource> control with a data-bound control, the data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when the user takes action to delete a record.</span></span> <span data-ttu-id="00723-308">明示的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>メソッド データを削除するための独自のプロセスを作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="00723-308">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to create your own process for deleting data.</span></span> <span data-ttu-id="00723-309">たとえば、呼び出すことができます、<xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A>方法レコードを削除する場合、データ バインド コントロールの外部イベントに基づいています。</span><span class="sxs-lookup"><span data-stu-id="00723-309">For example, you can call the <xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A> method when you want to delete a record based on an event outside the data-bound control.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Deleted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Deleted;" />
      <MemberSignature Language="F#" Value="member this.Deleted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Deleted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-310">削除操作が終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-310">Occurs when a delete operation has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-311">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>イベント、削除操作から例外をキャッチするか、操作が完了した後、出力パラメーターを確認します。</span><span class="sxs-lookup"><span data-stu-id="00723-311">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</span></span> <span data-ttu-id="00723-312">出力パラメーターを取得することができます、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-312">You can retrieve the output parameters from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DeleteParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection DeleteParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property DeleteParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ DeleteParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.DeleteParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.DeleteParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-313">このプロパティは、<see cref="T:System.Web.UI.WebControls.LinqDataSource" /> クラスでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="00723-313">This property is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span></span></summary>
        <value><span data-ttu-id="00723-314">パラメーターのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-314">A collection of parameters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Deleting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; Deleting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Deleting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Deleting As EventHandler(Of LinqDataSourceDeleteEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceDeleteEventArgs ^&gt; ^ Deleting;" />
      <MemberSignature Language="F#" Value="member this.Deleting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " Usage="member this.Deleting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-315">削除操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-315">Occurs before a delete operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-316">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベントを削除する、削除操作で、前に値を変更する、または削除操作をキャンセルするデータ クラスからのデータ検証エラーを調査するオブジェクトを検証します。</span><span class="sxs-lookup"><span data-stu-id="00723-316">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</span></span> <span data-ttu-id="00723-317"><xref:System.Web.UI.WebControls.LinqDataSource>制御からパスを<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>オブジェクトのイベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-317">The <xref:System.Web.UI.WebControls.LinqDataSource> control passes a <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object to event handlers for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="00723-318"><xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>オブジェクトが削除され、削除操作をキャンセルすることができるデータが含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-318">The <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains the data that will be deleted and enables you to cancel the delete operation.</span></span> <span data-ttu-id="00723-319">場合は、データ クラスがスローされます、 <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> 、例外、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs>オブジェクトにはで、その例外が含まれています、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-319">If the data class throws a <xref:System.Web.UI.WebControls.LinqDataSourceValidationException> exception, the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs> object contains that exception in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A> property.</span></span>  
  
 <span data-ttu-id="00723-320">イベント ハンドラーで例外がスローされます、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント、そのイベント ハンドラーで例外を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-320">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="00723-321">イベント ハンドラーに例外を渡すことはできません、<xref:System.Web.UI.WebControls.LinqDataSource.Deleted>イベント (を通じて、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="00723-321">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="00723-322"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティには、後にスローされる例外のみが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-322">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-323">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Deleting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-323">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Deleting> event.</span></span> <span data-ttu-id="00723-324">コード内のプロパティに基づいて、削除操作のキャンセル、<xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A>プロパティと、Web ページからの値。</span><span class="sxs-lookup"><span data-stu-id="00723-324">The code cancels the delete operation based on a property in the <xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A> property and a value from the Web page.</span></span> <span data-ttu-id="00723-325">例では、ときに、`OnSale`プロパティに設定されて`true`、ユーザーを選択する必要があります、<xref:System.Web.UI.WebControls.CheckBox>コントロールをレコードを削除することを確認します。</span><span class="sxs-lookup"><span data-stu-id="00723-325">In the example, when the `OnSale` property is set to `true`, the user must select a <xref:System.Web.UI.WebControls.CheckBox> control to confirm that a record should be deleted.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Deleting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Deleting/vb/Default.aspx.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="EnableDelete">
      <MemberSignature Language="C#" Value="public bool EnableDelete { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableDelete" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableDelete As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableDelete { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableDelete : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableDelete" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableDelete</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-326"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールを通じてデータ レコードを削除できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-326">Gets or sets a value that indicates whether data records can be deleted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="00723-327">削除の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-327"><see langword="true" /> if automatic delete operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-328">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-328">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-329">設定、<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>プロパティを`true`を通じてデータ レコードを削除するユーザーを有効にする場合、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-329">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> property to `true` when you want to enable users to delete a data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-330">ときに<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>は`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータを削除するコマンドを自動的に作成する LINQ to SQL を使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-330">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to delete the data.</span></span> <span data-ttu-id="00723-331">ユーザーなどを削除するレコードを選択できるようにするインターフェイスを含める必要があります、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-331">You must include an interface that lets users select a record to delete, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="00723-332"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは自動削除の操作をサポートしていませんときに、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティまたは<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-332">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic delete operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="00723-333">その場合は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、削除操作を試みた場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="00723-333">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if a delete operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-334">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>を持つコントロールを<xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-334">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A> set to `true`.</span></span> <span data-ttu-id="00723-335">A<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データが表示され、ユーザーがデータ レコードを削除できるボタンを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-335">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users delete a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="00723-336">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="00723-336">LINQ to SQL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableInsert">
      <MemberSignature Language="C#" Value="public bool EnableInsert { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableInsert" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableInsert As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableInsert { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableInsert : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableInsert" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableInsert</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-337"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールを通じてデータ レコードを挿入できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-337">Gets or sets a value that indicates whether data records can be inserted through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="00723-338">挿入の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-338"><see langword="true" /> if automatic insert operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-339">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-339">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-340">設定、<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>プロパティを`true`を介して新しいデータ レコードを挿入するユーザーを有効にする場合、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-340">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> property to `true` when you want to enable users to insert a new data record through the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-341">ときに<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>は`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールでは、LINQ to SQL を使用して、自動的にデータを挿入するコマンドを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-341">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to insert the data.</span></span> <span data-ttu-id="00723-342">ユーザーなど、新しいレコードを挿入できるようにするインターフェイスを含める必要があります、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-342">You must include an interface that lets users insert a new record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="00723-343"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールが自動挿入操作をサポートしないときに、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティまたは<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-343">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic insert operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="00723-344">その場合は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、挿入操作を試みた場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="00723-344">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an insert operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-345">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>を持つコントロールを<xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-345">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A> set to `true`.</span></span> <span data-ttu-id="00723-346">A<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データが表示され、挿入モードのユーザーが作成および新しいレコードを保存するコントロールを切り替えるボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="00723-346">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="00723-347">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="00723-347">LINQ to SQL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="EnableObjectTracking">
      <MemberSignature Language="C#" Value="public bool EnableObjectTracking { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableObjectTracking" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableObjectTracking As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableObjectTracking { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableObjectTracking : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-348">データ コンテキスト オブジェクトの変更履歴を記録するかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-348">Gets or sets the value that indicates whether changes to the data context object are tracked.</span></span></summary>
        <value><span data-ttu-id="00723-349">データ コンテキスト オブジェクトの変更履歴を記録する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-349"><see langword="true" /> if the data context object is tracked for changes; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-350">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-350">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-351"><xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A>プロパティは、SQL に LINQ データ コンテキスト オブジェクトからデータを選択するときにのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-351">The <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property is only used when selecting data from a LINQ To SQL data context object.</span></span>  
  
 <span data-ttu-id="00723-352">読み取り専用データをやり取りするときに、設定、<xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A>プロパティを`false`データが変更されているかどうかを決定するキャッシュされないために、パフォーマンスが向上します。</span><span class="sxs-lookup"><span data-stu-id="00723-352">When you are interacting with read-only data, setting the <xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A> property to `false` improves performance because the data is not cached to determine if it has changed.</span></span> <span data-ttu-id="00723-353">ただし、クエリの遅延実行も無効にします。</span><span class="sxs-lookup"><span data-stu-id="00723-353">However, it also disables deferred query execution.</span></span> <span data-ttu-id="00723-354">このプロパティに設定する必要があります`true`クエリの遅延実行を使用する場合。</span><span class="sxs-lookup"><span data-stu-id="00723-354">This property must be set to `true` if you want to use deferred query execution.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Data.Linq.DataContext.ObjectTrackingEnabled" />
      </Docs>
    </Member>
    <Member MemberName="EnableUpdate">
      <MemberSignature Language="C#" Value="public bool EnableUpdate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool EnableUpdate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberSignature Language="VB.NET" Value="Public Property EnableUpdate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool EnableUpdate { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.EnableUpdate : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.EnableUpdate" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EnableUpdate</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-355"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールを通じてデータ レコードを更新できるかどうかを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-355">Gets or sets a value that indicates whether data records can be updated through the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
        <value><span data-ttu-id="00723-356">更新の自動実行が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-356"><see langword="true" /> if automatic update operations are enabled; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-357">既定値は <see langword="false" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-357">The default value is <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-358">設定、<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>プロパティを`true`を使用してデータ レコードを更新するユーザーを有効にする場合、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-358">Set the <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> property to `true` when you want to enable users to update a data record by using the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span> <span data-ttu-id="00723-359">ときに<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>は`true`、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールでは、LINQ to SQL を使用して、自動的にデータを更新するコマンドを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-359">When <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> is `true`, the <xref:System.Web.UI.WebControls.LinqDataSource> control uses LINQ to SQL to automatically create the command to update the data.</span></span> <span data-ttu-id="00723-360">ユーザーなど、レコードを更新できるようにするインターフェイスを含める必要があります、<xref:System.Web.UI.WebControls.DetailsView>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-360">You must include an interface that lets users update a record, such as a <xref:System.Web.UI.WebControls.DetailsView> control.</span></span>  
  
 <span data-ttu-id="00723-361"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、自動更新の操作をサポートしないときに、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティまたは<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-361">The <xref:System.Web.UI.WebControls.LinqDataSource> control does not support automatic update operations when the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property or the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is set.</span></span> <span data-ttu-id="00723-362">その場合は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、更新操作を試みた場合に例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="00723-362">In that case, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception if an update operation is tried.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-363">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>を持つコントロールを<xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A>設定`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-363">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that has <xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A> set to `true`.</span></span> <span data-ttu-id="00723-364">A<xref:System.Web.UI.WebControls.DetailsView>コントロールは、データが表示され、ユーザーがデータ レコードを更新できるボタンを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-364">A <xref:System.Web.UI.WebControls.DetailsView> control displays the data and creates a button that lets users update a data record.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetView">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.DataSourceView GetView (string viewName);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.DataSourceView GetView(string viewName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetView(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetView (viewName As String) As DataSourceView" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::DataSourceView ^ GetView(System::String ^ viewName);" />
      <MemberSignature Language="F#" Value="override this.GetView : string -&gt; System.Web.UI.DataSourceView" Usage="linqDataSource.GetView viewName" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetView(System.String)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.DataSourceView</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="viewName" Type="System.String" Index="0" FrameworkAlternate="netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="viewName"><span data-ttu-id="00723-365">取得するビューの名前。"DefaultView" である必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-365">The name of the view to retrieve, which must be "DefaultView".</span></span></param>
        <summary><span data-ttu-id="00723-366"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> オブジェクトに関連付けられたデータ ソース ビューを返します。</span><span class="sxs-lookup"><span data-stu-id="00723-366">Returns the data source view that is associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</span></span></summary>
        <returns><span data-ttu-id="00723-367"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> オブジェクトに関連付けられたデータ ソース ビュー。</span><span class="sxs-lookup"><span data-stu-id="00723-367">The data source view that is associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="00723-368"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、1 つのデータ ソース ビューをサポートしています。</span><span class="sxs-lookup"><span data-stu-id="00723-368">The <xref:System.Web.UI.WebControls.LinqDataSource> control supports only one data source view.</span></span> <span data-ttu-id="00723-369"><xref:System.Web.UI.WebControls.LinqDataSourceView>オブジェクトが"DefaultView"の既定の名前。</span><span class="sxs-lookup"><span data-stu-id="00723-369">The <xref:System.Web.UI.WebControls.LinqDataSourceView> object has a default name of "DefaultView".</span></span> <span data-ttu-id="00723-370"><xref:System.Web.UI.WebControls.LinqDataSourceView>オブジェクトのデータ ソース コントロールの機能を定義、基になるデータベースからデータを取得、および並べ替え、挿入、削除、および更新プログラムなどの操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-370">The <xref:System.Web.UI.WebControls.LinqDataSourceView> object defines the data source control's capabilities, retrieves data from the underlying database, and performs operations such as sort, insert, delete, and update.</span></span>

]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><p><span data-ttu-id="00723-371">viewName は null (Visual Basic では Nothing)、または "DefaultView" 以外の何か。</span><span class="sxs-lookup"><span data-stu-id="00723-371">viewName is null (Nothing in Visual Basic) or something other than "DefaultView".</span></span></p></exception>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb547113(v=vs.100)"><span data-ttu-id="00723-372">LinqDataSource Web サーバー コントロールの概要</span><span class="sxs-lookup"><span data-stu-id="00723-372">LinqDataSource Web Server Control Overview</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178359(v=vs.110)"><span data-ttu-id="00723-373">ASP.NET データ アクセスの概要</span><span class="sxs-lookup"><span data-stu-id="00723-373">ASP.NET Data Access Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetViewNames">
      <MemberSignature Language="C#" Value="protected override System.Collections.ICollection GetViewNames ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.ICollection GetViewNames() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.GetViewNames" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetViewNames () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::ICollection ^ GetViewNames();" />
      <MemberSignature Language="F#" Value="override this.GetViewNames : unit -&gt; System.Collections.ICollection" Usage="linqDataSource.GetViewNames " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.UI.IDataSource.GetViewNames</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-374"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールに関連付けられたビュー オブジェクトのリストを表す名前のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="00723-374">Returns a collection of names that represents the list of view objects that are associated with the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="00723-375">"DefaultView" という名前を含む 1 つの要素があるコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-375">A collection with one element that contains the name "DefaultView".</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="00723-376"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールの名前は、基になるデータの 1 つのビューをサポートしている`DefaultView`します。</span><span class="sxs-lookup"><span data-stu-id="00723-376">The <xref:System.Web.UI.WebControls.LinqDataSource> control supports only one view on its underlying data, which is named `DefaultView`.</span></span> <span data-ttu-id="00723-377">`GetViewNames`メソッドは、そのためこの表示名を含む 1 つだけの要素のコレクションを返します。</span><span class="sxs-lookup"><span data-stu-id="00723-377">The `GetViewNames` method therefore returns a collection with only one element, which contains this view name.</span></span>

]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb547113(v=vs.100)"><span data-ttu-id="00723-378">LinqDataSource Web サーバー コントロールの概要</span><span class="sxs-lookup"><span data-stu-id="00723-378">LinqDataSource Web Server Control Overview</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178359(v=vs.110)"><span data-ttu-id="00723-379">ASP.NET データ アクセスの概要</span><span class="sxs-lookup"><span data-stu-id="00723-379">ASP.NET Data Access Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GroupBy">
      <MemberSignature Language="C#" Value="public string GroupBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string GroupBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberSignature Language="VB.NET" Value="Public Property GroupBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ GroupBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.GroupBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.GroupBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-380">取得したデータのグループ化に使用するプロパティを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-380">Gets or sets a value that specifies which properties are used for grouping the retrieved data.</span></span></summary>
        <value><span data-ttu-id="00723-381">Group By 句の作成に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-381">A string that is used to create the Group By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-382">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティに同じ値を持つデータ レコードを統合するために使用するプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-382">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to specify which properties are used for consolidating data records that have the same values.</span></span> <span data-ttu-id="00723-383">たとえば、設定した場合、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを`Name`が同じクエリ内のすべてのレコード`Name`プロパティの値は 1 つの統合されたレコードとして返されます。</span><span class="sxs-lookup"><span data-stu-id="00723-383">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `Name`, all the records in the query that have the same `Name` property value are returned as a single consolidated record.</span></span>  
  
 <span data-ttu-id="00723-384">1 つ以上のプロパティを割り当てることができます、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティ内のすべてのプロパティを囲むことで、`new`関数とコンマを使用して各プロパティを分離することです。</span><span class="sxs-lookup"><span data-stu-id="00723-384">You can assign more than one property to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property by enclosing all the properties in the `new` function and separating each property by using a comma.</span></span> <span data-ttu-id="00723-385">など、プロパティでグループ化する`Name`し`Category`、設定、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを`new(Name, Category)`します。</span><span class="sxs-lookup"><span data-stu-id="00723-385">For example, to group by the properties `Name` and then `Category`, set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to `new(Name, Category)`.</span></span>  
  
 <span data-ttu-id="00723-386">という名前の生成されたプロパティによってグループ化に使用されるプロパティの値が返されます`Key`します。</span><span class="sxs-lookup"><span data-stu-id="00723-386">The values in the property that are used for grouping are returned through a generated property named `Key`.</span></span> <span data-ttu-id="00723-387">含める、`Key`プロパティ、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティをグループ化された値を取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-387">You include the `Key` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve the grouped values.</span></span> <span data-ttu-id="00723-388">設定することができます、`Key`プロパティを使用してエイリアスを`As`キーワードが別名を使用する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="00723-388">You can set the `Key` property to an alias by using the `As` keyword, but you are not required to use an alias.</span></span> <span data-ttu-id="00723-389">たとえば、設定することがあります、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティという名前のプロパティを`Category`します。</span><span class="sxs-lookup"><span data-stu-id="00723-389">For example, you might set the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property to a property named `Category`.</span></span> <span data-ttu-id="00723-390">統合の値を取得することができます、`Category`プロパティを設定して、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを`new(Key As ProductCategory)`します。</span><span class="sxs-lookup"><span data-stu-id="00723-390">You can retrieve the consolidated values from the `Category` property by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Key As ProductCategory)`.</span></span>  
  
 <span data-ttu-id="00723-391">グループ内の個々 のレコードを含めることによってアクセスできる、`It`プロパティ、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-391">You can access the individual records in a grouping by including the `It` property in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-392">`It`プロパティにはでグループ化されたプロパティの値を持つレコードのコレクションが含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-392">The `It` property contains a collection of records that share a value in the grouped property.</span></span> <span data-ttu-id="00723-393">反復処理することができます、`It`個々 のレコードを取得するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-393">You can iterate over the `It` property to retrieve the individual records.</span></span>  
  
 <span data-ttu-id="00723-394"><xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティは、集計メソッドと共によく使用されます。</span><span class="sxs-lookup"><span data-stu-id="00723-394">The <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property is often used with aggregation methods.</span></span> <span data-ttu-id="00723-395">次の集計メソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-395">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="00723-396">`Average(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-396">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-397">`Sum(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-397">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-398">`Max(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-398">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-399">`Min(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-399">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-400">`Where(` *condition* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-400">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="00723-401">`All(` *condition* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-401">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="00723-402">詳細については、次を参照してください[NIB:。LinqDataSource Web サーバー コントロールの概要](https://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)と[方法。グループと LinqDataSource コントロールを使用してデータを集計](https://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)します。</span><span class="sxs-lookup"><span data-stu-id="00723-402">For more information, see [NIB: LinqDataSource Web Server Control Overview](https://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](https://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-403">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>という名前のプロパティによって返されるデータをグループ化コントロール`Category`します。</span><span class="sxs-lookup"><span data-stu-id="00723-403">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that groups the returned data by a property named `Category`.</span></span> <span data-ttu-id="00723-404">共有の値を返し、グループ化されたレコードの平均価格を計算します。</span><span class="sxs-lookup"><span data-stu-id="00723-404">It returns the shared values and calculates the average price for the grouped records.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 <span data-ttu-id="00723-405">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールを 2 つの列でグループを構成します。</span><span class="sxs-lookup"><span data-stu-id="00723-405">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control that is configured to group by two columns.</span></span> <span data-ttu-id="00723-406">`Key`プロパティを 2 つのプロパティを持つオブジェクトを参照して`ProductCategory`と`Color`します。</span><span class="sxs-lookup"><span data-stu-id="00723-406">The `Key` property references an object that has two properties, `ProductCategory` and `Color`.</span></span> <span data-ttu-id="00723-407">によって表されるオブジェクト`It`名前が変更された`Products`します。</span><span class="sxs-lookup"><span data-stu-id="00723-407">The object represented by `It` is renamed `Products`.</span></span> <span data-ttu-id="00723-408">名前が変更された`Products`オブジェクト、グループ内の個々 のレコードのコレクションを格納して、各インスタンスには、Products テーブルからすべての列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-408">The renamed `Products` object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="00723-409">次の例では 2 つ<xref:System.Web.UI.WebControls.ListView>からデータを表示するコントロールを<xref:System.Web.UI.WebControls.LinqDataSource>前の例で制御します。</span><span class="sxs-lookup"><span data-stu-id="00723-409">The following example shows two <xref:System.Web.UI.WebControls.ListView> controls for displaying the data from the <xref:System.Web.UI.WebControls.LinqDataSource> control in the previous example.</span></span> <span data-ttu-id="00723-410">1 つ<xref:System.Web.UI.WebControls.ListView>グループ化されたデータとその他のコントロールを表示します<xref:System.Web.UI.WebControls.ListView>コントロールがそのグループに属している製品の個別の名前を表示します。</span><span class="sxs-lookup"><span data-stu-id="00723-410">One <xref:System.Web.UI.WebControls.ListView> control displays the grouped data and the other <xref:System.Web.UI.WebControls.ListView> control displays the individual names of products that belong to that group.</span></span> <span data-ttu-id="00723-411">入れ子になったデータ バインド コントロールの<xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A>プロパティに設定されて`Products`のエイリアスである、`It`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-411">The nested data-bound control's <xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A> property is set to `Products`, which is the alias for the `It` object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.GroupBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.GroupBy/vb/Default.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GroupByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection GroupByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection GroupByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property GroupByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ GroupByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.GroupByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.GroupByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-412">Group By 句の作成に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-412">Gets the collection of parameters that are used to create the Group By clause.</span></span></summary>
        <value><span data-ttu-id="00723-413">Group By 句の作成に使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-413">The parameters that are used to create the Group By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-414"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール内のパラメーターを使用して、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>実行時に、Group By 句を作成するコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-414">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to create the Group By clause at run time.</span></span> <span data-ttu-id="00723-415">使用しない通常、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>コレクション データをグループ化します。</span><span class="sxs-lookup"><span data-stu-id="00723-415">Typically you will not use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data.</span></span> <span data-ttu-id="00723-416">代わりに、使用、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-416">Instead, you can use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="00723-417">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>のみと Group By 句内の値のコレクションは、実行時に設定する必要があり、その値は、プロパティ名ではありません。</span><span class="sxs-lookup"><span data-stu-id="00723-417">You use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</span></span> <span data-ttu-id="00723-418">たとえば、使用して、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>コレクション データをグループ化するかどうかに基づいて、`LastName`データ レコードのプロパティがユーザーによって指定された値に等しい。</span><span class="sxs-lookup"><span data-stu-id="00723-418">For example, use the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection to group data based on whether the `LastName` property in the data records equals a value provided by the user.</span></span>  
  
 <span data-ttu-id="00723-419">プロパティでデータをグループ化して、そのプロパティは実行時に設定する必要はない場合、は、グループ化プロパティを定義できます、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-419">If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property.</span></span> <span data-ttu-id="00723-420">たとえば、データベース テーブルから値を返すでグループ化された`LastName`設定<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>"LastName"パラメーターを指定せずにします。</span><span class="sxs-lookup"><span data-stu-id="00723-420">For example, to return values from a database table grouped by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> to "LastName" without any parameters.</span></span> <span data-ttu-id="00723-421">プロパティによって動的にデータをグループ化する場合のイベント ハンドラーを作成、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベントをカスタマイズして、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティに応じて。</span><span class="sxs-lookup"><span data-stu-id="00723-421">If you want to dynamically group data by a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property as needed.</span></span>  
  
 <span data-ttu-id="00723-422">内のパラメーターの値としてプロパティの名前を割り当てることはできません、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-422">You cannot assign the name of a property as the value for a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection.</span></span> <span data-ttu-id="00723-423">パラメーターを追加する、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>する条件を追加する場合に、コレクション、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを実行時に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-423">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection when you want to add a condition to the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property that must be set at run time.</span></span>  
  
 <span data-ttu-id="00723-424">値を設定する、<xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A>各パラメーターに名前を割り当て、コレクションと内のプレース ホルダーを追加し、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティを名前付きパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-424">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property for that named parameter.</span></span> <span data-ttu-id="00723-425">Group By 句で使用した場合は、各パラメーター名を付ける、@ 記号。</span><span class="sxs-lookup"><span data-stu-id="00723-425">In the Group By clause, preface each parameter name with the @ symbol.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Insert">
      <MemberSignature Language="C#" Value="public int Insert (System.Collections.IDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Insert(class System.Collections.IDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Insert (values As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Insert(System::Collections::IDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.Insert : System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Insert values" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="values" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="values"><span data-ttu-id="00723-426">データ ソースに挿入する行の値。</span><span class="sxs-lookup"><span data-stu-id="00723-426">The row values to be inserted into the data source.</span></span></param>
        <summary><span data-ttu-id="00723-427">挿入の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-427">Performs an insert operation.</span></span></summary>
        <returns><span data-ttu-id="00723-428">挿入操作の影響を受けた行の数。</span><span class="sxs-lookup"><span data-stu-id="00723-428">The number of rows affected by the insert operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-429">通常を呼び出す必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>コードからメソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-429">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method from your code.</span></span> <span data-ttu-id="00723-430">データ バインド コントロールが自動的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>メソッド、ユーザーが新しいレコードを挿入する操作。</span><span class="sxs-lookup"><span data-stu-id="00723-430">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when the user takes action to insert a new record.</span></span> <span data-ttu-id="00723-431">明示的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>メソッド データを挿入するための独自のプロセスを作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="00723-431">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method when you want to create your own process for inserting data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-432">次の例では、プログラムで、ユーザーがボタンをクリックした後に新しいレコードをデータ ソースに挿入する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-432">The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</span></span> <span data-ttu-id="00723-433">このコードでは、<xref:System.Collections.Specialized.ListDictionary>既定値を格納しているオブジェクトの値を<xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-433">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains default values to the <xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Insert#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx.vb#1)]  
  
 <span data-ttu-id="00723-434">次の例では、前の例のマークアップを示します。</span><span class="sxs-lookup"><span data-stu-id="00723-434">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Insert#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Insert/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserted">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Inserted" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserted" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserted As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Inserted;" />
      <MemberSignature Language="F#" Value="member this.Inserted : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Inserted : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-435">挿入操作が終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-435">Occurs when an insert operation has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-436">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>挿入操作から例外をキャッチする場合、または挿入操作が完了した後に、値を確認するイベントです。</span><span class="sxs-lookup"><span data-stu-id="00723-436">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</span></span> <span data-ttu-id="00723-437">新しい値を取得することができます、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-437">You can retrieve the new values through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span> <span data-ttu-id="00723-438">たとえば、使用することができます、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>データの新しいレコードのデータベースによって生成される identity プロパティを取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-438">For example, you can use the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object to retrieve the identity property generated by a database for a new data record.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-439">次の例では、イベント ハンドラーを作成する方法を示しています、<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント例外をチェックし、新しいレコードの id プロパティを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-439">The following example shows how to create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event that checks for exceptions and retrieves the identity property for the new record.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/cs/Default.aspx#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceStatusEventArgs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceStatusEventArgs/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Inserting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; Inserting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Inserting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Inserting As EventHandler(Of LinqDataSourceInsertEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceInsertEventArgs ^&gt; ^ Inserting;" />
      <MemberSignature Language="F#" Value="member this.Inserting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " Usage="member this.Inserting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-440">挿入操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-440">Occurs before an insert operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-441">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>を挿入する、または挿入操作をキャンセルして、挿入操作の前に値を変更するデータ クラスからのデータ検証エラーを調査するオブジェクトを検証するイベントです。</span><span class="sxs-lookup"><span data-stu-id="00723-441">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</span></span> <span data-ttu-id="00723-442"><xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>にこのイベントには、データ ソースに挿入する新しいオブジェクトが含まれています、イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-442">The <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object passed to event handlers for this event contains the new object to insert in the data source.</span></span>  
  
 <span data-ttu-id="00723-443">挿入操作中に検証エラーが発生した場合、<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>オブジェクトには、データ クラスによってスローされる検証例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-443">If a validation error occurs during the insert operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="00723-444">挿入する値が、データ クラスのプロパティの型と一致しない場合、またはカスタム検証チェックに合格していない場合、検証エラーが発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-444">A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="00723-445">イベント ハンドラーで、<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>イベント、検証例外を取得し、適切なアクションを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-445">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="00723-446">イベント ハンドラーで例外がスローされます、<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>イベント、そのイベント ハンドラーで例外を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-446">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="00723-447">イベント ハンドラーに例外を渡すことはできません、<xref:System.Web.UI.WebControls.LinqDataSource.Inserted>イベント (を通じて、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="00723-447">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserted> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="00723-448"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティには、後にスローされる例外のみが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-448">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-449">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>挿入操作の前にデータを変更します。</span><span class="sxs-lookup"><span data-stu-id="00723-449">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that modifies data before the insert operation.</span></span> <span data-ttu-id="00723-450">オブジェクトから、<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A>プロパティがという名前の型にキャスト`Product`します。</span><span class="sxs-lookup"><span data-stu-id="00723-450">The object from the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A> property is cast to a type named `Product`.</span></span> <span data-ttu-id="00723-451">`DateModified`のプロパティ、`Product`オブジェクトが現在の日付と時刻に設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-451">The `DateModified` property of the `Product` object is set to the current date and time.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Inserting#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Inserting/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="00723-452">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Inserting>検証例外を取得するイベントです。</span><span class="sxs-lookup"><span data-stu-id="00723-452">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Inserting> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Inserting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceInsertEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Inserting(object sender,   
        LinqDataSourceInsertEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="00723-453">前の例では、検証例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-453">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="00723-454">値がプロパティの型と一致しない場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00723-454">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="00723-455">次の例のようにカスタマイズされたチェックからスロー可能性があります。</span><span class="sxs-lookup"><span data-stu-id="00723-455">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="00723-456">`OnAgeChanging`ことを確認するメソッドの数、`Age`プロパティが負でないです。</span><span class="sxs-lookup"><span data-stu-id="00723-456">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InsertParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection InsertParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property InsertParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ InsertParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.InsertParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.InsertParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-457">挿入の操作中に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-457">Gets the collection of parameters that are used during an insert operation.</span></span></summary>
        <value><span data-ttu-id="00723-458">挿入の操作中に使用されるパラメーターのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-458">The parameters that are used during an insert operation.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-459">通常、挿入操作のために必要な値に渡される、<xref:System.Web.UI.WebControls.LinqDataSource>データ バインド コントロールがコントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-459">Typically the values that are needed for an insert operation are passed to the <xref:System.Web.UI.WebControls.LinqDataSource> control by the data-bound control.</span></span> <span data-ttu-id="00723-460">挿入パラメーター、既定値を提供する場合に、値または空の値に変換するかどうかを定義を指定する`null`します。</span><span class="sxs-lookup"><span data-stu-id="00723-460">You specify insert parameters when you want to provide a default value or define whether to convert empty values to `null`.</span></span> <span data-ttu-id="00723-461">ユーザーが値を指定しない場合に処理する必要があります値に対してのみ、挿入されるすべての値にパラメーターを用意する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="00723-461">You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</span></span>  
  
 <span data-ttu-id="00723-462">指定した値、<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>コレクションは、データ ソースで定義されているが、データ コントロールにバインドされていないフィールドに対してのみ使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-462">The values that you provide in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection are used only for fields that are defined in the data source but that are not bound in the data control.</span></span> <span data-ttu-id="00723-463">たとえば、名前、アドレス、および郵便番号、という名前の列、データベース テーブルがあるとしますが、<xref:System.Web.UI.WebControls.ListView>名前と住所のフィールドにのみ、テーブルにバインドされているコントロールがバインドされています。</span><span class="sxs-lookup"><span data-stu-id="00723-463">For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <xref:System.Web.UI.WebControls.ListView> control that is bound to the table is bound only to the Name and Address fields.</span></span> <span data-ttu-id="00723-464">内の値、 <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> PostalCode フィールドのみのコレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-464">The values in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used only for the PostalCode field.</span></span> <span data-ttu-id="00723-465">これらは名前と住所のフィールドに使用されません。</span><span class="sxs-lookup"><span data-stu-id="00723-465">They will not be used for the Name and Address field.</span></span> <span data-ttu-id="00723-466">これは、これらのフィールドの値が入力されていない場合でも当てはまります。</span><span class="sxs-lookup"><span data-stu-id="00723-466">This is true even if no value is entered for those fields.</span></span> <span data-ttu-id="00723-467">かどうか、データ バインド コントロールによって、データ内のすべてのフィールドのソース フィールドから値のない、<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>コレクションを使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-467">If the data-bound control autogenerates fields for all fields in the data source, no values from the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-468">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource>で既定値を提供するパラメーターを持つコントロール、<xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-468">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with a parameter that provides a default value in the <xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A> collection.</span></span> <span data-ttu-id="00723-469">ユーザーがの値を指定しない場合、`Category`プロパティ、パラメーターによって提供される既定値は、データベースに保存されます。</span><span class="sxs-lookup"><span data-stu-id="00723-469">If the user does not provide a value for the `Category` property, the default value that is provided by the parameter is saved in the database.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default9.aspx#9)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#9](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default9.aspx#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberSignature Language="F#" Value="override this.LoadViewState : obj -&gt; unit" Usage="linqDataSource.LoadViewState savedState" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" Index="0" FrameworkAlternate="netframework-3.5" />
      </Parameters>
      <Docs>
        <param name="savedState"><span data-ttu-id="00723-470"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールの状態を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-470">An object that represents the state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></param>
        <summary><span data-ttu-id="00723-471">永続化する必要がある <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロール内の値の状態を読み込みます。</span><span class="sxs-lookup"><span data-stu-id="00723-471">Loads the state of the values in the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control that must be persisted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[

## Remarks  
<span data-ttu-id="00723-472">`LoadViewState`メソッドの以前に保存したビューステートの読み込みに使用されます、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-472">The `LoadViewState` method is used to load the previously saved view state of the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>

]]></format>
        </remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb547113(v=vs.100)"><span data-ttu-id="00723-473">LinqDataSource Web サーバー コントロールの概要</span><span class="sxs-lookup"><span data-stu-id="00723-473">LinqDataSource Web Server Control Overview</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178359(v=vs.110)"><span data-ttu-id="00723-474">ASP.NET データ アクセスの概要</span><span class="sxs-lookup"><span data-stu-id="00723-474">ASP.NET Data Access Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnInit : EventArgs -&gt; unit" Usage="linqDataSource.OnInit e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="00723-475">イベントのデータ。</span><span class="sxs-lookup"><span data-stu-id="00723-475">The event data.</span></span></param>
        <summary><span data-ttu-id="00723-476"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> オブジェクトを初期化します。</span><span class="sxs-lookup"><span data-stu-id="00723-476">Initializes the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> object.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnUnload">
      <MemberSignature Language="C#" Value="protected internal override void OnUnload (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnUnload(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnUnload (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnUnload(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnUnload : EventArgs -&gt; unit" Usage="linqDataSource.OnUnload e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e"><span data-ttu-id="00723-477">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-477">An <see cref="T:System.EventArgs" /> object that contains the event data.</span></span></param>
        <summary><span data-ttu-id="00723-478"><see cref="E:System.Web.UI.Control.Unload" /> イベントを発生させます。</span><span class="sxs-lookup"><span data-stu-id="00723-478">Raises the <see cref="E:System.Web.UI.Control.Unload" /> event.</span></span></summary>
        <remarks>To be added.</remarks>
        <altmember cref="M:System.Web.UI.Control.OnUnload(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OrderBy">
      <MemberSignature Language="C#" Value="public string OrderBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-479">取得したデータの並べ替えに使用するフィールドを示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-479">Gets or sets a value that specifies which fields are used for ordering the retrieved data.</span></span></summary>
        <value><span data-ttu-id="00723-480">Order By 句の作成に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-480">A string that is used to create the Order By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-481">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティから返されるデータの並べ替えに使用するプロパティを指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-481">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to specify which properties from the returned data to use for sorting.</span></span> <span data-ttu-id="00723-482">データの並べ替えのプロパティは、元のデータ ソースに存在する必要がありますに含まれることはありません、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-482">The property for sorting the data must exist in the original data source, but it does not have to be included in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-483">スペースを追加して`Ascending`、 `ASC`、 `Descending`、または`DESC`プロパティに、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>順序付けられたデータを返す方法を指定するには文字列です。</span><span class="sxs-lookup"><span data-stu-id="00723-483">You can add a space and `Ascending`, `ASC`, `Descending`, or `DESC` to a property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> string in order to specify how the ordered data is returned.</span></span>  
  
 <span data-ttu-id="00723-484">1 つ以上のプロパティを行うことができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティはコンマを使用して各プロパティを区切ります。</span><span class="sxs-lookup"><span data-stu-id="00723-484">You can provide more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property by separating each property by using a comma.</span></span> <span data-ttu-id="00723-485">という名前のプロパティの並べ替え順などに`LastName`と`FirstName`設定、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティを"LastName、FirstName"にします。</span><span class="sxs-lookup"><span data-stu-id="00723-485">For example, to order by properties named `LastName` and `FirstName`, set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property to "LastName, FirstName".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="00723-486">使用すると、<xref:System.Web.UI.WebControls.LinqDataSource>で制御する[!INCLUDE[ss2k](~/includes/ss2k-md.md)]または[!INCLUDE[ssEW](~/includes/ssew-md.md)]と<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティに設定されて`true`で値を指定する必要があります、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-486">When you use the <xref:System.Web.UI.WebControls.LinqDataSource> control with [!INCLUDE[ss2k](~/includes/ss2k-md.md)] or [!INCLUDE[ssEW](~/includes/ssew-md.md)] and the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is set to `true`, you must provide a value in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="00723-487">既定で、<xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-487">By default, the <xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A> property is `true`.</span></span> <span data-ttu-id="00723-488">値を割り当てる場合、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを含める必要がありますすべての identity 列で、クエリで返されるプロパティの一覧。</span><span class="sxs-lookup"><span data-stu-id="00723-488">If you assign a value to the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, you must also include all identity columns in the list of properties that is returned in the query.</span></span>  
  
 <span data-ttu-id="00723-489">場合、<xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A>プロパティに設定されて`true`、データ バインド コントロールに並べ替え式を渡すことができます、<xref:System.Web.UI.WebControls.LinqDataSource>実行時にコントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-489">If the <xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A> property is set to `true`, a data-bound control can pass a sort expression to the <xref:System.Web.UI.WebControls.LinqDataSource> control at run time.</span></span> <span data-ttu-id="00723-490"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、適用後に、データ バインド コントロールの並べ替え式に適用されます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-490">The <xref:System.Web.UI.WebControls.LinqDataSource> control will apply the sort expression from the data-bound control after it applies the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="00723-491">そのため、データが、データ バインド コントロールの並べ替え式に従って返されます。</span><span class="sxs-lookup"><span data-stu-id="00723-491">Therefore, the data is returned according to the sort expression from the data-bound control.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-492">次の例では、データを返しますの値に基づいて順序を逆に、`Category`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-492">The following example returns data in reverse alphabetical order based on values in the `Category` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default4.aspx#4)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default4.aspx#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-493">Order By 句の作成に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-493">Gets the collection of parameters that are used to create the Order By clause.</span></span></summary>
        <value><span data-ttu-id="00723-494">Order By 句の作成に使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-494">The parameters that are used for creating the Order By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-495"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール内のパラメーターを使用して、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>実行時に、Order By 句を作成するコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-495">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection to create the Order By clause at run time.</span></span> <span data-ttu-id="00723-496">一般に設定する、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>プロパティを`true`へのパラメーターを追加すると、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-496">Typically you set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property to `true` when you add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="00723-497">ときに、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>プロパティに設定されて`true`、内の各パラメーター、 <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> 、Order By 句で指定されているシーケンス内にコレクションが追加、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-497">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is set to `true`, each parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection is added to the Order By clause in the sequence that they are specified in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="00723-498">ときに、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A>プロパティは`true`パラメーターを順番に適用し、プレース ホルダーには一致していませんがあるために名前を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="00723-498">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property is `true`, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</span></span>  
  
 <span data-ttu-id="00723-499">Order By 句での実行時に値を設定していない場合は使用する必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-499">If you do not have to set a value at run time in the Order By clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection.</span></span> <span data-ttu-id="00723-500">内のデータの並べ替えに使用するフィールドを定義することができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-500">You can define the fields to use for ordering the data in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property.</span></span> <span data-ttu-id="00723-501">たとえば、データベース テーブルから値を返すによって順序付けられた`LastName`設定<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>"LastName"パラメーターを指定せずにします。</span><span class="sxs-lookup"><span data-stu-id="00723-501">For example, to return values from a database table ordered by `LastName`, set <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> to "LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="00723-502">パラメーターを設定することができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクション内のプレース ホルダーにパラメーターに一致して、<xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A>プロパティが、このアプローチによってアプリケーションが制限されています。</span><span class="sxs-lookup"><span data-stu-id="00723-502">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A> property, but this approach has limited application.</span></span> <span data-ttu-id="00723-503">このアプローチでは、パラメーターを使用すると、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>コレクションは、列名を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="00723-503">When you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection cannot represent a column name.</span></span> <span data-ttu-id="00723-504">パラメーターの値に設定し、プロパティの値には、その値を比較できます。</span><span class="sxs-lookup"><span data-stu-id="00723-504">You can set a parameter to a value and then compare that value to values in a property.</span></span> <span data-ttu-id="00723-505">たとえば、プロパティの値は、パラメーターによって表される実行時の値より小さいかどうかに基づいてデータを注文できます。</span><span class="sxs-lookup"><span data-stu-id="00723-505">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-506">次の例は、<xref:System.Web.UI.WebControls.LinqDataSource> プロパティが <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> に設定された `true` コントロールを示したものです。</span><span class="sxs-lookup"><span data-stu-id="00723-506">The following example shows a <xref:System.Web.UI.WebControls.LinqDataSource> control with the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A> property set to `true`.</span></span> <span data-ttu-id="00723-507">パラメーターが含まれている、<xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A>から注文プロパティに基づいてデータの名前をユーザー コレクションを選択、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-507">A parameter is included in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A> collection that orders the data based on the property name that a user selects from a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default8.aspx#8)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#8](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default8.aspx#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsBy">
      <MemberSignature Language="C#" Value="public string OrderGroupsBy { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string OrderGroupsBy" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberSignature Language="VB.NET" Value="Public Property OrderGroupsBy As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ OrderGroupsBy { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsBy : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-508">グループ化されたデータの並べ替えに使用するフィールドを取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-508">Gets or sets the fields that are used for ordering grouped data.</span></span></summary>
        <value><span data-ttu-id="00723-509">Order Groups By 句の作成に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-509">A string that is used to create the Order Groups By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-510">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ データのグループの並べ替え方法を指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-510">You use the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property to specify how the groups of data are sorted.</span></span> <span data-ttu-id="00723-511">グループ化できますなど、`CategoryID`プロパティおよびカテゴリ ID ごとにグループ化の平均値、並べ替え、`Price`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-511">For example, you can group by the `CategoryID` property and then sort each category ID group by the average of the `Price` property.</span></span>  
  
 <span data-ttu-id="00723-512">設定することができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ データをグループ化した場合にのみです。</span><span class="sxs-lookup"><span data-stu-id="00723-512">You can set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property only when you have grouped the data.</span></span> <span data-ttu-id="00723-513">設定した場合、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ設定がない場合、<xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A>プロパティ、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="00723-513">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property without setting the <xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control throws an exception.</span></span>  
  
 <span data-ttu-id="00723-514">データの並べ替えに使用されるプロパティは、データをグループに使用されるプロパティまたはグループ化されたデータの集計関数の結果のいずれかである必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-514">The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</span></span> <span data-ttu-id="00723-515">データの並べ替え方法を指定することができますに追加するスペースと"Ascending"、"ASC"、"Descending"または"DESC"の文字列内のプロパティ名、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-515">To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> string.</span></span>  
  
 <span data-ttu-id="00723-516">1 つ以上のプロパティを指定する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-516">You can specify more than one property in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="00723-517">コンマを使用して、各プロパティを区切ります。</span><span class="sxs-lookup"><span data-stu-id="00723-517">Separate each property by using a comma.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-518">次の例では、2 つのプロパティを使用して、データをグループ化する方法とそれらのプロパティのいずれかを使用してグループ化されたデータを並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-518">The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</span></span> <span data-ttu-id="00723-519">という名前のテーブルからデータ`Products`という名前のプロパティを使用して別にグループ化`CategoryID`と`Discontinued`します。</span><span class="sxs-lookup"><span data-stu-id="00723-519">The data from a table named `Products` is grouped by using properties named `CategoryID` and `Discontinued`.</span></span> <span data-ttu-id="00723-520">グループ化されたデータを並べ替えて、`CategoryID`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-520">The grouped data is sorted by the `CategoryID` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default.aspx#1)]  
  
 <span data-ttu-id="00723-521">次の例は、プロパティを使用して、データをグループ化する方法と、集計関数の結果に基づいて並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-521">The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</span></span> <span data-ttu-id="00723-522">データ、`Products`を使用してグループ化されたテーブル、`CategoryID`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-522">The data from the `Products` table is grouped by using the `CategoryID` property.</span></span> <span data-ttu-id="00723-523">平均値に基づいて並べ替えられますが、`UnitPrice`各グループ内のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-523">It is sorted based on the average of the `UnitPrice` property within each group.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy/vb/Default2.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OrderGroupsByParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection OrderGroupsByParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property OrderGroupsByParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ OrderGroupsByParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.OrderGroupsByParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-524">Order Groups By 句の作成に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-524">Gets the collection of parameters that are used to create the Order Groups By clause.</span></span></summary>
        <value><span data-ttu-id="00723-525">Order Groups By 句の作成に使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-525">The parameters that are used to create the Order Groups By clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-526"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール内のパラメーターを使用して、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>実行時に、Order Groups By 句を作成するコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-526">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection to create the Order Groups By clause at run time.</span></span>  
  
 <span data-ttu-id="00723-527">値を追加する、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>コレクション値を設定すると、Order Groups By 句での実行時にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-527">You add values to the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection only when you must set values at run time in the Order Groups By clause.</span></span> <span data-ttu-id="00723-528">使用して、データの並べ替えに使用されるフィールドを定義することができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-528">You can define the fields that are used to order the data by using the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span>  
  
 <span data-ttu-id="00723-529">パラメーターを設定することができます、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>コレクション内のプレース ホルダーにパラメーターに一致して、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-529">You can set parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection and match the parameters to placeholders in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A> property.</span></span> <span data-ttu-id="00723-530">ただし、このアプローチでは、パラメーターを使用すると、<xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A>コレクションは、列名を表すことはできません。 これらの値を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-530">However, when you use this approach, the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A> collection cannot represent a column name; they must represent values.</span></span> <span data-ttu-id="00723-531">パラメーターの値に設定し、プロパティにその値を比較できます。</span><span class="sxs-lookup"><span data-stu-id="00723-531">You can set a parameter to a value and then compare that value to a property.</span></span> <span data-ttu-id="00723-532">たとえば、プロパティの値は、パラメーターによって表される実行時の値より小さいかどうかに基づいてデータを注文できます。</span><span class="sxs-lookup"><span data-stu-id="00723-532">For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberSignature Language="F#" Value="override this.SaveViewState : unit -&gt; obj" Usage="linqDataSource.SaveViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-533"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールの現在のビューステートを保存します。</span><span class="sxs-lookup"><span data-stu-id="00723-533">Saves the current view state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></summary>
        <returns><span data-ttu-id="00723-534"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールについて前回保存した状態を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-534">An object that contains the saved state of the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control.</span></span></returns>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb547113(v=vs.100)"><span data-ttu-id="00723-535">LinqDataSource Web サーバー コントロールの概要</span><span class="sxs-lookup"><span data-stu-id="00723-535">LinqDataSource Web Server Control Overview</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178359(v=vs.110)"><span data-ttu-id="00723-536">ASP.NET データ アクセスの概要</span><span class="sxs-lookup"><span data-stu-id="00723-536">ASP.NET Data Access Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Select">
      <MemberSignature Language="C#" Value="public string Select { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Select" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberSignature Language="VB.NET" Value="Public Property Select As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Select { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Select : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Select" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-537">取得したデータに含まれるプロパティと計算値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-537">Gets or sets the properties and calculated values that are included in the retrieved data.</span></span></summary>
        <value><span data-ttu-id="00723-538">Select 句の作成に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-538">A string that is used to create the Select clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-539">設定しない場合、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがデータ オブジェクトからすべてのプロパティ (データの列) を取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-539">If you do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property, the <xref:System.Web.UI.WebControls.LinqDataSource> control retrieves all the properties (data columns) from the data object.</span></span> <span data-ttu-id="00723-540">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティまたはオブジェクトからプロパティのサブセットを取得するデータを取得するときに、新しい値を計算します。</span><span class="sxs-lookup"><span data-stu-id="00723-540">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</span></span>  
  
 <span data-ttu-id="00723-541">設定を取得するプロパティを指定する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティに返されるデータに含めるプロパティの名前にします。</span><span class="sxs-lookup"><span data-stu-id="00723-541">You specify which properties to retrieve by setting the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the names of the properties that you want to include in the returned data.</span></span>  
  
 <span data-ttu-id="00723-542">データ オブジェクトからプロパティのサブセットを取得する場合、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールで指定したプロパティのみを含むクラスを動的に作成する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-542">If you retrieve a subset of properties from the data object, the <xref:System.Web.UI.WebControls.LinqDataSource> control dynamically creates a class that contains only the properties that you specify in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-543">データ オブジェクトのプロパティではないプロパティを計算する場合は、クラスが動的に作成されます。</span><span class="sxs-lookup"><span data-stu-id="00723-543">A class is also created dynamically if you calculate properties that are not properties in the data object.</span></span> <span data-ttu-id="00723-544">このような場合は、クエリから返されるオブジェクトでないで指定されているクラスのインスタンス、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-544">In these cases, the object returned from the query is not an instance of the class that is specified in the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property.</span></span> <span data-ttu-id="00723-545">代わりに、使用する必要があります、`new`メソッドで、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>を新しいクラスが、クエリから返されることを示すプロパティです。</span><span class="sxs-lookup"><span data-stu-id="00723-545">Instead, you must use the `new` method in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to indicate that a new class is returned from the query.</span></span> <span data-ttu-id="00723-546">たとえば、のみを返す、`FirstName`と`LastName`プロパティを含むオブジェクトから複数のこれらのプロパティを設定、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを`new(FirstName, LastName)`。</span><span class="sxs-lookup"><span data-stu-id="00723-546">For example, to return only the `FirstName` and `LastName` properties from an object that contains more than these properties, set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(FirstName, LastName)`.</span></span> <span data-ttu-id="00723-547"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールで指定した新しいクラスを動的に作成、`new`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-547">The <xref:System.Web.UI.WebControls.LinqDataSource> control will dynamically create the new class that you specified in the `new` method.</span></span>  
  
 <span data-ttu-id="00723-548">使用することができます、`As`にエイリアスを選択した値に割り当てるキーワード。</span><span class="sxs-lookup"><span data-stu-id="00723-548">You can use the `As` keyword to assign an alias to a selected value.</span></span> <span data-ttu-id="00723-549">別名を割り当てた場合は、別名のプロパティを含める必要があります、`new`メソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-549">If you assign an alias, you must include the aliased properties in the `new` method.</span></span> <span data-ttu-id="00723-550">任意のデータ バインド コントロールからの結果にバインドする、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールは、エイリアスを使用してプロパティを参照する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-550">Any data-bound control that binds to the results from the <xref:System.Web.UI.WebControls.LinqDataSource> control must refer to the property by the alias.</span></span> <span data-ttu-id="00723-551">たとえば、設定した場合、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティを`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`、データ バインド コントロールが 2 つのプロパティにアクセスできる`SalesRegion`と`RevenueThousands`。</span><span class="sxs-lookup"><span data-stu-id="00723-551">For example, if you set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to `new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`, the data-bound control can access two properties, `SalesRegion` and `RevenueThousands`.</span></span>  
  
 <span data-ttu-id="00723-552">使用する、`new`で機能、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>条件に従ってプロパティが次の表にリストされています。</span><span class="sxs-lookup"><span data-stu-id="00723-552">You use the `new` function in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property according to the conditions listed in the following table.</span></span>  
  
|<span data-ttu-id="00723-553">選択</span><span class="sxs-lookup"><span data-stu-id="00723-553">Select</span></span>|<span data-ttu-id="00723-554">新規のを使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-554">Use of new</span></span>|<span data-ttu-id="00723-555">例</span><span class="sxs-lookup"><span data-stu-id="00723-555">Example</span></span>|  
|------------|----------------|-------------|  
|<span data-ttu-id="00723-556">1 つのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-556">Single property.</span></span>|<span data-ttu-id="00723-557">`new` 必要ありません。</span><span class="sxs-lookup"><span data-stu-id="00723-557">`new` not needed.</span></span>|`Select="Category"`|  
|<span data-ttu-id="00723-558">複数のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-558">Multiple properties.</span></span>|<span data-ttu-id="00723-559">`new` 必要です。</span><span class="sxs-lookup"><span data-stu-id="00723-559">`new` needed.</span></span>|`Select="new(Cateogry, Name)"`|  
|<span data-ttu-id="00723-560">別名を持つ複数のプロパティまたは 1 です。</span><span class="sxs-lookup"><span data-stu-id="00723-560">Single or multiple properties that have an alias.</span></span>|<span data-ttu-id="00723-561">`new` 必要です。</span><span class="sxs-lookup"><span data-stu-id="00723-561">`new` needed.</span></span>|`Select="new(Category As CategoryGroup)"`|  
  
 <span data-ttu-id="00723-562">データの自動変更を有効にするデータ オブジェクトからすべてのプロパティを表示したくない場合は設定しないでください、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-562">If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-563">代わりに、データ バインド コントロールを通じて表示を管理します。</span><span class="sxs-lookup"><span data-stu-id="00723-563">Instead, manage the display through the data-bound control.</span></span> <span data-ttu-id="00723-564">使用すると、<xref:System.Web.UI.WebControls.DetailsView>コントロールまたは<xref:System.Web.UI.WebControls.GridView>コントロールを設定する必要も、<xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A>または<xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="00723-564">When you use the <xref:System.Web.UI.WebControls.DetailsView> control or the <xref:System.Web.UI.WebControls.GridView> control, you must also set the <xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A> or the <xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A> property to `false`.</span></span> <span data-ttu-id="00723-565">データ バインド コントロールに表示されていない任意の値は、ビュー ステートに格納されます。</span><span class="sxs-lookup"><span data-stu-id="00723-565">Any values that are not displayed in the data-bound control are stored in view state.</span></span> <span data-ttu-id="00723-566">渡される変更されていないデータ ソースにデータ更新が実行されるとします。</span><span class="sxs-lookup"><span data-stu-id="00723-566">They are passed unchanged to the data source when the data update is performed.</span></span>  
  
 <span data-ttu-id="00723-567">集計メソッドを含めることができます、クエリ内のデータをグループ化すると、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-567">When you group data in the query, you can include aggregate methods in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-568">次の集計メソッドを使用することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-568">You can use the following aggregate methods:</span></span>  
  
-   `Count()`  
  
-   <span data-ttu-id="00723-569">`Average(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-569">`Average(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-570">`Sum(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-570">`Sum(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-571">`Max(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-571">`Max(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-572">`Min(` *column* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-572">`Min(` *column* `)`</span></span>  
  
-   <span data-ttu-id="00723-573">`Where(` *condition* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-573">`Where(` *condition* `)`</span></span>  
  
-   `Any()`  
  
-   <span data-ttu-id="00723-574">`All(` *condition* `)`</span><span class="sxs-lookup"><span data-stu-id="00723-574">`All(` *condition* `)`</span></span>  
  
 <span data-ttu-id="00723-575">詳細については、次を参照してください[NIB:。LinqDataSource Web サーバー コントロールの概要](https://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)と[方法。グループと LinqDataSource コントロールを使用してデータを集計](https://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)します。</span><span class="sxs-lookup"><span data-stu-id="00723-575">For more information, see [NIB: LinqDataSource Web Server Control Overview](https://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136) and [How to: Group and Aggregate Data Using the LinqDataSource Control](https://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af).</span></span>  
  
 <span data-ttu-id="00723-576">データをグループ化するときに含めることができます`Key`と`It`でのプロパティを動的に作成されるが、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-576">When you group data, you can include `Key` and `It`, which are dynamically created properties, in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-577">`Key`プロパティまたは複数のデータをグループ化に使用されたプロパティの値を参照します。</span><span class="sxs-lookup"><span data-stu-id="00723-577">The `Key` property refers to the values in the property or properties that were used to group the data.</span></span> <span data-ttu-id="00723-578">たとえば、という名前のプロパティでグループ化する`Category`、`Key`プロパティは、一意の各値が格納されます、`Category`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-578">For example, if you group by a property named `Category`, the `Key` property will contain each unique value in the `Category` property.</span></span> <span data-ttu-id="00723-579">`It`プロパティはデータのグループ内の個々 のレコードのコレクションを参照します。</span><span class="sxs-lookup"><span data-stu-id="00723-579">The `It` property refers to a collection of individual records in a grouping of data.</span></span> <span data-ttu-id="00723-580">反復処理することができます、`It`プロパティをグループ化操作に統合されている個々 のレコードを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-580">You can iterate over the `It` property to retrieve the individual records that have been consolidated in the grouping operation.</span></span> <span data-ttu-id="00723-581">たとえば、という名前のプロパティでグループ化する`Category`、`It`プロパティにはで共通の値を共有するすべての個別のレコードが含まれています、`Category`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-581">For example, if you group by a property named `Category`, the `It` property contains all the individual records that share a common value in the `Category` property.</span></span>  
  
 <span data-ttu-id="00723-582">含める場合は、`It`キーワード、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ データをグループ化するときに、エイリアスを割り当てる必要があります、`It`キーワード。</span><span class="sxs-lookup"><span data-stu-id="00723-582">If you include the `It` keyword in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property when you group data, you must assign an alias to the `It` keyword.</span></span> <span data-ttu-id="00723-583"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール場合、例外がスローされます`It`エイリアスはありません。</span><span class="sxs-lookup"><span data-stu-id="00723-583">The <xref:System.Web.UI.WebControls.LinqDataSource> control will throw an exception if `It` does not have an alias.</span></span> <span data-ttu-id="00723-584">エイリアスを割り当てることができます、`Key`キーワードが、これは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="00723-584">You can assign an alias to the `Key` keyword, but this is not required.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-585">次の例は、設定する方法を示します、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティをデータ オブジェクトのプロパティのサブセットです。</span><span class="sxs-lookup"><span data-stu-id="00723-585">The following example shows how to set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to a subset of properties in the data object.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default10.aspx#10)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#10](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default10.aspx#10)]  
  
 <span data-ttu-id="00723-586">次の例は、グループ化されたレコードの平均値を取得するデータをグループ化に使用されているプロパティの値を取得する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="00723-586">The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</span></span> <span data-ttu-id="00723-587">`Key`キーワードには、データをグループ化するために使用されているプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-587">The `Key` keyword contains the property that has been used for grouping data.</span></span> <span data-ttu-id="00723-588">この例で`Key`から共有の値を含む、`ProductCategory`プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-588">In this example, `Key` will contain the shared values from the `ProductCategory` property.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default3.aspx#3)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default3.aspx#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selected">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Selected" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selected" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selected As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Selected;" />
      <MemberSignature Language="F#" Value="member this.Selected : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Selected : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-589">データ取得操作が終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-589">Occurs when a data retrieval operation has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-590">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Selected>イベント データの取得操作から例外をキャッチするか、取得操作が完了した後、データ オブジェクトを調べます。</span><span class="sxs-lookup"><span data-stu-id="00723-590">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</span></span> <span data-ttu-id="00723-591">オブジェクトは、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-591">The object is available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Selecting">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; Selecting" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Selecting" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Selecting As EventHandler(Of LinqDataSourceSelectEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceSelectEventArgs ^&gt; ^ Selecting;" />
      <MemberSignature Language="F#" Value="member this.Selecting : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " Usage="member this.Selecting : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-592">データ取得操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-592">Occurs before a data-retrieval operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-593">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベントは、次のタスクを実行するには。</span><span class="sxs-lookup"><span data-stu-id="00723-593">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event in order to perform the following tasks:</span></span>  
  
-   <span data-ttu-id="00723-594">データの取得のパラメーターを変更します。</span><span class="sxs-lookup"><span data-stu-id="00723-594">Modify parameters for data retrieval.</span></span>  
  
-   <span data-ttu-id="00723-595">プログラムでクエリを生成します。</span><span class="sxs-lookup"><span data-stu-id="00723-595">Generate the query programmatically.</span></span>  
  
-   <span data-ttu-id="00723-596">並べ替えやページングの値を変更します。</span><span class="sxs-lookup"><span data-stu-id="00723-596">Modify the values for sorting or paging.</span></span>  
  
-   <span data-ttu-id="00723-597">カスタムの並べ替えやページングを実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-597">Perform custom sorting or paging.</span></span>  
  
-   <span data-ttu-id="00723-598">データ取得操作をキャンセルします。</span><span class="sxs-lookup"><span data-stu-id="00723-598">Cancel the data-retrieval operation.</span></span>  
  
 <span data-ttu-id="00723-599"><xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs>にこのイベントには、データ取得操作のパラメーターが含まれています、イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-599">The <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</span></span> <span data-ttu-id="00723-600">パラメーターを変更することができます、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>クエリを実行または新しい結果セットを作成してに割り当てる前に、イベント ハンドラー、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-600">You can modify the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event handler before the query executes, or you can create a new result set and assign that to the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
 <span data-ttu-id="00723-601">カスタムの並べ替えまたはこのイベントは、コントロールにバインドされているによって制限される可能性がありますのハンドラーでのページングを実装する機能、<xref:System.Web.UI.WebControls.LinqDataSource>します。</span><span class="sxs-lookup"><span data-stu-id="00723-601">Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <xref:System.Web.UI.WebControls.LinqDataSource>.</span></span> <span data-ttu-id="00723-602">たとえば、列ヘッダーの<xref:System.Web.UI.WebControls.GridView>コントロールがクリックされると、コントロールは、自動並べ替えする可能性がありますオーバーライドの任意の順序を確立、イベント ハンドラーを実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-602">For example, when the column header of a <xref:System.Web.UI.WebControls.GridView> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</span></span>  
  
 <span data-ttu-id="00723-603">イベント ハンドラーで例外がスローされます、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント、そのイベント ハンドラーで例外を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-603">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="00723-604">イベント ハンドラーに例外を渡すことはできません、<xref:System.Web.UI.WebControls.LinqDataSource.Selected>イベント (を通じて、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="00723-604">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selected> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="00723-605"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティには、後にスローされる例外のみが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-605">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-606">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-606">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event.</span></span> <span data-ttu-id="00723-607">ハンドラーは、Web ページ内の文字列値の配列から値を取得するクエリを作成します。</span><span class="sxs-lookup"><span data-stu-id="00723-607">The handler creates a query that retrieves values from an array of string values in the Web page.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/cs/Default3.aspx.cs#3)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSourceSelectEventArgs#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSourceSelectEventArgs/vb/Default3.aspx.vb#3)]  
  
 <span data-ttu-id="00723-608">次の例を割り当てる方法を示しています、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>プロパティをストアド プロシージャを表すメソッドから返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-608">The following example shows how to assign the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property to the object that is returned from a method that represents a stored procedure.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Selecting(ByVal sender As Object, _  
        ByVal e As LinqDataSourceSelectEventArgs)  
    Dim exampleContext As ExampleDataContext = New ExampleDataContext()  
    e.Result = exampleContext.GetRegisteredCustomers()  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Selecting(object sender,   
        LinqDataSourceSelectEventArgs e)  
{  
    ExampleDataContext exampleContext = new ExampleDataContext();  
    e.Result = exampleContext.GetRegisteredCustomers();  
}  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SelectParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection SelectParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SelectParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ SelectParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SelectParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.SelectParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-609">データ取得の操作中に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-609">Gets the collection of parameters that are used during a data-retrieval operation.</span></span></summary>
        <value><span data-ttu-id="00723-610">Select 句の作成に使用されるパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-610">The parameters that are used to create the Select clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-611"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール内のパラメーターを使用して、<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>実行時に、Select 句を作成するコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-611">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to create the Select clause at run time.</span></span> <span data-ttu-id="00723-612">パラメーターを追加する、 <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> Select 句で実行時の値を使用するときのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-612">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection when you want to use run-time values in the Select clause.</span></span> <span data-ttu-id="00723-613">パラメーターを追加するなど、<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>ユーザーのプロファイルのプロパティを表すコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-613">For example, you can add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property in the user's profile.</span></span> <span data-ttu-id="00723-614">データ ソースから新しい値を計算するのに、そのプロパティと値を使用することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-614">You can then use that property and a value from the data source to calculate a new value.</span></span>  
  
 <span data-ttu-id="00723-615">Select 句での実行時に値を設定していない場合は使用する必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-615">If you do not have to set a value at run time in the Select clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span> <span data-ttu-id="00723-616">取得するプロパティを定義することができます、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-616">You can define the properties to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property.</span></span> <span data-ttu-id="00723-617">たとえば、返される、`FirstName`と`LastName`、データベース テーブルから値を設定<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>"FirstName、LastName"にパラメーターを指定せず。</span><span class="sxs-lookup"><span data-stu-id="00723-617">For example, to return the `FirstName` and `LastName` values from a database table, set <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> to "FirstName, LastName" without any parameters.</span></span>  
  
 <span data-ttu-id="00723-618">値を設定する、 <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> 、コレクション内のプレース ホルダーを追加する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティの名前付きパラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-618">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection, you add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property for the named parameter.</span></span> <span data-ttu-id="00723-619">Select 句で使用した場合は、各パラメーター名を付ける、@ 記号。</span><span class="sxs-lookup"><span data-stu-id="00723-619">In the Select clause, preface each parameter name with the @ symbol.</span></span>  
  
 <span data-ttu-id="00723-620">パラメーターを使用することはできません、<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>プロパティ名を表すコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-620">You cannot use a parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection to represent a property name.</span></span> <span data-ttu-id="00723-621">動的に設定する、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティに、プロパティの名前のイベント ハンドラーを作成する、<xref:System.Web.UI.WebControls.LinqDataSource.Selecting>イベントをカスタマイズして、<xref:System.Web.UI.WebControls.LinqDataSource.Select%2A>プロパティに応じて。</span><span class="sxs-lookup"><span data-stu-id="00723-621">To dynamically set the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property to the name of a property, create an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Selecting> event and customize the <xref:System.Web.UI.WebControls.LinqDataSource.Select%2A> property as needed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-622">次の例は、ユーザーが指定した値を使用して、返されるデータの値を計算する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="00723-622">The following example shows how to use a user-supplied value to calculate a value in the returned data.</span></span> <span data-ttu-id="00723-623">ユーザーは、製造日数を表すテキスト ボックスに値を入力できます。</span><span class="sxs-lookup"><span data-stu-id="00723-623">The user can enter a value in the text box that represents the number of manufacturing days.</span></span> <span data-ttu-id="00723-624">その値は、製品の製造に日数を表すデータベースからの値で除算されます。</span><span class="sxs-lookup"><span data-stu-id="00723-624">That value is divided by a value from a database that represents the number of days to manufacture a product.</span></span> <span data-ttu-id="00723-625">返される値は、製品の数を指定した日数で製造できることを示します。</span><span class="sxs-lookup"><span data-stu-id="00723-625">The returned value indicates how many products can be manufactured during the specified number of days.</span></span> <span data-ttu-id="00723-626">を通じて Select コマンドに含まれているユーザーの入力、<xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-626">The user's input is included in the Select command through the <xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A> collection.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/cs/Default.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.SelectParameters#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.SelectParameters/vb/Default.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StoreOriginalValuesInViewState">
      <MemberSignature Language="C#" Value="public bool StoreOriginalValuesInViewState { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool StoreOriginalValuesInViewState" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberSignature Language="VB.NET" Value="Public Property StoreOriginalValuesInViewState As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool StoreOriginalValuesInViewState { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.StoreOriginalValuesInViewState : bool with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Behavior")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-627">データ ソースから取得するデータをビューステートに保存して、そのデータが更新または削除される前に別のプロセスによって変更されていないことを確認する値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-627">Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</span></span></summary>
        <value><span data-ttu-id="00723-628">値をビューステートに保存する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="00723-628"><see langword="true" /> if the values will be stored in view state; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="00723-629">既定値は <see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="00723-629">The default value is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-630">既定では、ときに更新および削除操作が有効になって、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールがビューステートへのすべてのレコードを元の値を格納します。</span><span class="sxs-lookup"><span data-stu-id="00723-630">By default, when update and delete operations have been enabled, the <xref:System.Web.UI.WebControls.LinqDataSource> control stores the original values for all the records in view state.</span></span> <span data-ttu-id="00723-631"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールがすべての主キーの値を格納し、すべてのプロパティでマークされていない`UpdateCheck.Never`で、`Column`属性。</span><span class="sxs-lookup"><span data-stu-id="00723-631">The <xref:System.Web.UI.WebControls.LinqDataSource> control stores values for all primary keys and all properties not marked with `UpdateCheck.Never` in the `Column` attribute.</span></span> <span data-ttu-id="00723-632">設定する、`UpdateCheck`のプロパティ、`Column`属性、[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="00723-632">You set the `UpdateCheck` property of the `Column` attribute in the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span>  
  
 <span data-ttu-id="00723-633">LINQ to SQL を更新またはデータの削除、前に、データ ソースの現在の値に対するビューステートの値を確認します。</span><span class="sxs-lookup"><span data-stu-id="00723-633">Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</span></span> <span data-ttu-id="00723-634">値が一致しない場合は、データ ソースのレコードが変更されました。</span><span class="sxs-lookup"><span data-stu-id="00723-634">If the values do not match, the data source record has changed.</span></span> <span data-ttu-id="00723-635">その場合は、LINQ to SQL が例外をスローし、更新を続行やしません削除操作。</span><span class="sxs-lookup"><span data-stu-id="00723-635">In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</span></span> <span data-ttu-id="00723-636">LINQ to SQL の詳細については、次を参照してください。 [LINQ to SQL](https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)します。</span><span class="sxs-lookup"><span data-stu-id="00723-636">For more information about LINQ to SQL, see [LINQ to SQL](https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655).</span></span>  
  
 <span data-ttu-id="00723-637">ビュー内の元の値を格納する状態がページ サイズが不必要に大きくなる可能性し、悪意のあるユーザーに機密データを公開することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-637">Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</span></span> <span data-ttu-id="00723-638">ビュー ステートの値を格納する設定を無効にした、<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>プロパティを`false`します。</span><span class="sxs-lookup"><span data-stu-id="00723-638">You can disable storing values in view state by setting the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`.</span></span> <span data-ttu-id="00723-639">これを行う場合は、データが変更されていないことを確認する方法を提供する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-639">If you do this, you must provide your own way to make sure that the data has not changed.</span></span> <span data-ttu-id="00723-640">設定した場合、<xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A>プロパティを`false`、元の値は、データ バインド コントロールのビュー ステートに保存されません。</span><span class="sxs-lookup"><span data-stu-id="00723-640">If you set the <xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A> property to `false`, the original values are not persisted in view state for the data-bound control.</span></span> <span data-ttu-id="00723-641">その場合は、LINQ to SQL は、データの整合性を検証することはできません。</span><span class="sxs-lookup"><span data-stu-id="00723-641">In that case, LINQ to SQL cannot verify the integrity of the data.</span></span> <span data-ttu-id="00723-642">LINQ to SQL をデータ ソース内のデータが実際に変更されていない場合でも、データの競合を示す例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00723-642">LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</span></span>  
  
 <span data-ttu-id="00723-643">基になるデータ ソースに更新中に自動的に更新されるタイムスタンプ フィールドが含まれている場合は、ビュー ステートにその値だけを格納できます。</span><span class="sxs-lookup"><span data-stu-id="00723-643">If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</span></span> <span data-ttu-id="00723-644">エンティティ クラスでタイムスタンプ プロパティを設定する場合、`IsVersion=true`とすべてのプロパティに設定`UpdateCheck.Never`します。</span><span class="sxs-lookup"><span data-stu-id="00723-644">In that case, the timestamp property in the entity class is set to `IsVersion=true` and all the properties are set to `UpdateCheck.Never`.</span></span> <span data-ttu-id="00723-645">タイムスタンプ フィールドはそのレコード内のデータが変更されるたびに自動的に更新、データベース、ために、LINQ to SQL は、データが変更された場合は、その値から決定します。</span><span class="sxs-lookup"><span data-stu-id="00723-645">Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</span></span> <span data-ttu-id="00723-646">これにより、ビュー ステートのサイズを小さくと、公開されている機密データがありません。</span><span class="sxs-lookup"><span data-stu-id="00723-646">This helps reduce the size of view state, and no sensitive data is exposed.</span></span> <span data-ttu-id="00723-647">LINQ to SQL の整合性をチェック データ ビューで、タイムスタンプの値を比較することによって、データベース内のタイムスタンプ値と状態。</span><span class="sxs-lookup"><span data-stu-id="00723-647">LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</span></span> <span data-ttu-id="00723-648">詳細については、「[チュートリアル:LinqDataSource コントロールとタイムスタンプを使用したデータの整合性をチェックする](https://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)します。</span><span class="sxs-lookup"><span data-stu-id="00723-648">For more information, see [Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity](https://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa).</span></span>  
  
 ]]></format>
        </remarks>
        <related type="Article" href="https://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655"><span data-ttu-id="00723-649">LINQ to SQL</span><span class="sxs-lookup"><span data-stu-id="00723-649">LINQ to SQL</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.ContextType">
      <MemberSignature Language="C#" Value="Type System.Web.DynamicData.IDynamicDataSource.ContextType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Type System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType" />
      <MemberSignature Language="VB.NET" Value=" Property ContextType As Type Implements IDynamicDataSource.ContextType" />
      <MemberSignature Language="C++ CLI" Value="property Type ^ System::Web::DynamicData::IDynamicDataSource::ContextType { Type ^ get(); void set(Type ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.ContextType" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.ContextType</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-650">このメンバーの説明については、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="00723-650">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span></span></summary>
        <value><span data-ttu-id="00723-651">クラスに関連付けられている型。</span><span class="sxs-lookup"><span data-stu-id="00723-651">The type that is associated with the class.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-652">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="00723-652">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00723-653">これは、<xref:System.Web.UI.WebControls.LinqDataSource> のインスタンスが <xref:System.Web.DynamicData.IDynamicDataSource> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="00723-653">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.EntitySetName">
      <MemberSignature Language="C#" Value="string System.Web.DynamicData.IDynamicDataSource.EntitySetName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName" />
      <MemberSignature Language="VB.NET" Value=" Property EntitySetName As String Implements IDynamicDataSource.EntitySetName" />
      <MemberSignature Language="C++ CLI" Value="property System::String ^ System::Web::DynamicData::IDynamicDataSource::EntitySetName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Web.DynamicData.IDynamicDataSource.EntitySetName" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.EntitySetName</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-654">このメンバーの説明については、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="00723-654">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span></span></summary>
        <value><span data-ttu-id="00723-655">エンティティの名前。</span><span class="sxs-lookup"><span data-stu-id="00723-655">The name of the entity.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-656">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="00723-656">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00723-657">これは、<xref:System.Web.UI.WebControls.LinqDataSource> のインスタンスが <xref:System.Web.DynamicData.IDynamicDataSource> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="00723-657">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Web.DynamicData.IDynamicDataSource.Exception">
      <MemberSignature Language="C#" Value="event EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.DynamicData.DynamicValidatorEventArgs&gt; System.Web.DynamicData.IDynamicDataSource.Exception" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#Exception" />
      <MemberSignature Language="VB.NET" Value="Custom Event Exception As EventHandler(Of DynamicValidatorEventArgs) Implements System.Web.DynamicData.IDynamicDataSource" />
      <MemberType>Event</MemberType>
      <Implements>
        <InterfaceMember>E:System.Web.DynamicData.IDynamicDataSource.Exception</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.DynamicData.DynamicValidatorEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-658">このメンバーの説明については、<see cref="T:System.Web.DynamicData.IDynamicDataSource" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="00723-658">For a description of this member, see <see cref="T:System.Web.DynamicData.IDynamicDataSource" />.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-659">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="00723-659">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="00723-660">これは、<xref:System.Web.UI.WebControls.LinqDataSource> のインスタンスが <xref:System.Web.DynamicData.IDynamicDataSource> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="00723-660">It can be used only when the <xref:System.Web.UI.WebControls.LinqDataSource> instance is cast to an <xref:System.Web.DynamicData.IDynamicDataSource> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TableName">
      <MemberSignature Language="C#" Value="public string TableName { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string TableName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberSignature Language="VB.NET" Value="Public Property TableName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ TableName { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.TableName : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.TableName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-661">データ コンテキスト クラス内でデータ コレクションを表すプロパティまたはフィールドの名前を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-661">Gets or sets the name of the property or field in the data context class that represents a data collection.</span></span></summary>
        <value><span data-ttu-id="00723-662">データ コレクションを含むプロパティの名前を示す文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-662">A string that contains the name of the property that contains the data collection.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-663">設定、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティを取得するデータを表すフィールドまたはプロパティの名前にします。</span><span class="sxs-lookup"><span data-stu-id="00723-663">Set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that represents the data that you want to retrieve.</span></span> <span data-ttu-id="00723-664">データベース テーブルに接続するときにプロパティの名前は通常、テーブルの名前と同じ。</span><span class="sxs-lookup"><span data-stu-id="00723-664">When you are connecting to a database table, the name of the property is usually the same as the name of the table.</span></span> <span data-ttu-id="00723-665">メモリ内のデータのコレクションに接続するときは、設定、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティをプロパティまたはデータ コレクションを返すフィールドの名前にします。</span><span class="sxs-lookup"><span data-stu-id="00723-665">When you are connecting to an in-memory data collection, set the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property to the name of the property or field that returns the data collection.</span></span>  
  
 <span data-ttu-id="00723-666">任意の種類を返すプロパティを割り当てることができます、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>取得の操作のプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-666">You can assign a property that returns any type to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property for retrieval operations.</span></span> <span data-ttu-id="00723-667">かどうか、プロパティで表されるオブジェクトを実装しません<xref:System.Collections.IEnumerable>、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールでは、オブジェクトのインスタンスでラップ自動的に、<xref:System.Collections.IEnumerable>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-667">If the object that is represented by the property does not implement <xref:System.Collections.IEnumerable>, the <xref:System.Web.UI.WebControls.LinqDataSource> control will automatically wrap the object in an instance of an <xref:System.Collections.IEnumerable> object.</span></span>  
  
 <span data-ttu-id="00723-668">自動更新を有効にするのには、挿入、または削除の各操作に割り当てられているクラス、<xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.DataContext>とプロパティに割り当てられている、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティがから派生する必要があります<xref:System.Data.Linq.Table%601>します。</span><span class="sxs-lookup"><span data-stu-id="00723-668">To enable automatic update, insert, or delete operations, the class that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A> property must derive from <xref:System.Data.Linq.DataContext> and the property that is assigned to the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property must derive from <xref:System.Data.Linq.Table%601>.</span></span>  
  
 <span data-ttu-id="00723-669">クラスのインスタンスからデータを選択する方法については、次を参照してください。、<xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-669">For information about how to select data from an instance of a class, see the <xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-670">次の例では 2 つ<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-670">The following example shows two <xref:System.Web.UI.WebControls.LinqDataSource> controls.</span></span> <span data-ttu-id="00723-671">いずれかで<xref:System.Web.UI.WebControls.LinqDataSource>コントロール、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティがクラスのプロパティに設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-671">In one <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property in a class.</span></span> <span data-ttu-id="00723-672">そのプロパティは、文字列の配列を返します。</span><span class="sxs-lookup"><span data-stu-id="00723-672">That property returns an array of strings.</span></span> <span data-ttu-id="00723-673">もう一方の<xref:System.Web.UI.WebControls.LinqDataSource>コントロール、<xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A>プロパティは、データベース テーブルを表すプロパティに設定されます。</span><span class="sxs-lookup"><span data-stu-id="00723-673">In the other <xref:System.Web.UI.WebControls.LinqDataSource> control, the <xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A> property is set to a property that represents a database table.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/Default.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Overview#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/Default.aspx#2)]  
  
 <span data-ttu-id="00723-674">という名前のクラス`ExampleDataContext`表しますデータベース テーブルが表示されないことこの例では。</span><span class="sxs-lookup"><span data-stu-id="00723-674">The class named `ExampleDataContext` that represents the database table is not shown in this example.</span></span> <span data-ttu-id="00723-675">この例を動作させるには、LINQ を名前付き Example.dbml テーブルをドラッグしては、上にムービーをという名前の SQL クラスに追加することでこのクラスを作成する必要があります、[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]します。</span><span class="sxs-lookup"><span data-stu-id="00723-675">For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the [!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)].</span></span> <span data-ttu-id="00723-676">という名前のクラス`ExampleDataContext`という名前のプロパティで`Movies`が生成されます。</span><span class="sxs-lookup"><span data-stu-id="00723-676">A class named `ExampleDataContext` with a property named `Movies` is generated.</span></span>  
  
 <span data-ttu-id="00723-677">次の例は、という名前のクラスを示しています。`MovieLibrary`内で参照される、<xref:System.Web.UI.WebControls.LinqDataSource>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-677">The following example shows the class named `MovieLibrary` that is referenced in the <xref:System.Web.UI.WebControls.LinqDataSource> control.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/cs/App_Code/MovieLibrary.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource_Overview#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Overview/vb/App_Code/MovieLibrary.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberSignature Language="F#" Value="override this.TrackViewState : unit -&gt; unit" Usage="linqDataSource.TrackViewState " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="00723-678"><see cref="T:System.Web.UI.WebControls.LinqDataSource" /> コントロールのビューステートの変更を追跡し、変更がコントロールの <see cref="T:System.Web.UI.StateBag" /> オブジェクトに格納されるようにします。</span><span class="sxs-lookup"><span data-stu-id="00723-678">Tracks view state changes to the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> control so that the changes can be stored in the <see cref="T:System.Web.UI.StateBag" /> object for the control.</span></span></summary>
        <remarks>To be added.</remarks>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/bb547113(v=vs.100)"><span data-ttu-id="00723-679">LinqDataSource Web サーバー コントロールの概要</span><span class="sxs-lookup"><span data-stu-id="00723-679">LinqDataSource Web Server Control Overview</span></span></related>
        <related type="Article" href="https://docs.microsoft.com/previous-versions/aspnet/ms178359(v=vs.110)"><span data-ttu-id="00723-680">ASP.NET データ アクセスの概要</span><span class="sxs-lookup"><span data-stu-id="00723-680">ASP.NET Data Access Overview</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Update">
      <MemberSignature Language="C#" Value="public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 Update(class System.Collections.IDictionary keys, class System.Collections.IDictionary values, class System.Collections.IDictionary oldValues) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function Update (keys As IDictionary, values As IDictionary, oldValues As IDictionary) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int Update(System::Collections::IDictionary ^ keys, System::Collections::IDictionary ^ values, System::Collections::IDictionary ^ oldValues);" />
      <MemberSignature Language="F#" Value="member this.Update : System.Collections.IDictionary * System.Collections.IDictionary * System.Collections.IDictionary -&gt; int" Usage="linqDataSource.Update (keys, values, oldValues)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.IDictionary" />
        <Parameter Name="values" Type="System.Collections.IDictionary" />
        <Parameter Name="oldValues" Type="System.Collections.IDictionary" />
      </Parameters>
      <Docs>
        <param name="keys"><span data-ttu-id="00723-681">更新するレコードの行のキー値。</span><span class="sxs-lookup"><span data-stu-id="00723-681">The row key values for the records to be updated.</span></span></param>
        <param name="values"><span data-ttu-id="00723-682">データ ソース内で更新する行の値。</span><span class="sxs-lookup"><span data-stu-id="00723-682">The row values to be updated in the data source.</span></span></param>
        <param name="oldValues"><span data-ttu-id="00723-683">データの競合を検出するために評価される行の値。</span><span class="sxs-lookup"><span data-stu-id="00723-683">The row values that are evaluated to detect data conflicts.</span></span></param>
        <summary><span data-ttu-id="00723-684">更新の操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="00723-684">Performs an update operation.</span></span></summary>
        <returns><span data-ttu-id="00723-685">更新操作によって影響を受けたレコードの数。</span><span class="sxs-lookup"><span data-stu-id="00723-685">The number of records affected by the update operation.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-686">通常を呼び出す必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>コードからメソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-686">Typically, you do not have to call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method from your code.</span></span> <span data-ttu-id="00723-687">データ バインド コントロールが自動的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>メソッド、ユーザーがレコードを更新する操作。</span><span class="sxs-lookup"><span data-stu-id="00723-687">The data-bound control will automatically call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when the user takes action to update a record.</span></span> <span data-ttu-id="00723-688">明示的に呼び出す、<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>メソッド データを更新するための独自のプロセスを作成するときにします。</span><span class="sxs-lookup"><span data-stu-id="00723-688">You explicitly call the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method when you want to create your own process for updating data.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-689">次の例では、プログラムによって、ユーザーがボタンをクリックした後、データ ソース内のレコードを更新する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-689">The following example shows how to programmatically update a record in the data source after the user clicks a button.</span></span> <span data-ttu-id="00723-690">このコードでは、<xref:System.Collections.Specialized.ListDictionary>キーの値を含むオブジェクトを<xref:System.Collections.Specialized.ListDictionary>、元の値を格納しているオブジェクトと<xref:System.Collections.Specialized.ListDictionary>に新しい値を含むオブジェクト、<xref:System.Web.UI.WebControls.LinqDataSource.Update%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="00723-690">The code passes a <xref:System.Collections.Specialized.ListDictionary> object that contains the key value, a <xref:System.Collections.Specialized.ListDictionary> object that contains the original values, and a <xref:System.Collections.Specialized.ListDictionary> object that contains the new values to the <xref:System.Web.UI.WebControls.LinqDataSource.Update%2A> method.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Update#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx.vb#1)]  
  
 <span data-ttu-id="00723-691">次の例では、前の例のマークアップを示します。</span><span class="sxs-lookup"><span data-stu-id="00723-691">The following example shows the markup for the previous example.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/cs/Default2.aspx#2)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource.Update#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Update/vb/Default3.aspx#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Updated">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; Updated" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updated" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updated As EventHandler(Of LinqDataSourceStatusEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceStatusEventArgs ^&gt; ^ Updated;" />
      <MemberSignature Language="F#" Value="member this.Updated : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " Usage="member this.Updated : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-692">更新操作が終了したときに発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-692">Occurs when an update operation has finished.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-693">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Updated>更新操作が完了した後、イベントの値を確認するまたは更新操作から例外をキャッチする出力パラメーター。</span><span class="sxs-lookup"><span data-stu-id="00723-693">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</span></span> <span data-ttu-id="00723-694">出力パラメーターは、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>イベント ハンドラーに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="00723-694">The output parameters are available from the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object that is passed to event handlers.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UpdateParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection UpdateParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property UpdateParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ UpdateParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UpdateParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.UpdateParameters" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-695">このコレクションは、<see cref="T:System.Web.UI.WebControls.LinqDataSource" /> クラスでは使用されません。</span><span class="sxs-lookup"><span data-stu-id="00723-695">This collection is not used by the <see cref="T:System.Web.UI.WebControls.LinqDataSource" /> class.</span></span></summary>
        <value><span data-ttu-id="00723-696">パラメーターのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-696">A collection of parameters.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Updating">
      <MemberSignature Language="C#" Value="public event EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler`1&lt;class System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; Updating" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.LinqDataSource.Updating" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event Updating As EventHandler(Of LinqDataSourceUpdateEventArgs) " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler&lt;System::Web::UI::WebControls::LinqDataSourceUpdateEventArgs ^&gt; ^ Updating;" />
      <MemberSignature Language="F#" Value="member this.Updating : EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " Usage="member this.Updating : System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt; " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.EventHandler&lt;System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-697">更新操作の前に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-697">Occurs before an update operation.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-698">処理、<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベントを更新する、更新操作では前に、の値を変更または更新操作をキャンセルするデータ クラスからのデータ検証エラーを調査するオブジェクトを検証します。</span><span class="sxs-lookup"><span data-stu-id="00723-698">Handle the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</span></span> <span data-ttu-id="00723-699"><xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs>イベント ハンドラーに渡されるオブジェクトには、元のオブジェクトと、更新されたオブジェクトの両方が含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-699">The <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs> object that is passed to event handlers contains both the original object and the updated object.</span></span>  
  
 <span data-ttu-id="00723-700">更新操作中に検証エラーが発生した場合、<xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs>オブジェクトには、データ クラスによってスローされる検証例外が含まれています。</span><span class="sxs-lookup"><span data-stu-id="00723-700">If a validation error occurs during the update operation, the <xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs> object contains the validation exceptions that are thrown by the data class.</span></span> <span data-ttu-id="00723-701">検証エラーは、更新する値が、データ クラスのプロパティの型と一致しない場合、またはカスタム検証チェックに合格していない場合に発生します。</span><span class="sxs-lookup"><span data-stu-id="00723-701">A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</span></span> <span data-ttu-id="00723-702">イベント ハンドラーで、<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベント、検証例外を取得し、適切なアクションを実行することができます。</span><span class="sxs-lookup"><span data-stu-id="00723-702">In an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you can retrieve the validation exceptions and take appropriate action.</span></span>  
  
 <span data-ttu-id="00723-703">イベント ハンドラーで例外がスローされます、<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベント、そのイベント ハンドラーで例外を処理する必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-703">If an exception is thrown in an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event, you must handle the exception in that event handler.</span></span> <span data-ttu-id="00723-704">イベント ハンドラーに例外を渡すことはできません、<xref:System.Web.UI.WebControls.LinqDataSource.Updated>イベント (を通じて、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>のプロパティ、<xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs>オブジェクト)。</span><span class="sxs-lookup"><span data-stu-id="00723-704">The exception will not be passed to an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updated> event (through the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property of the <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs> object).</span></span> <span data-ttu-id="00723-705"><xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A>プロパティには、後にスローされる例外のみが含まれています、<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-705">The <xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A> property contains only the exceptions that are thrown after the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-706">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Updating>イベント。</span><span class="sxs-lookup"><span data-stu-id="00723-706">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event.</span></span> <span data-ttu-id="00723-707">コードからプロパティを比較し、<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A>プロパティと<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>プロパティに値が変更されたかどうかを参照してください。</span><span class="sxs-lookup"><span data-stu-id="00723-707">The code compares properties from the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A> property and the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property to see whether a value has changed.</span></span> <span data-ttu-id="00723-708">値が変更すると、値の場合、<xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A>プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="00723-708">If the value has changed, a value of the <xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A> property is set to `true`.</span></span>  
  
 [!code-csharp[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/cs/Default.aspx.cs#1)]
 [!code-vb[System.Web.UI.WebControls.LinqDataSource.Updating#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource.Updating/vb/Default.aspx.vb#1)]  
  
 <span data-ttu-id="00723-709">次の例は、イベント ハンドラーを<xref:System.Web.UI.WebControls.LinqDataSource.Updating>検証例外を取得するイベントです。</span><span class="sxs-lookup"><span data-stu-id="00723-709">The following example shows an event handler for the <xref:System.Web.UI.WebControls.LinqDataSource.Updating> event that retrieves validation exceptions.</span></span>  
  
```vb  
Protected Sub LinqDataSource_Updating(ByVal sender As Object, _  
        ByVal e As LinqDataSourceUpdateEventArgs)  
    If (e.Exception IsNot Nothing) Then  
        For Each innerException As KeyValuePair(Of String, Exception) _  
               In e.Exception.InnerExceptions  
            Label1.Text &= innerException.Key & ": " & _  
                innerException.Value.Message & "<br />"  
        Next  
        e.ExceptionHandled = True  
    End If  
End Sub  
```  
  
```csharp  
protected void LinqDataSource_Updating(object sender,   
        LinqDataSourceUpdateEventArgs e)  
{  
    if (e.Exception != null)  
    {  
        foreach (KeyValuePair<string, Exception> innerException in   
             e.Exception.InnerExceptions)  
        {  
        Label1.Text += innerException.Key + ": " +   
            innerException.Value.Message + "<br />";  
        }  
        e.ExceptionHandled = true;  
    }  
}  
```  
  
 <span data-ttu-id="00723-710">前の例では、検証例外を取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-710">The previous example retrieves validation exceptions.</span></span> <span data-ttu-id="00723-711">値がプロパティの型と一致しない場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="00723-711">An exception might be thrown if a value does not match the type of the property.</span></span> <span data-ttu-id="00723-712">次の例のようにカスタマイズされたチェックからスロー可能性があります。</span><span class="sxs-lookup"><span data-stu-id="00723-712">It might also be thrown from a customized check such as the one in the following example.</span></span> <span data-ttu-id="00723-713">`OnAgeChanging`ことを確認するメソッドの数、`Age`プロパティが負でないです。</span><span class="sxs-lookup"><span data-stu-id="00723-713">The `OnAgeChanging` method checks that the number for the `Age` property is not negative.</span></span>  
  
```csharp  
partial void  OnAgeChanging(int? value)  
{  
    if (value < 0)  
    {  
        throw new Exception("Age cannot be a negative number.");  
    }  
}  
```  
  
```vb  
Private Sub OnAgeChanging(ByVal value As System.Nullable(Of Integer))  
    If (value < 0) Then  
        Throw New Exception("Age cannot be a negative number.")  
    End If  
End Sub  
```  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Where">
      <MemberSignature Language="C#" Value="public string Where { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Where" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberSignature Language="VB.NET" Value="Public Property Where As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ Where { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Where : string with get, set" Usage="System.Web.UI.WebControls.LinqDataSource.Where" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.Where</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-714">取得されるデータにレコードを含めるかどうかを決める条件を示す値を取得または設定します。</span><span class="sxs-lookup"><span data-stu-id="00723-714">Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</span></span></summary>
        <value><span data-ttu-id="00723-715">Where 句の作成に使用される文字列。</span><span class="sxs-lookup"><span data-stu-id="00723-715">A string that is used to create the Where clause.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-716">使用する、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティをクエリから返されるレコードの条件を指定します。</span><span class="sxs-lookup"><span data-stu-id="00723-716">You use the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to specify the conditions for the record to be returned from a query.</span></span> <span data-ttu-id="00723-717">構文、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティは、C# での LINQ の Where 句の構文と同じです。</span><span class="sxs-lookup"><span data-stu-id="00723-717">The syntax for the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property is the same as the syntax for a LINQ Where clause in C#.</span></span>  
  
 <span data-ttu-id="00723-718">結果のブール値では、式を指定する式を評価する場合と`true`特定の行の行が結果セットに含まれます。</span><span class="sxs-lookup"><span data-stu-id="00723-718">You specify an expression that results in a Boolean value, and if the expression evaluates to `true` for a given row, the row is included in the result set.</span></span> <span data-ttu-id="00723-719">式は、次の例に示すようと比較するには、列名、比較演算子、および値から構成されます。</span><span class="sxs-lookup"><span data-stu-id="00723-719">Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50"...>  
```  
  
 <span data-ttu-id="00723-720">論理によってリンクされている複数の式を指定する`AND`または`OR`演算子を使用する`&&`として論理 AND 演算子と`||`として次の例に示すように、論理 OR 演算子。</span><span class="sxs-lookup"><span data-stu-id="00723-720">To specify multiple expressions linked by logical `AND` or `OR` operators, you use `&&` as a logical AND operator and `||` as a logical OR operator, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where="Price > 50 && Price < 100"...>  
<asp:LinqDataSource ... Where="Price <= 50 || Price >= 100"...>  
```  
  
 <span data-ttu-id="00723-721">リテラル文字列値に対してプロパティをテストする場合は、リテラル文字列値を二重引用符で囲む必要があります。</span><span class="sxs-lookup"><span data-stu-id="00723-721">If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</span></span> <span data-ttu-id="00723-722">マークアップを囲む、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>句の値に次の例で示すように、単一引用符で。</span><span class="sxs-lookup"><span data-stu-id="00723-722">To do this in markup, enclose the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> clause value in single quotation marks, as shown in the following example:</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category = "Sports"' ... >  
```  
  
 <span data-ttu-id="00723-723">コード内のリテラル文字列値に対してテストするには、次の例に示すように二重引用符を挿入するために使用する言語を適切なエスケープ文字を使用します。</span><span class="sxs-lookup"><span data-stu-id="00723-723">To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</span></span>  
  
```vb  
LinqDataSource1.Where = "Category = ""Sports"""  
```  
  
```csharp  
LinqDataSource1.Where = "Category = \"Sports\"";  
```  
  
 <span data-ttu-id="00723-724">メソッドを使用する必要があります、文字列がより大きい、または別の文字列より小さいかどうかをテストする場合、<xref:System.String>クラスを使用してではなく`<`または`>`列の名前と値の文字列間の演算子。</span><span class="sxs-lookup"><span data-stu-id="00723-724">If you want to test whether a string is greater than or less than another string, you must use methods of the <xref:System.String> class instead of using `<` or `>` operators between the column name and the string value.</span></span> <span data-ttu-id="00723-725">次の例より大きい、またはより大きい、または「スポーツ」と等しく、小さいより小さいか等しい、カテゴリ値を持つ行を選択する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-725">The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</span></span>  
  
```  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") < 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") <= 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") > 0' ... >  
<asp:LinqDataSource ... Where='Category.CompareTo("Sports") >= 0' ... >  
```  
  
 <span data-ttu-id="00723-726">他のメソッドを使用することも、<xref:System.String>クラスなど、 <xref:System.String.StartsWith%2A>、<xref:System.String.EndsWith%2A>と<xref:System.String.Contains%2A>します。</span><span class="sxs-lookup"><span data-stu-id="00723-726">You can also use other methods of the <xref:System.String> class, such as <xref:System.String.StartsWith%2A>, <xref:System.String.EndsWith%2A>, and <xref:System.String.Contains%2A>.</span></span> <span data-ttu-id="00723-727">文字列を比較する方法の詳細については、次を参照してください。[文字列の比較](~/docs/standard/base-types/comparing.md)します。</span><span class="sxs-lookup"><span data-stu-id="00723-727">For more information about how to compare strings, see [Comparing Strings](~/docs/standard/base-types/comparing.md).</span></span> <span data-ttu-id="00723-728">場所の詳細については、句の構文を参照してください[C# 演算子](https://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)と[場所句](~/docs/csharp/language-reference/keywords/where-clause.md)。</span><span class="sxs-lookup"><span data-stu-id="00723-728">For more information about Where clause syntax, see [C# Operators](https://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43) and [where clause](~/docs/csharp/language-reference/keywords/where-clause.md).</span></span>  
  
 <span data-ttu-id="00723-729">Web ページを作成する場合に定義する静的な値に基づくフィルター処理、だけでなく実行時に評価されるに基づいて動的な値をフィルター処理できます。</span><span class="sxs-lookup"><span data-stu-id="00723-729">In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</span></span> <span data-ttu-id="00723-730">その場合は、名前付きパラメーターが含まれる、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティ値のプレース ホルダーとして機能します。</span><span class="sxs-lookup"><span data-stu-id="00723-730">In that case, you include a named parameter in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property that acts as a placeholder for the value.</span></span> <span data-ttu-id="00723-731">一致する名前を持つパラメーターを追加、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-731">You then add a parameter that has the matching name to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span>  
  
 <span data-ttu-id="00723-732">また、設定、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティを`true`にパラメーターを定義し、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-732">Alternatively, you can set the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property to `true` and define the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="00723-733">ときに、<xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A>プロパティは`true`で名前付きパラメーターを含める必要はありません、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-733">When the <xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A> property is `true`, you do not have to include the named parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="00723-734">代わりに、<xref:System.Web.UI.WebControls.LinqDataSource>コントロールが Where を自動的に生成句のパラメーターから、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-734">Instead, the <xref:System.Web.UI.WebControls.LinqDataSource> control automatically generates the Where clause from the parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> property.</span></span>  
  
 <span data-ttu-id="00723-735">データをフィルター処理する方法の詳細については、次を参照してください。[チュートリアル。選択して、LinqDataSource コントロールと GridView コントロールを使用してデータのサブセットをフィルター処理](https://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)します。</span><span class="sxs-lookup"><span data-stu-id="00723-735">For more information about how to filter data, see [Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls](https://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-736">次の例では、静的な条件に基づくクエリから返されるデータをフィルター処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-736">The following example shows how to filter the data returned from a query based on a static condition.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default5.aspx#5)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#5](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default5.aspx#5)]  
  
 <span data-ttu-id="00723-737">次の例では、実行時に、ユーザーによって提供される値に基づいてデータをフィルター処理する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="00723-737">The following example shows how to filter the data based on a value that is provided by the user at run time.</span></span> <span data-ttu-id="00723-738">この例では、<xref:System.Web.UI.WebControls.DropDownList>コントロールと<xref:System.Web.UI.WebControls.GridView>コントロールは、ページに表示されます。</span><span class="sxs-lookup"><span data-stu-id="00723-738">In this example a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.GridView> control are displayed on the page.</span></span> <span data-ttu-id="00723-739">ユーザーが内の値のいずれかを選択するときに、<xref:System.Web.UI.WebControls.DropDownList>コントロール、<xref:System.Web.UI.WebControls.LinqDataSource>からコントロールを選択します、`Products`テーブルを持つ行のみ`UserPrice`値と等しく、選択した値。</span><span class="sxs-lookup"><span data-stu-id="00723-739">When the user selects one of the values in the <xref:System.Web.UI.WebControls.DropDownList> control, the <xref:System.Web.UI.WebControls.LinqDataSource> control selects from the `Products` table only rows that have `UserPrice` values equal to the selected value.</span></span> <span data-ttu-id="00723-740"><xref:System.Web.UI.WebControls.GridView>コントロールは、フィルター選択されたデータを表示します。</span><span class="sxs-lookup"><span data-stu-id="00723-740">The <xref:System.Web.UI.WebControls.GridView> control then displays the filtered data.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WhereParameters">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.ParameterCollection WhereParameters" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property WhereParameters As ParameterCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::ParameterCollection ^ WhereParameters { System::Web::UI::WebControls::ParameterCollection ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.WhereParameters : System.Web.UI.WebControls.ParameterCollection" Usage="System.Web.UI.WebControls.LinqDataSource.WhereParameters" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Web.DynamicData.IDynamicDataSource.WhereParameters</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Category("Data")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.MergableProperty(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ParameterCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="00723-741">Where 句の作成に使用されるパラメーターのコレクションを取得します。</span><span class="sxs-lookup"><span data-stu-id="00723-741">Gets the collection of parameters that is used to create the Where clause.</span></span></summary>
        <value><span data-ttu-id="00723-742">Where 句を作成するために使用される、<see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> プロパティのパラメーターのコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-742">A collection of the parameters that are used to create the Where clause in the <see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /> property.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="00723-743"><xref:System.Web.UI.WebControls.LinqDataSource>コントロール内のパラメーターを使用して、 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Where を作成するコレクション実行時に句。</span><span class="sxs-lookup"><span data-stu-id="00723-743">The <xref:System.Web.UI.WebControls.LinqDataSource> control uses parameters in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to create the Where clause at run time.</span></span> <span data-ttu-id="00723-744">パラメーターを追加する、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクションで、1 つまたは複数の条件をプログラムで設定する場合に句。</span><span class="sxs-lookup"><span data-stu-id="00723-744">You add parameters to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection when you want to programmatically set one or more of the conditions in the Where clause.</span></span> <span data-ttu-id="00723-745">たとえば、姓の値と等しく、レコードをデータベース テーブルを検索する場合があります、<xref:System.Web.UI.WebControls.TextBox>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-745">For example, you might search a database table for records with a last name equal to the value of a <xref:System.Web.UI.WebControls.TextBox> control.</span></span> <span data-ttu-id="00723-746">その場合は、パラメーターを追加する、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>テキスト ボックスの値のコレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-746">In that case, you add a parameter to the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection for the text box value.</span></span>  
  
 <span data-ttu-id="00723-747">実行時に値を設定する必要はありませんがある場合、句がありませんを使用する、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>コレクション。</span><span class="sxs-lookup"><span data-stu-id="00723-747">If you do not have to set a value at run time in the Where clause, you do not have to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection.</span></span> <span data-ttu-id="00723-748">取得するフィールドを定義することができます、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-748">You can define the fields to retrieve in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property.</span></span> <span data-ttu-id="00723-749">たとえば、データベース テーブルから値を返す場所`LastName`マークアップでは、equals"Adams"の設定、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>プロパティを`'LastName = "Adams"'`パラメーターを指定せず。</span><span class="sxs-lookup"><span data-stu-id="00723-749">For example, to return values from a database table where `LastName` equals "Adams" in markup, set the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property to `'LastName = "Adams"'` without any parameters.</span></span>  
  
 <span data-ttu-id="00723-750">値を設定する、<xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A>各パラメーターに名前を割り当て、コレクションと内のプレース ホルダーを追加し、<xref:System.Web.UI.WebControls.LinqDataSource.Where%2A>そのパラメーターのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="00723-750">To set values in the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection, you assign a name to each parameter and then add a placeholder in the <xref:System.Web.UI.WebControls.LinqDataSource.Where%2A> property for that parameter.</span></span> <span data-ttu-id="00723-751">Where 句では、各パラメーター名を付ける、@ 記号。</span><span class="sxs-lookup"><span data-stu-id="00723-751">In the Where clause, preface each parameter name with the @ symbol.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="00723-752">次の例は、使用する方法を示します、 <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> Where を動的に作成するコレクション句。</span><span class="sxs-lookup"><span data-stu-id="00723-752">The following example shows how to use the <xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A> collection to dynamically create the Where clause.</span></span> <span data-ttu-id="00723-753"><xref:System.Web.UI.WebControls.LinqDataSource>コントロールで値を持つすべてのレコードを返します、`Price`でユーザーが選択されている値よりも大きい列、<xref:System.Web.UI.WebControls.DropDownList>コントロール。</span><span class="sxs-lookup"><span data-stu-id="00723-753">The <xref:System.Web.UI.WebControls.LinqDataSource> control returns all the records with a value in the `Price` column that is greater than the value selected by the user in a <xref:System.Web.UI.WebControls.DropDownList> control.</span></span>  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/cs/Default6.aspx#6)]
 [!code-aspx-vb[System.Web.UI.WebControls.LinqDataSource_Simple#6](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.LinqDataSource_Simple/vb/Default6.aspx#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>