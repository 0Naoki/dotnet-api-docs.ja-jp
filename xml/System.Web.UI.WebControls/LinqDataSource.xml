<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="LinqDataSource.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5eb47995a42e8b5a63458997b016e35704034a00a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">eb47995a42e8b5a63458997b016e35704034a00a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Enables the use of Language-Integrated Query (LINQ) in an ASP.NET Web page through markup text to retrieve and modify data from a data object.</source>
          <target state="translated">ASP.NET Web ページでマークアップ テキストを通じて統合言語クエリ (LINQ) を使用し、データ オブジェクトのデータを取得したり変更したりできるようにします。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In this topic:</source>
          <target state="translated">このトピックの内容:</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Introduction<ept id="p1">](#introduction)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>はじめに<ept id="p1">](#introduction)</ept></target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Order of Operations<ept id="p1">](#order_of_operations)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>操作の順序<ept id="p1">](#order_of_operations)</ept></target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Ordering Data<ept id="p1">](#ordering_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>データの順序<ept id="p1">](#ordering_data)</ept></target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Grouping Data<ept id="p1">](#grouping_data)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>データのグループ化<ept id="p1">](#grouping_data)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Data Modifications<ept id="p1">](#data_modifications)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>データの変更<ept id="p1">](#data_modifications)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Evaluating Values at Run Time<ept id="p1">](#evaluating_value_at_run_time)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>実行時に値を評価します。<ept id="p1">](#evaluating_value_at_run_time)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Working with Stored Procedures<ept id="p1">](#working_with_stored_procedures)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>ストアド プロシージャの使用<ept id="p1">](#working_with_stored_procedures)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source><bpt id="p1">[</bpt>Declarative Syntax<ept id="p1">](#declarative_syntax)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>宣言型の構文<ept id="p1">](#declarative_syntax)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Introduction</source>
          <target state="translated">はじめに</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Language-Integrated Query (LINQ) is a query syntax that defines a set of query operators that enable traversal, filter, and projection operations to be expressed in a declarative way in any .NET-based programming language.</source>
          <target state="translated">統合言語クエリ (LINQ) は、クエリ演算子のセットを定義するクエリ構文です。NET ベースのプログラミング言語です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The data object can be an in-memory data collection or an object that represents data from a database.</source>
          <target state="translated">データ オブジェクトには、メモリ内のデータ コレクションまたはデータベースからデータを表すオブジェクトを指定できます。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can retrieve or modify the data without having to write SQL commands for each operation.</source>
          <target state="translated">取得したり、各操作に対する SQL コマンドを記述することがなく、データを変更できます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control enables you to use LINQ in an ASP.NET Web page by setting properties in markup text.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールでは、マークアップ テキストでプロパティを設定して、ASP.NET Web ページに LINQ を使用することができます。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically generate the data commands.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールでは、LINQ to SQL を使用して、データ コマンドを自動的に生成します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">LINQ to SQL の詳細については、次を参照してください。 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>です。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are retrieving data from an in-memory data collection, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that contains the data collection.</source>
          <target state="translated">メモリ内のデータ コレクションからデータを取得する際に設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>データ コレクションを格納するクラスにプロパティです。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property or field that returns the data collection.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティをプロパティまたはフィールドをデータ コレクションを返します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, you might have a class named <ph id="ph1">`Person`</ph> that contains a property named <ph id="ph2">`FavoriteCities`</ph> that returns an array of string values.</source>
          <target state="translated">たとえば、という名前のクラスがある<ph id="ph1">`Person`</ph>という名前のプロパティを格納している<ph id="ph2">`FavoriteCities`</ph>文字列値の配列を返します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In that case, you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to <ph id="ph2">`Person`</ph> and set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to <ph id="ph4">`FavoriteCities`</ph>.</source>
          <target state="translated">その場合を設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティを<ph id="ph2">`Person`</ph>設定と、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティを<ph id="ph4">`FavoriteCities`</ph>です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you are querying a database, you must first create entity classes that represent the database and its tables.</source>
          <target state="translated">データベースのクエリを実行するときに、まず、データベースとそのテーブルを表すエンティティ クラスを作成する必要があります。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can use the <ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph> or the SqlMetal.exe utility to generate these classes.</source>
          <target state="translated">使用することができます、<ph id="ph1">[!INCLUDE[vs_ordesigner_long](~/includes/vs-ordesigner-long-md.md)]</ph>または SqlMetal.exe ユーティリティは、これらのクラスを生成します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the class that represents the database and set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the database table.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティをデータベースを表すクラスを設定し、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティをデータベース テーブルを表すプロパティをします。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order of Operations</source>
          <target state="translated">操作の順序</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control applies data operations in the following order:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、次の順序でのデータ操作を適用します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Where (specify which data records to return).</source>
          <target state="translated">場所 (データが返されるレコードの指定)。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order By (sort).</source>
          <target state="translated">順序 (並べ替え) ではします。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Group By (aggregate data records that share values).</source>
          <target state="translated">グループ (値を共有するデータの集計レコード) ではします。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Order Groups By (sort grouped data).</source>
          <target state="translated">(グループ化のデータの並べ替え) でグループを並べ替えます。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Select (specify which fields or properties to return).</source>
          <target state="translated">(どのフィールドまたはプロパティを返すの指定) を選択します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-sort (sort data records by a property that the user has selected).</source>
          <target state="translated">(ユーザーが選択されているプロパティでデータ レコードの並べ替え) を自動で並べ替えます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Auto-page (retrieve a subset of data records that were selected by the user).</source>
          <target state="translated">自動ページ (ユーザーが選択されているデータ レコードのサブセットを取得)。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can add conditions to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter the data records that are returned from a query.</source>
          <target state="translated">条件を追加することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>クエリから返されるデータ レコードをフィルター選択するプロパティです。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is not set, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves every record from the data object.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティが設定されていない、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、データ オブジェクトからすべてのレコードを取得します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Ordering Data</source>
          <target state="translated">データの順序</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify the names of properties from the returned data to sort by.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティを並べ替えるには、返されたデータからプロパティの名前を指定します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>で制御<ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph>または<ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティに設定されている<ph id="ph5">`true`</ph>の値を指定する必要があります、<ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">値を代入する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを含める必要もありますすべての identity 列は、クエリで返されるプロパティの一覧にします。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Grouping Data</source>
          <target state="translated">データのグループ化</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used to consolidate data records that have the same values.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティを指定するプロパティを使用してに同じ値を持つデータ レコードを統合します。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">データをグループ化するときに含める<ph id="ph1">`Key`</ph>と<ph id="ph2">`It`</ph>が動的に作成されたプロパティで、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>プロパティまたは複数のデータをグループ化に使用されたプロパティの値を参照します。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain all unique values in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">たとえば、という名前のプロパティによってグループ化する<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>プロパティにすべての一意の値が格納されます、<ph id="ph3">`Category`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>プロパティはデータのグループ内の個々 のレコードのコレクションを参照します。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">反復処理することができます、<ph id="ph1">`It`</ph>プロパティをグループ化操作に統合されている個々 のレコードを取得します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">たとえば、という名前のプロパティによってグループ化する場合<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>プロパティにはで共通の値を共有するすべての個々 のレコードが含まれています、<ph id="ph3">`Category`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify the properties to use for sorting the grouped data.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティをグループ化されたデータの並べ替えに使用するプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you group data, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property specifies how the individual records within the grouped data are sorted.</source>
          <target state="translated">データをグループ化するときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティでは、グループ化されたデータ内の各レコードの並べ替え方法を指定します。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves values for all the properties from a data object.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、データ オブジェクトからすべてのプロパティの値を取得します。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to specify which properties to return if you want to work with a subset of available properties.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを使用できるプロパティのサブセットを操作するかどうかを返すプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The Select operation is applied after the Where, Order By, and Group By operations.</source>
          <target state="translated">Select 操作が Where 句、後に適用される Order By と Group By 操作します。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Therefore, if you create an aliased name in a Select clause, the alias is not available in the other clauses.</source>
          <target state="translated">そのため、Select 句で別名を作成する場合は、エイリアスは他の句で使用できません。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Data Modifications</source>
          <target state="translated">データ変更</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can specify whether data modifications are enabled by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> properties.</source>
          <target state="translated">使用してデータの変更が有効にするかどうかを指定することができます、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The user interface for modifying data from a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control is typically provided through a data-bound control, such as a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">データを変更するためのユーザー インターフェイス、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール通常を介して提供される、データ バインド コントロールなど、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In addition to setting <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>, or <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> to <ph id="ph4">`true`</ph>, the following conditions are required to enable automatic data modifications:</source>
          <target state="translated">設定に加えて<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>、または<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>に<ph id="ph4">`true`</ph>データの自動変更を有効にする次の条件が必要があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティに値を割り当てることができません。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property cannot be assigned a value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティに値を割り当てることができません。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">割り当てられているクラス、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティから派生しなければなりません<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The property that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">割り当てられているプロパティ、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティから派生しなければなりません<ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can restrict which properties are displayed in a data-bound control in two ways.</source>
          <target state="translated">2 つの方法でデータ バインド コントロールに表示するプロパティを制限することができます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can either set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties, or you can define the fields for a data-bound control by adding <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph> controls.</source>
          <target state="translated">設定するか、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティのサブセットにプロパティが追加することで、データ バインド コントロールのフィールドを定義できます<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DataControlField&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>However, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, it means that automatic update, insert, and delete operations cannot be enabled.</source>
          <target state="translated">ただし、設定した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティ、そのことを意味する自動更新、挿入、および削除操作を有効にできません。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic data modifications while you work with a subset of available properties, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">使用可能なプロパティのサブセットを操作中に、データの自動変更を有効にする場合は設定しないでください、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Instead, retrieve all properties from the data object and manage which ones are displayed by using the data-bound control.</source>
          <target state="translated">代わりに、データ オブジェクトからすべてのプロパティを取得し、管理、データ バインド コントロールを使用して、どれが表示されます。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> properties to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールまたは<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールを設定する必要も、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph>プロパティ<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>This prevents the data-bound control from automatically including buttons for editing and deleting the data.</source>
          <target state="translated">これは、データ バインド コントロールが編集、およびデータを削除するためのボタンを自動的に追加することを防ぎます。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">データ バインド コントロールに表示されていない任意の値は、ビュー ステートに格納されます。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">渡すことが変更されていないデータ ソース データ更新を実行するとします。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Evaluating Values at Run Time</source>
          <target state="translated">実行時に値を評価します。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you have to evaluate values at run time for ordering, filtering, or grouping values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collections.</source>
          <target state="translated">評価する必要が値の並べ替え、実行時にフィルター処理、または値をグループ化するパラメーターを追加することができる場合、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>、または<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to specify default values, you can add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">既定値を指定する場合は、パラメーターを追加することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to examine or modify values before the data operation is executed, you can handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> events.</source>
          <target state="translated">確認またはデータ操作が実行される前に、値を変更する場合は、処理、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>、または<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You can also handle these events in order to cancel the data operation or to examine validation errors that occurred when you set properties in the data class based on user input.</source>
          <target state="translated">これらのイベントを処理できるは、データ操作をキャンセルするために、ユーザー入力に基づいてデータ クラスにプロパティを設定するときに発生した検証エラーを確認したりもできます。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>To examine values after the data operation has finished, handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>, <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>, <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>, or <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> events.</source>
          <target state="translated">値を確認するデータの操作が完了した後、処理、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>、 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>、または<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Working with Stored Procedures</source>
          <target state="translated">ストアド プロシージャの使用</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from a stored procedure by creating an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>のイベント ハンドラーを作成することで、ストアド プロシージャからデータを取得するコントロール、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>In the event handler, you call the method in the data context class that represents the stored procedure and set the result to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object.</source>
          <target state="translated">イベント ハンドラー メソッドを呼び出し、ストアド プロシージャを表すデータ コンテキスト クラス内とに、結果を設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>If you want to enable automatic update, insert, and delete operations for the data, the type that is returned from the method must match the type that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">自動更新を有効にする、insert、およびデータの削除操作をする場合、メソッドから返される必要がありますと型が一致で指定されている、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>For more information about creating data context methods, see <bpt id="p1">[</bpt>How to: Create DataContext methods mapped to stored procedures and functions (O/R Designer)<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>.</source>
          <target state="translated">データ コンテキストのメソッドの作成の詳細については、次を参照してください。<bpt id="p1">[</bpt>する方法: ストアド プロシージャおよび関数 (O/r デザイナー) にマップされる DataContext の作成メソッド<ept id="p1">](http://msdn.microsoft.com/library/e7ca32f1-50b3-48af-ad92-ceafd749296a)</ept>です。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Declarative Syntax</source>
          <target state="translated">宣言型の構文</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that retrieves data from an entity class named <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>という名前のエンティティ クラスからデータを取得するコントロール<ph id="ph2">`Products`</ph>です。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The entity class could have been generated by using the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility.</source>
          <target state="translated">使用して、そのエンティティ クラスが生成される可能性がありますが、<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>または SqlMetal.exe ユーティリティです。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is set to return only records that have a value in the <ph id="ph2">`Price`</ph> property greater than 50.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティの値を持つレコードのみを返す、 <ph id="ph2">`Price`</ph> 50 を超えるプロパティです。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールにバインドする、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールにデータを表示します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that enables users to update, delete, and insert records in the data source.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>更新、削除、およびデータ ソースのレコードを挿入できるようにするコントロール。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control and enables users to see and modify the data.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールにバインドする、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>を制御しを参照してくださいおよびデータを変更することができます。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Notice that no SQL commands are required in order to select, update, delete, or insert the records.</source>
          <target state="translated">選択、更新、削除、またはレコードを挿入するために SQL コマンドが必要ないことに注意してください。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event that sets the data object based on a value in the Web page.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>Web ページ内の値に基づいて、データ オブジェクトを設定するイベントです。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">例を次に、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>制御されている 2 つの列でグループを構成します。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>プロパティを 2 つのプロパティを持つオブジェクトを参照して<ph id="ph2">`ProductCategory`</ph>と<ph id="ph3">`Color`</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed (aliased) to <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">によって表されるオブジェクト<ph id="ph1">`It`</ph>(エイリアス) の名前を変更したが、<ph id="ph2">`Products`</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping.</source>
          <target state="translated">名前が変更された<ph id="ph1">`Products`</ph>オブジェクトは、グループ内の個々 のレコードのコレクションを格納します。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>Each instance will contain all the columns from the <ph id="ph1">`Products`</ph> table.</source>
          <target state="translated">各インスタンスにはからのすべての列が含まれて、<ph id="ph1">`Products`</ph>テーブル。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls that display the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">次の例は 2 つ<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>からデータを表示するコントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>前の例で制御します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data, and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">1 つ<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>グループ化されたデータと、その他のコントロールが表示されます<ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>コントロールがそのグループに属している製品の個々 の名前を表示します。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Web.UI.WebControls.LinqDataSource">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">入れ子になったデータ バインド コントロールの<ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`Products`</ph>のエイリアスは、これは、<ph id="ph3">`It`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates an Order By clause based on values in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールが <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters" /&gt;</ph> コレクション内の値に基づいて Order By 句を動的に作成するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control creates the Order By clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> 場合、<ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph>コントロールは、Order By 句を作成、それ以外の<ph id="ph3">&lt;see langword="false" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates an Order By clause that is based on the values in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内の値に基づいている Order By 句を動的に作成する、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control sorts the data by the first parameter and then additionally sorts the data for each additional parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがデータを並べ替えるとき、最初のパラメーターと、各追加パラメーターのデータをさらに並べ替えます。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Order By clause.</source>
          <target state="translated">パラメーターを含む<ph id="ph1">`null`</ph>または空の値は、Order By 句に含まれません。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph>, because the parser dynamically creates the Order By clause.</source>
          <target state="translated">設定しない、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティと、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>に設定されている<ph id="ph3">`true`</ph>パーサーは、Order By 句を動的に作成されるため、します。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> is set to <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは例外をスロー、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>に設定されている<ph id="ph3">`true`</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティの値が割り当てられます。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>と制御、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>に設定<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">パラメーターが含まれている、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>から並べ替えプロパティに基づいてデータの名前をユーザー コレクションを選択、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control dynamically creates a Where clause based on values defined in the <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールが <ph id="ph2">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters" /&gt;</ph> コレクションに定義された値に基づいて Where 句を動的に作成するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the <ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control will create the Where clause; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールが Where 句を作成する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The default is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>When you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates the Where clause from the parameters in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">設定すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、Where を動的に作成では、パラメーターから句、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Each parameter that you add to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection must have its <ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph> property set to a value that matches a property in the data object that is being queried.</source>
          <target state="translated">追加する各パラメーター、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクションが必要です、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.Parameter.Name%2A&gt;</ph>プロパティをクエリが実行されるデータ オブジェクトのプロパティに一致する値に設定します。</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated Where clause will check whether the value specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection equals the value of the matching property in the data object.</source>
          <target state="translated">自動的に生成された句はどこで確認するかどうかに指定された値、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション データ オブジェクトに一致するプロパティの値に等しい。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>If you provide more than one parameter, the parameters are linked with a logical <ph id="ph1">`AND`</ph> operation.</source>
          <target state="translated">1 つ以上のパラメーターを指定する場合、パラメーターにリンク論理<ph id="ph1">`AND`</ph>操作します。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Parameters that contain <ph id="ph1">`null`</ph> or an empty value are not included in the Where clause.</source>
          <target state="translated">パラメーターを含む<ph id="ph1">`null`</ph>または Where 句で空の値が含まれていない句。</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The automatically generated <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause can test only for equality and can link parameters only with the <ph id="ph2">`AND`</ph> operation.</source>
          <target state="translated">自動的に生成された<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>句が等価性のみをテストできますおよびのみを持つパラメーターをリンクできる、<ph id="ph2">`AND`</ph>操作します。</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> if you have to add a condition that does not test for equality or if you have to relate parameters with the <ph id="ph3">`OR`</ph> operation.</source>
          <target state="translated">設定しないでください、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>等しいかどうかをテストしないその条件を追加する必要がある場合、またはパラメーターに関連付ける必要がある場合、<ph id="ph3">`OR`</ph>操作します。</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You can accomplish these tasks by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`false`</ph> and adding placeholders in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for each parameter in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">設定して、これらのタスクを行うことができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>内のプレース ホルダーを追加して、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>内の各パラメーターのプロパティ、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>In the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property, preface each placeholder name with the @ symbol.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティ、各プレース ホルダー名をはじめ、@ 記号。</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>You do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, because the parser dynamically creates the Where clause.</source>
          <target state="translated">設定しない、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティと、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティは<ph id="ph3">`true`</ph>パーサーは、Where を動的に作成されるため、句。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph3">`true`</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is assigned values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは例外をスロー、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティは<ph id="ph3">`true`</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティの値が割り当てられます。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>と制御、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>に設定<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is bound to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to display the data that is returned from the query.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールにバインドする、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>クエリから返されるデータを表示します。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control is included that is populated with three values.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロールが次の 3 つの値が入力されます。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection with the name set to <ph id="ph2">`Category,`</ph> which matches one of the properties of the data object.</source>
          <target state="translated">パラメーターが含まれている、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>設定した名前を持つコレクション<ph id="ph2">`Category,`</ph>データ オブジェクトのプロパティのいずれかに一致します。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>Its <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph> property is set to the ID of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ControlParameter.ControlID%2A&gt;</ph>の ID に設定されて、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically creates the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to filter records based on the value that the user selects from the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールが自動的に作成、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>からユーザーを選択する値に基づいて、レコードをフィルターするプロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause">
          <source>The query returns the records whose <ph id="ph1">`Category`</ph> property matches the value that the user has selected from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">クエリには、レコードが返されますが<ph id="ph1">`Category`</ph>プロパティから、ユーザーが選択した値に一致する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports navigation through sections of the data at run time.</source>
          <target state="translated">実行時に <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールがデータ セクションでのナビゲーションをサポートするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can page through the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザーがデータを閲覧できる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable paging in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>でページングを有効にする、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>To enable the user to page through the data, connect a data-bound control that provides the interface for paging to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">データをページにユーザーを有効にするには、接続へのページングのインターフェイスを提供するデータ バインド コントロール、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves only enough records for one page in the data-bound control.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがデータ バインド コントロール内の 1 つのページのための十分なレコードだけを取得します。</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>It uses the <ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph> and <ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph> methods to retrieve the records for the current page.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Linq.Enumerable.Skip%2A&gt;</ph>と<ph id="ph2">&lt;xref:System.Linq.Enumerable.Take%2A&gt;</ph>を現在のページのレコードを取得するメソッド。</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティに設定<ph id="ph3">`true`</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールにバインドされている、<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoPage">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users page through the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowPaging%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールに設定されて<ph id="ph3">`true`</ph>がデータをユーザー ページをできるようにするインターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Gets or sets a value that indicates whether the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control supports sorting the data at run time.</source>
          <target state="translated">実行時に <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールがデータの並べ替えをサポートするかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the user can sort the data; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">ユーザーがデータを並べ替えられる場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control supports two approaches for sorting data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、データを並べ替えるための 2 つの方法をサポートしています。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to enable run-time sorting or you can set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to define the sorting at design time.</source>
          <target state="translated">使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>または実行時の並べ替えを有効にするプロパティが設定できる、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>デザイン時の並べ替えを定義するプロパティです。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property to <ph id="ph2">`true`</ph> to enable sorting in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is based on the sort expression from a data-bound control.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>で並べ替えを有効にする<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>データ バインド コントロールから、並べ替え式に基づいているコントロール。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The data-bound control provides the interface to enable the user to select at run time which property to use for sorting.</source>
          <target state="translated">データ バインド コントロールでは、実行時に、並べ替えに使用するプロパティを選択するユーザーを有効にするインターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>You can programmatically set the order in which data is returned by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to the property or properties used for sorting.</source>
          <target state="translated">プログラムで設定してデータが返されます順序を設定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティをプロパティまたはプロパティの並べ替えに使用します。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property is set to a property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is <ph id="ph3">`true`</ph>, the sort expression from the data-bound control is applied after the expression in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティがプロパティに設定され、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>プロパティは<ph id="ph3">`true`</ph>で式の後に、データ バインド コントロールから並べ替え式が適用される、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>Therefore, this determines the final sorting of the data.</source>
          <target state="translated">そのため、データの最終的な並べ替えを決定します。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property set to <ph id="ph3">`true`</ph> and a <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control that is bound to the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>プロパティに設定<ph id="ph3">`true`</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールにバインドされている、<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.AutoSort">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is set to <ph id="ph3">`true`</ph> to provide the interface that lets users sort the data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView.AllowSorting%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールに設定されている<ph id="ph3">`true`</ph>ユーザーがデータを並べ替えできるインターフェイスを提供します。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Occurs after an instance of the context type object is created.</source>
          <target state="translated">コンテキスト タイプ オブジェクトのインスタンスが作成された後に発生します。</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph> event to examine the context type object or examine exceptions that are raised while the object is being created.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreated&gt;</ph>コンテキスト型のオブジェクトを確認またはオブジェクトの作成中に発生する例外を確認するイベントです。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the context type object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property of the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is associated with this event.</source>
          <target state="translated">コンテキスト型のオブジェクトを取得する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>のプロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>このイベントに関連付けられているオブジェクト。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>You retrieve the exception that was raised during the data operation from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">データの操作中に発生した例外を取得する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>The context type object is created during select, update, insert, and delete operations and is reused throughout the request.</source>
          <target state="translated">コンテキスト型オブジェクトでは、select、update、insert、および削除操作中に作成され、要求全体で再利用します。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">1 回の場合、イベントは発生しませんがあります。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object during the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">これは、プログラムで設定する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>プロパティ中にオブジェクトを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreated">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">追加の条件は、元のいずれかの値を表示状態、または内のオブジェクトに格納する必要はありません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>プロパティを実装して、<ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>Occurs before an instance of the context type object is created.</source>
          <target state="translated">コンテキスト タイプ オブジェクトのインスタンスが作成される前に発生します。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control creates an instance of the type that is specified in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールで指定されている型のインスタンスを作成、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control calls the default constructor of the data context object to create an instance of the object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、オブジェクトのインスタンスを作成するデータ コンテキスト オブジェクトの既定のコンス トラクターを呼び出します。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>It is possible that you have to use a non-default constructor or you have to create an object that differs from the one specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">既定以外のコンス トラクターを使用する必要がかで指定されたものとは異なるオブジェクトを作成する必要がある可能性が、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>In that case, you must handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event and manually create the data context object.</source>
          <target state="translated">その場合は、処理する必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph>イベント データ コンテキスト オブジェクトを手動で作成します。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The context type object is created during select, update, insert, and delete operations.</source>
          <target state="translated">コンテキスト型のオブジェクトは、select、update、insert、および削除操作中に作成されます。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>There is one time when the event is not raised.</source>
          <target state="translated">1 回の場合、イベントは発生しませんがあります。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>This is when you programmatically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property to an object in an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">これは、プログラムで設定する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>プロパティのイベント ハンドラー内のオブジェクトを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>An additional condition is that either the original values do not have to be stored in view state, or the object in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph> property implements the <ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph> interface.</source>
          <target state="translated">追加の条件は、元のいずれかの値を表示状態、または内のオブジェクトに格納する必要はありません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Result%2A&gt;</ph>プロパティを実装して、<ph id="ph2">&lt;xref:System.Data.Linq.ITable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The following example shows how to create the data context object by using a non-default constructor during the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph> event.</source>
          <target state="translated">次の例は、中に既定以外のコンス トラクターを使用して、データ コンテキスト オブジェクトを作成する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextCreating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextCreating">
          <source>The code assigns the object to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph> property.</source>
          <target state="translated">オブジェクトを代入して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceContextEventArgs.ObjectInstance%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>Occurs before disposing the context type object.</source>
          <target state="translated">コンテキスト タイプ オブジェクトが破棄される前に発生します。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.ContextDisposing">
          <source>You handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph> event to dispose the object manually, or to perform clean-up that is specific to the object before the object is destroyed.</source>
          <target state="translated">処理する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextDisposing&gt;</ph>を手動でオブジェクトを破棄する場合、またはクリーンアップ操作は、オブジェクトに固有のオブジェクトが破棄される前に実行するイベントです。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Gets or sets the name of the type that contains the property whose value has the data that you want to retrieve.</source>
          <target state="translated">取得するデータが値として格納されているプロパティを含む型の名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The name of the class to retrieve data from.</source>
          <target state="translated">取得するデータが含まれているクラスの名前。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control to retrieve data from either an in-memory data collection or a database, you must specify two properties.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>メモリ内のデータ コレクションまたはデータベースからデータを取得するコントロールを 2 つのプロパティを指定する必要があります。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The first is a data context class that represents the data source.</source>
          <target state="translated">最初は、データ ソースを表すデータ コンテキスト クラスです。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The second is a property in the data context class that contains the data.</source>
          <target state="translated">2 つ目は、データを含むデータ コンテキスト クラスのプロパティです。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>You set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the data context class and you set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the data collection that contains the data.</source>
          <target state="translated">設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティ データ コンテキスト クラスの名前を設定、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティ データを格納しているデータ コレクションをします。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For example, when you retrieve data from a database, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that represents the database.</source>
          <target state="translated">たとえば、データベースからデータを取得するときに設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティをデータベースを表すクラスの名前にします。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Also set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that represents the table in the database.</source>
          <target state="translated">設定も、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティをデータベース内のテーブルを表すプロパティ。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To generate classes from a database, use the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph> or the SqlMetal.exe utility to automatically generate those classes.</source>
          <target state="translated">データベースからクラスを生成するには、使用、<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>または SqlMetal.exe ユーティリティを自動的にこれらのクラスを生成します。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>When you retrieve data from an in-memory data collection such as an array, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to the name of the class that contains the array property.</source>
          <target state="translated">配列などのメモリ内のデータ コレクションからデータを取得する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティ配列プロパティが含まれているクラスの名前にします。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>Then set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the property that gets the array.</source>
          <target state="translated">設定して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティの配列を取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>To enable automatic update, insert, or delete operations through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the class assigned to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>.</source>
          <target state="translated">自動更新を有効にするには、挿入、または削除操作を<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>に割り当てられているクラスを制御する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティから派生しなければなりません<ph id="ph3">&lt;xref:System.Data.Linq.DataContext&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>In addition, the property assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">さらに、プロパティは割り当て、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティから派生しなければなりません<ph id="ph2">&lt;xref:System.Data.Linq.Table%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>If you do not need to enable automatic update, insert, or delete operations, you can assign the name of any type of class to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property.</source>
          <target state="translated">必要な自動更新を有効にする insert、またはしない削除操作、割り当てることができますをクラスの任意の型の名前、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">クラスのインスタンスからデータを選択する方法については、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property to a class that contains an array of strings.</source>
          <target state="translated">次の例は、設定する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>を文字列の配列を含むクラスのプロパティです。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>It also shows how to set the property to a class (generated by the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) that represents a database.</source>
          <target state="translated">クラスにプロパティを設定する方法も示しています (によって生成された、 <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>) を表すデータベース。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">という名前のクラス<ph id="ph1">`ExampleDataContext`</ph>を表すデータベース テーブルが表示されないようにこの例ではします。</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>For this example to work, you must create this class by adding a LINQ To SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">この例を実行するは、名前付き Example.dbml テーブルをドラッグして、上にムービーをという名前の LINQ に SQL クラスを追加することによってこのクラスを作成する必要があります、<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">という名前のクラス<ph id="ph1">`ExampleDataContext`</ph>という名前のプロパティと<ph id="ph2">`Movies`</ph>が生成されます。</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.ContextTypeName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">次の例は、という名前のクラスを示しています。<ph id="ph1">`MovieLibrary`</ph>で参照されている、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>Returns a queryable view.</source>
          <target state="translated">クエリ可能なビューを返します。</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateQueryableView">
          <source>A queryable view.</source>
          <target state="translated">クエリ可能なビュー。</target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>Creates a new instance of the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> class that is associated with this control.</source>
          <target state="translated">このコントロールに関連付けられている <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSourceView" /&gt;</ph> クラスの新しいインスタンスを作成します。</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>An object that acts as the interface for data-bound controls.</source>
          <target state="translated">データ バインド コントロールのインターフェイスとして動作するオブジェクト。</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.CreateView">
          <source>To provide a custom view, you can override this method in a derived class.</source>
          <target state="translated">カスタム ビューを提供するには、派生クラスでは、このメソッドをオーバーライドすることができます。</target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be deleted.</source>
          <target state="translated">削除するレコードの行のキー値。</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">データの競合を検出するために評価される行の値。</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs a delete operation.</source>
          <target state="translated">削除の操作を実行します。</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the delete operation.</source>
          <target state="translated">削除操作によって影響を受けたレコードの数。</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常がありませんを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>コードからメソッドです。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>When you use a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a data-bound control, the data-bound control will automatically call the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when the user takes action to delete a record.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>データ バインド コントロール、データ バインド コントロールでは自動的に呼び出す、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>メソッドは、ユーザーがレコードを削除する操作とします。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to create your own process for deleting data.</source>
          <target state="translated">明示的に呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>メソッド データを削除するための独自のプロセスを作成するときにします。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Delete(System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>For example, you can call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph> method when you want to delete a record based on an event outside the data-bound control.</source>
          <target state="translated">たとえばを呼び出すことができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Delete%2A&gt;</ph>データ バインド コントロールの外部イベントに基づいて、このメソッドは、レコードを削除するとします。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Occurs when a delete operation has finished.</source>
          <target state="translated">削除操作が終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event to catch any exceptions from the delete operation, or to examine output parameters after the operation has finished.</source>
          <target state="translated">処理、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> delete 操作から例外をキャッチする場合、または操作が完了した後、出力パラメーターを検査するイベントです。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleted">
          <source>You can retrieve the output parameters from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">出力パラメーターを取得することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>イベント ハンドラーに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>This property is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated">このプロパティは、<ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> クラスでは使用されません。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.DeleteParameters">
          <source>A collection of parameters.</source>
          <target state="translated">パラメーターのコレクション。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Occurs before a delete operation.</source>
          <target state="translated">削除操作の前に発生します。</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event to validate the object to be deleted, to examine data validation errors from the data class, to change a value before the delete operation, or to cancel the delete operation.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>を削除する、削除操作の前に値を変更または削除操作をキャンセルするデータ クラスからのデータの検証エラーを検査するオブジェクトを検証するイベントです。</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control passes a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object to event handlers for the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>パスを制御する<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>オブジェクトのイベント ハンドラーを<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains the data that will be deleted and enables you to cancel the delete operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>オブジェクトには、データが削除され、削除操作をキャンセルすることができますが含まれています。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If the data class throws a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> exception, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph> object contains that exception in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph> property.</source>
          <target state="translated">データ クラスをスローする場合、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceValidationException&gt;</ph> 、例外、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs&gt;</ph>オブジェクトにはで、その例外が含まれています、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.Exception%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">かどうかのイベント ハンドラーで例外がスローされます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>イベント、そのイベント ハンドラーで例外を処理する必要があります。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">例外は、のイベント ハンドラーに渡すことはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleted&gt;</ph>イベント (を通じて、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>オブジェクト)。</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>プロパティには、後にスローされた例外だけが含まれています、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Deleting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>The code cancels the delete operation based on a property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph> property and a value from the Web page.</source>
          <target state="translated">コードでは、プロパティに基づいて、削除操作のキャンセル、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceDeleteEventArgs.OriginalObject%2A&gt;</ph>プロパティと、Web ページからの値。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Deleting">
          <source>In the example, when the <ph id="ph1">`OnSale`</ph> property is set to <ph id="ph2">`true`</ph>, the user must select a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph> control to confirm that a record should be deleted.</source>
          <target state="translated">例では、ときに、<ph id="ph1">`OnSale`</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、ユーザーを選択する必要があります、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.CheckBox&gt;</ph>コントロールをレコードが削除されることを確認します。</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Gets or sets a value that indicates whether data records can be deleted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールを通じてデータ レコードを削除できるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic delete operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">削除の自動実行が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to delete a data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>を通じてデータ レコードを削除するユーザーを有効にするときに、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to delete the data.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは LINQ to SQL を使用してデータを削除するコマンドを自動的に作成します。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>You must include an interface that lets users select a record to delete, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">ユーザーなどを削除するレコードを選択できるインターフェイスを含める必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic delete operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールが自動削除の各操作をサポートしていないときに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティまたは<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティが設定します。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if a delete operation is tried.</source>
          <target state="translated">その場合は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、削除操作を試みた場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>を持つコントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableDelete%2A&gt;</ph>'éý'<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableDelete">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users delete a data record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールは、データが表示され、ユーザーがデータ レコードを削除できるボタンを作成します。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Gets or sets a value that indicates whether data records can be inserted through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールを通じてデータ レコードを挿入できるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic insert operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">挿入の自動実行が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to insert a new data record through the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>から新しいデータ レコードを挿入するユーザーを有効にするときに、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to insert the data.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがデータを挿入するコマンドを自動的に作成する LINQ to SQL を使用します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>You must include an interface that lets users insert a new record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">ユーザーがなど、新しいレコードを挿入できるインターフェイスを含める必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic insert operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールが自動挿入操作をサポートしていないときに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティまたは<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティが設定します。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an insert operation is tried.</source>
          <target state="translated">その場合は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、挿入操作を試みた場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>を持つコントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableInsert%2A&gt;</ph>'éý'<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableInsert">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and displays a button that switches the control to insert mode where users can create and save a new record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールは、データを表示し、モード、ユーザーが作成し、新しいレコードの保存を挿入するコントロールを切り替えるボタンが表示されます。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>Gets or sets the value that indicates whether changes to the data context object are tracked.</source>
          <target state="translated">データ コンテキスト オブジェクトの変更履歴を記録するかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the data context object is tracked for changes; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">データ コンテキスト オブジェクトの変更履歴を記録する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The default is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は、<ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property is only used when selecting data from a LINQ To SQL data context object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph>プロパティは、LINQ に SQL データ コンテキストのオブジェクトからデータを選択するときにのみ使用します。</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>When you are interacting with read-only data, setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph> property to <ph id="ph2">`false`</ph> improves performance because the data is not cached to determine if it has changed.</source>
          <target state="translated">読み取り専用のデータをやり取りする場合、設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>データが変更されているかどうかを決定するキャッシュされませんのでパフォーマンスが向上します。</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>However, it also disables deferred query execution.</source>
          <target state="translated">ただし、クエリの遅延実行も無効にします。</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableObjectTracking">
          <source>This property must be set to <ph id="ph1">`true`</ph> if you want to use deferred query execution.</source>
          <target state="translated">このプロパティに設定する必要があります<ph id="ph1">`true`</ph>クエリの遅延実行を使用する場合。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Gets or sets a value that indicates whether data records can be updated through the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> コントロールを通じてデータ レコードを更新できるかどうかを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if automatic update operations are enabled; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">更新の自動実行が有効な場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The default value is <ph id="ph1">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="false" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you want to enable users to update a data record by using the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>を使用してデータ レコードを更新するユーザーを有効にするときに、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>When <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> is <ph id="ph2">`true`</ph>, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses LINQ to SQL to automatically create the command to update the data.</source>
          <target state="translated">ときに<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>は<ph id="ph2">`true`</ph>、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがデータを更新するコマンドを自動的に作成する LINQ to SQL を使用します。</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>You must include an interface that lets users update a record, such as a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control.</source>
          <target state="translated">ユーザーがなど、レコードを更新できるインターフェイスを含める必要があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control does not support automatic update operations when the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property or the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is set.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールが自動更新操作をサポートしていないときに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティまたは<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティが設定します。</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>In that case, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception if an update operation is tried.</source>
          <target state="translated">その場合は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、更新操作を試みた場合に例外をスローします。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that has <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph> set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>を持つコントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.EnableUpdate%2A&gt;</ph>'éý'<ph id="ph3">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.EnableUpdate">
          <source>A <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control displays the data and creates a button that lets users update a data record.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールは、データが表示され、ユーザーがデータ レコードを更新できるボタンを作成します。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>Gets or sets a value that specifies which properties are used for grouping the retrieved data.</source>
          <target state="translated">取得したデータのグループ化に使用するプロパティを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>A string that is used to create the Group By clause.</source>
          <target state="translated">Group By 句の作成に使用される文字列。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to specify which properties are used for consolidating data records that have the same values.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティを同じ値を持つデータ レコードを統合するために使用するプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph2">`Name`</ph>, all the records in the query that have the same <ph id="ph3">`Name`</ph> property value are returned as a single consolidated record.</source>
          <target state="translated">たとえば、設定した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティを<ph id="ph2">`Name`</ph>が同じである、クエリ内のすべてのレコード<ph id="ph3">`Name`</ph>プロパティの値は 1 つの統合されたレコードとして返されます。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can assign more than one property to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property by enclosing all the properties in the <ph id="ph2">`new`</ph> function and separating each property by using a comma.</source>
          <target state="translated">1 つ以上のプロパティを割り当てることができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティ内のすべてのプロパティを囲むことによって、<ph id="ph2">`new`</ph>関数し、コンマを使用して、各プロパティを分離します。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, to group by the properties <ph id="ph1">`Name`</ph> and then <ph id="ph2">`Category`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to <ph id="ph4">`new(Name, Category)`</ph>.</source>
          <target state="translated">プロパティでグループ化する場合など、<ph id="ph1">`Name`</ph>し<ph id="ph2">`Category`</ph>、設定、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティを<ph id="ph4">`new(Name, Category)`</ph>です。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The values in the property that are used for grouping are returned through a generated property named <ph id="ph1">`Key`</ph>.</source>
          <target state="translated">グループ化に使用されるプロパティの値は、という名前の生成されたプロパティを通じて返される<ph id="ph1">`Key`</ph>です。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You include the <ph id="ph1">`Key`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve the grouped values.</source>
          <target state="translated">含める、<ph id="ph1">`Key`</ph>プロパティに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティをグループ化された値を取得します。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can set the <ph id="ph1">`Key`</ph> property to an alias by using the <ph id="ph2">`As`</ph> keyword, but you are not required to use an alias.</source>
          <target state="translated">設定することができます、<ph id="ph1">`Key`</ph>プロパティを使用して別名を<ph id="ph2">`As`</ph>キーワード、ですが、別名を使用する必要はありません。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For example, you might set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property to a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">たとえば、設定することがあります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>という名前のプロパティをプロパティ<ph id="ph2">`Category`</ph>です。</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can retrieve the consolidated values from the <ph id="ph1">`Category`</ph> property by setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph3">`new(Key As ProductCategory)`</ph>.</source>
          <target state="translated">統合の値を取得することができます、<ph id="ph1">`Category`</ph>プロパティを設定して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを<ph id="ph3">`new(Key As ProductCategory)`</ph>です。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can access the individual records in a grouping by including the <ph id="ph1">`It`</ph> property in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">含めることによって、グループ内の個々 のレコードにアクセスすることができます、<ph id="ph1">`It`</ph>プロパティに、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`It`</ph> property contains a collection of records that share a value in the grouped property.</source>
          <target state="translated"><ph id="ph1">`It`</ph>プロパティには、グループ化されたプロパティの値を共有するレコードのコレクションが含まれています。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records.</source>
          <target state="translated">反復処理することができます、<ph id="ph1">`It`</ph>個々 のレコードを取得するプロパティです。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property is often used with aggregation methods.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティは集計メソッドでよく使用します。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">次の集計メソッドを使用することができます。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: LinqDataSource Web サーバー コントロールの概要<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>と<bpt id="p2">[</bpt>する方法: グループおよび LinqDataSource コントロールを使用してデータを集計<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that groups the returned data by a property named <ph id="ph2">`Category`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>という名前のプロパティによって返されるデータをグループ化するコントロール<ph id="ph2">`Category`</ph>です。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>It returns the shared values and calculates the average price for the grouped records.</source>
          <target state="translated">共有の値を返し、グループ化されたレコードの平均価格を計算します。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control that is configured to group by two columns.</source>
          <target state="translated">例を次に、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>制御されている 2 つの列でグループを構成します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The <ph id="ph1">`Key`</ph> property references an object that has two properties, <ph id="ph2">`ProductCategory`</ph> and <ph id="ph3">`Color`</ph>.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>プロパティを 2 つのプロパティを持つオブジェクトを参照して<ph id="ph2">`ProductCategory`</ph>と<ph id="ph3">`Color`</ph>です。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The object represented by <ph id="ph1">`It`</ph> is renamed <ph id="ph2">`Products`</ph>.</source>
          <target state="translated">によって表されるオブジェクト<ph id="ph1">`It`</ph>名前が変更<ph id="ph2">`Products`</ph>です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The renamed <ph id="ph1">`Products`</ph> object contains a collection of the individual records in a grouping, and each instance contains all the columns from the Products table.</source>
          <target state="translated">名前が変更された<ph id="ph1">`Products`</ph>オブジェクトには、グループ内の個々 のレコードのコレクションが含まれ、各インスタンスには、Products テーブルからのすべての列が含まれています。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> controls for displaying the data from the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control in the previous example.</source>
          <target state="translated">次の例は 2 つ<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>からデータを表示するコントロールを<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>前の例で制御します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>One <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the grouped data and the other <ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control displays the individual names of products that belong to that group.</source>
          <target state="translated">1 つ<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>グループ化されたデータと、その他のコントロールが表示されます<ph id="ph2">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>コントロールがそのグループに属している製品の個々 の名前を表示します。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupBy">
          <source>The nested data-bound control's <ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph> property is set to <ph id="ph2">`Products`</ph>, which is the alias for the <ph id="ph3">`It`</ph> object.</source>
          <target state="translated">入れ子になったデータ バインド コントロールの<ph id="ph1">&lt;xref:System.Web.UI.WebControls.BaseDataList.DataSource%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`Products`</ph>のエイリアスは、これは、<ph id="ph3">`It`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Gets the collection of parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 句の作成に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The parameters that are used to create the Group By clause.</source>
          <target state="translated">Group By 句の作成に使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to create the Group By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内のパラメーターを使用して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>実行時に、Group By 句を作成するコレクション。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Typically you will not use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data.</source>
          <target state="translated">通常は使用しません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>コレクション データをグループ化します。</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>Instead, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">代わりに、使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection only when a value in the Group By clause must be set at run time and that value is not a property name.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>場合のみ、Group By 句内の値のコレクションは、実行時に設定する必要があり、その値がプロパティ名ではありません。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection to group data based on whether the <ph id="ph2">`LastName`</ph> property in the data records equals a value provided by the user.</source>
          <target state="translated">たとえば、使用して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>コレクション データをグループ化するかどうかに基づいて、<ph id="ph2">`LastName`</ph>データ レコードのプロパティがユーザーによって提供される値に等しい。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to group data by a property and that property does not have to be set at run time, you can define the grouping property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property.</source>
          <target state="translated">プロパティでデータをグループ化するし、そのプロパティは実行時に設定する必要はありませんでグループ化プロパティを定義できます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>For example, to return values from a database table grouped by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">たとえば、データベース テーブルから値を返すでグループ化された<ph id="ph1">`LastName`</ph>設定、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 「姓」パラメーターを使用せずにします。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>If you want to dynamically group data by a property, create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property as needed.</source>
          <target state="translated">プロパティによって動的にデータをグループ化する場合は、イベント ハンドラーを作成、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベントとカスタマイズ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティに応じて。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You cannot assign the name of a property as the value for a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">パラメーターの値として、プロパティの名前を割り当てることはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection when you want to add a condition to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property that must be set at run time.</source>
          <target state="translated">パラメーターを追加する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>する条件を追加する場合に、コレクション、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>プロパティを実行時に設定する必要があります。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property for that named parameter.</source>
          <target state="translated">値を設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupByParameters%2A&gt;</ph>コレクション、各パラメーターに名前を割り当てるし、追加するにプレース ホルダー、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph>という名前のパラメーターのプロパティです。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.GroupByParameters">
          <source>In the Group By clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Group By 句で各パラメーター名をはじめ、@ 記号。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The row values to be inserted into the data source.</source>
          <target state="translated">データ ソースに挿入する行の値。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Performs an insert operation.</source>
          <target state="translated">挿入の操作を実行します。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The number of rows affected by the insert operation.</source>
          <target state="translated">挿入操作の影響を受けた行の数。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常がありませんを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>コードからメソッドです。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when the user takes action to insert a new record.</source>
          <target state="translated">データ バインド コントロールが自動的に呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>メソッドは、ユーザーが新しいレコードを挿入する操作とします。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method when you want to create your own process for inserting data.</source>
          <target state="translated">明示的に呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>メソッド データを挿入するための独自のプロセスを作成するときにします。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows how to programmatically insert a new record in the data source after the user clicks a button.</source>
          <target state="translated">次の例では、プログラムで、ユーザーがボタンをクリックした後、データ ソースで新しいレコードを挿入する方法を示します。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains default values to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph> method.</source>
          <target state="translated">コードを渡します、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>既定値を格納しているオブジェクトの値を<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Insert%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Insert(System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">次の例では、前の例のマークアップを示します。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Occurs when an insert operation has finished.</source>
          <target state="translated">挿入操作が終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event to catch any exceptions from the insert operation or to examine the values after the insert operation has finished.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>挿入操作から例外をキャッチする場合、または挿入操作が完了した後に値を調べイベント。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>You can retrieve the new values through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">使用して、新しい値を取得することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>イベント ハンドラーに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>For example, you can use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object to retrieve the identity property generated by a database for a new data record.</source>
          <target state="translated">たとえば、使用することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>新しいデータのレコードのデータベースによって生成された id プロパティを取得するオブジェクト。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserted">
          <source>The following example shows how to create an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event that checks for exceptions and retrieves the identity property for the new record.</source>
          <target state="translated">次の例は、イベント ハンドラーを作成する方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>例外をチェックし、新しいレコードの id プロパティを取得するイベントです。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Occurs before an insert operation.</source>
          <target state="translated">挿入操作の前に発生します。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event to validate the object to be inserted, to examine data validation errors from the data class, to change a value before the insert operation, or to cancel the insert operation.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>を挿入する、insert 操作の前に値を変更または挿入操作をキャンセルするデータ クラスからのデータの検証エラーを検査するオブジェクトを検証するイベントです。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object passed to event handlers for this event contains the new object to insert in the data source.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>このイベントには、データ ソースに挿入する新しいオブジェクトが含まれており、オブジェクトがイベント ハンドラーに渡されます。</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If a validation error occurs during the insert operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">挿入操作中に検証エラーが発生した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>オブジェクトには、データ クラスによってスローされる検証例外が含まれています。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>A validation error occurs if a value to be inserted does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">挿入する値がデータ クラスでプロパティの型と一致しない場合、またはカスタムの検証チェックに合格していない場合、検証エラーが発生します。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">イベント ハンドラーで、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>イベント、検証の例外を取得して、適切なアクションを実行することができます。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">かどうかのイベント ハンドラーで例外がスローされます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>イベント、そのイベント ハンドラーで例外を処理する必要があります。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">例外は、のイベント ハンドラーに渡すことはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserted&gt;</ph>イベント (を通じて、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>オブジェクト)。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>プロパティには、後にスローされた例外だけが含まれています、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that modifies data before the insert operation.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>挿入操作の前にデータを変更するイベントです。</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The object from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph> property is cast to a type named <ph id="ph2">`Product`</ph>.</source>
          <target state="translated">オブジェクトから、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs.NewObject%2A&gt;</ph>プロパティがという名前の型にキャスト<ph id="ph2">`Product`</ph>です。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`DateModified`</ph> property of the <ph id="ph2">`Product`</ph> object is set to the current date and time.</source>
          <target state="translated"><ph id="ph1">`DateModified`</ph>のプロパティ、<ph id="ph2">`Product`</ph>オブジェクトが現在の日付と時刻に設定します。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Inserting&gt;</ph>検証例外を取得するイベントです。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">前の例では、検証の例外を取得します。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">値がプロパティの型と一致しない場合、例外がスローされる可能性があります。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">次の例のようなカスタマイズされたチェックからもスロー可能性があります。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Inserting">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph>メソッドでは、ことを確認の数、<ph id="ph2">`Age`</ph>プロパティは負の値ではありません。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Gets the collection of parameters that are used during an insert operation.</source>
          <target state="translated">挿入の操作中に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The parameters that are used during an insert operation.</source>
          <target state="translated">挿入の操作中に使用されるパラメーターのコレクション。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>Typically the values that are needed for an insert operation are passed to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control by the data-bound control.</source>
          <target state="translated">挿入操作に必要な値が渡される通常、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>データ バインドされたコントロールによって制御します。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You specify insert parameters when you want to provide a default value or define whether to convert empty values to <ph id="ph1">`null`</ph>.</source>
          <target state="translated">Insert、既定値を指定するときに値を定義や空の値に変換するかどうかを指定する<ph id="ph1">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>You do not have to provide a parameter for every value that will be inserted, only for the values that must be handled when the user does not provide a value.</source>
          <target state="translated">ユーザーが値を指定しない場合に処理する必要がある値に対してのみ、挿入される値ごとにパラメーターを指定する必要はありません。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values that you provide in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection are used only for fields that are defined in the data source but that are not bound in the data control.</source>
          <target state="translated">指定する値、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>コレクションは、データ ソースで定義されているが、データ コントロールにバインドされていないフィールドでのみ使用します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>For example, suppose a database table has columns that are named Name, Address, and PostalCode, but a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph> control that is bound to the table is bound only to the Name and Address fields.</source>
          <target state="translated">たとえば、データベース テーブルに列名、アドレス、および郵便番号、名前付きであると仮定しますが、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.ListView&gt;</ph>名前と住所のフィールドにのみ、テーブルにバインドされているコントロールがバインドされています。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used only for the PostalCode field.</source>
          <target state="translated">内の値、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>コレクションは、PostalCode フィールドに対してのみ使用されます。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>They will not be used for the Name and Address field.</source>
          <target state="translated">これらは、名前と住所のフィールドの使用されません。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>This is true even if no value is entered for those fields.</source>
          <target state="translated">これは、それらのフィールドの値が入力されていない場合でも当てはまります。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the data-bound control autogenerates fields for all fields in the data source, no values from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection will be used.</source>
          <target state="translated">かどうか、データ バインド コントロール自動生成するデータのすべてのフィールドのソース フィールドから値のない、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>コレクションを使用します。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with a parameter that provides a default value in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph> collection.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>で既定値を提供するパラメーターを持つコントロール、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.InsertParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.InsertParameters">
          <source>If the user does not provide a value for the <ph id="ph1">`Category`</ph> property, the default value that is provided by the parameter is saved in the database.</source>
          <target state="translated">ユーザーがの値を指定しない場合、<ph id="ph1">`Category`</ph>プロパティ、パラメーターによって提供される既定値は、データベースに保存します。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>The event data.</source>
          <target state="translated">イベントのデータ。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnInit(System.EventArgs)">
          <source>Initializes the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> オブジェクトを初期化します。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>An <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> object that contains the event data.</source>
          <target state="translated">イベント データを格納している <ph id="ph1">&lt;see cref="T:System.EventArgs" /&gt;</ph> オブジェクト。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.OnUnload(System.EventArgs)">
          <source>Raises the <ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="E:System.Web.UI.Control.Unload" /&gt;</ph> イベントを発生させます。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Gets or sets a value that specifies which fields are used for ordering the retrieved data.</source>
          <target state="translated">取得したデータの並べ替えに使用するフィールドを示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>A string that is used to create the Order By clause.</source>
          <target state="translated">Order By 句の作成に使用される文字列。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to specify which properties from the returned data to use for sorting.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティから返されるデータの並べ替えに使用するプロパティを指定します。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The property for sorting the data must exist in the original data source, but it does not have to be included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">データの並べ替えプロパティが元のデータ ソースに存在する必要がありますに含まれる必要はありません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can add a space and <ph id="ph1">`Ascending`</ph>, <ph id="ph2">`ASC`</ph>, <ph id="ph3">`Descending`</ph>, or <ph id="ph4">`DESC`</ph> to a property in the <ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> string in order to specify how the ordered data is returned.</source>
          <target state="translated">スペースを追加して<ph id="ph1">`Ascending`</ph>、 <ph id="ph2">`ASC`</ph>、 <ph id="ph3">`Descending`</ph>、または<ph id="ph4">`DESC`</ph>内のプロパティを<ph id="ph5">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>順序付けされたデータを返す方法を指定するために文字列です。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>You can provide more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property by separating each property by using a comma.</source>
          <target state="translated">1 つ以上のプロパティを指定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>コンマを使用して各プロパティを分離することによりプロパティです。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>For example, to order by properties named <ph id="ph1">`LastName`</ph> and <ph id="ph2">`FirstName`</ph>, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property to "LastName, FirstName".</source>
          <target state="translated">たとえば、という名前のプロパティ順に<ph id="ph1">`LastName`</ph>と<ph id="ph2">`FirstName`</ph>、設定されて、 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 「姓、名」にプロパティです。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with <ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph> or <ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph> and the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is set to <ph id="ph5">`true`</ph>, you must provide a value in the <ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">使用する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>で制御<ph id="ph2">[!INCLUDE[ss2k](~/includes/ss2k-md.md)]</ph>または<ph id="ph3">[!INCLUDE[ssEW](~/includes/ssew-md.md)]</ph>と<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティに設定されている<ph id="ph5">`true`</ph>の値を指定する必要があります、<ph id="ph6">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>By default, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph> property is <ph id="ph2">`true`</ph>.</source>
          <target state="translated">既定では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoPage%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If you assign a value to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, you must also include all identity columns in the list of properties that is returned in the query.</source>
          <target state="translated">値を代入する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを含める必要もありますすべての identity 列は、クエリで返されるプロパティの一覧にします。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>If the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, a data-bound control can pass a sort expression to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control at run time.</source>
          <target state="translated">場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoSort%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、データ バインド コントロールに並べ替え式を渡すことができます、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>実行時に制御します。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will apply the sort expression from the data-bound control after it applies the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、適用した後、データ バインド コントロールから、並べ替え式に適用されます、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>Therefore, the data is returned according to the sort expression from the data-bound control.</source>
          <target state="translated">したがって、データは、データ バインド コントロールからは、並べ替え式に従って返されます。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderBy">
          <source>The following example returns data in reverse alphabetical order based on values in the <ph id="ph1">`Category`</ph> property.</source>
          <target state="translated">次の例では、データを返しますの値に基づいて順序を逆に、<ph id="ph1">`Category`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Gets the collection of parameters that are used to create the Order By clause.</source>
          <target state="translated">Order By 句の作成に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The parameters that are used for creating the Order By clause.</source>
          <target state="translated">Order By 句の作成に使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection to create the Order By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内のパラメーターを使用して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>実行時に、Order By 句を作成するコレクション。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>Typically you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> when you add parameters to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">一般に設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>へのパラメーターを追加すると、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>, each parameter in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection is added to the Order By clause in the sequence that they are specified in the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>、内の各パラメーター、 <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> 、Order By 句に指定されている、シーケンス内にコレクションの要素を追加、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, the parameters do not have to be named because they are applied in sequence and are not matched to a placeholder.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>パラメーターを順番に適用され、プレース ホルダーには一致していませんので名前を指定する必要はありません。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>If you do not have to set a value at run time in the Order By clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Order By 句での実行時に値を設定する必要はない場合は、使用する必要はありません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can define the fields to use for ordering the data in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property.</source>
          <target state="translated">内のデータの並べ替えに使用するフィールドを定義することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, to return values from a database table ordered by <ph id="ph1">`LastName`</ph>, set <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> to "LastName" without any parameters.</source>
          <target state="translated">たとえば、データベース テーブルから値を返す順で<ph id="ph1">`LastName`</ph>設定、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> 「姓」パラメーターを使用せずにします。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph> property, but this approach has limited application.</source>
          <target state="translated">パラメーターを設定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクション内のプレース ホルダーにパラメーターに一致して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderBy%2A&gt;</ph>プロパティが、この方法が制限されているアプリケーション。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>When you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection cannot represent a column name.</source>
          <target state="translated">この方法では、パラメーターを使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>コレクションは、列名を表すことはできません。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>You can set a parameter to a value and then compare that value to values in a property.</source>
          <target state="translated">パラメーターの値に設定し、その値をプロパティに値を比較できます。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">たとえば、プロパティの値は、パラメーターによって表される実行時の値より小さいかどうかに基づいてデータを注文できます。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>The following example shows a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control with the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> property set to <ph id="ph3">`true`</ph>.</source>
          <target state="translated">次の例は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> プロパティが <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateOrderByClause%2A&gt;</ph> に設定された <ph id="ph3">`true`</ph> コントロールを示したものです。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderByParameters">
          <source>A parameter is included in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph> collection that orders the data based on the property name that a user selects from a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated">パラメーターが含まれている、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderByParameters%2A&gt;</ph>から並べ替えプロパティに基づいてデータの名前をユーザー コレクションを選択、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Gets or sets the fields that are used for ordering grouped data.</source>
          <target state="translated">グループ化されたデータの並べ替えに使用するフィールドを取得または設定します。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>A string that is used to create the Order Groups By clause.</source>
          <target state="translated">グループの Order By 句の作成に使用される文字列。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property to specify how the groups of data are sorted.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティ データのグループの並べ替え方法を指定します。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>For example, you can group by the <ph id="ph1">`CategoryID`</ph> property and then sort each category ID group by the average of the <ph id="ph2">`Price`</ph> property.</source>
          <target state="translated">たとえば、グループ化できます、<ph id="ph1">`CategoryID`</ph>プロパティと各カテゴリ ID でグループの平均化し、並べ替え、<ph id="ph2">`Price`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property only when you have grouped the data.</source>
          <target state="translated">設定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティ データをグループ化されている場合にのみです。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property without setting the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> property, the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control throws an exception.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティ設定を指定せず、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.GroupBy%2A&gt;</ph> 、プロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは例外をスローします。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The property that is used to sort the data must be either a property that is used to group the data, or the result of an aggregation function on the grouped data.</source>
          <target state="translated">データの並べ替えに使用されるプロパティは、データをグループに使用されるプロパティまたはグループ化されたデータの集計関数の結果のいずれかにする必要があります。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>To specify how the data is sorted, you can add a space and the string "Ascending", "ASC", "Descending", or "DESC" to a property name in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> string.</source>
          <target state="translated">データの並べ替え方法を指定することができますに追加する場所と、文字列"Ascending"、"ASC"、"Descending"または"DESC"のプロパティ名、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>文字列。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>You can specify more than one property in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">1 つ以上のプロパティを指定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>Separate each property by using a comma.</source>
          <target state="translated">コンマを使用して、各プロパティを区切ります。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using two properties, and how to sort the grouped data by using one of those properties.</source>
          <target state="translated">次の例では、2 つのプロパティを使用してデータをグループ化方法とそれらのプロパティのいずれかを使用してグループ化されたデータを並べ替える方法を示します。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from a table named <ph id="ph1">`Products`</ph> is grouped by using properties named <ph id="ph2">`CategoryID`</ph> and <ph id="ph3">`Discontinued`</ph>.</source>
          <target state="translated">という名前のテーブルからデータを<ph id="ph1">`Products`</ph>という名前のプロパティを使用して、グループ化<ph id="ph2">`CategoryID`</ph>と<ph id="ph3">`Discontinued`</ph>です。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The grouped data is sorted by the <ph id="ph1">`CategoryID`</ph> property.</source>
          <target state="translated">グループ化されたデータを並べ替えて、<ph id="ph1">`CategoryID`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The following example shows how to group the data by using a property, and how to sort it based on the results of an aggregation function.</source>
          <target state="translated">次の例では、集計関数の結果に基づいてソートする方法と、プロパティを使用してデータをグループ化する方法を示します。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>The data from the <ph id="ph1">`Products`</ph> table is grouped by using the <ph id="ph2">`CategoryID`</ph> property.</source>
          <target state="translated">データ、<ph id="ph1">`Products`</ph>を使用してテーブルがグループ化、<ph id="ph2">`CategoryID`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy">
          <source>It is sorted based on the average of the <ph id="ph1">`UnitPrice`</ph> property within each group.</source>
          <target state="translated">平均値に基づいて並べ替えられますが、<ph id="ph1">`UnitPrice`</ph>各グループ内のプロパティです。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>Gets the collection of parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">Order Groups By 句の作成に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The parameters that are used to create the Order Groups By clause.</source>
          <target state="translated">グループの Order By 句の作成に使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection to create the Order Groups By clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内のパラメーターを使用して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>実行時に、グループの Order By 句を作成するコレクション。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You add values to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection only when you must set values at run time in the Order Groups By clause.</source>
          <target state="translated">値を追加する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>コレクションは、グループの Order By 句の実行時に値を設定する必要がある時だけです。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can define the fields that are used to order the data by using the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">使用して、データの並べ替えに使用されるフィールドを定義することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection and match the parameters to placeholders in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph> property.</source>
          <target state="translated">パラメーターを設定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>コレクション内のプレース ホルダーにパラメーターに一致して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsBy%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>However, when you use this approach, the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph> collection cannot represent a column name; they must represent values.</source>
          <target state="translated">ただし、この方法では、パラメーターを使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters%2A&gt;</ph>コレクションは、列名を表すことはできません。 これらの値を表す必要があります。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>You can set a parameter to a value and then compare that value to a property.</source>
          <target state="translated">パラメーターの値に設定し、その値をプロパティを比較できます。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.OrderGroupsByParameters">
          <source>For example, you can order the data based on whether the values in a property are less than the run-time value represented by the parameter.</source>
          <target state="translated">たとえば、プロパティの値は、パラメーターによって表される実行時の値より小さいかどうかに基づいてデータを注文できます。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Gets or sets the properties and calculated values that are included in the retrieved data.</source>
          <target state="translated">取得したデータに含まれるプロパティと計算値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A string that is used to create the Select clause.</source>
          <target state="translated">Select 句の作成に使用される文字列。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control retrieves all the properties (data columns) from the data object.</source>
          <target state="translated">設定しない場合、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> 、プロパティ、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、データ オブジェクトからすべてのプロパティ (データの列) を取得します。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to retrieve a subset of properties from the object or to calculate new values when the data is being retrieved.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティまたはオブジェクトからプロパティのサブセットを取得するデータを取得するときに、新しい値を計算します。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You specify which properties to retrieve by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the names of the properties that you want to include in the returned data.</source>
          <target state="translated">設定を取得するプロパティを指定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティによって返されるデータに追加するプロパティの名前をします。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you retrieve a subset of properties from the data object, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control dynamically creates a class that contains only the properties that you specify in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">データ オブジェクトからプロパティのサブセットを取得する場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールで指定したプロパティのみを含むクラスを動的に作成する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>A class is also created dynamically if you calculate properties that are not properties in the data object.</source>
          <target state="translated">データ オブジェクトのプロパティではないプロパティを計算する場合は、クラスが動的に作成されます。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In these cases, the object returned from the query is not an instance of the class that is specified in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property.</source>
          <target state="translated">このような場合は、クエリから返されるオブジェクトはで指定されているクラスのインスタンス、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, you must use the <ph id="ph1">`new`</ph> method in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to indicate that a new class is returned from the query.</source>
          <target state="translated">代わりに、使用する必要があります、<ph id="ph1">`new`</ph>メソッドで、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>新しいクラスがクエリから返されたことを示すプロパティです。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, to return only the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> properties from an object that contains more than these properties, set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph4">`new(FirstName, LastName)`</ph>.</source>
          <target state="translated">たとえば、のみを返す、<ph id="ph1">`FirstName`</ph>と<ph id="ph2">`LastName`</ph>プロパティを格納するオブジェクトから複数のこれらのプロパティを設定、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを<ph id="ph4">`new(FirstName, LastName)`</ph>です。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will dynamically create the new class that you specified in the <ph id="ph2">`new`</ph> method.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールで指定した新しいクラスを動的に作成、<ph id="ph2">`new`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the <ph id="ph1">`As`</ph> keyword to assign an alias to a selected value.</source>
          <target state="translated">使用することができます、<ph id="ph1">`As`</ph>キーワードを選択した値にエイリアスを割り当てます。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you assign an alias, you must include the aliased properties in the <ph id="ph1">`new`</ph> method.</source>
          <target state="translated">別名を割り当てた場合は、別名のプロパティを含める必要があります、<ph id="ph1">`new`</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any data-bound control that binds to the results from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control must refer to the property by the alias.</source>
          <target state="translated">任意のデータ バインド コントロールからの結果にバインドする、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、別名でプロパティを参照する必要があります。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to <ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>, the data-bound control can access two properties, <ph id="ph3">`SalesRegion`</ph> and <ph id="ph4">`RevenueThousands`</ph>.</source>
          <target state="translated">たとえば、設定した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティを<ph id="ph2">`new(Region As SalesRegion, Revenue / 1000 As RevenueThousands)`</ph>、データ バインド コントロールが 2 つのプロパティにアクセスできる<ph id="ph3">`SalesRegion`</ph>と<ph id="ph4">`RevenueThousands`</ph>です。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You use the <ph id="ph1">`new`</ph> function in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property according to the conditions listed in the following table.</source>
          <target state="translated">使用する、<ph id="ph1">`new`</ph>で機能、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>条件に従ってプロパティが次の表に一覧表示します。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Select</source>
          <target state="translated">選択</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Use of new</source>
          <target state="translated">新規のを使用します。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Example</source>
          <target state="translated">例</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single property.</source>
          <target state="translated">1 つのプロパティです。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> not needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 必要ありません。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Multiple properties.</source>
          <target state="translated">複数のプロパティです。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 必要です。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Single or multiple properties that have an alias.</source>
          <target state="translated">別名を持つ複数のプロパティまたは 1 です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`new`</ph> needed.</source>
          <target state="translated"><ph id="ph1">`new`</ph> 必要です。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you want to enable automatic data modifications, but you do not want to display all the properties from the data object, do not set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">データの自動変更を有効にするデータ オブジェクトからのすべてのプロパティを表示したくない場合は設定しないでください、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Instead, manage the display through the data-bound control.</source>
          <target state="translated">代わりに、管理、データ バインド コントロールを表示します。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph> control or the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control, you must also set the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph> or the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph> property to <ph id="ph5">`false`</ph>.</source>
          <target state="translated">使用すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DetailsView&gt;</ph>コントロールまたは<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールを設定する必要も、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DetailsView.AutoGenerateRows%2A&gt;</ph>または<ph id="ph4">&lt;xref:System.Web.UI.WebControls.GridView.AutoGenerateColumns%2A&gt;</ph>プロパティを<ph id="ph5">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>Any values that are not displayed in the data-bound control are stored in view state.</source>
          <target state="translated">データ バインド コントロールに表示されていない任意の値は、ビュー ステートに格納されます。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>They are passed unchanged to the data source when the data update is performed.</source>
          <target state="translated">渡すことが変更されていないデータ ソース データ更新を実行するとします。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data in the query, you can include aggregate methods in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">集計のメソッドを含めることができます、クエリ内のデータをグループ化すると、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can use the following aggregate methods:</source>
          <target state="translated">次の集計メソッドを使用することができます。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Average(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Sum(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Max(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Min(`</ph> <bpt id="p1">*</bpt>column<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`Where(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></source>
          <target state="translated"><ph id="ph1">`All(`</ph> <bpt id="p1">*</bpt>condition<ept id="p1">*</ept> <ph id="ph2">`)`</ph></target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For more information, see <bpt id="p1">[</bpt>NIB: LinqDataSource Web Server Control Overview<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept> and <bpt id="p2">[</bpt>How to: Group and Aggregate Data Using the LinqDataSource Control<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>NIB: LinqDataSource Web サーバー コントロールの概要<ept id="p1">](http://msdn.microsoft.com/library/104cfc3f-7385-47d3-8a51-830dfa791136)</ept>と<bpt id="p2">[</bpt>する方法: グループおよび LinqDataSource コントロールを使用してデータを集計<ept id="p2">](http://msdn.microsoft.com/library/b922cf69-251f-4158-b405-ea960993a1af)</ept>です。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>When you group data, you can include <ph id="ph1">`Key`</ph> and <ph id="ph2">`It`</ph>, which are dynamically created properties, in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">データをグループ化するときに含める<ph id="ph1">`Key`</ph>と<ph id="ph2">`It`</ph>が動的に作成されたプロパティで、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> property refers to the values in the property or properties that were used to group the data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>プロパティまたは複数のデータをグループ化に使用されたプロパティの値を参照します。</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`Key`</ph> property will contain each unique value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">たとえば、という名前のプロパティによってグループ化する場合<ph id="ph1">`Category`</ph>、<ph id="ph2">`Key`</ph>プロパティに一意の値ごとに格納されます、<ph id="ph3">`Category`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`It`</ph> property refers to a collection of individual records in a grouping of data.</source>
          <target state="translated"><ph id="ph1">`It`</ph>プロパティはデータのグループ内の個々 のレコードのコレクションを参照します。</target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can iterate over the <ph id="ph1">`It`</ph> property to retrieve the individual records that have been consolidated in the grouping operation.</source>
          <target state="translated">反復処理することができます、<ph id="ph1">`It`</ph>プロパティをグループ化操作に統合されている個々 のレコードを取得します。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>For example, if you group by a property named <ph id="ph1">`Category`</ph>, the <ph id="ph2">`It`</ph> property contains all the individual records that share a common value in the <ph id="ph3">`Category`</ph> property.</source>
          <target state="translated">たとえば、という名前のプロパティによってグループ化する場合<ph id="ph1">`Category`</ph>、<ph id="ph2">`It`</ph>プロパティにはで共通の値を共有するすべての個々 のレコードが含まれています、<ph id="ph3">`Category`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>If you include the <ph id="ph1">`It`</ph> keyword in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property when you group data, you must assign an alias to the <ph id="ph3">`It`</ph> keyword.</source>
          <target state="translated">含める場合は、<ph id="ph1">`It`</ph>キーワード、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>データをグループ化すると、プロパティのエイリアスを割り当てる必要があります、<ph id="ph3">`It`</ph>キーワード。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will throw an exception if <ph id="ph2">`It`</ph> does not have an alias.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは例外をスロー<ph id="ph2">`It`</ph>エイリアスはありません。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>You can assign an alias to the <ph id="ph1">`Key`</ph> keyword, but this is not required.</source>
          <target state="translated">エイリアスを割り当てることができます、<ph id="ph1">`Key`</ph>キーワードが、これは必要ありません。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to a subset of properties in the data object.</source>
          <target state="translated">次の例は、設定する方法を示します、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティのデータ オブジェクトのプロパティのサブセットをします。</target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The following example shows how to retrieve values in a property that has been used to group data, and to retrieve the average for the grouped records.</source>
          <target state="translated">次の例では、データをグループ化に使用されているプロパティの値を取得して、グループ化されたレコードの平均値を取得する方法を示します。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>The <ph id="ph1">`Key`</ph> keyword contains the property that has been used for grouping data.</source>
          <target state="translated"><ph id="ph1">`Key`</ph>キーワードには、データをグループ化するために使用されているプロパティが含まれています。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Select">
          <source>In this example, <ph id="ph1">`Key`</ph> will contain the shared values from the <ph id="ph2">`ProductCategory`</ph> property.</source>
          <target state="translated">この例では<ph id="ph1">`Key`</ph>から共有の値を含む、<ph id="ph2">`ProductCategory`</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Occurs when a data retrieval operation has finished.</source>
          <target state="translated">データ取得操作が終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event to catch any exceptions from the data retrieval operation or to examine the data object after the retrieval operation has finished.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>データ取得操作から例外をキャッチする場合、または取得操作が完了した後、データ オブジェクトを検査するイベントです。</target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selected">
          <source>The object is available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">オブジェクトがから利用可能な<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>イベント ハンドラーに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Occurs before a data-retrieval operation.</source>
          <target state="translated">データ取得操作の前に発生します。</target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event in order to perform the following tasks:</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>次のタスクを実行するためにイベント。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify parameters for data retrieval.</source>
          <target state="translated">データの取得のパラメーターを変更します。</target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Generate the query programmatically.</source>
          <target state="translated">プログラムでクエリを生成します。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Modify the values for sorting or paging.</source>
          <target state="translated">並べ替えとページングの値を変更します。</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Perform custom sorting or paging.</source>
          <target state="translated">カスタムの並べ替えとページングを実行します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Cancel the data-retrieval operation.</source>
          <target state="translated">データ取得操作をキャンセルします。</target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph> object that is passed to event handlers for this event contains the parameters for the data-retrieval operation.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs&gt;</ph>このイベントには、データ取得操作のパラメーターが含まれており、イベント ハンドラーに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>You can modify the parameters in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event handler before the query executes, or you can create a new result set and assign that to the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">内のパラメーターを変更することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>クエリを実行または新しい結果セットを作成して割り当てるをする前に、イベント ハンドラー、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>Your ability to implement custom sorting or paging in handlers for this event might be limited by the control that is bound to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>.</source>
          <target state="translated">カスタムの並べ替えまたはこのイベントは、コントロールにバインドされているによって制限される可能性がありますのハンドラーでページングを実装する機能、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>For example, when the column header of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control is clicked, the control performs automatic sorting which might override whatever order you establish in the event handler.</source>
          <target state="translated">たとえばの列見出し、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールがクリックされると、コントロールが自動並べ替えする可能性がありますオーバーライドする任意の順序を確立、イベント ハンドラーを実行します。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">かどうかのイベント ハンドラーで例外がスローされます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント、そのイベント ハンドラーで例外を処理する必要があります。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">例外は、のイベント ハンドラーに渡すことはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selected&gt;</ph>イベント (を通じて、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>オブジェクト)。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>プロパティには、後にスローされた例外だけが含まれています、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The handler creates a query that retrieves values from an array of string values in the Web page.</source>
          <target state="translated">ハンドラーは、Web ページ内の文字列値の配列から値を取得するクエリを作成します。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Selecting">
          <source>The following example shows how to assign the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property to the object that is returned from a method that represents a stored procedure.</source>
          <target state="translated">次の例を割り当てる方法を示しています、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>をストアド プロシージャを表すメソッドから返されるオブジェクトのプロパティです。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>Gets the collection of parameters that are used during a data-retrieval operation.</source>
          <target state="translated">データ取得の操作中に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The parameters that are used to create the Select clause.</source>
          <target state="translated">Select 句の作成に使用されるパラメーター。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to create the Select clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内のパラメーターを使用して、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>実行時に、Select 句を作成するコレクション。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection when you want to use run-time values in the Select clause.</source>
          <target state="translated">パラメーターを追加する、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> Select 句での実行時の値を使用するときのコレクション。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, you can add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property in the user's profile.</source>
          <target state="translated">たとえばへのパラメーターを追加することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>ユーザーのプロファイルでは、プロパティを表すコレクション。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can then use that property and a value from the data source to calculate a new value.</source>
          <target state="translated">データ ソースから新しい値を計算するのに、そのプロパティと値を使用することができますし、します。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>If you do not have to set a value at run time in the Select clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Select 句での実行時に値を設定する必要はない場合は、使用する必要はありません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You can define the properties to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property.</source>
          <target state="translated">取得するプロパティを定義することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>For example, to return the <ph id="ph1">`FirstName`</ph> and <ph id="ph2">`LastName`</ph> values from a database table, set <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> to "FirstName, LastName" without any parameters.</source>
          <target state="translated">例については、返される、<ph id="ph1">`FirstName`</ph>と<ph id="ph2">`LastName`</ph>データベース テーブルから値を設定<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>"firstname、LastName"パラメーターを使用せずします。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection, you add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property for the named parameter.</source>
          <target state="translated">値を設定する、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> 、コレクション内のプレース ホルダーを追加する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>名前付きパラメーターのプロパティです。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>In the Select clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">各パラメーター名をはじめ、Select 句で、@ 記号。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>You cannot use a parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection to represent a property name.</source>
          <target state="translated">内のパラメーターを使用することはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>プロパティ名を表すコレクション。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>To dynamically set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property to the name of a property, create an event handler for the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph> event and customize the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph> property as needed.</source>
          <target state="translated">動的に設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティ、プロパティの名前をイベント ハンドラーを作成する、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Selecting&gt;</ph>イベントとカスタマイズ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Select%2A&gt;</ph>プロパティに応じて。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The following example shows how to use a user-supplied value to calculate a value in the returned data.</source>
          <target state="translated">次の例では、ユーザー指定の値を使用して、返されるデータの値を計算する方法を示します。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user can enter a value in the text box that represents the number of manufacturing days.</source>
          <target state="translated">ユーザーは、製造日の数を表すテキスト ボックスに値を入力することができます。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>That value is divided by a value from a database that represents the number of days to manufacture a product.</source>
          <target state="translated">その値は、製品の製造に日数を表すデータベースからの値で除算されます。</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The returned value indicates how many products can be manufactured during the specified number of days.</source>
          <target state="translated">返される値では、指定した日数で製造可能な製品の数を示します。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.SelectParameters">
          <source>The user's input is included in the Select command through the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph> collection.</source>
          <target state="translated">ユーザーの入力をを通じて Select コマンドに含まれる、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.SelectParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Gets or sets a value that indicates whether the data from the data source should be stored in view state to make sure that the data has not been changed by another process before it is updated or deleted.</source>
          <target state="translated">データ ソースから取得するデータをビューステートに保存して、そのデータが更新または削除される前に別のプロセスによって変更されていないことを確認する値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the values will be stored in view state; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">値をビューステートに保存する場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The default value is <ph id="ph1">&lt;see langword="true" /&gt;</ph>.</source>
          <target state="translated">既定値は <ph id="ph1">&lt;see langword="true" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>By default, when update and delete operations have been enabled, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores the original values for all the records in view state.</source>
          <target state="translated">既定では、ときに更新および削除操作を有効になっている、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>ビューステートへのすべてのレコードのコントロールが元の値を格納します。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control stores values for all primary keys and all properties not marked with <ph id="ph2">`UpdateCheck.Never`</ph> in the <ph id="ph3">`Column`</ph> attribute.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがすべてのプライマリ キーの値を格納し、すべてのプロパティでマークされていない<ph id="ph2">`UpdateCheck.Never`</ph>で、<ph id="ph3">`Column`</ph>属性。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You set the <ph id="ph1">`UpdateCheck`</ph> property of the <ph id="ph2">`Column`</ph> attribute in the <ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">設定する、<ph id="ph1">`UpdateCheck`</ph>のプロパティ、<ph id="ph2">`Column`</ph>属性、<ph id="ph3">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Before LINQ to SQL updates or deletes data, it checks the values in view state against the current values in the data source.</source>
          <target state="translated">LINQ to SQL を更新またはデータの削除、前に、データ ソース内の現在の値と比較をビュー ステートの値を確認します。</target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the values do not match, the data source record has changed.</source>
          <target state="translated">値が一致しない場合、データ ソースのレコードが変更されました。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL throws an exception and does not continue with the update or delete operation.</source>
          <target state="translated">その場合は、LINQ to SQL 例外をスローしは更新を続行または削除しない操作します。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information about LINQ to SQL, see <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>.</source>
          <target state="translated">LINQ to SQL の詳細については、次を参照してください。 <bpt id="p1">[</bpt>LINQ to SQL<ept id="p1">](http://msdn.microsoft.com/library/73d13345-eece-471a-af40-4cc7a2f11655)</ept>です。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Storing the original values in view state can cause the page size to become unnecessarily large and can expose sensitive data to a malicious user.</source>
          <target state="translated">ビュー内の元の値を格納する状態は、ページ サイズが不必要に大きくなる可能性があり、悪意のあるユーザーに機密データを公開できます。</target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>You can disable storing values in view state by setting the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>.</source>
          <target state="translated">設定して値をビュー ステートを格納する無効にすることができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you do this, you must provide your own way to make sure that the data has not changed.</source>
          <target state="translated">これを行う場合は、データが変更されていないかどうかを確認する、独自の方法を指定する必要があります。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If you set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph> property to <ph id="ph2">`false`</ph>, the original values are not persisted in view state for the data-bound control.</source>
          <target state="translated">設定した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState%2A&gt;</ph>プロパティを<ph id="ph2">`false`</ph>、元の値は、データ バインド コントロールのビュー ステートに残りません。</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, LINQ to SQL cannot verify the integrity of the data.</source>
          <target state="translated">その場合は、LINQ to SQL では、データの整合性を確認できません。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will throw an exception that indicates a data conflict even if the data in the data source has not actually changed.</source>
          <target state="translated">LINQ to SQL をデータ ソース内のデータが実際に変更されていない場合でも、データの競合を示す例外がスローされます。</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>If the underlying data source contains a timestamp field that is automatically updated during an update, you can store only that value in view state.</source>
          <target state="translated">基になるデータ ソースが更新中に自動的に更新されるタイムスタンプ フィールドが含まれている場合は、ビュー ステートにその値だけを格納できます。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>In that case, the timestamp property in the entity class is set to <ph id="ph1">`IsVersion=true`</ph> and all the properties are set to <ph id="ph2">`UpdateCheck.Never`</ph>.</source>
          <target state="translated">エンティティ クラスでタイムスタンプ プロパティに設定する場合は、<ph id="ph1">`IsVersion=true`</ph>とすべてのプロパティに設定<ph id="ph2">`UpdateCheck.Never`</ph>です。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>Because a timestamp field is automatically updated by the database every time that data in that record changes, LINQ to SQL determines from that value if data has changed.</source>
          <target state="translated">タイムスタンプ フィールドは、そのレコード内のデータが変更されるたびに、データベースによって自動的に更新、ために、LINQ to SQL は、データが変更された場合は、その値から決定します。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>This helps reduce the size of view state, and no sensitive data is exposed.</source>
          <target state="translated">これにより、ビュー状態のサイズを削減し、公開されている機密データがありません。</target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>LINQ to SQL will check for data consistency by comparing the timestamp value in view state with the timestamp value in the database.</source>
          <target state="translated">LINQ to SQL はチェック、データの整合性ビュー内のタイムスタンプ値を比較することによって、データベース内のタイムスタンプ値と状態。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.StoreOriginalValuesInViewState">
          <source>For more information, see <bpt id="p1">[</bpt>Walkthrough: Using a Timestamp with the LinqDataSource Control to Check Data Integrity<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: データの整合性を確認する LinqDataSource コントロールにタイムスタンプを使用して<ept id="p1">](http://msdn.microsoft.com/library/e7700162-4f05-4130-81f7-3be1361027fa)</ept>です。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>The type that is associated with the class.</source>
          <target state="translated">クラスに関連付けられている型。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#ContextType">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="T:System.Web.DynamicData.IDynamicDataSource" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>The name of the entity.</source>
          <target state="translated">エンティティの名前。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.System#Web#DynamicData#IDynamicDataSource#EntitySetName">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.Web.DynamicData.IDynamicDataSource&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Gets or sets the name of the property or field in the data context class that represents a data collection.</source>
          <target state="translated">データ コンテキスト クラス内でデータ コレクションを表すプロパティまたはフィールドの名前を取得または設定します。</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A string that contains the name of the property that contains the data collection.</source>
          <target state="translated">データ コレクションを含むプロパティの名前を示す文字列。</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>Set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that represents the data that you want to retrieve.</source>
          <target state="translated">設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティのプロパティまたはフィールドを取得するデータを表す名前にします。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to a database table, the name of the property is usually the same as the name of the table.</source>
          <target state="translated">データベース テーブルに接続するときに、プロパティの名前は通常、テーブルの名前と同じです。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>When you are connecting to an in-memory data collection, set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property to the name of the property or field that returns the data collection.</source>
          <target state="translated">メモリ内のデータ コレクションに接続するときの設定、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティをプロパティやデータ コレクションを返すフィールドの名前にします。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>You can assign a property that returns any type to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property for retrieval operations.</source>
          <target state="translated">任意の種類を返すプロパティを割り当てることができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>取得操作のプロパティです。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>If the object that is represented by the property does not implement <ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control will automatically wrap the object in an instance of an <ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph> object.</source>
          <target state="translated">プロパティによって表されるオブジェクトを実装しないかどうか<ph id="ph1">&lt;xref:System.Collections.IEnumerable&gt;</ph>、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールがのインスタンスでオブジェクトを自動的に折り返されます、<ph id="ph3">&lt;xref:System.Collections.IEnumerable&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>To enable automatic update, insert, or delete operations, the class that is assigned to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph> property must derive from <ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph> and the property that is assigned to the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property must derive from <ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>.</source>
          <target state="translated">自動更新を有効にするのには、挿入、または削除の各操作に割り当てられているクラス、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.ContextTypeName%2A&gt;</ph>プロパティがから派生する必要があります<ph id="ph2">&lt;xref:System.Data.Linq.DataContext&gt;</ph>とプロパティに割り当てられている、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティから派生しなければなりません<ph id="ph4">&lt;xref:System.Data.Linq.Table%601&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For information about how to select data from an instance of a class, see the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph> property.</source>
          <target state="translated">クラスのインスタンスからデータを選択する方法については、次を参照してください。、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceSelectEventArgs.Result%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows two <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> controls.</source>
          <target state="translated">次の例は 2 つ<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In one <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property in a class.</source>
          <target state="translated">いずれかで<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティがクラスでプロパティに設定します。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>That property returns an array of strings.</source>
          <target state="translated">そのプロパティは、文字列の配列を返します。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>In the other <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph> property is set to a property that represents a database table.</source>
          <target state="translated">もう一方の<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.TableName%2A&gt;</ph>プロパティは、データベース テーブルを表すプロパティに設定します。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The class named <ph id="ph1">`ExampleDataContext`</ph> that represents the database table is not shown in this example.</source>
          <target state="translated">という名前のクラス<ph id="ph1">`ExampleDataContext`</ph>を表すデータベース テーブルが表示されないようにこの例ではします。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>For this example to work, you must create this class by adding a LINQ to SQL class named Example.dbml and dragging a table named Movie onto the <ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>.</source>
          <target state="translated">この例を実行するは、名前付き Example.dbml テーブルをドラッグしては、上にムービーをという名前の SQL クラスを LINQ を追加することでこのクラスを作成する必要があります、<ph id="ph1">[!INCLUDE[vs_ordesigner_short](~/includes/vs-ordesigner-short-md.md)]</ph>です。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>A class named <ph id="ph1">`ExampleDataContext`</ph> with a property named <ph id="ph2">`Movies`</ph> is generated.</source>
          <target state="translated">という名前のクラス<ph id="ph1">`ExampleDataContext`</ph>という名前のプロパティと<ph id="ph2">`Movies`</ph>が生成されます。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.TableName">
          <source>The following example shows the class named <ph id="ph1">`MovieLibrary`</ph> that is referenced in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control.</source>
          <target state="translated">次の例は、という名前のクラスを示しています。<ph id="ph1">`MovieLibrary`</ph>で参照されている、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row key values for the records to be updated.</source>
          <target state="translated">更新するレコードの行のキー値。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values to be updated in the data source.</source>
          <target state="translated">データ ソース内で更新する行の値。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The row values that are evaluated to detect data conflicts.</source>
          <target state="translated">データの競合を検出するために評価される行の値。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Performs an update operation.</source>
          <target state="translated">更新の操作を実行します。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The number of records affected by the update operation.</source>
          <target state="translated">更新操作によって影響を受けたレコードの数。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>Typically, you do not have to call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method from your code.</source>
          <target state="translated">通常がありませんを呼び出して、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>コードからメソッドです。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The data-bound control will automatically call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when the user takes action to update a record.</source>
          <target state="translated">データ バインド コントロールが自動的に呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>メソッドは、ユーザーがレコードを更新する操作とします。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>You explicitly call the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method when you want to create your own process for updating data.</source>
          <target state="translated">明示的に呼び出す、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>メソッド データを更新するための独自のプロセスを作成するときにします。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows how to programmatically update a record in the data source after the user clicks a button.</source>
          <target state="translated">次の例では、プログラムによって、ユーザーがボタンをクリックした後、データ ソース内のレコードを更新する方法を示します。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The code passes a <ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the key value, a <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the original values, and a <ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> object that contains the new values to the <ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph> method.</source>
          <target state="translated">コードを渡します、<ph id="ph1">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>キーの値を格納しているオブジェクト、 <ph id="ph2">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph> 、元の値を格納しているオブジェクトと<ph id="ph3">&lt;xref:System.Collections.Specialized.ListDictionary&gt;</ph>に新しい値を格納しているオブジェクト、<ph id="ph4">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Update%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Web.UI.WebControls.LinqDataSource.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)">
          <source>The following example shows the markup for the previous example.</source>
          <target state="translated">次の例では、前の例のマークアップを示します。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Occurs when an update operation has finished.</source>
          <target state="translated">更新操作が終了したときに発生します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event to catch any exceptions from the update operation or to examine the values of output parameters after the update operation has finished.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>更新操作が完了した後、更新操作から例外をキャッチする、またはの値を調べ、イベント出力パラメーターです。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updated">
          <source>The output parameters are available from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object that is passed to event handlers.</source>
          <target state="translated">出力パラメーターは、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>イベント ハンドラーに渡されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>This collection is not used by the <ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> class.</source>
          <target state="translated">このコレクションは、<ph id="ph1">&lt;see cref="T:System.Web.UI.WebControls.LinqDataSource" /&gt;</ph> クラスでは使用されません。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.UpdateParameters">
          <source>A collection of parameters.</source>
          <target state="translated">パラメーターのコレクション。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Occurs before an update operation.</source>
          <target state="translated">更新操作の前に発生します。</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>Handle the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event to validate the object to be updated, to examine data validation errors from the data class, to change a value before the update operation, or to cancel the update operation.</source>
          <target state="translated">処理、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>を更新する、更新操作の前に値を変更するか、更新操作をキャンセルするデータ クラスからのデータの検証エラーを検査するオブジェクトを検証するイベントです。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph> object that is passed to event handlers contains both the original object and the updated object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs&gt;</ph>イベント ハンドラーに渡されるオブジェクトには、元のオブジェクトと更新されたオブジェクトの両方が含まれています。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If a validation error occurs during the update operation, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph> object contains the validation exceptions that are thrown by the data class.</source>
          <target state="translated">更新操作中に検証エラーが発生した場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceInsertEventArgs&gt;</ph>オブジェクトには、データ クラスによってスローされる検証例外が含まれています。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>A validation error occurs if a value to be updated does not match the type of the property in the data class, or if it does not pass a custom validation check.</source>
          <target state="translated">検証エラーは、値を更新するデータ クラスでプロパティの型に一致しない場合、またはカスタムの検証チェックに合格していない場合に発生します。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>In an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you can retrieve the validation exceptions and take appropriate action.</source>
          <target state="translated">イベント ハンドラーで、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント、検証の例外を取得して、適切なアクションを実行することができます。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If an exception is thrown in an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event, you must handle the exception in that event handler.</source>
          <target state="translated">かどうかのイベント ハンドラーで例外がスローされます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント、そのイベント ハンドラーで例外を処理する必要があります。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The exception will not be passed to an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph> event (through the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph> object).</source>
          <target state="translated">例外は、のイベント ハンドラーに渡すことはできません、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updated&gt;</ph>イベント (を通じて、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs&gt;</ph>オブジェクト)。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph> property contains only the exceptions that are thrown after the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceStatusEventArgs.Exception%2A&gt;</ph>プロパティには、後にスローされた例外だけが含まれています、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>イベント。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The code compares properties from the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph> property and the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property to see whether a value has changed.</source>
          <target state="translated">コードからプロパティを比較し、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.OriginalObject%2A&gt;</ph>プロパティおよび<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティに値が変更されたかどうかを参照してください。</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>If the value has changed, a value of the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph> property is set to <ph id="ph2">`true`</ph>.</source>
          <target state="translated">値が変更すると、値の場合、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSourceUpdateEventArgs.NewObject%2A&gt;</ph>プロパティに設定されている<ph id="ph2">`true`</ph>です。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The following example shows an event handler for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph> event that retrieves validation exceptions.</source>
          <target state="translated">次の例は、イベント ハンドラーを<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Updating&gt;</ph>検証例外を取得するイベントです。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The previous example retrieves validation exceptions.</source>
          <target state="translated">前の例では、検証の例外を取得します。</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>An exception might be thrown if a value does not match the type of the property.</source>
          <target state="translated">値がプロパティの型と一致しない場合、例外がスローされる可能性があります。</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>It might also be thrown from a customized check such as the one in the following example.</source>
          <target state="translated">次の例のようなカスタマイズされたチェックからもスロー可能性があります。</target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="E:System.Web.UI.WebControls.LinqDataSource.Updating">
          <source>The <ph id="ph1">`OnAgeChanging`</ph> method checks that the number for the <ph id="ph2">`Age`</ph> property is not negative.</source>
          <target state="translated"><ph id="ph1">`OnAgeChanging`</ph>メソッドでは、ことを確認の数、<ph id="ph2">`Age`</ph>プロパティは負の値ではありません。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Gets or sets a value that specifies what conditions must be true for a record to be included in the retrieved data.</source>
          <target state="translated">取得されるデータにレコードを含めるかどうかを決める条件を示す値を取得または設定します。</target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>A string that is used to create the Where clause.</source>
          <target state="translated">Where 句の作成に使用される文字列。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to specify the conditions for the record to be returned from a query.</source>
          <target state="translated">使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティをクエリから返されるレコードの条件を指定します。</target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The syntax for the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property is the same as the syntax for a LINQ Where clause in C#.</source>
          <target state="translated">構文、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティは、c# での LINQ Where 句の構文と同じです。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You specify an expression that results in a Boolean value, and if the expression evaluates to <ph id="ph1">`true`</ph> for a given row, the row is included in the result set.</source>
          <target state="translated">ブール値に評価される式を指定するに式が評価されると<ph id="ph1">`true`</ph>特定の行の行が結果セットに含まれます。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Expressions are composed of column names, comparison operators, and values to compare to, as shown in the following example:</source>
          <target state="translated">式は、次の例のようにと比較するには、列名、比較演算子、および値から構成されます。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To specify multiple expressions linked by logical <ph id="ph1">`AND`</ph> or <ph id="ph2">`OR`</ph> operators, you use <ph id="ph3">`&amp;&amp;`</ph> as a logical AND operator and <ph id="ph4">`||`</ph> as a logical OR operator, as shown in the following example:</source>
          <target state="translated">論理によってリンクされている複数の式を指定する<ph id="ph1">`AND`</ph>または<ph id="ph2">`OR`</ph>演算子を使用する<ph id="ph3">`&amp;&amp;`</ph>論理 AND 演算子としてと<ph id="ph4">`||`</ph>として次の例で示すように、論理 OR 演算子。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test a property against a literal string value, the literal string value must be enclosed in double quotation marks.</source>
          <target state="translated">リテラル文字列の値に対してプロパティをテストする場合は、リテラル文字列値を二重引用符で囲む必要があります。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To do this in markup, enclose the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> clause value in single quotation marks, as shown in the following example:</source>
          <target state="translated">これを行うマークアップで、囲む、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>句の値を次の例で示すように、単一引用符で。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>To test against a literal string value in code, use escape characters that are appropriate to the language you are using in order to insert double quotation marks, as shown in the following example:</source>
          <target state="translated">コード内のリテラル文字列値をテストするには、次の例で示すように、二重引用符を挿入するために使用する言語を適切なエスケープ文字を使用します。</target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>If you want to test whether a string is greater than or less than another string, you must use methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class instead of using <ph id="ph2">`&lt;`</ph> or <ph id="ph3">`&gt;`</ph> operators between the column name and the string value.</source>
          <target state="translated">文字列がより大きいか別の文字列よりも小さいかどうかをテストする場合は、メソッドを使用する必要があります、<ph id="ph1">&lt;xref:System.String&gt;</ph>クラスを使用せずに<ph id="ph2">`&lt;`</ph>または<ph id="ph3">`&gt;`</ph>列名と文字列値間の演算子。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following examples show how to select rows that have Category values that are less than, less than or equal to, greater than, or greater than or equal to "Sports":</source>
          <target state="translated">次の例より大きい、またはより大きい「スポーツ」と等しいより小さいより小さいか等しい、カテゴリ値を持つ行を選択する方法を示します。</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You can also use other methods of the <ph id="ph1">&lt;xref:System.String&gt;</ph> class, such as <ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>.</source>
          <target state="translated">他のメソッドを使用することも、<ph id="ph1">&lt;xref:System.String&gt;</ph>クラスなど<ph id="ph2">&lt;xref:System.String.StartsWith%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.String.EndsWith%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.String.Contains%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to compare strings, see <bpt id="p1">[</bpt>Comparing Strings<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>.</source>
          <target state="translated">文字列を比較する方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>文字列の比較<ept id="p1">](~/docs/standard/base-types/comparing.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about Where clause syntax, see <bpt id="p1">[</bpt>C# Operators<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept> and <bpt id="p2">[</bpt>where clause<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>.</source>
          <target state="translated">場所の詳細については句の構文を参照してください<bpt id="p1">[</bpt>c# 演算子<ept id="p1">](http://msdn.microsoft.com/library/0301e31f-22ad-49af-ac3c-d5eae7f0ac43)</ept>と<bpt id="p2">[</bpt>場所句<ept id="p2">](~/docs/csharp/language-reference/keywords/where-clause.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In addition to filtering based on static values that you define when you create the Web page, you can filter based on dynamic values that are evaluated at run time.</source>
          <target state="translated">Web ページを作成する場合に定義する静的な値に基づくフィルター処理、だけでなく実行時に評価されるに基づいて動的な値をフィルター処理できます。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In that case, you include a named parameter in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property that acts as a placeholder for the value.</source>
          <target state="translated">名前付きパラメーターを含める場合は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティ値のプレース ホルダーとして機能します。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>You then add a parameter that has the matching name to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">一致する名前を持つパラメーターを追加、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Alternatively, you can set the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property to <ph id="ph2">`true`</ph> and define the parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">また、設定することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティを<ph id="ph2">`true`</ph>でパラメーターを定義し、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph> property is <ph id="ph2">`true`</ph>, you do not have to include the named parameters in the <ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.AutoGenerateWhereClause%2A&gt;</ph>プロパティは<ph id="ph2">`true`</ph>で名前付きパラメーターを含める必要はありません、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>Instead, the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control automatically generates the Where clause from the parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> property.</source>
          <target state="translated">代わりに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールは、Where を自動的に生成句内のパラメーターから、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>For more information about how to filter data, see <bpt id="p1">[</bpt>Walkthrough: Selecting and Filtering a Subset of Data with the LinqDataSource and GridView Controls<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>.</source>
          <target state="translated">データをフィルター処理方法の詳細については、次を参照してください。<bpt id="p1">[</bpt>チュートリアル: を選択すると、LinqDataSource GridView コントロールとデータのサブセットをフィルター処理<ept id="p1">](http://msdn.microsoft.com/library/c1cca3e8-86e4-4e69-a29f-1c05b91f2205)</ept>です。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data returned from a query based on a static condition.</source>
          <target state="translated">次の例では、静的な条件に基づくクエリから返されたデータをフィルター処理する方法を示します。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The following example shows how to filter the data based on a value that is provided by the user at run time.</source>
          <target state="translated">次の例では、実行時にユーザーによって提供される値に基づいてデータをフィルター処理する方法を示します。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>In this example a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control and a <ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control are displayed on the page.</source>
          <target state="translated">この例では、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロールと<ph id="ph2">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールがページに表示されます。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>When the user selects one of the values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control, the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control selects from the <ph id="ph3">`Products`</ph> table only rows that have <ph id="ph4">`UserPrice`</ph> values equal to the selected value.</source>
          <target state="translated">ユーザーが内の値の 1 つを選択するときに、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>からコントロールを選択、<ph id="ph3">`Products`</ph>テーブルを持つ行のみ<ph id="ph4">`UserPrice`</ph>値を選択した値にします。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.Where">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph> control then displays the filtered data.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.GridView&gt;</ph>コントロールは、フィルター選択されたデータを表示します。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>Gets the collection of parameters that is used to create the Where clause.</source>
          <target state="translated">Where 句の作成に使用されるパラメーターのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>A collection of the parameters that are used to create the Where clause in the <ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> property.</source>
          <target state="translated">Where 句を作成するために使用される、<ph id="ph1">&lt;see cref="P:System.Web.UI.WebControls.LinqDataSource.Where" /&gt;</ph> プロパティのパラメーターのコレクション。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control uses parameters in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to create the Where clause at run time.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロール内のパラメーターを使用して、 <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> Where を作成するコレクション実行時の句。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You add parameters to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection when you want to programmatically set one or more of the conditions in the Where clause.</source>
          <target state="translated">パラメーターを追加する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>をプログラムで、Where 句で 1 つまたは複数の条件を設定する場合に、コレクション句。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, you might search a database table for records with a last name equal to the value of a <ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph> control.</source>
          <target state="translated">たとえば、姓の値と等しい、レコードをデータベース テーブルを検索する場合があります、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.TextBox&gt;</ph>コントロール。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In that case, you add a parameter to the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection for the text box value.</source>
          <target state="translated">パラメーターを追加する場合は、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>テキスト ボックスの値のコレクション。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>If you do not have to set a value at run time in the Where clause, you do not have to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection.</source>
          <target state="translated">Where 句で、実行時に値を設定する必要はない場合、句がありませんを使用する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>You can define the fields to retrieve in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property.</source>
          <target state="translated">取得するフィールドを定義することができます、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティです。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>For example, to return values from a database table where <ph id="ph1">`LastName`</ph> equals "Adams" in markup, set the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property to <ph id="ph3">`'LastName = "Adams"'`</ph> without any parameters.</source>
          <target state="translated">例については、データベース テーブルから値を返す場所<ph id="ph1">`LastName`</ph>equals"Adams"マークアップでは、設定、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>プロパティを<ph id="ph3">`'LastName = "Adams"'`</ph>パラメーターを使用せずします。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>To set values in the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection, you assign a name to each parameter and then add a placeholder in the <ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph> property for that parameter.</source>
          <target state="translated">値を設定する、<ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph>コレクション、各パラメーターに名前を割り当てるし、追加するにプレース ホルダー、<ph id="ph2">&lt;xref:System.Web.UI.WebControls.LinqDataSource.Where%2A&gt;</ph>そのパラメーターのプロパティです。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>In the Where clause, preface each parameter name with the @ symbol.</source>
          <target state="translated">Where 句で各パラメーターの名前を付けます、@ 記号。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The following example shows how to use the <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> collection to dynamically create the Where clause.</source>
          <target state="translated">次の例を使用する方法を示しています、 <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource.WhereParameters%2A&gt;</ph> Where を動的に作成するコレクション句。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.Web.UI.WebControls.LinqDataSource.WhereParameters">
          <source>The <ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph> control returns all the records with a value in the <ph id="ph2">`Price`</ph> column that is greater than the value selected by the user in a <ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph> control.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Web.UI.WebControls.LinqDataSource&gt;</ph>コントロールで値を持つすべてのレコードが返されます、<ph id="ph2">`Price`</ph>でユーザーが選択されている値よりも大きい列、<ph id="ph3">&lt;xref:System.Web.UI.WebControls.DropDownList&gt;</ph>コントロール。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>