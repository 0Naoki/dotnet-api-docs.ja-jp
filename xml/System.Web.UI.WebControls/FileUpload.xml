<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="baae0ccc49431af72520ecf979643419d693c7e7" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="ff132-101">ユーザーがファイルを選択してサーバーにアップロードするためのテキスト ボックス コントロールと参照ボタンを表示します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="ff132-101">Displays a text box control and a browse button that enable users to select a file to upload to the server.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-102">このトピックの内容:</span><span class="sxs-lookup"><span data-stu-id="ff132-102">In this topic:</span></span>  
  
-   [<span data-ttu-id="ff132-103">はじめに</span><span class="sxs-lookup"><span data-stu-id="ff132-103">Introduction</span></span>](#introduction)  
  
-   [<span data-ttu-id="ff132-104">アップロードされたファイルを保存</span><span class="sxs-lookup"><span data-stu-id="ff132-104">Saving Uploaded Files</span></span>](#saving_uploaded_files)  
  
-   [<span data-ttu-id="ff132-105">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="ff132-105">Security Considerations</span></span>](#security_considerations)  
  
-   [<span data-ttu-id="ff132-106">メモリの制限</span><span class="sxs-lookup"><span data-stu-id="ff132-106">Memory Limitations</span></span>](#memory_limitations)  
  
-   [<span data-ttu-id="ff132-107">UpdatePanel コントロールでファイルアップロード コントロールの使用</span><span class="sxs-lookup"><span data-stu-id="ff132-107">Using the FileUpload Control with the UpdatePanel Control</span></span>](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [<span data-ttu-id="ff132-108">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="ff132-108">Declarative Syntax</span></span>](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a><span data-ttu-id="ff132-109">はじめに</span><span class="sxs-lookup"><span data-stu-id="ff132-109">Introduction</span></span>  
 <span data-ttu-id="ff132-110"><xref:System.Web.UI.WebControls.FileUpload>クラスは、テキスト ボックス コントロールと、クライアント上のファイルを選択し、Web サーバーにアップロードできるようにする [参照] ボタンが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-110">The <xref:System.Web.UI.WebControls.FileUpload> class displays a text box control and a browse button that enable users to select a file on the client and upload it to the Web server.</span></span> <span data-ttu-id="ff132-111">ユーザーがローカル コンピューター上のファイルの完全なパスを入力してアップロードするファイルを指定します (たとえば、 **C:\MyFiles\TestFile.txt**) コントロールのテキスト ボックスにします。</span><span class="sxs-lookup"><span data-stu-id="ff132-111">The user specifies the file to upload by entering the full path of the file on the local computer (for example, **C:\MyFiles\TestFile.txt**) in the text box of the control.</span></span> <span data-ttu-id="ff132-112">クリックして、ユーザーがファイルを選択する代わりに、**参照**ボタンをクリックしでの検索をする、 **Choose File**  ダイアログ ボックス。</span><span class="sxs-lookup"><span data-stu-id="ff132-112">Alternately, the user can select the file by clicking the **Browse** button, and then locating it in the **Choose File** dialog box.</span></span>  
  
 <span data-ttu-id="ff132-113">使用して、<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>を使用してアップロードする、クライアント上のファイルの名前を取得するプロパティ、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-113">Use the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property to get the name of a file on a client to upload by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-114">このプロパティが返すファイル名では、クライアント上のファイルのパスは含まれません。</span><span class="sxs-lookup"><span data-stu-id="ff132-114">The file name that this property returns does not include the path of the file on the client.</span></span>  
  
 <span data-ttu-id="ff132-115"><xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティを取得、<xref:System.IO.Stream>をアップロードするファイルを指すオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="ff132-115">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property gets a <xref:System.IO.Stream> object that points to a file to upload.</span></span> <span data-ttu-id="ff132-116">このプロパティを使用すると、ファイルの内容をバイトとしてアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="ff132-116">Use this property to access the contents of the file as bytes.</span></span> <span data-ttu-id="ff132-117">たとえば、使用することができます、<xref:System.IO.Stream>によって返されるオブジェクト、<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティをファイルの内容をバイトとしての読み取り、バイト配列に保管します。</span><span class="sxs-lookup"><span data-stu-id="ff132-117">For example, you can use the <xref:System.IO.Stream> object that is returned by the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property to read the contents of the file as bytes and store them in a byte array.</span></span> <span data-ttu-id="ff132-118">また、使用することができます、<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>ファイル内のすべてのバイトを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-118">Alternatively, you can use the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property to retrieve all the bytes in the file.</span></span>  
  
 <span data-ttu-id="ff132-119"><xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティを取得、基になる<xref:System.Web.HttpPostedFile>をアップロードするファイルのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff132-119">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property gets the underlying <xref:System.Web.HttpPostedFile> object for the file to upload.</span></span> <span data-ttu-id="ff132-120">このプロパティを使用して、ファイルの追加のプロパティにアクセスすることができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-120">You can use this property to access additional properties on the file.</span></span> <span data-ttu-id="ff132-121"><xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティは、ファイルの長さを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff132-121">The <xref:System.Web.HttpPostedFile.ContentLength%2A> property gets the length of the file.</span></span> <span data-ttu-id="ff132-122"><xref:System.Web.HttpPostedFile.ContentType%2A>プロパティは、ファイルの MIME コンテンツ タイプを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff132-122">The <xref:System.Web.HttpPostedFile.ContentType%2A> property gets the MIME content type of the file.</span></span> <span data-ttu-id="ff132-123">さらに、使用することができます、<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティへのアクセスを<xref:System.Web.HttpPostedFile.FileName%2A>プロパティ、<xref:System.Web.HttpPostedFile.InputStream%2A>プロパティ、および<xref:System.Web.HttpPostedFile.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-123">In addition, you can use the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.FileName%2A> property, the <xref:System.Web.HttpPostedFile.InputStream%2A> property, and the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span> <span data-ttu-id="ff132-124">ただし、同じ機能がによって提供される、<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティ、<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティ、および<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-124">However, the same functionality is provided by the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property, the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property, and the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span>  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a><span data-ttu-id="ff132-125">アップロードされたファイルを保存</span><span class="sxs-lookup"><span data-stu-id="ff132-125">Saving Uploaded Files</span></span>  
 <span data-ttu-id="ff132-126"><xref:System.Web.UI.WebControls.FileUpload>コントロールは自動的に保存されませんファイル サーバーにユーザーがアップロードするファイルを選択後します。</span><span class="sxs-lookup"><span data-stu-id="ff132-126">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="ff132-127">コントロールまたはユーザーが指定されたファイルを送信できるようにするためのメカニズムを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-127">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="ff132-128">たとえば、ユーザーがファイルをアップロードして、クリックするボタンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="ff132-128">For example, you can provide a button that the user clicks to upload the file.</span></span> <span data-ttu-id="ff132-129">指定したファイルを保存するために作成するコードを呼び出す必要があります、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドで、サーバー上のパスを指定するファイルの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-129">The code that you write to save the specified file should call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, which saves the contents of a file to a specified path on the server.</span></span> <span data-ttu-id="ff132-130">通常、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドは、サーバーへのポストバックを発生させるイベントのイベント処理メソッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-130">Typically, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called in an event-handling method for an event that raises a post back to the server.</span></span> <span data-ttu-id="ff132-131">たとえば、ファイルを送信するボタンを指定する場合、クリック イベントのイベント ハンドラー メソッド内のファイルを保存するコードを含めることがします。</span><span class="sxs-lookup"><span data-stu-id="ff132-131">For example, if you provide a button to submit a file, you could include the code to save the file inside the event-handling method for the click event.</span></span>  
  
 <span data-ttu-id="ff132-132">呼び出しの前に、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 、サーバーにファイルを保存に使用する方法、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>ことを確認するプロパティ、<xref:System.Web.UI.WebControls.FileUpload>コントロールには、ファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff132-132">Before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method to save the file to the server, use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file.</span></span> <span data-ttu-id="ff132-133">場合、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>返します`true`を呼び出し、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ff132-133">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="ff132-134">返された場合`false`ユーザーに示すコントロールにファイルが含まれていないこと、メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-134">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="ff132-135">チェックを行わない、<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>既定では、このプロパティが 0 バイトを含むため、ファイルをアップロードするかどうかを決定するプロパティが存在します。</span><span class="sxs-lookup"><span data-stu-id="ff132-135">Do not check the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to determine whether a file to upload exists because, by default, this property contains 0 bytes.</span></span> <span data-ttu-id="ff132-136">場合でも、その結果、<xref:System.Web.UI.WebControls.FileUpload>コントロールは、空白、<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティが null 以外の値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff132-136">As a result, even when the <xref:System.Web.UI.WebControls.FileUpload> control is blank, the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property returns a non-null value.</span></span>  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a><span data-ttu-id="ff132-137">セキュリティの考慮事項</span><span class="sxs-lookup"><span data-stu-id="ff132-137">Security Considerations</span></span>  
 <span data-ttu-id="ff132-138">呼び出すと、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッド、アップロードされたファイルを保存するディレクトリの完全なパスを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-138">When you call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you must specify the full path of the directory in which to save the uploaded file.</span></span> <span data-ttu-id="ff132-139">明示的に指定しないパス、アプリケーション コードで、ユーザーがファイルをアップロードしようとしたときに、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff132-139">If you do not explicitly specify a path in your application code, an exception is thrown when a user attempts to upload a file.</span></span> <span data-ttu-id="ff132-140">この動作は、ユーザーによるアプリケーションのディレクトリ構造の任意の場所への書き込みおよび機密性の高いルート ディレクトリにアクセスできないようにすることでセキュリティで保護されたサーバー上のファイルを保持できます。</span><span class="sxs-lookup"><span data-stu-id="ff132-140">This behavior helps keep the files on the server secure by preventing users from being able to write to arbitrary locations in your application's directory structure, as well as preventing access to sensitive root directories.</span></span>  
  
 <span data-ttu-id="ff132-141"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドは、指定したディレクトリにアップロードされたファイルを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ff132-141">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method writes the uploaded file to the specified directory.</span></span> <span data-ttu-id="ff132-142">そのため、ASP.NET アプリケーションでは、サーバーのディレクトリへの書き込みアクセスが必要です。</span><span class="sxs-lookup"><span data-stu-id="ff132-142">Therefore, the ASP.NET application must have write access to the directory on the server.</span></span> <span data-ttu-id="ff132-143">これには、アプリケーションが書き込みアクセス権を取得することができます 2 つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-143">There are two ways that the application can get write access.</span></span> <span data-ttu-id="ff132-144">アプリケーションが実行されている、アップロードされたファイルを保存するディレクトリのアカウントへの書き込みアクセスを明示的に付与することができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-144">You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</span></span> <span data-ttu-id="ff132-145">代わりに、ASP.NET アプリケーションに付与されている信頼のレベルを上げることができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-145">Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</span></span> <span data-ttu-id="ff132-146">にアプリケーションの実行中のディレクトリへの書き込みアクセスを取得する、アプリケーションを許可する必要があります、<xref:System.Web.AspNetHostingPermission>信頼レベル設定されているオブジェクト、<xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="ff132-146">To get write access to the executing directory for the application, the application must be granted the <xref:System.Web.AspNetHostingPermission> object with the trust level set to the <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="ff132-147">信頼のレベルを増やすと、アプリケーションのサーバー上のリソースへのアクセスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ff132-147">Increasing the level of trust increases the application's access to resources on the server.</span></span> <span data-ttu-id="ff132-148">アプリケーションの制御を取得した悪意のあるユーザーがこの高いレベルの信頼で実行することもあるため、セキュリティで保護された方法ではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-148">Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</span></span> <span data-ttu-id="ff132-149">アプリケーションを実行するために必要な最低限の特権を持つユーザーのコンテキストで ASP.NET アプリケーションを実行することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff132-149">It is a best practice to run an ASP.NET application in the context of a user with the minimum privileges that are required for the application to run.</span></span> <span data-ttu-id="ff132-150">ASP.NET アプリケーションのセキュリティに関する詳細については、次を参照してください。 [Web アプリケーション用の基本的なセキュリティ プラクティス](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)と[ASP.NET 信頼レベルとポリシー ファイル](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)です。</span><span class="sxs-lookup"><span data-stu-id="ff132-150">For more information about security in ASP.NET applications, see [Basic Security Practices for Web Applications](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) and [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).</span></span>  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a><span data-ttu-id="ff132-151">メモリの制限</span><span class="sxs-lookup"><span data-stu-id="ff132-151">Memory Limitations</span></span>  
 <span data-ttu-id="ff132-152">保護するために 1 つの方法にサービス拒否攻撃の対象を使用してアップロードできるファイルのサイズを制限する、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-152">One way to guard against denial of service attacks is to limit the size of the files that can be uploaded by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-153">アップロードすると想定しているファイルの種類に対して適切なサイズの上限を設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-153">You should set a size limit that is appropriate for the types of files that you expect to be uploaded.</span></span> <span data-ttu-id="ff132-154">既定のサイズ制限は、4096 キロバイト (KB)、または 4 メガバイト (MB です)。</span><span class="sxs-lookup"><span data-stu-id="ff132-154">The default size limit is 4096 kilobytes (KB), or 4 megabytes (MB).</span></span> <span data-ttu-id="ff132-155">も大きなファイルを設定してアップロードすることができます、`maxRequestLength`要素の属性です。</span><span class="sxs-lookup"><span data-stu-id="ff132-155">You can allow larger files to be uploaded by setting the `maxRequestLength` attribute of the  element.</span></span> <span data-ttu-id="ff132-156">アプリケーション全体の最大許容ファイル サイズを大きくには設定、 `maxRequestLength` Web.config ファイル内の属性です。</span><span class="sxs-lookup"><span data-stu-id="ff132-156">To increase the maximum allowable file size for the entire application, set the `maxRequestLength` attribute in the Web.config file.</span></span> <span data-ttu-id="ff132-157">指定されたページの最大許容ファイル サイズを大きくには設定、`maxRequestLength`内の属性、 `location` Web.config 内の要素。例については、次を参照してください。[場所要素 (ASP.NET 設定スキーマ)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)です。</span><span class="sxs-lookup"><span data-stu-id="ff132-157">To increase the maximum allowable file size for a specified page, set the `maxRequestLength` attribute inside the `location` element in Web.config. For an example, see [location Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5).</span></span>  
  
 <span data-ttu-id="ff132-158">大きなファイルをアップロードする際、ユーザーが次のエラー メッセージを受信も可能性があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-158">When uploading large files, a user might also receive the following error message:</span></span>  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 <span data-ttu-id="ff132-159">ユーザーは、このエラー メッセージを表示する場合の値を大きく、`memoryLimit`属性、要素、Web.config のアプリケーションのファイルです。</span><span class="sxs-lookup"><span data-stu-id="ff132-159">If your users encounter this error message, increase the value of the `memoryLimit` attribute in the  of element the Web.config file for the application.</span></span> <span data-ttu-id="ff132-160">`memoryLimit`属性は、ワーカー プロセスが使用できるメモリの最大時間を指定します。</span><span class="sxs-lookup"><span data-stu-id="ff132-160">The `memoryLimit` attribute specifies the maximum amount of memory that a worker process can use.</span></span> <span data-ttu-id="ff132-161">ワーカー プロセスを超えた場合、`memoryLimit`金額に置き換える、新しいプロセスを作成し、新しいプロセスに現在のすべての要求の再割り当ています。</span><span class="sxs-lookup"><span data-stu-id="ff132-161">If the worker process exceeds the `memoryLimit` amount, a new process is created to replace it, and all current requests are reassigned to the new process.</span></span>  
  
 <span data-ttu-id="ff132-162">制御するかどうかをアップロードするファイルは、一時的に設定と、要求の処理中にメモリまたはサーバーに格納されている、`requestLengthDiskThreshold`要素の属性です。</span><span class="sxs-lookup"><span data-stu-id="ff132-162">To control whether the file to upload is temporarily stored in memory or on the server while the request is being processed, set the `requestLengthDiskThreshold` attribute of the  element.</span></span> <span data-ttu-id="ff132-163">この属性では、入力ストリーム バッファーのサイズを管理することができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-163">This attribute enables you to manage the size of the input stream buffer.</span></span> <span data-ttu-id="ff132-164">既定では 256 バイトです。</span><span class="sxs-lookup"><span data-stu-id="ff132-164">The default is 256 bytes.</span></span> <span data-ttu-id="ff132-165">指定した値が指定した値を超えない、`maxRequestLength`属性。</span><span class="sxs-lookup"><span data-stu-id="ff132-165">The value that you specify should not exceed the value that you specify for the `maxRequestLength` attribute.</span></span>  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a><span data-ttu-id="ff132-166">UpdatePanel コントロールでファイルアップロード コントロールの使用</span><span class="sxs-lookup"><span data-stu-id="ff132-166">Using the FileUpload Control with the UpdatePanel Control</span></span>  
 <span data-ttu-id="ff132-167"><xref:System.Web.UI.WebControls.FileUpload>コントロールが部分ページ レンダリング中に、非同期ポストバックのシナリオではなくポストバックのシナリオでのみ使用するように設計されています。</span><span class="sxs-lookup"><span data-stu-id="ff132-167">The <xref:System.Web.UI.WebControls.FileUpload> control is designed to be used only in postback scenarios and not in asynchronous postback scenarios during partial-page rendering.</span></span> <span data-ttu-id="ff132-168">使用する場合、<xref:System.Web.UI.WebControls.FileUpload>内の制御、<xref:System.Web.UI.UpdatePanel>コントロールにあるコントロールを使用して、ファイルをアップロードする必要があります、<xref:System.Web.UI.PostBackTrigger>パネルのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff132-168">When you use a <xref:System.Web.UI.WebControls.FileUpload> control inside an <xref:System.Web.UI.UpdatePanel> control, the file must be uploaded by using a control that is a <xref:System.Web.UI.PostBackTrigger> object for the panel.</span></span> <span data-ttu-id="ff132-169"><xref:System.Web.UI.UpdatePanel> コントロールはポストバック時にページ全体が更新ではなく、ページの選択した領域の更新に使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-169"><xref:System.Web.UI.UpdatePanel> controls are used to update selected regions of a page instead of updating the whole page with a postback.</span></span> <span data-ttu-id="ff132-170">詳細については、次を参照してください。 [UpdatePanel コントロールの概要](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)と[部分ページ レンダリング概要](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)です。</span><span class="sxs-lookup"><span data-stu-id="ff132-170">For more information, see [UpdatePanel Control Overview](http://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a) and [Partial-Page Rendering Overview](http://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49).</span></span>  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a><span data-ttu-id="ff132-171">宣言型の構文</span><span class="sxs-lookup"><span data-stu-id="ff132-171">Declarative Syntax</span></span>  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 <span data-ttu-id="ff132-172">Visual Studio の Web サイト プロジェクトとソース コードは、このトピックで使用可能な:[ダウンロード](http://go.microsoft.com/fwlink/?LinkId=191897)です。</span><span class="sxs-lookup"><span data-stu-id="ff132-172">A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191897).</span></span>  
  
 <span data-ttu-id="ff132-173">このセクションには、次の 4 つの例が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff132-173">This section contains the following four examples:</span></span>  
  
-   <span data-ttu-id="ff132-174">最初の例は、作成する方法を示します、<xref:System.Web.UI.WebControls.FileUpload>コントロールをコードで指定されているパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-174">The first example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span>  
  
-   <span data-ttu-id="ff132-175">2 番目の例は、作成する方法を示します、<xref:System.Web.UI.WebControls.FileUpload>アプリケーションのファイル システムで指定したディレクトリにファイルを保存するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-175">The second example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified directory in the file system for the application.</span></span>  
  
-   <span data-ttu-id="ff132-176">3 番目の例は、作成する方法を示します、<xref:System.Web.UI.WebControls.FileUpload>コントロールを指定されたパスにファイルを保存し、アップロードできるファイルのサイズを制限します。</span><span class="sxs-lookup"><span data-stu-id="ff132-176">The third example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified path and limits the size of the file that can be uploaded.</span></span>  
  
-   <span data-ttu-id="ff132-177">4 番目の例では、作成する方法を示します、<xref:System.Web.UI.WebControls.FileUpload>コントロールを指定されたパスにファイルを保存し、アップロードする .doc ファイルまたは .xls ファイル名拡張子を持つファイルのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="ff132-177">The fourth example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified path and allows only files that have the .doc or .xls file name extensions to be uploaded.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="ff132-178">これらの例の基本的な構文、<xref:System.Web.UI.WebControls.FileUpload>コントロールが、それらを示してはいませんすべて必要なエラー チェック ファイルに保存する前に完了する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-178">These examples demonstrate the basic syntax for the <xref:System.Web.UI.WebControls.FileUpload> control, but they do not demonstrate all the necessary error checking that should be completed before to saving the file.</span></span> <span data-ttu-id="ff132-179">この例より完全なコード例については、「<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-179">For a more complete example, see <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.</span></span>  
  
 <span data-ttu-id="ff132-180">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロールをコードで指定されているパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-180">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span> <span data-ttu-id="ff132-181"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-181">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 <span data-ttu-id="ff132-182">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>アプリケーションのファイル システムで指定したディレクトリにファイルを保存するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-182">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a specified directory in the file system for the application.</span></span> <span data-ttu-id="ff132-183"><xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType>プロパティを使用して、現在実行中のサーバー アプリケーションのルート ディレクトリの物理ファイル システム パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="ff132-183">The <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType> property is used to get the physical file system path of the root directory for the currently executing server application.</span></span> <span data-ttu-id="ff132-184"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-184">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 <span data-ttu-id="ff132-185">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロールをコードで指定されているパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-185">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in the code.</span></span> <span data-ttu-id="ff132-186">コントロールは、5 MB にアップロードできるファイルのサイズを制限します。</span><span class="sxs-lookup"><span data-stu-id="ff132-186">The control limits the size of the file that can be uploaded to 5 MB.</span></span> <span data-ttu-id="ff132-187"><xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティは、基になるへのアクセスに使用<xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティと戻り値、ファイルのサイズ。</span><span class="sxs-lookup"><span data-stu-id="ff132-187">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property is used to access the underlying <xref:System.Web.HttpPostedFile.ContentLength%2A> property and return the size of the file.</span></span> <span data-ttu-id="ff132-188">アップロードするファイルのサイズが 2 MB 未満である場合、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-188">If the size of the file to upload is less than 2 MB, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span> <span data-ttu-id="ff132-189">チェックに加えて、アプリケーション コードでは、最大ファイル サイズの設定を設定することができます、`maxRequestLength`アプリケーションの構成ファイルの最大許容サイズに要素の属性です。</span><span class="sxs-lookup"><span data-stu-id="ff132-189">In addition to checking for the maximum file size setting in your application code, you can set the `maxRequestLength` attribute of the  element to a maximum allowable size in the configuration file for your application.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 <span data-ttu-id="ff132-190">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロールをコードで指定されているパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-190">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in the code.</span></span> <span data-ttu-id="ff132-191">この例をアップロードする .doc ファイルまたは .xls ファイル名拡張子を持つファイルのみを許可します。</span><span class="sxs-lookup"><span data-stu-id="ff132-191">This example allows only files that have the .doc or .xls file name extensions to be uploaded.</span></span> <span data-ttu-id="ff132-192"><xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType>をアップロードするファイルの拡張子を返すメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-192">The <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType> method is called to return the extension of the file to upload.</span></span> <span data-ttu-id="ff132-193">ファイルに、.doc ファイルまたは .xls ファイル名拡張子がある場合、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-193">If the file has a .doc or .xls file name extension, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="ff132-194">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-194">Initializes a new instance of the <see cref="T:System.Web.UI.WebControls.FileUpload" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-195">使用して、<xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A>の新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.FileUpload>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff132-195">Use the <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> constructor to initialize a new instance of the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span> <span data-ttu-id="ff132-196"><xref:System.Web.UI.WebControls.FileUpload>コントロールは自動的に保存されませんファイル サーバーにユーザーがアップロードするファイルを選択後します。</span><span class="sxs-lookup"><span data-stu-id="ff132-196">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="ff132-197">コントロールまたはユーザーが指定されたファイルを送信できるようにするためのメカニズムを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-197">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="ff132-198">たとえば、ユーザーがファイルをアップロードして、クリックするボタンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="ff132-198">For example, you can provide a button that the user clicks to upload the file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-199">次の例での新しいインスタンスを初期化する方法、<xref:System.Web.UI.WebControls.FileUpload>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff132-199">The following example demonstrates how to initialize a new instance of the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span> <span data-ttu-id="ff132-200">この例はコンス トラクター構文を示していますが、機能によって追加されません、コントロールを作成した後、注意してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-200">Note that this example demonstrates the constructor syntax but does not add functionality to the control after it is created.</span></span>  
  
 <span data-ttu-id="ff132-201">この例に示されている例の一部である、<xref:System.Web.UI.WebControls.FileUpload>クラスです。</span><span class="sxs-lookup"><span data-stu-id="ff132-201">This example is part of a larger example provided for the <xref:System.Web.UI.WebControls.FileUpload> class.</span></span>  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="ff132-202">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-202">An <see cref="T:System.Web.UI.HtmlTextWriter" /> that represents the output stream to render HTML content on the client.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff132-203">指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに表示する <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの HTML 属性とスタイルを追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-203">Adds the HTML attributes and styles of a <see cref="T:System.Web.UI.WebControls.FileUpload" /> control to render to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-204"><xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>メソッドが適切な属性を挿入するコントロールの開発者によって使用される、主とにスタイル、<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>の出力ストリームは、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-204">The <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> method is primarily used by control developers to insert the appropriate attributes and styles to the <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> output stream for a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-205"><xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>メソッドのオーバーライド、<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-205">The <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A> method overrides the <xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-206">複数のファイルをアップロード対象に選択できるかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-206">Gets or sets a value that specifies whether multiple files can be selected for upload.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-207">複数のファイルを選択できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-207">
              <see langword="true" /> if multiple files can be selected; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-208">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、指定したファイルに格納されているバイトの配列を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-208">Gets an array of the bytes in a file that is specified by using a <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-209">指定したファイルの内容を格納する <see cref="T:System.Byte" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-209">A <see cref="T:System.Byte" /> array that contains the contents of the specified file.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-210"><xref:System.Web.UI.WebControls.FileUpload>コントロールでファイルが自動的にクライアントから読み取るされません。</span><span class="sxs-lookup"><span data-stu-id="ff132-210">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically read the file from the client.</span></span> <span data-ttu-id="ff132-211">コントロールまたはユーザーが指定されたファイルを送信できるようにするためのメカニズムを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-211">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="ff132-212">たとえば、ファイルをアップロードして、ユーザーがクリックしてボタンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="ff132-212">For example, you can provide a button that the user can click to upload the file.</span></span> <span data-ttu-id="ff132-213">指定したファイルを保存するために作成するコードを呼び出すことが、<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティで、ファイルの内容を返します。</span><span class="sxs-lookup"><span data-stu-id="ff132-213">The code that you write to save the specified file could call the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property, which returns the contents of the file.</span></span>  
  
 <span data-ttu-id="ff132-214">呼び出しの前に、<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティを使用してください、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>ことを確認するプロパティ、<xref:System.Web.UI.WebControls.FileUpload>コントロールにアップロードするファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff132-214">Before calling the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property, you should use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="ff132-215">場合、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>返します`true`を呼び出し、<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-215">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property.</span></span> <span data-ttu-id="ff132-216">返された場合`false`ユーザーに示すコントロールにファイルが含まれていないこと、メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-216">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="ff132-217">存在しないファイルを保存しようとスロー ファイルが存在することを確認するエラー処理コードを指定しない場合、<xref:System.Web.HttpException>例外。</span><span class="sxs-lookup"><span data-stu-id="ff132-217">If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <xref:System.Web.HttpException> exception.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-218">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-218">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-219">ユーザーがクリックしたとき、**ファイルのアップロード**ボタン、ファイルの内容は、ページのテキスト ボックス内のバイトとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-219">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span> <span data-ttu-id="ff132-220">この例では、<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>全体のファイルをアップロードするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-220">This example uses the <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> property to upload the entire file.</span></span>  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ff132-221">ファイルの一部が読み取られていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-221">The entire file was not read.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-222">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードするファイルを指す <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-222">Gets a <see cref="T:System.IO.Stream" /> object that points to a file to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-223">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> を使用して、アップロードするファイルを指す <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-223">A <see cref="T:System.IO.Stream" /> that points to a file to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-224"><xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティを取得、<xref:System.IO.Stream>を使用してアップロードするファイルを指すオブジェクトを<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-224">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property gets a <xref:System.IO.Stream> object that points to a file to upload by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-225">使用して、<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>ファイルの内容にアクセスするプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-225">Use the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property to access the contents of the file.</span></span> <span data-ttu-id="ff132-226">たとえば、使用することができます、<xref:System.IO.Stream>ファイルの内容をバイトとしての読み取り、バイト配列に保管するには、このプロパティによって返されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff132-226">For example, you can use the <xref:System.IO.Stream> object that is returned by this property to read the contents of the file as bytes and store them in a byte array.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-227">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-227">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-228"><xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>バイト配列に、ファイルの内容を読み取るプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff132-228">The <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property is used to read the contents of the file into a byte array.</span></span> <span data-ttu-id="ff132-229">ユーザーがクリックしたとき、**ファイルのアップロード**ボタン、ファイルの内容は、ページのテキスト ボックス内のバイトとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-229">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span>  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-230">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードする、クライアント上のファイルの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-230">Gets the name of a file on a client to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-231">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードする、クライアント上のファイルの名前を示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-231">A string that specifies the name of a file on a client to upload using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-232"><xref:System.Web.UI.WebControls.FileUpload> コントロールを使用して、アップロードする、クライアント上のファイルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff132-232">Gets the name of a file on a client to upload using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-233">ファイル名を<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティは、クライアント上のファイルのパスを含まないを返します。</span><span class="sxs-lookup"><span data-stu-id="ff132-233">The file name that the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property returns does not include the path of the file on the client.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-234">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロールをコードで指定されているパスにファイルを保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-234">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that saves files to a path that is specified in code.</span></span> <span data-ttu-id="ff132-235"><xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティを使用して、アップロードするファイルの名前を取得します。</span><span class="sxs-lookup"><span data-stu-id="ff132-235">The <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property is used to get the name of the file to upload.</span></span> <span data-ttu-id="ff132-236"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルを保存、ファイルがクライアント上に同じ名前を使用します。</span><span class="sxs-lookup"><span data-stu-id="ff132-236">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called to save the file to the specified path on the server, using the same name the file has on the client.</span></span> <span data-ttu-id="ff132-237">この例は、このコントロールの基本的な構文を示していますが、すべての必要なエラー チェックする場合は、ファイルを保存する前に行う必要がありますは示しませんに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-237">Note that this example demonstrates the basic syntax for this control, but does not demonstrate all the necessary error checking that should be done before saving the file.</span></span> <span data-ttu-id="ff132-238">この例より完全なコード例については、「<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-238">For a more complete example, see <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>.</span></span>  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-239">ファイルが <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールに格納されているかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-239">Gets a value indicating whether the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control contains a file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-240">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> にファイルが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-240">
              <see langword="true" /> if the <see cref="T:System.Web.UI.WebControls.FileUpload" /> contains a file; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-241"><xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>プロパティを示す値を取得するかどうか、<xref:System.Web.UI.WebControls.FileUpload>コントロールにアップロードするファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff132-241">The <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property gets a value indicating whether the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="ff132-242">このプロパティを使用して、ファイルに対する操作を実行する前にアップロードするファイルが存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ff132-242">Use this property to verify that a file to upload exists before performing operations on the file.</span></span> <span data-ttu-id="ff132-243">たとえばを呼び出す前に、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>にディスクを使用してファイルを保存する方法、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>プロパティをファイルが存在することを確認します。</span><span class="sxs-lookup"><span data-stu-id="ff132-243">For example, before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method to save the file to disk, use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the file exists.</span></span> <span data-ttu-id="ff132-244">場合<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>返します`true`を呼び出し、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-244">If <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="ff132-245">返された場合`false`ユーザーに示すコントロールにファイルが含まれていないこと、メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-245">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-246">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>エラー チェックを実行するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-246">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that performs error checking.</span></span> <span data-ttu-id="ff132-247">ファイルを保存する前に、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>コントロールにアップロードするファイルが含まれていることを確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-247">Before saving the file, the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> method is called to verify that the control contains a file to upload.</span></span> <span data-ttu-id="ff132-248">さらに、<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>パスに同じ名前のファイルが既に存在するかどうかを確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-248">In addition, the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method is called to check whether a file with the same name already occurs in the path.</span></span> <span data-ttu-id="ff132-249">場合は、アップロードするファイルの名前が付く前にアンダー スコア文字、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-249">If it does, the name of the file to upload is prefixed with an underscore character before the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called.</span></span> <span data-ttu-id="ff132-250">これは、既存のファイルが上書きすることを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="ff132-250">This prevents the existing file from being overwritten.</span></span>  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-251">アップロードされたファイルがあるかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-251">Gets a value that indicates whether any files have been uploaded.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-252">すべてのファイルがアップロードされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-252">
              <see langword="true" /> if any files have been uploaded; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-253">このメソッドも返します`false`(0 バイト) の空のファイルをアップロードする場合。</span><span class="sxs-lookup"><span data-stu-id="ff132-253">This method also returns `false` if an empty file (zero bytes) is uploaded.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">
          <span data-ttu-id="ff132-254">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-254">An <see cref="T:System.EventArgs" /> object that contains the event data.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff132-255">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの <see cref="E:System.Web.UI.Control.PreRender" /> イベントを発生させます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-255">Raises the <see cref="E:System.Web.UI.Control.PreRender" /> event for the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-256"><xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A>メソッドは、通知、<xref:System.Web.UI.WebControls.FileUpload>コントロール ビュー ステートや内容の表示を保存する前に、必要な事前描画手順を実行します。</span><span class="sxs-lookup"><span data-stu-id="ff132-256">The <xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A> method notifies the <xref:System.Web.UI.WebControls.FileUpload> control to perform any necessary pre-rendering steps before saving view state and rendering content.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-257">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードされたファイルの基になる <see cref="T:System.Web.HttpPostedFile" /> オブジェクトを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-257">Gets the underlying <see cref="T:System.Web.HttpPostedFile" /> object for a file that is uploaded by using the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-258">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> を使用してアップロードされたファイルの <see cref="T:System.Web.HttpPostedFile" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-258">An <see cref="T:System.Web.HttpPostedFile" /> for a file uploaded by using the <see cref="T:System.Web.UI.WebControls.FileUpload" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-259"><xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティを取得、基になる<xref:System.Web.HttpPostedFile>オブジェクトを使用してアップロードされたファイルを<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-259">The <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property gets the underlying <xref:System.Web.HttpPostedFile> object for a file that is uploaded by using the <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-260">アップロードされたファイルに対する追加のプロパティにアクセスするのにには、このプロパティを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff132-260">Use this property to access additional properties on the uploaded file.</span></span>  
  
 <span data-ttu-id="ff132-261">使用することができます、<xref:System.Web.HttpPostedFile.ContentLength%2A>ファイルの長さを取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-261">You can use the <xref:System.Web.HttpPostedFile.ContentLength%2A> property to get the length of the file.</span></span> <span data-ttu-id="ff132-262">使用することができます、 <xref:System.Web.HttpPostedFile.ContentType%2A> MIME を取得するプロパティのコンテンツ ファイルの種類。</span><span class="sxs-lookup"><span data-stu-id="ff132-262">You can use the <xref:System.Web.HttpPostedFile.ContentType%2A> property to get the MIME content type of the file.</span></span> <span data-ttu-id="ff132-263">さらに、使用することができます、<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティへのアクセスを<xref:System.Web.HttpPostedFile.FileName%2A>プロパティ、<xref:System.Web.HttpPostedFile.InputStream%2A>プロパティ、および<xref:System.Web.HttpPostedFile.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-263">In addition, you can use the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.FileName%2A> property, the <xref:System.Web.HttpPostedFile.InputStream%2A> property, and the <xref:System.Web.HttpPostedFile.SaveAs%2A> method.</span></span> <span data-ttu-id="ff132-264">ただし、同じ機能がによって提供される、<xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティ、<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティ、および<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-264">However, the same functionality is provided by the <xref:System.Web.UI.WebControls.FileUpload.FileName%2A> property, the <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> property, and the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-265">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>コントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-265">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control.</span></span> <span data-ttu-id="ff132-266">ユーザーがクリックしたとき、**ファイルのアップロード**ボタン、ファイルの内容は、ページのテキスト ボックス内のバイトとして表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-266">When the user clicks the **Upload file** button, the contents of the file are displayed as bytes in a text box on the page.</span></span> <span data-ttu-id="ff132-267">この例では、<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティへのアクセスを<xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="ff132-267">This example uses the <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> property to access the <xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType> property.</span></span> <span data-ttu-id="ff132-268"><xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティの使用をファイルの内容をバイト配列にコピーする前に、ファイルの長さを決定します。</span><span class="sxs-lookup"><span data-stu-id="ff132-268">The <xref:System.Web.HttpPostedFile.ContentLength%2A> property is used to determine the length of the file before copying the file contents to a byte array.</span></span>  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="ff132-269">アップロードされたファイルのコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-269">Gets the collection of uploaded files.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="ff132-270">アップロードされたファイルのコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-270">The collection of uploaded files.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">
          <span data-ttu-id="ff132-271">
            <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-271">The <see cref="T:System.Web.UI.HtmlTextWriter" /> object that receives the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control content.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff132-272">指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの内容を渡します。このオブジェクトが、クライアントに表示する内容を書き込みます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-272">Sends the <see cref="T:System.Web.UI.WebControls.FileUpload" /> control content to the specified <see cref="T:System.Web.UI.HtmlTextWriter" /> object, which writes the content to render on the client.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-273"><xref:System.Web.UI.WebControls.FileUpload.Render%2A>メソッド送信、<xref:System.Web.UI.WebControls.FileUpload>コントロールの内容を指定した<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>オブジェクトで、クライアント上に表示するコンテンツを書き込みます。</span><span class="sxs-lookup"><span data-stu-id="ff132-273">The <xref:System.Web.UI.WebControls.FileUpload.Render%2A> method sends the <xref:System.Web.UI.WebControls.FileUpload> control content to the specified <xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType> object, which writes the content to render on the client.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">
          <span data-ttu-id="ff132-274">アップロードしたファイルの保存先となるサーバー上の場所の完全パスを示す文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-274">A string that specifies the full path of the location of the server on which to save the uploaded file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="ff132-275">アップロードしたファイルの内容を Web サーバー上の指定したパスに保存します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-275">Saves the contents of an uploaded file to a specified path on the Web server.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff132-276"><xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドは、Web サーバー上のパスを指定する、アップロードされたファイルの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-276">The <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method saves the contents of an uploaded file to a specified path on the Web server.</span></span>  
  
 <span data-ttu-id="ff132-277"><xref:System.Web.UI.WebControls.FileUpload>コントロールは自動的に保存されませんファイル サーバーにユーザーがアップロードするファイルを選択後します。</span><span class="sxs-lookup"><span data-stu-id="ff132-277">The <xref:System.Web.UI.WebControls.FileUpload> control does not automatically save a file to the server after the user selects the file to upload.</span></span> <span data-ttu-id="ff132-278">コントロールまたはユーザーが指定されたファイルを送信できるようにするためのメカニズムを明示的に指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-278">You must explicitly provide a control or mechanism to allow the user to submit the specified file.</span></span> <span data-ttu-id="ff132-279">たとえば、ユーザーがファイルをアップロードして、クリックするボタンを提供できます。</span><span class="sxs-lookup"><span data-stu-id="ff132-279">For example, you can provide a button that the user clicks to upload the file.</span></span> <span data-ttu-id="ff132-280">指定したファイルを保存するために作成するコードを呼び出す必要があります、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドで、サーバー上のパスを指定するファイルの内容を保存します。</span><span class="sxs-lookup"><span data-stu-id="ff132-280">The code that you write to save the specified file should call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, which saves the contents of a file to a specified path on the server.</span></span> <span data-ttu-id="ff132-281">通常、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドは、サーバーへのポストバックを発生させるイベントのイベント処理メソッドで呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-281">Typically, the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called in an event-handling method for an event that raises a post back to the server.</span></span> <span data-ttu-id="ff132-282">たとえば、ファイルを送信するボタンを指定する場合をサーバーにファイルを保存するコードでしたし内に含める、クリック イベントのイベント処理メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ff132-282">For example, if you provide a button to submit a file, the code to save the file to the server could then be included inside the event-handling method for the click event.</span></span>  
  
 <span data-ttu-id="ff132-283">呼び出すと、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッド、アップロードされたファイルを保存するために、サーバー上のディレクトリの完全パスを指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-283">When you call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you must specify the full path of the directory on the server in which to save the uploaded file.</span></span> <span data-ttu-id="ff132-284">アプリケーション コードでパスを明示的に指定しない場合、<xref:System.Web.HttpException>ユーザーがファイルをアップロードしようとしたときに例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff132-284">If you do not explicitly specify a path in your application code, an <xref:System.Web.HttpException> exception is thrown when a user attempts to upload a file.</span></span> <span data-ttu-id="ff132-285">これにより、アップロードするファイルを保存するパスを指定するユーザーを許可しないことによって、セキュリティで保護されたサーバー上のファイルを保持します。</span><span class="sxs-lookup"><span data-stu-id="ff132-285">This behavior helps keep the files on the server secure, by not allowing users to specify a path in which to save the files that they upload.</span></span>  
  
 <span data-ttu-id="ff132-286">呼び出しの前に、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを使用してください、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>ことを確認するプロパティ、<xref:System.Web.UI.WebControls.FileUpload>コントロールにアップロードするファイルが含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff132-286">Before calling the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method, you should use the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> property to verify that the <xref:System.Web.UI.WebControls.FileUpload> control contains a file to upload.</span></span> <span data-ttu-id="ff132-287">場合、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>返します`true`を呼び出し、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ff132-287">If the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> returns `true`, call the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method.</span></span> <span data-ttu-id="ff132-288">返された場合`false`ユーザーに示すコントロールにファイルが含まれていないこと、メッセージが表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-288">If it returns `false`, display a message to the user indicating that the control does not contain a file.</span></span> <span data-ttu-id="ff132-289">存在しないファイルを保存しようとスロー ファイルが存在することを確認するエラー処理コードを指定しない場合、<xref:System.Web.HttpException>例外。</span><span class="sxs-lookup"><span data-stu-id="ff132-289">If you do not provide error-handling code to verify that a file exists, an attempt to save a nonexistent file throws an <xref:System.Web.HttpException> exception.</span></span>  
  
 <span data-ttu-id="ff132-290">呼び出すのため、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>を操作する ASP.NET アプリケーションは、サーバーで、ディレクトリへの書き込みアクセスが必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-290">For a call to the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> to work, the ASP.NET application must have write access to the directory on the server.</span></span> <span data-ttu-id="ff132-291">これには、アプリケーションが書き込みアクセス権を取得することができます 2 つの方法があります。</span><span class="sxs-lookup"><span data-stu-id="ff132-291">There are two ways that the application can get write access.</span></span> <span data-ttu-id="ff132-292">アプリケーションが実行されている、アップロードされたファイルを保存するディレクトリのアカウントへの書き込みアクセスを明示的に付与することができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-292">You can explicitly grant write access to the account under which the application is running, in the directory in which the uploaded files will be saved.</span></span> <span data-ttu-id="ff132-293">代わりに、ASP.NET アプリケーションに付与されている信頼のレベルを上げることができます。</span><span class="sxs-lookup"><span data-stu-id="ff132-293">Alternatively, you can increase the level of trust that is granted to the ASP.NET application.</span></span> <span data-ttu-id="ff132-294">にアプリケーションの実行中のディレクトリへの書き込みアクセスを取得する、アプリケーションを許可する必要があります、<xref:System.Web.AspNetHostingPermission>信頼レベル設定されているオブジェクト、<xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>値。</span><span class="sxs-lookup"><span data-stu-id="ff132-294">To get write access to the executing directory for the application, the application must be granted the <xref:System.Web.AspNetHostingPermission> object with the trust level set to the <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType> value.</span></span> <span data-ttu-id="ff132-295">信頼のレベルを増やすと、アプリケーションのサーバー上のリソースへのアクセスが向上します。</span><span class="sxs-lookup"><span data-stu-id="ff132-295">Increasing the level of trust increases the application's access to resources on the server.</span></span> <span data-ttu-id="ff132-296">アプリケーションの制御を取得した悪意のあるユーザーがこの高いレベルの信頼で実行することもあるため、セキュリティで保護された方法ではないことに注意してください。</span><span class="sxs-lookup"><span data-stu-id="ff132-296">Note that this is not a secure approach, because a malicious user who gains control of your application will also be able to run under this higher level of trust.</span></span> <span data-ttu-id="ff132-297">アプリケーションを実行するために必要な最低限の特権を持つユーザーのコンテキストで ASP.NET アプリケーションを実行することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff132-297">It is a best practice to run an ASP.NET application in the context of a user who has the minimum privileges that are required for the application to run.</span></span> <span data-ttu-id="ff132-298">ASP.NET アプリケーションのセキュリティに関する詳細については、次を参照してください。 [Web アプリケーション用の基本的なセキュリティ プラクティス](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)と[ASP.NET 信頼レベルとポリシー ファイル](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)です。</span><span class="sxs-lookup"><span data-stu-id="ff132-298">For more information about security in ASP.NET applications, see [Basic Security Practices for Web Applications](http://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad) and [ASP.NET Trust Levels and Policy Files](http://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff132-299">次の例で作成する方法、<xref:System.Web.UI.WebControls.FileUpload>エラー チェックを実行するコントロール。</span><span class="sxs-lookup"><span data-stu-id="ff132-299">The following example demonstrates how to create a <xref:System.Web.UI.WebControls.FileUpload> control that performs error checking.</span></span> <span data-ttu-id="ff132-300">ファイルを保存すると、前に、<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>をアップロードするファイルが存在することを確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-300">Before the file is saved, the <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> method is called to verify that a file to upload exists.</span></span> <span data-ttu-id="ff132-301">さらに、<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>を同じ名前が既にファイルがパスに存在するかどうかを確認するメソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-301">In addition, the <xref:System.IO.File.Exists%2A?displayProperty=nameWithType> method is called to check whether a file that has the same name already exists in the path.</span></span> <span data-ttu-id="ff132-302">場合は、アップロードするファイルの名前が付きますの前に、番号、<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="ff132-302">If it does, the name of the file to upload is prefixed with a number before the <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> method is called.</span></span> <span data-ttu-id="ff132-303">これは、既存のファイルが上書きすることを防ぎます。</span><span class="sxs-lookup"><span data-stu-id="ff132-303">This prevents the existing file from being overwritten.</span></span>  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="ff132-304">
            <paramref name="filename" /> が完全パスではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="ff132-304">
              <paramref name="filename" /> is not a full path.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
  </Members>
</Type>