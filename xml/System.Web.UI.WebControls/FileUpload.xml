<Type Name="FileUpload" FullName="System.Web.UI.WebControls.FileUpload">
  <Metadata><Meta Name="ms.openlocfilehash" Value="f8a9da64f7c3e69d521d4a0a5bcb5de08b078390" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70624994" /></Metadata><TypeSignature Language="C#" Value="public class FileUpload : System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit FileUpload extends System.Web.UI.WebControls.WebControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.FileUpload" />
  <TypeSignature Language="VB.NET" Value="Public Class FileUpload&#xA;Inherits WebControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class FileUpload : System::Web::UI::WebControls::WebControl" />
  <TypeSignature Language="F#" Value="type FileUpload = class&#xA;    inherit WebControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.WebControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ControlValueProperty("FileBytes")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ValidationProperty("FileName")</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5">
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.PreviewControlDesigner, System.Design, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>ユーザーがファイルを選択してサーバーにアップロードするためのテキスト ボックス コントロールと参照ボタンを表示します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [アップロードされたファイルの保存](#saving_uploaded_files)  
  
-   [セキュリティの考慮事項](#security_considerations)  
  
-   [メモリの制限事項](#memory_limitations)  
  
-   [UpdatePanel コントロールでの FileUpload コントロールの使用](#using_the_FileUpload_Control_with_the_UpdatePanel_control)  
  
-   [宣言型の構文](#DeclarativeSyntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 クラス<xref:System.Web.UI.WebControls.FileUpload>は、ユーザーがクライアント上のファイルを選択して Web サーバーにアップロードできるようにする、テキストボックスコントロールと参照ボタンを表示します。 ユーザーは、コントロールのテキストボックスに、ローカルコンピューター上のファイルの完全なパス ( **C:\MyFiles\TestFile.txt**など) を入力することによって、アップロードするファイルを指定します。 または、**[参照]** ボタンをクリックしてファイルを選択し、**[ファイルの選択]** ダイアログボックスでファイルを検索することもできます。  
  
 コントロールを使用して、アップロードするクライアント上のファイルの名前を取得するには、 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティを使用します。 <xref:System.Web.UI.WebControls.FileUpload> このプロパティが返すファイル名には、クライアント上のファイルのパスは含まれません。  
  
 プロパティ<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>は、アップロード<xref:System.IO.Stream>するファイルを指すオブジェクトを取得します。 ファイルの内容にバイトとしてアクセスするには、このプロパティを使用します。 たとえば、 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティによって返さ<xref:System.IO.Stream>れるオブジェクトを使用して、ファイルの内容をバイトとして読み取り、バイト配列に格納することができます。 また、 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティを使用して、ファイル内のすべてのバイトを取得することもできます。  
  
 プロパティ<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>は、アップロードする<xref:System.Web.HttpPostedFile>ファイルの基になるオブジェクトを取得します。 このプロパティを使用して、ファイルの追加のプロパティにアクセスできます。 プロパティ<xref:System.Web.HttpPostedFile.ContentLength%2A>は、ファイルの長さを取得します。 プロパティ<xref:System.Web.HttpPostedFile.ContentType%2A>は、ファイルの MIME コンテンツタイプを取得します。 さらに、 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティを使用して、プロパティ、 <xref:System.Web.HttpPostedFile.FileName%2A> <xref:System.Web.HttpPostedFile.InputStream%2A>プロパティ、および<xref:System.Web.HttpPostedFile.SaveAs%2A>メソッドにアクセスできます。 ただし、 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティ<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 、プロパティ、および<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドによっても同じ機能が提供されます。  
  
<a name="saving_uploaded_files"></a>   
## <a name="saving-uploaded-files"></a>アップロードされたファイルの保存  
 コントロール<xref:System.Web.UI.WebControls.FileUpload>は、アップロードするファイルをユーザーが選択した後に、ファイルをサーバーに自動的に保存しません。 ユーザーが指定したファイルを送信できるようにするには、コントロールまたは機構を明示的に指定する必要があります。 たとえば、ファイルをアップロードするためにユーザーがクリックするボタンを指定できます。 指定したファイルを保存するために記述するコードで<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>は、メソッドを呼び出す必要があります。これにより、ファイルの内容がサーバー上の指定したパスに保存されます。 通常、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>このメソッドは、サーバーへのポストバックを発生させるイベントのイベント処理メソッドで呼び出されます。 たとえば、ファイルを送信するためのボタンを指定した場合は、click イベントのイベント処理メソッド内にファイルを保存するコードを含めることができます。  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出してファイルをサーバーに保存する前に、 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> <xref:System.Web.UI.WebControls.FileUpload>プロパティを使用して、コントロールにファイルが含まれていることを確認します。 が<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>を返す`true`場合は、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出します。 が返さ`false`れた場合は、コントロールにファイルが含まれていないことを示すメッセージをユーザーに表示します。 既定では、 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>このプロパティには0バイトが含まれているため、プロパティをチェックして、アップロードするファイルが存在するかどうかを判断しないでください。 その結果、 <xref:System.Web.UI.WebControls.FileUpload>コントロールが空白の場合でも、プロパティ<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>は null 以外の値を返します。  
  
<a name="security_considerations"></a>   
## <a name="security-considerations"></a>セキュリティの考慮事項  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出す場合は、アップロードしたファイルを保存するディレクトリの完全なパスを指定する必要があります。 アプリケーションコードでパスを明示的に指定しないと、ユーザーがファイルをアップロードしようとしたときに例外がスローされます。 この動作により、ユーザーがアプリケーションのディレクトリ構造内の任意の場所に書き込みをしたり、機密性の高いルートディレクトリへのアクセスを防止したりして、サーバー上のファイルをセキュリティで保護することができます。  
  
 メソッド<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>は、アップロードしたファイルを指定されたディレクトリに書き込みます。 そのため、ASP.NET アプリケーションには、サーバー上のディレクトリに対する書き込みアクセス権が必要です。 アプリケーションが書き込みアクセスを取得するには、2つの方法があります。 アップロードされたファイルを保存するディレクトリで、アプリケーションを実行しているアカウントに書き込みアクセス権を明示的に付与することができます。 または、ASP.NET アプリケーションに付与される信頼レベルを上げることもできます。 アプリケーションの実行ディレクトリへの書き込みアクセスを取得するには、アプリケーションに、 <xref:System.Web.AspNetHostingPermission> <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>値に設定された信頼レベルを持つオブジェクトが付与されている必要があります。 信頼レベルを上げると、サーバー上のリソースへのアプリケーションのアクセスが増加します。 ただし、これは安全な方法ではありません。これは、アプリケーションを制御する悪意のあるユーザーも、この高いレベルの信頼度で実行できるためです。 ベストプラクティスとして、アプリケーションの実行に必要な最小限の特権を持つユーザーのコンテキストで ASP.NET アプリケーションを実行することをお勧めします。 ASP.NET アプリケーションのセキュリティの詳細については、「Web アプリケーションと ASP.NET の[信頼レベルとポリシーファイル](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)[の基本セキュリティプラクティス](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)」を参照してください。  
  
<a name="memory_limitations"></a>   
## <a name="memory-limitations"></a>メモリの制限事項  
 サービス拒否攻撃から保護する方法の1つは、 <xref:System.Web.UI.WebControls.FileUpload>コントロールを使用してアップロードできるファイルのサイズを制限することです。 アップロードする予定のファイルの種類に適したサイズ制限を設定する必要があります。 既定のサイズ制限は4096キロバイト (KB) または4メガバイト (MB) です。 `maxRequestLength` [HttpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)要素の属性を設定することにより、より大きなファイルをアップロードできるようにすることができます。 アプリケーション全体で許容される最大ファイルサイズを増やすには、 `maxRequestLength` web.config ファイルで属性を設定します。 指定されたページで許容される最大ファイルサイズを増やす`maxRequestLength`には、 `location` web.config の要素の中に属性を設定します。例については、「 [Location 要素 (ASP.NET Settings Schema)](https://msdn.microsoft.com/library/922ef7d5-da38-4661-b1c6-5b9e5ceda1d5)」を参照してください。  
  
 大きなファイルをアップロードするときに、次のエラーメッセージが表示されることもあります。  
  
 `aspnet_wp.exe (PID: 1520) was recycled because memory consumption exceeded 460 MB (60 percent of available RAM).`  
  
 ユーザーがこのエラーメッセージを表示した場合は、 `memoryLimit` [processModel](https://msdn.microsoft.com/library/4b8fe20e-74c8-4566-b72c-ce5f83c8e32d)の要素の属性の値を、アプリケーションの web.config ファイルで増やします。 属性`memoryLimit`は、ワーカープロセスが使用できるメモリの最大量を指定します。 ワーカープロセスがこの`memoryLimit`量を超えた場合は、新しいプロセスが作成されて置き換えられ、現在のすべての要求が新しいプロセスに再割り当てされます。  
  
 要求の処理中に、アップロードするファイルが一時的にメモリまたはサーバーに格納されるかどうかを制御`requestLengthDiskThreshold`するには、 [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)要素の属性を設定します。 この属性を使用すると、入力ストリームバッファーのサイズを管理できます。 既定値は256バイトです。 指定する値は、 `maxRequestLength`属性に指定した値を超えることはできません。  
  
<a name="using_the_FileUpload_Control_with_the_UpdatePanel_control"></a>   
## <a name="using-the-fileupload-control-with-the-updatepanel-control"></a>UpdatePanel コントロールでの FileUpload コントロールの使用  
 コントロール<xref:System.Web.UI.WebControls.FileUpload>は、部分ページレンダリング時の非同期ポストバックシナリオではなく、ポストバックシナリオでのみ使用されるように設計されています。 コントロール<xref:System.Web.UI.WebControls.FileUpload> <xref:System.Web.UI.PostBackTrigger>内でコントロールを使用する場合は、そのパネルのオブジェクトであるコントロールを使用してファイルをアップロードする必要があります。 <xref:System.Web.UI.UpdatePanel> <xref:System.Web.UI.UpdatePanel>コントロールは、ポストバックを使用してページ全体を更新するのではなく、ページの選択された領域を更新するために使用されます。 詳細については、「 [UpdatePanel コントロールの概要](https://msdn.microsoft.com/library/29a2265d-9674-4c19-b70e-e5560ee9689a)」および「[部分ページレンダリングの概要](https://msdn.microsoft.com/library/5c12736d-d9e9-464a-9388-3fe0f9f49e49)」を参照してください。  
  
<a name="DeclarativeSyntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:FileUpload  
    AccessKey="string"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CssClass="string"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    Height="size"  
    ID="string"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnPreRender="PreRender event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
/>  
```  
  
   
  
## Examples  
 このトピックでは、ソースコードが含まれている Visual Studio Web サイトプロジェクトを[ダウンロード](https://go.microsoft.com/fwlink/?LinkId=191897)できます。  
  
 ここでは、次の4つの例について説明します。  
  
-   最初の例は、コードで指定<xref:System.Web.UI.WebControls.FileUpload>されたパスにファイルを保存するコントロールを作成する方法を示しています。  
  
-   2番目の例では、 <xref:System.Web.UI.WebControls.FileUpload>アプリケーションのファイルシステム内の指定されたディレクトリにファイルを保存するコントロールを作成する方法を示します。  
  
-   3番目の例では、 <xref:System.Web.UI.WebControls.FileUpload>指定されたパスにファイルを保存するコントロールを作成し、アップロードできるファイルのサイズを制限する方法を示します。  
  
-   4番目の例では、 <xref:System.Web.UI.WebControls.FileUpload>指定されたパスにファイルを保存するコントロールを作成し、.doc または .xls のファイル名拡張子を持つファイルのみをアップロードできるようにする方法を示します。  
  
> [!CAUTION]
>  これらの例では、 <xref:System.Web.UI.WebControls.FileUpload>コントロールの基本的な構文を示していますが、ファイルを保存する前に完了しておく必要があるすべてのエラーチェックについては説明しません。 この例より完全なコード例については、「<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>」を参照してください。  
  
 次の例は、コードで指定<xref:System.Web.UI.WebControls.FileUpload>されたパスにファイルを保存するコントロールを作成する方法を示しています。 サーバー <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>上の指定されたパスにファイルを保存するために、メソッドが呼び出されます。  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 次の例では、アプリケーションの<xref:System.Web.UI.WebControls.FileUpload>ファイルシステム内の指定されたディレクトリにファイルを保存するコントロールを作成する方法を示します。 <xref:System.Web.HttpRequest.PhysicalApplicationPath%2A?displayProperty=nameWithType>プロパティは、現在実行しているサーバーアプリケーションのルートディレクトリの物理ファイルシステムパスを取得するために使用されます。 サーバー <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>上の指定されたパスにファイルを保存するために、メソッドが呼び出されます。  
  
 [!code-aspx-csharp[FileUploadClass2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass2/cs/fileuploadclass2cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass2/VB/fileuploadclass2vb.aspx#1)]  
  
 次の例は、コードで指定<xref:System.Web.UI.WebControls.FileUpload>されたパスにファイルを保存するコントロールを作成する方法を示しています。 このコントロールによって、アップロードできるファイルのサイズが 2 MB に制限されます。 プロパティは、基になる<xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティにアクセスして、ファイルのサイズを返すために使用されます。 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> アップロードするファイルのサイズが 2 MB 未満の場合、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルが保存されます。 アプリケーションコードの [最大ファイルサイズ] 設定を確認するだけでなく、 [httpRuntime](https://msdn.microsoft.com/library/e9b81350-8aaf-47cc-9843-5f7d0c59f369)要素の`maxRequestLength`属性を、アプリケーションの構成ファイルで許容される最大サイズに設定することもできます。  
  
 [!code-aspx-csharp[FileUploadClass3#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass3/cs/fileuploadclass3cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass3#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass3/VB/fileuploadclass3vb.aspx#1)]  
  
 次の例は、コードで指定<xref:System.Web.UI.WebControls.FileUpload>されたパスにファイルを保存するコントロールを作成する方法を示しています。 この例では、ファイル名拡張子が .doc または .xls のファイルのみをアップロードできます。 <xref:System.IO.Path.GetExtension%2A?displayProperty=nameWithType>メソッドは、アップロードするファイルの拡張子を返すために呼び出されます。 ファイルの拡張子が .doc または .xls の場合、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出され、サーバー上の指定されたパスにファイルが保存されます。  
  
 [!code-aspx-csharp[FileUploadClass4#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass4/cs/fileuploadclass4cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass4#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass4/VB/fileuploadclass4vb.aspx#1)]  
  
 ]]></format>
    </remarks>
    <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public FileUpload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; FileUpload();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FileUpload" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターを使用して、 <xref:System.Web.UI.WebControls.FileUpload>クラスの新しいインスタンスを初期化します。 <xref:System.Web.UI.WebControls.FileUpload.%23ctor%2A> コントロール<xref:System.Web.UI.WebControls.FileUpload>は、アップロードするファイルをユーザーが選択した後に、ファイルをサーバーに自動的に保存しません。 ユーザーが指定したファイルを送信できるようにするには、コントロールまたは機構を明示的に指定する必要があります。 たとえば、ファイルをアップロードするためにユーザーがクリックするボタンを指定できます。  
  
   
  
## Examples  
 <xref:System.Web.UI.WebControls.FileUpload>クラスの新しいインスタンスを初期化する方法を次の例に示します。 この例では、コンストラクターの構文を示していますが、コントロールが作成された後に機能が追加されることはありません。  
  
 この例は、 <xref:System.Web.UI.WebControls.FileUpload>クラスに対して提供される大規模な例の一部です。  
  
 [!code-aspx-vb[FileUploadCstr#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadCstr/VB/fileuploadcstrvb.aspx#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddAttributesToRender">
      <MemberSignature Language="C#" Value="protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void AddAttributesToRender(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub AddAttributesToRender (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void AddAttributesToRender(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.AddAttributesToRender : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.AddAttributesToRender writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">クライアントに HTML コンテンツを表示する出力ストリームを表す <see cref="T:System.Web.UI.HtmlTextWriter" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに表示する <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの HTML 属性とスタイルを追加します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>は、コントロールの<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>出力ストリームに適切な属性とスタイルを挿入するために、コントロールの<xref:System.Web.UI.WebControls.FileUpload>開発者によって主に使用されます。 メソッドは、メソッド<xref:System.Web.UI.WebControls.WebControl.AddAttributesToRender%2A?displayProperty=nameWithType>をオーバーライドします。 <xref:System.Web.UI.WebControls.FileUpload.AddAttributesToRender%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
        <altmember cref="M:System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public virtual bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.Web.UI.WebControls.FileUpload.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(true)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>複数のファイルをアップロード対象に選択できるかどうかを示す値を取得または設定します。</summary>
        <value>複数のファイルを選択できる場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FileBytes">
      <MemberSignature Language="C#" Value="public byte[] FileBytes { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance unsigned int8[] FileBytes" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileBytes As Byte()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property cli::array &lt;System::Byte&gt; ^ FileBytes { cli::array &lt;System::Byte&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileBytes : byte[]" Usage="System.Web.UI.WebControls.FileUpload.FileBytes" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Bindable(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Byte[]</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、指定したファイルに格納されているバイトの配列を取得します。</summary>
        <value>指定したファイルの内容を格納する <see cref="T:System.Byte" /> 配列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コントロール<xref:System.Web.UI.WebControls.FileUpload>は、クライアントからファイルを自動的に読み取ることはありません。 ユーザーが指定したファイルを送信できるようにするには、コントロールまたは機構を明示的に指定する必要があります。 たとえば、ユーザーがクリックしてファイルをアップロードできるボタンを提供できます。 指定されたファイルを保存するために記述するコード<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>は、ファイルの内容を返すプロパティを呼び出すことができます。  
  
 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティを呼び出す前に、 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> <xref:System.Web.UI.WebControls.FileUpload>プロパティを使用して、アップロードするファイルがコントロールに含まれていることを確認する必要があります。 が<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>を返す`true`場合は、 <xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A>プロパティを呼び出します。 が返さ`false`れた場合は、コントロールにファイルが含まれていないことを示すメッセージをユーザーに表示します。 ファイルが存在することを確認するためにエラー処理コードを指定しなかった場合、存在しないファイルを<xref:System.Web.HttpException>保存しようとすると例外がスローされます。  
  
   
  
## Examples  
 次の例は、コントロールを<xref:System.Web.UI.WebControls.FileUpload>作成する方法を示しています。 ユーザーが [ファイルの**アップロード**] ボタンをクリックすると、ファイルの内容がページ上のテキストボックスにバイトとして表示されます。 この例では<xref:System.Web.UI.WebControls.FileUpload.FileBytes%2A> 、プロパティを使用してファイル全体をアップロードします。  
  
 [!code-aspx-csharp[FileUploadFileBytes#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadFileBytes/CS/FileUploadFileBytesCS.aspx#1)]
 [!code-aspx-vb[FileUploadFileBytes#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadFileBytes/VB/FileUploadFileBytesVB.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException">ファイルの一部が読み取られていません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      </Docs>
    </Member>
    <Member MemberName="FileContent">
      <MemberSignature Language="C#" Value="public System.IO.Stream FileContent { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IO.Stream FileContent" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileContent As Stream" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IO::Stream ^ FileContent { System::IO::Stream ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileContent : System.IO.Stream" Usage="System.Web.UI.WebControls.FileUpload.FileContent" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードするファイルを指す <see cref="T:System.IO.Stream" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FileUpload" /> を使用して、アップロードするファイルを指す <see cref="T:System.IO.Stream" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>は、 <xref:System.Web.UI.WebControls.FileUpload>コントロール<xref:System.IO.Stream>を使用して、アップロードするファイルを指すオブジェクトを取得します。 ファイルの<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>内容にアクセスするには、プロパティを使用します。 たとえば、このプロパティによって<xref:System.IO.Stream>返されるオブジェクトを使用して、ファイルの内容をバイトとして読み取り、バイト配列に格納することができます。  
  
   
  
## Examples  
 次の例は、コントロールを<xref:System.Web.UI.WebControls.FileUpload>作成する方法を示しています。 <xref:System.Web.UI.WebControls.FileUpload.FileContent%2A>プロパティは、ファイルの内容をバイト配列に読み取るために使用されます。 ユーザーが [ファイルの**アップロード**] ボタンをクリックすると、ファイルの内容がページ上のテキストボックスにバイトとして表示されます。  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="FileName">
      <MemberSignature Language="C#" Value="public string FileName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FileName" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FileName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ FileName { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FileName : string" Usage="System.Web.UI.WebControls.FileUpload.FileName" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードする、クライアント上のファイルの名前を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードする、クライアント上のファイルの名前を示す文字列。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.FileUpload> コントロールを使用して、アップロードする、クライアント上のファイルの名前を取得します。 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティが返すファイル名には、クライアント上のファイルのパスは含まれません。  
  
   
  
## Examples  
 次の例は、コードで指定<xref:System.Web.UI.WebControls.FileUpload>されたパスにファイルを保存するコントロールを作成する方法を示しています。 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティは、アップロードするファイルの名前を取得するために使用されます。 ファイル<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>がクライアント上にあるのと同じ名前を使用して、サーバー上の指定されたパスにファイルを保存するために、メソッドが呼び出されます。 この例では、このコントロールの基本的な構文を示していますが、ファイルを保存する前に実行する必要があるすべてのエラーチェックについては説明しません。 この例より完全なコード例については、「<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>」を参照してください。  
  
 [!code-aspx-csharp[FileUploadClass1#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUploadClass1/cs/fileuploadclass1cs.aspx#1)]
 [!code-aspx-vb[FileUploadClass1#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUploadClass1/VB/fileuploadclass1vb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFile">
      <MemberSignature Language="C#" Value="public bool HasFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFile As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFile { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFile : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ファイルが <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールに格納されているかどうかを示す値を取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FileUpload" /> にファイルが格納されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>は、アップロードするファイルがコントロール<xref:System.Web.UI.WebControls.FileUpload>に含まれているかどうかを示す値を取得します。 このプロパティを使用して、ファイルに対する操作を実行する前に、アップロードするファイルが存在することを確認します。 たとえば、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出してファイルをディスクに保存する前に、 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>プロパティを使用して、ファイルが存在することを確認します。 が<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>を`true`返す場合は<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A> 、メソッドを呼び出します。 が返さ`false`れた場合は、コントロールにファイルが含まれていないことを示すメッセージをユーザーに表示します。  
  
   
  
## Examples  
 次の例では、エラーチェック<xref:System.Web.UI.WebControls.FileUpload>を実行するコントロールを作成する方法を示します。 ファイルを保存する前に<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> 、メソッドを呼び出して、アップロードするファイルがコントロールに含まれていることを確認します。 さらに、同じ<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>名前のファイルがパスに既に存在するかどうかを確認するために、メソッドが呼び出されます。 この場合、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出される前に、アップロードするファイルの名前の先頭にアンダースコア文字が付きます。 これにより、既存のファイルが上書きされるのを防ぐことができます。  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="HasFiles">
      <MemberSignature Language="C#" Value="public bool HasFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool HasFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HasFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool HasFiles { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.HasFiles : bool" Usage="System.Web.UI.WebControls.FileUpload.HasFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アップロードされたファイルがあるかどうかを示す値を取得します。</summary>
        <value>すべてのファイルがアップロードされている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドは、 `false`空のファイル (ゼロバイト) がアップロードされた場合にもを返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="OnPreRender">
      <MemberSignature Language="C#" Value="protected internal override void OnPreRender (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnPreRender(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.OnPreRender(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnPreRender (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnPreRender(EventArgs ^ e);" />
      <MemberSignature Language="F#" Value="override this.OnPreRender : EventArgs -&gt; unit" Usage="fileUpload.OnPreRender e" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" /> オブジェクト。</param>
        <summary><see cref="E:System.Web.UI.Control.PreRender" /> コントロールの <see cref="T:System.Web.UI.WebControls.FileUpload" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.FileUpload.OnPreRender%2A>は、ビュー <xref:System.Web.UI.WebControls.FileUpload>ステートを保存してコンテンツをレンダリングする前に、必要な事前レンダリングの手順を実行するようにコントロールに通知します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="PostedFile">
      <MemberSignature Language="C#" Value="public System.Web.HttpPostedFile PostedFile { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.HttpPostedFile PostedFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFile As HttpPostedFile" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::HttpPostedFile ^ PostedFile { System::Web::HttpPostedFile ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFile : System.Web.HttpPostedFile" Usage="System.Web.UI.WebControls.FileUpload.PostedFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.HttpPostedFile</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールを使用して、アップロードされたファイルの基になる <see cref="T:System.Web.HttpPostedFile" /> オブジェクトを取得します。</summary>
        <value><see cref="T:System.Web.UI.WebControls.FileUpload" /> を使用してアップロードされたファイルの <see cref="T:System.Web.HttpPostedFile" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティ<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>は、 <xref:System.Web.UI.WebControls.FileUpload>コントロールを<xref:System.Web.HttpPostedFile>使用してアップロードされたファイルの基になるオブジェクトを取得します。 アップロードされたファイルの追加のプロパティにアクセスするには、このプロパティを使用します。  
  
 <xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティを使用して、ファイルの長さを取得できます。 <xref:System.Web.HttpPostedFile.ContentType%2A>プロパティを使用して、ファイルの MIME コンテンツタイプを取得できます。 さらに、 <xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A>プロパティを使用して、プロパティ、 <xref:System.Web.HttpPostedFile.FileName%2A> <xref:System.Web.HttpPostedFile.InputStream%2A>プロパティ、および<xref:System.Web.HttpPostedFile.SaveAs%2A>メソッドにアクセスできます。 ただし、 <xref:System.Web.UI.WebControls.FileUpload.FileName%2A>プロパティ<xref:System.Web.UI.WebControls.FileUpload.FileContent%2A> 、プロパティ、および<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドによっても同じ機能が提供されます。  
  
   
  
## Examples  
 次の例は、コントロールを<xref:System.Web.UI.WebControls.FileUpload>作成する方法を示しています。 ユーザーが [ファイルの**アップロード**] ボタンをクリックすると、ファイルの内容がページ上のテキストボックスにバイトとして表示されます。 この例では<xref:System.Web.UI.WebControls.FileUpload.PostedFile%2A> 、プロパティを使用<xref:System.Web.HttpPostedFile.ContentLength%2A?displayProperty=nameWithType>してプロパティにアクセスします。 <xref:System.Web.HttpPostedFile.ContentLength%2A>プロパティは、ファイルの内容をバイト配列にコピーする前に、ファイルの長さを決定するために使用されます。  
  
 [!code-aspx-csharp[FileUpload.FileContent#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.FileContent/cs/fileupload.filecontentcs.aspx#1)]
 [!code-aspx-vb[FileUpload.FileContent#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.FileContent/VB/fileupload.filecontentvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.HttpPostedFile" />
      </Docs>
    </Member>
    <Member MemberName="PostedFiles">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt; PostedFiles { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.IList`1&lt;class System.Web.HttpPostedFile&gt; PostedFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property PostedFiles As IList(Of HttpPostedFile)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ PostedFiles { System::Collections::Generic::IList&lt;System::Web::HttpPostedFile ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.PostedFiles : System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;" Usage="System.Web.UI.WebControls.FileUpload.PostedFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility(System.ComponentModel.DesignerSerializationVisibility.Hidden)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IList&lt;System.Web.HttpPostedFile&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アップロードされたファイルのコレクションを取得します。</summary>
        <value>アップロードされたファイルのコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberSignature Language="F#" Value="override this.Render : System.Web.UI.HtmlTextWriter -&gt; unit" Usage="fileUpload.Render writer" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer"><see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの内容を受け取る <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクト。</param>
        <summary>指定された <see cref="T:System.Web.UI.HtmlTextWriter" /> オブジェクトに <see cref="T:System.Web.UI.WebControls.FileUpload" /> コントロールの内容を渡します。このオブジェクトが、クライアントに表示する内容を書き込みます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.FileUpload.Render%2A>は、指定<xref:System.Web.UI.WebControls.FileUpload>された<xref:System.Web.UI.HtmlTextWriter?displayProperty=nameWithType>オブジェクトにコントロールの内容を送信します。このオブジェクトは、クライアントに表示するコンテンツを書き込みます。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriter" />
      </Docs>
    </Member>
    <Member MemberName="SaveAs">
      <MemberSignature Language="C#" Value="public void SaveAs (string filename);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SaveAs(string filename) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.FileUpload.SaveAs(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SaveAs (filename As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SaveAs(System::String ^ filename);" />
      <MemberSignature Language="F#" Value="member this.SaveAs : string -&gt; unit" Usage="fileUpload.SaveAs filename" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filename" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filename">アップロードしたファイルの保存先となるサーバー上の場所の完全パスを示す文字列。</param>
        <summary>アップロードしたファイルの内容を Web サーバー上の指定したパスに保存します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>は、アップロードされたファイルの内容を Web サーバー上の指定したパスに保存します。  
  
 コントロール<xref:System.Web.UI.WebControls.FileUpload>は、アップロードするファイルをユーザーが選択した後に、ファイルをサーバーに自動的に保存しません。 ユーザーが指定したファイルを送信できるようにするには、コントロールまたは機構を明示的に指定する必要があります。 たとえば、ファイルをアップロードするためにユーザーがクリックするボタンを指定できます。 指定したファイルを保存するために記述するコードで<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>は、メソッドを呼び出す必要があります。これにより、ファイルの内容がサーバー上の指定したパスに保存されます。 通常、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>このメソッドは、サーバーへのポストバックを発生させるイベントのイベント処理メソッドで呼び出されます。 たとえば、ファイルを送信するためのボタンを指定した場合、ファイルをサーバーに保存するコードは、クリックイベントのイベント処理メソッド内に含めることができます。  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出す場合は、アップロードしたファイルを保存するサーバー上のディレクトリの完全なパスを指定する必要があります。 アプリケーションコードでパスを明示的に指定しないと、 <xref:System.Web.HttpException>ユーザーがファイルをアップロードしようとしたときに例外がスローされます。 この動作により、アップロードしたファイルを保存するパスをユーザーが指定できないようにすることで、サーバー上のファイルをセキュリティで保護することができます。  
  
 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出す前に、 <xref:System.Web.UI.WebControls.FileUpload.HasFile%2A> <xref:System.Web.UI.WebControls.FileUpload>プロパティを使用して、アップロードするファイルがコントロールに含まれていることを確認する必要があります。 が<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>を返す`true`場合は、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドを呼び出します。 が返さ`false`れた場合は、コントロールにファイルが含まれていないことを示すメッセージをユーザーに表示します。 ファイルが存在することを確認するためにエラー処理コードを指定しなかった場合、存在しないファイルを<xref:System.Web.HttpException>保存しようとすると例外がスローされます。  
  
 への<xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>呼び出しを機能させるには、ASP.NET アプリケーションにサーバー上のディレクトリへの書き込みアクセス権が必要です。 アプリケーションが書き込みアクセスを取得するには、2つの方法があります。 アップロードされたファイルを保存するディレクトリで、アプリケーションを実行しているアカウントに書き込みアクセス権を明示的に付与することができます。 または、ASP.NET アプリケーションに付与される信頼レベルを上げることもできます。 アプリケーションの実行ディレクトリへの書き込みアクセスを取得するには、アプリケーションに、 <xref:System.Web.AspNetHostingPermission> <xref:System.Web.AspNetHostingPermissionLevel.Medium?displayProperty=nameWithType>値に設定された信頼レベルを持つオブジェクトが付与されている必要があります。 信頼レベルを上げると、サーバー上のリソースへのアプリケーションのアクセスが増加します。 ただし、これは安全な方法ではありません。これは、アプリケーションを制御する悪意のあるユーザーも、この高いレベルの信頼度で実行できるためです。 ベストプラクティスとして、アプリケーションの実行に必要な最小限の特権を持つユーザーのコンテキストで ASP.NET アプリケーションを実行することをお勧めします。 ASP.NET アプリケーションのセキュリティの詳細については、「Web アプリケーションと ASP.NET の[信頼レベルとポリシーファイル](https://msdn.microsoft.com/library/f897c794-10d3-414c-86b7-59b66564bbf1)[の基本セキュリティプラクティス](https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad)」を参照してください。  
  
   
  
## Examples  
 次の例では、エラーチェック<xref:System.Web.UI.WebControls.FileUpload>を実行するコントロールを作成する方法を示します。 ファイルが保存<xref:System.Web.UI.WebControls.FileUpload.HasFile%2A>される前に、メソッドが呼び出されて、アップロードするファイルが存在することを確認します。 さらに、同じ<xref:System.IO.File.Exists%2A?displayProperty=nameWithType>名前のファイルがパスに既に存在するかどうかを確認するために、メソッドが呼び出されます。 この値が指定されている場合、 <xref:System.Web.UI.WebControls.FileUpload.SaveAs%2A>メソッドが呼び出される前に、アップロードするファイルの名前の先頭に数字が付いています。 これにより、既存のファイルが上書きされるのを防ぐことができます。  
  
 [!code-aspx-csharp[FileUpload.SaveAs#1](~/samples/snippets/csharp/VS_Snippets_WebNet/FileUpload.SaveAs/cs/fileupload.saveascs.aspx#1)]
 [!code-aspx-vb[FileUpload.SaveAs#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/FileUpload.SaveAs/VB/fileupload.saveasvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.Web.HttpException"><paramref name="filename" /> が完全パスではありません。</exception>
        <altmember cref="P:System.Web.UI.WebControls.FileUpload.HasFile" />
        <related type="Article" href="https://msdn.microsoft.com/library/3eeeee9e-b09f-4c7f-8ce5-d9ca1f9322ad">Web アプリケーションの基本的なセキュリティプラクティス</related>
      </Docs>
    </Member>
  </Members>
</Type>
