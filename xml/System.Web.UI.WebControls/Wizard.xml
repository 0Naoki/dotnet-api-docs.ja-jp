<Type Name="Wizard" FullName="System.Web.UI.WebControls.Wizard">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="22e7d491e475b58609da40b0026baea6960a81e0" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
    <Meta Name="ms.locfileid" Value="30600636" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class Wizard : System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit Wizard extends System.Web.UI.WebControls.CompositeControl" />
  <TypeSignature Language="DocId" Value="T:System.Web.UI.WebControls.Wizard" />
  <TypeSignature Language="VB.NET" Value="Public Class Wizard&#xA;Inherits CompositeControl" />
  <TypeSignature Language="C++ CLI" Value="public ref class Wizard : System::Web::UI::WebControls::CompositeControl" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Web.UI.WebControls.CompositeControl</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.ComponentModel.Bindable(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.DefaultEvent("FinishButtonClick")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.ComponentModel.Designer("System.Web.UI.Design.WebControls.WizardDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Web.UI.ToolboxData("&lt;{0}:Wizard runat="server"&gt; &lt;WizardSteps&gt; &lt;asp:WizardStep title="Step 1" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;asp:WizardStep title="Step 2" runat="server"&gt;&lt;/asp:WizardStep&gt; &lt;/WizardSteps&gt; &lt;/{0}:Wizard&gt;")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>複数の手順からデータを収集するためのナビゲーションとユーザー インターフェイス (UI) を提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このトピックの内容:  
  
-   [はじめに](#introduction)  
  
-   [ウィザードのコンポーネント](#components)  
  
-   [ウィザードの手順](#wizard_steps)  
  
-   [ウィザード データの収集](#collecting_wizard_data)  
  
-   [ウィザードのコマンド名](#wizard_command_names)  
  
-   [動的に変化する手順](#dynamically_changing_steps)  
  
-   [ウィザードの外観](#wizard_appearance)  
  
-   [レイアウト テンプレートを使用して書式設定](#formatting_using_layout_templates)  
  
-   [ユーザー補助](#accessibility)  
  
-   [宣言型の構文](#declarative_syntax)  
  
<a name="introduction"></a>   
## <a name="introduction"></a>はじめに  
 使用することができます、<xref:System.Web.UI.WebControls.Wizard>を制御します。  
  
-   複数の手順には、関連するデータを収集します。  
  
-   小さい論理ステップにユーザー入力を収集するために使用より大きな Web ページを分割します。  
  
-   手順を線形または非線形を移動できるようにします。  
  
<a name="components"></a>   
## <a name="wizard-components"></a>ウィザードのコンポーネント  
 <xref:System.Web.UI.WebControls.Wizard>コントロールは、次のコンポーネントの構成します。  
  
-   A<xref:System.Web.UI.WebControls.WizardStepCollection>ページの開発者によって定義された各手順のユーザー インターフェイスが含まれている手順のコレクション。  
  
-   適切なボタンを表示するかを決定する組み込みのナビゲーション機能に基づいて、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>値。  
  
-   ユーザーが現在実行している手順に固有の情報を表示するカスタマイズ可能なヘッダー領域。  
  
-   コントロール内のステップをサイドバーにすばやく移動するために使用できます。  
  
    > [!NOTE]
    >  Microsoft Visual Studio 2005 を使用している場合は注意してください、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>はソース ビューに保存します。 変更した場合、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>サイド バーのボタンをクリックしてデザイン ビューでのプロパティ ページでの最初の手順を実行し、`Wizard`ために、コントロールは表示されませんが、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>異なる手順を指している可能性があります。  
  
<a name="wizard_steps"></a>   
## <a name="wizard-steps"></a>ウィザードの手順  
 各手順で、<xref:System.Web.UI.WebControls.Wizard>コントロールが、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>手順がナビゲーション機能の種類を決定するプロパティです。 値を指定しない場合、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>プロパティの既定値は<xref:System.Web.UI.WebControls.WizardStepType.Auto>します。 次の表に、利用可能な設定、<xref:System.Web.UI.WebControls.WizardStepBase.StepType%2A>プロパティとステップの結果として得られる動作します。  
  
 `WizardStepType.Auto`  
 ナビゲーション ステップに表示する UI は、ステップが宣言されている順序で決定されます。  
  
 `WizardStepType.Complete`  
 最後に表示されるステップです。 ナビゲーション ボタンは表示されません。  
  
 `WizardStepType.Finish`  
 ステップは、ユーザー データを収集する最後の 1 つです。 **完了**ナビゲーション ボタンが表示されます。  
  
 `WizardStepType.Start`  
 最初に表示されるステップです。 A**前**ボタンは表示されません。  
  
 `WizardStepType.Step`  
 手順は、最初の間のステップと最後です。 ナビゲーション用に **[戻る]** ボタンと **[次へ]** ボタンが表示されます。  
  
<a name="collecting_wizard_data"></a>   
## <a name="collecting-wizard-data"></a>ウィザード データの収集  
 使用して、<xref:System.Web.UI.WebControls.Wizard>コントロール、直線的または非線形ナビゲーションを介してデータを収集できます。 非線形ナビゲーションの例をいくつかは不要な手順をスキップしていますか、いくつかの値を変更する前に完了したステップに戻ります。 <xref:System.Web.UI.WebControls.Wizard>コントロール ステップで入力したデータはのすべての手順を実行するまで、データ ストアに永続化する必要はありませんので、手順の間でその状態を保持する、<xref:System.Web.UI.WebControls.Wizard>コントロールが完了しました。  
  
 代わりに、収集されたデータとしてデータ ストアを保持する場合の各ステップが完了したら、場合など、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベントは、設定する必要があります、<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>のプロパティ、<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクトを`false`ユーザーが以前に完了した手順に戻ることはできず、送信された後にデータを変更できるようにします。  
  
<a name="wizard_command_names"></a>   
## <a name="wizard-command-names"></a>ウィザードのコマンド名  
 <xref:System.Web.UI.WebControls.Wizard>コントロールから次のコマンド名の継承、<xref:System.Web.UI.WebControls.View>クラスと<xref:System.Web.UI.WebControls.MultiView>クラス: <xref:System.Web.UI.WebControls.MultiView.NextViewCommandName>、 <xref:System.Web.UI.WebControls.MultiView.PreviousViewCommandName>、 <xref:System.Web.UI.WebControls.MultiView.SwitchViewByIDCommandName>、および<xref:System.Web.UI.WebControls.MultiView.SwitchViewByIndexCommandName>です。 ウィザード コントロールは、これらのコマンド名を無視し、自動的に移動できるように機能するこれらのコマンドを有効にする特別なロジックは含まれません。 コマンド名が削除されるか、ボタンが見つからないかかどうか、<xref:System.Web.UI.WebControls.Wizard>制御、例外はスローされません。 たとえば場合、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>ボタンには、値がありません<xref:System.Web.UI.WebControls.Button.CommandName%2A>例外はスローされません。  
  
<a name="dynamically_changing_steps"></a>   
## <a name="dynamically-changing-steps"></a>動的に変化する手順  
 使用することができます、<xref:System.Web.UI.WebControls.Wizard.MoveTo%2A>メソッドまたは<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>に現在表示されているステップを動的に変更するプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
> [!NOTE]
>  プログラムで追加する場合、<xref:System.Web.UI.WebControls.WizardStep>で、 `Page_Load` 、イベント ハンドラーにページを読み込む前にそのステップのナビゲーションを追加する必要があります。  
  
<a name="wizard_appearance"></a>   
## <a name="wizard-appearance"></a>ウィザードの外観  
 外観、<xref:System.Web.UI.WebControls.Wizard>コントロールは、テンプレート、スキン、およびスタイル設定を完全にカスタマイズ可能です。 たとえば、使用することができます、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>、および<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>のインターフェイスをカスタマイズするプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
> [!NOTE]
>  設定、 <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>、 <xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>、 <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>、または<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>プロパティの子コントロールを再作成、<xref:System.Web.UI.WebControls.Wizard>コントロール。 その結果、子コントロールのビューステートは、プロセスで失われます。 この状況を回避するには、明示的の管理の状態を維持、<xref:System.Web.UI.WebControls.Wizard>コントロールの子は、明示的に制御またはテンプレート内でコントロールを設けないようにしてください。  
  
 注意してください、<xref:System.Web.UI.WebControls.Wizard>コントロールがの特別な Microsoft Internet Explorer のレンダリングをサポートしていません標準または quirks モード。 最適な Internet Explorer のレンダリングを使用してを取得する、<xref:System.Web.UI.WebControls.Wizard>コントロール、Visual Web Developer および Visual Studio で既定では追加、XHTML doctype を使用します。  
  
<a name="formatting_using_layout_templates"></a>   
## <a name="formatting-using-layout-templates"></a>レイアウト テンプレートを使用して書式設定  
 <xref:System.Web.UI.WebControls.Wizard>コントロールでは、HTML を使用することがなく、コントロールのレイアウトを指定できます。`table`要素。 代わりに、使用することができます、`LayoutTemplate`レイアウトを指定する要素。 テンプレートで、プレース ホルダーに、項目を動的に挿入するコントロールを示すためにコントロールを作成します。 (これは、のような方法のテンプレート モデル、<xref:System.Web.UI.WebControls.ListView>動作を制御します)。詳細については、<xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A?displayProperty=nameWithType> プロパティを参照してください。  
  
<a name="accessibility"></a>   
## <a name="accessibility"></a>ユーザー補助  
 ユーザー補助の標準に準拠するマークアップを生成するように、このコントロールを構成する方法については、次を参照してください。 [Visual Studio と ASP.NET のユーザー補助機能](http://msdn.microsoft.com/library/7e3ce9c4-6b7d-4fb1-94b5-72cf2a44fe13)と[ASP.NET コントロールやアクセシビリティ](http://msdn.microsoft.com/library/847a37e3-ce20-41da-b0d3-7dfb0fdae9a0)です。  
  
<a name="declarative_syntax"></a>   
## <a name="declarative-syntax"></a>宣言型の構文  
  
```  
<asp:Wizard  
    AccessKey="string"  
    ActiveStepIndex="integer"  
    BackColor="color name|#dddddd"  
    BorderColor="color name|#dddddd"  
    BorderStyle="NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|  
        Inset|Outset"  
    BorderWidth="size"  
    CancelButtonImageUrl="uri"  
    CancelButtonText="string"  
    CancelButtonType="Button|Image|Link"  
    CancelDestinationPageUrl="uri"  
    CellPadding="integer"  
    CellSpacing="integer"  
    CssClass="string"  
    DisplayCancelButton="True|False"  
    DisplaySideBar="True|False"  
    Enabled="True|False"  
    EnableTheming="True|False"  
    EnableViewState="True|False"  
    FinishCompleteButtonImageUrl="uri"  
    FinishCompleteButtonText="string"  
    FinishCompleteButtonType="Button|Image|Link"  
    FinishDestinationPageUrl="uri"  
    FinishPreviousButtonImageUrl="uri"  
    FinishPreviousButtonText="string"  
    FinishPreviousButtonType="Button|Image|Link"  
    Font-Bold="True|False"  
    Font-Italic="True|False"  
    Font-Names="string"  
    Font-Overline="True|False"  
    Font-Size="string|Smaller|Larger|XX-Small|X-Small|Small|Medium|  
        Large|X-Large|XX-Large"  
    Font-Strikeout="True|False"  
    Font-Underline="True|False"  
    ForeColor="color name|#dddddd"  
    HeaderText="string"  
    Height="size"  
    ID="string"  
    OnActiveStepChanged="ActiveStepChanged event handler"  
    OnCancelButtonClick="CancelButtonClick event handler"  
    OnDataBinding="DataBinding event handler"  
    OnDisposed="Disposed event handler"  
    OnFinishButtonClick="FinishButtonClick event handler"  
    OnInit="Init event handler"  
    OnLoad="Load event handler"  
    OnNextButtonClick="NextButtonClick event handler"  
    OnPreRender="PreRender event handler"  
    OnPreviousButtonClick="PreviousButtonClick event handler"  
    OnSideBarButtonClick="SideBarButtonClick event handler"  
    OnUnload="Unload event handler"  
    runat="server"  
    SkinID="string"  
    SkipLinkText="string"  
    StartNextButtonImageUrl="uri"  
    StartNextButtonText="string"  
    StartNextButtonType="Button|Image|Link"  
    StepNextButtonImageUrl="uri"  
    StepNextButtonText="string"  
    StepNextButtonType="Button|Image|Link"  
    StepPreviousButtonImageUrl="uri"  
    StepPreviousButtonText="string"  
    StepPreviousButtonType="Button|Image|Link"  
    Style="string"  
    TabIndex="integer"  
    ToolTip="string"  
    Visible="True|False"  
    Width="size"  
>  
        <CancelButtonStyle />  
        <FinishCompleteButtonStyle />  
        <FinishNavigationTemplate>  
            <!-- child controls -->  
        </FinishNavigationTemplate>  
        <FinishPreviousButtonStyle />  
        <HeaderStyle />  
        <HeaderTemplate>  
            <!-- child controls -->  
        </HeaderTemplate>  
        <NavigationButtonStyle />  
        <NavigationStyle />  
        <SideBarButtonStyle />  
        <SideBarStyle />  
        <SideBarTemplate>  
            <!-- child controls -->  
        </SideBarTemplate>  
        <StartNavigationTemplate>  
            <!-- child controls -->  
        </StartNavigationTemplate>  
        <StartNextButtonStyle />  
        <StepNavigationTemplate>  
            <!-- child controls -->  
        </StepNavigationTemplate>  
        <StepNextButtonStyle />  
        <StepPreviousButtonStyle />  
        <StepStyle />  
        <WizardSteps>  
                <asp:TemplatedWizardStep  
                    AllowReturn="True|False"  
                    ContentTemplateContainer="string"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
>  
                        <ContentTemplate>  
                            <!-- child controls -->  
                        </ContentTemplate>  
                        <CustomNavigationTemplate>  
                            <!-- child controls -->  
                        </CustomNavigationTemplate>  
                </asp:TemplatedWizardStep>  
                <asp:WizardStep  
                    AllowReturn="True|False"  
                    EnableTheming="True|False"  
                    EnableViewState="True|False"  
                    ID="string"  
                    OnActivate="Activate event handler"  
                    OnDataBinding="DataBinding event handler"  
                    OnDeactivate="Deactivate event handler"  
                    OnDisposed="Disposed event handler"  
                    OnInit="Init event handler"  
                    OnLoad="Load event handler"  
                    OnPreRender="PreRender event handler"  
                    OnUnload="Unload event handler"  
                    runat="server"  
                    SkinID="string"  
                    StepType="Auto|Complete|Finish|Start|Step"  
                    Title="string"  
                    Visible="True|False"  
                />  
        </WizardSteps>  
</asp:Wizard>  
```  
  
   
  
## Examples  
 次のコード例は、定義する方法を示します、<xref:System.Web.UI.WebControls.Wizard>ユーザーの名前と、個別の出荷先住所を入力するためのオプションのアドレスの収集を制御します。 ユーザーが選択されない場合**SeparateShippingCheckBox**、それによって、個別の出荷先住所を追加する要求を発行する、<xref:System.Web.UI.WebControls.Wizard>から直接コントロールを移動`Step2`に`Finish`です。 `Finish`手順、ユーザーが、オプションの先頭に戻るには、 <xref:System.Web.UI.WebControls.Wizard>  をクリックしてコントロール**GoBackButton**ただし、ユーザーにかかる`Step2`ため、 <xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A> のプロパティ。`Step1`に設定されている`false`です。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclasscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.Wizard#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclassvb.aspx#1)]  
  
 次のコード例は、前の例で使用される Web ページの分離コード ファイルです。  
  
 [!code-csharp[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/CS/wizardclass.cs#2)]
 [!code-vb[System.Web.UI.WebControls.Wizard#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.Wizard/VB/wizardclass.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.WebControls.CompositeControl" />
    <altmember cref="T:System.Web.UI.Control" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Wizard ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Wizard();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.%23ctor%2A>作成しの新しいインスタンスを初期化するコンス トラクター、<xref:System.Web.UI.WebControls.Wizard>クラスです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ActiveStep">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepBase ActiveStep { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepBase ActiveStep" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ActiveStep As WizardStepBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::WizardStepBase ^ ActiveStep { System::Web::UI::WebControls::WizardStepBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在ユーザーに表示されている <see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> コレクション内のステップを取得します。</summary>
        <value>現在ユーザーに表示されている <see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティから返される、<xref:System.Web.UI.WebControls.WizardStepBase>に現在表示されているオブジェクト、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティは読み取り専用です。 ただし、使用することができます、 <xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A> 、現在のプロパティにアクセスするプロパティ<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクト。 使用して、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>プロパティを動的に変更を<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>を異なる<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクト。 また、使用することができます、<xref:System.Web.UI.WebControls.Wizard.MoveTo%2A>を動的に設定するメソッド、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティです。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティが次の設定になったステップを<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 場合の値`CheckBox1.Checked`は`true`、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step3`、それ以外の<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step2`です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/CS/wizardactivestepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStep/VB/wizardactivestepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">対応する <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> が -1 未満か、<see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 内の <see cref="T:System.Web.UI.WebControls.Wizard" /> オブジェクトの数よりも大きい値です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      </Docs>
    </Member>
    <Member MemberName="ActiveStepChanged">
      <MemberSignature Language="C#" Value="public event EventHandler ActiveStepChanged;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler ActiveStepChanged" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event ActiveStepChanged As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ ActiveStepChanged;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーがコントロール内の新しいステップに切り替えたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>イベントは、現在のステップである場合に表示されます、<xref:System.Web.UI.WebControls.Wizard>変更を制御します。 使用して、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>ときに、追加処理を提供するイベントの現在のステップ、<xref:System.Web.UI.WebControls.Wizard>変更を制御します。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>を更新するイベント、<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="ActiveStepIndex">
      <MemberSignature Language="C#" Value="public virtual int ActiveStepIndex { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 ActiveStepIndex" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property ActiveStepIndex As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int ActiveStepIndex { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(-1)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトのインデックスを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> コントロールに現在表示されている <see cref="T:System.Web.UI.WebControls.Wizard" /> のインデックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>プロパティの 0 から始まるインデックスを提供する、<xref:System.Web.UI.WebControls.WizardStepBase>に現在表示されているオブジェクト、<xref:System.Web.UI.WebControls.Wizard>コントロール。 プログラムで設定することができます、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>実行時にユーザーにどの手順を制御するプロパティが表示されます。  
  
> [!NOTE]
>  Microsoft Visual Studio 2005 を使用している場合は注意してください、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>はソース ビューに保存します。 変更した場合、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>サイド バーのボタンをクリックしてデザイン ビューでのプロパティ ページでの最初の手順を実行し、`Wizard`ために、コントロールは表示されませんが、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>異なる手順を指している可能性があります。  
  
 値を設定した場合<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>ウィザードの手順は既定ではありませんをサポートするために-1 を次の動作が発生します。  
  
-   宣言的に設定した場合<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>を-1 またはセットが常に-1 である場合、既定値、コントロールには、ウィザードの最初の手順を表示するために再試行してください。  
  
-   プログラムで設定した場合<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>-1、コントロールは、表示されません。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>プロパティを設定、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 場合の値`CheckBox1.Checked`は`true`、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step3`、それ以外の<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step2`です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/CS/wizardactivestepindexcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepIndex#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepIndex/VB/wizardactivestepindexvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">選択した値が、<see cref="P:System.Web.UI.WebControls.Wizard.WizardSteps" /> コレクションで定義されたウィザード ステップの数を超えています。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      </Docs>
    </Member>
    <Member MemberName="AllowNavigationToStep">
      <MemberSignature Language="C#" Value="protected virtual bool AllowNavigationToStep (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance bool AllowNavigationToStep(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.AllowNavigationToStep(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Function AllowNavigationToStep (index As Integer) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual bool AllowNavigationToStep(int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">確認する <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトのインデックス。</param>
        <summary>ブール値を使用して、<see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> プロパティを、渡されるインデックスに対応する <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトに設定できるかどうかを確認します。</summary>
        <returns>
          渡されたインデックスが、既にアクセスされている <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> を参照しており、その <see cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" /> プロパティが <see langword="false" /> に設定されている場合は <see langword="false" />。それ以外の場合は <see langword="true" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A>のみのための派生クラスからメソッドにアクセスできる、`protected`修飾子です。 派生クラスで使用することができます、<xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A>設定には、渡されたインデックスを使用できるかどうかを決定する方法、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>プロパティです。 <xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A>メソッドが返す`false`で渡されたインデックスを参照する場合、<xref:System.Web.UI.WebControls.WizardStepBase>まだアクセスされてを持つオブジェクトの<xref:System.Web.UI.WebControls.WizardStepBase.AllowReturn%2A>プロパティに設定`false`、それ以外が返されます`true`です。  
  
   
  
## Examples  
 次のコード例は、という名前の派生クラスを作成する方法を示します`CustomWizard`をオーバーライドし、<xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A>メソッドです。 ときに、サイド バー領域のボタン、`CustomWizard`コントロールがクリックされた、<xref:System.Web.UI.WebControls.Wizard.AllowNavigationToStep%2A>メソッドが呼び出され、選択したステップにアクセスできるかどうかを判断します。 メッセージは、何が起こったのユーザーに通知を含む Web ページに書き込まれます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/CS/wizardallownavigationtostepcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardAllowNavigationToStep#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardAllowNavigationToStep/VB/wizardallownavigationtostepvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="P:System.Web.UI.WebControls.WizardStepBase.AllowReturn" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonClick">
      <MemberSignature Language="C#" Value="public event EventHandler CancelButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler CancelButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event CancelButtonClick As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ CancelButtonClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>イベントが発生したときに、**キャンセル**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロールがクリックされました。 使用して、<xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>ときに追加の処理を提供するイベントを**キャンセル**ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>イベント。 ときに、**キャンセル**ボタンがクリックされると、ページにリダイレクトhttp://www.wingtiptoys.com/です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CancelButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CancelButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CancelButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CancelButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンの識別子を指定します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.CancelButtonID>は`"CancelButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL、**キャンセル**のボタンでは、<see cref="T:System.Web.UI.WebControls.Wizard" />コントロール。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A>プロパティに設定されている<xref:System.Web.UI.WebControls.ButtonType.Image>を使用して、<xref:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl%2A>プロパティを表示するイメージを指定する、**キャンセル**ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style CancelButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style CancelButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CancelButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ CancelButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンの外観を定義するスタイル プロパティのコレクションへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**キャンセル**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>プロパティの外観を定義する、**キャンセル**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.CancelButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonText">
      <MemberSignature Language="C#" Value="public virtual string CancelButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**キャンセル**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>「キャンセル」</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A>プロパティが表示されるテキストを含む、**キャンセル**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.CancelButtonText%2A>プロパティとして、画像の代わりとして、またはリンクのテキストとして表示されるテキスト、ボタンのテキストとして表示されます。 次の表、<xref:System.Web.UI.WebControls.Wizard.CancelButtonType%2A>値とそれぞれへの影響、**キャンセル**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CancelButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType CancelButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType CancelButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType CancelButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
      </Docs>
    </Member>
    <Member MemberName="CancelCommandName">
      <MemberSignature Language="C#" Value="public static readonly string CancelCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string CancelCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CancelCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly CancelCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ CancelCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンのコマンド名を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelCommandName>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.CancelCommandName>は`"Cancel"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="CancelDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string CancelDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CancelDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CancelDestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ CancelDestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが **[キャンセル]** ボタンをクリックしたときの移動先 URL を取得または設定します。</summary>
        <value>クリックしたときに、ユーザーがリダイレクトされる URL**キャンセル**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A>プロパティは、ユーザーがクリックしたときに表示されているステップを指定、**キャンセル**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 場合、<xref:System.Web.UI.WebControls.Wizard.DisplayCancelButton%2A>プロパティに設定されている`true`と<xref:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl%2A>プロパティが設定されていない、Web ページが更新されると<xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A>イベントが発生します。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      </Docs>
    </Member>
    <Member MemberName="CellPadding">
      <MemberSignature Language="C#" Value="public virtual int CellPadding { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellPadding" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellPadding As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellPadding { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セルの内容とセルの境界線との間の間隔を取得または設定します。</summary>
        <value>セルの内容とセルの境界線の間の間隔 (ピクセル単位)。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.CellPadding%2A>セルの内容とセルの枠線の間隔を制御するプロパティです。 指定されている余白の量は、セルの 4 つすべての側面に追加されます。 列内のすべてのセルが同じセル幅を共有します。したがって、間隔は、最大幅の列のセルに適用されます。 同様に、同じ行のすべてのセルは、同じのセルの高さを共有します。 したがって、間隔は、行の行内のセルに適用されます。 個々 のセルのサイズを指定することはできません。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.CellPadding%2A>と<xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A>のレイアウトをプログラムするプロパティ、<xref:System.Web.UI.WebControls.Wizard>宣言によって制御されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      </Docs>
    </Member>
    <Member MemberName="CellSpacing">
      <MemberSignature Language="C#" Value="public virtual int CellSpacing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 CellSpacing" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.CellSpacing" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property CellSpacing As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property int CellSpacing { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(0)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セル間の間隔を取得または設定します。</summary>
        <value>セルの間隔をピクセル単位で指定します。 既定値は 0 です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A>ウィザード コントロールの隣接するセルの間隔を制御するプロパティです。 この間隔は、垂直および水平方向の両方に適用されます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.CellPadding%2A>と<xref:System.Web.UI.WebControls.Wizard.CellSpacing%2A>のレイアウトをプログラムするプロパティ、<xref:System.Web.UI.WebControls.Wizard>宣言によって制御されます。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/CS/wizardcellpaddingcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCellPadding#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCellPadding/VB/wizardcellpaddingvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CellPadding" />
      </Docs>
    </Member>
    <Member MemberName="CreateChildControls">
      <MemberSignature Language="C#" Value="protected internal override void CreateChildControls ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void CreateChildControls() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub CreateChildControls ()" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void CreateChildControls();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>子コントロールを作成します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlCollection">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.ControlCollection CreateControlCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.ControlCollection CreateControlCollection() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlCollection () As ControlCollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::ControlCollection ^ CreateControlCollection();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.ControlCollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロール コレクションを作成します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateControlHierarchy">
      <MemberSignature Language="C#" Value="protected virtual void CreateControlHierarchy ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void CreateControlHierarchy() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlHierarchy" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub CreateControlHierarchy ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void CreateControlHierarchy();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールを構成する子コントロールの階層を作成します。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidOperationException">サイドバー テンプレートには <see cref="T:System.Web.UI.WebControls.DataList" /> コントロールが含まれていません。</exception>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateChildControls" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlCollection" />
        <altmember cref="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      </Docs>
    </Member>
    <Member MemberName="CreateControlStyle">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.WebControls.Style CreateControlStyle ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Web.UI.WebControls.Style CreateControlStyle() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.CreateControlStyle" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function CreateControlStyle () As Style" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Web::UI::WebControls::Style ^ CreateControlStyle();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロール スタイルを作成します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomFinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomFinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomFinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomFinishButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomFinishButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomFinishButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタムの **[完了]** ボタンの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.CustomFinishButtonID>は`"CustomFinishButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CustomNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomNextButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタムの **[次へ]** ボタンの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.CustomNextButtonID>は`"CustomNextButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="CustomPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string CustomPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string CustomPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly CustomPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ CustomPreviousButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタムの **[戻る]** ボタンの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.CustomPreviousButtonID>は`"CustomPreviousButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="DataListID">
      <MemberSignature Language="C#" Value="protected static readonly string DataListID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string DataListID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.DataListID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly DataListID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ DataListID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバーの <see cref="T:System.Web.UI.WebControls.DataList" /> コレクションの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.DataListID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.DataListID>は`"SideBarList"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.DataList" />
      </Docs>
    </Member>
    <Member MemberName="DisplayCancelButton">
      <MemberSignature Language="C#" Value="public virtual bool DisplayCancelButton { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplayCancelButton" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplayCancelButton" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplayCancelButton As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplayCancelButton { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[キャンセル]** ボタンを表示するかどうかを示すブール値を取得または設定します。</summary>
        <value>
          <see langword="true" /> 表示する**キャンセル**上、 <see cref="T:System.Web.UI.WebControls.Wizard" />、それ以外の<see langword="false" />します。 既定値は、<see langword="false" /> です。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<see cref="T:System.Web.UI.ThemeableAttribute" />と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.CancelDestinationPageUrl" />
      </Docs>
    </Member>
    <Member MemberName="DisplaySideBar">
      <MemberSignature Language="C#" Value="public virtual bool DisplaySideBar { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool DisplaySideBar" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property DisplaySideBar As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool DisplaySideBar { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールにサイドバー領域を表示するかどうかを示すブール値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> にサイドバー領域を表示する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="true" /> です。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<see cref="T:System.Web.UI.ThemeableAttribute" />と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 表示に違いがあります、<xref:System.Web.UI.WebControls.Wizard>にこのプロパティを設定するかどうかに応じてコントロール`true`または`false`です。 このプロパティの値に設定すると`true`、サイドバーが表示されると、セルの間隔には適用されません、 `HeadCell`、 `StepCell`、または`NavigationCell`コントロールのテーブルの要素。 この値が`false`セルの間隔を適用します。 これは、コントロールの表示方法に影響可能性があります。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler FinishButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event FinishButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ FinishButtonClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>イベントが発生したときに、**完了**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロールがクリックされました。 使用して、<xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>ときに追加の処理を提供するイベントを**完了**ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>イベント。 ときに、**完了**ボタンをクリックすると、確認メッセージを記述する`Label1`と`Label1.Visible`プロパティに設定されている`true`手順で、メッセージが表示されないようにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="FinishButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly FinishButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ FinishButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.FinishButtonID>は`"FinishButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishCompleteButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL**完了**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.ButtonType.Image>フィールドに、使用、<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl%2A>プロパティを表示するイメージを指定する、**完了**ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishCompleteButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishCompleteButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinishCompleteButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ FinishCompleteButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**完了**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>プロパティの外観を定義する、**完了**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishCompleteButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishCompleteButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishCompleteButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**完了**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>「完了」</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A>プロパティが表示されるテキストを含む、**完了**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText%2A>プロパティ ブラウザーで、イメージをレンダリングできません、イメージの代わりとして、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示されます。 次の表に、フィールド値を<xref:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType%2A>プロパティとそれぞれのそれぞれの影響、**完了**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストは、リンク テキストとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="FinishCompleteButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishCompleteButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishCompleteButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishCompleteButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType FinishCompleteButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonImageUrl" />
      </Docs>
    </Member>
    <Member MemberName="FinishDestinationPageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishDestinationPageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishDestinationPageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishDestinationPageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishDestinationPageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.UrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザーが **[完了]** ボタンをクリックしたときにリダイレクトされる URL を取得または設定します。</summary>
        <value>クリックしたときに、ユーザーがリダイレクトされる URL**完了**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishDestinationPageUrl%2A>プロパティは、ユーザーがクリックしたときに表示されているステップを指定、**完了**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishCompleteButtonText" />
      </Docs>
    </Member>
    <Member MemberName="FinishNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate FinishNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate FinishNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ FinishNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップのナビゲーション領域を表示するために使用されるテンプレートを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> の <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> のナビゲーション領域に表示されるコンテンツを定義する <see cref="T:System.Web.UI.WebControls.Wizard" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>する、カスタム コンテンツを指定するプロパティをナビゲーション領域の表示は、<xref:System.Web.UI.WebControls.WizardStepType.Finish>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 上のナビゲーション領域のレンダリング方法を指定するテンプレートを作成してコンテンツを定義、<xref:System.Web.UI.WebControls.WizardStepType.Finish>手順です。  
  
 テンプレート用のカスタム コンテンツが含まれる、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>オブジェクト。 カスタム コンテンツを追加することができます、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>オブジェクトのいずれかを使用してテンプレート編集モードを定義する、デザイン ビューで、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>を使用してオブジェクト インライン`FinishNavigationTemplate`タグ。 コンテンツには、簡単なプレーン テキストまたはより複雑な (その他のコントロールへの埋め込み、テンプレートなど) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>プロパティには、2 つ含める必要があります<xref:System.Web.UI.WebControls.IButtonControl>には、1 とその<xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A>プロパティに"MoveComplete"と、その他の設定、<xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A>プロパティ、ナビゲーション機能を有効にする"MovePrevious"に設定します。  
  
 プログラムによって、テンプレートで定義されているコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.CompositeControl.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.Wizard>オブジェクト。 使用することも、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.Wizard>コントロールがある場合に、コントロールを検索するオブジェクト、<xref:System.Web.UI.Control.ID%2A>指定されたプロパティ。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate%2A>のナビゲーション領域に適したカスタム テンプレートを作成するプロパティ、<xref:System.Web.UI.WebControls.WizardStepType.Finish>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
> [!IMPORTANT]
>  この例には、ユーザー入力を受け付けるテキスト ボックスがあります。これにより、セキュリティが脆弱になる可能性があります。 既定では、ASP.NET Web ページによって、ユーザー入力にスクリプトまたは HTML 要素が含まれていないかどうかが検証されます。 詳細については、「[スクリプトによる攻略の概要](http://msdn.microsoft.com/library/772c7312-211a-4eb3-8d6e-eec0aa1dcc07)」を参照してください。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/CS/wizardfinishnavigationtemplatecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishNavigationTemplate#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishNavigationTemplate/VB/wizardfinishnavigationtemplatevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string FinishPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string FinishPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly FinishPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ FinishPreviousButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップの **[戻る]** ボタンの識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonID>`"FinishPreviousButton"`です。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishPreviousButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップの **[戻る]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL**前**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.ButtonType.Image>フィールドに、使用、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl%2A>プロパティを表示するイメージを指定する、**前**のボタンでは、<xref:System.Web.UI.WebControls.WizardStepType.Finish>手順です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style FinishPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style FinishPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property FinishPreviousButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ FinishPreviousButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップの **[戻る]** ボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**前**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>プロパティの外観を定義する、**前**のボタンでは、<xref:System.Web.UI.WebControls.WizardStepType.Finish>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string FinishPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string FinishPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ FinishPreviousButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップの **[戻る]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**前**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>「前」</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A>プロパティが表示されるテキストを含む、**前**のボタンでは、<xref:System.Web.UI.WebControls.WizardStepType.Finish>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText%2A>プロパティ ブラウザーで、イメージをレンダリングできません、イメージの代わりとして、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示されます。 次の表、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType%2A>プロパティ フィールドの値と、それぞれへの影響、**前**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="FinishPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType FinishPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType FinishPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property FinishPreviousButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType FinishPreviousButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> ステップの **[戻る]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle" />
      </Docs>
    </Member>
    <Member MemberName="GetDesignModeState">
      <MemberSignature Language="C#" Value="protected override System.Collections.IDictionary GetDesignModeState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.Collections.IDictionary GetDesignModeState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetDesignModeState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function GetDesignModeState () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Collections::IDictionary ^ GetDesignModeState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>デザイン モードの状態を取得します。</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHistory">
      <MemberSignature Language="C#" Value="public System.Collections.ICollection GetHistory ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.ICollection GetHistory() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetHistory" />
      <MemberSignature Language="VB.NET" Value="Public Function GetHistory () As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::ICollection ^ GetHistory();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>アクセスした <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトのコレクションを返します。</summary>
        <returns>アクセスした <see cref="T:System.Collections.ICollection" /> オブジェクトを格納する <see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.GetHistory%2A>メソッドを格納しているコレクションを返します、<xref:System.Web.UI.WebControls.WizardStepBase>がアクセスされていないオブジェクトです。 <xref:System.Web.UI.WebControls.WizardStepBase>オブジェクトは、アクセスされた順序に並べ: コレクションの最初の項目は、以前<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクト、コレクション内の 2 番目の項目は、<xref:System.Web.UI.WebControls.WizardStepBase>し、前の手順では、前にアクセスしたことをオブジェクトします。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetStepType">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.WizardStepType GetStepType (System.Web.UI.WebControls.WizardStepBase wizardStep, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance valuetype System.Web.UI.WebControls.WizardStepType GetStepType(class System.Web.UI.WebControls.WizardStepBase wizardStep, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.GetStepType(System.Web.UI.WebControls.WizardStepBase,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetStepType (wizardStep As WizardStepBase, index As Integer) As WizardStepType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::UI::WebControls::WizardStepType GetStepType(System::Web::UI::WebControls::WizardStepBase ^ wizardStep, int index);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="wizardStep">関連する <see cref="T:System.Web.UI.WebControls.WizardStepType" /> を返す対象となる <see cref="T:System.Web.UI.WebControls.WizardStepBase" />。</param>
        <param name="index">関連する <see cref="T:System.Web.UI.WebControls.WizardStepType" /> を返す対象となる <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> のインデックス。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.WizardStepType" /> オブジェクトの <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> 値を返します。</summary>
        <returns>
          <see cref="T:System.Web.UI.WebControls.WizardStepType" /> 値のいずれか 1 つ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.GetStepType%2A>メソッドを呼び出せば確認、<xref:System.Web.UI.WebControls.WizardStepType>の指定された値<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクト。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.GetStepType%2A>メソッドを呼び出せば確認、関連付けられている<xref:System.Web.UI.WebControls.WizardStepType>の現在のステップの値、<xref:System.Web.UI.WebControls.Wizard>コントロール。 毎回、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>イベントが発生すると、新しい<xref:System.Web.UI.WebControls.WizardStepType>の値を取得し、メッセージに書き込まれます`Label1`です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/CS/wizardgetsteptypecs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardGetStepType#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardGetStepType/VB/wizardgetsteptypevb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepType" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
      </Docs>
    </Member>
    <Member MemberName="HeaderPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string HeaderPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string HeaderPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.HeaderPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly HeaderPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ HeaderPlaceholderId;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> プレースホルダーの ID を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プレース ホルダー ID は、"headerPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HeaderStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle HeaderStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property HeaderStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ HeaderStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのヘッダー領域の設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> のヘッダー領域のスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>プロパティのヘッダー領域の外観を定義する、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="HeaderTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate HeaderTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ HeaderTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのヘッダー領域を表示するために使用されるテンプレートを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> のヘッダー領域を表示するためのテンプレートを格納する <see cref="T:System.Web.UI.WebControls.Wizard" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>する、カスタム コンテンツを指定するプロパティをヘッダー領域の表示は、<xref:System.Web.UI.WebControls.Wizard>コントロール。 ヘッダー領域を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 テンプレート用のカスタム コンテンツが含まれる、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>オブジェクト。 カスタム コンテンツを追加することができます、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>オブジェクトのいずれかを使用してテンプレート編集モードを定義する、デザイン ビューで、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>を使用してオブジェクト インライン`HeaderTemplate`タグ。 コンテンツには、簡単なプレーン テキストまたはより複雑な (その他のコントロールへの埋め込み、テンプレートなど) を指定できます。  
  
 プログラムによって、テンプレートで定義されているコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.CompositeControl.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.Wizard>オブジェクト。 使用することも、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.Wizard>コントロールがある場合に、コントロールを検索するオブジェクト、<xref:System.Web.UI.Control.ID%2A>指定されたプロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      </Docs>
    </Member>
    <Member MemberName="HeaderText">
      <MemberSignature Language="C#" Value="public virtual string HeaderText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string HeaderText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.HeaderText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property HeaderText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ HeaderText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのヘッダー領域に表示されるテキスト キャプションを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> のヘッダー領域に表示されるテキスト キャプション。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>プロパティ定義をヘッダー領域に表示されるテキスト キャプション、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 ヘッダー領域のスタイルを制御するには、<xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>プロパティです。 設定して、ヘッダー行の独自のカスタム UI を定義する代わりに、<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>プロパティの代わりに、<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>プロパティです。  
  
> [!NOTE]
>  両方の<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>と<xref:System.Web.UI.WebControls.Wizard.HeaderTemplate%2A>プロパティが定義されている、<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>プロパティは影響を与えません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>を更新するイベント、<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.HeaderStyle" />
      </Docs>
    </Member>
    <Member MemberName="LayoutTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate LayoutTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate LayoutTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.LayoutTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property LayoutTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ LayoutTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールのルート コンテナーのカスタム コンテンツを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> コントロールのルート コンテナーに対するカスタム コンテンツが格納されたオブジェクト。 既定値は <see langword="null" /> です。このプロパティが設定されていないことを示します。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用することができます、<xref:System.Web.UI.WebControls.Wizard.LayoutTemplate%2A>のカスタム ユーザー インターフェイス (UI) を定義するプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 レイアウト テンプレートを指定するには追加、`LayoutTemplate`内の要素、<xref:System.Web.UI.WebControls.Wizard>コントロールのマークアップ。 内部、`LayoutTemplate`要素の各コンポーネントのプレース ホルダーを追加、<xref:System.Web.UI.WebControls.Wizard>コントロール。 ナビゲーション、サイド バー、およびのセクションではウィザードの手順のプレース ホルダー、<xref:System.Web.UI.WebControls.Wizard>で必要なコントロール、`LayoutTemplate`要素。  
  
> [!NOTE]
>  レイアウト テンプレートを変更することができます**ソース**ビュー。 レイアウト テンプレートを編集する**デザイン**ビューがサポートされていません。  
  
   
  
## Examples  
 次の例は、追加する方法を示します、`LayoutTemplate`要素を`Wizard`コントロールとのコンポーネントの書式を設定する方法、`Wizard`を使用してコントロール`div`要素。 コントロールをレンダリングすると、`div`要素が使用する代わりに HTML テーブル コントロールの書式を設定します。  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadControlState">
      <MemberSignature Language="C#" Value="protected internal override void LoadControlState (object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void LoadControlState(object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadControlState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub LoadControlState (state As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void LoadControlState(System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="state">復元するコントロールの状態。</param>
        <summary>コントロールの状態情報を復元します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LoadViewState">
      <MemberSignature Language="C#" Value="protected override void LoadViewState (object savedState);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void LoadViewState(object savedState) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.LoadViewState(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub LoadViewState (savedState As Object)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void LoadViewState(System::Object ^ savedState);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="savedState" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="savedState">復元するコントロールの状態。</param>
        <summary>ビュー状態情報を読み込みます。</summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <paramref name="savedState" /> は有効な <see cref="P:System.Web.UI.PageStatePersister.ViewState" /> 値ではありません。</exception>
      </Docs>
    </Member>
    <Member MemberName="MoveCompleteCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveCompleteCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveCompleteCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveCompleteCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveCompleteCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[完了]** ボタンに関連付けられたコマンド名を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.MoveCompleteCommandName>は`"MoveComplete"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
        <altmember cref="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      </Docs>
    </Member>
    <Member MemberName="MoveNextCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveNextCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveNextCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveNextCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveNextCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveNextCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンに関連付けられたコマンド名を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.MoveNextCommandName>は`"MoveNext"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="MovePreviousCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MovePreviousCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MovePreviousCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MovePreviousCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MovePreviousCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MovePreviousCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンに関連付けられたコマンド名を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.MovePreviousCommandName>は`"MovePrevious"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="MoveTo">
      <MemberSignature Language="C#" Value="public void MoveTo (System.Web.UI.WebControls.WizardStepBase wizardStep);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void MoveTo(class System.Web.UI.WebControls.WizardStepBase wizardStep) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.MoveTo(System.Web.UI.WebControls.WizardStepBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub MoveTo (wizardStep As WizardStepBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void MoveTo(System::Web::UI::WebControls::WizardStepBase ^ wizardStep);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="wizardStep" Type="System.Web.UI.WebControls.WizardStepBase" />
      </Parameters>
      <Docs>
        <param name="wizardStep">
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> として設定する <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> の派生オブジェクト。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトを、<see cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> プロパティの値として設定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.MoveTo%2A>メソッドを制御する<xref:System.Web.UI.WebControls.WizardStepBase>-派生オブジェクトの値として設定、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに、<xref:System.Web.UI.WebControls.Wizard>をプログラムで制御します。 これにより、変更、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティが動的に実行時にその他の条件に基づきます。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.MoveTo%2A>を制御する方法、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 場合の値`CheckBox1.Checked`は`true`、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step3`、それ以外の<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>プロパティに設定されている`Wizard1.Step2`です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/CS/wizardmovetocs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardMoveTo#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardMoveTo/VB/wizardmovetovb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">渡された <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> の派生オブジェクトの値が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException">渡された関連する <see cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" /> の派生オブジェクトの <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> が -1 です。</exception>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStep" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.ActiveStepIndex" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
      </Docs>
    </Member>
    <Member MemberName="MoveToCommandName">
      <MemberSignature Language="C#" Value="public static readonly string MoveToCommandName;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string MoveToCommandName" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.MoveToCommandName" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly MoveToCommandName As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ MoveToCommandName;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各サイドバー ボタンに関連付けられたコマンド名を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.MoveToCommandName>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.MoveToCommandName>は`"Move"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.IButtonControl.CommandName" />
      </Docs>
    </Member>
    <Member MemberName="NavigationButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style NavigationButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style NavigationButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ NavigationButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのナビゲーション領域に表示されるボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> のナビゲーション領域に表示されるボタンのスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティのナビゲーション領域のボタンの外観を定義する、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティは、個々 のボタン スタイルを使用してマージされます。 個々 のボタンのスタイル プロパティに適用される任意の設定に対応する設定を上書き、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 設定する場合など、`FinishPreviousButtonStyle.ForeColor`プロパティを`"red"`と`NavigationButtonStyle.ForeColor`プロパティを`"green"`、個々 の設定のスタイルを設定するために、ボタンの色が赤で、<xref:System.Web.UI.WebControls.Wizard.FinishPreviousButtonStyle%2A>プロパティの設定の上書き、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 次<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティ スタイルは、個々 のボタンのスタイル設定によって上書きされます。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="NavigationPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string NavigationPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string NavigationPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.NavigationPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NavigationPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ NavigationPlaceholderId;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> プレースホルダーの ID を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プレース ホルダー ID は、"navigationPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NavigationStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle NavigationStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle NavigationStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.NavigationStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property NavigationStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ NavigationStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのナビゲーション領域の設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> のナビゲーション領域のスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>プロパティのナビゲーション領域の外観を定義する、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard>コントロール。 適用されるすべての設定、<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 次<xref:System.Web.UI.WebControls.Wizard>スタイル プロパティは、<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="NextButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler NextButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event NextButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ NextButtonClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベントが発生したときに、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.Wizard>コントロールがクリックされました。 使用して、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>ときに、追加処理を提供するイベント、 **[次へ]** ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベント。 たびに、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティを<xref:System.Web.UI.WebControls.Wizard>によって測定されるは、コントロールを 1 ピクセルずつ増加、<xref:System.Web.UI.WebControls.Unit>クラスです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="OnActiveStepChanged">
      <MemberSignature Language="C#" Value="protected virtual void OnActiveStepChanged (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnActiveStepChanged(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnActiveStepChanged (source As Object, e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnActiveStepChanged(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A>メソッドを発生させます、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>イベント時に、<xref:System.Web.UI.WebControls.Wizard.ActiveStep%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロールが変更されました。 使用して、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>に現在のステップするときに、追加の処理を提供するイベントが表示されます、<xref:System.Web.UI.WebControls.Wizard>変更を制御します。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnActiveStepChanged%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例を使用する方法を示しています、<xref:System.Web.UI.WebControls.Wizard.ActiveStepChanged>を更新するイベント、<xref:System.Web.UI.WebControls.Wizard.HeaderText%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/CS/wizardactivestepchangedcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardActiveStepChanged#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardActiveStepChanged/VB/wizardactivestepchangedvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnActiveStepChanged(System.Object,System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.ActiveStepChanged" />
      </Docs>
    </Member>
    <Member MemberName="OnBubbleEvent">
      <MemberSignature Language="C#" Value="protected override bool OnBubbleEvent (object source, EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance bool OnBubbleEvent(object source, class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnBubbleEvent(System.Object,System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBubbleEvent (source As Object, e As EventArgs) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override bool OnBubbleEvent(System::Object ^ source, EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="source" Type="System.Object" />
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="source">イベントのソース。</param>
        <param name="e">イベント データを格納します。</param>
        <summary>サーバー コントロールのイベントをページのユーザー インターフェイス サーバー コントロールの階層構造に渡すかどうかを決定します。</summary>
        <returns>
          サーバー コントロールのイベントをページのユーザー インターフェイス サーバー コントロールの階層構造に渡す場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnCancelButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnCancelButtonClick (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnCancelButtonClick(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnCancelButtonClick (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnCancelButtonClick(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.EventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>イベントが発生したときに、**キャンセル**ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnCancelButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.CancelButtonClick>イベント。 ときに、**キャンセル**ボタンがクリックされると、ステップにリダイレクトhttp://www.wingtiptoys.com/です。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/CS/wizardcancelbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardCancelButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardCancelButtonClick/VB/wizardcancelbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnCancelButtonClick(System.EventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.CancelButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnFinishButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnFinishButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnFinishButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnFinishButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnFinishButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>イベントが発生したときに、**完了**ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnFinishButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.FinishButtonClick>イベント。 ときに、**完了**ボタンをクリックすると、確認メッセージを記述する`Label1`と`Label1.Visible`プロパティに設定されている`true`手順で、メッセージが表示されないようにします。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/CS/wizardfinishbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardFinishButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardFinishButtonClick/VB/wizardfinishbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnFinishButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.FinishButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnInit">
      <MemberSignature Language="C#" Value="protected internal override void OnInit (EventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void OnInit(class System.EventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnInit(System.EventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub OnInit (e As EventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void OnInit(EventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.EventArgs" />
      </Parameters>
      <Docs>
        <param name="e">発生したイベント。</param>
        <summary>Init イベントを発生させます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnNextButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnNextButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnNextButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnNextButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnNextButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベントが発生したときに、 **[次へ]** ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnNextButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.NextButtonClick>イベント。 たびに、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティを<xref:System.Web.UI.WebControls.Wizard>によって測定されるは、コントロールを 1 ピクセルずつ増加、<xref:System.Web.UI.WebControls.Unit>クラスです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnNextButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.NextButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnPreviousButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnPreviousButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnPreviousButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnPreviousButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnPreviousButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>イベントが発生したときに、**前**ボタンをクリックします。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>イベント。 毎回、**前**ボタンをクリックして、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティを<xref:System.Web.UI.WebControls.Wizard>コントロールが減らさ 1 ピクセルによって測定される、<xref:System.Web.UI.WebControls.Unit>クラスです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="OnSideBarButtonClick">
      <MemberSignature Language="C#" Value="protected virtual void OnSideBarButtonClick (System.Web.UI.WebControls.WizardNavigationEventArgs e);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void OnSideBarButtonClick(class System.Web.UI.WebControls.WizardNavigationEventArgs e) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub OnSideBarButtonClick (e As WizardNavigationEventArgs)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void OnSideBarButtonClick(System::Web::UI::WebControls::WizardNavigationEventArgs ^ e);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="e" Type="System.Web.UI.WebControls.WizardNavigationEventArgs" />
      </Parameters>
      <Docs>
        <param name="e">イベント データを格納している <see cref="T:System.Web.UI.WebControls.WizardNavigationEventArgs" />。</param>
        <summary>
          <see cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" /> イベントを発生させます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>サイドバー領域上のボタンがクリックされたときにイベントが発生します。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>場合に、イベントがイベントを生成しません、<xref:System.Web.UI.WebControls.Button>と制御、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに設定`Move`外部では、<xref:System.Web.UI.WebControls.DataList>のコントロールのサイド バーのリスト、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>オブジェクト。  
  
 イベントを発生させると、イベント ハンドラーがデリゲートから呼び出されます。 詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)です。  
  
 <xref:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick%2A> メソッドを使用すると、デリゲートを結び付けずに、派生クラスでイベントを処理することもできます。 派生クラスでイベントを処理する場合は、この手法をお勧めします。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>イベント。 たびに、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>イベントが発生すると、メッセージが出力に、<xref:System.Web.UI.WebControls.Label.Text%2A>プロパティ`Label1`領域ボタンがクリックされたどのサイドバー上の情報を使用します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オーバーライドする場合、<see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />を呼び出して派生クラスでメソッドが必ず、<see cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />デリゲートを登録するための基本クラスのメソッドは、イベントを受信します。</para>
        </block>
        <altmember cref="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      </Docs>
    </Member>
    <Member MemberName="PreviousButtonClick">
      <MemberSignature Language="C#" Value="public event System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler PreviousButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.PreviousButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Custom Event PreviousButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::UI::WebControls::WizardNavigationEventHandler ^ PreviousButtonClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンがクリックされると発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>イベントが発生したときに、**前**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロールがクリックされました。 使用して、<xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>ときに、追加処理を提供するイベント、**前**ボタンをクリックします。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.PreviousButtonClick>イベント。 毎回、**前**ボタンをクリックして、<xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>プロパティを<xref:System.Web.UI.WebControls.Wizard>コントロールが減らさ 1 ピクセルによって測定される、<xref:System.Web.UI.WebControls.Unit>クラスです。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/CS/wizardnextpreviousbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardNextPreviousButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardNextPreviousButtonClick/VB/wizardnextpreviousbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnPreviousButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="RegisterCommandEvents">
      <MemberSignature Language="C#" Value="protected internal void RegisterCommandEvents (System.Web.UI.WebControls.IButtonControl button);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig instance void RegisterCommandEvents(class System.Web.UI.WebControls.IButtonControl button) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.RegisterCommandEvents(System.Web.UI.WebControls.IButtonControl)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Sub RegisterCommandEvents (button As IButtonControl)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; void RegisterCommandEvents(System::Web::UI::WebControls::IButtonControl ^ button);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="button" Type="System.Web.UI.WebControls.IButtonControl" />
      </Parameters>
      <Docs>
        <param name="button">
          <see cref="T:System.Web.UI.WebControls.IButtonControl" /> の新しいインスタンスを登録する対象の <see cref="T:System.Web.UI.WebControls.CommandEventHandler" />。</param>
        <summary>指定した <see cref="T:System.Web.UI.WebControls.CommandEventHandler" /> オブジェクト用に <see cref="T:System.Web.UI.WebControls.IButtonControl" /> クラスの新しいインスタンスを登録します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Render">
      <MemberSignature Language="C#" Value="protected internal override void Render (System.Web.UI.HtmlTextWriter writer);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance void Render(class System.Web.UI.HtmlTextWriter writer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.Render(System.Web.UI.HtmlTextWriter)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Sub Render (writer As HtmlTextWriter)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override void Render(System::Web::UI::HtmlTextWriter ^ writer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="writer" Type="System.Web.UI.HtmlTextWriter" />
      </Parameters>
      <Docs>
        <param name="writer">HTML ライター。</param>
        <summary>指定されたライターにコントロールを表示します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveControlState">
      <MemberSignature Language="C#" Value="protected internal override object SaveControlState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance object SaveControlState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveControlState" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function SaveControlState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; override System::Object ^ SaveControlState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>コントロールの状態を保存します。</summary>
        <returns>コントロールの状態。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SaveViewState">
      <MemberSignature Language="C#" Value="protected override object SaveViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance object SaveViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.SaveViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function SaveViewState () As Object" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override System::Object ^ SaveViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビュー ステートを保存します。</summary>
        <returns>ビューステート。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonClick">
      <MemberSignature Language="C#" Value="public virtual event System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.UI.WebControls.WizardNavigationEventHandler SideBarButtonClick" />
      <MemberSignature Language="DocId" Value="E:System.Web.UI.WebControls.Wizard.SideBarButtonClick" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Custom Event SideBarButtonClick As WizardNavigationEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual event System::Web::UI::WebControls::WizardNavigationEventHandler ^ SideBarButtonClick;" />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardNavigationEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバー領域のボタンがクリックされたときに発生します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>イベントは、サイド バー領域にボタン、<xref:System.Web.UI.WebControls.Wizard>コントロールをクリックします。 使用して、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>サイド バー領域のボタンがクリックされたときに、追加の処理を提供するイベントです。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>場合に、イベントがイベントを生成しません、<xref:System.Web.UI.WebControls.Button>と制御、<xref:System.Web.UI.WebControls.Button.CommandName%2A>プロパティに設定`Move`外部では、<xref:System.Web.UI.WebControls.DataList>のコントロールのサイド バーのリスト、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>オブジェクト。  
  
 イベント処理の詳細については、次を参照してください。 [NIB: イベントの利用](http://msdn.microsoft.com/library/01e4f1bc-e55e-413f-98c7-6588493e5f67)です。  
  
   
  
## Examples  
 次のコード例は、イベント ハンドラーを指定する方法を示します、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>イベント。 たびに、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonClick>イベントが発生すると、メッセージが出力に、<xref:System.Web.UI.WebControls.Label.Text%2A>プロパティ`Label1`領域ボタンがクリックされたどのサイドバー上の情報を使用します。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/CS/wizardsidebarbuttonclickcs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSideBarButtonClick#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSideBarButtonClick/VB/wizardsidebarbuttonclickvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.UI.WebControls.Wizard.OnSideBarButtonClick(System.Web.UI.WebControls.WizardNavigationEventArgs)" />
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string SideBarButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string SideBarButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly SideBarButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ SideBarButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>各サイドバー ボタンに関連付けられた識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonID>は`"SideBarButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="SideBarButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style SideBarButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style SideBarButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideBarButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ SideBarButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバーのボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> のサイドバーのボタンのスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>プロパティは、のサイドバー上のボタンの外観を定義、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard>コントロール。 適用されるすべての設定、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 次<xref:System.Web.UI.WebControls.Wizard>スタイル プロパティは<xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ただしの外観を定義するテンプレートを使用する場合、<xref:System.Web.UI.WebControls.Wizard>をサイド バーを制御、<xref:System.Web.UI.WebControls.Wizard.SideBarButtonStyle%2A>プロパティは影響を与えません。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SideBarPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string SideBarPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string SideBarPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.SideBarPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly SideBarPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ SideBarPlaceholderId;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> プレースホルダーの ID を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プレース ホルダー ID は、"sideBarPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SideBarStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle SideBarStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle SideBarStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SideBarStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ SideBarStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのサイドバー領域の設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> のサイドバー領域のスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>プロパティのサイド バー領域の外観を定義する、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>オブジェクトを返します。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。  
  
 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard>コントロール。 適用されるすべての設定、<xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>プロパティは、対応するプロパティの設定を上書き、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
> [!NOTE]
>  Height プロパティ<xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>高さは、ウィザードの高さよりも低く設定する場合は無視されます。 値が設定<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>高さと<xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>ウィザード全体の高さに高さを追加します。 たとえば、ウィザードの高さが 500px に設定されている場合と<xref:System.Web.UI.WebControls.Wizard.NavigationStyle%2A>高さまたは<xref:System.Web.UI.WebControls.Wizard.HeaderStyle%2A>高さが 50 ピクセルの位置または 10% に設定し、合計のウィザードの高さは、550px です。  
  
 次<xref:System.Web.UI.WebControls.Wizard>スタイル プロパティは<xref:System.Web.UI.WebControls.Wizard.SideBarStyle%2A>設定。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="SideBarTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate SideBarTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate SideBarTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SideBarTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SideBarTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ SideBarTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールのサイドバー領域を表示するために使用されるテンプレートを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> のサイドバー領域を表示するためのテンプレートを格納する <see cref="T:System.Web.UI.WebControls.Wizard" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>する、カスタム コンテンツを指定するプロパティをサイド バー領域の表示は、<xref:System.Web.UI.WebControls.Wizard>コントロール。 サイドバーの領域を表示する方法を指定するテンプレートを作成するには、コンテンツを定義します。  
  
 テンプレート用のカスタム コンテンツが含まれる、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>オブジェクト。 カスタム コンテンツを追加することができます、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>オブジェクトのいずれかを使用してテンプレート編集モードを定義する、デザイン ビューで、<xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>を使用してオブジェクト インライン`SideBarTemplate`タグ。 コンテンツには、簡単なプレーン テキストまたはより複雑な (その他のコントロールへの埋め込み、テンプレートなど) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.SideBarTemplate%2A>オブジェクトを含める必要があります、<xref:System.Web.UI.WebControls.DataList>コントロールまたは<xref:System.Web.UI.WebControls.ListView>いるコントロール<xref:System.Web.UI.Control.ID%2A>プロパティに設定されている`"SideBarList"`サイドバー ナビゲーション機能を有効にします。 また、`"SideBarList"`上、<xref:System.Web.UI.WebControls.DataList>または<xref:System.Web.UI.WebControls.ListView>コントロールを含める必要があります、<xref:System.Web.UI.WebControls.IButtonControl>コントロール。  
  
 プログラムによって、テンプレートで定義されているコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.CompositeControl.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.Wizard>オブジェクト。 使用することも、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.Wizard>コントロールがある場合に、コントロールを検索するオブジェクト、<xref:System.Web.UI.Control.ID%2A>指定されたプロパティ。  
  
   
  
## Examples  
 次の例は、追加する方法を示します、<xref:System.Web.UI.WebControls.ListView>コントロールを`SideBarTemplate`要素と使用方法、<xref:System.Web.UI.WebControls.LinkButton>手順を移動するコントロール。  
  
```  
<SideBarTemplate>  
  <asp:ListView ID="sideBarList" runat="server">  
    <LayoutTemplate>  
    <div id="ItemPlaceHolder" runat="server"/>  
    </LayoutTemplate>  
  
    <ItemTemplate>  
      <asp:LinkButton ID="sideBarButton" runat="server"   
          Text="Button" />  
    </ItemTemplate>  
  </asp:ListView>  
</SideBarTemplate>  
```  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.SideBarButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.DisplaySideBar" />
      </Docs>
    </Member>
    <Member MemberName="SkipLinkText">
      <MemberSignature Language="C#" Value="public virtual string SkipLinkText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string SkipLinkText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.SkipLinkText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property SkipLinkText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ SkipLinkText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>サイドバー領域のコンテンツをスキップするようにスクリーン リーダーに通知する代替テキストの表示に使用する値を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Wizard" /> が、スクリーン リーダーへのヒントとして、表示されないイメージの代替テキストとして表示する文字列。 既定値は<c>「スキップ ナビゲーション リンク」</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A>サイドバー領域の内容をスキップするためにスクリーン リーダーによって読み取られる非表示イメージの代替テキストを指定するプロパティです。 指定したテキストは、支援テクノロジ デバイスのコントロールを使いやすくするために使用できる非表示イメージの説明を提供します。  
  
> [!NOTE]
>  場合、<xref:System.Web.UI.WebControls.Wizard.DisplaySideBar%2A>プロパティに設定されている`false`、<xref:System.Web.UI.WebControls.Wizard.SkipLinkText%2A>代替テキストを持つプロパティが非表示のイメージを作成できません。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="StartNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StartNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StartNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ StartNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> ステップのナビゲーション領域を表示するために使用されるテンプレートを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" /> の <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> のナビゲーション領域を表示するためのテンプレートを格納する <see cref="T:System.Web.UI.WebControls.Wizard" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>する、カスタム コンテンツを指定するプロパティをナビゲーション領域の表示は、<xref:System.Web.UI.WebControls.WizardStepType.Start>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 上のナビゲーション領域のレンダリング方法を指定するテンプレートを作成してコンテンツを定義、<xref:System.Web.UI.WebControls.WizardStepType.Start>手順です。  
  
 テンプレート用のカスタム コンテンツが含まれる、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>オブジェクト。 カスタム コンテンツを追加することができます、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>オブジェクトのいずれかを使用してテンプレート編集モードを定義する、デザイン ビューで、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>を使用してオブジェクト インライン`StartNavigationTemplate`タグ。 コンテンツには、簡単なプレーン テキストまたはより複雑な (その他のコントロールへの埋め込み、テンプレートなど) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>プロパティを含める必要があります、<xref:System.Web.UI.WebControls.IButtonControl>と制御、<xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A>プロパティに設定`"MoveNext"`ナビゲーション機能を有効にします。  
  
 プログラムによって、テンプレートで定義されているコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.CompositeControl.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.Wizard>オブジェクト。 使用することも、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.Wizard>コントロールがある場合に、コントロールを検索するオブジェクト、<xref:System.Web.UI.Control.ID%2A>指定されたプロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Web.UI.WebControls.WizardStepType.Start" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StartNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StartNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StartNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StartNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StartNextButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> ステップの **[次へ]** ボタンに関連付けられた識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonID>は、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonID>は`"StartNextButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StartNextButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> ステップの **[次へ]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL**次**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は、空の文字列 ("") です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.ButtonType.Image>フィールドに、使用、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl%2A>プロパティを表示するイメージを指定する、 **[次へ]** ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StartNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StartNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StartNextButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StartNextButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> ステップの **[次へ]** ボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**次**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>プロパティの外観を定義する、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.WizardStepType.Start>の手順、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StartNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StartNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StartNextButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> ステップの **[次へ]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**次**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>[次へ]</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A>プロパティにはに対して表示されるテキストが含まれています、**次**のボタンでは、<xref:System.Web.UI.WebControls.WizardStepType.Start>の手順、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.StartNextButtonText%2A>プロパティ ブラウザーで、イメージをレンダリングできません、イメージの代わりとして、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示されます。 次の表に、フィールド値を<xref:System.Web.UI.WebControls.Wizard.StartNextButtonType%2A>プロパティとそれぞれのそれぞれの影響、**次**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StartNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StartNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StartNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StartNextButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StartNextButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StartNextButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> ステップの **[次へ]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StepNavigationTemplate">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.ITemplate StepNavigationTemplate { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.ITemplate StepNavigationTemplate" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNavigationTemplate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNavigationTemplate As ITemplate" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::ITemplate ^ StepNavigationTemplate { System::Web::UI::ITemplate ^ get(); void set(System::Web::UI::ITemplate ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Browsable(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.TemplateContainer(typeof(System.Web.UI.WebControls.Wizard))</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.ITemplate</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WizardStepBase" />、<see cref="F:System.Web.UI.WebControls.WizardStepType.Start" />、または <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> の各ステップ以外の <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" /> の派生オブジェクトのナビゲーション領域を表示するために使用されるテンプレートを取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.ITemplate" />、<see cref="T:System.Web.UI.WebControls.WizardStepBase" />、または <see cref="T:System.Web.UI.WebControls.Wizard" /> 以外の <see cref="F:System.Web.UI.WebControls.WizardStepType.Start" /> コントロールの <see cref="F:System.Web.UI.WebControls.WizardStepType.Finish" /> の派生オブジェクトのナビゲーション領域を表示するために使用されるテンプレートを格納する <see cref="F:System.Web.UI.WebControls.WizardStepType.Complete" />。 既定値は、<see langword="null" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 使用して、<xref:System.Web.UI.WebControls.Wizard.StartNavigationTemplate%2A>する、カスタム コンテンツを指定するプロパティをナビゲーション領域の表示は、<xref:System.Web.UI.WebControls.WizardStepType.Step>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 上のナビゲーション領域のレンダリング方法を指定するテンプレートを作成してコンテンツを定義、<xref:System.Web.UI.WebControls.WizardStepType.Step>手順です。  
  
 テンプレート用のカスタム コンテンツが含まれる、<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>オブジェクト。 カスタム コンテンツを追加することができます、<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>オブジェクトのいずれかを使用してテンプレート編集モードを定義する、デザイン ビューで、<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>を使用してオブジェクト インライン`StepNavigationTemplate`タグ。 コンテンツには、簡単なプレーン テキストまたはより複雑な (その他のコントロールへの埋め込み、テンプレートなど) を指定できます。  
  
> [!NOTE]
>  <xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.Wizard.StepNavigationTemplate%2A>プロパティには、2 つ含める必要があります<xref:System.Web.UI.WebControls.IButtonControl>には、1 とその<xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A>プロパティに設定`"MoveNext"`もう 1 つの<xref:System.Web.UI.WebControls.IButtonControl.CommandName%2A>プロパティに設定`"MovePrevious"`、ナビゲーション機能を有効にします。  
  
 プログラムによって、テンプレートで定義されているコントロールにアクセスするには、使用、<xref:System.Web.UI.WebControls.CompositeControl.Controls%2A>のコレクション、<xref:System.Web.UI.WebControls.Wizard>オブジェクト。 使用することも、<xref:System.Web.UI.Control.FindControl%2A>のメソッド、<xref:System.Web.UI.WebControls.Wizard>コントロールがある場合に、コントロールを検索するオブジェクト、<xref:System.Web.UI.Control.ID%2A>指定されたプロパティ。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StartNavigationTemplate" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.FinishNavigationTemplate" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepNextButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepNextButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepNextButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StepNextButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StepNextButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンに関連付けられた識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonID>は`"StepNextButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepNextButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL**次**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.ButtonType.Image>フィールドに、使用、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl%2A>プロパティを表示するイメージを指定する、 **[次へ]** ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepNextButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepNextButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepNextButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StepNextButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**次**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>プロパティの外観を定義する、**次**ボタンをクリックして、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepNextButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepNextButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepNextButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**次**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>[次へ]</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A>プロパティにはに対して表示されるテキストが含まれています、**次**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.StepNextButtonText%2A>プロパティとして、画像の代わりとして、またはリンクのテキストとして表示されるテキスト、ボタンのテキストとして表示されます。 次の表に、フィールド値を<xref:System.Web.UI.WebControls.Wizard.StepNextButtonType%2A>プロパティとそれぞれのそれぞれの影響、**次**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepNextButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepNextButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepNextButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepNextButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepNextButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StepNextButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[次へ]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepNextButtonText" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonID">
      <MemberSignature Language="C#" Value="protected static readonly string StepPreviousButtonID;" />
      <MemberSignature Language="ILAsm" Value=".field family static initonly string StepPreviousButtonID" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.StepPreviousButtonID" />
      <MemberSignature Language="VB.NET" Value="Protected Shared ReadOnly StepPreviousButtonID As String " />
      <MemberSignature Language="C++ CLI" Value="protected: static initonly System::String ^ StepPreviousButtonID;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンに関連付けられた識別子を取得します。 このフィールドは静的であり、読み取り専用です。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID>フィールドは、主にコントロールの開発者によって使用されます。 値、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonID>は`"StepPreviousButton"`します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.IButtonControl" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonImageUrl">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonImageUrl { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonImageUrl" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonImageUrl As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepPreviousButtonImageUrl { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue("")</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.ImageUrlEditor, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.UrlProperty</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンに表示されるイメージの URL を取得または設定します。</summary>
        <value>表示されるイメージの URL**前**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ときに、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A>プロパティに設定されている、<xref:System.Web.UI.WebControls.ButtonType.Image>フィールドに、使用、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl%2A>プロパティを表示するイメージを指定する、**前**ボタンをクリックします。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.Style StepPreviousButtonStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.Style StepPreviousButtonStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepPreviousButtonStyle As Style" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::Style ^ StepPreviousButtonStyle { System::Web::UI::WebControls::Style ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.Style</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンの設定を定義する <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトへの参照を取得します。</summary>
        <value>参照、<see cref="T:System.Web.UI.WebControls.Style" />のスタイルの設定を定義する**前**上、<see cref="F:System.Web.UI.WebControls.WizardStepType.Step" />の<see cref="T:System.Web.UI.WebControls.Wizard" />です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>プロパティの外観を定義する、**前**のボタンでは、<xref:System.Web.UI.WebControls.WizardStepType.Step>のステップ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle%2A>プロパティに対応する設定をオーバーライドします<xref:System.Web.UI.WebControls.Wizard.NavigationButtonStyle%2A>プロパティです。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.NavigationButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonText">
      <MemberSignature Language="C#" Value="public virtual string StepPreviousButtonText { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StepPreviousButtonText" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonText As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ StepPreviousButtonText { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.Localizable(true)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンに表示されるテキスト キャプションを取得または設定します。</summary>
        <value>表示されるテキスト キャプション**前**上、<see cref="T:System.Web.UI.WebControls.Wizard" />です。 既定値は<c>「前」</c>です。 コントロールの既定のテキストは、サーバーの現在のロケールに基づいてローカライズされます。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A>プロパティが表示されるテキストを含む、**前**のボタンでは、<xref:System.Web.UI.WebControls.Wizard>コントロール。 値に応じて、 <xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A> 、プロパティ、<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonText%2A>プロパティ ブラウザーで、イメージをレンダリングできません、イメージの代わりとして、またはリンクのテキストとして表示されるテキストとして、ボタンのテキストとして表示されます。 次の表に、フィールド値を<xref:System.Web.UI.WebControls.Wizard.StepPreviousButtonType%2A>プロパティとそれぞれのそれぞれの影響、**前**ボタンのテキスト。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Button>  
 ボタンのテキストが表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Image>  
 テキストは、イメージの代替テキストとして表示されます。  
  
 <xref:System.Web.UI.WebControls.ButtonType.Link>  
 テキストがリンクとして表示されます。  
  
 このプロパティの値を設定すると、デザイナーのツールを使用して、リソース ファイルに自動的に保存できます。 詳細については、次を参照してください。<xref:System.ComponentModel.LocalizableAttribute>と[グローバリゼーションとローカリゼーション](http://msdn.microsoft.com/library/8ef3838e-9d05-4236-9dd0-ceecff9df80d)です。  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      </Docs>
    </Member>
    <Member MemberName="StepPreviousButtonType">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.ButtonType StepPreviousButtonType { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.WebControls.ButtonType StepPreviousButtonType" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Property StepPreviousButtonType As ButtonType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::ButtonType StepPreviousButtonType { System::Web::UI::WebControls::ButtonType get(); void set(System::Web::UI::WebControls::ButtonType value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(Mono.Cecil.CustomAttributeArgument)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.ButtonType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>**[戻る]** ボタンとして表示されるボタンの種類を取得または設定します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.ButtonType" /> 値のいずれか 1 つ。 既定値は、<see cref="F:System.Web.UI.WebControls.ButtonType.Button" /> です。</value>
        <remarks>To be added.</remarks>
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonImageUrl" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonStyle" />
        <altmember cref="P:System.Web.UI.WebControls.Wizard.StepPreviousButtonText" />
      </Docs>
    </Member>
    <Member MemberName="StepStyle">
      <MemberSignature Language="C#" Value="public System.Web.UI.WebControls.TableItemStyle StepStyle { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.TableItemStyle StepStyle" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.StepStyle" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property StepStyle As TableItemStyle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::UI::WebControls::TableItemStyle ^ StepStyle { System::Web::UI::WebControls::TableItemStyle ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DefaultValue(null)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.NotifyParentProperty(true)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.TableItemStyle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.Style" /> オブジェクトの設定を定義する <see cref="T:System.Web.UI.WebControls.WizardStep" /> オブジェクトへの参照を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.Style" /> の <see cref="T:System.Web.UI.WebControls.WizardStep" /> オブジェクトのスタイル設定を定義する <see cref="T:System.Web.UI.WebControls.Wizard" /> への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>プロパティへの参照を取得する、<xref:System.Web.UI.WebControls.Style>の外観を定義するオブジェクト、<xref:System.Web.UI.WebControls.WizardStep>でオブジェクトを<xref:System.Web.UI.WebControls.Wizard>コントロール。 <xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>プロパティは読み取り専用です。 ただし、のプロパティを設定することができます、<xref:System.Web.UI.WebControls.Style>返されるオブジェクト。 フォームで宣言によってこれらのプロパティを設定することができます`Property-Subproperty`ここで、`Subproperty`のプロパティを表す、<xref:System.Web.UI.WebControls.Style>クラス (たとえば、 `CancelButtonStyle-ForeColor`)。 プロパティをプログラムで設定するには、フォームで`Property.Subproperty`(たとえば、 `CancelButtonStyle.ForeColor`)。  
  
 一般的な設定には、カスタムの背景色には、テキストの色、フォントのプロパティが含まれます。 スタイルの設定、<xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>のスタイルの設定とプロパティがマージされます、<xref:System.Web.UI.WebControls.WebControl.Style%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。 適用されるすべての設定は、<xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>プロパティのオーバーライドに対応する設定、<xref:System.Web.UI.WebControls.WebControl.Style%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 次<xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>をオーバーライドするプロパティを設定することができます、<xref:System.Web.UI.WebControls.WebControl.Style%2A>のプロパティ、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
-   <xref:System.Web.UI.WebControls.Style.BackColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderStyle%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.BorderWidth%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.CssClass%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Font%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.ForeColor%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Height%2A>  
  
-   <xref:System.Web.UI.WebControls.Style.Width%2A>  
  
 使用すると、<xref:System.Web.UI.WebControls.TemplatedWizardStep>の外観を定義するテンプレート、 <xref:System.Web.UI.WebControls.WizardStep> 、オブジェクト、<xref:System.Web.UI.WebControls.Wizard.StepStyle%2A>プロパティは影響を与えません。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStep" />
        <altmember cref="T:System.Web.UI.WebControls.Style" />
      </Docs>
    </Member>
    <Member MemberName="TagKey">
      <MemberSignature Language="C#" Value="protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.UI.HtmlTextWriterTag TagKey" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.TagKey" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property TagKey As HtmlTextWriterTag" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property System::Web::UI::HtmlTextWriterTag TagKey { System::Web::UI::HtmlTextWriterTag get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.UI.HtmlTextWriterTag</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.Wizard" /> 値を取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.HtmlTextWriterTag" /> コントロールに対応する <see cref="T:System.Web.UI.WebControls.Wizard" /> 値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.TagKey%2A>を拡張するプロパティが、主にコントロールの開発者によって使用される、<xref:System.Web.UI.WebControls.Wizard>コントロール。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.HtmlTextWriterTag" />
      </Docs>
    </Member>
    <Member MemberName="TrackViewState">
      <MemberSignature Language="C#" Value="protected override void TrackViewState ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void TrackViewState() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.UI.WebControls.Wizard.TrackViewState" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub TrackViewState ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void TrackViewState();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ビューステートを追跡します。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardStepPlaceholderId">
      <MemberSignature Language="C#" Value="public static readonly string WizardStepPlaceholderId;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly string WizardStepPlaceholderId" />
      <MemberSignature Language="DocId" Value="F:System.Web.UI.WebControls.Wizard.WizardStepPlaceholderId" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly WizardStepPlaceholderId As String " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly System::String ^ WizardStepPlaceholderId;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <see cref="T:System.Web.UI.WebControls.WizardStep" /> コントロールの <see cref="T:System.Web.UI.WebControls.Wizard" /> プレースホルダーの ID を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プレース ホルダー ID は、"WizardStepPlaceHolder"に設定する必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="WizardSteps">
      <MemberSignature Language="C#" Value="public virtual System.Web.UI.WebControls.WizardStepCollection WizardSteps { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.UI.WebControls.WizardStepCollection WizardSteps" />
      <MemberSignature Language="DocId" Value="P:System.Web.UI.WebControls.Wizard.WizardSteps" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property WizardSteps As WizardStepCollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::UI::WebControls::WizardStepCollection ^ WizardSteps { System::Web::UI::WebControls::WizardStepCollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.ComponentModel.DesignerSerializationVisibility</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.ComponentModel.Editor("System.Web.UI.Design.WebControls.WizardStepCollectionEditor,System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.Drawing.Design.UITypeEditor))</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.PersistenceMode(System.Web.UI.PersistenceMode.InnerProperty)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>System.Web.UI.Themeable(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.UI.WebControls.WizardStepCollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コントロールに対して定義されたすべての <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトを格納するコレクションを取得します。</summary>
        <value>
          <see cref="T:System.Web.UI.WebControls.WizardStepCollection" /> に対して定義されたすべての <see cref="T:System.Web.UI.WebControls.WizardStepBase" /> オブジェクトを表す <see cref="T:System.Web.UI.WebControls.Wizard" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>プロパティのコレクションを返します<xref:System.Web.UI.WebControls.WizardStepBase>を構成するオブジェクト、<xref:System.Web.UI.WebControls.Wizard>コントロール。 使用することができます、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>にアクセスするコレクション、<xref:System.Web.UI.WebControls.WizardStepBase>に含まれているオブジェクト、<xref:System.Web.UI.WebControls.Wizard>をプログラムで制御します。 使用して、 <xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>、 <xref:System.Web.UI.WebControls.WizardStepCollection.Remove%2A>、 <xref:System.Web.UI.WebControls.WizardStepCollection.Clear%2A>、および<xref:System.Web.UI.WebControls.WizardStepCollection.Insert%2A>を操作するメソッド、<xref:System.Web.UI.WebControls.WizardStepBase>プログラムによって、コレクション内のオブジェクトします。  
  
> [!NOTE]
>  Microsoft Visual Studio 2005 を使用している場合は注意してください、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>はソース ビューに保存します。 変更した場合、<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>サイド バーのボタンをクリックしてデザイン ビューでのプロパティ ページでの最初の手順を実行し、`Wizard`ために、コントロールは表示されませんが、<xref:System.Web.UI.WebControls.Wizard.ActiveStepIndex%2A>異なる手順を指している可能性があります。  
  
 場合、<xref:System.Web.UI.WebControls.Wizard>コントロールが複数含まれている<xref:System.Web.UI.WebControls.WizardStepCollection>コレクション、コレクションに結合されます。  
  
 このプロパティは、テーマまたはスタイル シート テーマによって設定することはできません。 詳細については、次を参照してください。<xref:System.Web.UI.ThemeableAttribute>と[ASP.NET のテーマとスキン](http://msdn.microsoft.com/library/5df3ebbd-d46c-4502-9406-02f9df4ef2c3)です。  
  
   
  
## Examples  
 次のコード例を作成する方法を示しています、<xref:System.Web.UI.WebControls.Wizard>をプログラムで制御を使用する方法と、<xref:System.Web.UI.WebControls.WizardStepCollection.Add%2A>メソッドを追加する<xref:System.Web.UI.WebControls.WizardStepBase>オブジェクトを<xref:System.Web.UI.WebControls.Wizard.WizardSteps%2A>コレクション。  
  
 [!code-aspx-csharp[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/CS/wizardstepscs.aspx#1)]
 [!code-aspx-vb[System.Web.UI.WebControls.WizardSteps#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.UI.WebControls.WizardSteps/VB/wizardstepsvb.aspx#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.WebControls.WizardStepCollection" />
        <altmember cref="T:System.Web.UI.WebControls.WizardStepBase" />
      </Docs>
    </Member>
  </Members>
</Type>