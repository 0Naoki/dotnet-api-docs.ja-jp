<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="TripleDesSecurityAlgorithmSuite.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5227d1d9a7974f390afe882b3a5a9817ba01b0c47.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">227d1d9a7974f390afe882b3a5a9817ba01b0c47</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite">
          <source>The triple-DES security algorithm suite.</source>
          <target state="translated">Triple-DES セキュリティ アルゴリズム スイート。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.#ctor">
          <source>Creates and initializes an instance of <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph> のインスタンスを作成および初期化します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <source>Gets the default asymmetric key wrap algorithm, RsaOaepKeyWrap.</source>
          <target state="translated">既定の非対称キー ラップ アルゴリズム (RsaOaepKeyWrap) を取得します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricKeyWrapAlgorithm">
          <source>The default asymmetric key wrap algorithm, RsaOaepKeyWrap.</source>
          <target state="translated">既定の非対称キー ラップ アルゴリズム (RsaOaepKeyWrap)。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <source>Gets the default asymmetric signature algorithm, RsaSha1Signature.</source>
          <target state="translated">既定の非対称署名アルゴリズム (RsaSha1Signature) を取得します。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultAsymmetricSignatureAlgorithm">
          <source>The default asymmetric signature algorithm, RsaSha1Signature.</source>
          <target state="translated">既定の非対称署名アルゴリズム (RsaSha1Signature)。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <source>Gets the default canonicalization algorithm, ExclusiveC14n.</source>
          <target state="translated">既定の標準化アルゴリズム (ExclusiveC14n) を取得します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultCanonicalizationAlgorithm">
          <source>The default canonicalization algorithm, ExclusiveC14n.</source>
          <target state="translated">既定の標準化アルゴリズム (ExclusiveC14n)。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <source>Gets the default digest algorithm, Sha1Digest.</source>
          <target state="translated">既定のダイジェスト アルゴリズム (Sha1Digest) を取得します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultDigestAlgorithm">
          <source>The default digest algorithm, Sha1Digest.</source>
          <target state="translated">既定のダイジェスト アルゴリズム (Sha1Digest)。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <source>Gets the default encryption algorithm, TripleDesEncryption.</source>
          <target state="translated">既定の暗号化アルゴリズム (TripleDesEncryption) を取得します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionAlgorithm">
          <source>The default encryption algorithm, TripleDesEncryption.</source>
          <target state="translated">既定の暗号化アルゴリズム (TripleDesEncryption)。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <source>Gets the default encryption key derivation length, 192.</source>
          <target state="translated">既定の暗号化キー派生長 (192) を取得します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultEncryptionKeyDerivationLength">
          <source>The default encryption key derivation length, 192.</source>
          <target state="translated">既定の暗号化キー派生長 (192)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <source>Gets the default signature key derivation length, 192.</source>
          <target state="translated">既定の署名キー派生長 (192) を取得します。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSignatureKeyDerivationLength">
          <source>The default signature key derivation length, 192.</source>
          <target state="translated">既定の署名キー派生長 (192)。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <source>Gets the default symmetric key length, 192.</source>
          <target state="translated">既定の対称キー長 (192) を取得します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyLength">
          <source>The default symmetric key length, 192.</source>
          <target state="translated">既定の対称キー長 (192)。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <source>Gets the default symmetric key wrap algorithm, TripleDesKeyWrap.</source>
          <target state="translated">既定の対称キー ラップ アルゴリズム (TripleDesKeyWrap) を取得します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricKeyWrapAlgorithm">
          <source>The default symmetric key wrap algorithm, TripleDesKeyWrap.</source>
          <target state="translated">既定の対称キー ラップ アルゴリズム (TripleDesKeyWrap)。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <source>Gets the default symmetric signature algorithm, HmacSha1Signature.</source>
          <target state="translated">既定の対称署名アルゴリズム (HmacSha1Signature) を取得します。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.DefaultSymmetricSignatureAlgorithm">
          <source>The default symmetric signature algorithm, HmacSha1Signature.</source>
          <target state="translated">既定の対称署名アルゴリズム (HmacSha1Signature)。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <source>The asymmetric key length.</source>
          <target state="translated">非対称キー長。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified asymmetric key length is supported; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定された非対称キー長がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> を、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <source>Valid lengths range from 1024 to 4096.</source>
          <target state="translated">有効な長さは 1024 から 4096 の範囲です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsAsymmetricKeyLengthSupported(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified asymmetric key length is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定された非対称キー長がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <source>The symmetric key length.</source>
          <target state="translated">対称キー長。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <source>Returns <ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified symmetric key length is supported; otherwise, returns <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定された対称キー長がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph> を、それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <source>Valid lengths range from 192 to 256.</source>
          <target state="translated">有効な長さは 192 ～ 256 の範囲です。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.IsSymmetricKeyLengthSupported(System.Int32)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the specified symmetric key length is supported; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">指定された対称キー長がサポートされている場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString">
          <source>Returns the string representation of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph> の文字列形式を返します。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite.ToString">
          <source>The string representation of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.TripleDesSecurityAlgorithmSuite" /&gt;</ph> の文字列形式。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>