<Type Name="HttpDigestClientCredential" FullName="System.ServiceModel.Security.HttpDigestClientCredential">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="8740955d333e0ef62ee82598954a9f26acbeb560" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36613206" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class HttpDigestClientCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HttpDigestClientCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.HttpDigestClientCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HttpDigestClientCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class HttpDigestClientCredential sealed" />
  <TypeSignature Language="F#" Value="type HttpDigestClientCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.1.1.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="c12de-101">HTTP クライアントのダイジェスト認証に使用されます。</span>
      <span class="sxs-lookup">
        <span data-stu-id="c12de-101">Used for digest authentication of HTTP clients.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12de-102">ダイジェスト認証では、通信を行う双方が共有シークレット (パスワード) を知っていることを検証します。</span><span class="sxs-lookup"><span data-stu-id="c12de-102">Digest authentication verifies that both parties to a communication know a shared secret (a password).</span></span> <span data-ttu-id="c12de-103">認証を行う際には、暗号化されていないパスワードは送信されません。</span><span class="sxs-lookup"><span data-stu-id="c12de-103">Authentication is done without sending the password in the clear.</span></span> <span data-ttu-id="c12de-104">ダイジェスト認証は、チャレンジ レスポンス パラダイムに基づいています。</span><span class="sxs-lookup"><span data-stu-id="c12de-104">Digest authentication is based on a challenge-response paradigm.</span></span> <span data-ttu-id="c12de-105">ダイジェスト スキームは nonce ("number used once") 値を使用したチャレンジを送信します。</span><span class="sxs-lookup"><span data-stu-id="c12de-105">The Digest scheme challenges using a nonce ("number used once") value.</span></span> <span data-ttu-id="c12de-106">応答には、ユーザー名のチェックサム、パスワード、nonce 値、HTTP メソッド、および要求された URI が含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="c12de-106">The response must contain a checksum of the user name, the password, the nonce value, the HTTP method, and the requested URI.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="AllowedImpersonationLevel">
      <MemberSignature Language="C#" Value="public System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Security.Principal.TokenImpersonationLevel AllowedImpersonationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowedImpersonationLevel As TokenImpersonationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Security::Principal::TokenImpersonationLevel AllowedImpersonationLevel { System::Security::Principal::TokenImpersonationLevel get(); void set(System::Security::Principal::TokenImpersonationLevel value); };" />
      <MemberSignature Language="F#" Value="member this.AllowedImpersonationLevel : System.Security.Principal.TokenImpersonationLevel with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.AllowedImpersonationLevel" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.Principal.TokenImpersonationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c12de-107">提供されたクライアント資格情報を使用してクライアントが許可する偽装レベルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c12de-107">Gets or sets the level of impersonation that the client allows with the client credential provided.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c12de-108">クライアントが HTTP ダイジェスト認証の一部としてサーバーに付与する <see cref="T:System.Security.Principal.TokenImpersonationLevel" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c12de-108">The <see cref="T:System.Security.Principal.TokenImpersonationLevel" /> that the client grants the server as part of HTTP digest authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12de-109">次の値を使用できます。</span><span class="sxs-lookup"><span data-stu-id="c12de-109">Allowable values include:</span></span>  
  
 <span data-ttu-id="c12de-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>、</span><span class="sxs-lookup"><span data-stu-id="c12de-110"><xref:System.Security.Principal.TokenImpersonationLevel.Delegation>,</span></span>  
  
 <span data-ttu-id="c12de-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>、および</span><span class="sxs-lookup"><span data-stu-id="c12de-111"><xref:System.Security.Principal.TokenImpersonationLevel.Identification>, and</span></span>  
  
 <span data-ttu-id="c12de-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>。</span><span class="sxs-lookup"><span data-stu-id="c12de-112"><xref:System.Security.Principal.TokenImpersonationLevel.Impersonation>.</span></span>  
  
 <span data-ttu-id="c12de-113">ダイジェスト認証の制限により、クライアントが既定以外の資格情報を使用している場合は、`Impersonation` レベルと `Delegation` レベルのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="c12de-113">Due to the limitations of Digest authentication, when the client is using non-default credentials, only `Impersonation` and `Delegation` levels are allowed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c12de-114">このプロパティを設定する方法を次の例に示します。</span><span class="sxs-lookup"><span data-stu-id="c12de-114">The following example shows how to set this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#1)]
 [!code-vb[S_UE_HttpDigestClientCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_httpdigestclientcredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ClientCredential">
      <MemberSignature Language="C#" Value="public System.Net.NetworkCredential ClientCredential { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Net.NetworkCredential ClientCredential" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberSignature Language="VB.NET" Value="Public Property ClientCredential As NetworkCredential" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Net::NetworkCredential ^ ClientCredential { System::Net::NetworkCredential ^ get(); void set(System::Net::NetworkCredential ^ value); };" />
      <MemberSignature Language="F#" Value="member this.ClientCredential : System.Net.NetworkCredential with get, set" Usage="System.ServiceModel.Security.HttpDigestClientCredential.ClientCredential" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel.Primitives</AssemblyName>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.1.1.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Net.NetworkCredential</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="c12de-115">ダイジェスト ベースの認証に使用するネットワーク資格情報を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c12de-115">Gets or sets the network credential to be used for digest-based authentication.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="c12de-116">ダイジェスト ベースの認証に使用する <see cref="T:System.Net.NetworkCredential" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="c12de-116">The <see cref="T:System.Net.NetworkCredential" /> to be used for digest-based authentication.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="c12de-117">指定しない場合、既定のスレッド資格情報が使用されます。</span><span class="sxs-lookup"><span data-stu-id="c12de-117">If not specified, the default thread credential will be used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="c12de-118">クライアントを別のプリンシパルとして認証する方法を次のコード例に示します。</span><span class="sxs-lookup"><span data-stu-id="c12de-118">The following code examples show how to authenticate the client as a different principal.</span></span>  
  
 <span data-ttu-id="c12de-119">このプロパティによって返される <xref:System.Net.NetworkCredential> クラスのインスタンスのプロパティを変更する方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c12de-119">This is how to change the properties of the instance of the <xref:System.Net.NetworkCredential> class that is returned by this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#2)]  
  
 <span data-ttu-id="c12de-120"><xref:System.Net.NetworkCredential> クラスの新しいインスタンスを作成し、このプロパティに割り当てる方法を次に示します。</span><span class="sxs-lookup"><span data-stu-id="c12de-120">And here is how to create a new instance of the <xref:System.Net.NetworkCredential> class and assign it to this property.</span></span>  
  
 [!code-csharp[S_UE_HttpDigestClientCredential#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_httpdigestclientcredential/cs/source.cs#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>