<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="SecureConversationServiceCredential.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5fc877fc4133501b86d3550e57af5fff851e60669.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">fc877fc4133501b86d3550e57af5fff851e60669</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Provides credential settings for a secure conversation service.</source>
          <target state="translated">セキュリティで保護されたメッセージ交換サービスの資格情報の設定を提供します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Secure conversations involve the exchange of multiple messages and use a Security Context Token (SCT) to ensure security.</source>
          <target state="translated">安全な対話を行うには、複数のメッセージを交換し、セキュリティ コンテキスト トークン (SCT) を使用してセキュリティを保証する必要があります。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The SCT is shared among the communicating parties for the lifetime of a communications session.</source>
          <target state="translated">SCT は、通信セッションが存続している期間中、すべての通信参加者の間で共有されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A service can issue two different kinds of SCTs:</source>
          <target state="translated">サービスは 2 種類の SCT を発行できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The first is a session-based SCT that contains a unique id. Messages carry only the id, and the service maintains a state-mapping cache that maps between the SCT ids and contents (such as claims, security keys, and so on).</source>
          <target state="translated">最初の SCT は一意の ID を含むセッション ベースの SCT です。メッセージにはこの ID だけが含まれ、SCT ID と内容 (クレーム、セキュリティ キーなど) をマップする状態マッピング キャッシュがサービスで保持されます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>A well-behaved client must send an SCT cancellation to help the service optimize the cache resources.</source>
          <target state="translated">適切に動作するクライアントは SCT キャンセルを送信して、サービスでキャッシュ リソースを最適化できるようにする必要があります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>If you instantiate this class by calling <ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> with the <ph id="ph2">`requireCancellation`</ph> parameter equal to <ph id="ph3">`true`</ph>, the SCT is issued in this manner.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.SecurityBindingElement.CreateSecureConversationBindingElement%2A&gt;</ph> パラメーターを <ph id="ph2">`requireCancellation`</ph> に設定した <ph id="ph3">`true`</ph> を呼び出すことでこのクラスをインスタンス化すると、SCT はこの方法で発行されます。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>The second is a self-contained SCT that resides in a cookie on the client.</source>
          <target state="translated">2 番目の SCT は、クライアントのクッキーに存在する独立した SCT です。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This SCT contains the entire state information, so requires neither state management from the service nor SCT cancellation from the client.</source>
          <target state="translated">この SCT は完全な状態情報を格納しているため、サービスからの状態管理もクライアントからの SCT キャンセルも必要ありません。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>This is sometimes called a "cookie-mode" SCT.</source>
          <target state="translated">これを "クッキー モード" SCT と呼ぶこともあります。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>Because the SCT contains the entire state information, its size is larger than in the session-based case.</source>
          <target state="translated">SCT は完全な状態情報を格納しているため、SCT のサイズはセッション ベースの場合より大きくなります。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>With session-based SCTs, the service stores much of the state information.</source>
          <target state="translated">セッション ベースの SCT により、サービスは状態情報のほとんどを格納します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Security.SecureConversationServiceCredential">
          <source>However, because it is self-contained, it can be used across service lifetime and persists across service shutdown and restart.</source>
          <target state="translated">ただし、この SCT は独立しているため、サービスの有効期間にわたって使用でき、サービスの停止と再起動の間も持続します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Gets a collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">クッキー シリアル化のための <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> クレームのコレクションを取得します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>A collection of the <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> claims for cookie serialization.</source>
          <target state="translated">クッキー シリアル化のための <ph id="ph1">&lt;see cref="T:System.Type" /&gt;</ph> クレームのコレクション。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>To serialize claims into SCT cookies, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> as the default.</source>
          <target state="translated">クレームを SCT クッキーにシリアル化するため、<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> は既定で <ph id="ph2">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> を使用します。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>Because the Claim resource is extensible, <ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> allows you to provide a list of known resource types.</source>
          <target state="translated">クレーム リソースは拡張可能であるため、<ph id="ph1">[!INCLUDE[indigo2](~/includes/indigo2-md.md)]</ph> では既知のリソース型のリストを提供できます。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>This assists the <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> during deserialization of the claims in the cookie so that it can return the original strongly-typed objects.</source>
          <target state="translated">これはクッキー内のクレームの逆シリアル化時に <ph id="ph1">&lt;xref:System.Runtime.Serialization.DataContractSerializer&gt;</ph> を支援し、元の厳密に型指定されたオブジェクトを返すことができるようになります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityContextClaimTypes">
          <source>The following code shows how to get this property.</source>
          <target state="translated">このプロパティを取得する方法を次のコードに示します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Gets or sets a customized <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> for encoding and decoding cookie serialization.</source>
          <target state="translated">クッキー シリアル化をエンコードおよびデコードするためのカスタマイズした <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> を取得または設定します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>A <ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> object, which is a customization of <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Security.SecurityStateEncoder" /&gt;</ph> オブジェクト。これはカスタマイズされた <ph id="ph2">&lt;see cref="T:System.ServiceModel.Security.DataProtectionSecurityStateEncoder" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In "cookie mode", a service issues the client a security context token (SCT) in the form of a cookie to the client so that it does not have to maintain any security state.</source>
          <target state="translated">"クッキー モード" では、サービスがクッキー形式でセキュリティ コンテキスト トークン (SCT) をクライアントに発行するため、セキュリティ状態を維持する必要がありません。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The client sends the cookie back in the request message so that the service knows how to unprotect and verify the request message.</source>
          <target state="translated">クライアントは要求メッセージでクッキーを送り返して、サービスに要求メッセージの保護を解除して検証する方法を伝達します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>Because the SCT is often transmitted over a non-secure network, it must be protected.</source>
          <target state="translated">SCT はセキュリティで保護されていないネットワーク経由で転送されることが多いため、保護する必要があります。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>By default, <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses the <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> class to protect the cookie using the Data Protection API (DPAPI).</source>
          <target state="translated">既定では、<ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> は <ph id="ph2">&lt;xref:System.ServiceModel.Security.DataProtectionSecurityStateEncoder&gt;</ph> クラスを使用して、データ保護 API (DPAPI) によりクッキーを保護します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>For DPAPI to work in a Web farm environment, all the backend services must run as the same domain user account.</source>
          <target state="translated">DPAPI が Web ファーム環境で機能するようにするには、すべてのバックエンド サービスが同じドメイン ユーザー アカウントとして実行されている必要があります。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>In other words, if the service is Web hosted, then the Internet Information Services (IIS) worker process must be configured to run as a domain user.</source>
          <target state="translated">言い換えると、サービスが Web ホストである場合は、インターネット インフォメーション サービス (IIS) ワーカー プロセスをドメイン ユーザーとして実行するよう構成する必要があります。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>This property enables you to use a customized <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> to encrypt and decrypt the cookie and not depend on DPAPI.</source>
          <target state="translated">このプロパティにより、DPAPI を使用せずに、カスタマイズされた <ph id="ph1">&lt;xref:System.ServiceModel.Security.SecurityStateEncoder&gt;</ph> を使用してクッキーを暗号化および復号化することができます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Security.SecureConversationServiceCredential.SecurityStateEncoder">
          <source>The following code shows how to set this property.</source>
          <target state="translated">次のコードに、このプロパティを設定する方法を示します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>