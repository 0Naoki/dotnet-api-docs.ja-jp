<Type Name="UserNamePasswordServiceCredential" FullName="System.ServiceModel.Security.UserNamePasswordServiceCredential">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d8e3d25492a66bc5287498064f836da9b904265f" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69233811" /></Metadata><TypeSignature Language="C#" Value="public sealed class UserNamePasswordServiceCredential" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit UserNamePasswordServiceCredential extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Security.UserNamePasswordServiceCredential" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class UserNamePasswordServiceCredential" />
  <TypeSignature Language="C++ CLI" Value="public ref class UserNamePasswordServiceCredential sealed" />
  <TypeSignature Language="F#" Value="type UserNamePasswordServiceCredential = class" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>3.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ユーザー名/パスワード認証を使用するユーザーをサービスが認証する方法を構成したり、ログオン トークンのキャッシュを構成したりするために使用されるクラスを表します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 サービスで使用されるバインディングがユーザー名とパスワードに基づく認証を使用するように構成されていない場合、このクラスの関連するプロパティは無視されます。 このようなプロパティには、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>、および <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> プロパティがあります。  
  
 サービスで使用されるバインディングが Windows 認証のユーザー名とパスワードを使用するように構成されていない場合、ログオン トークンのキャッシュに関連する設定は無視されます。 このような設定には、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A>、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>、および <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> プロパティがあります。  
  
   
  
## Examples  
 サービスの <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential> のプロパティの値を表示する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="CachedLogonTokenLifetime">
      <MemberSignature Language="C#" Value="public TimeSpan CachedLogonTokenLifetime { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan CachedLogonTokenLifetime" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberSignature Language="VB.NET" Value="Public Property CachedLogonTokenLifetime As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan CachedLogonTokenLifetime { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberSignature Language="F#" Value="member this.CachedLogonTokenLifetime : TimeSpan with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>トークンがキャッシュ内に保持される最大時間を取得または設定します。</summary>
        <value><see cref="T:System.TimeSpan" />トークンがキャッシュされる最大時間を表す。 既定値は 15 分です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 詳細については、「<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>」を参照してください。  
  
   
  
## Examples  
 このプロパティの値を取得する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CacheLogonTokens">
      <MemberSignature Language="C#" Value="public bool CacheLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CacheLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property CacheLogonTokens As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CacheLogonTokens { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.CacheLogonTokens : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ログオン トークンをキャッシュするかどうかを示す値を取得または設定します。</summary>
        <value>ログオン トークンをキャッシュする場合は、<see langword="true" />。それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定では、ユーザー名が Windows アカウントにマップされている場合、WCF セキュリティは Windows セキュリティサブシステムに対して、すべての受信ユーザー名/パスワードセキュリティトークンのログオントークンを作成するように要求します。 この動作は、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> プロパティを設定することにより変更できます。  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows> モードでは、サービスはユーザー名/パスワード認証に Win32 の `LogonUser` 関数を使用します。 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A> を `true` に設定すると、発行された Windows トークンがキャッシュされ、同じユーザー名/パスワードの組み合わせに再利用されます。 キャッシュは <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CachedLogonTokenLifetime%2A> の間有効です。 キャッシュの最大数は <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens%2A> に制限されます。  
  
   
  
## Examples  
 このプロパティの値を取得する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CustomUserNamePasswordValidator">
      <MemberSignature Language="C#" Value="public System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.IdentityModel.Selectors.UserNamePasswordValidator CustomUserNamePasswordValidator" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberSignature Language="VB.NET" Value="Public Property CustomUserNamePasswordValidator As UserNamePasswordValidator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::IdentityModel::Selectors::UserNamePasswordValidator ^ CustomUserNamePasswordValidator { System::IdentityModel::Selectors::UserNamePasswordValidator ^ get(); void set(System::IdentityModel::Selectors::UserNamePasswordValidator ^ value); };" />
      <MemberSignature Language="F#" Value="member this.CustomUserNamePasswordValidator : System.IdentityModel.Selectors.UserNamePasswordValidator with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IdentityModel.Selectors.UserNamePasswordValidator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム ユーザー名およびパスワード検証を取得または設定します。</summary>
        <value>カスタムのユーザー名/パスワード検証コントロール。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> を有効にするには、<xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> プロパティを <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> に設定する必要があります。 プロパティが設定<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>されていて、プロパティがでない場合、WCF は Windows 認証を使用<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>し、プロパティの値を無視します。 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> モードでは、サービスは <xref:System.IdentityModel.Selectors.UserNamePasswordValidator> メソッドを呼び出すことによりユーザー名/パスワード認証に <xref:System.IdentityModel.Selectors.UserNamePasswordValidator.Validate%2A> を使用します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeWindowsGroups">
      <MemberSignature Language="C#" Value="public bool IncludeWindowsGroups { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeWindowsGroups" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeWindowsGroups As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeWindowsGroups { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.IncludeWindowsGroups : bool with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.IncludeWindowsGroups" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>セキュリティ コンテキストに Windows グループが含まれるかどうかを示す値を取得または設定します。</summary>
        <value>Windows グループがセキュリティ コンテキストに含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。 既定値は、<see langword="false" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 Windows ユーザー名とパスワードを検証するほとんどのシナリオでは、ユーザーが属する Windows グループが承認決定に役立つ情報となります。 一方、Windows グループが不要な場合には、このプロパティを `false` に設定すると、グループ全体のクレーム設定を行わずに済み、パフォーマンスを向上させることができます。  
  
   
  
## Examples  
 このプロパティの値を取得する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxCachedLogonTokens">
      <MemberSignature Language="C#" Value="public int MaxCachedLogonTokens { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxCachedLogonTokens" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxCachedLogonTokens As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxCachedLogonTokens { int get(); void set(int value); };" />
      <MemberSignature Language="F#" Value="member this.MaxCachedLogonTokens : int with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MaxCachedLogonTokens" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュするログオン トークンの最大数を取得または設定します。</summary>
        <value>キャッシュするログオン トークンの最大数。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 既定値は128です。 詳細については、「<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CacheLogonTokens%2A>」を参照してください。  
  
   
  
## Examples  
 このプロパティの値を取得する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MembershipProvider">
      <MemberSignature Language="C#" Value="public System.Web.Security.MembershipProvider MembershipProvider { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Security.MembershipProvider MembershipProvider" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberSignature Language="VB.NET" Value="Public Property MembershipProvider As MembershipProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Security::MembershipProvider ^ MembershipProvider { System::Web::Security::MembershipProvider ^ get(); void set(System::Web::Security::MembershipProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.MembershipProvider : System.Web.Security.MembershipProvider with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Security.MembershipProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>メンバーシップ プロバイダーを取得または設定します。</summary>
        <value>このサービスの <see cref="T:System.Web.Security.MembershipProvider" />。 既定値は <see cref="T:System.Web.Security.SqlMembershipProvider" /> です。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> モードでは、サービスは <xref:System.Web.Security.MembershipProvider> メソッドを呼び出すことによりユーザー名/パスワード認証に <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> を使用します。  
  
> [!NOTE]
>  <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A> を有効にするには、<xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> プロパティを <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> に設定する必要があります。 プロパティが設定<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>されていて、プロパティがでない場合、WCF は Windows 認証を使用<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>し、プロパティの値を無視します。 <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A>  
  
 <xref:System.ServiceModel.Security.UserNamePasswordValidationMode> プロパティが `MembershipProvider` に設定されていて `MembershipProvider` プロパティに値が設定されていない場合、既定は <xref:System.Web.Security.SqlMembershipProvider> クラスとなります。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">資格情報が読み取り専用のときにこのプロパティを設定しようとしました。</exception>
      </Docs>
    </Member>
    <Member MemberName="UserNamePasswordValidationMode">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.ServiceModel.Security.UserNamePasswordValidationMode UserNamePasswordValidationMode" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberSignature Language="VB.NET" Value="Public Property UserNamePasswordValidationMode As UserNamePasswordValidationMode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Security::UserNamePasswordValidationMode UserNamePasswordValidationMode { System::ServiceModel::Security::UserNamePasswordValidationMode get(); void set(System::ServiceModel::Security::UserNamePasswordValidationMode value); };" />
      <MemberSignature Language="F#" Value="member this.UserNamePasswordValidationMode : System.ServiceModel.Security.UserNamePasswordValidationMode with get, set" Usage="System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>3.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Security.UserNamePasswordValidationMode</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ユーザー名とパスワードを検証する方法を取得または設定します。</summary>
        <value><see cref="T:System.ServiceModel.Security.UserNamePasswordValidationMode" /> 内の列挙値。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定できる値は次のとおりです。  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider>  
  
-   <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Windows>  
  
 このプロパティが <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom> に設定されている場合、サービスは <xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.CustomUserNamePasswordValidator%2A> によって返されるオブジェクトを使用して、受信メッセージ内のユーザー名とパスワードを検証します。  
  
> [!NOTE]
>  WCF サービスがトランスポートレベルのセキュリティ<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.UserNamePasswordValidationMode%2A>を使用してインターネットインフォメーションサービス (IIS) でホストされていて、プロパティがに<xref:System.ServiceModel.Security.UserNamePasswordValidationMode.Custom>設定されている場合、カスタム認証スキームは Windows 認証のサブセットを使用します。 このシナリオでは、WCF がカスタム認証システムを呼び出す前に、IIS が Windows 認証を実行します。  
  
 このプロパティの値が <xref:System.ServiceModel.Security.UserNamePasswordValidationMode.MembershipProvider> に設定されている場合は、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> プロパティを設定してメンバーシップ プロバイダーを指定します。これにより、<xref:System.ServiceModel.Security.UserNamePasswordServiceCredential.MembershipProvider%2A> プロパティで指定したメンバーシップ プロバイダーのインスタンスが、受信メッセージ内のユーザー名とパスワードの検証に使用されます。  
  
   
  
## Examples  
 このプロパティの値を取得する例を次に示します。  
  
 [!code-csharp[UserNamePasswordServiceCredential#1](~/samples/snippets/csharp/VS_Snippets_CFX/usernamepasswordservicecredential/cs/source.cs#1)]
 [!code-vb[UserNamePasswordServiceCredential#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/usernamepasswordservicecredential/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
