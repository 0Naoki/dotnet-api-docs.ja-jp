<Type Name="ClientBuildManager" FullName="System.Web.Compilation.ClientBuildManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="00e2e5b531cae13e7eea1892460a1e86369c8ee3" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37753917" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class ClientBuildManager : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ClientBuildManager extends System.MarshalByRefObject implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManager" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ClientBuildManager&#xA;Inherits MarshalByRefObject&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManager sealed : MarshalByRefObject, IDisposable" />
  <TypeSignature Language="F#" Value="type ClientBuildManager = class&#xA;    inherit MarshalByRefObject&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="f96a0-101">ASP.NET アプリケーションのコンパイル サービスを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="f96a0-101">Provides compilation services for ASP.NET applications.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-102"><xref:System.Web.Compilation.ClientBuildManager>クラスの ASP.NET Web アプリケーションをコンパイルして、生成されたアセンブリを取得するメソッドとプロパティを提供またはソース コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-102">The <xref:System.Web.Compilation.ClientBuildManager> class offers methods and properties for compiling ASP.NET Web applications, and retrieving the generated assemblies or generated source code.</span></span> <span data-ttu-id="f96a0-103">クラスのインスタンスでは、クライアントのアプリケーション ドメインで確立され、Microsoft インターネット インフォメーション サービス (IIS) の外部で ASP.NET ビルド システムへのアクセスを提供します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-103">Instances of the class are established in the client's application domain and provide access to the ASP.NET build system outside of Microsoft Internet Information Services (IIS).</span></span> <span data-ttu-id="f96a0-104">クラスは、Web アプリケーションをコンパイルするためのカスタマイズされたツールを開発に使用できます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-104">The class can be used to develop customized tools for compiling Web applications.</span></span>  
  
 <span data-ttu-id="f96a0-105">コマンド ライン ツール`aspnet_compiler`を使用して、<xref:System.Web.Compilation.ClientBuildManager>クラス。</span><span class="sxs-lookup"><span data-stu-id="f96a0-105">The command-line tool `aspnet_compiler` uses the <xref:System.Web.Compilation.ClientBuildManager> class.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.BuildManager" />
    <altmember cref="T:System.Web.Compilation.BuildProvider" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-106">
            <see cref="T:System.Web.Compilation.ClientBuildManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-106">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f96a0-107">アプリケーション ルートへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-107">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f96a0-108">アプリケーション ルートへの物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-108">The physical path to the application root.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-109">ターゲット ディレクトリやプリコンパイル フラグの指定なしに、<see cref="T:System.Web.Compilation.ClientBuildManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-109">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class without a specified target directory or precompilation flags.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f96a0-110">アプリケーション ルートへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-110">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f96a0-111">アプリケーション ルートへの物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-111">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f96a0-112">プリコンパイルに使用するターゲット ディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-112">The target directory for precompilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-113">ターゲット ディレクトリを指定して、<see cref="T:System.Web.Compilation.ClientBuildManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-113">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-114">プリコンパイル先ディレクトリを指定すると、プリコンパイルにこのフォームのコンス トラクターが通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-114">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (appVirtualDir As String, appPhysicalSourceDir As String, appPhysicalTargetDir As String, parameter As ClientBuildManagerParameter)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f96a0-115">アプリケーション ルートへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-115">The virtual path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f96a0-116">アプリケーション ルートへの物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-116">The physical path to the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f96a0-117">プリコンパイルに使用するターゲット ディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-117">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="f96a0-118">プリコンパイル動作を決定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-118">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-119">ターゲット ディレクトリとコンパイル パラメーターを指定して、<see cref="T:System.Web.Compilation.ClientBuildManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-119">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class with the specified target directory and compilation parameter.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-120">このフォームのコンス トラクターはプリコンパイル ターゲット ディレクトリとプリコンパイル フラグが指定にプリコンパイルに通常使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-120">This form of the constructor is typically used with precompilation, as it specifies a precompilation target directory and precompilation flags.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManager (string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, System.Web.Compilation.ClientBuildManagerParameter parameter, System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string appVirtualDir, string appPhysicalSourceDir, string appPhysicalTargetDir, class System.Web.Compilation.ClientBuildManagerParameter parameter, class System.ComponentModel.TypeDescriptionProvider typeDescriptionProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.#ctor(System.String,System.String,System.String,System.Web.Compilation.ClientBuildManagerParameter,System.ComponentModel.TypeDescriptionProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManager(System::String ^ appVirtualDir, System::String ^ appPhysicalSourceDir, System::String ^ appPhysicalTargetDir, System::Web::Compilation::ClientBuildManagerParameter ^ parameter, System::ComponentModel::TypeDescriptionProvider ^ typeDescriptionProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ClientBuildManager : string * string * string * System.Web.Compilation.ClientBuildManagerParameter * System.ComponentModel.TypeDescriptionProvider -&gt; System.Web.Compilation.ClientBuildManager" Usage="new System.Web.Compilation.ClientBuildManager (appVirtualDir, appPhysicalSourceDir, appPhysicalTargetDir, parameter, typeDescriptionProvider)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="appVirtualDir" Type="System.String" />
        <Parameter Name="appPhysicalSourceDir" Type="System.String" />
        <Parameter Name="appPhysicalTargetDir" Type="System.String" />
        <Parameter Name="parameter" Type="System.Web.Compilation.ClientBuildManagerParameter" />
        <Parameter Name="typeDescriptionProvider" Type="System.ComponentModel.TypeDescriptionProvider" />
      </Parameters>
      <Docs>
        <param name="appVirtualDir">
          <span data-ttu-id="f96a0-121">アプリケーション ルートの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-121">The virtual path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalSourceDir">
          <span data-ttu-id="f96a0-122">アプリケーションのルートの物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-122">The physical path of the application root.</span>
          </span>
        </param>
        <param name="appPhysicalTargetDir">
          <span data-ttu-id="f96a0-123">プリコンパイルに使用するターゲット ディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-123">The target directory for precompilation.</span>
          </span>
        </param>
        <param name="parameter">
          <span data-ttu-id="f96a0-124">プリコンパイル動作を決定する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-124">Values that determine the precompilation behavior.</span>
          </span>
        </param>
        <param name="typeDescriptionProvider">
          <span data-ttu-id="f96a0-125">使用する型説明のプロバイダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-125">The type-description provider to use.</span>
          </span>
          <span data-ttu-id="f96a0-126">このパラメーターは、主に、Visual Studio のマルチ ターゲット インフラストラクチャをサポートすることを目的としています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-126">This parameter is primarily used to support the multi-targeting infrastructure in Visual Studio.</span>
          </span>
          <span data-ttu-id="f96a0-127">.NET Framework の特定のバージョン用に、型に関するメタデータをフィルター処理して取得するために使用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-127">It is used to retrieve metadata about types that is filtered for specific versions of the .NET Framework.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-128">指定された仮想ディレクトリ、ソース ディレクトリ、ターゲット ディレクトリ、コンパイル パラメーター、および型説明のプロバイダーを使用して、<see cref="T:System.Web.Compilation.ClientBuildManager" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-128">Initializes a new instance of the <see cref="T:System.Web.Compilation.ClientBuildManager" /> class by using the specified virtual directory, source directory, target directory, compilation parameter, and type-description provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AppDomainShutdown">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainShutdown" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainShutdown" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainShutdown As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainShutdown;" />
      <MemberSignature Language="F#" Value="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainShutdown : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-129">アプリケーション ドメインがシャットダウンされると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-129">Occurs when an application domain is shut down.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainStarted">
      <MemberSignature Language="C#" Value="public event EventHandler AppDomainStarted;" />
      <MemberSignature Language="ILAsm" Value=".event class System.EventHandler AppDomainStarted" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainStarted" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainStarted As EventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event EventHandler ^ AppDomainStarted;" />
      <MemberSignature Language="F#" Value="member this.AppDomainStarted : EventHandler " Usage="member this.AppDomainStarted : System.EventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.EventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-130">アプリケーション ドメインが起動されると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-130">Occurs when an application domain is started.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="AppDomainUnloaded">
      <MemberSignature Language="C#" Value="public event System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded;" />
      <MemberSignature Language="ILAsm" Value=".event class System.Web.Compilation.BuildManagerHostUnloadEventHandler AppDomainUnloaded" />
      <MemberSignature Language="DocId" Value="E:System.Web.Compilation.ClientBuildManager.AppDomainUnloaded" />
      <MemberSignature Language="VB.NET" Value="Public Event AppDomainUnloaded As BuildManagerHostUnloadEventHandler " />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; event System::Web::Compilation::BuildManagerHostUnloadEventHandler ^ AppDomainUnloaded;" />
      <MemberSignature Language="F#" Value="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " Usage="member this.AppDomainUnloaded : System.Web.Compilation.BuildManagerHostUnloadEventHandler " />
      <MemberType>Event</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildManagerHostUnloadEventHandler</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-131">アプリケーション ドメインがアンロードされると発生します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-131">Occurs when an application domain is unloaded.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CodeGenDir">
      <MemberSignature Language="C#" Value="public string CodeGenDir { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string CodeGenDir" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CodeGenDir As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ CodeGenDir { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.CodeGenDir : string" Usage="System.Web.Compilation.ClientBuildManager.CodeGenDir" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-132">コード生成に使用するディレクトリの物理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-132">Gets the physical path to the directory used for code generation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f96a0-133">コード生成に使用するディレクトリ パスが格納された <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-133">A <see cref="T:System.String" /> containing the directory path used for code generation.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-134">コード生成用のディレクトリは通常、一時 ASP.NET files ディレクトリになります。</span><span class="sxs-lookup"><span data-stu-id="f96a0-134">The directory for code generation is typically in the temporary ASP.NET files directory.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileApplicationDependencies">
      <MemberSignature Language="C#" Value="public void CompileApplicationDependencies ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileApplicationDependencies() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileApplicationDependencies ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileApplicationDependencies();" />
      <MemberSignature Language="F#" Value="member this.CompileApplicationDependencies : unit -&gt; unit" Usage="clientBuildManager.CompileApplicationDependencies " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-135">App_Code ディレクトリに存在するファイル、Global.asax ファイル、リソース ファイル、および Web 参照などのアプリケーション依存のファイルをコンパイルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-135">Compiles application-dependent files, such as files in the App_Code directory, the Global.asax file, resource files, and Web references.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-136"><xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A>メソッドは、リソース、Web 参照、App_Code ディレクトリ内のファイル、.browser ディレクトリ内のファイル、App_Browsers、および、Global.asax ファイルがコンパイルされたことを確認します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-136">The <xref:System.Web.Compilation.ClientBuildManager.CompileApplicationDependencies%2A> method ensures that resources, Web references, files in the App_Code directory, .browser files in the App_Browsers directory, and the Global.asax file are compiled.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CompileFile">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-137">仮想パスで表されるファイルをコンパイルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-137">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string -&gt; unit" Usage="clientBuildManager.CompileFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-138">コンパイルするファイルへのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-138">The path to the file to be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-139">仮想パスで表されるファイルをコンパイルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-139">Compiles the file represented by the virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CompileFile">
      <MemberSignature Language="C#" Value="public void CompileFile (string virtualPath, System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CompileFile(string virtualPath, class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CompileFile(System.String,System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub CompileFile (virtualPath As String, callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CompileFile(System::String ^ virtualPath, System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.CompileFile : string * System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.CompileFile (virtualPath, callback)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-140">コンパイルするファイルへのパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-140">The path to the file to be compiled.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="f96a0-141">コンパイルのステータス情報を取得するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-141">The object to receive status information from compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-142">仮想パスで表されるファイルをコンパイルし、ビルドに関するステータス情報を取得するコールバック クラスを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-142">Compiles the file represented by the virtual path and provides a callback class to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-143">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-143">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="CreateObject">
      <MemberSignature Language="C#" Value="public System.Web.Hosting.IRegisteredObject CreateObject (Type type, bool failIfExists);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Hosting.IRegisteredObject CreateObject(class System.Type type, bool failIfExists) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.CreateObject(System.Type,System.Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Hosting::IRegisteredObject ^ CreateObject(Type ^ type, bool failIfExists);" />
      <MemberSignature Language="F#" Value="member this.CreateObject : Type * bool -&gt; System.Web.Hosting.IRegisteredObject" Usage="clientBuildManager.CreateObject (type, failIfExists)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Hosting.IRegisteredObject</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="failIfExists" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="f96a0-144">作成するオブジェクトの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-144">The type of object to be created.</span>
          </span>
        </param>
        <param name="failIfExists">
          <span data-ttu-id="f96a0-145">ASP.NET ランタイムのアプリケーション ドメインにオブジェクトが既に作成されていたときに例外をスローする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-145">
              <see langword="true" /> to throw an exception if the object has already been created in the application domain of the ASP.NET runtime; otherwise, <see langword="false" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-146">ASP.NET ランタイムのアプリケーション ドメインにオブジェクトを作成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-146">Creates an object in the application domain of the ASP.NET runtime.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-147">ASP.NET ランタイムのアプリケーション ドメインにオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-147">An object in the application domain of the ASP.NET runtime.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-148">
            <paramref name="type" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-148">
              <paramref name="type" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="f96a0-149">オブジェクトがアプリケーション ドメインに既に存在しており、<paramref name="failIfExists" /> が<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-149">The object already exists in the application domain and <paramref name="failIfExists" /> is <see langword="true" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public string GenerateCode (string virtualPath, string virtualFileString, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GenerateCode(string virtualPath, string virtualFileString, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCode(System.String,System.String,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCode (virtualPath As String, virtualFileString As String, ByRef linePragmasTable As IDictionary) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GenerateCode(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCode : string * string *  -&gt; string" Usage="clientBuildManager.GenerateCode (virtualPath, virtualFileString, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-150">ファイルへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-150">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="f96a0-151">ファイルの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-151">The contents of the file.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f96a0-152">このメソッドが返されるときに、行プラグマの辞書を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-152">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-153">ファイルの内容からコードを生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-153">Generates code from the contents of a file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-154">生成されたコードが格納された <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-154">A <see cref="T:System.String" /> containing the generated code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-155">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-155">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GenerateCodeCompileUnit">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-156">仮想パスで表されるファイルの codeDOM ツリー、コンパイラ タイプ、およびコンパイラ パラメーターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-156">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </MemberGroup>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-157">ファイルへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-157">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f96a0-158">このメソッドが返されるときに、コードの生成とコンパイルに使用する codeDOM プロバイダーの種類を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-158">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f96a0-159">このメソッドが返されるときに、ファイルのコンパイル方法を定義するパラメーターを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-159">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f96a0-160">このメソッドが返されるときに、行プラグマの辞書を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-160">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-161">仮想パスで表されるファイルの codeDOM ツリー、コンパイラ タイプ、およびコンパイラ パラメーターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-161">Returns the codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-162">指定されたファイルの <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-162">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-163"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>メソッド ファイルをコンパイルするために必要な情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-163">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="f96a0-164">加え、 <xref:System.CodeDom.CodeCompileUnit> 、戻り値としてオブジェクトの 3 つ返します`out`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-164">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="f96a0-165">`codeDomProviderType`パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-165">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="f96a0-166">`compilerParameters`パラメーターには、コンパイルの動作を決定するプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-166">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f96a0-167">`linePragmasTable`パラメーターには、行プラグマの辞書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-167">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCodeCompileUnit">
      <MemberSignature Language="C#" Value="public System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit (string virtualPath, string virtualFileString, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.CodeDom.CodeCompileUnit GenerateCodeCompileUnit(string virtualPath, string virtualFileString, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit(System.String,System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Public Function GenerateCodeCompileUnit (virtualPath As String, virtualFileString As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::CodeDom::CodeCompileUnit ^ GenerateCodeCompileUnit(System::String ^ virtualPath, System::String ^ virtualFileString, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberSignature Language="F#" Value="member this.GenerateCodeCompileUnit : string * string *  *  *  -&gt; System.CodeDom.CodeCompileUnit" Usage="clientBuildManager.GenerateCodeCompileUnit (virtualPath, virtualFileString, codeDomProviderType, compilerParameters, linePragmasTable)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="virtualFileString" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-168">ファイルへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-168">The virtual path to the file.</span>
          </span>
        </param>
        <param name="virtualFileString">
          <span data-ttu-id="f96a0-169">
            <c>virtualPath</c> パラメーターで表されるファイルの内容。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-169">The contents of the file represented by the <c>virtualPath</c> parameter.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f96a0-170">このメソッドが返されるときに、コードの生成とコンパイルに使用する codeDOM プロバイダーの種類を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-170">When this method returns, contains the codeDOM provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f96a0-171">このメソッドが返されるときに、<c>virtualPath</c> パラメーターで表されるファイルのコンパイル方法を定義するプロパティを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-171">When this method returns, contains the properties that define how the file represented by the <c>virtualPath</c> parameter will be compiled.</span>
          </span>
        </param>
        <param name="linePragmasTable">
          <span data-ttu-id="f96a0-172">このメソッドが返されるときに、行プラグマの辞書を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-172">When this method returns, contains a dictionary of line pragmas.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-173">仮想パスで表されるファイルの内容、codeDOM ツリー、コンパイラ タイプ、およびコンパイラ パラメーターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-173">Returns the contents, codeDOM tree, compiler type, and compiler parameters for a file represented by a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-174">指定されたファイルの <see cref="T:System.CodeDom.CodeCompileUnit" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-174">A <see cref="T:System.CodeDom.CodeCompileUnit" /> for the given file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-175"><xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A>メソッド ファイルをコンパイルするために必要な情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-175">The <xref:System.Web.Compilation.ClientBuildManager.GenerateCodeCompileUnit%2A> method retrieves information needed to compile a file.</span></span> <span data-ttu-id="f96a0-176">加え、 <xref:System.CodeDom.CodeCompileUnit> 、戻り値としてオブジェクトの 3 つ返します`out`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-176">In addition to a <xref:System.CodeDom.CodeCompileUnit> object as a return value, it returns three `out` parameters.</span></span> <span data-ttu-id="f96a0-177">`codeDomProviderType`パラメーターを生成すると、ファイルをコンパイルするプロバイダーの種類を返します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-177">The `codeDomProviderType` parameter returns the provider type for generating and compiling the file.</span></span> <span data-ttu-id="f96a0-178">`compilerParameters`パラメーターには、コンパイルの動作を決定するプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-178">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f96a0-179">`linePragmasTable`パラメーターには、行プラグマの辞書が含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-179">The `linePragmasTable` parameter contains a dictionary of line pragmas.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-180">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-180">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="T:System.Web.Compilation.LinePragmaCodeInfo" />
      </Docs>
    </Member>
    <Member MemberName="GetAppDomainShutdownDirectories">
      <MemberSignature Language="C#" Value="public string[] GetAppDomainShutdownDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetAppDomainShutdownDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetAppDomainShutdownDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetAppDomainShutdownDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetAppDomainShutdownDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetAppDomainShutdownDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetAppDomainShutdownDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-181">変更されるとアプリケーション ドメインがシャットダウンされるファイルの辞書を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-181">Gets the directories with files that, when changed, cause the application domain to shut down.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-182">最上位ディレクトリ名が格納された <see cref="T:System.String" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-182">A <see cref="T:System.String" /> array containing the top-level directory names.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-183">最上位レベルの特定のディレクトリ内のファイルへの変更では、アプリケーション ドメインがシャット ダウンが発生します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-183">Changes to files in specific top-level directories cause the application domain to shut down.</span></span> <span data-ttu-id="f96a0-184">すべての変更を検出するためには、Bin、App_Code、Global_Resources、Web 参照、および App_Browsers ディレクトリ内のファイルが監視されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-184">Files within the Bin, App_Code, Global_Resources, Web References, and App_Browsers directories are monitored to detect any changes.</span></span> <span data-ttu-id="f96a0-185">変更が検出されると、アプリケーション ドメインがシャット ダウンします。</span><span class="sxs-lookup"><span data-stu-id="f96a0-185">When changes are detected, the application domain is shut down.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetBrowserDefinitions">
      <MemberSignature Language="C#" Value="public System.Collections.IDictionary GetBrowserDefinitions ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Collections.IDictionary GetBrowserDefinitions() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetBrowserDefinitions" />
      <MemberSignature Language="VB.NET" Value="Public Function GetBrowserDefinitions () As IDictionary" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Collections::IDictionary ^ GetBrowserDefinitions();" />
      <MemberSignature Language="F#" Value="member this.GetBrowserDefinitions : unit -&gt; System.Collections.IDictionary" Usage="clientBuildManager.GetBrowserDefinitions " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IDictionary</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-186">ブラウザー要素のコレクションを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-186">Gets a collection of browser elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-187">ブラウザー要素が格納された <see cref="T:System.Collections.IDictionary" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-187">An <see cref="T:System.Collections.IDictionary" /> containing browser elements.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-188"><xref:System.Collections.IDictionary>オブジェクトには、キーのブラウザー名が含まれていますと<xref:System.Web.UI.Triplet>値のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="f96a0-188">The <xref:System.Collections.IDictionary> object contains browser names for the keys and <xref:System.Web.UI.Triplet> objects for the values.</span></span> <span data-ttu-id="f96a0-189"><xref:System.Web.UI.Triplet>の各オブジェクトは、ブラウザーの親要素、説明、およびブラウザー要素ツリーの深さの名前を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-189">The <xref:System.Web.UI.Triplet> objects each contain the name of the parent browser element, a description, and the depth of the browser element in the tree.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Configuration.BrowserCapabilitiesFactory" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeDirectoryInformation">
      <MemberSignature Language="C#" Value="public void GetCodeDirectoryInformation (string virtualCodeDir, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters, out string generatedFilesDir);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCodeDirectoryInformation(string virtualCodeDir, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters, [out] string&amp; generatedFilesDir) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@,System.String@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCodeDirectoryInformation (virtualCodeDir As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters, ByRef generatedFilesDir As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCodeDirectoryInformation(System::String ^ virtualCodeDir, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters, [Runtime::InteropServices::Out] System::String ^ % generatedFilesDir);" />
      <MemberSignature Language="F#" Value="member this.GetCodeDirectoryInformation : string *  *  *  -&gt; unit" Usage="clientBuildManager.GetCodeDirectoryInformation (virtualCodeDir, codeDomProviderType, compilerParameters, generatedFilesDir)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualCodeDir" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
        <Parameter Name="generatedFilesDir" Type="System.String&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualCodeDir">
          <span data-ttu-id="f96a0-190">情報を取得する対象のディレクトリ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-190">The directory about which to retrieve information.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f96a0-191">このメソッドが返されるときに、コードの生成とコンパイルに使用するプロバイダーの種類を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-191">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f96a0-192">このメソッドが返されるときに、ファイルのコンパイル方法を定義するパラメーターを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-192">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <param name="generatedFilesDir">
          <span data-ttu-id="f96a0-193">このメソッドが返されるときに、非コード ファイルから生成されたファイルのディレクトリを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-193">When this method returns, contains the directory for files generated from non-code files.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-194">コンパイラ タイプ、コンパイラ パラメーター、および .wsdl ファイルなどの非コード ファイルから生成されたコード ファイルを格納するディレクトリに関する情報を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-194">Gets information about the compiler type, compiler parameters, and the directory in which to store code files generated from non-code files such as .wsdl files.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-195"><xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A>メソッド コード ディレクトリの構築に必要な情報を取得します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-195">The <xref:System.Web.Compilation.ClientBuildManager.GetCodeDirectoryInformation%2A> method retrieves information needed to build a code directory.</span></span> <span data-ttu-id="f96a0-196">3 までは、この情報が返されます`out`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-196">It returns this information through three `out` parameters.</span></span> <span data-ttu-id="f96a0-197">`codeDomProviderType`パラメーターが生成およびコンパイル コードのディレクトリ内のファイルのプロバイダーの種類を返します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-197">The `codeDomProviderType` parameter returns the provider type for generating and compiling the files in the code directory.</span></span> <span data-ttu-id="f96a0-198">`compilerParameters`パラメーターには、コンパイルの動作を決定するプロパティが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-198">The `compilerParameters` parameter contains properties that determine compilation behavior.</span></span> <span data-ttu-id="f96a0-199">`generatedFilesDir`パラメーターは、.wsdl ファイルなど、コードのディレクトリ内の非コード ファイルから生成されたすべてのコード ファイルを含むディレクトリのパスを格納します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-199">The `generatedFilesDir` parameter stores the directory path containing all the code files generated from non-code files in the code directory, such as .wsdl files.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-200">
            <paramref name="virtualCodeDir" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-200">
              <paramref name="virtualCodeDir" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompiledType">
      <MemberSignature Language="C#" Value="public Type GetCompiledType (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Type GetCompiledType(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompiledType(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetCompiledType (virtualPath As String) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Type ^ GetCompiledType(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetCompiledType : string -&gt; Type" Usage="clientBuildManager.GetCompiledType virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-201">コンパイルするファイルの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-201">The virtual path of the file to compile.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-202">仮想パスで表されるファイルをコンパイルし、コンパイルされた型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-202">Compiles the file represented by the virtual path and returns its compiled type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-203">コンパイルされたファイルの <see cref="T:System.Type" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-203">The <see cref="T:System.Type" /> of the compiled file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-204">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-204">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCompilerParameters">
      <MemberSignature Language="C#" Value="public void GetCompilerParameters (string virtualPath, out Type codeDomProviderType, out System.CodeDom.Compiler.CompilerParameters compilerParameters);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void GetCompilerParameters(string virtualPath, [out] class System.Type&amp; codeDomProviderType, [out] class System.CodeDom.Compiler.CompilerParameters&amp; compilerParameters) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetCompilerParameters(System.String,System.Type@,System.CodeDom.Compiler.CompilerParameters@)" />
      <MemberSignature Language="VB.NET" Value="Public Sub GetCompilerParameters (virtualPath As String, ByRef codeDomProviderType As Type, ByRef compilerParameters As CompilerParameters)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void GetCompilerParameters(System::String ^ virtualPath, [Runtime::InteropServices::Out] Type ^ % codeDomProviderType, [Runtime::InteropServices::Out] System::CodeDom::Compiler::CompilerParameters ^ % compilerParameters);" />
      <MemberSignature Language="F#" Value="member this.GetCompilerParameters : string *  *  -&gt; unit" Usage="clientBuildManager.GetCompilerParameters (virtualPath, codeDomProviderType, compilerParameters)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="codeDomProviderType" Type="System.Type&amp;" RefType="out" />
        <Parameter Name="compilerParameters" Type="System.CodeDom.Compiler.CompilerParameters&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-205">ファイルへの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-205">The virtual path to the file.</span>
          </span>
        </param>
        <param name="codeDomProviderType">
          <span data-ttu-id="f96a0-206">このメソッドが返されるときに、コードの生成とコンパイルに使用するプロバイダーの種類を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-206">When this method returns, contains the provider type used for code generation and compilation.</span>
          </span>
        </param>
        <param name="compilerParameters">
          <span data-ttu-id="f96a0-207">このメソッドが返されるときに、ファイルのコンパイル方法を定義するパラメーターを格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-207">When this method returns, contains the properties that define how the file will be compiled.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-208">仮想パスで表されるファイルのビルドに使用されるコンパイラのタイプとパラメーターを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-208">Returns the compiler type and parameters that are used to build a file represented by a virtual path.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-209">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-209">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Compilation.CompilerType.CompilerParameters" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedFileVirtualPath">
      <MemberSignature Language="C#" Value="public string GetGeneratedFileVirtualPath (string filePath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedFileVirtualPath(string filePath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedFileVirtualPath(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedFileVirtualPath (filePath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedFileVirtualPath(System::String ^ filePath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedFileVirtualPath : string -&gt; string" Usage="clientBuildManager.GetGeneratedFileVirtualPath filePath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="filePath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="filePath">
          <span data-ttu-id="f96a0-210">生成されたファイルへの完全物理パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-210">The full physical path to a generated file.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-211">生成されたファイルの仮想パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-211">Returns the virtual path of a generated file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-212">
            <paramref name="filePath" /> の仮想パスが格納された <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-212">A <see cref="T:System.String" /> containing the virtual path for <paramref name="filePath" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-213">
            <paramref name="filePath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-213">
              <paramref name="filePath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedSourceFile">
      <MemberSignature Language="C#" Value="public string GetGeneratedSourceFile (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetGeneratedSourceFile(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetGeneratedSourceFile(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetGeneratedSourceFile (virtualPath As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetGeneratedSourceFile(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetGeneratedSourceFile : string -&gt; string" Usage="clientBuildManager.GetGeneratedSourceFile virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-214">取得するファイルの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-214">The virtual path of the file to retrieve.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-215">仮想パスの生成ファイルへの物理パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-215">Gets the physical path to the generated file for a virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-216">生成ファイルへの物理パスが格納された <see cref="T:System.String" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-216">A <see cref="T:System.String" /> that contains the physical path to the generated file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-217">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-217">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetTopLevelAssemblyReferences">
      <MemberSignature Language="C#" Value="public string[] GetTopLevelAssemblyReferences (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetTopLevelAssemblyReferences(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetTopLevelAssemblyReferences(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTopLevelAssemblyReferences (virtualPath As String) As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetTopLevelAssemblyReferences(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="member this.GetTopLevelAssemblyReferences : string -&gt; string[]" Usage="clientBuildManager.GetTopLevelAssemblyReferences virtualPath" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="f96a0-218">構成の名前とパス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-218">The configuration name and path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-219">Bin ディレクトリおよび Web 構成ファイルの <see langword="&lt;assembly&gt;" /> セクションに定義されたアセンブリの配列を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-219">Returns an array of the assemblies defined in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-220">Bin ディレクトリおよび Web 構成ファイルの <see langword="&lt;assembly&gt;" /> セクションに含まれているコード ベースへのパスが格納された <see cref="T:System.String" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-220">A <see cref="T:System.String" /> array containing paths to code bases in the Bin directory and the <see langword="&lt;assembly&gt;" /> section of the Web configuration file.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-221">
            <paramref name="virtualPath" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-221">
              <paramref name="virtualPath" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetVirtualCodeDirectories">
      <MemberSignature Language="C#" Value="public string[] GetVirtualCodeDirectories ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string[] GetVirtualCodeDirectories() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.GetVirtualCodeDirectories" />
      <MemberSignature Language="VB.NET" Value="Public Function GetVirtualCodeDirectories () As String()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; cli::array &lt;System::String ^&gt; ^ GetVirtualCodeDirectories();" />
      <MemberSignature Language="F#" Value="member this.GetVirtualCodeDirectories : unit -&gt; string[]" Usage="clientBuildManager.GetVirtualCodeDirectories " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String[]</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-222">ASP.NET アプリケーションの App_Code ディレクトリとそのサブディレクトリへの仮想パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-222">Returns the virtual paths to the App_Code directory and its subdirectories in an ASP.NET application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-223">アプリケーションのコード ディレクトリへのすべての仮想パスが格納された <see cref="T:System.String" /> 配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-223">A <see cref="T:System.String" /> array containing all the virtual paths to code directories in an application.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="InitializeLifetimeService">
      <MemberSignature Language="C#" Value="public override object InitializeLifetimeService ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance object InitializeLifetimeService() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.InitializeLifetimeService" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function InitializeLifetimeService () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::Object ^ InitializeLifetimeService();" />
      <MemberSignature Language="F#" Value="override this.InitializeLifetimeService : unit -&gt; obj" Usage="clientBuildManager.InitializeLifetimeService " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-224">リースが作成されないようにすることで、アプリケーション ドメインに無期限の有効期間を指定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-224">Gives the application domain an infinite lifetime by preventing a lease from being created.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-225">常に <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-225">Always <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-226">このメソッドは、<xref:System.MarshalByRefObject.InitializeLifetimeService%2A>基本クラス メソッド。</span><span class="sxs-lookup"><span data-stu-id="f96a0-226">This method overrides the <xref:System.MarshalByRefObject.InitializeLifetimeService%2A> method in its base class.</span></span> <span data-ttu-id="f96a0-227">常に返す`null`し、それによって、アプリケーション ドメインの有効期間を制限するリースが作成されないを防止します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-227">It always returns `null` and thereby prevents a lease from being created that would limit the application domain's lifetime.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsCodeAssembly">
      <MemberSignature Language="C#" Value="public bool IsCodeAssembly (string assemblyName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool IsCodeAssembly(string assemblyName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.IsCodeAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function IsCodeAssembly (assemblyName As String) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool IsCodeAssembly(System::String ^ assemblyName);" />
      <MemberSignature Language="F#" Value="member this.IsCodeAssembly : string -&gt; bool" Usage="clientBuildManager.IsCodeAssembly assemblyName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="assemblyName">
          <span data-ttu-id="f96a0-228">コード アセンブリかどうかを識別するアセンブリの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-228">The name of the assembly to be identified as a code assembly.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-229">アセンブリがコード アセンブリかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-229">Indicates whether an assembly is a code assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-230">
            <paramref name="assemblyName" /> パラメーターが生成されたコード アセンブリのいずれかと一致する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-230">
              <see langword="true" /> if the <paramref name="assemblyName" /> parameter matches one of the generated code assemblies; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="f96a0-231">
            <paramref name="assemblyName" /> が null です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-231">
              <paramref name="assemblyName" /> is null.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="IsHostCreated">
      <MemberSignature Language="C#" Value="public bool IsHostCreated { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsHostCreated" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsHostCreated As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsHostCreated { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsHostCreated : bool" Usage="System.Web.Compilation.ClientBuildManager.IsHostCreated" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-232">ASP.NET Web アプリケーションのコンパイルに使用するアプリケーション ドメインが作成済みかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-232">Gets a value that indicates whether an application domain for compiling ASP.NET Web applications has been created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="f96a0-233">ASP.NET Web アプリケーションのコンパイルに使用するアプリケーション ドメインが作成済みの場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-233">
              <see langword="true" /> if the application domain for compiling ASP.NET Web applications has been created; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <MemberGroup MemberName="PrecompileApplication">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-234">ASP.NET アプリケーションをプリコンパイルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-234">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-235">ASP.NET では、次の 3 つの形式のプリコンパイルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f96a0-235">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f96a0-236">1 つの形式は、ASP.NET アプリケーションのインプレースでプリコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-236">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f96a0-237">このフォームで、サイトが運用環境にデプロイおよびをプリコンパイルしが、ユーザーによって初めてアクセスしたときに、サイトを動的にコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f96a0-237">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f96a0-238">サイトの最初のユーザーでは、通常は動的にコンパイルされるサイトで発生した遅延は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-238">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="f96a0-239">プリコンパイルの他の 2 つの形式は、配置に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-239">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f96a0-240">サイトのレイアウトを生成するいずれかの形式を実稼働コンピューターに展開できます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-240">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f96a0-241">これらの形式のいずれかのコンパイル済みのサイトである程度の更新を実行できるように、マークアップ ページは含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-241">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f96a0-242">他の形式は、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-242">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f96a0-243">プリコンパイルのこれらの形式のいずれかのターゲット環境には、ソース コードはデプロイされません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-243">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f96a0-244">プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-244">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f96a0-245"><xref:System.Web.Compilation.ClientBuildManagerParameter>のオブジェクト、<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>プリコンパイルを実行するは、3 つのフォームのコンス トラクターを定義します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-245">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f96a0-246">開発者が使用して Web サイトをプリコンパイル、`aspnet_compiler`コマンド ライン ツールまたは呼び出すことによって、<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f96a0-246">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </MemberGroup>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication();" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : unit -&gt; unit" Usage="clientBuildManager.PrecompileApplication " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-247">ASP.NET アプリケーションをプリコンパイルします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-247">Precompiles an ASP.NET application.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-248">ASP.NET では、次の 3 つの形式のプリコンパイルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f96a0-248">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f96a0-249">1 つの形式は、ASP.NET アプリケーションのインプレースでプリコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-249">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f96a0-250">このフォームで、サイトが運用環境にデプロイおよびをプリコンパイルしが、ユーザーによって初めてアクセスしたときに、サイトを動的にコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f96a0-250">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f96a0-251">サイトの最初のユーザーでは、通常は動的にコンパイルされるサイトで発生した遅延は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-251">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span>  
  
 <span data-ttu-id="f96a0-252">プリコンパイルの他の 2 つの形式は、配置に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-252">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f96a0-253">サイトのレイアウトを生成するいずれかの形式を実稼働コンピューターに展開できます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-253">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f96a0-254">これらの形式のいずれかのコンパイル済みのサイトである程度の更新を実行できるように、マークアップ ページは含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-254">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f96a0-255">他の形式は、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-255">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f96a0-256">プリコンパイルのこれらの形式のいずれかのターゲット環境には、ソース コードはデプロイされません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-256">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f96a0-257">プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-257">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f96a0-258"><xref:System.Web.Compilation.ClientBuildManagerParameter>のオブジェクト、<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>プリコンパイルを実行するは、3 つのフォームのコンス トラクターを定義します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-258">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f96a0-259">開発者が使用して Web サイトをプリコンパイル、`aspnet_compiler`コマンド ライン ツールまたは呼び出すことによって、<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f96a0-259">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback -&gt; unit" Usage="clientBuildManager.PrecompileApplication callback" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="f96a0-260">コンパイルの結果をレポートするときに呼び出すメソッドを格納した <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-260">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-261">ASP.NET アプリケーションをプリコンパイルし、ビルドに関するステータス情報を取得するコールバック メソッドを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-261">Precompiles an ASP.NET application and provides a callback method to receive status information about the build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-262">ASP.NET では、次の 3 つの形式のプリコンパイルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f96a0-262">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f96a0-263">1 つの形式は、ASP.NET アプリケーションのインプレースでプリコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-263">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f96a0-264">このフォームで、サイトが運用環境にデプロイおよびをプリコンパイルしが、ユーザーによって初めてアクセスしたときに、サイトを動的にコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f96a0-264">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f96a0-265">サイトの最初のユーザーでは、通常は動的にコンパイルされるサイトで発生した遅延は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-265">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="f96a0-266">`callback`パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-266">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="f96a0-267">プリコンパイルの他の 2 つの形式は、配置に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-267">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f96a0-268">サイトのレイアウトを生成するいずれかの形式を実稼働コンピューターに展開できます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-268">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f96a0-269">これらの形式のいずれかのコンパイル済みのサイトである程度の更新を実行できるように、マークアップ ページは含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-269">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f96a0-270">他の形式は、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-270">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f96a0-271">プリコンパイルのこれらの形式のいずれかのターゲット環境には、ソース コードはデプロイされません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-271">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f96a0-272">プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-272">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f96a0-273"><xref:System.Web.Compilation.ClientBuildManagerParameter>のオブジェクト、<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>プリコンパイルを実行するは、3 つのフォームのコンス トラクターを定義します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-273">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f96a0-274">開発者が使用して Web サイトをプリコンパイル、`aspnet_compiler`コマンド ライン ツールまたは呼び出すことによって、<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f96a0-274">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="PrecompileApplication">
      <MemberSignature Language="C#" Value="public void PrecompileApplication (System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void PrecompileApplication(class System.Web.Compilation.ClientBuildManagerCallback callback, bool forceCleanBuild) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.PrecompileApplication(System.Web.Compilation.ClientBuildManagerCallback,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PrecompileApplication (callback As ClientBuildManagerCallback, forceCleanBuild As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PrecompileApplication(System::Web::Compilation::ClientBuildManagerCallback ^ callback, bool forceCleanBuild);" />
      <MemberSignature Language="F#" Value="member this.PrecompileApplication : System.Web.Compilation.ClientBuildManagerCallback * bool -&gt; unit" Usage="clientBuildManager.PrecompileApplication (callback, forceCleanBuild)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="callback" Type="System.Web.Compilation.ClientBuildManagerCallback" />
        <Parameter Name="forceCleanBuild" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="callback">
          <span data-ttu-id="f96a0-275">コンパイルの結果をレポートするときに呼び出すメソッドを格納した <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-275">A <see cref="T:System.Web.Compilation.ClientBuildManagerCallback" /> containing the method to call when reporting the result of compilation.</span>
          </span>
        </param>
        <param name="forceCleanBuild">
          <span data-ttu-id="f96a0-276">最初にすべてのオブジェクトと中間ファイルを削除するクリーン ビルドを実行する場合は <see langword="true" />。変更されたファイルだけをリビルドする場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-276">
              <see langword="true" /> to perform a clean build, which will first delete all object and intermediate files; <see langword="false" /> to rebuild only those files that have changed.</span>
          </span>
          <span data-ttu-id="f96a0-277">ビルド環境によって依存関係が検出されない可能性がある場合は、true に設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-277">Set to true if there is a chance that a dependency might not be picked up by the build environment.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="f96a0-278">ASP.NET アプリケーションをプリコンパイルし、ビルドに関するステータス情報を受け取るコールバック メソッドを提供し、クリーン ビルドを作成するかどうかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-278">Precompiles an ASP.NET application, provides a callback method to receive status information about the build, and indicates whether to create a clean build.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="f96a0-279">ASP.NET では、次の 3 つの形式のプリコンパイルをサポートします。</span><span class="sxs-lookup"><span data-stu-id="f96a0-279">ASP.NET supports three forms of precompilation.</span></span> <span data-ttu-id="f96a0-280">1 つの形式は、ASP.NET アプリケーションのインプレースでプリコンパイルできます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-280">One form allows for the in-place precompilation of an ASP.NET application.</span></span> <span data-ttu-id="f96a0-281">このフォームで、サイトが運用環境にデプロイおよびをプリコンパイルしが、ユーザーによって初めてアクセスしたときに、サイトを動的にコンパイルする必要があります。</span><span class="sxs-lookup"><span data-stu-id="f96a0-281">In this form, the site is deployed to production and then precompiled, which eliminates the need to dynamically compile the site when it is first visited by a user.</span></span> <span data-ttu-id="f96a0-282">サイトの最初のユーザーでは、通常は動的にコンパイルされるサイトで発生した遅延は発生しません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-282">The first user of the site will not experience the delay normally encountered on a site that is dynamically compiled.</span></span> <span data-ttu-id="f96a0-283">`callback`パラメーターには、コンパイルの結果を報告するときに呼び出すメソッドが含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-283">The `callback` parameter contains the method to call when reporting the result of compilation.</span></span>  
  
 <span data-ttu-id="f96a0-284">プリコンパイルの他の 2 つの形式は、配置に使用されます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-284">The two other forms of precompilation are used for deployment.</span></span> <span data-ttu-id="f96a0-285">サイトのレイアウトを生成するいずれかの形式を実稼働コンピューターに展開できます。</span><span class="sxs-lookup"><span data-stu-id="f96a0-285">In either form, a layout of the site is generated that can be deployed to a production computer.</span></span> <span data-ttu-id="f96a0-286">これらの形式のいずれかのコンパイル済みのサイトである程度の更新を実行できるように、マークアップ ページは含まれています。</span><span class="sxs-lookup"><span data-stu-id="f96a0-286">One of these forms includes the markup pages so some amount of updating can be performed on the compiled site.</span></span> <span data-ttu-id="f96a0-287">他の形式は、マークアップ ページが含まれていないと、元のサイトを再コンパイルしなくても更新することはできません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-287">The other form does not contain the markup pages and therefore cannot be updated without recompiling the original site.</span></span> <span data-ttu-id="f96a0-288">プリコンパイルのこれらの形式のいずれかのターゲット環境には、ソース コードはデプロイされません。</span><span class="sxs-lookup"><span data-stu-id="f96a0-288">No source code is deployed to the target environment in either of these forms of precompilation.</span></span>  
  
 <span data-ttu-id="f96a0-289">プリコンパイルするアプリケーションが定義されている、<xref:System.Web.Compilation.ClientBuildManager>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="f96a0-289">The application to precompile is defined through the <xref:System.Web.Compilation.ClientBuildManager> constructor.</span></span> <span data-ttu-id="f96a0-290"><xref:System.Web.Compilation.ClientBuildManagerParameter>のオブジェクト、<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>プリコンパイルを実行するは、3 つのフォームのコンス トラクターを定義します。</span><span class="sxs-lookup"><span data-stu-id="f96a0-290">The <xref:System.Web.Compilation.ClientBuildManagerParameter> object of the <xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A> constructor defines which of the three forms of precompilation to perform.</span></span>  
  
 <span data-ttu-id="f96a0-291">開発者が使用して Web サイトをプリコンパイル、`aspnet_compiler`コマンド ライン ツールまたは呼び出すことによって、<xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="f96a0-291">A developer can precompile a Web site with the `aspnet_compiler` command-line tool or by calling the <xref:System.Web.Compilation.ClientBuildManager.PrecompileApplication%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
        <altmember cref="Overload:System.Web.Compilation.ClientBuildManager.#ctor" />
        <altmember cref="T:System.Web.Compilation.ClientBuildManagerCallback" />
      </Docs>
    </Member>
    <Member MemberName="System.IDisposable.Dispose">
      <MemberSignature Language="C#" Value="void IDisposable.Dispose ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.IDisposable.Dispose() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.System#IDisposable#Dispose" />
      <MemberSignature Language="VB.NET" Value="Sub Dispose () Implements IDisposable.Dispose" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.IDisposable.Dispose() = IDisposable::Dispose;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IDisposable.Dispose</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-292">現在の ASP.NET アプリケーションを終了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-292">Terminates the current ASP.NET application.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="Unload">
      <MemberSignature Language="C#" Value="public bool Unload ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool Unload() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManager.Unload" />
      <MemberSignature Language="VB.NET" Value="Public Function Unload () As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; bool Unload();" />
      <MemberSignature Language="F#" Value="member this.Unload : unit -&gt; bool" Usage="clientBuildManager.Unload " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="f96a0-293">ASP.NET Web アプリケーションのコンパイルに使用するアプリケーション ドメインをアンロードします。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-293">Unloads the application domain for compiling ASP.NET Web applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="f96a0-294">アプリケーション ドメインがアンロードされた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="f96a0-294">
              <see langword="true" /> if the application domain is unloaded; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.Web.Compilation.BuildManager" />
        <altmember cref="T:System.Web.Compilation.BuildProvider" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
  </Members>
</Type>