<Type Name="IAssemblyPostProcessor" FullName="System.Web.Compilation.IAssemblyPostProcessor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="d0252eeffff662891a4fb72718c963444a8ee8c6" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/24/2018" /><Meta Name="ms.locfileid" Value="37607971" /></Metadata><TypeSignature Language="C#" Value="public interface IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IAssemblyPostProcessor implements class System.IDisposable" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IAssemblyPostProcessor" />
  <TypeSignature Language="VB.NET" Value="Public Interface IAssemblyPostProcessor&#xA;Implements IDisposable" />
  <TypeSignature Language="C++ CLI" Value="public interface class IAssemblyPostProcessor : IDisposable" />
  <TypeSignature Language="F#" Value="type IAssemblyPostProcessor = interface&#xA;    interface IDisposable" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IDisposable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>ビルド後のアセンブリを処理するためにクラスが実装するメソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスを実装するクラスがコンパイルされた後のアセンブリにアクセスできます。 <xref:System.Web.Compilation.AssemblyBuilder>クラスがアセンブリをコンパイルし、かを確認するかどうか、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイスは、Web 構成ファイルに登録されています。 そうである場合、<xref:System.Web.Compilation.AssemblyBuilder>呼び出しをインスタンス化、<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>のメソッド、<xref:System.Web.Compilation.IAssemblyPostProcessor>コンパイルした後、アセンブリを読み込む前に操作を実行するインターフェイス。 たとえば、プロファイラー ツールは、アセンブリのプローブを確立するためには、このインターフェイスを実装する可能性があります。  
  
 ときに、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイスが登録されて、デバッグ モードで ASP.NET アプリケーションとそのアセンブリをコンパイルするが常にします。  
  
   
  
## Examples  
 次のコード例の実装を作成する方法を示します、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイス、および Web アプリケーションの Web.config ファイルに登録します。  
  
 コード例の最初の部分は、という名前のクラスを作成します。`Samples.Process.postProcessTest`を実装する、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイス。 このクラスは、ファイルの書き込みの単純なアクションを実行時に、<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>メソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 コマンドを使用して、.dll ファイルにクラスをコンパイル`csc /target:library postProcessTest.cs`します。 ASP.NET アプリケーションの Bin フォルダーに生成された .dll ファイルを追加し、次のコードに示すように、Web.config ファイルに .dll を登録します。  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 Web サイトにアクセスするユーザーと Web アプリケーションが動的にコンパイルされたファイルと、MyTest.txt は C:\compile に書き込まれます。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="PostProcessAssembly">
      <MemberSignature Language="C#" Value="public void PostProcessAssembly (string path);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void PostProcessAssembly(string path) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub PostProcessAssembly (path As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void PostProcessAssembly(System::String ^ path);" />
      <MemberSignature Language="F#" Value="abstract member PostProcessAssembly : string -&gt; unit" Usage="iAssemblyPostProcessor.PostProcessAssembly path" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="path" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="path">アセンブリへのパス。</param>
        <summary>アセンブリが読み込まれる前に呼び出されます。これを実装したクラスは、アセンブリを変更できます。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.AssemblyBuilder>クラスは、アセンブリがコンパイルされた後にこのメソッドを呼び出します。 アセンブリを読み込む前に実行する任意の操作は、このメソッドに含めるか。  
  
   
  
## Examples  
 次のコード例の実装を作成する方法を示します、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイス、および Web アプリケーションの Web.config ファイルに登録します。  
  
 コード例の最初の部分は、という名前のクラスを作成します。`Samples.Process.postProcessTest`を実装する、<xref:System.Web.Compilation.IAssemblyPostProcessor>インターフェイス。 このクラスは、ファイルの書き込みの単純なアクションを実行時に、<xref:System.Web.Compilation.IAssemblyPostProcessor.PostProcessAssembly%2A>メソッドが呼び出されます。  
  
 [!code-csharp[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/CS/postProcessTest.cs#1)]
 [!code-vb[System.Web.Compilation.IAssemblyPostProcessor#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.IAssemblyPostProcessor/VB/postProcessTest.vb#1)]  
  
 コマンドを使用して、.dll ファイルにクラスをコンパイル`csc /target:library postProcessTest.cs`します。 ASP.NET アプリケーションの Bin フォルダーに生成された .dll ファイルを追加し、次のコードに示すように、Web.config ファイルに .dll を登録します。  
  
```  
<compilation debug="true" assemblyPostProcessorType="Samples.Process.postProcessTest" />  
```  
  
 Web サイトにアクセスするユーザーと Web アプリケーションが動的にコンパイルされたファイルと、MyTest.txt は C:\compile に書き込まれます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>