<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="7b754cb95b6a4c54f2598b574f51f8b6e21da88b" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36404768" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>追加のコンテキスト情報を取得するために実装するインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスにより、WSDL インポーター mechanismto がプロキシの生成およびより優れた開発者が Visual Studio で発生する、追加のコンテキスト情報を受信します。 WSDL インポーターを実装する場合、 <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> 、インターフェイス、`ReceiveImportContextInformation`の任意のメソッドの前に、WCF プロキシのジェネレーターでメソッドが呼び出される<xref:System.ServiceModel.Description.IWsdlImportExtension>と<xref:System.ServiceModel.Description.IPolicyImportExtension>と呼ばれます。  
  
 追加のコンテキスト情報が渡されたパラメーターを指す、`ReceiveImportContextInformation`メソッドです。 パラメーターには、すべての拡張ファイルおよび実装するオブジェクトへの参照の内容が含まれます。、<xref:System.IServiceProvider>インターフェイスです。 メソッドに渡されるすべての拡張ファイルはインポーターに固有であり、必要な追加情報を格納するために使用します。 つまり、Visual Studio では、これらのファイルの内容を制御しませんしに直接は使用しません。  
  
> [!NOTE]
>  インポーターは、WCF 機能拡張機構を参照してください。 このメカニズムでは、サービスを記述するメタデータ (WSDL または XSD) ドキュメントからプロキシ コードを生成する方法をカスタマイズすることができます。 詳細については、次を参照してください。 [WCF 拡張機能のカスタム メタデータのインポート](http://go.microsoft.com/fwlink/?LinkId=92310)msdn です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">WCF サービス参照の .svcmap ファイルに関連付けられたすべての拡張ファイルの内容を提供します。</param>
        <param name="serviceProvider">追加情報を取得するために照会される、Visual Studio サービス プロバイダーへの参照。</param>
        <summary>追加コンテキスト情報を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `serviceReferenceExtensionFileContents`パラメーターが Reference.config や機能拡張で追加されているカスタム拡張ファイルなどの WCF サービス参照の .svcmap ファイルに関連付けられているすべての拡張ファイルの内容を提供します。  
  
> [!NOTE]
>  ASP.NET ビルド プロバイダーのコンテキストで実行されている場合、Visual Studio に固有であるサービス プロバイダーから受信したすべてのインターフェイスはインポート拡張に利用できません。 これは、WCF サービス参照を ASP.NET プロジェクトでコンパイルする場合です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>