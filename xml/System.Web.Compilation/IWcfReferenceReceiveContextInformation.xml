<Type Name="IWcfReferenceReceiveContextInformation" FullName="System.Web.Compilation.IWcfReferenceReceiveContextInformation">
  <Metadata><Meta Name="ms.openlocfilehash" Value="c4f1841274f536314a7e4eb6b60890be01a62bd3" /><Meta Name="ms.sourcegitcommit" Value="16d2d159872fd213cae4b8f371d7ae9c8b027c89" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="11/17/2018" /><Meta Name="ms.locfileid" Value="51876294" /></Metadata><TypeSignature Language="C#" Value="public interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="VB.NET" Value="Public Interface IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="C++ CLI" Value="public interface class IWcfReferenceReceiveContextInformation" />
  <TypeSignature Language="F#" Value="type IWcfReferenceReceiveContextInformation = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Web.Extensions</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary>追加のコンテキスト情報を取得するために実装するインターフェイスを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスにより、WSDL インポーター mechanismto がプロキシの生成およびより優れた開発者エクスペリエンスの Visual Studio 内で、追加コンテキスト情報を受信します。 WSDL インポーターを実装する場合、 <xref:System.Web.Compilation.IWcfReferenceReceiveContextInformation> 、インターフェイス、`ReceiveImportContextInformation`の任意のメソッドの前に、WCF プロキシ ジェネレーターによってメソッドが呼び出される<xref:System.ServiceModel.Description.IWsdlImportExtension>と<xref:System.ServiceModel.Description.IPolicyImportExtension>と呼ばれます。  
  
 追加のコンテキスト情報に渡されるパラメーターを指す、`ReceiveImportContextInformation`メソッド。 パラメーターには、すべての拡張ファイルのコンテンツを実装するオブジェクトへの参照、<xref:System.IServiceProvider>インターフェイス。 メソッドに渡されるすべての拡張ファイルはインポーターに固有であり、必要な追加情報を格納するために使用します。 Visual Studio では、これらのファイルの内容を制御しませんし、その直接は使用しません。  
  
> [!NOTE]
>  インポーターは、WCF 機能拡張機構を参照してください。 このメカニズムでは、サービスを記述するメタデータ (WSDL と XSD) ドキュメントからプロキシ コードを生成する方法をカスタマイズすることができます。 詳細については、次を参照してください。 [WCF 拡張機能のカスタム メタデータのインポート](https://go.microsoft.com/fwlink/?LinkId=92310)msdn です。  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ReceiveImportContextInformation">
      <MemberSignature Language="C#" Value="public void ReceiveImportContextInformation (System.Collections.Generic.IDictionary&lt;string,byte[]&gt; serviceReferenceExtensionFileContents, IServiceProvider serviceProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ReceiveImportContextInformation(class System.Collections.Generic.IDictionary`2&lt;string, unsigned int8[]&gt; serviceReferenceExtensionFileContents, class System.IServiceProvider serviceProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.IWcfReferenceReceiveContextInformation.ReceiveImportContextInformation(System.Collections.Generic.IDictionary{System.String,System.Byte[]},System.IServiceProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ReceiveImportContextInformation (serviceReferenceExtensionFileContents As IDictionary(Of String, Byte()), serviceProvider As IServiceProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ReceiveImportContextInformation(System::Collections::Generic::IDictionary&lt;System::String ^, cli::array &lt;System::Byte&gt; ^&gt; ^ serviceReferenceExtensionFileContents, IServiceProvider ^ serviceProvider);" />
      <MemberSignature Language="F#" Value="abstract member ReceiveImportContextInformation : System.Collections.Generic.IDictionary&lt;string, byte[]&gt; * IServiceProvider -&gt; unit" Usage="iWcfReferenceReceiveContextInformation.ReceiveImportContextInformation (serviceReferenceExtensionFileContents, serviceProvider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web.Extensions</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="serviceReferenceExtensionFileContents" Type="System.Collections.Generic.IDictionary&lt;System.String,System.Byte[]&gt;" />
        <Parameter Name="serviceProvider" Type="System.IServiceProvider" />
      </Parameters>
      <Docs>
        <param name="serviceReferenceExtensionFileContents">WCF サービス参照の .svcmap ファイルに関連付けられたすべての拡張ファイルの内容を提供します。</param>
        <param name="serviceProvider">追加情報を取得するために照会される、Visual Studio サービス プロバイダーへの参照。</param>
        <summary>追加コンテキスト情報を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 `serviceReferenceExtensionFileContents`パラメーター Reference.config または拡張によって追加されたカスタム拡張機能のファイルなどの WCF サービス参照の .svcmap ファイルに関連付けられているすべての拡張ファイルのコンテンツを提供します。  
  
> [!NOTE]
>  Visual Studio に固有のサービス プロバイダーから受信したすべてのインターフェイスは、ASP.NET のビルド プロバイダーのコンテキストで実行するときにインポートの拡張機能を利用できません。 これは、WCF サービス参照が ASP.NET プロジェクトでコンパイルされたときに大文字と小文字です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>