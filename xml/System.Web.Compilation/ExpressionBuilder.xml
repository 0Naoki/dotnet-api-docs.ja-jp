<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="a39e97c83d91647815f83d50e83bed7d53113de1" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39738944" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <TypeSignature Language="F#" Value="type ExpressionBuilder = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5b599-101">ページ解析中に式を評価します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5b599-101">Evaluates expressions during page parsing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-102"><xref:System.Web.Compilation.ExpressionBuilder>クラスは、式ビルダーの基本クラスなど、<xref:System.Web.Compilation.AppSettingsExpressionBuilder>クラスは、ページの解析中にコード式を作成します。</span><span class="sxs-lookup"><span data-stu-id="5b599-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="5b599-103">式ビルダーでは、宣言型の式を解析し、コントロール プロパティにバインドされている値を取得するコードを作成します。</span><span class="sxs-lookup"><span data-stu-id="5b599-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="5b599-104">コンパイルなしのシナリオでは、コンパイルなし機能をサポートする式ビルダーは、実行時に式を評価します。</span><span class="sxs-lookup"><span data-stu-id="5b599-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="5b599-105">ページ パーサーが文字列で区切られた式が検出した場合`<%$ %>`文字列のプレフィックスに基づく式の式ビルダーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="5b599-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="5b599-106">プレフィックスは、コロン (:) の左側にある文字列の部分です。</span><span class="sxs-lookup"><span data-stu-id="5b599-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="5b599-107">パーサーに文字列が検出した場合に、 `<%$ ConnectionStrings:MessageDB %>`、作成、<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5b599-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="5b599-108">プレフィックスは、式ビルダーで、Web.config ファイルに関連付けられた、<xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>セクション。</span><span class="sxs-lookup"><span data-stu-id="5b599-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="5b599-109">宣言型の式の右側にあるは、評価のため、式ビルダーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="5b599-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="5b599-110">上書き、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>がページを使用してコンパイルするコードを生成します。</span><span class="sxs-lookup"><span data-stu-id="5b599-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="5b599-111">オーバーライドする必要があるコンパイルされないページでアクティブにするカスタム式ビルダーを設定する場合、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>式の結果を表すオブジェクトを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="5b599-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="5b599-112">オーバーライドする必要があります、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>カスタム式ビルダーはコンパイルなしページをサポートすることを示すプロパティです。</span><span class="sxs-lookup"><span data-stu-id="5b599-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="5b599-113">選択して、式エディターを実装することでコントロール プロパティに関連付けられたデザイン時に、式の評価のプロパティとメソッドのセットを定義できます。</span><span class="sxs-lookup"><span data-stu-id="5b599-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="5b599-114">エディターは、クラス レベルのメタデータを式ビルダーでマークされます。</span><span class="sxs-lookup"><span data-stu-id="5b599-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="5b599-115">詳細については、「<xref:System.Web.UI.Design.ExpressionEditor>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="5b599-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b599-116">次のコード例は、実装することでカスタム式ビルダーを構築する方法を示します、<xref:System.Web.Compilation.ExpressionBuilder>抽象クラス。</span><span class="sxs-lookup"><span data-stu-id="5b599-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="5b599-117">この実装の<xref:System.Web.Compilation.ExpressionBuilder>式に渡されるステートメントの評価を返します。</span><span class="sxs-lookup"><span data-stu-id="5b599-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="5b599-118">この例を実行するには、まず、Web.config ファイルでカスタム式ビルダーを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b599-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="5b599-119">最初のコード例では、Web.config ファイルでカスタム式ビルダーを登録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5b599-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="5b599-120">2 番目のコード例では、.aspx ファイル内の式を参照する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="5b599-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="5b599-121">派生することによってカスタマイズされた式ビルダーを開発する 3 つ目のコード例に示します<xref:System.Web.Compilation.ExpressionBuilder>します。</span><span class="sxs-lookup"><span data-stu-id="5b599-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="5b599-122">このコード例を実行するには、App_Code フォルダーに、クラスを配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b599-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <span data-ttu-id="5b599-123">
        <para>継承する場合、<see cref="T:System.Web.Compilation.ExpressionBuilder" />クラスがオーバーライドする必要があります、<see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />メソッド。</para>
      </span>
      <span class="sxs-lookup">
        <span data-stu-id="5b599-123">
          <para>When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</para>
        </span>
      </span>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5b599-124">
            <see cref="T:System.Web.Compilation.ExpressionBuilder" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-125"><xref:System.Web.Compilation.ExpressionBuilder>クラスが抽象クラスのインスタンスを作成することはできません<xref:System.Web.Compilation.ExpressionBuilder>を使用して直接、<xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="5b599-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5b599-126">
            <para>派生する場合、<see cref="T:System.Web.Compilation.ExpressionBuilder" />クラスでオーバーライド、<see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" />式ビルダーの実装に関するカスタムの初期化アクションを実装するコンス トラクター。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-126">
              <para>When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.EvaluateExpression : obj * System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.EvaluateExpression (target, entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target">
          <span data-ttu-id="5b599-127">式が格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-127">The object containing the expression.</span>
          </span>
        </param>
        <param name="entry">
          <span data-ttu-id="5b599-128">式によってバインドされるプロパティに関する情報を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-128">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="5b599-129">
            <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> から返された解析済みデータが格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5b599-130">式の評価に使用するコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-130">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b599-131">派生クラスでオーバーライドされた場合は、評価された式を表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b599-132">評価された式を表すオブジェクト。継承先に <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> が実装されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-133">場合は、 <xref:System.Web.Compilation.ExpressionBuilder> 、コンパイルなし機能をサポートするページのアクティブ化するオブジェクトをオーバーライドすることができます、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドと<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b599-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="5b599-134"><xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドは、現在の式の評価を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="5b599-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b599-135">次のコード例は、オーバーライドされたを使用する方法を示します<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>評価された式を返します。</span><span class="sxs-lookup"><span data-stu-id="5b599-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5b599-136">
            <para>オーバーライドする場合、<see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />メソッドもオーバーライドする必要あります、<see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />プロパティ。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-136">
              <para>If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member GetCodeExpression : System.Web.UI.BoundPropertyEntry * obj * System.Web.Compilation.ExpressionBuilderContext -&gt; System.CodeDom.CodeExpression" Usage="expressionBuilder.GetCodeExpression (entry, parsedData, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry">
          <span data-ttu-id="5b599-137">式によってバインドされるプロパティに関する情報を表すオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-137">The object that represents information about the property bound to by the expression.</span>
          </span>
        </param>
        <param name="parsedData">
          <span data-ttu-id="5b599-138">
            <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> から返された解析済みデータが格納されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5b599-139">式の評価に使用するコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-139">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b599-140">派生クラスでオーバーライドされた場合、評価された式を取得するためにページ実行中に使用されるコードが返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b599-141">プロパティの割り当てに使用される <see cref="T:System.CodeDom.CodeExpression" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-142">継承するクラス、<xref:System.Web.Compilation.ExpressionBuilder>クラスを実装する必要があります、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>抽象メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b599-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b599-143">次のコード例は、返す方法を示します、<xref:System.CodeDom.CodeExpression>オブジェクトをオーバーライドすることで、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b599-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <span data-ttu-id="5b599-144">
            <para>カスタム式ビルダーを実装する場合は、コントロール プロパティの適切な型キャストを実行しでキャスト操作を返す必要があります、<see cref="T:System.CodeDom.CodeExpression" />オブジェクト。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-144">
              <para>If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</para>
            </span>
          </span>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberSignature Language="F#" Value="abstract member ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj&#xA;override this.ParseExpression : string * Type * System.Web.Compilation.ExpressionBuilderContext -&gt; obj" Usage="expressionBuilder.ParseExpression (expression, propertyType, context)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression">
          <span data-ttu-id="5b599-145">宣言式の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-145">The value of the declarative expression.</span>
          </span>
        </param>
        <param name="propertyType">
          <span data-ttu-id="5b599-146">式によってバインドされるプロパティの型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-146">The type of the property bound to by the expression.</span>
          </span>
        </param>
        <param name="context">
          <span data-ttu-id="5b599-147">式の評価に使用するコンテキスト情報。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-147">Contextual information for the evaluation of the expression.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5b599-148">派生クラスでオーバーライドされた場合は、解析された式を表すオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-148">When overridden in a derived class, returns an object that represents the parsed expression.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="5b599-149">式を解析した結果が格納された <see cref="T:System.Object" />。<see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> が実装されていない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-150">このメソッドは、式が解析され、として使用できるオブジェクトとして返します派生クラスでオーバーライドされると、`parsedData`でパラメーターを<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>または<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="5b599-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.SupportsEvaluate : bool" Usage="System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5b599-151">派生クラスでオーバーライドされた場合は、現在の <see cref="T:System.Web.Compilation.ExpressionBuilder" /> オブジェクトがコンパイルなしページをサポートするかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5b599-152">
            <see cref="T:System.Web.Compilation.ExpressionBuilder" /> が式評価をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5b599-152">
              <see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5b599-153">既定値、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティは`false`します。</span><span class="sxs-lookup"><span data-stu-id="5b599-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="5b599-154">コンパイルなしページをサポートするために、両方をオーバーライドする必要があります、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドと<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b599-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5b599-155">次のコード例は、使用する方法を示します、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="5b599-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>