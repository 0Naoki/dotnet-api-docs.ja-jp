<Type Name="ExpressionBuilder" FullName="System.Web.Compilation.ExpressionBuilder">
  <TypeSignature Language="C#" Value="public abstract class ExpressionBuilder" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ExpressionBuilder extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionBuilder" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ExpressionBuilder" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionBuilder abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="db1c1-101">ページ解析中に式を評価します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-101">Evaluates expressions during page parsing.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-102"><xref:System.Web.Compilation.ExpressionBuilder>クラスは、式ビルダーの基本クラスなど、<xref:System.Web.Compilation.AppSettingsExpressionBuilder>ページの解析中にコード式を作成するクラス。</span><span class="sxs-lookup"><span data-stu-id="db1c1-102">The <xref:System.Web.Compilation.ExpressionBuilder> class is the base class for expression builders, such as the <xref:System.Web.Compilation.AppSettingsExpressionBuilder> class, that create code expressions during page parsing.</span></span>  
  
 <span data-ttu-id="db1c1-103">式ビルダーは、宣言型の式を解析し、コントロールのプロパティにバインドされている値を取得するコードを作成します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-103">Expression builders parse declarative expressions and create code to retrieve values bound to a control property.</span></span> <span data-ttu-id="db1c1-104">コンパイルなしのシナリオでは、コンパイルなし機能をサポートする式ビルダーは、実行時に式を評価します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-104">In no-compile scenarios, an expression builder that supports a no-compile feature evaluates the expression during run time.</span></span>  
  
 <span data-ttu-id="db1c1-105">ページのパーサーが文字列で区切られた式を検出すると`<%$ %>`文字列のプレフィックスに基づく式の式ビルダーが作成されます。</span><span class="sxs-lookup"><span data-stu-id="db1c1-105">When the page parser encounters an expression that is delimited with the string `<%$ %>`, it creates an expression builder for the expression based on the prefix in the string.</span></span> <span data-ttu-id="db1c1-106">プレフィックスは、コロン (:) の左側にある文字列の部分です。</span><span class="sxs-lookup"><span data-stu-id="db1c1-106">The prefix is the portion of the string that is to the left of the colon (:).</span></span> <span data-ttu-id="db1c1-107">たとえば、パーサーを検出した場合、文字列`<%$ ConnectionStrings:MessageDB %>`、作成、<xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-107">For example, when the parser encounters the string `<%$ ConnectionStrings:MessageDB %>`, it creates a <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> object.</span></span> <span data-ttu-id="db1c1-108">プレフィックスは、式ビルダーで Web.config ファイルに関連付け、<xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>セクションです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-108">Prefixes are associated with expression builders in the Web.config file in the <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A> section.</span></span>  
  
 <span data-ttu-id="db1c1-109">宣言型の式の右辺は、評価のため、式ビルダーに渡されます。</span><span class="sxs-lookup"><span data-stu-id="db1c1-109">The right side of the declarative expression is passed to the expression builder for evaluation.</span></span> <span data-ttu-id="db1c1-110">上書き、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>ページにコンパイルされるコードを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="db1c1-110">Override the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method to generate code that will be compiled with the page.</span></span>  
  
 <span data-ttu-id="db1c1-111">またをオーバーライドする必要がある、カスタム式ビルダーがコンパイルされていないページ上でアクティブにする場合は、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>式の結果を表すオブジェクトを返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="db1c1-111">If you want the custom expression builder to be active on pages that are not compiled, you must also override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an object that represents the results of the expression.</span></span> <span data-ttu-id="db1c1-112">上書きすることも必要があります、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>でカスタム式ビルダーでは、コンパイルなしページはサポートを示すプロパティです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-112">You also must override the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property to indicate that the custom expression builder does support no-compile pages.</span></span>  
  
 <span data-ttu-id="db1c1-113">プロパティとメソッドを選択し、式エディターを実装することでのデザイン時にコントロールのプロパティに関連付けられている式を評価するためのセットを定義することができます。</span><span class="sxs-lookup"><span data-stu-id="db1c1-113">You can define a set of properties and methods for selecting and evaluating an expression that is associated with a control property at design time by implementing an expression editor.</span></span> <span data-ttu-id="db1c1-114">エディターは、クラス レベルのメタデータを式ビルダーでマークされます。</span><span class="sxs-lookup"><span data-stu-id="db1c1-114">The editor is marked on the expression builder through class-level metadata.</span></span> <span data-ttu-id="db1c1-115">詳細については、「<xref:System.Web.UI.Design.ExpressionEditor>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="db1c1-115">For more information, see <xref:System.Web.UI.Design.ExpressionEditor>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db1c1-116">次のコード例は、実装することによってカスタム式ビルダーを作成する方法を示す、<xref:System.Web.Compilation.ExpressionBuilder>抽象クラスです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-116">The following code examples demonstrate how to build a custom expression builder by implementing the <xref:System.Web.Compilation.ExpressionBuilder> abstract class.</span></span> <span data-ttu-id="db1c1-117">この実装<xref:System.Web.Compilation.ExpressionBuilder>式に渡されるステートメントの評価を返します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-117">This implementation of <xref:System.Web.Compilation.ExpressionBuilder> returns an evaluated statement that is passed to the expression.</span></span> <span data-ttu-id="db1c1-118">この例を実行するには、最初に、Web.config ファイルでカスタム式ビルダーを登録する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db1c1-118">To run this example, you must first register the custom expression builder in the Web.config file.</span></span> <span data-ttu-id="db1c1-119">最初のコード例では、Web.config ファイルでカスタム式ビルダーを登録する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-119">The first code example demonstrates how to register the custom expression builder in the Web.config file.</span></span>  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 <span data-ttu-id="db1c1-120">2 つ目のコード例では、.aspx ファイル内の式を参照する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-120">The second code example demonstrates how to reference the expression in an .aspx file.</span></span>  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 <span data-ttu-id="db1c1-121">3 番目のコード例から派生することによってカスタマイズされた式ビルダーを開発する方法を示します<xref:System.Web.Compilation.ExpressionBuilder>です。</span><span class="sxs-lookup"><span data-stu-id="db1c1-121">The third code example demonstrates how to develop a customized expression builder by deriving from <xref:System.Web.Compilation.ExpressionBuilder>.</span></span> <span data-ttu-id="db1c1-122">このコード例を実行するには、App_Code フォルダーに、クラスを配置する必要があります。</span><span class="sxs-lookup"><span data-stu-id="db1c1-122">To run this code example, you must place the class in the App_Code folder.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para><span data-ttu-id="db1c1-123">継承する場合、<see cref="T:System.Web.Compilation.ExpressionBuilder" />オーバーライドする必要があります、クラス、<see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-123">When you inherit from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, you must override the <see cref="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method.</span></span></para>
    </block>
    <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
    <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
    <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
    <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ExpressionBuilder ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ExpressionBuilder();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="db1c1-124"><see cref="T:System.Web.Compilation.ExpressionBuilder" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-124">Initializes a new instance of the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-125"><xref:System.Web.Compilation.ExpressionBuilder>クラスは抽象クラスのインスタンスを作成することはできません<xref:System.Web.Compilation.ExpressionBuilder>を使用して直接、<xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-125">Because the <xref:System.Web.Compilation.ExpressionBuilder> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.ExpressionBuilder> directly by using the <xref:System.Web.Compilation.ExpressionBuilder.%23ctor%2A> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="db1c1-126">派生している場合、<see cref="T:System.Web.Compilation.ExpressionBuilder" />クラス、オーバーライド、<see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" />式ビルダーを実装するためのカスタムの初期化のアクションを実装するコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-126">When deriving from the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> class, override the <see cref="M:System.Web.Compilation.ExpressionBuilder.#ctor" /> constructor to implement custom initialization actions for your expression builder implementation.</span></span></para>
        </block>
        <altmember cref="T:System.Web.Compilation.ExpressionBuilderContext" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilder" />
        <altmember cref="T:System.Web.Configuration.ExpressionBuilderCollection" />
        <altmember cref="T:System.Web.Compilation.AppSettingsExpressionBuilder" />
        <altmember cref="T:System.Web.Compilation.ConnectionStringsExpressionBuilder" />
      </Docs>
    </Member>
    <Member MemberName="EvaluateExpression">
      <MemberSignature Language="C#" Value="public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object EvaluateExpression(object target, class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function EvaluateExpression (target As Object, entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ EvaluateExpression(System::Object ^ target, System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="target" Type="System.Object" />
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="target"><span data-ttu-id="db1c1-127">式が格納されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-127">The object containing the expression.</span></span></param>
        <param name="entry"><span data-ttu-id="db1c1-128">式によってバインドされるプロパティに関する情報を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-128">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="db1c1-129"><see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> から返された解析済みデータが格納されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-129">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="db1c1-130">式の評価に使用するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="db1c1-130">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="db1c1-131">派生クラスでオーバーライドされた場合は、評価された式を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-131">When overridden in a derived class, returns an object that represents an evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="db1c1-132">評価された式を表すオブジェクト。継承先に <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> が実装されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="db1c1-132">An object that represents the evaluated expression; otherwise, <see langword="null" /> if the inheritor does not implement <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-133">場合は、<xref:System.Web.Compilation.ExpressionBuilder>コンパイルなし機能をサポートするページ上でアクティブにするオブジェクトをオーバーライドすることができます、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドおよび<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-133">If you want your <xref:System.Web.Compilation.ExpressionBuilder> object to be active on a page that supports the no-compile feature, you can override the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span> <span data-ttu-id="db1c1-134"><xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドは、現在の式の評価を返す必要があります。</span><span class="sxs-lookup"><span data-stu-id="db1c1-134">The <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method should return the evaluation of the current expression.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db1c1-135">次のコード例は、オーバーライドされたを使用する方法を示します<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>評価された式を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="db1c1-135">The following code example demonstrates how to use the overridden <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method to return an evaluated expression.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#3)]    
 [!code-vb[System.Web.Compilation.ExpressionBuilder#3](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#3)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="db1c1-136">オーバーライドする場合、<see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />メソッドを上書きする必要ありますも、<see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />プロパティです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-136">If you override the <see cref="M:System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" /> method, you must also override the <see cref="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" /> property.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetCodeExpression">
      <MemberSignature Language="C#" Value="public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.CodeDom.CodeExpression GetCodeExpression(class System.Web.UI.BoundPropertyEntry entry, object parsedData, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCodeExpression (entry As BoundPropertyEntry, parsedData As Object, context As ExpressionBuilderContext) As CodeExpression" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::CodeDom::CodeExpression ^ GetCodeExpression(System::Web::UI::BoundPropertyEntry ^ entry, System::Object ^ parsedData, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeExpression</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="entry" Type="System.Web.UI.BoundPropertyEntry" />
        <Parameter Name="parsedData" Type="System.Object" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="entry"><span data-ttu-id="db1c1-137">式によってバインドされるプロパティに関する情報を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-137">The object that represents information about the property bound to by the expression.</span></span></param>
        <param name="parsedData"><span data-ttu-id="db1c1-138"><see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> から返された解析済みデータが格納されたオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-138">The object containing parsed data as returned by <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />.</span></span></param>
        <param name="context"><span data-ttu-id="db1c1-139">式の評価に使用するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="db1c1-139">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="db1c1-140">派生クラスでオーバーライドされた場合、評価された式を取得するためにページ実行中に使用されるコードが返されます。</span><span class="sxs-lookup"><span data-stu-id="db1c1-140">When overridden in a derived class, returns code that is used during page execution to obtain the evaluated expression.</span></span></summary>
        <returns><span data-ttu-id="db1c1-141">プロパティの割り当てに使用される <see cref="T:System.CodeDom.CodeExpression" />。</span><span class="sxs-lookup"><span data-stu-id="db1c1-141">A <see cref="T:System.CodeDom.CodeExpression" /> that is used for property assignment.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-142">継承するクラス、<xref:System.Web.Compilation.ExpressionBuilder>クラスを実装する必要があります、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>抽象メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-142">Classes that inherit from the <xref:System.Web.Compilation.ExpressionBuilder> class must implement the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> abstract method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db1c1-143">次のコード例は、返す方法を示します、<xref:System.CodeDom.CodeExpression>オーバーライドすることでオブジェクト、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-143">The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> method.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#4)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#4](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#4)]   
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para><span data-ttu-id="db1c1-144">コントロールのプロパティを適切な型キャストを実行してで、キャスト操作を返す必要がありますカスタム式ビルダーを実装する場合、<see cref="T:System.CodeDom.CodeExpression" />オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="db1c1-144">If you implement a custom expression builder, you must perform the proper type casting for the control property and return the cast operation in the <see cref="T:System.CodeDom.CodeExpression" /> object.</span></span></para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="ParseExpression">
      <MemberSignature Language="C#" Value="public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object ParseExpression(string expression, class System.Type propertyType, class System.Web.Compilation.ExpressionBuilderContext context) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function ParseExpression (expression As String, propertyType As Type, context As ExpressionBuilderContext) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ ParseExpression(System::String ^ expression, Type ^ propertyType, System::Web::Compilation::ExpressionBuilderContext ^ context);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="expression" Type="System.String" />
        <Parameter Name="propertyType" Type="System.Type" />
        <Parameter Name="context" Type="System.Web.Compilation.ExpressionBuilderContext" />
      </Parameters>
      <Docs>
        <param name="expression"><span data-ttu-id="db1c1-145">宣言式の値。</span><span class="sxs-lookup"><span data-stu-id="db1c1-145">The value of the declarative expression.</span></span></param>
        <param name="propertyType"><span data-ttu-id="db1c1-146">式によってバインドされるプロパティの型。</span><span class="sxs-lookup"><span data-stu-id="db1c1-146">The type of the property bound to by the expression.</span></span></param>
        <param name="context"><span data-ttu-id="db1c1-147">式の評価に使用するコンテキスト情報。</span><span class="sxs-lookup"><span data-stu-id="db1c1-147">Contextual information for the evaluation of the expression.</span></span></param>
        <summary><span data-ttu-id="db1c1-148">派生クラスでオーバーライドされた場合は、解析された式を表すオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-148">When overridden in a derived class, returns an object that represents the parsed expression.</span></span></summary>
        <returns><span data-ttu-id="db1c1-149">式を解析した結果が格納された <see cref="T:System.Object" />。<see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> が実装されていない場合は <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="db1c1-149">An <see cref="T:System.Object" /> containing the parsed representation of the expression; otherwise, <see langword="null" /> if <see cref="M:System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)" /> is not implemented.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-150">派生クラスでオーバーライドされると、このメソッドは、式を解析し、として使用できるオブジェクトとして返します、`parsedData`内のパラメーター、<xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>または<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-150">When overridden in a derived class, this method parses the expression and returns it as an object that can be used as the `parsedData` parameter in a <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A> or <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SupportsEvaluate">
      <MemberSignature Language="C#" Value="public virtual bool SupportsEvaluate { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SupportsEvaluate" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property SupportsEvaluate As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property bool SupportsEvaluate { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="db1c1-151">派生クラスでオーバーライドされた場合は、現在の <see cref="T:System.Web.Compilation.ExpressionBuilder" /> オブジェクトがコンパイルなしページをサポートするかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-151">When overridden in a derived class, returns a value indicating whether the current <see cref="T:System.Web.Compilation.ExpressionBuilder" /> object supports no-compile pages.</span></span></summary>
        <value>
          <span data-ttu-id="db1c1-152"><see cref="T:System.Web.Compilation.ExpressionBuilder" /> が式評価をサポートしている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="db1c1-152"><see langword="true" /> if the <see cref="T:System.Web.Compilation.ExpressionBuilder" /> supports expression evaluation; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="db1c1-153">既定値、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティは`false`します。</span><span class="sxs-lookup"><span data-stu-id="db1c1-153">The default value for the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property is `false`.</span></span> <span data-ttu-id="db1c1-154">コンパイルなしのページをサポートするために、両方をオーバーライドする必要があります、<xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>メソッドおよび<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-154">To support no-compile pages, you must override both the <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> method and the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="db1c1-155">次のコード例を使用する方法を示しています、<xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="db1c1-155">The following code example demonstrates how to use the <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> property.</span></span>  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#2)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#2)]   
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>