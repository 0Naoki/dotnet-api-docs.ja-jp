<Type Name="BuildProvider" FullName="System.Web.Compilation.BuildProvider">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="c45f28c3393ed677cfa3432029e87055d139c429" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class BuildProvider" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit BuildProvider extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.BuildProvider" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class BuildProvider" />
  <TypeSignature Language="C++ CLI" Value="public ref class BuildProvider abstract" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="b59dd-101">ASP.NET ビルド環境でソース コードを生成するためのプロパティとメソッドのセットを定義します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b59dd-101">Defines a set of properties and methods for generating source code within the ASP.NET build environment.</span>
      </span>
      <span data-ttu-id="b59dd-102">このクラスは抽象クラスです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="b59dd-102">This class is abstract.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-103">ASP.NET ビルド環境の用途<xref:System.Web.Compilation.BuildProvider>アプリケーション内で別のファイルの種類のソース コードを生成するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-103">The ASP.NET build environment uses <xref:System.Web.Compilation.BuildProvider> objects to generate source code for different file types within an application.</span></span> <span data-ttu-id="b59dd-104">派生したクラス<xref:System.Web.Compilation.BuildProvider>主に関係のソース コード ファイル、Web ページ、リソース、およびその他のカスタム項目を指定します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-104">Classes derived from <xref:System.Web.Compilation.BuildProvider> predominantly provide source code for files, Web pages, resources, and other custom items.</span></span>  
  
 <span data-ttu-id="b59dd-105">通常のインスタンスを作成しない、<xref:System.Web.Compilation.BuildProvider>クラスに直接できます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-105">Typically, you do not create an instance of the <xref:System.Web.Compilation.BuildProvider> class directly.</span></span> <span data-ttu-id="b59dd-106">派生するクラスを実装する代わりに、 <xref:System.Web.Compilation.BuildProvider>、構成して、 <xref:System.Web.Compilation.BuildProvider> ASP.NET 内で使用するための実装が環境を構築します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-106">Instead, you implement a class that derives from <xref:System.Web.Compilation.BuildProvider>, and configure the <xref:System.Web.Compilation.BuildProvider> implementation for use within the ASP.NET build environment.</span></span>  
  
 <span data-ttu-id="b59dd-107">インスタンス、<xref:System.Web.Compilation.BuildProvider>でクラスを使用<xref:System.Web.Compilation.AssemblyBuilder>コンパイルされたアセンブリに 1 つまたは複数のファイルをビルドするオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-107">Instances of the <xref:System.Web.Compilation.BuildProvider> class are used with <xref:System.Web.Compilation.AssemblyBuilder> objects to build one or more files into a compiled assembly.</span></span> <span data-ttu-id="b59dd-108">A<xref:System.Web.Compilation.BuildProvider>インスタンスは、個々 のファイルに対する適切な言語でソース コードを生成し、<xref:System.Web.Compilation.AssemblyBuilder>オブジェクトを組み合わせて各から提供されたソース<xref:System.Web.Compilation.BuildProvider>インスタンスを 1 つのアセンブリにします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-108">A <xref:System.Web.Compilation.BuildProvider> instance generates source code in the appropriate language for individual files, and the <xref:System.Web.Compilation.AssemblyBuilder> object combines the source contributed by each <xref:System.Web.Compilation.BuildProvider> instance into a single assembly.</span></span>  
  
 <span data-ttu-id="b59dd-109">ASP.NET ビルド環境のインスタンスを使用して、<xref:System.Web.Compilation.BuildProvider>アプリケーション内でファイルをビルドするクラス。</span><span class="sxs-lookup"><span data-stu-id="b59dd-109">The ASP.NET build environment uses instances of the <xref:System.Web.Compilation.BuildProvider> class to build files within an application.</span></span> <span data-ttu-id="b59dd-110"><xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>のプロパティ、<xref:System.Web.Compilation.BuildProvider>クラスを作成するファイルのパスを示します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-110">The <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property of the <xref:System.Web.Compilation.BuildProvider> class indicates the path of the file to be built.</span></span> <span data-ttu-id="b59dd-111">アプリケーション内の各ファイルのファイル拡張子は、対応するビルド プロバイダーにマップされます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-111">The file extension of each file within an application is mapped to a corresponding build provider.</span></span> <span data-ttu-id="b59dd-112">ASP.NET ビルド環境によって初期化、<xref:System.Web.Compilation.BuildProvider>インスタンスの各ファイルのファイル拡張子に基づいたを使用して、<xref:System.Web.Compilation.BuildProvider>ファイルのソース コードを生成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-112">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> instance for each file based on the file extension, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source code for the file.</span></span> <span data-ttu-id="b59dd-113">ASP.NET ビルド環境、<xref:System.Web.Compilation.AssemblyBuilder>優先コンパイラ言語とするファイルのコンテキストに基づいて、オブジェクト、<xref:System.Web.Compilation.BuildProvider>メソッドの 1 つまたは複数のファイルからアセンブリを作成するときにできるように、<xref:System.Web.Compilation.BuildProvider>インスタンスは、全体的なアセンブリには、そのファイルのソース コードを行うことができます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-113">The ASP.NET build environment passes an <xref:System.Web.Compilation.AssemblyBuilder> object based on the preferred compiler language and the context of the file to the <xref:System.Web.Compilation.BuildProvider> methods when building an assembly from one or more files, so that the <xref:System.Web.Compilation.BuildProvider> instance can contribute source code for its file to the overall assembly.</span></span>  
  
 <span data-ttu-id="b59dd-114">ASP.NET アプリケーション内のファイルの種類のカスタムのビルド アクションを定義するのからクラスを派生する必要があります<xref:System.Web.Compilation.BuildProvider>ファイルの種類を作成するため、派生クラス内のメンバーを実装して、アプリケーション構成ファイル内の対応するファイル拡張子のビルド プロバイダーを構成します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-114">To define custom build actions for a file type within an ASP.NET application, you must derive a class from <xref:System.Web.Compilation.BuildProvider>, implement members within the derived class for building the file type, and configure the build provider for the corresponding file extension within the application configuration file.</span></span>  
  
 <span data-ttu-id="b59dd-115">サポートされているファイルのファイル拡張子を指定し、ビルド プロバイダーがコード ファイル、Web ファイル、リソース ファイル、またはすべてのファイルをサポートするかどうか。</span><span class="sxs-lookup"><span data-stu-id="b59dd-115">The  specifies the file extension for supported files, and whether the build provider supports code files, Web files, resource files or all files.</span></span> <span data-ttu-id="b59dd-116">使用して、`type`ビルド プロバイダーの実装の完全修飾型名を指定する属性。</span><span class="sxs-lookup"><span data-stu-id="b59dd-116">Use the `type` attribute to specify the fully qualified type name of the build provider implementation.</span></span> <span data-ttu-id="b59dd-117">使用して、<xref:System.Web.Compilation.BuildProviderAppliesToAttribute>ビルド プロバイダーが App_Code ディレクトリ内のファイル、ディレクトリ内のファイル、Web コンテンツにグローバルまたはローカル リソース、またはすべてのファイルを適用するかどうかを指定するクラス。</span><span class="sxs-lookup"><span data-stu-id="b59dd-117">Use the <xref:System.Web.Compilation.BuildProviderAppliesToAttribute> class to specify whether the build provider applies to files in the App_Code directory, to files in a Web content directory, to global or local resources, or to all files.</span></span> <span data-ttu-id="b59dd-118">使用して、`extension`属性を識別するために使用するファイル拡張子を指定してファイルを<xref:System.Web.Compilation.BuildProvider>クラスでサポートされます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-118">Use the `extension` attribute to specify the file extension used to identify files that the <xref:System.Web.Compilation.BuildProvider> class supports.</span></span> <span data-ttu-id="b59dd-119">使用して、<xref:System.Web.Configuration.BuildProviderCollection>を確認するクラスが、構成ファイル内のプロバイダーをビルドします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-119">Use the <xref:System.Web.Configuration.BuildProviderCollection> class to examine build providers in a configuration file.</span></span> <span data-ttu-id="b59dd-120">ビルド プロバイダーの構成の詳細については、次を参照してください。 [buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-120">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 <span data-ttu-id="b59dd-121">カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>、オーバーライド、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>サポートされているファイルの種類のソース コードを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-121">To implement a build provider that generates source code for a custom file type, derive a class from <xref:System.Web.Compilation.BuildProvider>, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span> <span data-ttu-id="b59dd-122">生成されたソースを追加、 <xref:System.Web.Compilation.AssemblyBuilder> CodeDOM グラフのまたは物理ソース コード ファイルを表すコンテンツとしてフォーム内のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-122">The generated source is added to the <xref:System.Web.Compilation.AssemblyBuilder> object in the form of a CodeDOM graph, or as content that represents a physical source code file.</span></span> <span data-ttu-id="b59dd-123">ビルド プロバイダーは、特定のプログラミング言語を必要とする場合は、上書き、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>返されるプロパティを<xref:System.Web.Compilation.CompilerType>サポートされているプログラミング言語のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-123">If the build provider requires a specific programming language, override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span> <span data-ttu-id="b59dd-124">ビルド プロバイダーに固有のプログラミング言語が必要としない場合は無効、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>プロパティです。 使用する基本クラスの実装のビルド プロバイダーが Visual Basic や c# など、任意の .NET Framework 言語を使用できることを示します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-124">If the build provider does not require a specific programming language, do not override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property; use the base class implementation, which indicates that the build provider can use any .NET Framework language, such as Visual Basic or C#.</span></span>  
  
 <span data-ttu-id="b59dd-125">Web コンテンツのソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>をオーバーライドし、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>を返すメソッドを<xref:System.Type>によって生成されたクラスの<xref:System.Web.Compilation.BuildProvider>します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-125">To implement a build provider that generates source code for Web content, derive a class from <xref:System.Web.Compilation.BuildProvider> and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the <xref:System.Type> for the class generated by <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="b59dd-126">上書き、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>サポートされているファイルによって提供された型のソース コードを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-126">Override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the type provided by the supported file.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="b59dd-127">追加、カスタマイズされた<xref:System.Web.Compilation.BuildProvider>Web.config ファイルにクラスは、ASP.NET Web サイトでは動作しますが、ASP.NET Web アプリケーション プロジェクトでは機能しません。</span><span class="sxs-lookup"><span data-stu-id="b59dd-127">Adding a customized <xref:System.Web.Compilation.BuildProvider> class to the Web.config file works in an ASP.NET Web site but does not work in an ASP.NET Web application project.</span></span> <span data-ttu-id="b59dd-128">Web アプリケーション プロジェクト、によって生成されるコードでは、<xref:System.Web.Compilation.BuildProvider>クラスは、アプリケーションに含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="b59dd-128">In a Web application project, the code that is generated by the <xref:System.Web.Compilation.BuildProvider> class cannot be included in the application.</span></span> <span data-ttu-id="b59dd-129">詳細については、次を参照してください。 [ASP.NET Web アプリケーション プロジェクト プリコンパイル概要](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887)です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-129">For more information, see [ASP.NET Web Application Project Precompilation Overview](http://msdn.microsoft.com/library/b940abbd-178d-4570-b441-52914fa7b887).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b59dd-130">次のコード例は、抽象型から継承する簡単なビルド プロバイダーの実装を示しています。<xref:System.Web.Compilation.BuildProvider>基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-130">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="b59dd-131">ビルド プロバイダーは、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底クラスのメンバーです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-131">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span> <span data-ttu-id="b59dd-132">この例では、実装は含まれません、`SampleClassGenerator`クラスです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-132">The example does not include the implementation of the `SampleClassGenerator` class.</span></span> <span data-ttu-id="b59dd-133">詳細については、次を参照してください。、<xref:System.CodeDom.CodeCompileUnit>クラスの概要です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-133">For more information, see the <xref:System.CodeDom.CodeCompileUnit> class overview.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.CompilerType" />
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
    <altmember cref="T:System.Web.Configuration.BuildProvider" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected BuildProvider ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; BuildProvider();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-134">
            <see cref="T:System.Web.Compilation.BuildProvider" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-134">Initializes a new instance of the <see cref="T:System.Web.Compilation.BuildProvider" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-135"><xref:System.Web.Compilation.BuildProvider>クラスは抽象クラスのインスタンスを作成することはできません<xref:System.Web.Compilation.BuildProvider>直接コンス トラクターを使用します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-135">Because the <xref:System.Web.Compilation.BuildProvider> class is abstract, you cannot create an instance of <xref:System.Web.Compilation.BuildProvider> directly using the constructor.</span></span>  
  
 <span data-ttu-id="b59dd-136">派生している場合、<xref:System.Web.Compilation.BuildProvider>クラス、ビルド プロバイダーの実装にカスタムの初期化のアクションを実装するコンス トラクターをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-136">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, override the constructor to implement custom initialization actions for your build provider implementation.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CodeCompilerType">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.CompilerType CodeCompilerType { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Compilation.CompilerType CodeCompilerType" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.CodeCompilerType" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property CodeCompilerType As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Web::Compilation::CompilerType ^ CodeCompilerType { System::Web::Compilation::CompilerType ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-137">ビルド プロバイダーがカスタム ファイルの種類のソース コードを生成するために使用するコンパイラ タイプを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-137">Represents the compiler type used by a build provider to generate source code for a custom file type.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b59dd-138">読み取り専用の <see cref="T:System.Web.Compilation.CompilerType" />。仮想パスのソース コードをビルドするためのコード ジェネレーター、コード コンパイラ、およびコンパイラ設定値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-138">A read-only <see cref="T:System.Web.Compilation.CompilerType" /> representing the code generator, code compiler, and compiler settings used to build source code for the virtual path.</span>
          </span>
          <span data-ttu-id="b59dd-139">基本クラスでは、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-139">The base class returns <see langword="null" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-140">使用して、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>プロパティを実装するためのソース コードのコンパイルの設定を提供<xref:System.Web.Compilation.BuildProvider>です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-140">Use the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to provide the settings for compiling source code for an implementation of <xref:System.Web.Compilation.BuildProvider>.</span></span> <span data-ttu-id="b59dd-141"><xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>プロパティは`null`かどうかビルド プロバイダーは必要ありません、特定のコード言語の生成とソース コードをコンパイルします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-141">The <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property is `null` if the build provider does not require a specific code language for generating and compiling source code.</span></span>  
  
 <span data-ttu-id="b59dd-142">値を設定する、<xref:System.Web.Compilation.CompilerType>ビルド プロバイダーの実装を使用して内のオブジェクト、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>または<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-142">To set the value for a <xref:System.Web.Compilation.CompilerType> object within a build provider implementation, use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> or <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method.</span></span>  
  
 <span data-ttu-id="b59dd-143"><xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A>プロパティを指定します、<xref:System.CodeDom.Compiler.CodeDomProvider>実装を生成し、ビルド プロバイダーのソース コードをコンパイルするために使用します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-143">The <xref:System.Web.Compilation.CompilerType.CodeDomProviderType%2A> property specifies the <xref:System.CodeDom.Compiler.CodeDomProvider> implementation that is used to generate and compile source code for a build provider.</span></span> <span data-ttu-id="b59dd-144"><xref:System.Web.Compilation.CompilerType.CompilerParameters%2A>プロパティは、ソース コードをアセンブリにコンパイルするために使用される設定を定義します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-144">The <xref:System.Web.Compilation.CompilerType.CompilerParameters%2A> property defines the settings that are used to compile the source code into an assembly.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b59dd-145">次のコード例は、抽象型から継承する簡単なビルド プロバイダーの実装を示しています。<xref:System.Web.Compilation.BuildProvider>基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-145">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="b59dd-146">ビルド プロバイダーは、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底クラスのメンバーです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-146">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
      </Docs>
    </Member>
    <Member MemberName="GenerateCode">
      <MemberSignature Language="C#" Value="public virtual void GenerateCode (System.Web.Compilation.AssemblyBuilder assemblyBuilder);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void GenerateCode(class System.Web.Compilation.AssemblyBuilder assemblyBuilder) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GenerateCode(System.Web.Compilation.AssemblyBuilder)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void GenerateCode(System::Web::Compilation::AssemblyBuilder ^ assemblyBuilder);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="assemblyBuilder" Type="System.Web.Compilation.AssemblyBuilder" />
      </Parameters>
      <Docs>
        <param name="assemblyBuilder">
          <span data-ttu-id="b59dd-147">ビルド プロバイダーで生成されたソース コードを参照するアセンブリ ビルダー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-147">The assembly builder that references the source code generated by the build provider.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-148">ビルド プロバイダーの仮想パスのソース コードを生成し、そのソース コードを指定のアセンブリ ビルダーに追加します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-148">Generates source code for the virtual path of the build provider, and adds the source code to a specified assembly builder.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-149">カスタム ファイルの種類のソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>クラス、し、上書き、<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>サポートされているファイルの種類のソース コードを生成する方法です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-149">To implement a build provider that generates source code for a custom file type, derive a class from the <xref:System.Web.Compilation.BuildProvider> class, and override the <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> method to generate source code for the supported file type.</span></span>  
  
 <span data-ttu-id="b59dd-150">通常、ビルド プロバイダーの<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>実装の読み取り、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティ、内容を解析しを指定した、生成されたソース コードに追加<xref:System.Web.Compilation.AssemblyBuilder>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-150">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> implementation reads the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property, parses the contents, and adds the generated source code to the specified <xref:System.Web.Compilation.AssemblyBuilder> object.</span></span> <span data-ttu-id="b59dd-151">ソース コードの形式でアセンブリに協力することができます、<xref:System.IO.TextWriter>オブジェクトまたは CodeDOM グラフ。</span><span class="sxs-lookup"><span data-stu-id="b59dd-151">You can contribute source code to the assembly in the form of a <xref:System.IO.TextWriter> object or a CodeDOM graph.</span></span> <span data-ttu-id="b59dd-152">ソース コードからアセンブリを追加する、<xref:System.IO.TextWriter>オブジェクトを使用して、<xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-152">To add source code to the assembly through a <xref:System.IO.TextWriter> object, use the <xref:System.Web.Compilation.AssemblyBuilder.CreateCodeFile%2A> method.</span></span> <span data-ttu-id="b59dd-153">CodeDOM グラフのソース コードをアセンブリに追加するには、使用、<xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-153">To add source code in a CodeDOM graph to the assembly, use the <xref:System.Web.Compilation.AssemblyBuilder.AddCodeCompileUnit%2A> method.</span></span>  
  
 <span data-ttu-id="b59dd-154">オーバーライドする必要がありますビルド プロバイダーは、特定のプログラミング言語でソース コードを生成する場合、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>返されるプロパティを<xref:System.Web.Compilation.CompilerType>サポートされているプログラミング言語のオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-154">If the build provider generates source code in a specific programming language, you must override the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property to return a <xref:System.Web.Compilation.CompilerType> object for the supported programming language.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="b59dd-155">次のコード例は、抽象型から継承する簡単なビルド プロバイダーの実装を示しています。<xref:System.Web.Compilation.BuildProvider>基本クラスです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-155">The following code example illustrates a simple build provider implementation, inheriting from the abstract <xref:System.Web.Compilation.BuildProvider> base class.</span></span> <span data-ttu-id="b59dd-156">ビルド プロバイダーは、 <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>、 <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>、および<xref:System.Web.Compilation.BuildProvider.GenerateCode%2A>基底クラスのメンバーです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-156">The build provider overrides the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>, <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>, and <xref:System.Web.Compilation.BuildProvider.GenerateCode%2A> members of the base class.</span></span>  
  
 [!code-csharp[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/CS/Class1.cs#2)]
 [!code-vb[System.Web.Compilation.SampleBuildProvider_2#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.SampleBuildProvider_2/VB/Class1.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenReader" />
        <altmember cref="Overload:System.Web.Compilation.BuildProvider.OpenStream" />
        <altmember cref="T:System.Web.Compilation.AssemblyBuilder" />
      </Docs>
    </Member>
    <Member MemberName="GetCodeCompileUnit">
      <MemberSignature Language="C#" Value="protected internal virtual System.CodeDom.CodeCompileUnit GetCodeCompileUnit (out System.Collections.IDictionary linePragmasTable);" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig newslot virtual instance class System.CodeDom.CodeCompileUnit GetCodeCompileUnit([out] class System.Collections.IDictionary&amp; linePragmasTable) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCodeCompileUnit(System.Collections.IDictionary@)" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overridable Function GetCodeCompileUnit (ByRef linePragmasTable As IDictionary) As CodeCompileUnit" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; virtual System::CodeDom::CodeCompileUnit ^ GetCodeCompileUnit([Runtime::InteropServices::Out] System::Collections::IDictionary ^ % linePragmasTable);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.CodeDom.CodeCompileUnit</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="linePragmasTable" Type="System.Collections.IDictionary&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="linePragmasTable">
          <span data-ttu-id="b59dd-157">このメソッドから制御が戻った時点で、ソース コードのすべての関連付けられた行番号と行プラグマを格納したディクショナリが含まれます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-157">When this method returns, contains a dictionary that contains all associated line numbers and line pragmas of the source code.</span>
          </span>
          <span data-ttu-id="b59dd-158">このパラメーターは初期化せずに渡されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-158">This parameter is passed uninitialized.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-159">生成された CodeDOM グラフのコンテナーを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-159">Represents the container for the generated CodeDOM graph.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-160">
            <see cref="T:System.Web.Compilation.BuildProvider" /> インスタンスによって生成される CodeDOM グラフのコンテナー。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-160">The container for the CodeDOM graph that is generated by the <see cref="T:System.Web.Compilation.BuildProvider" /> instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-161">このメソッドを使用できます、<xref:System.Web.Compilation.ClientBuildManager>クラスの構文の強調表示とデザイナーは、Visual Studio でサポートします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-161">This method can be used through the <xref:System.Web.Compilation.ClientBuildManager> class for syntax highlighting and designer support in Visual Studio.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCustomString">
      <MemberSignature Language="C#" Value="public virtual string GetCustomString (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string GetCustomString(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetCustomString (results As CompilerResults) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ GetCustomString(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b59dd-162">ビルド プロバイダーの仮想パスのコンパイル結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-162">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-163">コンパイルしたアセンブリに保存される文字列を生成します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-163">Generates a string to be persisted in the compiled assembly.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-164">ビルド環境内に保持される文字列。または、<see cref="T:System.Web.Compilation.BuildProvider" /> インスタンスが <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" /> を実装しない場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-164">A string to be persisted in the build environment, or <see langword="null" /> if the <see cref="T:System.Web.Compilation.BuildProvider" /> instance does not implement <see cref="M:System.Web.Compilation.BuildProvider.GetCustomString(System.CodeDom.Compiler.CompilerResults)" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-165"><xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A>のメソッド、<xref:System.Web.Compilation.BuildManager>オブジェクトは、入力の仮想パス、および呼び出し用のビルド プロバイダーのインスタンスを作成、<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>メソッドを<xref:System.Web.Compilation.BuildProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-165">The <xref:System.Web.Compilation.BuildManager.GetCompiledCustomString%2A> method of a <xref:System.Web.Compilation.BuildManager> object creates an instance of a build provider for an input virtual path, and calls the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method on the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="b59dd-166">基本<xref:System.Web.Compilation.BuildProvider>クラスを返します`null`の<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>メソッド、ことを示す<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>は実装されていません。</span><span class="sxs-lookup"><span data-stu-id="b59dd-166">The base <xref:System.Web.Compilation.BuildProvider> class returns `null` for the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method, indicating that <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> is not implemented.</span></span>  
  
 <span data-ttu-id="b59dd-167">特定のビルド プロバイダーの実装を実装できます<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>の代わりに、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-167">Certain build provider implementations can implement <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> in place of the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="b59dd-168">A<xref:System.Web.Compilation.BuildProvider>オブジェクトを使用して通常<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>を返す、<xref:System.Type>仮想パスのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-168">A <xref:System.Web.Compilation.BuildProvider> object typically uses <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> to return a <xref:System.Type> object for a virtual path.</span></span> <span data-ttu-id="b59dd-169">ただし、<xref:System.Web.Compilation.BuildProvider.GetCustomString%2A>メソッドを示すために使用できます、<xref:System.Web.Compilation.BuildProvider>仮想パスからオブジェクトが複数の型を生成できます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-169">However, the <xref:System.Web.Compilation.BuildProvider.GetCustomString%2A> method can be used to indicate that a <xref:System.Web.Compilation.BuildProvider> object can generate multiple types from a virtual path.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="M:System.Web.Compilation.BuildManager.GetCompiledCustomString(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerType">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerType ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerType() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerType () As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerType();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-170">アプリケーション内の既定言語に関するコンパイラの設定値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-170">Returns the compiler settings for the default language in the application.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-171">アプリケーション内の既定言語に関するコンパイラの設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-171">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the default language in the application.</span>
          </span>
          <span data-ttu-id="b59dd-172">基本クラスは、アプリケーションの構成ファイルに基づいてコンパイラの既定値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-172">The base class returns the default compiler based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-173">使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>ビルド プロバイダーのコンパイラの既定値の型をチェックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-173">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span> <span data-ttu-id="b59dd-174">使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>ビルド プロバイダーの特定の言語名で構成されているコンパイラの型をチェックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-174">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in a build provider for a specific language name.</span></span>  
  
 <span data-ttu-id="b59dd-175">基本<xref:System.Web.Compilation.BuildProvider>クラスは、既定値の型を使用してコンパイラによって異なる、`defaultLanguage`属性の値は、アプリケーション構成ファイルのセクションでします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-175">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the `defaultLanguage` attribute value in the  section of the application configuration file.</span></span> <span data-ttu-id="b59dd-176">使用してコンパイラの既定値の型を設定する compilation セクション内の既定の言語設定がない場合、<xref:Microsoft.VisualBasic.VBCodeProvider>言語プロバイダー。</span><span class="sxs-lookup"><span data-stu-id="b59dd-176">If there is no default language setting in the compilation section, the default compiler type is set using the <xref:Microsoft.VisualBasic.VBCodeProvider> language provider.</span></span>  
  
 <span data-ttu-id="b59dd-177">派生している場合、<xref:System.Web.Compilation.BuildProvider>使用できるクラス、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>を設定する、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>実装内のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-177">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property within your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="GetDefaultCompilerTypeForLanguage">
      <MemberSignature Language="C#" Value="protected System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage (string language);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.Web.Compilation.CompilerType GetDefaultCompilerTypeForLanguage(string language) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function GetDefaultCompilerTypeForLanguage (language As String) As CompilerType" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::Web::Compilation::CompilerType ^ GetDefaultCompilerTypeForLanguage(System::String ^ language);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.CompilerType</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="language" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="language">
          <span data-ttu-id="b59dd-178">コード言語の名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-178">A code language name.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-179">指定された言語に基づいて、ビルド プロバイダーのコンパイラ設定値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-179">Returns the compiler settings for the build provider based on the specified language.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-180">指定された言語に基づくビルド プロバイダーのコンパイラ設定値を表す <see cref="T:System.Web.Compilation.CompilerType" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-180">A <see cref="T:System.Web.Compilation.CompilerType" /> that represents the compiler settings for the build provider based on the specified language.</span>
          </span>
          <span data-ttu-id="b59dd-181">基本クラスは、アプリケーションの構成ファイルに基づいて、その言語の既定コンパイラ設定値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-181">The base class returns the default compiler settings for the language based on the application configuration file.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-182">使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>ビルド プロバイダーの特定の言語名で構成されているコンパイラの型をチェックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-182">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> method to examine the compiler type configured in the build provider for a specific language name.</span></span> <span data-ttu-id="b59dd-183">使用して、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A>ビルド プロバイダーのコンパイラの既定値の型をチェックするメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-183">Use the <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerType%2A> method to examine the default compiler type for a build provider.</span></span>  
  
 <span data-ttu-id="b59dd-184">基本<xref:System.Web.Compilation.BuildProvider>クラスは、既定値の型を使用してコンパイラによって異なる、<xref:System.Web.Configuration.Compiler>内の要素、<xref:System.Web.Configuration.CompilationSection.Compilers%2A>のプロパティ、<xref:System.Web.Configuration.CompilationSection>構成ファイルのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-184">The base <xref:System.Web.Compilation.BuildProvider> class determines the default compiler type using the <xref:System.Web.Configuration.Compiler> elements in the <xref:System.Web.Configuration.CompilationSection.Compilers%2A> property of the <xref:System.Web.Configuration.CompilationSection> object for the configuration file.</span></span> <span data-ttu-id="b59dd-185">これは、およびの構成ファイルのセクションでは、要素内の要素を確認するのには等価です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-185">This is equivalent to examining the  elements in the  and the  elements in the  sections of the configuration file.</span></span> <span data-ttu-id="b59dd-186">たとえば、 `language` VB、値の基本クラスのメソッドを返します、<xref:System.Web.Compilation.CompilerType>オブジェクトのインスタンスの構成済みの設定に対応する<xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-186">For example, for the `language` value VB, the base class method returns a <xref:System.Web.Compilation.CompilerType> object that corresponds to the configured settings for an instance of <xref:Microsoft.VisualBasic.VBCodeProvider?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="b59dd-187">継承する場合、<xref:System.Web.Compilation.BuildProvider>使用できるクラス、<xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A>を設定する、<xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A>実装でサポートされる言語のプロパティの値。</span><span class="sxs-lookup"><span data-stu-id="b59dd-187">When you derive from the <xref:System.Web.Compilation.BuildProvider> class, you can use <xref:System.Web.Compilation.BuildProvider.GetDefaultCompilerTypeForLanguage%2A> to set the <xref:System.Web.Compilation.BuildProvider.CodeCompilerType%2A> property value for the language supported by your implementation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="b59dd-188">
            <paramref name="language" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-188">
              <paramref name="language" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.Web.HttpException">
          <span data-ttu-id="b59dd-189">
            <paramref name="language" /> が、そのビルド プロバイダーに対して構成されているコンパイラと一致しません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-189">
              <paramref name="language" /> does not match a configured compiler for the build provider.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Compilation.CompilerType" />
        <altmember cref="M:System.Web.Compilation.BuildProvider.GetDefaultCompilerType" />
        <altmember cref="P:System.Web.Configuration.CompilationSection.Compilers" />
        <altmember cref="T:System.Web.Configuration.Compiler" />
      </Docs>
    </Member>
    <Member MemberName="GetGeneratedType">
      <MemberSignature Language="C#" Value="public virtual Type GetGeneratedType (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Type GetGeneratedType(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetGeneratedType(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetGeneratedType (results As CompilerResults) As Type" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual Type ^ GetGeneratedType(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Type</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b59dd-190">ビルド プロバイダーの仮想パスのコンパイル結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-190">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-191">仮想パスからビルド プロバイダーによって生成される型を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-191">Returns a type generated by the build provider from the virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-192">仮想パスのビルド プロバイダーによって生成される型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-192">The type that is generated by the build provider for the virtual path.</span>
          </span>
          <span data-ttu-id="b59dd-193">基本クラスでは、<see langword="null" /> が返されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-193">The base class returns <see langword="null" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-194">.Aspx ファイルなどの Web コンテンツのソース コードを生成するビルド プロバイダーを実装するのには、派生クラスを<xref:System.Web.Compilation.BuildProvider>クラスし、オーバーライド、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>ビルド プロバイダーによって生成された型を返すメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-194">To implement a build provider that generates source code for Web content such as .aspx files, derive a class from the <xref:System.Web.Compilation.BuildProvider> class and override the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method to return the type generated by the build provider.</span></span>  
  
 <span data-ttu-id="b59dd-195">ASP.NET ビルド システムが各ビルド プロバイダーのファイルをコンパイルし、生成、<xref:System.CodeDom.Compiler.CompilerResults>に渡されるオブジェクト、<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-195">The ASP.NET build system compiles files for each build provider, and generates a <xref:System.CodeDom.Compiler.CompilerResults> object, which is passed to the <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> method.</span></span> <span data-ttu-id="b59dd-196">通常、ビルド プロバイダーの<xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A>実装を使用して、<xref:System.Reflection.Assembly.GetType%2A>メソッドを<xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>入力のプロパティ`results`指定された型を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-196">Typically, a build provider's <xref:System.Web.Compilation.BuildProvider.GetGeneratedType%2A> implementation uses the <xref:System.Reflection.Assembly.GetType%2A> method on the <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> property of the input `results` object to return the provided type.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
      </Docs>
    </Member>
    <Member MemberName="GetResultFlags">
      <MemberSignature Language="C#" Value="public virtual System.Web.Compilation.BuildProviderResultFlags GetResultFlags (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.Web.Compilation.BuildProviderResultFlags GetResultFlags(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.GetResultFlags(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetResultFlags (results As CompilerResults) As BuildProviderResultFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::Compilation::BuildProviderResultFlags GetResultFlags(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.BuildProviderResultFlags</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b59dd-197">ビルド プロバイダーの仮想パスのコンパイル結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-197">The compilation results for the build provider's virtual path.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-198">仮想パスがビルドされたときに必要なアクションを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-198">Returns a value indicating actions required when a virtual path is built.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-199">ASP.NET ビルド環境で仮想パスがビルドされた後に必要なアクションを示す <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> の値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-199">A <see cref="T:System.Web.Compilation.BuildProviderResultFlags" /> value indicating actions required after the virtual path is built within the ASP.NET build environment.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-200"><xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>のインスタンスを使用する場合、メソッドが ASP.NET ビルド環境によって使用される、<xref:System.Web.Compilation.BuildProvider>ファイルをビルドおよびコンパイル済みのアセンブリをロードするクラス。</span><span class="sxs-lookup"><span data-stu-id="b59dd-200">The <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method is used by the ASP.NET build environment when using instances of the <xref:System.Web.Compilation.BuildProvider> class to build files and load the compiled assemblies.</span></span>  
  
 <span data-ttu-id="b59dd-201">基本<xref:System.Web.Compilation.BuildProvider>クラスのメソッドを返します、<xref:System.Web.Compilation.BuildProviderResultFlags.Default>特別な操作が不要である仮想パスが構築されたときを示す、フィールドの値。</span><span class="sxs-lookup"><span data-stu-id="b59dd-201">The base <xref:System.Web.Compilation.BuildProvider> class method returns the <xref:System.Web.Compilation.BuildProviderResultFlags.Default> field value, indicating that no special action is required when the virtual path is built.</span></span>  
  
 <span data-ttu-id="b59dd-202">派生している場合、<xref:System.Web.Compilation.BuildProvider>実装するクラス、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>別返すメソッドを<xref:System.Web.Compilation.BuildProviderResultFlags>カスタム ファイルの種類または仮想パスの値。</span><span class="sxs-lookup"><span data-stu-id="b59dd-202">When deriving from the <xref:System.Web.Compilation.BuildProvider> class, you can implement the <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method to return a different <xref:System.Web.Compilation.BuildProviderResultFlags> value for your custom file type or virtual path.</span></span> <span data-ttu-id="b59dd-203">たとえば場合の再構築、仮想パスが必要ですを含む、<xref:System.AppDomain>オブジェクトを再読み込みされ、返すことができます、<xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange>から列挙値、<xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-203">For example, if a rebuild of your virtual path requires the containing <xref:System.AppDomain> object to be reloaded, you can return the <xref:System.Web.Compilation.BuildProviderResultFlags.ShutdownAppDomainOnChange> enumeration value from your <xref:System.Web.Compilation.BuildProvider.GetResultFlags%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.CodeDom.Compiler.CompilerResults" />
        <altmember cref="T:System.Web.Compilation.BuildProviderResultFlags" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenReader">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-204">仮想パスから読み込むためのテキスト リーダーを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-204">Opens a text reader for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader () As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-205">現在のビルド プロバイダー オブジェクトの仮想パスから読み込むためのテキスト リーダーを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-205">Opens a text reader for reading from the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-206">
            <see cref="T:System.IO.TextReader" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-206">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-207">使用して、<xref:System.IO.TextReader.Read%2A>メソッドで返された<xref:System.IO.TextReader>オブジェクトの内容を読み取る、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティを<xref:System.Web.Compilation.BuildProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-207">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property for a <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="b59dd-208">呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>メソッドを使用する必要あります、<xref:System.IO.TextReader.Close%2A>を終了するメソッド、<xref:System.IO.TextReader>オブジェクトし、関連付けられたシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-208">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenReader">
      <MemberSignature Language="C#" Value="protected System.IO.TextReader OpenReader (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.TextReader OpenReader(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenReader(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenReader (virtualPath As String) As TextReader" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::TextReader ^ OpenReader(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.TextReader</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="b59dd-209">読み込む仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-209">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-210">指定された仮想パスから読み込むためのテキスト リーダーを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-210">Opens a text reader for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-211">指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.TextReader" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-211">An open <see cref="T:System.IO.TextReader" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-212">使用して、<xref:System.IO.TextReader.Read%2A>メソッドで返された<xref:System.IO.TextReader>仮想パスの内容を読み取るためのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-212">Use the <xref:System.IO.TextReader.Read%2A> method on the returned <xref:System.IO.TextReader> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="b59dd-213">呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenReader%2A>メソッドを使用する必要あります、<xref:System.IO.TextReader.Close%2A>を終了するメソッド、<xref:System.IO.TextReader>オブジェクトし、関連付けられたシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-213">After calling the <xref:System.Web.Compilation.BuildProvider.OpenReader%2A> method, you must use the <xref:System.IO.TextReader.Close%2A> method to close the <xref:System.IO.TextReader> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.TextReader" />
      </Docs>
    </Member>
    <MemberGroup MemberName="OpenStream">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-214">仮想パスから読み込むためのストリームを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-214">Opens a stream for reading from a virtual path.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream () As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-215">現在のビルド プロバイダー オブジェクトの仮想パスを読み込むためのストリームを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-215">Opens a stream for reading the virtual path of the current build provider object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-216">
            <see cref="T:System.IO.Stream" /> の内容を読み込むために使用できる、開かれた <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-216">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the <see cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-217">使用して、<xref:System.IO.Stream.Read%2A>メソッドで返された<xref:System.IO.Stream>の仮想パスの内容を読み取るためのオブジェクト、<xref:System.Web.Compilation.BuildProvider>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-217">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path for the <xref:System.Web.Compilation.BuildProvider> object.</span></span>  
  
 <span data-ttu-id="b59dd-218">呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>メソッドを使用する必要あります、<xref:System.IO.Stream.Close%2A>を終了するメソッド、<xref:System.IO.Stream>オブジェクトし、関連付けられたシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-218">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="OpenStream">
      <MemberSignature Language="C#" Value="protected System.IO.Stream OpenStream (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig instance class System.IO.Stream OpenStream(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.OpenStream(System.String)" />
      <MemberSignature Language="VB.NET" Value="Protected Function OpenStream (virtualPath As String) As Stream" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; System::IO::Stream ^ OpenStream(System::String ^ virtualPath);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IO.Stream</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="b59dd-219">読み込む仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-219">The virtual path to read.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-220">指定された仮想パスから読み込むためのストリームを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-220">Opens a stream for reading from a specified virtual path.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="b59dd-221">指定された仮想パスの内容を読み込むために使用できる、開かれた <see cref="T:System.IO.Stream" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-221">An open <see cref="T:System.IO.Stream" /> that can be used to read the contents of the specified virtual path.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-222">使用して、<xref:System.IO.Stream.Read%2A>メソッドで返された<xref:System.IO.Stream>仮想パスの内容を読み取るためのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-222">Use the <xref:System.IO.Stream.Read%2A> method on the returned <xref:System.IO.Stream> object to read the contents of the virtual path.</span></span>  
  
 <span data-ttu-id="b59dd-223">呼び出した後、<xref:System.Web.Compilation.BuildProvider.OpenStream%2A>メソッドを使用する必要あります、<xref:System.IO.Stream.Close%2A>を終了するメソッド、<xref:System.IO.Stream>オブジェクトし、関連付けられたシステム リソースを解放します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-223">After calling the <xref:System.Web.Compilation.BuildProvider.OpenStream%2A> method, you must use the <xref:System.IO.Stream.Close%2A> method to close the <xref:System.IO.Stream> object and free associated system resources.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.IO.Stream" />
      </Docs>
    </Member>
    <Member MemberName="ProcessCompileErrors">
      <MemberSignature Language="C#" Value="public virtual void ProcessCompileErrors (System.CodeDom.Compiler.CompilerResults results);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ProcessCompileErrors(class System.CodeDom.Compiler.CompilerResults results) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.ProcessCompileErrors(System.CodeDom.Compiler.CompilerResults)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub ProcessCompileErrors (results As CompilerResults)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void ProcessCompileErrors(System::CodeDom::Compiler::CompilerResults ^ results);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="results" Type="System.CodeDom.Compiler.CompilerResults" />
      </Parameters>
      <Docs>
        <param name="results">
          <span data-ttu-id="b59dd-224">コンパイラの結果。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-224">Compiler results.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-225">派生クラスでオーバーライドされると、コンパイラのエラー メッセージを見直すことができ、より多くの情報を提供するようにメッセージを変更できます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-225">When overridden in a derived class, enables you to review compiler error messages so that you can modify them to provide more information.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-226">通常、エラー テキストをユーザーにとってより便利に行うために表示される前に、コンパイラ エラーを修正できますようには、このメソッドをオーバーライドします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-226">You typically override this method so that you can modify compiler errors before they are displayed in order to make the error text more helpful to the user.</span></span> <span data-ttu-id="b59dd-227">これは、特定のエラーのコンテキストを知るし、それらを修正する方法についてユーザーに情報を提供することができますのシナリオで役立ちます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-227">This is useful in scenarios where you know the context of certain errors and can provide information to the user about how to fix them.</span></span> <span data-ttu-id="b59dd-228">元のコンパイラ エラー メッセージは通常、特定の言語コンストラクトに固有、可能性がありますいない実際的な原因やソリューション明白なユーザーにします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-228">The original compiler error message is usually specific to a particular language construct and might not make the real cause or solution obvious to the user.</span></span>  
  
 <span data-ttu-id="b59dd-229">使用して、エラーにアクセスすることができます、<xref:System.CodeDom.Compiler.CompilerResults>メソッドに渡されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="b59dd-229">You can access the errors by using the <xref:System.CodeDom.Compiler.CompilerResults> object that is passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReferencedAssemblies">
      <MemberSignature Language="C#" Value="protected System.Collections.ICollection ReferencedAssemblies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection ReferencedAssemblies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.ReferencedAssemblies" />
      <MemberSignature Language="VB.NET" Value="Protected ReadOnly Property ReferencedAssemblies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; property System::Collections::ICollection ^ ReferencedAssemblies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-230">ビルド プロバイダーが生成するソース コードと共にコンパイルするアセンブリを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-230">Represents the assemblies to compile with the source generated by the build provider.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b59dd-231">ビルド プロバイダーが生成するソース コードによって参照されるアセンブリの読み取り専用コレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-231">A read-only collection of assemblies that can be referenced by the source code generated by the build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-232">ASP.NET は、環境によって初期化されたビルド プロバイダーによって参照されるアセンブリのコレクションをビルドします。</span><span class="sxs-lookup"><span data-stu-id="b59dd-232">The ASP.NET build environment initializes the collection of assemblies that are available for reference by the build provider.</span></span> <span data-ttu-id="b59dd-233">ビルド プロバイダーによって生成されたソース コードでは、参照されたアセンブリでパブリック型を使用できます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-233">The source code generated by a build provider can use public types in the referenced assemblies.</span></span> <span data-ttu-id="b59dd-234">参照アセンブリのコレクションは、他の ASP.NET アプリケーションでビルドされたアセンブリおよび構成ファイル内の要素の一覧にアセンブリで構成されます。</span><span class="sxs-lookup"><span data-stu-id="b59dd-234">The referenced assembly collection consists of other assemblies built in the ASP.NET application, and assemblies listed in the  element in the configuration file.</span></span>  
  
 <span data-ttu-id="b59dd-235">ビルド プロバイダーを使用して、追加のアセンブリに追加のビルド プロバイダーは、追加のアセンブリを参照するソース コードを生成する場合、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-235">If the build provider generates source code that references additional assemblies, the build provider adds the additional assemblies using the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span> <span data-ttu-id="b59dd-236">ASP.NET ビルド環境では、プロバイダーとの参照で使用できるアセンブリの既定のコレクションをビルドによって追加された両方の参照先アセンブリを使用してアセンブリのコンパイル時に外部のタイプを解決します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-236">The ASP.NET build environment resolves external types during assembly compilation using both the referenced assemblies added by build providers and the default collection of assemblies available for reference.</span></span>  
  
 <span data-ttu-id="b59dd-237"><xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A>コレクションが参照に対してを介して他のビルド プロバイダーによって追加されるアセンブリが含まれない、<xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="b59dd-237">The <xref:System.Web.Compilation.BuildProvider.ReferencedAssemblies%2A> collection does not include assemblies that are added for reference by other build providers through the <xref:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference%2A> method.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Web.Compilation.AssemblyBuilder.AddAssemblyReference(System.Reflection.Assembly)" />
        <altmember cref="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      </Docs>
    </Member>
    <Member MemberName="RegisterBuildProvider">
      <MemberSignature Language="C#" Value="public static void RegisterBuildProvider (string extension, Type providerType);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void RegisterBuildProvider(string extension, class System.Type providerType) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.BuildProvider.RegisterBuildProvider(System.String,System.Type)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub RegisterBuildProvider (extension As String, providerType As Type)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void RegisterBuildProvider(System::String ^ extension, Type ^ providerType);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="extension" Type="System.String" />
        <Parameter Name="providerType" Type="System.Type" />
      </Parameters>
      <Docs>
        <param name="extension">
          <span data-ttu-id="b59dd-238">ビルド プロバイダーの対象のファイル名拡張子。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-238">The file-name extension that the build provider is for.</span>
          </span>
        </param>
        <param name="providerType">
          <span data-ttu-id="b59dd-239">ビルド プロバイダー クラス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-239">The build provider class.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="b59dd-240">ビルド プロバイダーを登録します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-240">Registers a build provider.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-241">このメソッドを使用するには、Web.config ファイルで定義することではなくビルド プロバイダーを登録します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-241">You can use this method to register build providers instead of defining them in the Web.config file.</span></span> <span data-ttu-id="b59dd-242">ビルド プロバイダーの詳細については、次を参照してください。、<xref:System.Web.Compilation.BuildProvider>クラスと[buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-242">For more information about build providers, see the <xref:System.Web.Compilation.BuildProvider> class and [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="protected internal string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Protected Friend ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-243">このビルド プロバイダーの実装で構築されるファイルを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-243">Represents the file to be built by this build provider implementation.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b59dd-244">このビルド プロバイダーがコンパイルするファイルの仮想パスを示す、読み取り専用の文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-244">A read-only string that specifies the virtual path of a file to be compiled by this build provider.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-245">仮想パス、<xref:System.Web.Compilation.BuildProvider>オブジェクトは、ビルド プロバイダーによってコンパイルされるファイルへのパス。</span><span class="sxs-lookup"><span data-stu-id="b59dd-245">The virtual path of a <xref:System.Web.Compilation.BuildProvider> object is the path to the file that is being compiled by the build provider.</span></span> <span data-ttu-id="b59dd-246">カスタム構成した場合など、 <xref:System.Web.Compilation.BuildProvider> 、Web サイトにより、WebSite1 という名前は、Web サイトに Example.abc、という名前のファイルが含まれている場合、.abc のカスタム拡張機能がある Web サイトのすべてのファイルを作成するクラス、<xref:System.Web.Compilation.BuildProvider.VirtualPath%2A>プロパティ値を格納`/WebSite1/Example.abc`です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-246">For example, if you have configured a custom <xref:System.Web.Compilation.BuildProvider> class to build all files in the Web site with the custom extension of .abc, if your Web site is named WebSite1, and the Web site contains a file named Example.abc, the <xref:System.Web.Compilation.BuildProvider.VirtualPath%2A> property contains the value `/WebSite1/Example.abc`.</span></span>  
  
 <span data-ttu-id="b59dd-247">アプリケーション内の各ファイルのファイル拡張子は、ファイルの種類とファイルの種類に対応するビルド プロバイダーを決定します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-247">The file extension of each file within the application determines the file type, and the corresponding build provider for the file type.</span></span> <span data-ttu-id="b59dd-248">ASP.NET ビルド環境によって初期化、<xref:System.Web.Compilation.BuildProvider>オブジェクトの各ファイルのファイルの種類に基づいてを使用して、<xref:System.Web.Compilation.BuildProvider>各ファイルのソースを生成するメソッド。</span><span class="sxs-lookup"><span data-stu-id="b59dd-248">The ASP.NET build environment initializes a <xref:System.Web.Compilation.BuildProvider> object for each file based on the file type, and uses the <xref:System.Web.Compilation.BuildProvider> methods to generate source for each file.</span></span>  
  
 <span data-ttu-id="b59dd-249">ビルド プロバイダーの構成の詳細については、次を参照してください。 [buildProviders 要素 (ASP.NET 設定スキーマ) のコンパイル](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384)です。</span><span class="sxs-lookup"><span data-stu-id="b59dd-249">For more information about configuring a build provider, see [buildProviders Element for compilation (ASP.NET Settings Schema)](http://msdn.microsoft.com/library/40fa889d-5412-487a-b6a9-21eb011c2384).</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPathDependencies">
      <MemberSignature Language="C#" Value="public virtual System.Collections.ICollection VirtualPathDependencies { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ICollection VirtualPathDependencies" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.BuildProvider.VirtualPathDependencies" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property VirtualPathDependencies As ICollection" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ICollection ^ VirtualPathDependencies { System::Collections::ICollection ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ICollection</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="b59dd-250">ビルド プロバイダーがコードを生成する前に構築する必要がある仮想パスのコレクションを表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-250">Represents a collection of virtual paths that must be built before the build provider generates code.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="b59dd-251">ビルド プロバイダーのこのインスタンスが依存する仮想パスを表す文字列から成る、読み取り専用のコレクション。</span>
          <span class="sxs-lookup">
            <span data-stu-id="b59dd-251">A read-only collection of strings, representing the virtual paths that this instance of the build provider is dependent on.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="b59dd-252"><xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>プロパティは使用する前にコンパイルする必要がある仮想パスのコレクション、<xref:System.Web.Compilation.BuildProvider>インスタンスは、ソース コードを生成します。</span><span class="sxs-lookup"><span data-stu-id="b59dd-252">The <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> property is a collection of virtual paths that must be compiled before the <xref:System.Web.Compilation.BuildProvider> instance generates source code.</span></span> <span data-ttu-id="b59dd-253">内の仮想パスからアセンブリ<xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A>のコンパイルへの参照として追加されます、<xref:System.Web.Compilation.BuildProvider>インスタンス。</span><span class="sxs-lookup"><span data-stu-id="b59dd-253">The assemblies from the virtual paths in <xref:System.Web.Compilation.BuildProvider.VirtualPathDependencies%2A> are added as references to the compilation for the <xref:System.Web.Compilation.BuildProvider> instance.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Hosting.VirtualFile" />
        <altmember cref="P:System.Web.Hosting.VirtualFileBase.VirtualPath" />
      </Docs>
    </Member>
  </Members>
</Type>