<Type Name="ExpressionPrefixAttribute" FullName="System.Web.Compilation.ExpressionPrefixAttribute">
  <Metadata><Meta Name="ms.openlocfilehash" Value="4c5835d9a42030f5246c3641fc7833e7d96e7ce0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69097002" /></Metadata><TypeSignature Language="C#" Value="public sealed class ExpressionPrefixAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit ExpressionPrefixAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ExpressionPrefixAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class ExpressionPrefixAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class ExpressionPrefixAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type ExpressionPrefixAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=false)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>式ビルダーで使用するプレフィックス属性を指定します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 デザイン<xref:System.Web.Compilation.ExpressionPrefixAttribute>時に、構成ファイルで定義されていない式を使用して、クラスが使用されます。 プロパティを使用して、 <xref:System.Web.Compilation.ExpressionPrefixAttribute>オブジェクトに関連付けられているプレフィックスの名前を取得します。 <xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A> 式ビルダーは、次の形式のステートメントを検索します。  
  
 `<%$ [expressionPrefix]:[expressionValue] %>`  
  
 式ビルダーは、式のプレフィックスに基づいて、プロパティ割り当てのコードを生成します。 パラメーター `expressionPrefix`は、構成された式ビルダーを参照します。このビルダーは、構成<xref:System.Web.Compilation.ExpressionPrefixAttribute>ファイルまたはオブジェクトを使用して定義されています。  
  
   
  
## Examples  
 クラスの<xref:System.Web.Compilation.ExpressionPrefixAttribute>使用方法を次のコード例に示します。 属性は、 <xref:System.Web.Compilation.ExpressionBuilder>抽象クラスを実装するカスタム式ビルダーに適用されます。 のこの実装<xref:System.Web.Compilation.ExpressionBuilder>は、式に渡される評価済みのステートメントを返します。 この例を実行するには、最初にカスタム式ビルダーを web.config ファイルに登録する必要があります。 最初のコード例では、カスタム式ビルダーを web.config ファイルに登録する方法を示します。  
  
```  
<configuration>  
    <system.web>  
       <compilation>  
          <expressionBuilders>  
              <add expressionPrefix="MyCustomExpression"  
               type="MyCustomExpressionBuilder"/>  
          </expressionBuilders>  
       </compilation>  
    </system.web>  
</configuration>  
```  
  
 2番目のコード例は、.aspx ファイルで式を参照する方法を示しています。  
  
```  
<asp:Label ID="Label1" runat="server"   
Text="<%$ MyCustomExpression:Hello, world! %>" />  
```  
  
 3番目のコード例は、から<xref:System.Web.Compilation.ExpressionBuilder>派生することによって、カスタマイズされた式ビルダーを開発する方法を示しています。 このコード例を実行するには、クラスを App_Code フォルダーに配置する必要があります。  
  
 [!code-csharp[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/CS/MyExpressionBuilder.cs#1)] 
 [!code-vb[System.Web.Compilation.ExpressionBuilder#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ExpressionBuilder/VB/MyExpressionBuilder.vb#1)]   
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
    <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
    <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
    <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
    <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ExpressionPrefixAttribute (string expressionPrefix);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string expressionPrefix) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ExpressionPrefixAttribute.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (expressionPrefix As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ExpressionPrefixAttribute(System::String ^ expressionPrefix);" />
      <MemberSignature Language="F#" Value="new System.Web.Compilation.ExpressionPrefixAttribute : string -&gt; System.Web.Compilation.ExpressionPrefixAttribute" Usage="new System.Web.Compilation.ExpressionPrefixAttribute expressionPrefix" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="expressionPrefix" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="expressionPrefix">現在の <see cref="T:System.Web.Compilation.ExpressionBuilder" /> のプレフィックス。</param>
        <summary><see cref="T:System.Web.Compilation.ExpressionPrefixAttribute" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターを使用して、 <xref:System.Web.Compilation.ExpressionPrefixAttribute>プレフィックス識別子を使用してクラスのインスタンスを初期化します。 <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A> は、 <xref:System.Web.Compilation.ExpressionPrefixAttribute>クラスのパラメーターなしのコンストラクターです。 <xref:System.Web.Compilation.ExpressionPrefixAttribute.%23ctor%2A>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="expressionPrefix" /> は null か空の文字列 ("") です。</exception>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
    <Member MemberName="ExpressionPrefix">
      <MemberSignature Language="C#" Value="public string ExpressionPrefix { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string ExpressionPrefix" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExpressionPrefix As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ ExpressionPrefix { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExpressionPrefix : string" Usage="System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>現在の <see cref="T:System.Web.Compilation.ExpressionBuilder" /> オブジェクトのプレフィックス値を取得します。</summary>
        <value>構成済み <see cref="T:System.Web.Compilation.ExpressionBuilder" /> の式プレフィックス。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定し<xref:System.Web.Compilation.ExpressionPrefixAttribute.ExpressionPrefix%2A>た属性に関連付けられているプレフィックスの名前を取得するには、プロパティを使用します。  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.UI.Design.ExpressionEditor" />
        <altmember cref="T:System.Web.UI.Design.ExpressionEditorSheet" />
        <altmember cref="T:System.Web.UI.Design.AppSettingsExpressionEditor" />
        <altmember cref="T:System.Web.Compilation.ExpressionBuilder" />
        <altmember cref="P:System.Web.Configuration.ExpressionBuilder.ExpressionPrefix" />
      </Docs>
    </Member>
  </Members>
</Type>
