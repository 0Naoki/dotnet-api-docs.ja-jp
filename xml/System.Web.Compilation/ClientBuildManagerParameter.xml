<Type Name="ClientBuildManagerParameter" FullName="System.Web.Compilation.ClientBuildManagerParameter">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="f446c5dc9b0992ceb74d1fda206bb7cbf46db91d" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39850295" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ClientBuildManagerParameter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit ClientBuildManagerParameter extends System.Object" />
  <TypeSignature Language="DocId" Value="T:System.Web.Compilation.ClientBuildManagerParameter" />
  <TypeSignature Language="VB.NET" Value="Public Class ClientBuildManagerParameter" />
  <TypeSignature Language="C++ CLI" Value="public ref class ClientBuildManagerParameter" />
  <TypeSignature Language="F#" Value="type ClientBuildManagerParameter = class" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>プリコンパイル時に ASP.NET コンパイラに渡される値を格納します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ASP.NET Web ページとコード ファイルをプリコンパイルすると、ユーザーへの迅速な応答を容易にして、ソース コードを展開することがなく、サイトの展開を許可することができます。 ASP.NET Web サイトをプリコンパイルの詳細については、次を参照してください。 [ASP.NET Web サイト プロジェクト プリコンパイルの概要](http://msdn.microsoft.com/library/a88e56f9-b232-47c5-92e0-f9674ed15e5a)します。  
  
 <xref:System.Web.Compilation.ClientBuildManagerParameter>クラスはプリコンパイル時に使用される値を格納します。 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>プロパティは、アセンブリを構築する方法を決定します。 たとえば、設定<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>に<xref:System.Web.Compilation.PrecompilationFlags.Clean>を設定することも、コンパイル済みのコンポーネントを再コンパイル<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>ターゲット ディレクトリ内のすべてのコンポーネントを上書きする結果として得られるアセンブリを許可するようにします。 <xref:System.Web.Compilation.PrecompilationFlags>列挙子が、<xref:System.FlagsAttribute>メンバー値のビットごとの組み合わせを可能にする属性。 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>プロパティから 1 つ以上の値を含めることができます、<xref:System.Web.Compilation.PrecompilationFlags>プリコンパイル動作の組み合わせを指定する列挙体。  
  
 いずれか、<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>プロパティまたは<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>プロパティには、厳密な名前のアセンブリを作成する値が割り当てられます。 両方の値は、厳密な名前のアセンブリを作成するために設定する必要はありません。  
  
 A<xref:System.Web.Compilation.ClientBuildManagerParameter>にオブジェクトが渡される、<xref:System.Web.Compilation.ClientBuildManager>オブジェクト、<xref:System.Web.Compilation.ClientBuildManager.%23ctor%2A>コンス トラクター。  
  
   
  
## Examples  
 次のコード例は、あるコード例の一部、<xref:System.Web.Compilation.ClientBuildManager>クラスの概要。 この例で、<xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトが作成され、その値を設定します。 結果として得られるアセンブリのキー ファイルに基づいて厳密な名前になります、に従って、提供されたプリコンパイルは<xref:System.Web.Compilation.PrecompilationFlags>値。  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
    <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ClientBuildManagerParameter ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Compilation.ClientBuildManagerParameter.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ClientBuildManagerParameter();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.Web.Compilation.ClientBuildManagerParameter" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このコンス トラクターは、プロパティの値を初期化できません。 これらの値を設定する必要があります、 <xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>、<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>と<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>オブジェクトが作成された後のプロパティ。  
  
   
  
## Examples  
 次のコード例は、あるコード例の一部、<xref:System.Web.Compilation.ClientBuildManager>クラスの概要。 この例で、<xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトが作成され、その値を設定します。 結果として得られるアセンブリのキー ファイルに基づいて厳密な名前になります、に従って、提供されたプリコンパイルは<xref:System.Web.Compilation.PrecompilationFlags>値。  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ExcludedVirtualPaths">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.List&lt;string&gt; ExcludedVirtualPaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.List`1&lt;string&gt; ExcludedVirtualPaths" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ExcludedVirtualPaths As List(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::List&lt;System::String ^&gt; ^ ExcludedVirtualPaths { System::Collections::Generic::List&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ExcludedVirtualPaths : System.Collections.Generic.List&lt;string&gt;" Usage="System.Web.Compilation.ClientBuildManagerParameter.ExcludedVirtualPaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.List&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>除外される仮想パスを取得または設定します。</summary>
        <value>除外される仮想パス。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="PrecompilationFlags">
      <MemberSignature Language="C#" Value="public System.Web.Compilation.PrecompilationFlags PrecompilationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Web.Compilation.PrecompilationFlags PrecompilationFlags" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property PrecompilationFlags As PrecompilationFlags" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Compilation::PrecompilationFlags PrecompilationFlags { System::Web::Compilation::PrecompilationFlags get(); void set(System::Web::Compilation::PrecompilationFlags value); };" />
      <MemberSignature Language="F#" Value="member this.PrecompilationFlags : System.Web.Compilation.PrecompilationFlags with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Web.Compilation.PrecompilationFlags</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>プリコンパイル動作を決定するフラグを取得または設定します。</summary>
        <value>クライアント ビルドの <see cref="T:System.Web.Compilation.PrecompilationFlags" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>プロパティは、アセンブリを構築する方法を決定します。 たとえば、設定<xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>に<xref:System.Web.Compilation.PrecompilationFlags.Clean>を設定することも、コンパイル済みのコンポーネントを再コンパイル<xref:System.Web.Compilation.PrecompilationFlags.OverwriteTarget>ターゲット ディレクトリ内のすべてのコンポーネントを上書きする結果として得られるアセンブリを許可するようにします。 <xref:System.Web.Compilation.PrecompilationFlags>列挙子が、<xref:System.FlagsAttribute>メンバー値のビットごとの組み合わせを可能にする属性。 <xref:System.Web.Compilation.ClientBuildManagerParameter.PrecompilationFlags%2A>プロパティから 1 つ以上の値を含めることができます、<xref:System.Web.Compilation.PrecompilationFlags>プリコンパイル動作の組み合わせを指定する列挙体。  
  
   
  
## Examples  
 次のコード例は、あるコード例の一部、<xref:System.Web.Compilation.ClientBuildManager>クラスの概要。 この例で、<xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトが作成され、その値を設定します。 結果として得られるアセンブリのキー ファイルに基づいて厳密な名前になります、に従って、提供されたプリコンパイルは<xref:System.Web.Compilation.PrecompilationFlags>値。  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyContainer">
      <MemberSignature Language="C#" Value="public string StrongNameKeyContainer { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyContainer" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyContainer As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyContainer { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyContainer : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンパイル時に使用されるキー コンテナーを取得または設定します。</summary>
        <value>キー コンテナーの値を示す <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれか、<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>プロパティまたは<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>プロパティには、厳密な名前のアセンブリを作成する値が割り当てられます。 両方の値は、厳密な名前のアセンブリを作成するために設定する必要はありません。  
  
   
  
## Examples  
 次のコード例は、あるコード例のような<xref:System.Web.Compilation.ClientBuildManager>生成されたアセンブリは、指定したキー コンテナーに基づく厳密な名前になりますが、クラスの概要。 に従って提供されていることをプリコンパイルは<xref:System.Web.Compilation.PrecompilationFlags>値。  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/CS/source.cs#1)]
 [!code-vb[System.Web.Compilation.ClientBuildManager_2#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager_2/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
    <Member MemberName="StrongNameKeyFile">
      <MemberSignature Language="C#" Value="public string StrongNameKeyFile { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string StrongNameKeyFile" />
      <MemberSignature Language="DocId" Value="P:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberSignature Language="VB.NET" Value="Public Property StrongNameKeyFile As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ StrongNameKeyFile { System::String ^ get(); void set(System::String ^ value); };" />
      <MemberSignature Language="F#" Value="member this.StrongNameKeyFile : string with get, set" Usage="System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>set: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>コンパイル時に使用されるキー ファイルを取得または設定します。</summary>
        <value>キー ファイルの値を示す <see cref="T:System.String" />。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 いずれか、<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyContainer%2A>プロパティまたは<xref:System.Web.Compilation.ClientBuildManagerParameter.StrongNameKeyFile%2A>プロパティには、厳密な名前のアセンブリを作成する値が割り当てられます。 両方の値は、厳密な名前のアセンブリを作成するために設定する必要はありません。  
  
   
  
## Examples  
 次のコード例は、あるコード例の一部、<xref:System.Web.Compilation.ClientBuildManager>クラスの概要。 この例で、<xref:System.Web.Compilation.ClientBuildManagerParameter>オブジェクトが作成され、その値を設定します。 結果として得られるアセンブリのキー ファイルに基づいて厳密な名前になります、に従って、提供されたプリコンパイルは<xref:System.Web.Compilation.PrecompilationFlags>値。  
  
 [!code-csharp[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/csharp/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/CS/source.cs#2)]
 [!code-vb[System.Web.Compilation.ClientBuildManager#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/System.Web.Compilation.ClientBuildManager/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Compilation.ClientBuildManager" />
        <altmember cref="T:System.Web.Compilation.PrecompilationFlags" />
      </Docs>
    </Member>
  </Members>
</Type>