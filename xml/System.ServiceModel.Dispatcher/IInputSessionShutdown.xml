<Type Name="IInputSessionShutdown" FullName="System.ServiceModel.Dispatcher.IInputSessionShutdown">
  <TypeSignature Language="C#" Value="public interface IInputSessionShutdown" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IInputSessionShutdown" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.IInputSessionShutdown" />
  <TypeSignature Language="VB.NET" Value="Public Interface IInputSessionShutdown" />
  <TypeSignature Language="C++ CLI" Value="public interface class IInputSessionShutdown" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="72f23-101">入力セッションをシャットダウンするために実装する必要があるコントラクトを定義します。</span><span class="sxs-lookup"><span data-stu-id="72f23-101">Defines the contract that must be implemented to shut down an input session.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f23-102">セッションを閉じる前に送信メッセージを送信するには、双方向セッションの内部で <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> インターフェイスを使用します。</span><span class="sxs-lookup"><span data-stu-id="72f23-102">Use the <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown> interface inside a duplex session to send outbound messages prior to closing the session.</span></span> <span data-ttu-id="72f23-103">たとえば、クライアントがセッションを閉じる場合は、サービスが <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving%2A> を実装して、シャットダウンの前に通知を受け取ることができます。これにより、サービスは、返る前に通知メッセージを 1 つ送信できます。</span><span class="sxs-lookup"><span data-stu-id="72f23-103">For example, if a client closes a session the service can implement <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving%2A> to be notified prior to the shutdown, enabling the service to send one notification message prior to returning.</span></span> <span data-ttu-id="72f23-104">クライアントは受信確認の前に通知を受信し、チャネルを閉じることができます。</span><span class="sxs-lookup"><span data-stu-id="72f23-104">The client receives the notification prior to the acknowledgment that the client can close the channel.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName="ChannelFaulted">
      <MemberSignature Language="C#" Value="public void ChannelFaulted (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void ChannelFaulted(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub ChannelFaulted (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void ChannelFaulted(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="72f23-105">エラーが発生した <see cref="T:System.ServiceModel.IDuplexContextChannel" />。</span><span class="sxs-lookup"><span data-stu-id="72f23-105">The <see cref="T:System.ServiceModel.IDuplexContextChannel" /> that has faulted.</span></span></param>
        <summary><span data-ttu-id="72f23-106">チャネルのエラーを示します。</span><span class="sxs-lookup"><span data-stu-id="72f23-106">Indicates that the channel has faulted.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="72f23-107">チャネルでエラーが発生したときになんらかのカスタム動作を実行するには、<xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted%2A> メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="72f23-107">Use the <xref:System.ServiceModel.Dispatcher.IInputSessionShutdown.ChannelFaulted%2A> method to perform some custom behavior when a channel has faulted.</span></span> <span data-ttu-id="72f23-108">通常、チャネルは中止されます。</span><span class="sxs-lookup"><span data-stu-id="72f23-108">Typically, the channel is aborted.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DoneReceiving">
      <MemberSignature Language="C#" Value="public void DoneReceiving (System.ServiceModel.IDuplexContextChannel channel);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void DoneReceiving(class System.ServiceModel.IDuplexContextChannel channel) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.IInputSessionShutdown.DoneReceiving(System.ServiceModel.IDuplexContextChannel)" />
      <MemberSignature Language="VB.NET" Value="Public Sub DoneReceiving (channel As IDuplexContextChannel)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void DoneReceiving(System::ServiceModel::IDuplexContextChannel ^ channel);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="channel" Type="System.ServiceModel.IDuplexContextChannel" />
      </Parameters>
      <Docs>
        <param name="channel"><span data-ttu-id="72f23-109">受信を完了した <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" />。</span><span class="sxs-lookup"><span data-stu-id="72f23-109">The <see cref="T:System.ServiceModel.Channels.IDuplexSessionChannel" /> that is done receiving.</span></span></param>
        <summary><span data-ttu-id="72f23-110">双方向メッセージ交換の一部として、クライアント チャネルがメッセージを受信したことを示します。</span><span class="sxs-lookup"><span data-stu-id="72f23-110">Indicates when the client channel is done receiving messages as part of the duplex message exchange.</span></span></summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
  </Members>
</Type>