<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="ChannelDispatcherBase.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5c981febf306d296c8e0662e36557df9458314557.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">c981febf306d296c8e0662e36557df9458314557</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</source>
          <target state="translated">チャネルを受け入れてサービスと関連付けるチャネル ディスパッチャーの抽象基本クラス。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>This is used by developers who want to keep the <ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> programming model but replace the system-provided runtime.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> のプログラミング モデルを維持しながら、一方でシステムが提供するランタイムは置き換えようとする開発者は、このクラスを使用します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</source>
          <target state="translated">このようなアプリケーションでは、チャネルからメッセージを取得し、ユーザー定義のディスパッチャーでメッセージを直接処理します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>To use <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> , create a class derived from it, extend <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> and override <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph>, adding instances of your class derived from <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> to <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> を使用するには、このクラスから派生するクラスを作成し、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> を拡張し、<ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A&gt;</ph> をオーバーライドして、<ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> から派生するユーザー独自のクラスのインスタンスを <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> に追加します。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> and the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, associated with the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> object are available for inspection or modification through the <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> respectively.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> オブジェクトと関連付けられた <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> および <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> はそれぞれ、<ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A&gt;</ph> および <ph id="ph5">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> を通して、検査または変更を行うために使用できます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> or <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> methods when adding or removing a <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> item from its <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> コレクションに <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> 項目を追加するとき、またはコレクションから項目を削除するときに、<ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29&gt;</ph> は <ph id="ph4">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> メソッドまたは <ph id="ph5">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> メソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph> during shutdown before closing InstanceContexts.</source>
          <target state="translated">シャットダウンのとき、<ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> は、InstanceContext を閉じる前に <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A&gt;</ph> を呼び出します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase">
          <source><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</source>
          <target state="translated"><ph id="ph1">[!INCLUDE[indigo1](~/includes/indigo1-md.md)]</ph> は、この呼び出しを使用してデータグラム チャネルを閉じ、すべてのメッセージが InstanceContext に到着するのを待ちます。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service.</source>
          <target state="translated">サービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, attaches the channel dispatcher to a specific host.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーを特定のホストに結び付けます。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This method can only be set when the instance of the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated">このメソッドは、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態のときにのみ設定できます。これは、この状態が、変更可能で、かつ破棄されていない唯一の状態であるためです。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is added to its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> が <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> コレクションに追加されると、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to hook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>, and provides the value that should be returned from the <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> property.</source>
          <target state="translated">これにより、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> にはイベントをフックして <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> を検査する機会が与えられ、<ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A&gt;</ph> プロパティから返される必要のある値が提供されます。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">通信オブジェクトが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態です。または、ホストは既に設定されています。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source>When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているエンドポイント ディスパッチャーを削除します。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method during shutdown to give the dispatcher a chance to drain messages.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> は、シャットダウン時にこのメソッドを呼び出して、ディスパッチャーにメッセージをドレインする機会を与えます。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> uses this call to close datagram channels.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> は、この呼び出しを使用してデータグラム チャネルを閉じます。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>When overridden in a derived class, detaches the channel dispatcher from a specific host.</source>
          <target state="translated">派生クラスでオーバーライドされると、特定のホストからチャネル ディスパッチャーを結合解除します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> can only be detached when the instance of the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> is in the <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> state, as this is the only state that is both mutable and not disposed.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> のインスタンスが <ph id="ph3">&lt;xref:System.ServiceModel.CommunicationState.Created&gt;</ph> 状態のときにのみ切断可能です。この状態が変更可能で、かつ破棄されていない唯一の状態であるためです</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>Should set the <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> associated with the channel dispatcher to <ph id="ph2">`null`</ph>.</source>
          <target state="translated">チャネル ディスパッチャーに関連付けられている <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHostBase&gt;</ph> を <ph id="ph2">`null`</ph> に設定する必要があります。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> calls this method when the <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is removed from its <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> は、<ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> が <ph id="ph3">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> コレクションから削除されると、このメソッドを呼び出します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>This gives the <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> a chance to unhook events and inspect the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph>.</source>
          <target state="translated">これにより、<ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> には、イベントをアンフックし、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> を検査する機会が与えられます。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source><ph id="ph1">&lt;paramref name="host" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="host" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in an <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> state or the host is already set.</source>
          <target state="translated">通信オブジェクトが <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Opening" /&gt;</ph> 状態または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Opened" /&gt;</ph> 状態です。または、ホストは既に設定されています。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Closing" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.ServiceModel.CommunicationState.Closed" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)">
          <source>The communication object is in a <ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> state.</source>
          <target state="translated">通信オブジェクトは、<ph id="ph1">&lt;see cref="F:System.ServiceModel.CommunicationState.Faulted" /&gt;</ph> 状態にあります。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>When overridden in a derived class, gets the service host associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているサービス ホストを取得します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph> for the service associated with the dispatcher.</source>
          <target state="translated">ディスパッチャーと関連付けられたサービスの <ph id="ph1">&lt;see cref="T:System.ServiceModel.ServiceHostBase" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>Each <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> object can have many <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> objects, each associated with a different <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> for that service.</source>
          <target state="translated">各 <ph id="ph1">&lt;xref:System.ServiceModel.ServiceHost&gt;</ph> オブジェクトは、そのサービスの異なる <ph id="ph2">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> に関連付けられた多数の <ph id="ph3">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> オブジェクトを持つことができます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host">
          <source>The host keeps a list of these <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> objects in the <ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> collection.</source>
          <target state="translated">ホストは、これらの <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> オブジェクトの一覧を、<ph id="ph2">&lt;xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A&gt;</ph> コレクションに保持します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</source>
          <target state="translated">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているチャネル リスナーを取得します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>The <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph> associated with the channel dispatcher.</source>
          <target state="translated">チャネル ディスパッチャーに関連付けられている <ph id="ph1">&lt;see cref="T:System.ServiceModel.Channels.IChannelListener" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener">
          <source>A <ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> associates an <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> whose channels and messages this <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> is dispatching.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcher&gt;</ph> は、この <ph id="ph2">&lt;xref:System.ServiceModel.Channels.IChannelListener&gt;</ph> がディスパッチしているチャネルおよびメッセージの <ph id="ph3">&lt;xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase&gt;</ph> を関連付けます。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>