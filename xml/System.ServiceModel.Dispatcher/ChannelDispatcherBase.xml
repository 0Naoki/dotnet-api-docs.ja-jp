<Type Name="ChannelDispatcherBase" FullName="System.ServiceModel.Dispatcher.ChannelDispatcherBase">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="dad5e141479796dd737e2665a74ecbfdfd17ee12" />
    <Meta Name="ms.sourcegitcommit" Value="3907f9a5780957d9c85af2e54c0a5bc2a5bf19ab" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/14/2018" />
    <Meta Name="ms.locfileid" Value="34316217" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class ChannelDispatcherBase : System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ChannelDispatcherBase extends System.ServiceModel.Channels.CommunicationObject" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ChannelDispatcherBase&#xA;Inherits CommunicationObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcherBase abstract : System::ServiceModel::Channels::CommunicationObject" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Channels.CommunicationObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="5a2f2-101">チャネルを受け入れてサービスと関連付けるチャネル ディスパッチャーの抽象基本クラス。</span>
      <span class="sxs-lookup">
        <span data-stu-id="5a2f2-101">Abstract base class for the channel dispatcher that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-102">これは、Windows Communication Foundation (WCF) のプログラミング モデルを保持しますが、システムが提供するランタイムを置換する開発者によって使用されます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-102">This is used by developers who want to keep the Windows Communication Foundation (WCF) programming model but replace the system-provided runtime.</span></span> <span data-ttu-id="5a2f2-103">このようなアプリケーションでは、チャネルからメッセージを取得し、ユーザー定義のディスパッチャーでメッセージを直接処理します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-103">Such applications will pull messages out of channels and handle them directly with user-defined dispatchers.</span></span> <span data-ttu-id="5a2f2-104"><xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> を使用するには、このクラスから派生するクラスを作成し、<xref:System.ServiceModel.ServiceHost> を拡張し、<xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A> をオーバーライドして、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> から派生するユーザー独自のクラスのインスタンスを <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> に追加します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-104">To use <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> , create a class derived from it, extend <xref:System.ServiceModel.ServiceHost> and override <xref:System.ServiceModel.ServiceHostBase.InitializeRuntime%2A>, adding instances of your class derived from <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> to <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A>.</span></span>  
  
 <span data-ttu-id="5a2f2-105"><xref:System.ServiceModel.Channels.IChannelListener> オブジェクトと関連付けられた <xref:System.ServiceModel.ServiceHost> および <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> はそれぞれ、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> および <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> を通して、検査または変更を行うために使用できます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-105">The <xref:System.ServiceModel.Channels.IChannelListener> and the <xref:System.ServiceModel.ServiceHost>, associated with the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> object are available for inspection or modification through the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener%2A> and <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> respectively.</span></span>  
  
 <span data-ttu-id="5a2f2-106"><xref:System.ServiceModel.ServiceHost> コレクションに <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> 項目を追加するとき、またはコレクションから項目を削除するときに、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> は <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> メソッドまたは <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> メソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-106"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach%28System.ServiceModel.ServiceHostBase%29> or <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach%28System.ServiceModel.ServiceHostBase%29> methods when adding or removing a <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> item from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 <span data-ttu-id="5a2f2-107">シャットダウンのとき、<xref:System.ServiceModel.ServiceHost> は、InstanceContext を閉じる前に <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-107"><xref:System.ServiceModel.ServiceHost> calls the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput%2A> during shutdown before closing InstanceContexts.</span></span> <span data-ttu-id="5a2f2-108">Windows Communication Foundation (WCF) では、この呼び出しを使用してデータグラム チャネルを閉じるし、すべてのメッセージが InstanceContext に到着するまで待機します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-108">Windows Communication Foundation (WCF) uses this call to close datagram channels and wait for all messages to get to an InstanceContext.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ChannelDispatcherBase ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ChannelDispatcherBase();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a2f2-109">
            <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcherBase" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected virtual void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="5a2f2-110">サービスの <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-110">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a2f2-111">派生クラスでオーバーライドされると、チャネル ディスパッチャーを特定のホストに結び付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-111">When overridden in a derived class, attaches the channel dispatcher to a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-112">このメソッドは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定できます。これは、この状態が、変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-112">This method can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="5a2f2-113"><xref:System.ServiceModel.ServiceHost> は、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> が <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> コレクションに追加されると、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-113">A <xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is added to its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  <span data-ttu-id="5a2f2-114">これにより、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> にはイベントをフックして <xref:System.ServiceModel.ServiceHost> を検査する機会が与えられ、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> プロパティから返される必要のある値が提供されます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-114">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to hook events and inspect the <xref:System.ServiceModel.ServiceHost>, and provides the value that should be returned from the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a2f2-115">
            <paramref name="host" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-115">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5a2f2-116">通信オブジェクトが <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 状態または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態です。または、ホストは既に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-116">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5a2f2-117">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-117">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="5a2f2-118">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-118">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public virtual void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="5a2f2-119">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているエンドポイント ディスパッチャーを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-119">When overridden in a derived class, removes the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-120"><xref:System.ServiceModel.ServiceHost> は、シャットダウン時にこのメソッドを呼び出して、ディスパッチャーにメッセージをドレインする機会を与えます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-120"><xref:System.ServiceModel.ServiceHost> calls this method during shutdown to give the dispatcher a chance to drain messages.</span></span> <span data-ttu-id="5a2f2-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> は、この呼び出しを使用してデータグラム チャネルを閉じます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-121"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> uses this call to close datagram channels.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected virtual void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overridable Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="5a2f2-122">
            <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-122">The <see cref="T:System.ServiceModel.ServiceHostBase" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="5a2f2-123">派生クラスでオーバーライドされると、特定のホストからチャネル ディスパッチャーを結合解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-123">When overridden in a derived class, detaches the channel dispatcher from a specific host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-124"><xref:System.ServiceModel.ServiceHostBase> は、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ切断可能です。この状態が変更可能で、かつ破棄されていない唯一の状態であるためです</span><span class="sxs-lookup"><span data-stu-id="5a2f2-124">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="5a2f2-125">チャネル ディスパッチャーに関連付けられている <xref:System.ServiceModel.ServiceHostBase> を `null` に設定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-125">Should set the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
 <span data-ttu-id="5a2f2-126"><xref:System.ServiceModel.ServiceHost> は、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> が <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> コレクションから削除されると、このメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-126"><xref:System.ServiceModel.ServiceHost> calls this method when the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is removed from its <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span> <span data-ttu-id="5a2f2-127">これにより、<xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> には、イベントをアンフックし、<xref:System.ServiceModel.ServiceHost> を検査する機会が与えられます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-127">This gives the <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> a chance to unhook events and inspect the <xref:System.ServiceModel.ServiceHost>.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="5a2f2-128">
            <paramref name="host" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-128">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="5a2f2-129">通信オブジェクトが <see cref="F:System.ServiceModel.CommunicationState.Opening" /> 状態または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態です。または、ホストは既に設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state or the host is already set.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="5a2f2-130">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="5a2f2-131">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Host" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a2f2-132">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているサービス ホストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-132">When overridden in a derived class, gets the service host associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a2f2-133">ディスパッチャーと関連付けられたサービスの <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-133">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-134">各 <xref:System.ServiceModel.ServiceHost> オブジェクトは、そのサービスの異なる <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> に関連付けられた多数の <xref:System.ServiceModel.Channels.IChannelListener> オブジェクトを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-134">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span> <span data-ttu-id="5a2f2-135">ホストは、これらの <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> オブジェクトの一覧を、<xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> コレクションに保持します。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-135">The host keeps a list of these <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> objects in the <xref:System.ServiceModel.ServiceHostBase.ChannelDispatchers%2A> collection.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public abstract System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcherBase.Listener" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="5a2f2-136">派生クラスでオーバーライドされると、チャネル ディスパッチャーに関連付けられているチャネル リスナーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-136">When overridden in a derived class, gets the channel listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="5a2f2-137">チャネル ディスパッチャーに関連付けられている <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="5a2f2-137">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5a2f2-138"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> は、この <xref:System.ServiceModel.Channels.IChannelListener> がディスパッチしているチャネルおよびメッセージの <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> を関連付けます。</span><span class="sxs-lookup"><span data-stu-id="5a2f2-138">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> whose channels and messages this <xref:System.ServiceModel.Dispatcher.ChannelDispatcherBase> is dispatching.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>