<Type Name="ChannelDispatcher" FullName="System.ServiceModel.Dispatcher.ChannelDispatcher">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="98402a0ccb35ed7bebdd2d0f81a9ad425dab2c2b" />
    <Meta Name="ms.sourcegitcommit" Value="d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="04/03/2018" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class ChannelDispatcher : System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit ChannelDispatcher extends System.ServiceModel.Dispatcher.ChannelDispatcherBase" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.ChannelDispatcher" />
  <TypeSignature Language="VB.NET" Value="Public Class ChannelDispatcher&#xA;Inherits ChannelDispatcherBase" />
  <TypeSignature Language="C++ CLI" Value="public ref class ChannelDispatcher : System::ServiceModel::Dispatcher::ChannelDispatcherBase" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.ChannelDispatcherBase</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>
      <span data-ttu-id="2a10b-101">チャネルを受け入れ、それをサービスと関連付けるコンポーネント。</span>
      <span class="sxs-lookup">
        <span data-stu-id="2a10b-101">A component that accepts channels and associates them with a service.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-102"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> オブジェクトは、特定の URI (リッスン URI と呼ばれます) にある <xref:System.ServiceModel.Channels.IChannelListener> をサービスのインスタンスと関連付けます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-102">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI (called a listen URI) with an instance of a service.</span></span> <span data-ttu-id="2a10b-103">各 <xref:System.ServiceModel.ServiceHost> オブジェクトは、そのサービスの異なるリスナーおよびリッスン URI に関連付けられた多数の <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> オブジェクトを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-103">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different listener and listen URI for that service.</span></span>  
  
 <span data-ttu-id="2a10b-104">メッセージが到着すると、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> が、関連する各 <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> オブジェクトにエンドポイントがメッセージを受け入れ可能かどうかを問い合わせ、受け入れ可能ならメッセージを渡します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-104">When a message arrives, the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> queries each of the associated <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> objects whether the endpoint can accept the message, and passes the message to the one that can.</span></span> <span data-ttu-id="2a10b-105">メッセージの送信先アドレスが <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> プロパティに一致しており、メッセージ アクションが <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> プロパティに一致しているときは、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> オブジェクトが、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> から送信されたメッセージの処理を担当します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-105">The <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> object is responsible for processing messages from a <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> when the destination address of a message matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.AddressFilter%2A> property and the message action matches the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher.ContractFilter%2A> property.</span></span>  
  
 <span data-ttu-id="2a10b-106"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> オブジェクトに定義されているチャネル セッションの有効期間および動作を制御するすべてのプロパティは、検査および変更可能です。</span><span class="sxs-lookup"><span data-stu-id="2a10b-106">All properties that control the lifetime and behavior of a channel session are available for inspection or modification on the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> object.</span></span> <span data-ttu-id="2a10b-107"><xref:System.ServiceModel.Dispatcher.EndpointDispatcher> に加えて、これらにはカスタム <xref:System.ServiceModel.Dispatcher.IChannelInitializer> オブジェクト、<xref:System.ServiceModel.Channels.IChannelListener>、<xref:System.ServiceModel.ServiceHost>、および関連付けられた <xref:System.ServiceModel.InstanceContext> が含まれます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-107">In addition to the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher>, these include custom <xref:System.ServiceModel.Dispatcher.IChannelInitializer> objects, the <xref:System.ServiceModel.Channels.IChannelListener>, the <xref:System.ServiceModel.ServiceHost>, the associated and <xref:System.ServiceModel.InstanceContext>.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#0](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/service.cs#0)]
 [!code-vb[S_UE_ChannelDispatcher#0](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/service.vb#0)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-108">
            <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-108">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="2a10b-109">チャネル ディスパッチャーの <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-109">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-110">
            <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-110">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-111">指定したリスナーと、システムが提供する既定のタイムアウトから、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-111">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#1](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#1)]
 [!code-vb[S_UE_ChannelDispatcher#1](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a10b-112">
            <paramref name="listener" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-112">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="2a10b-113">チャネル ディスパッチャーの <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-113">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the channel dispatcher.</span>
          </span>
        </param>
        <param name="bindingName">
          <span data-ttu-id="2a10b-114">サービスの構成に使用するバインディングの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-114">The name of the binding used to configure the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-115">
            <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-116">指定したリスナーとバインディング、およびシステムが提供する既定のタイムアウトから、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-116">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with system-provided default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#2](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#2)]
 [!code-vb[S_UE_ChannelDispatcher#2](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a10b-117">
            <paramref name="listener" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-117">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public ChannelDispatcher (System.ServiceModel.Channels.IChannelListener listener, string bindingName, System.ServiceModel.IDefaultCommunicationTimeouts timeouts);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.Channels.IChannelListener listener, string bindingName, class System.ServiceModel.IDefaultCommunicationTimeouts timeouts) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.#ctor(System.ServiceModel.Channels.IChannelListener,System.String,System.ServiceModel.IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (listener As IChannelListener, bindingName As String, timeouts As IDefaultCommunicationTimeouts)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; ChannelDispatcher(System::ServiceModel::Channels::IChannelListener ^ listener, System::String ^ bindingName, System::ServiceModel::IDefaultCommunicationTimeouts ^ timeouts);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="listener" Type="System.ServiceModel.Channels.IChannelListener" />
        <Parameter Name="bindingName" Type="System.String" />
        <Parameter Name="timeouts" Type="System.ServiceModel.IDefaultCommunicationTimeouts" />
      </Parameters>
      <Docs>
        <param name="listener">
          <span data-ttu-id="2a10b-118">サービスの <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-118">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> for the service.</span>
          </span>
        </param>
        <param name="bindingName">
          <span data-ttu-id="2a10b-119">サービスの構成に使用するバインディングの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-119">The name of the binding used to configure the service.</span>
          </span>
        </param>
        <param name="timeouts">
          <span data-ttu-id="2a10b-120">サービスの <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-120">The <see cref="T:System.ServiceModel.IDefaultCommunicationTimeouts" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-121">
            <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-121">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.ChannelDispatcher" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-122">指定したリスナーとバインディング、および指定した既定のタイムアウトから、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-122">Initializes a new instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> class from the provided listener and binding, with the specified default timeouts.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#3](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#3)]
 [!code-vb[S_UE_ChannelDispatcher#3](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a10b-123">
            <paramref name="listener" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-123">
              <paramref name="listener" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AsynchronousTransactedAcceptEnabled">
      <MemberSignature Language="C#" Value="public bool AsynchronousTransactedAcceptEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.AsynchronousTransactedAcceptEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property AsynchronousTransactedAcceptEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AsynchronousTransactedAcceptEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-124">リスナーに対するトランザクション受け入れメソッド呼び出しが非同期かどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-124">Gets a value that indicates whether the transacted accept method calls on listener are asynchronous.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-125">トランザクション処理の対象となるリスナーに対する受け入れメソッド呼び出しが非同期の場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-125">
              <see langword="true" /> if the transacted accept method calls on listener are asynchronous; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Attach">
      <MemberSignature Language="C#" Value="protected override void Attach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Attach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Attach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Attach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Attach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="2a10b-126">サービスの <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-126">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-127">チャネル ディスパッチャーをホストに結び付けます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-127">Attaches the channel dispatcher to the host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-128">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-128">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-129">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-129">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-130">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-130">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-131">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-131">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="BindingName">
      <MemberSignature Language="C#" Value="public string BindingName { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string BindingName" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.BindingName" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property BindingName As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ BindingName { System::String ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-132">サービスの構成に使用するバインディングの名前を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-132">Gets the name of the binding used to configure the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-133">サービスのバインディング名。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-133">The binding name of the service.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-134">このチャネル ディスパッチャーが関連付けられているバインディングのバインディング名を取得するために使用します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-134">Used to obtain the binding name for the binding with which this channel dispatcher is associated.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#4](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#4)]
 [!code-vb[S_UE_ChannelDispatcher#4](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#4)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ChannelInitializers">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.IChannelInitializer&gt; ChannelInitializers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ChannelInitializers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ChannelInitializers As SynchronizedCollection(Of IChannelInitializer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ ChannelInitializers { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::IChannelInitializer ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.IChannelInitializer&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-135">チャネルが最初に作成されるときに状態を検査してチャネルに状態を追加するために使用できる <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> オブジェクトのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-135">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects that you can use to inspect and add state to channels when they are first created.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-136">
            <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> 型オブジェクトの <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-136">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of type <see cref="T:System.ServiceModel.Dispatcher.IChannelInitializer" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-137">このプロパティを使用して、チャネルの作成時にチャネルの状態を検査または変更するため、カスタムのチャネル初期化子を初期化コレクションに挿入します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-137">Use this property to insert a custom channel initializer into the initialization collection to inspect or modify channel state when they are created.</span></span> <span data-ttu-id="2a10b-138">チャネル初期化子は、ディスパッチャーに関連付けられたコントラクトが双方向コントラクトであるとき、送信チャネルの状態を検査または変更する際にも有用です。</span><span class="sxs-lookup"><span data-stu-id="2a10b-138">This is also useful to perform the same behavior on outgoing channels if the contract associated with a dispatcher is a duplex contract.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#5](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#5)]
 [!code-vb[S_UE_ChannelDispatcher#5](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#5)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CloseInput">
      <MemberSignature Language="C#" Value="public override void CloseInput ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance void CloseInput() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.CloseInput" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Sub CloseInput ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override void CloseInput();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-139">リスナーによる新しいチャネルの受け入れを停止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-139">Stops the listener from accepting new channels.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-140">このメソッドを呼び出すと、リスナーはリッスンを停止します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-140">Calling this method stops the listener listening.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCloseTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultCloseTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultCloseTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultCloseTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultCloseTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultCloseTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-141">チャネル ディスパッチャーを閉じるための既定の時間間隔を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-141">Gets the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-142">チャネル ディスパッチャーを閉じるための既定の時間間隔を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-142">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-143">この既定のクローズ タイムアウトは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-143">This default close timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="2a10b-144">この値を省略すると、サービス モデルの既定値として、1 分が使用されます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-144">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultOpenTimeout">
      <MemberSignature Language="C#" Value="protected override TimeSpan DefaultOpenTimeout { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan DefaultOpenTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.DefaultOpenTimeout" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides ReadOnly Property DefaultOpenTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; virtual property TimeSpan DefaultOpenTimeout { TimeSpan get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-145">チャネル ディスパッチャーを開くための既定の時間間隔を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-145">Gets the default interval of time allowed for the channel dispatcher to open.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-146">チャネル ディスパッチャーを閉じるための既定の時間間隔を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-146">The <see cref="T:System.TimeSpan" /> that specifies the default interval of time allowed for the channel dispatcher to close.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-147">この既定のオープン タイムアウトは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29> を使用して設定できます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-147">This default open timeout can be set using <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.%23ctor%28System.ServiceModel.Channels.IChannelListener%2CSystem.String%2CSystem.ServiceModel.IDefaultCommunicationTimeouts%29>.</span></span> <span data-ttu-id="2a10b-148">この値を省略すると、サービス モデルの既定値として、1 分が使用されます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-148">Otherwise, a service model default value of 1 minute is used.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Detach">
      <MemberSignature Language="C#" Value="protected override void Detach (System.ServiceModel.ServiceHostBase host);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Detach(class System.ServiceModel.ServiceHostBase host) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.Detach(System.ServiceModel.ServiceHostBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Detach (host As ServiceHostBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Detach(System::ServiceModel::ServiceHostBase ^ host);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="host" Type="System.ServiceModel.ServiceHostBase" />
      </Parameters>
      <Docs>
        <param name="host">
          <span data-ttu-id="2a10b-149">サービスの <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-149">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-150">チャネル ディスパッチャーからサービス ホストの結び付きを解除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-150">Detaches the service host from the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-151"><xref:System.ServiceModel.ServiceHostBase> は、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ切断可能です。この状態が変更可能で、かつ破棄されていない唯一の状態であるためです</span><span class="sxs-lookup"><span data-stu-id="2a10b-151">The <xref:System.ServiceModel.ServiceHostBase> can only be detached when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="2a10b-152">チャネル ディスパッチャーに関連付けられている <xref:System.ServiceModel.ServiceHostBase> を `null` に設定します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-152">Sets the <xref:System.ServiceModel.ServiceHostBase> associated with the channel dispatcher to `null`.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#18](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#18)]
 [!code-vb[S_UE_ChannelDispatcher#18](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#18)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="2a10b-153">
            <paramref name="host" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-153">
              <paramref name="host" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-154">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-154">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-155">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-155">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-156">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-156">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Endpoints">
      <MemberSignature Language="C#" Value="public System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.Generic.SynchronizedCollection`1&lt;class System.ServiceModel.Dispatcher.EndpointDispatcher&gt; Endpoints" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Endpoints" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Endpoints As SynchronizedCollection(Of EndpointDispatcher)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ Endpoints { System::Collections::Generic::SynchronizedCollection&lt;System::ServiceModel::Dispatcher::EndpointDispatcher ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.SynchronizedCollection&lt;System.ServiceModel.Dispatcher.EndpointDispatcher&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-157">チャネル エンドポイントにメッセージを転送するエンドポイント ディスパッチャーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-157">Gets the endpoint dispatchers which forward messages to the channel endpoints.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-158">メッセージをチャネル エンドポイントに転送する <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> の <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-158">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.EndpointDispatcher" /> which forward messages to the channel endpoints.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-159"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> には、チャネルがサポートできるエンドポイントごとに異なる <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> があります。</span><span class="sxs-lookup"><span data-stu-id="2a10b-159">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> has a distinct <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> for each endpoint that the channel can support.</span></span>  
  
 <span data-ttu-id="2a10b-160">エンドポイント全体のランタイムをカスタマイズできるランタイム プロパティにアクセスするには、<xref:System.ServiceModel.Dispatcher.EndpointDispatcher> を使用します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-160">Use the <xref:System.ServiceModel.Dispatcher.EndpointDispatcher> to obtain access to runtime properties that enable you to customize the runtime across an entire endpoint.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#6](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#6)]
 [!code-vb[S_UE_ChannelDispatcher#6](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#6)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ErrorHandlers">
      <MemberSignature Language="C#" Value="public System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.Collection`1&lt;class System.ServiceModel.Dispatcher.IErrorHandler&gt; ErrorHandlers" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ErrorHandlers" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ErrorHandlers As Collection(Of IErrorHandler)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ ErrorHandlers { System::Collections::ObjectModel::Collection&lt;System::ServiceModel::Dispatcher::IErrorHandler ^&gt; ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.Collection&lt;System.ServiceModel.Dispatcher.IErrorHandler&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-161">エンドポイントに関するカスタム エラー処理機能の挿入に使用できる <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> オブジェクトのセットを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-161">Gets a set of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects that can be used to insert custom error handling functionality for an endpoint.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-162">
            <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> オブジェクトの <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-162">A <see cref="T:System.Collections.Generic.SynchronizedCollection`1" /> of <see cref="T:System.ServiceModel.Dispatcher.IErrorHandler" /> objects.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#7](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#7)]
 [!code-vb[S_UE_ChannelDispatcher#7](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#7)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.ServiceHostBase Host { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.ServiceHostBase Host" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Host" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Host As ServiceHostBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::ServiceHostBase ^ Host { System::ServiceModel::ServiceHostBase ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.ServiceHostBase</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-163">ディスパッチャーに関連付けられたサービスのホストを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-163">Gets the host for the service associated with the dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-164">ディスパッチャーと関連付けられたサービスの <see cref="T:System.ServiceModel.ServiceHostBase" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-164">The <see cref="T:System.ServiceModel.ServiceHostBase" /> for the service associated with the dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-165">各 <xref:System.ServiceModel.ServiceHost> オブジェクトは、そのサービスの異なる <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> に関連付けられた多数の <xref:System.ServiceModel.Channels.IChannelListener> オブジェクトを持つことができます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-165">Each <xref:System.ServiceModel.ServiceHost> object can have many <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> objects, each associated with a different <xref:System.ServiceModel.Channels.IChannelListener> for that service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#8](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#8)]
 [!code-vb[S_UE_ChannelDispatcher#8](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#8)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeExceptionDetailInFaults">
      <MemberSignature Language="C#" Value="public bool IncludeExceptionDetailInFaults { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeExceptionDetailInFaults" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IncludeExceptionDetailInFaults" />
      <MemberSignature Language="VB.NET" Value="Public Property IncludeExceptionDetailInFaults As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeExceptionDetailInFaults { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-166">例外に関する詳細をエラーに含めるかどうかを示す値を、取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-166">Gets or sets a value that indicates whether to include the details about an exception in a fault.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-167">例外に関する詳細をエラーに含める場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-167">
              <see langword="true" /> if the details about an exception are included in the faults; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-168">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-168">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#19](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#19)]
 [!code-vb[S_UE_ChannelDispatcher#19](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-169">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-169">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-170">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-170">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-171">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-171">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedAccept">
      <MemberSignature Language="C#" Value="public bool IsTransactedAccept { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedAccept" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedAccept" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsTransactedAccept As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedAccept { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-172">リスナーに対する受け入れメソッド呼び出しがトランザクションの下で行われたかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-172">Gets a value that indicates whether the accept method calls on the listener are done under a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-173">リスナーに対する受け入れメソッド呼び出しがトランザクションの下で行われた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-173">
              <see langword="true" /> if the accept method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#9](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#9)]
 [!code-vb[S_UE_ChannelDispatcher#9](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#9)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsTransactedReceive">
      <MemberSignature Language="C#" Value="public bool IsTransactedReceive { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsTransactedReceive" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive" />
      <MemberSignature Language="VB.NET" Value="Public Property IsTransactedReceive As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsTransactedReceive { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-174">リスナーに対する受信メソッド呼び出しがトランザクションの下で行われたかどうかを示す値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-174">Gets a value that indicates whether the receive method calls on the listener are done under a transaction.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-175">リスナーに対する受信メソッド呼び出しがトランザクションの下で行われた場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-175">
              <see langword="true" /> if the receive method calls on the listener are done under a transaction; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-176"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> プロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-176">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.IsTransactedReceive%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#10](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#10)]
 [!code-vb[S_UE_ChannelDispatcher#10](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#10)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-177">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-177">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-178">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-178">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-179">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-179">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Listener">
      <MemberSignature Language="C#" Value="public override System.ServiceModel.Channels.IChannelListener Listener { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.IChannelListener Listener" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.Listener" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property Listener As IChannelListener" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::ServiceModel::Channels::IChannelListener ^ Listener { System::ServiceModel::Channels::IChannelListener ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.IChannelListener</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-180">チャネル ディスパッチャーに関連付けられているリスナーを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-180">Gets the listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-181">チャネル ディスパッチャーに関連付けられている <see cref="T:System.ServiceModel.Channels.IChannelListener" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-181">The <see cref="T:System.ServiceModel.Channels.IChannelListener" /> associated with the channel dispatcher.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-182"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher> は、特定の URI における <xref:System.ServiceModel.Channels.IChannelListener> をサービスのインスタンスと関連付けます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-182">A <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> associates an <xref:System.ServiceModel.Channels.IChannelListener> at a particular URI with an instance of a service.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#11](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#11)]
 [!code-vb[S_UE_ChannelDispatcher#11](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#11)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ManualAddressing">
      <MemberSignature Language="C#" Value="public bool ManualAddressing { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ManualAddressing" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ManualAddressing" />
      <MemberSignature Language="VB.NET" Value="Public Property ManualAddressing As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ManualAddressing { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-183">チャネル ディスパッチャーがアドレス指定ヘッダーを要求/応答メッセージに追加するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-183">Gets or sets a value that indicates whether the channel dispatcher adds addressing headers to request-reply messages.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-184">プロキシがアドレス指定ヘッダーを追加しない場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-184">
              <see langword="true" /> if the proxy does not add any addressing headers; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2a10b-185">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-185">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-186">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-186">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
 <span data-ttu-id="2a10b-187">クライアントが、メッセージ ID と ReplyTo アドレス指定ヘッダーを要求/応答メッセージに追加するのを禁止して、アプリケーションがこれらのヘッダーを制御できるようにする場合は、<xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> プロパティを `true` に設定します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-187">Set the <xref:System.ServiceModel.Dispatcher.ClientRuntime.ManualAddressing%2A> property to `true` if you want to prevent the client from adding Message ID and ReplyTo addressing headers to request/response messages so that your application can control these headers.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#12](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#12)]
 [!code-vb[S_UE_ChannelDispatcher#12](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#12)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-188">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-188">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-189">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-189">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-190">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-190">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MaxPendingReceives">
      <MemberSignature Language="C#" Value="public int MaxPendingReceives { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxPendingReceives" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxPendingReceives" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxPendingReceives As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxPendingReceives { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-191">チャネルあたりの保留状態のメッセージの最大数を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-191">Gets or sets the maximum pending messages per channel.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-192">メッセージの最大数を表す整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-192">An integer representing a maximum number of messages.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="MaxTransactedBatchSize">
      <MemberSignature Language="C#" Value="public int MaxTransactedBatchSize { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 MaxTransactedBatchSize" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize" />
      <MemberSignature Language="VB.NET" Value="Public Property MaxTransactedBatchSize As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int MaxTransactedBatchSize { int get(); void set(int value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-193">トランザクション バッチの最大サイズを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-193">Gets or sets the maximum size for a transacted batch.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-194">トランザクション バッチの最大サイズ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-194">The maximum size for a transacted batch.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-195"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> プロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-195">The <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.MaxTransactedBatchSize%2A> property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#13](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#13)]
 [!code-vb[S_UE_ChannelDispatcher#13](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#13)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a10b-196">0 未満の値が設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-196">The value set is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-197">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-197">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-198">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-198">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-199">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-199">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="MessageVersion">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Channels.MessageVersion MessageVersion { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Channels.MessageVersion MessageVersion" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.MessageVersion" />
      <MemberSignature Language="VB.NET" Value="Public Property MessageVersion As MessageVersion" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Channels::MessageVersion ^ MessageVersion { System::ServiceModel::Channels::MessageVersion ^ get(); void set(System::ServiceModel::Channels::MessageVersion ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Channels.MessageVersion</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-200">使用または予想される SOAP メッセージおよび WS-Addressing のバージョンを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-200">Gets or sets the SOAP message and WS-Addressing versions that are used or expected.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-201">使用または要求されている <see cref="T:System.ServiceModel.Channels.MessageVersion" /></span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-201">The <see cref="T:System.ServiceModel.Channels.MessageVersion" /> that is used or expected.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-202">メッセージとその交換に関連付けられている SOAP と WS アドレス指定のバージョンを指定します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-202">Specifies the versions of SOAP and WS-Addressing associated with a message and its exchange.</span></span>  
  
 <span data-ttu-id="2a10b-203">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-203">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#20](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#20)]
 [!code-vb[S_UE_ChannelDispatcher#20](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#20)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-204">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-204">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-205">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-205">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-206">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-206">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnAbort">
      <MemberSignature Language="C#" Value="protected override void OnAbort ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnAbort() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnAbort" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnAbort ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnAbort();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-207">ディスパッチャーに関連付けられているリスナーを中止します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-207">Aborts the listener associated with the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginClose">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginClose (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginClose(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginClose (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginClose(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2a10b-208">クローズ操作がタイムアウトになるまでの時間を表す <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-208">The <see cref="T:System.TimeSpan" /> that specifies how long the close operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2a10b-209">非同期のクローズ操作の完了通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-209">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the close operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2a10b-210">非同期のクローズ操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-210">An object, specified by the application, that contains state information associated with the asynchronous close operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-211">ディスパッチャーのチャネル リスナーを閉じる非同期操作を開始します。この操作は指定した時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-211">Begins an asynchronous operation to close a channel listener for the dispatcher that must be completed within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a10b-212">ディスパッチャーのチャネル リスナーを閉じるための非同期操作を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-212">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to close a channel listener for the dispatcher.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnBeginOpen">
      <MemberSignature Language="C#" Value="protected override IAsyncResult OnBeginOpen (TimeSpan timeout, AsyncCallback callback, object state);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance class System.IAsyncResult OnBeginOpen(valuetype System.TimeSpan timeout, class System.AsyncCallback callback, object state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Function OnBeginOpen (timeout As TimeSpan, callback As AsyncCallback, state As Object) As IAsyncResult" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override IAsyncResult ^ OnBeginOpen(TimeSpan timeout, AsyncCallback ^ callback, System::Object ^ state);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IAsyncResult</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
        <Parameter Name="callback" Type="System.AsyncCallback" />
        <Parameter Name="state" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2a10b-213">オープン操作がタイムアウトになるまでの時間を表す <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-213">The <see cref="T:System.TimeSpan" /> that specifies how long the open operation has to complete before timing out.</span>
          </span>
        </param>
        <param name="callback">
          <span data-ttu-id="2a10b-214">オープン操作の非同期完了の通知を受信する <see cref="T:System.AsyncCallback" /> デリゲート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-214">The <see cref="T:System.AsyncCallback" /> delegate that receives the notification of the asynchronous completion of the open operation.</span>
          </span>
        </param>
        <param name="state">
          <span data-ttu-id="2a10b-215">非同期のオープン操作に関連付けられている状態情報を保持する、アプリケーションで指定されたオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-215">An object, specified by the application, that contains state information associated with the asynchronous open operation.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-216">ディスパッチャーのチャネル リスナーを開く非同期操作を開始します。この操作は指定した時間内に完了する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-216">Begins an asynchronous operation to open a channel listener for the dispatcher that must be completed within a specified interval of time.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="2a10b-217">ディスパッチャーのチャネル リスナーを開くための非同期操作を参照する <see cref="T:System.IAsyncResult" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-217">The <see cref="T:System.IAsyncResult" /> that references the asynchronous operation to open a channel listener for the dispatcher.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-218">このメソッドを呼び出すときは、チャネル ディスパッチャーが `null` 以外のサービス ホストに関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a10b-218">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-219">ホストまたはメッセージのバージョンが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-219">The host or the message version is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnClose">
      <MemberSignature Language="C#" Value="protected override void OnClose (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClose(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClose(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClose (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClose(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2a10b-220">リスナーを閉じるための時間間隔を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-220">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to close.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-221">指定した時間内に、ディスパッチャーに関連付けられているチャネル リスナーを閉じます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-221">Closes the channel listener associated with the dispatcher within a specified interval of time.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnClosed">
      <MemberSignature Language="C#" Value="protected override void OnClosed ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnClosed() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnClosed" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnClosed ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnClosed();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-222">チャネル ディスパッチャーに関連付けられたエンドポイント ディスパッチャーを閉じるときのトレースを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-222">Provides a trace of the closing of the endpoint dispatchers associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndClose">
      <MemberSignature Language="C#" Value="protected override void OnEndClose (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndClose(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndClose(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndClose (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndClose(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2a10b-223">
            <see cref="T:System.IAsyncResult" /> メソッドの呼び出しで返された <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-223">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginClose(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-224">ディスパッチャーのチャネル リスナーを閉じるための非同期操作を完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-224">Completes an asynchronous operation to close a channel listener for the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnEndOpen">
      <MemberSignature Language="C#" Value="protected override void OnEndOpen (IAsyncResult result);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnEndOpen(class System.IAsyncResult result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnEndOpen(System.IAsyncResult)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnEndOpen (result As IAsyncResult)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnEndOpen(IAsyncResult ^ result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="result" Type="System.IAsyncResult" />
      </Parameters>
      <Docs>
        <param name="result">
          <span data-ttu-id="2a10b-225">
            <see cref="T:System.IAsyncResult" /> メソッドの呼び出しで返された <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-225">The <see cref="T:System.IAsyncResult" /> returned by a call to the <see cref="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnBeginOpen(System.TimeSpan,System.AsyncCallback,System.Object)" /> method.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-226">ディスパッチャーのチャネル リスナーを開くための非同期操作を完了します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-226">Completes an asynchronous operation to open a channel listener for the dispatcher.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="OnOpen">
      <MemberSignature Language="C#" Value="protected override void OnOpen (TimeSpan timeout);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpen(valuetype System.TimeSpan timeout) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpen(System.TimeSpan)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpen (timeout As TimeSpan)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpen(TimeSpan timeout);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="timeout" Type="System.TimeSpan" />
      </Parameters>
      <Docs>
        <param name="timeout">
          <span data-ttu-id="2a10b-227">リスナーを開くための時間間隔を指定する <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-227">The <see cref="T:System.TimeSpan" /> that specifies the interval of time allowed for the listener to open.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="2a10b-228">チャネル ディスパッチャーに関連付けられているリスナーを開きます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-228">Opens the listener associated with the channel dispatcher.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-229">このメソッドを呼び出すときは、チャネル ディスパッチャーが `null` 以外のサービス ホストに関連付けられ、メッセージ バージョンが `null` 以外の値に設定されている必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a10b-229">The channel dispatcher must be associated with a non-`null` service host when this method is called and message version must be set to a non-`null` value.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-230">ホストまたはメッセージのバージョンが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-230">The host or the message version is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpened">
      <MemberSignature Language="C#" Value="protected override void OnOpened ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpened() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpened" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpened ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpened();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-231">エンドポイントへのディスパッチに使用するフィルター テーブルを作成して検証します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-231">Populates and validates filter table used to dispatch to the endpoints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-232">このメソッドを呼び出すときは、チャネル ディスパッチャーが `null` 以外のサービス ホストに関連付けられている必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a10b-232">The channel dispatcher must be associated with a non-`null` service host when this method is called.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-233">ホストが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-233">The host is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="OnOpening">
      <MemberSignature Language="C#" Value="protected override void OnOpening ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void OnOpening() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.ChannelDispatcher.OnOpening" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub OnOpening ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void OnOpening();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-234">チャネル ディスパッチャーがホストと結び付けられているかどうかを確認します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-234">Checks whether the channel dispatcher is attached to a host.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-235">開くときに、チャネル ディスパッチャーを `null` 以外のサービス ホストに関連付ける必要があります。</span><span class="sxs-lookup"><span data-stu-id="2a10b-235">The channel dispatcher must be associated with a non-`null` service host on opening.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-236">ホストが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-236">The host is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="ReceiveContextEnabled">
      <MemberSignature Language="C#" Value="public bool ReceiveContextEnabled { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveContextEnabled" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveContextEnabled" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveContextEnabled As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveContextEnabled { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-237">ReceiveContext を有効にするかどうかを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-237">Gets or sets whether ReceiveContext is enabled.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-238">ReceiveContext が有効な場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-238">
              <see langword="true" /> if ReceiveContext is enabled; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-239">ReceiveContext は、必要な間だけメッセージをロックするなど、サービスによるメッセージ処理方法を制御します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-239">The ReceiveContext controls the manner in which messages are handled by the service, for example locking of the message as long as needed.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ReceiveSynchronously">
      <MemberSignature Language="C#" Value="public bool ReceiveSynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool ReceiveSynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ReceiveSynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property ReceiveSynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool ReceiveSynchronously { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-240">ディスパッチャーが同期呼び出しを使用してチャネルからメッセージを読み取るかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-240">Gets or sets a value that specifies whether the dispatcher uses synchronous calls to read messages from channels.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-241">ディスパッチャーが同期メソッドを使用してチャネルからメッセージを読み取る場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-241">
              <see langword="true" /> if the dispatcher uses synchronous methods to read messages from channels; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="2a10b-242">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-242">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-243">バインディングが <xref:System.ServiceModel.Channels.IBindingRuntimePreferences> を実装している場合、[!INCLUDE[indigo1](~/includes/indigo1-md.md)] は、<xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> プロパティの値にこのプロパティを割り当てます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-243">If a binding implements <xref:System.ServiceModel.Channels.IBindingRuntimePreferences>, [!INCLUDE[indigo1](~/includes/indigo1-md.md)] assigns the value of the <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> property to this property.</span></span> <span data-ttu-id="2a10b-244">したがって、この値が `true` の場合、`false` の既定値 <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> はオーバーライドされます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-244">So if this value is `true`, the `false` default value of <xref:System.ServiceModel.Channels.IBindingRuntimePreferences.ReceiveSynchronously%2A> is overridden.</span></span>  
  
 <span data-ttu-id="2a10b-245">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-245">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#14](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#14)]
 [!code-vb[S_UE_ChannelDispatcher#14](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#14)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-246">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-246">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-247">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-247">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-248">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-248">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="SendAsynchronously">
      <MemberSignature Language="C#" Value="public bool SendAsynchronously { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool SendAsynchronously" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.SendAsynchronously" />
      <MemberSignature Language="VB.NET" Value="Public Property SendAsynchronously As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool SendAsynchronously { bool get(); void set(bool value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-249">メッセージを非同期で送信するかどうかを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-249">Gets or sets whether messages are sent asynchronously.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-250">メッセージを非同期で送信する場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-250">
              <see langword="true" /> if messages are sent asynchronously; otherwise, <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ServiceThrottle">
      <MemberSignature Language="C#" Value="public System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.Dispatcher.ServiceThrottle ServiceThrottle" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.ServiceThrottle" />
      <MemberSignature Language="VB.NET" Value="Public Property ServiceThrottle As ServiceThrottle" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::Dispatcher::ServiceThrottle ^ ServiceThrottle { System::ServiceModel::Dispatcher::ServiceThrottle ^ get(); void set(System::ServiceModel::Dispatcher::ServiceThrottle ^ value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.ServiceThrottle</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-251">チャネル ディスパッチャーに関連付けられたサービスのサービス スロットルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-251">Gets or sets the service throttle for the service associated with the channel dispatcher.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-252">
            <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> オブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-252">A <see cref="T:System.ServiceModel.Dispatcher.ServiceThrottle" /> object.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-253">これにより、サービスの可用性とパフォーマンスを最適化するための各種コントロールにアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="2a10b-253">This provides access to the controls used to optimize the availability and performance of a service.</span></span>  
  
 <span data-ttu-id="2a10b-254">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-254">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#15](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#15)]
 [!code-vb[S_UE_ChannelDispatcher#15](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#15)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-255">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-255">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-256">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-256">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-257">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-257">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionIsolationLevel">
      <MemberSignature Language="C#" Value="public System.Transactions.IsolationLevel TransactionIsolationLevel { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Transactions.IsolationLevel TransactionIsolationLevel" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionIsolationLevel As IsolationLevel" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Transactions::IsolationLevel TransactionIsolationLevel { System::Transactions::IsolationLevel get(); void set(System::Transactions::IsolationLevel value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Transactions.IsolationLevel</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-258">トランザクションの既定の分離レベルを取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-258">Gets or sets the default isolation level for transactions.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-259">
            <see cref="T:System.Transactions.IsolationLevel" /> 値のいずれか 1 つ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-259">One of the <see cref="T:System.Transactions.IsolationLevel" /> values.</span>
          </span>
          <span data-ttu-id="2a10b-260">既定値は、<see cref="F:System.Transactions.IsolationLevel.Unspecified" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-260">The default is <see cref="F:System.Transactions.IsolationLevel.Unspecified" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-261"><xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> プロパティは、このサービスのディスパッチャーによって作成された新しいトランザクションの既定の分離レベルを取得または設定するために使用します。</span><span class="sxs-lookup"><span data-stu-id="2a10b-261">Use the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionIsolationLevel%2A> property to get or set the default isolation level for new transactions created by the dispatcher for the service.</span></span>  
  
 <span data-ttu-id="2a10b-262">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-262">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#16](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#16)]
 [!code-vb[S_UE_ChannelDispatcher#16](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#16)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a10b-263">定義されていない分離レベルを設定しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-263">The isolation level set is not defined.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-264">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-264">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-265">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-265">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-266">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-266">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="TransactionTimeout">
      <MemberSignature Language="C#" Value="public TimeSpan TransactionTimeout { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.TimeSpan TransactionTimeout" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.ChannelDispatcher.TransactionTimeout" />
      <MemberSignature Language="VB.NET" Value="Public Property TransactionTimeout As TimeSpan" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TimeSpan TransactionTimeout { TimeSpan get(); void set(TimeSpan value); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="2a10b-267">サービスに代わってディスパッチャーが作成する新しいトランザクションの既定のタイムアウトを指定する値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-267">Gets or sets a value that specifies the default timeout for new transactions created by the dispatcher on behalf of the service.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="2a10b-268">トランザクションの既定のタイムアウト時間を表す <see cref="T:System.TimeSpan" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-268">A <see cref="T:System.TimeSpan" /> value that represents the default timeout period for transactions.</span>
          </span>
          <span data-ttu-id="2a10b-269">既定値は、<see cref="F:System.TimeSpan.Zero" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-269">The default is <see cref="F:System.TimeSpan.Zero" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="2a10b-270">このプロパティは、<xref:System.ServiceModel.Dispatcher.ChannelDispatcher> のインスタンスが <xref:System.ServiceModel.CommunicationState.Created> 状態のときにのみ設定可能です。これは、この状態が変更可能で、かつ破棄されていない唯一の状態であるためです。</span><span class="sxs-lookup"><span data-stu-id="2a10b-270">This property can only be set when the instance of the <xref:System.ServiceModel.Dispatcher.ChannelDispatcher> is in the <xref:System.ServiceModel.CommunicationState.Created> state, as this is the only state that is both mutable and not disposed.</span></span>  
  
   
  
## Examples  
 [!code-csharp[S_UE_ChannelDispatcher#17](~/samples/snippets/csharp/VS_Snippets_CFX/s_ue_channeldispatcher/cs/snippets.cs#17)]
 [!code-vb[S_UE_ChannelDispatcher#17](~/samples/snippets/visualbasic/VS_Snippets_CFX/s_ue_channeldispatcher/vb/snippets.vb#17)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="2a10b-271">0 未満の値または大きすぎる値が設定されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-271">The value set is less than zero or is too large.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="2a10b-272">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Opening" /> または <see cref="F:System.ServiceModel.CommunicationState.Opened" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-272">The communication object is in an <see cref="F:System.ServiceModel.CommunicationState.Opening" /> or <see cref="F:System.ServiceModel.CommunicationState.Opened" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ObjectDisposedException">
          <span data-ttu-id="2a10b-273">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Closing" /> または <see cref="F:System.ServiceModel.CommunicationState.Closed" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-273">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Closing" /> or <see cref="F:System.ServiceModel.CommunicationState.Closed" /> state.</span>
          </span>
        </exception>
        <exception cref="T:System.ServiceModel.CommunicationObjectFaultedException">
          <span data-ttu-id="2a10b-274">通信オブジェクトは、<see cref="F:System.ServiceModel.CommunicationState.Faulted" /> 状態にあります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="2a10b-274">The communication object is in a <see cref="F:System.ServiceModel.CommunicationState.Faulted" /> state.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>