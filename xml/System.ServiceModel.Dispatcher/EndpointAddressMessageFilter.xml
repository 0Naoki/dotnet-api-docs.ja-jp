<Type Name="EndpointAddressMessageFilter" FullName="System.ServiceModel.Dispatcher.EndpointAddressMessageFilter">
  <TypeSignature Language="C#" Value="public class EndpointAddressMessageFilter : System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit EndpointAddressMessageFilter extends System.ServiceModel.Dispatcher.MessageFilter" />
  <TypeSignature Language="DocId" Value="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />
  <TypeSignature Language="VB.NET" Value="Public Class EndpointAddressMessageFilter&#xA;Inherits MessageFilter" />
  <TypeSignature Language="C++ CLI" Value="public ref class EndpointAddressMessageFilter : System::ServiceModel::Dispatcher::MessageFilter" />
  <AssemblyInfo>
    <AssemblyName>System.ServiceModel</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ServiceModel.Dispatcher.MessageFilter</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary><span data-ttu-id="8c25f-101">指定したエンドポイント アドレスの要件をメッセージが満たすかどうかを検査するクエリを表します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-101">Represents a query that tests whether a message satisfies the requirements of a specified endpoint address.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-102">このフィルターは、メッセージが特定のエンドポイント アドレスを満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-102">This filter tests whether a message satisfies a particular endpoint address.</span></span> <span data-ttu-id="8c25f-103"><xref:System.ServiceModel.EndpointAddress> オブジェクトは、URI とオプションのアドレス指定ヘッダーのコレクションからなります。</span><span class="sxs-lookup"><span data-stu-id="8c25f-103">An <xref:System.ServiceModel.EndpointAddress> object includes a URI and an optional collection of addressing headers.</span></span> <span data-ttu-id="8c25f-104">アドレス指定ヘッダーとメッセージ ヘッダーは、等価性の比較のために正規化されます。</span><span class="sxs-lookup"><span data-stu-id="8c25f-104">The addressing and message headers are canonicalized in order to be compared for equality.</span></span> <span data-ttu-id="8c25f-105"><xref:System.ServiceModel.EndpointAddress> 内に同じパラメーターが 2 回以上現れる場合は、少なくともそれと同じ回数だけ、対応するヘッダーがメッセージ内に出現する必要があります。</span><span class="sxs-lookup"><span data-stu-id="8c25f-105">If a parameter appears more than once in an <xref:System.ServiceModel.EndpointAddress>, the corresponding header must appear in the message at least that many times.</span></span>  
  
 <span data-ttu-id="8c25f-106">IIS と基になるファイル システム (NTFS または FAT) は大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="8c25f-106">IIS and the underlying file system (NTFS or FAT) are case-insensitive.</span></span> <span data-ttu-id="8c25f-107">このクラスによって実行される URI の比較も、大文字と小文字を区別しません。</span><span class="sxs-lookup"><span data-stu-id="8c25f-107">URI comparisons done by this class are also case-insensitive.</span></span> <span data-ttu-id="8c25f-108">したがって、たとえば、http://www.microsoft.comに等しいと評価http://WWW.microsoft.comです。</span><span class="sxs-lookup"><span data-stu-id="8c25f-108">So, for example, http://www.microsoft.com is evaluated as equal to http://WWW.microsoft.com.</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c25f-109"><see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-109">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8c25f-110">メッセージの判定に使用される <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-110">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <summary><span data-ttu-id="8c25f-111">メッセージを検査する対象のアドレスを指定して、<see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-111">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class with a specified address against which to test a message.</span></span></summary>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c25f-112"><paramref name="address" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-112"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public EndpointAddressMessageFilter (System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.ServiceModel.EndpointAddress address, bool includeHostNameInComparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.#ctor(System.ServiceModel.EndpointAddress,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (address As EndpointAddress, includeHostNameInComparison As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; EndpointAddressMessageFilter(System::ServiceModel::EndpointAddress ^ address, bool includeHostNameInComparison);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="address" Type="System.ServiceModel.EndpointAddress" />
        <Parameter Name="includeHostNameInComparison" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="address"><span data-ttu-id="8c25f-113">メッセージの判定に使用される <see cref="T:System.ServiceModel.EndpointAddress" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-113">The <see cref="T:System.ServiceModel.EndpointAddress" /> against which messages are tested.</span></span></param>
        <param name="includeHostNameInComparison">
          <span data-ttu-id="8c25f-114">エンドポイント アドレスの比較にホスト名が含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-114"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></param>
        <summary><span data-ttu-id="8c25f-115"><see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-115">Initializes a new instance of the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-116">Web サービスをローカル コンピューターにインストールしている場合は、次のようなさまざまな参照方法があります。</span><span class="sxs-lookup"><span data-stu-id="8c25f-116">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="8c25f-117">http://[コンピューター名]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8c25f-117">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="8c25f-118">http://[コンピューター名].[会社].com/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8c25f-118">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="8c25f-119">`includeHostNameInComparison` パラメーターの値が `false` の場合、上記の URI はすべて同じエンドポイントに解決されます。</span><span class="sxs-lookup"><span data-stu-id="8c25f-119">If the value of the `includeHostNameInComparison` parameter is `false`, the above URIs all resolve to the same endpoint.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c25f-120"><paramref name="address" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-120"><paramref name="address" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Address">
      <MemberSignature Language="C#" Value="public System.ServiceModel.EndpointAddress Address { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.ServiceModel.EndpointAddress Address" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Address" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Address As EndpointAddress" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::ServiceModel::EndpointAddress ^ Address { System::ServiceModel::EndpointAddress ^ get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.EndpointAddress</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c25f-121"><see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> がメッセージを検査する対象のアドレスを取得します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-121">Gets the address that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></summary>
        <value><span data-ttu-id="8c25f-122"><see cref="T:System.ServiceModel.EndpointAddress" /> がメッセージを比較するとき基準とする <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-122">The <see cref="T:System.ServiceModel.EndpointAddress" /> that the <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> tests messages against.</span></span></value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateFilterTable&lt;FilterData&gt;">
      <MemberSignature Language="C#" Value="protected internal override System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt; CreateFilterTable&lt;FilterData&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method familyorassemblyhidebysig virtual instance class System.ServiceModel.Dispatcher.IMessageFilterTable`1&lt;!!FilterData&gt; CreateFilterTable&lt;FilterData&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.CreateFilterTable``1" />
      <MemberSignature Language="VB.NET" Value="Protected Friend Overrides Function CreateFilterTable(Of FilterData) () As IMessageFilterTable(Of FilterData)" />
      <MemberSignature Language="C++ CLI" Value="protected public:&#xA;generic &lt;typename FilterData&gt;&#xA; override System::ServiceModel::Dispatcher::IMessageFilterTable&lt;FilterData&gt; ^ CreateFilterTable();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.ServiceModel.Dispatcher.IMessageFilterTable&lt;FilterData&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="FilterData" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="FilterData"><span data-ttu-id="8c25f-123">テーブル内のフィルターに関連付けられたデータ。</span><span class="sxs-lookup"><span data-stu-id="8c25f-123">Data associated with the filters in the table.</span></span></typeparam>
        <summary><span data-ttu-id="8c25f-124">メッセージを複数のエンドポイント アドレスについて同時に検査する新しいフィルター テーブルを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-124">Creates a new filter table that tests a message against multiple endpoint addresses simultaneously.</span></span></summary>
        <returns><span data-ttu-id="8c25f-125"><see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> および対応する <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" /> を格納できる <paramref name="FilterData" /> インターフェイスを実装するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c25f-125">An object that implements the <see cref="T:System.ServiceModel.Dispatcher.IMessageFilterTable`1" /> interface that can contain <see cref="T:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter" />s with associated <paramref name="FilterData" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-126">このメソッドは、特定のメッセージ エンドポイントの判定に最適化された <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> のインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-126">The method returns an instance of <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> that is optimized to test for specific message endpoints.</span></span>  
  
 <span data-ttu-id="8c25f-127">このメソッドは、<xref:System.ServiceModel.Dispatcher.MessageFilterTable%601> によって使用されることを想定しています。</span><span class="sxs-lookup"><span data-stu-id="8c25f-127">This method is intended to be used by <xref:System.ServiceModel.Dispatcher.MessageFilterTable%601>.</span></span> <span data-ttu-id="8c25f-128"><xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> コンストラクターを使用してフィルター テーブル インスタンスを作成します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-128">Use <xref:System.ServiceModel.Dispatcher.IMessageFilterTable%601> constructors to create filter table instances.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IncludeHostNameInComparison">
      <MemberSignature Language="C#" Value="public bool IncludeHostNameInComparison { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IncludeHostNameInComparison" />
      <MemberSignature Language="DocId" Value="P:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.IncludeHostNameInComparison" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IncludeHostNameInComparison As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IncludeHostNameInComparison { bool get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="8c25f-129">エンドポイント アドレスの比較にホスト名が含まれるかどうかを示す値を取得します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-129">Gets a value that indicates whether the host name is included in the endpoint address comparison.</span></span></summary>
        <value>
          <span data-ttu-id="8c25f-130">エンドポイント アドレスの比較にホスト名が含まれている場合は <see langword="true" />、それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-130"><see langword="true" /> if the host name is included in the endpoint address comparison; otherwise, <see langword="false" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-131">Web サービスをローカル コンピューターにインストールしている場合は、次のようなさまざまな参照方法があります。</span><span class="sxs-lookup"><span data-stu-id="8c25f-131">If you have a web service installed on your local machine, there are many equivalent ways to reference it, including the following:</span></span>  
  
-   http://localhost/foo.svc  
  
-   http://192.168.1.100/foo.svc  
  
-   <span data-ttu-id="8c25f-132">http://[コンピューター名]/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8c25f-132">http://[my-machine-name]/foo.svc</span></span>  
  
-   <span data-ttu-id="8c25f-133">http://[コンピューター名].[会社].com/foo.svc</span><span class="sxs-lookup"><span data-stu-id="8c25f-133">http://[my-machine-name].[my-company].com/foo.svc.</span></span>  
  
 <span data-ttu-id="8c25f-134">このプロパティの既定値は `false` であるため、プロパティを変更しない限り、上記の URI はすべて同じエンドポイントに解決されます。</span><span class="sxs-lookup"><span data-stu-id="8c25f-134">The default value of this property is `false`, so the above URIs all resolve to the same endpoint, unless you change this property.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Match">
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="8c25f-135">メッセージまたはバッファー内のメッセージがエンドポイント フィルターの基準を満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-135">Tests whether a message or buffered message satisfies the criteria of the endpoint filter.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-136"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> メソッドには 2 つのオーバーロードがあります。<xref:System.ServiceModel.Channels.MessageBuffer> パラメーターを受け取るオーバーロードは、一致しているかどうかを判定するためにメッセージの本文を確認できますが、<xref:System.ServiceModel.Channels.Message> パラメーターを受け取るオーバーロードはメッセージの本文を確認できません。</span><span class="sxs-lookup"><span data-stu-id="8c25f-136">The difference between the two overloads of the <xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> method is that the one that takes the <xref:System.ServiceModel.Channels.MessageBuffer> parameter is permitted to examine the body of a message when testing for a match, while the one that takes the <xref:System.ServiceModel.Channels.Message> parameter is not.</span></span>  
  
 <span data-ttu-id="8c25f-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> では、メッセージ本文の内容を判定に使用しないため、これらの 2 つのメソッドは等価です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-137"><xref:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match%2A> does not test the contents of the body of a message, so these two methods are equivalent.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.Message message);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.Message message) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.Message)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::Message ^ message);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="message" Type="System.ServiceModel.Channels.Message" />
      </Parameters>
      <Docs>
        <param name="message"><span data-ttu-id="8c25f-138">テスト対象の <see cref="T:System.ServiceModel.Channels.Message" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c25f-138">The <see cref="T:System.ServiceModel.Channels.Message" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8c25f-139">メッセージが指定したエンドポイント アドレスを満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-139">Tests whether a message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="8c25f-140"><see langword="true" /> オブジェクトがフィルターに指定されたエンドポイント アドレスとの一致条件を満たす場合は <see cref="T:System.ServiceModel.Channels.Message" />、そうでない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-140"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.Message" /> object satisfies the endpoint address specified in the filter; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-141">このメソッドの 2 つのオーバーロードは、どちらもメッセージ ヘッダーだけを調べるため、等価です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-141">The two overloads of this method are equivalent because they both examine only message headers.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c25f-142"><paramref name="message" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-142"><paramref name="message" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="Match">
      <MemberSignature Language="C#" Value="public override bool Match (System.ServiceModel.Channels.MessageBuffer messageBuffer);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Match(class System.ServiceModel.Channels.MessageBuffer messageBuffer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.ServiceModel.Dispatcher.EndpointAddressMessageFilter.Match(System.ServiceModel.Channels.MessageBuffer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Match(System::ServiceModel::Channels::MessageBuffer ^ messageBuffer);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.ServiceModel</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="messageBuffer" Type="System.ServiceModel.Channels.MessageBuffer" />
      </Parameters>
      <Docs>
        <param name="messageBuffer"><span data-ttu-id="8c25f-143">テスト対象の <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="8c25f-143">The <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object to test.</span></span></param>
        <summary><span data-ttu-id="8c25f-144">バッファー内のメッセージが指定したエンドポイント アドレスを満たすかどうかを検査します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-144">Tests whether a buffered message satisfies the specified endpoint address.</span></span></summary>
        <returns>
          <span data-ttu-id="8c25f-145"><see langword="true" /> オブジェクトがエンドポイント アドレスとの一致条件を満たす場合は <see cref="T:System.ServiceModel.Channels.MessageBuffer" />、そうでない場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="8c25f-145"><see langword="true" /> if the <see cref="T:System.ServiceModel.Channels.MessageBuffer" /> object satisfies the endpoint address; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="8c25f-146">このメソッドの 2 つのオーバーロードは、どちらもメッセージ ヘッダーだけを調べるため、等価です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-146">The two overloads of this method are equivalent because they both examine only message headers.</span></span> <span data-ttu-id="8c25f-147">このオーバーロードは、`messageBuffer` をメッセージに変換します。したがって、メッセージは利用できないが、`messageBuffer` は利用可能な場合に使用します。</span><span class="sxs-lookup"><span data-stu-id="8c25f-147">The only reason to use this overload is if you already had a `messageBuffer` available and not a message, because this method converts the `messageBuffer` into a message.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="8c25f-148"><paramref name="messageBuffer" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="8c25f-148"><paramref name="messageBuffer" /> is <see langword="null" />.</span></span></exception>
      </Docs>
    </Member>
  </Members>
</Type>