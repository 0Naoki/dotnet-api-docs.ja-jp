<Type Name="RouteCollection" FullName="System.Web.Routing.RouteCollection">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2fa0d99f07b7d00dd022180c99797d3bf4d01d85" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37605050" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class RouteCollection : System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit RouteCollection extends System.Collections.ObjectModel.Collection`1&lt;class System.Web.Routing.RouteBase&gt;" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.RouteCollection" />
  <TypeSignature Language="VB.NET" Value="Public Class RouteCollection&#xA;Inherits Collection(Of RouteBase)" />
  <TypeSignature Language="C++ CLI" Value="public ref class RouteCollection : System::Collections::ObjectModel::Collection&lt;System::Web::Routing::RouteBase ^&gt;" />
  <TypeSignature Language="F#" Value="type RouteCollection = class&#xA;    inherit Collection&lt;RouteBase&gt;" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Web.Routing</AssemblyName>
    <AssemblyVersion>3.5.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Collections.ObjectModel.Collection&lt;System.Web.Routing.RouteBase&gt;</BaseTypeName>
    <BaseTypeArguments>
      <BaseTypeArgument TypeParamName="!0">System.Web.Routing.RouteBase</BaseTypeArgument>
    </BaseTypeArguments>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.CompilerServices.TypeForwardedFrom("System.Web.Routing, Version=3.5.0.0, Culture=Neutral, PublicKeyToken=31bf3856ad364e35")</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="1f5fa-101">ASP.NET ルーティングのルートのコレクションを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="1f5fa-101">Provides a collection of routes for ASP.NET routing.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-102"><xref:System.Web.Routing.RouteCollection>クラスから派生したオブジェクトのコレクションを管理するためのメソッドを提供、<xref:System.Web.Routing.RouteBase>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-102">The <xref:System.Web.Routing.RouteCollection> class provides methods that enable you to manage a collection of objects that derive from the <xref:System.Web.Routing.RouteBase> class.</span></span>  
  
 <span data-ttu-id="1f5fa-103">通常、使用する、 `static` <xref:System.Web.Routing.RouteTable.Routes%2A>のプロパティ、<xref:System.Web.Routing.RouteTable>を取得するクラス、<xref:System.Web.Routing.RouteCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-103">Typically, you will use the `static`<xref:System.Web.Routing.RouteTable.Routes%2A> property of the <xref:System.Web.Routing.RouteTable> class to retrieve a <xref:System.Web.Routing.RouteCollection> object.</span></span> <span data-ttu-id="1f5fa-104"><xref:System.Web.Routing.RouteTable.Routes%2A>プロパティは、ASP.NET アプリケーションのすべてのルートを格納します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-104">The <xref:System.Web.Routing.RouteTable.Routes%2A> property stores all the routes for an ASP.NET application.</span></span> <span data-ttu-id="1f5fa-105">ASP.NET ルーティングでルートを反復処理、 <xref:System.Web.Routing.RouteTable.Routes%2A> URL に一致するルートを検索するプロパティ。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-105">ASP.NET routing iterates through the routes in the <xref:System.Web.Routing.RouteTable.Routes%2A> property to find the route that matches a URL.</span></span>  
  
 <span data-ttu-id="1f5fa-106">呼び出す URL を作成する、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>メソッドと値のコレクションを渡します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-106">To construct a URL, you call the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method and pass in a collection of values.</span></span> <span data-ttu-id="1f5fa-107"><xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>メソッドは、渡されたし、返します値と一致するパラメーターを持つ最初のルートを検索、<xref:System.Web.Routing.VirtualPathData>一致するルートに関する情報を含むオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-107">The <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method finds the first route with parameters that match the values that you passed in, and returns a <xref:System.Web.Routing.VirtualPathData> object that contains information about the matching route.</span></span> <span data-ttu-id="1f5fa-108">使用して URL を取得する、<xref:System.Web.Routing.VirtualPathData.VirtualPath%2A>のプロパティ、<xref:System.Web.Routing.VirtualPathData>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-108">You retrieve the URL through the <xref:System.Web.Routing.VirtualPathData.VirtualPath%2A> property of the <xref:System.Web.Routing.VirtualPathData> object.</span></span>  
  
 <span data-ttu-id="1f5fa-109">名前または名前のないルートを追加することができます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-109">You can add a route either with a name or without a name.</span></span> <span data-ttu-id="1f5fa-110">名を含む、似たようなルートの Url が作成されるときに区別できます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-110">Including a name enables you to distinguish between similar routes when URLs are constructed.</span></span> <span data-ttu-id="1f5fa-111">名前を指定しない場合は、URL を作成する最初の一致するルートをコレクションには ASP.NET ルーティングします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-111">If you do not specify a name, ASP.NET routing uses the first matching route in the collection to construct a URL.</span></span>  
  
 <span data-ttu-id="1f5fa-112">名前のないルートを追加すると、<xref:System.Web.Routing.RouteCollection>オブジェクト、コレクションに既に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-112">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span> <span data-ttu-id="1f5fa-113">名前付きのルートを追加すると、既にコレクション内のルートを識別する名前を使用することはできません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-113">When you add a named route, you cannot use a name that already identifies a route in the collection.</span></span>  
  
 <span data-ttu-id="1f5fa-114">使用する、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-114">You use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 <span data-ttu-id="1f5fa-115">ルート コレクションにルートを追加する方法の詳細については、次を参照してください。 [ASP.NET ルーティング](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a)します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-115">For more information about how to add a route to a route collection, see [ASP.NET Routing](http://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a).</span></span>  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-116">
            <see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-116">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-117">
            <see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-117">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public RouteCollection (System.Web.Hosting.VirtualPathProvider virtualPathProvider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Web.Hosting.VirtualPathProvider virtualPathProvider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.#ctor(System.Web.Hosting.VirtualPathProvider)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; RouteCollection(System::Web::Hosting::VirtualPathProvider ^ virtualPathProvider);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.RouteCollection : System.Web.Hosting.VirtualPathProvider -&gt; System.Web.Routing.RouteCollection" Usage="new System.Web.Routing.RouteCollection virtualPathProvider" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPathProvider" Type="System.Web.Hosting.VirtualPathProvider" />
      </Parameters>
      <Docs>
        <param name="virtualPathProvider">
          <span data-ttu-id="1f5fa-118">仮想ファイル システムからリソースを取得するためのプロバイダーです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-118">A provider for retrieving resources from a virtual file system.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-119">指定した仮想パス プロバイダーを使用して、<see cref="T:System.Web.Routing.RouteCollection" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-119">Initializes a new instance of the <see cref="T:System.Web.Routing.RouteCollection" /> class by using the specified virtual path provider.</span>
          </span>
        </summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public void Add (string name, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Add(string name, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Add(System.String,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Add (name As String, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Add(System::String ^ name, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.Add : string * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.Add (name, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1f5fa-120">ルートを識別する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-120">The value that identifies the route.</span>
          </span>
          <span data-ttu-id="1f5fa-121">この値を <see langword="null" /> または空の文字列にすることもできます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-121">The value can be <see langword="null" /> or an empty string.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1f5fa-122">コレクションの末尾に追加するルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-122">The route to add to the end of the collection.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-123">
            <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトの末尾にルートを追加し、指定の名前をそのルートに割り当てます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-123">Adds a route to the end of the <see cref="T:System.Web.Routing.RouteCollection" /> object and assigns the specified name to the route.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-124"><xref:System.Web.Routing.RouteCollection.Add%2A>メソッドでは、ルートのコレクションに追加すると、ルートの名前を定義することができます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-124">The <xref:System.Web.Routing.RouteCollection.Add%2A> method enables you to define a name for a route when you add it to the route collection.</span></span> <span data-ttu-id="1f5fa-125">ルートの名前を定義することで、URL を作成するルーティングを使用するときに使用する特定のルートを指定できます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-125">By defining a name for the route, you can specify a particular route to use when you use routing to construct a URL.</span></span> <span data-ttu-id="1f5fa-126">1 つ以上のルートに渡す値に一致する場合、特定のルートを指定することが重要です、<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-126">Specifying a particular route is important when more than one route matches the values that you pass to the <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> method.</span></span> <span data-ttu-id="1f5fa-127">名前付きのルートを指定しない場合、ASP.NET ルーティングと、最初のルートが値に一致するコレクション内で使用されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-127">If you do not specify a named route, ASP.NET routing will use the first route in the collection that matches the values.</span></span> <span data-ttu-id="1f5fa-128">詳細については、次を参照してください。[方法: ルートから Url を構築](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650)します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-128">For more information, see [How to: Construct URLs from Routes](http://msdn.microsoft.com/library/1ffd4085-71f6-4822-be8f-f682ca638650).</span></span>  
  
 <span data-ttu-id="1f5fa-129">名前に 1 回だけを使用できます、<xref:System.Web.Routing.RouteCollection>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-129">A name can be used only one time in the <xref:System.Web.Routing.RouteCollection> object.</span></span>  
  
 <span data-ttu-id="1f5fa-130">呼び出すことによって、ルートを追加するには、ルートの名前を指定していない場合、<xref:System.Collections.ObjectModel.Collection%601.Add%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-130">If you do not have to specify a name for the route, you can add the route by calling the <xref:System.Collections.ObjectModel.Collection%601.Add%2A> method.</span></span>  
  
 <span data-ttu-id="1f5fa-131">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-131">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-132">次の例へのルートを追加する方法を示しています、<xref:System.Web.Routing.RouteCollection>オブジェクトし、ルートに名前を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-132">The following example shows how to add a route to a <xref:System.Web.Routing.RouteCollection> object and assign a name to the route.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#1)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-133">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-133">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f5fa-134">
            <paramref name="name" /> はコレクション内で既に使用されています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-134">
              <paramref name="name" /> is already used in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="AppendTrailingSlash">
      <MemberSignature Language="C#" Value="public bool AppendTrailingSlash { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AppendTrailingSlash" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberSignature Language="VB.NET" Value="Public Property AppendTrailingSlash As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AppendTrailingSlash { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AppendTrailingSlash : bool with get, set" Usage="System.Web.Routing.RouteCollection.AppendTrailingSlash" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-135">仮想パスが正規化されるときに後続のスラッシュを追加するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-135">Gets or sets a value that indicates whether trailing slashes are added when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f5fa-136">末尾のスラッシュが追加される場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-136">
              <see langword="true" /> if trailing slashes are added; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1f5fa-137">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-137">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="ClearItems">
      <MemberSignature Language="C#" Value="protected override void ClearItems ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void ClearItems() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.ClearItems" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub ClearItems ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void ClearItems();" />
      <MemberSignature Language="F#" Value="override this.ClearItems : unit -&gt; unit" Usage="routeCollection.ClearItems " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-138">
            <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトからすべての要素を削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-138">Removes all the elements from the <see cref="T:System.Web.Routing.RouteCollection" /> object.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-139">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-139">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetReadLock">
      <MemberSignature Language="C#" Value="public IDisposable GetReadLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetReadLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetReadLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetReadLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetReadLock();" />
      <MemberSignature Language="F#" Value="member this.GetReadLock : unit -&gt; IDisposable" Usage="routeCollection.GetReadLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-140">コレクションからオブジェクトを取得する場合に、スレッド セーフを管理するためのオブジェクトを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-140">Provides an object for managing thread safety when you retrieve an object from the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-141">スレッド セーフを管理するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-141">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-142"><xref:System.Web.Routing.RouteCollection>オブジェクトは、アプリケーションで複数のプロセスに利用できます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-142">The <xref:System.Web.Routing.RouteCollection> object is available to multiple processes in the application.</span></span> <span data-ttu-id="1f5fa-143">したがって、アプリケーションが実行されているときに、ルートを取得する場合は、使用、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドはスレッド セーフを確保するためにします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-143">Therefore, if you have to retrieve a route when the application is running, use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method in order to guarantee thread safety.</span></span> <span data-ttu-id="1f5fa-144">ルート コレクションの読み取りロックを取得するには、それを取得しようとしているときに、コレクションは変更されませんを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-144">By obtaining a read lock on the route collection, you make sure that the collection will not be modified while you are trying to retrieve it.</span></span>  
  
 <span data-ttu-id="1f5fa-145"><xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドは、スレッドのロックを獲得するまで続行を停止します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-145">The <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method stops the thread from continuing until the lock can be acquired.</span></span> <span data-ttu-id="1f5fa-146">書き込みロックをする場合、スレッドは、更新が完了して、書き込みロックが解放されるまで待機します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-146">If a write lock is in place, the thread waits until the update is completed and the write lock is released.</span></span> <span data-ttu-id="1f5fa-147">ルート コレクションの読み取りロックが解放されたときに、<xref:System.IDisposable>このメソッドによって返されるオブジェクトを破棄します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-147">The read lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
 <span data-ttu-id="1f5fa-148">使用しない場合<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>、中にエラーが発生する可能性があります、<xref:System.Web.Routing.RouteCollection>コレクション。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-148">If you do not use <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>, you might get an error while you are reading through the <xref:System.Web.Routing.RouteCollection> collection.</span></span> <span data-ttu-id="1f5fa-149">たとえば、内のオブジェクト内をループして、<xref:System.Web.Routing.RouteCollection>を呼び出さずに、それらを読み取るコレクション<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-149">For example, suppose you loop through the objects in the <xref:System.Web.Routing.RouteCollection> collection to read them, without calling <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span> <span data-ttu-id="1f5fa-150">別の要求から別のスレッドを呼び出すことができますを行いますが、<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>し、コレクションにルートを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-150">While you are doing that, another thread from another request might call <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> and add a route to the collection.</span></span> <span data-ttu-id="1f5fa-151">最初のスレッドはエラーで失敗します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-151">The first thread will then fail with an error.</span></span>  
  
 <span data-ttu-id="1f5fa-152">2 つのシナリオでは呼び出しする必要はありませんが<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span><span class="sxs-lookup"><span data-stu-id="1f5fa-152">There are two scenarios in which you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>:</span></span>  
  
-   <span data-ttu-id="1f5fa-153">パブリック メソッド、<xref:System.Web.Routing.RouteCollection>などクラス<xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A>と<xref:System.Web.Routing.RouteCollection.GetRouteData%2A>呼び出す<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>内部的にします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-153">Public methods of the <xref:System.Web.Routing.RouteCollection> class such as <xref:System.Web.Routing.RouteCollection.GetVirtualPath%2A> and <xref:System.Web.Routing.RouteCollection.GetRouteData%2A> call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> internally.</span></span> <span data-ttu-id="1f5fa-154">したがって、明示的に呼び出す必要はない<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>のパブリック メソッドを呼び出すと、<xref:System.Web.Routing.RouteCollection>コレクションからデータを取得するクラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-154">Therefore, you do not have to explicitly call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> when you call a public method of the <xref:System.Web.Routing.RouteCollection> class to retrieve data from the collection.</span></span>  
  
-   <span data-ttu-id="1f5fa-155">アプリケーションが開始およびがまだ要求を処理しないなどの`Application_Start`イベント ハンドラーでは、1 つのスレッドが実行されています。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-155">When the application is starting and is not yet processing requests, such as in the `Application_Start` event handler, only one thread is running.</span></span> <span data-ttu-id="1f5fa-156">呼び出していない他のスレッドがその中に、コレクションを更新することがありますがないため、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-156">Because there are no other threads that might update the collection while you are reading it, you do not have to call <xref:System.Web.Routing.RouteCollection.GetReadLock%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-157">次の例は、使用する方法を示します、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッド、アプリケーションの実行中にルートを取得するとき。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-157">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method when you retrieve a route while the application is running.</span></span> <span data-ttu-id="1f5fa-158">`Using`ステートメントにより、ことを読み込んだとき、コレクションから (コードが正常に完了したか、例外がスローされます) かどうか、実行時に何が起きようとも、ロックは安全に解放の最後に、`Using`コード ブロックです。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-158">The `Using` statement ensures that no matter what happens at run time when you read from the collection (whether the code completes normally or an exception is thrown) the lock will be safely released at the end of the `Using` code block.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetRouteData">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteData GetRouteData (System.Web.HttpContextBase httpContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.RouteData GetRouteData(class System.Web.HttpContextBase httpContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetRouteData(System.Web.HttpContextBase)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetRouteData (httpContext As HttpContextBase) As RouteData" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::RouteData ^ GetRouteData(System::Web::HttpContextBase ^ httpContext);" />
      <MemberSignature Language="F#" Value="member this.GetRouteData : System.Web.HttpContextBase -&gt; System.Web.Routing.RouteData" Usage="routeCollection.GetRouteData httpContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="httpContext" Type="System.Web.HttpContextBase" />
      </Parameters>
      <Docs>
        <param name="httpContext">
          <span data-ttu-id="1f5fa-159">HTTP 要求に関する情報をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-159">An object that encapsulates information about the HTTP request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-160">指定した値に一致するコレクション内のルートに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-160">Returns information about the route in the collection that matches the specified values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-161">ルート定義からの値を含むオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-161">An object that contains the values from the route definition.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-162">
            <paramref name="context" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-162">
              <paramref name="context" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f5fa-163">
            <paramref name="context" /> パラメーターのオブジェクトの <see cref="P:System.Web.HttpContextBase.Request" /> プロパティが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-163">The <see cref="P:System.Web.HttpContextBase.Request" /> property of the object in the <paramref name="context" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetVirtualPath">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-164">ルートと関連付けられている URL パスに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-164">Returns information about the URL path that is associated with the route.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="1f5fa-165">要求されたルートに関する情報をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-165">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="1f5fa-166">ルートのパラメーターを格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-166">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-167">指定のコンテキストとパラメーター値に基づいて、ルートに関連付けられている URL パスに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-167">Returns information about the URL path that is associated with the route, given the specified context and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-168">ルートに関連付けられている URL パスに関する情報を格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-168">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetVirtualPath">
      <MemberSignature Language="C#" Value="public System.Web.Routing.VirtualPathData GetVirtualPath (System.Web.Routing.RequestContext requestContext, string name, System.Web.Routing.RouteValueDictionary values);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.VirtualPathData GetVirtualPath(class System.Web.Routing.RequestContext requestContext, string name, class System.Web.Routing.RouteValueDictionary values) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetVirtualPath(System.Web.Routing.RequestContext,System.String,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::VirtualPathData ^ GetVirtualPath(System::Web::Routing::RequestContext ^ requestContext, System::String ^ name, System::Web::Routing::RouteValueDictionary ^ values);" />
      <MemberSignature Language="F#" Value="member this.GetVirtualPath : System.Web.Routing.RequestContext * string * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.VirtualPathData" Usage="routeCollection.GetVirtualPath (requestContext, name, values)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.VirtualPathData</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
        <Parameter Name="name" Type="System.String" />
        <Parameter Name="values" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="1f5fa-169">要求されたルートに関する情報をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-169">An object that encapsulates information about the requested route.</span>
          </span>
        </param>
        <param name="name">
          <span data-ttu-id="1f5fa-170">URL パスに関する情報を取得するときに使用するルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-170">The name of the route to use when information about the URL path is retrieved.</span>
          </span>
        </param>
        <param name="values">
          <span data-ttu-id="1f5fa-171">ルートのパラメーターを格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-171">An object that contains the parameters for a route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-172">指定したコンテキスト、ルート名、およびパラメーター値の条件下で、名前付きのルートに関連付けられている URL パスに関する情報を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-172">Returns information about the URL path that is associated with the named route, given the specified context, route name, and parameter values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-173">ルートに関連付けられている URL パスに関する情報を格納するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-173">An object that contains information about the URL path that is associated with the route.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f5fa-174">
            <paramref name="name" /> パラメーターで指定された名前のルートが見つかりませんでした。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-174">No route could be found that has the name specified in the <paramref name="name" /> parameter.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="GetWriteLock">
      <MemberSignature Language="C#" Value="public IDisposable GetWriteLock ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.IDisposable GetWriteLock() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.GetWriteLock" />
      <MemberSignature Language="VB.NET" Value="Public Function GetWriteLock () As IDisposable" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; IDisposable ^ GetWriteLock();" />
      <MemberSignature Language="F#" Value="member this.GetWriteLock : unit -&gt; IDisposable" Usage="routeCollection.GetWriteLock " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.IDisposable</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-175">コレクション内の要素を追加または削除する場合に、スレッド セーフを管理するためのオブジェクトを提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-175">Provides an object for managing thread safety when you add or remove elements in the collection.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-176">スレッド セーフを管理するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-176">An object that manages thread safety.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-177">ASP.NET アプリケーションのルートを定義するための推奨されるアプローチがへのルートを追加するには、<xref:System.Web.Routing.RouteTable.Routes%2A>のイベント ハンドラーのプロパティ、 `Application_Start` Global.asax ファイル内のイベント。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-177">The recommended approach for defining routes in an ASP.NET application is to add the routes to the <xref:System.Web.Routing.RouteTable.Routes%2A> property in an event handler for the `Application_Start` event in the Global.asax file.</span></span> <span data-ttu-id="1f5fa-178">詳細については、「<xref:System.Web.Routing.RouteCollection>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-178">For more information, see <xref:System.Web.Routing.RouteCollection>.</span></span>  
  
 <span data-ttu-id="1f5fa-179">使用するアプリケーションを実行するときにルートを追加した場合、<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>スレッド セーフを確保する方法。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-179">If you have to add a route when the application is running, you use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to guarantee thread safety.</span></span> <span data-ttu-id="1f5fa-180">ルート コレクションの書き込みロックが解放されたときに、<xref:System.IDisposable>このメソッドによって返されるオブジェクトを破棄します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-180">The write lock on the route collection is released when the <xref:System.IDisposable> object that is returned by this method is disposed.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-181">次の例は、使用する方法を示します、<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>場合に、アプリケーションの実行中にルートを追加する方法。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-181">The following example shows how to use the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method when you add a route while the application is running.</span></span>  
  
  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Ignore">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-182">ルートの照合を行わない URL パターンを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-182">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-183">このメソッドにマップされているルートの作成、<xref:System.Web.Routing.StopRoutingHandler>ルート ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-183">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="1f5fa-184">このメソッドを呼び出した後の要求をルーティングとして指定した URL パターンに一致する要求は処理されません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-184">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="1f5fa-185">イメージ ファイルなどの物理ファイルと、URL が一致するときに、要求を無視に自動的に ASP.NET ルーティングします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-185">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="1f5fa-186">場合によっては物理ファイルが存在しない場合は、要求を無視するルーティングもすることがあります。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-186">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="1f5fa-187">たとえば、ASP.NET は .axd ファイルに対して自動的に作成される要求扱うことはできませんとして要求をルーティング .axd 拡張子に対応する物理ファイルがない場合でもです。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-187">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string -&gt; unit" Usage="routeCollection.Ignore url" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="1f5fa-188">無視する URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-188">The URL pattern to be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-189">ルートの照合を行わない URL パターンを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-189">Defines a URL pattern that should not be checked for matches against routes.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-190">このメソッドにマップされているルートの作成、<xref:System.Web.Routing.StopRoutingHandler>ルート ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-190">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="1f5fa-191">このメソッドを呼び出した後の要求をルーティングとして指定した URL パターンに一致する要求は処理されません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-191">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="1f5fa-192">イメージ ファイルなどの物理ファイルと、URL が一致するときに、要求を無視に自動的に ASP.NET ルーティングします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-192">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="1f5fa-193">場合によっては物理ファイルが存在しない場合は、要求を無視するルーティングもすることがあります。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-193">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="1f5fa-194">たとえば、ASP.NET は .axd ファイルに対して自動的に作成される要求扱うことはできませんとして要求をルーティング .axd 拡張子に対応する物理ファイルがない場合でもです。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-194">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-195">MVC プロジェクトの既定のテンプレートは、次の例に示すように、.axd ファイル、ルーティングから除外するのにこのメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-195">The default template for MVC projects uses this method to exclude .axd files from routing, as shown in the following example:</span></span>  
  
 [!code-csharp[MvcDefaultApp#2](~/samples/snippets/csharp/VS_Snippets_WebNet/mvcdefaultapp/cs/global.asax.cs#2)]
 [!code-vb[MvcDefaultApp#2](~/samples/snippets/visualbasic/VS_Snippets_WebNet/mvcdefaultapp/vb/global.asax.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Ignore">
      <MemberSignature Language="C#" Value="public void Ignore (string url, object constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Ignore(string url, object constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.Ignore(System.String,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Sub Ignore (url As String, constraints As Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Ignore(System::String ^ url, System::Object ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.Ignore : string * obj -&gt; unit" Usage="routeCollection.Ignore (url, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="url" Type="System.String" />
        <Parameter Name="constraints" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="url">
          <span data-ttu-id="1f5fa-196">無視する URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-196">The URL pattern to be ignored.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="1f5fa-197">URL パターンに一致する要求を無視するかどうかを決定する、追加の抽出条件。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-197">Additional criteria that determine whether a request that matches the URL pattern will be ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-198">要求 URL が指定された制約に一致する場合に、ルートの照合を行わない URL パターンを定義します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-198">Defines a URL pattern that should not be checked for matches against routes if a request URL meets the specified constraints.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-199">このメソッドにマップされているルートの作成、<xref:System.Web.Routing.StopRoutingHandler>ルート ハンドラー。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-199">This method creates a route that is mapped to the <xref:System.Web.Routing.StopRoutingHandler> route handler.</span></span> <span data-ttu-id="1f5fa-200">このメソッドを呼び出した後の要求をルーティングとして指定した URL パターンに一致する要求は処理されません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-200">After you call this method, requests that match the specified URL pattern will not be processed as route requests.</span></span>  
  
 <span data-ttu-id="1f5fa-201">イメージ ファイルなどの物理ファイルと、URL が一致するときに、要求を無視に自動的に ASP.NET ルーティングします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-201">ASP.NET routing automatically ignores requests when the URL matches a physical file, such as an image file.</span></span> <span data-ttu-id="1f5fa-202">場合によっては物理ファイルが存在しない場合は、要求を無視するルーティングもすることがあります。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-202">In some cases you might also want routing to ignore requests when there is no physical file.</span></span> <span data-ttu-id="1f5fa-203">たとえば、ASP.NET は .axd ファイルに対して自動的に作成される要求扱うことはできませんとして要求をルーティング .axd 拡張子に対応する物理ファイルがない場合でもです。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-203">For example, the requests that ASP.NET automatically makes for .axd files should not be treated as route requests even though there is no physical file that corresponds to the .axd file-name extension.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-204">次の例では、このメソッドを使用して、.aspx 拡張子を持つすべての Url を無視する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-204">The following example shows how to use this method to ignore all URLs that have an .aspx extension.</span></span> <span data-ttu-id="1f5fa-205">拡張子".aspx"を持つファイルのすべての Url を処理するためにカスタム HTTP ハンドラーを登録する場合に実行する場合があります。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-205">You might want to do this if you register a custom HTTP handler to handle all URLs for files that have the extension ".aspx".</span></span> <span data-ttu-id="1f5fa-206">すべての .aspx 要求と一致する 1 つの URL パターンは 2 つの汎用パラメーターになどが必要です`{*path}.aspx/{*pathinfo}`します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-206">A single URL pattern that would match all .aspx requests would require two catchall parameters such as `{*path}.aspx/{*pathinfo}`.</span></span> <span data-ttu-id="1f5fa-207">(このパターンは、クエリ文字列パラメーターを持つものも含め、.aspx で終了する任意の URL を一致と)ただし、ルーティングを使用すると、最後の 1 の汎用パラメーターが 1 つだけができます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-207">(This pattern would match any URL that ends in .aspx, including those that have query-string parameters.) However, routing allows only one catchall parameter at the end.</span></span> <span data-ttu-id="1f5fa-208">代わりに、URL パターンを持つすべての Url と一致する 1 つの汎用パラメーターを指定し、次の例に示すように、.aspx 拡張機能がないすべてを除外する制約を指定できます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-208">As an alternative, you can specify a URL pattern that has a single catchall parameter that matches all URLs and then specify constraints that exclude everything that does not have the .aspx extension, as shown in the following example:</span></span>  
  
```vb  
routes.Ignore("{*allaspx}", new With {.allaspx = ".*\.aspx(/.*)?"})  
```  
  
```csharp  
routes.Ignore("{*allaspx}", new {allaspx=@".*\.aspx(/.*)?"});  
```  
  
 <span data-ttu-id="1f5fa-209">前のコード行から呼び出されるメソッドに通常追加される、`Application_Start`メソッドの例で示すように、Global.asax、<xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-209">The previous line of code would typically be added to a method that is called from the `Application_Start` method in the Global.asax, as shown in the example for the <xref:System.Web.Routing.RouteCollection.Ignore%28System.String%29> overload.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-210">
            <paramref name="url" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-210">The <paramref name="url" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="InsertItem">
      <MemberSignature Language="C#" Value="protected override void InsertItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void InsertItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.InsertItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub InsertItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void InsertItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.InsertItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.InsertItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1f5fa-211">
            <c>item</c> を挿入する位置の 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-211">The zero-based index at which <c>item</c> is inserted.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1f5fa-212">挿入するルートです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-212">The route to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-213">
            <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクト内の指定したインデックス位置に、指定したルートを挿入します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-213">Inserts the specified route into the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-214">名前のないルートを追加すると、<xref:System.Web.Routing.RouteCollection>オブジェクト、コレクションに既に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-214">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="1f5fa-215">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-215">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-216">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-216">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f5fa-217">
            <paramref name="item" /> はコレクション内に既に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-217">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public System.Web.Routing.RouteBase this[string name] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Web.Routing.RouteBase Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public ReadOnly Property Item(name As String) As RouteBase" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Web::Routing::RouteBase ^ default[System::String ^] { System::Web::Routing::RouteBase ^ get(System::String ^ name); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : System.Web.Routing.RouteBase" Usage="System.Web.Routing.RouteCollection.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.RouteBase</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="name" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="name">
          <span data-ttu-id="1f5fa-218">取得するルートを識別する値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-218">The value that identifies the route to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-219">指定した名前を持つコレクションのルートを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-219">Gets the route in the collection that has the specified name.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f5fa-220">指定した名前を持つオブジェクト。<paramref name="name" /> が <see langword="null" />、空の文字列、またはコレクション内のいずれのルートとも一致しない名前である場合は <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-220">An object that has the specified name, or <see langword="null" /> if <paramref name="name" /> is <see langword="null" />, is an empty string, or does not match any route in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-221">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-221">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="LowercaseUrls">
      <MemberSignature Language="C#" Value="public bool LowercaseUrls { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool LowercaseUrls" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberSignature Language="VB.NET" Value="Public Property LowercaseUrls As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool LowercaseUrls { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.LowercaseUrls : bool with get, set" Usage="System.Web.Routing.RouteCollection.LowercaseUrls" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-222">仮想パスが正規化されるときに URL を小文字に変換するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-222">Gets or sets a value that indicates whether URLs are converted to lower case when virtual paths are normalized.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f5fa-223">小文字に URL を変換する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-223">
              <see langword="true" /> to convert URLs to lower case; otherwise <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1f5fa-224">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-224">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-225">URL にクエリ文字列が含まれる場合、URL の部分は大文字と小文字に変換されません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-225">If a query string is included in the URL, that part of the URL is not converted to lower case.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="MapPageRoute">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-226">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-226">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-227">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-227">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-228">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-228">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-229">次の例では、このメソッドを使用して、Web フォーム アプリケーションのルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-229">The following example shows how to define routes for a Web Forms application by using this method.</span></span> <span data-ttu-id="1f5fa-230">例では、という名前のメソッドを示しています。`RegisterRoutes`から呼び出される`Application_Start`Global.asax ファイルにします。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-230">The example shows a method named `RegisterRoutes` that is called from `Application_Start` in the Global.asax file.</span></span> <span data-ttu-id="1f5fa-231">メソッドの各オーバー ロードを使用して<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>アプリケーションにルートを追加します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-231">The method uses each overload of <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> to add a route to the application.</span></span> <span data-ttu-id="1f5fa-232">Web フォーム アプリケーションのルートを定義する方法の詳細については、次を参照してください。[方法: Web フォーム アプリケーションの定義のルート](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678)します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-232">For more information about how to define routes for Web Forms applications, see [How to: Define Routes for Web Forms Applications](http://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678).</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#122)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#122](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#122)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="1f5fa-233">ルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-233">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="1f5fa-234">ルートの URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-234">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="1f5fa-235">ルートの物理的な URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-235">The physical URL for the route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-236">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-236">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-237">ルート コレクションに追加されたルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-237">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-238">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-238">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-239">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-239">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-240">次の例では、このメソッドを使用してルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-240">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="1f5fa-241">最初のステートメントでは、名前がないルートを定義します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-241">The first statement defines a route that does not have a name.</span></span> <span data-ttu-id="1f5fa-242">2 番目のステートメントでは、名前付きルートを定義します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-242">The second statement defines a named route.</span></span> <span data-ttu-id="1f5fa-243">この例が記載されている長い例の一部、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>メソッドの概要。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-243">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#140)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#140](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#140)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="1f5fa-244">ルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-244">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="1f5fa-245">ルートの URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-245">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="1f5fa-246">ルートの物理的な URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-246">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="1f5fa-247">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-247">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="1f5fa-248">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-248">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-249">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-249">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-250">ルート コレクションに追加されたルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-250">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-251">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-251">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-252">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-252">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-253">次の例では、このメソッドを使用してルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-253">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="1f5fa-254">この例が記載されている長い例の一部、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>メソッドの概要。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-254">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#145)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#145](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#145)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="1f5fa-255">ルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-255">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="1f5fa-256">ルートの URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-256">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="1f5fa-257">ルートの物理的な URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-257">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="1f5fa-258">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-258">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="1f5fa-259">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-259">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="1f5fa-260">ルート パラメーターの既定値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-260">Default values for the route parameters.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-261">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-261">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-262">ルート コレクションに追加されたルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-262">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-263">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-263">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-264">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-264">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-265">次の例では、このメソッドを使用してルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-265">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="1f5fa-266">この例が記載されている長い例の一部、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>メソッドの概要。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-266">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#150)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#150](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#150)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="1f5fa-267">ルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-267">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="1f5fa-268">ルートの URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-268">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="1f5fa-269">ルートの物理的な URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-269">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="1f5fa-270">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-270">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="1f5fa-271">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-271">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="1f5fa-272">ルートの既定値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-272">Default values for the route.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="1f5fa-273">このルートとして処理されるために URL 要求で満たす必要がある制約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-273">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-274">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-274">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-275">ルート コレクションに追加されたルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-275">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-276">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-276">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-277">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-277">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-278">次の例では、このメソッドを使用してルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-278">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="1f5fa-279">この例が記載されている長い例の一部、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>メソッドの概要。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-279">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#155)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#155](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#155)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="MapPageRoute">
      <MemberSignature Language="C#" Value="public System.Web.Routing.Route MapPageRoute (string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, System.Web.Routing.RouteValueDictionary defaults, System.Web.Routing.RouteValueDictionary constraints, System.Web.Routing.RouteValueDictionary dataTokens);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance class System.Web.Routing.Route MapPageRoute(string routeName, string routeUrl, string physicalFile, bool checkPhysicalUrlAccess, class System.Web.Routing.RouteValueDictionary defaults, class System.Web.Routing.RouteValueDictionary constraints, class System.Web.Routing.RouteValueDictionary dataTokens) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.MapPageRoute(System.String,System.String,System.String,System.Boolean,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary,System.Web.Routing.RouteValueDictionary)" />
      <MemberSignature Language="VB.NET" Value="Public Function MapPageRoute (routeName As String, routeUrl As String, physicalFile As String, checkPhysicalUrlAccess As Boolean, defaults As RouteValueDictionary, constraints As RouteValueDictionary, dataTokens As RouteValueDictionary) As Route" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Web::Routing::Route ^ MapPageRoute(System::String ^ routeName, System::String ^ routeUrl, System::String ^ physicalFile, bool checkPhysicalUrlAccess, System::Web::Routing::RouteValueDictionary ^ defaults, System::Web::Routing::RouteValueDictionary ^ constraints, System::Web::Routing::RouteValueDictionary ^ dataTokens);" />
      <MemberSignature Language="F#" Value="member this.MapPageRoute : string * string * string * bool * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary * System.Web.Routing.RouteValueDictionary -&gt; System.Web.Routing.Route" Usage="routeCollection.MapPageRoute (routeName, routeUrl, physicalFile, checkPhysicalUrlAccess, defaults, constraints, dataTokens)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.Routing.Route</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="routeName" Type="System.String" />
        <Parameter Name="routeUrl" Type="System.String" />
        <Parameter Name="physicalFile" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
        <Parameter Name="defaults" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="constraints" Type="System.Web.Routing.RouteValueDictionary" />
        <Parameter Name="dataTokens" Type="System.Web.Routing.RouteValueDictionary" />
      </Parameters>
      <Docs>
        <param name="routeName">
          <span data-ttu-id="1f5fa-280">ルートの名前。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-280">The name of the route.</span>
          </span>
        </param>
        <param name="routeUrl">
          <span data-ttu-id="1f5fa-281">ルートの URL パターン。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-281">The URL pattern for the route.</span>
          </span>
        </param>
        <param name="physicalFile">
          <span data-ttu-id="1f5fa-282">ルートの物理的な URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-282">The physical URL for the route.</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="1f5fa-283">物理的な URL にアクセスするための権限をユーザーが持っていることを ASP.NET で確認するかどうかを示す値 (ルート URL は常にチェックされます)。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-283">A value that indicates whether ASP.NET should validate that the user has authority to access the physical URL (the route URL is always checked).</span>
          </span>
          <span data-ttu-id="1f5fa-284">このパラメーターは、<see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> プロパティを設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-284">This parameter sets the <see cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" /> property.</span>
          </span>
        </param>
        <param name="defaults">
          <span data-ttu-id="1f5fa-285">ルート パラメーターの既定値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-285">Default values for the route parameters.</span>
          </span>
        </param>
        <param name="constraints">
          <span data-ttu-id="1f5fa-286">このルートとして処理されるために URL 要求で満たす必要がある制約。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-286">Constraints that a URL request must meet in order to be processed as this route.</span>
          </span>
        </param>
        <param name="dataTokens">
          <span data-ttu-id="1f5fa-287">ルートに関連付けられているが、ルートが URL パターンに一致するかどうかの判定には使用されない値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-287">Values that are associated with the route that are not used to determine whether a route matches a URL pattern.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-288">Web フォーム アプリケーションのルートを定義する手段を提供します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-288">Provides a way to define routes for Web Forms applications.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="1f5fa-289">ルート コレクションに追加されたルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-289">The route that is added to the route collection.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-290">このメソッドは、利便性をコーディングするために提供されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-290">This method is provided for coding convenience.</span></span> <span data-ttu-id="1f5fa-291">呼び出すことと同じである、<xref:System.Web.Routing.RouteCollection.Add%2A>メソッドと受け渡しを<xref:System.Web.Routing.Route>を使用して作成されたオブジェクトに、<xref:System.Web.Routing.PageRouteHandler>クラス。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-291">It is equivalent to calling the <xref:System.Web.Routing.RouteCollection.Add%2A> method and passing a <xref:System.Web.Routing.Route> object that is created by using the <xref:System.Web.Routing.PageRouteHandler> class.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="1f5fa-292">次の例では、このメソッドを使用してルートを定義する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-292">The following example shows how to define a route by using this method.</span></span> <span data-ttu-id="1f5fa-293">この例が記載されている長い例の一部、<xref:System.Web.Routing.RouteCollection.MapPageRoute%2A>メソッドの概要。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-293">This example is part of a larger example that is available in the <xref:System.Web.Routing.RouteCollection.MapPageRoute%2A> method overview.</span></span>  
  
 [!code-csharp[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/csharp/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/cs/global.asax#160)]
 [!code-vb[System.Web.Routing.RouteCollection.MapPageRoute#160](~/samples/snippets/visualbasic/VS_Snippets_WebNet/system.web.routing.routecollection.mappageroute/vb/global.asax#160)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-294">
            <paramref name="routeUrl" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-294">The <paramref name="routeUrl" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="RemoveItem">
      <MemberSignature Language="C#" Value="protected override void RemoveItem (int index);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void RemoveItem(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.RemoveItem(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub RemoveItem (index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void RemoveItem(int index);" />
      <MemberSignature Language="F#" Value="override this.RemoveItem : int -&gt; unit" Usage="routeCollection.RemoveItem index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1f5fa-295">削除するルートの 0 から始まるインデックス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-295">The zero-based index of the route to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-296">
            <see cref="T:System.Web.Routing.RouteCollection" /> オブジェクトから指定したインデックス位置にあるルートを削除します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-296">Removes the route from the <see cref="T:System.Web.Routing.RouteCollection" /> object at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-297">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-297">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="RouteExistingFiles">
      <MemberSignature Language="C#" Value="public bool RouteExistingFiles { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool RouteExistingFiles" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberSignature Language="VB.NET" Value="Public Property RouteExistingFiles As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool RouteExistingFiles { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.RouteExistingFiles : bool with get, set" Usage="System.Web.Routing.RouteCollection.RouteExistingFiles" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="1f5fa-298">既存のファイルと一致する URL を ASP.NET ルーティングが処理するかどうかを示す値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-298">Gets or sets a value that indicates whether ASP.NET routing should handle URLs that match an existing file.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="1f5fa-299">ASP.NET ルーティングで、既存のファイルと一致する要求も含めすべての要求を処理する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-299">
              <see langword="true" /> if ASP.NET routing handles all requests, even those that match an existing file; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="1f5fa-300">既定値は <see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-300">The default value is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-301">この値を動的に変更することができます、ASP.NET ルーティングの統合を使用する場合、サービスがアクティブになった後に加えた変更は無視されます。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-301">Although this value can be changed dynamically, any change made after a service has been activated will be ignored when using ASP.NET routing integration.</span></span> <span data-ttu-id="1f5fa-302">詳細については、次を参照してください。 [ASP.NET ルーティング統合](http://go.microsoft.com/fwlink/?LinkId=195235)します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-302">For more information, see [ASP.NET Routing Integration](http://go.microsoft.com/fwlink/?LinkId=195235).</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="SetItem">
      <MemberSignature Language="C#" Value="protected override void SetItem (int index, System.Web.Routing.RouteBase item);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void SetItem(int32 index, class System.Web.Routing.RouteBase item) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.RouteCollection.SetItem(System.Int32,System.Web.Routing.RouteBase)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub SetItem (index As Integer, item As RouteBase)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void SetItem(int index, System::Web::Routing::RouteBase ^ item);" />
      <MemberSignature Language="F#" Value="override this.SetItem : int * System.Web.Routing.RouteBase -&gt; unit" Usage="routeCollection.SetItem (index, item)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Web.Routing</AssemblyName>
        <AssemblyVersion>3.5.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="item" Type="System.Web.Routing.RouteBase" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="1f5fa-303">置き換えるルートの 0 から始まるインデックス番号。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-303">The zero-based index of the route to replace.</span>
          </span>
        </param>
        <param name="item">
          <span data-ttu-id="1f5fa-304">指定したインデックス位置に追加するルート。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-304">The route to add at the specified index.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="1f5fa-305">指定したインデックス位置にあるルートを置き換えます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-305">Replaces the route at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="1f5fa-306">名前のないルートを追加すると、<xref:System.Web.Routing.RouteCollection>オブジェクト、コレクションに既に存在するルートを追加することはできません。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-306">When you add an unnamed route to the <xref:System.Web.Routing.RouteCollection> object, you cannot add a route that already is in the collection.</span></span>  
  
 <span data-ttu-id="1f5fa-307">使用して、<xref:System.Web.Routing.RouteCollection.GetReadLock%2A>メソッドと<xref:System.Web.Routing.RouteCollection.GetWriteLock%2A>メソッドを他のプロセスから競合することがなくコレクションと対話することを確認します。</span><span class="sxs-lookup"><span data-stu-id="1f5fa-307">Use the <xref:System.Web.Routing.RouteCollection.GetReadLock%2A> method and the <xref:System.Web.Routing.RouteCollection.GetWriteLock%2A> method to make sure that you interact with the collection without conflicts from other processes.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="1f5fa-308">
            <paramref name="item" /> は <see langword="null" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-308">
              <paramref name="item" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="1f5fa-309">
            <paramref name="item" /> はコレクション内に既に存在します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="1f5fa-309">
              <paramref name="item" /> is already in the collection.</span>
          </span>
        </exception>
      </Docs>
    </Member>
  </Members>
</Type>