<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9b02f108e6cf6bc71161d470a2d6644ad08d92c5" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70628144" /></Metadata><TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary><span data-ttu-id="a2a44-101">URL を物理ファイルに割り当てる方法を定義するためのプロパティとメソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-101">Provides properties and methods for defining how a URL maps to a physical file.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-102">物理ファイルの URL を<xref:System.Web.Routing.PageRouteHandler>マップする<xref:System.Web.Routing.Route>ために、のインスタンスをコンストラクターに渡します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="a2a44-103">オブジェクト<xref:System.Web.Routing.PageRouteHandler>は、物理ファイルの仮想パスを指定し、物理 URL の承認規則を確認するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
    <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-104">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-104">ASP.NET Routing</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-105">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-105">How to: Define Routes for Web Forms Applications</span></span></related>
    <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-106">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-106">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="a2a44-107"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-107">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-108">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-108">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-109">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-109">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-110">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-110">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a2a44-111">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトに対応する物理ファイルの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="a2a44-111">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="a2a44-112">ファイルは現在のアプリケーションに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2a44-112">The file must be located in the current application.</span></span> <span data-ttu-id="a2a44-113">したがって、パスはティルダ (~) で始まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2a44-113">Therefore, the path must begin with a tilde (~).</span></span></param>
        <summary><span data-ttu-id="a2a44-114"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-114">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-115">このコンストラクターを使用すると、 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティはに`true`設定されます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-115">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2a44-116"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span><span class="sxs-lookup"><span data-stu-id="a2a44-116">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-117">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-117">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-118">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-118">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-119">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-119">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath"><span data-ttu-id="a2a44-120">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトの物理ファイルの仮想パス。</span><span class="sxs-lookup"><span data-stu-id="a2a44-120">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span></span> <span data-ttu-id="a2a44-121">ファイルは現在のアプリケーションに存在する必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2a44-121">The file must be located in the current application.</span></span> <span data-ttu-id="a2a44-122">したがって、パスはティルダ (~) で始まる必要があります。</span><span class="sxs-lookup"><span data-stu-id="a2a44-122">Therefore, the path must begin with a tilde (~).</span></span></param>
        <param name="checkPhysicalUrlAccess"><span data-ttu-id="a2a44-123">このプロパティが <see langword="false" /> に設定されている場合、認証規則は要求 URL に適用され、物理ページの URL には適用されません。</span><span class="sxs-lookup"><span data-stu-id="a2a44-123">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span></span> <span data-ttu-id="a2a44-124">このプロパティが <see langword="true" /> に設定されている場合、認証規則は要求 URL と物理ページの URL の両方に適用されます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-124">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span></span></param>
        <summary><span data-ttu-id="a2a44-125"><see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-125">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-126">既定では、 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティは`true`です。</span><span class="sxs-lookup"><span data-stu-id="a2a44-126">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="a2a44-127">したがって、物理ページの url とルート url の両方に承認規則を適用する場合は、このコンストラクターの代わりに<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29>コンストラクターを使用できます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-127">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="a2a44-128"><paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span><span class="sxs-lookup"><span data-stu-id="a2a44-128">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span></span></exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-129">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-129">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-130">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-130">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-131">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-131">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2a44-132">認証規則が物理ファイルの URL に適用されるかどうかを指定する値を取得します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-132">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span></span></summary>
        <value><span data-ttu-id="a2a44-133">ルートに関連付けられている物理ファイルの URL に対して認証が行われる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="a2a44-133"><see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span></span> <span data-ttu-id="a2a44-134">既定値は、<see langword="true" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2a44-134">The default is <see langword="true" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-135">コンストラクター <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> を使用する<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>ときに、プロパティを設定できます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-135">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="a2a44-136"><xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティの値によって、オブジェクト<xref:System.Web.Routing.PageRouteHandler>がルート url に対してのみ、または物理ページとルート url の両方のセキュリティアクセス許可をチェックするかどうかが決定されます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-136">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>  
  
 <span data-ttu-id="a2a44-137">プロパティが (既定値) `true`に設定されている場合、ユーザーはルート url と物理 URL の両方にアクセスするためのアクセス許可を持っている必要があります。 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A></span><span class="sxs-lookup"><span data-stu-id="a2a44-137">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="a2a44-138">プロパティがに`false`設定されている場合、ユーザーはルート URL にアクセスするためのアクセス許可のみを必要とし、物理 URL のアクセス許可はチェックされません。 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A></span><span class="sxs-lookup"><span data-stu-id="a2a44-138">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>  
  
 <span data-ttu-id="a2a44-139">権限は、次の例に示すように、web.config ファイルで定義されています。</span><span class="sxs-lookup"><span data-stu-id="a2a44-139">Permissions are defined in the Web.config file, as shown in the following example:</span></span>  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 <span data-ttu-id="a2a44-140">ドメイン名の後にが`Category/food/show`含まれる要求 url の場合、ルート URL パターンが`Category/{action}/{categoryName}`で、物理ページがカテゴリページの場合は[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] 、前の例で定義されているアクセス許可を次のいずれかの方法で適用します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-140">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>  
  
-   <span data-ttu-id="a2a44-141">プロパティが`false`の場合、すべてのユーザーには、で`category`始まる URL パターンへのアクセスが許可されるため、すべてのユーザーにアクセス権が付与されます。 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A></span><span class="sxs-lookup"><span data-stu-id="a2a44-141">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>  
  
-   <span data-ttu-id="a2a44-142">プロパティが`true`の場合は、 `admin`ユーザーのみにアクセス権が付与されます。 <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A></span><span class="sxs-lookup"><span data-stu-id="a2a44-142">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="a2a44-143">すべてのユーザーは、で`category`始まる URL パターンにアクセスできますが、ユーザーのみ`admin`が物理ページのカテゴリのページ .aspx にアクセスできます。</span><span class="sxs-lookup"><span data-stu-id="a2a44-143">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-144">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-144">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-145">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-145">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-146">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-146">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="a2a44-147">要求に関する情報をカプセル化しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a2a44-147">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="a2a44-148">要求を処理するオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-148">Returns the object that processes the request.</span></span></summary>
        <returns><span data-ttu-id="a2a44-149">要求を処理するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a2a44-149">The object that processes the request.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2a44-150"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2a44-150">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-151">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-151">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-152">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-152">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-153">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-153">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext"><span data-ttu-id="a2a44-154">要求に関する情報をカプセル化しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="a2a44-154">An object that encapsulates information about the request.</span></span></param>
        <summary><span data-ttu-id="a2a44-155">すべての置換パラメーターに置き換えが適用された後に、ルートに対応する物理ファイルの仮想パスを返します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-155">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span></span></summary>
        <returns><span data-ttu-id="a2a44-156">ルートから生成された物理ファイルの URL。</span><span class="sxs-lookup"><span data-stu-id="a2a44-156">The URL of the physical file that was generated from a route.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-157">値に<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>置換パラメーターが含まれていない場合<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> 、メソッドは<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>プロパティと同じ値を返します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-157">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="a2a44-158"><paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="a2a44-158">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span></span></exception>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-159">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-159">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-160">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-160">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-161">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-161">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="a2a44-162">このルートに関連付けられている Web ページの仮想パスを取得します。</span><span class="sxs-lookup"><span data-stu-id="a2a44-162">Gets the virtual path of the Web page that is associated with this route.</span></span></summary>
        <value><span data-ttu-id="a2a44-163">置換パラメーターに対して置き換えが適用される前の、Web ページの URL。</span><span class="sxs-lookup"><span data-stu-id="a2a44-163">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="a2a44-164">コンストラクターまたは<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> コンストラクターでプロパティを設定します <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>  。</span><span class="sxs-lookup"><span data-stu-id="a2a44-164">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
        <related type="Article" href="https://msdn.microsoft.com/library/892441af-8f1d-483e-ab5f-b82c23576f5a"><span data-ttu-id="a2a44-165">ASP.NET ルーティング</span><span class="sxs-lookup"><span data-stu-id="a2a44-165">ASP.NET Routing</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/200fe812-d0a6-4531-b9b4-cfc4ee83a678"><span data-ttu-id="a2a44-166">方法: Web フォームアプリケーションのルートを定義する</span><span class="sxs-lookup"><span data-stu-id="a2a44-166">How to: Define Routes for Web Forms Applications</span></span></related>
        <related type="Article" href="https://msdn.microsoft.com/library/b2decba4-2400-491c-8907-89a7b9e0874c"><span data-ttu-id="a2a44-167">チュートリアル: Web フォームアプリケーションでの ASP.NET ルーティングの使用</span><span class="sxs-lookup"><span data-stu-id="a2a44-167">Walkthrough: Using ASP.NET Routing in a Web Forms Application</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
