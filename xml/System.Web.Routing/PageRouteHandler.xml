<Type Name="PageRouteHandler" FullName="System.Web.Routing.PageRouteHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e57b2750234e1844025e285e7241399f3129ce1b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39989603" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class PageRouteHandler : System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit PageRouteHandler extends System.Object implements class System.Web.Routing.IRouteHandler" />
  <TypeSignature Language="DocId" Value="T:System.Web.Routing.PageRouteHandler" />
  <TypeSignature Language="VB.NET" Value="Public Class PageRouteHandler&#xA;Implements IRouteHandler" />
  <TypeSignature Language="C++ CLI" Value="public ref class PageRouteHandler : System::Web::Routing::IRouteHandler" />
  <TypeSignature Language="F#" Value="type PageRouteHandler = class&#xA;    interface IRouteHandler" />
  <AssemblyInfo>
    <AssemblyName>System.Web</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Web.Routing.IRouteHandler</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>
      <span data-ttu-id="33439-101">URL を物理ファイルに割り当てる方法を定義するためのプロパティとメソッドを提供します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="33439-101">Provides properties and methods for defining how a URL maps to a physical file.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-102">インスタンスを渡す<xref:System.Web.Routing.PageRouteHandler>を<xref:System.Web.Routing.Route>物理ファイルの URL をマップするためにコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="33439-102">You pass an instance of <xref:System.Web.Routing.PageRouteHandler> to the <xref:System.Web.Routing.Route> constructor in order to map a URL of a physical file.</span></span> <span data-ttu-id="33439-103"><xref:System.Web.Routing.PageRouteHandler>オブジェクト物理ファイルの仮想パスを指定し、物理的な URL の承認規則を確認するかどうかを決定します。</span><span class="sxs-lookup"><span data-stu-id="33439-103">The <xref:System.Web.Routing.PageRouteHandler> object specifies the virtual path of the physical file and determines whether authorization rules for the physical URL is checked.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Web.Routing.Route" />
  </Docs>
  <Members>
    <MemberGroup MemberName=".ctor">
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="33439-104">
            <see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-104">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </MemberGroup>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler virtualPath" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="33439-105">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトに対応する物理ファイルの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-105">The virtual path of the physical file for this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="33439-106">ファイルは現在のアプリケーションに存在する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-106">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="33439-107">したがって、パスはティルダ (~) で始まる必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-107">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33439-108">
            <see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-108">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-109">このコンス トラクターを使用すると、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティに設定されて`true`します。</span><span class="sxs-lookup"><span data-stu-id="33439-109">When you use this constructor, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="33439-110">
            <paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-110">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public PageRouteHandler (string virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(string virtualPath, bool checkPhysicalUrlAccess) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.#ctor(System.String,System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (virtualPath As String, checkPhysicalUrlAccess As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; PageRouteHandler(System::String ^ virtualPath, bool checkPhysicalUrlAccess);" />
      <MemberSignature Language="F#" Value="new System.Web.Routing.PageRouteHandler : string * bool -&gt; System.Web.Routing.PageRouteHandler" Usage="new System.Web.Routing.PageRouteHandler (virtualPath, checkPhysicalUrlAccess)" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="virtualPath" Type="System.String" />
        <Parameter Name="checkPhysicalUrlAccess" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="virtualPath">
          <span data-ttu-id="33439-111">この <see cref="P:System.Web.Routing.RouteData.Route" /> オブジェクトの物理ファイルの仮想パス。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-111">The virtual path of the physical file of this <see cref="P:System.Web.Routing.RouteData.Route" /> object.</span>
          </span>
          <span data-ttu-id="33439-112">ファイルは現在のアプリケーションに存在する必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-112">The file must be located in the current application.</span>
          </span>
          <span data-ttu-id="33439-113">したがって、パスはティルダ (~) で始まる必要があります。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-113">Therefore, the path must begin with a tilde (~).</span>
          </span>
        </param>
        <param name="checkPhysicalUrlAccess">
          <span data-ttu-id="33439-114">このプロパティが <see langword="false" /> に設定されている場合、認証規則は要求 URL に適用され、物理ページの URL には適用されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-114">If this property is set to <see langword="false" />, authorization rules will be applied to the request URL and not to the URL of the physical page.</span>
          </span>
          <span data-ttu-id="33439-115">このプロパティが <see langword="true" /> に設定されている場合、認証規則は要求 URL と物理ページの URL の両方に適用されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-115">If this property is set to <see langword="true" />, authorization rules will be applied to both the request URL and to the URL of the physical page.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33439-116">
            <see cref="T:System.Web.Routing.PageRouteHandler" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-116">Initializes a new instance of the <see cref="T:System.Web.Routing.PageRouteHandler" /> class.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-117">既定で、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティは`true`します。</span><span class="sxs-lookup"><span data-stu-id="33439-117">By default, the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`.</span></span> <span data-ttu-id="33439-118">そのため、承認規則とルート URL を物理ページの URL の両方に適用する場合を使えば、<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29>このコンス トラクターではなくコンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="33439-118">Therefore, if you want authorization rules to be applied to both the URL of the physical page and to the route URL, you can use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%29> constructor instead of this constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="33439-119">
            <paramref name="virtualPath" /> パラメーターは、<see langword="null" /> であるか、空の文字列であるか、"~/" で始まっていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-119">The <paramref name="virtualPath" /> parameter is <see langword="null" /> or is an empty string or does not start with "~/".</span>
          </span>
        </exception>
        <altmember cref="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="CheckPhysicalUrlAccess">
      <MemberSignature Language="C#" Value="public bool CheckPhysicalUrlAccess { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool CheckPhysicalUrlAccess" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property CheckPhysicalUrlAccess As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool CheckPhysicalUrlAccess { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.CheckPhysicalUrlAccess : bool" Usage="System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33439-120">認証規則が物理ファイルの URL に適用されるかどうかを指定する値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-120">Gets a value that determines whether authorization rules are applied to the physical file's URL.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33439-121">ルートに関連付けられている物理ファイルの URL に対して認証が行われる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-121">
              <see langword="true" /> if authorization is checked for the URL of the physical file that is associated with the route; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="33439-122">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-122">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-123">設定することができます、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティを使用する場合、<xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="33439-123">You can set the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property when you use the <xref:System.Web.Routing.PageRouteHandler.%23ctor%28System.String%2CSystem.Boolean%29> constructor.</span></span>  
  
 <span data-ttu-id="33439-124">値、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティかどうか、<xref:System.Web.Routing.PageRouteHandler>オブジェクトはルート URL に対してのみ、または物理的なページとルート URL の両方のセキュリティ アクセス許可を確認します。</span><span class="sxs-lookup"><span data-stu-id="33439-124">The value of the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property determines whether the <xref:System.Web.Routing.PageRouteHandler> object will check security permissions only for the route URL or for both the physical page and the route URL.</span></span>  
  
 <span data-ttu-id="33439-125">ときに、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティに設定されて`true`(既定値では、)、ユーザーはルート URL と物理的な URL の両方にアクセスする権限が必要です。</span><span class="sxs-lookup"><span data-stu-id="33439-125">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `true` (which is its default value), a user must have permission to access both the route URL and the physical URL.</span></span> <span data-ttu-id="33439-126">ときに、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティに設定されて`false`ユーザーがルートの URL にアクセスするアクセス許可のみを必要し、物理的な URL のアクセス許可はチェックされません。</span><span class="sxs-lookup"><span data-stu-id="33439-126">When the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is set to `false`, a user requires only permission to access the route URL, and permissions for the physical URL are not checked.</span></span>  
  
 <span data-ttu-id="33439-127">アクセス許可は、次の例に示すように、Web.config ファイルで定義されます。</span><span class="sxs-lookup"><span data-stu-id="33439-127">Permissions are defined in the Web.config file, as shown in the following example:</span></span>  
  
```  
<configuration>  
  <location path="categoriespage.aspx">  
    <system.web>  
      <authorization>  
        <allow roles="admin"/>  
        <deny users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
  <location path="category">  
    <system.web>  
      <authorization>  
        <allow users="*"/>  
      </authorization>  
    </system.web>  
  </location>  
</configuration>  
```  
  
 <span data-ttu-id="33439-128">要求の url を含む`Category/food/show`ルートの URL パターンがある場合、ドメイン名の後`Category/{action}/{categoryName}`Categoriespage.aspx であり、物理ページ[!INCLUDE[vstecasp](~/includes/vstecasp-md.md)]次の方法のいずれかで、前の例で定義されているアクセス許可の適用。</span><span class="sxs-lookup"><span data-stu-id="33439-128">For a request URL that contains `Category/food/show` after the domain name, if the route URL pattern is `Category/{action}/{categoryName}` and the physical page is Categoriespage.aspx, [!INCLUDE[vstecasp](~/includes/vstecasp-md.md)] applies the permissions defined in the previous example in one of the following ways:</span></span>  
  
-   <span data-ttu-id="33439-129">場合、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティは`false`、すべてのユーザーがアクセスできる、すべてのユーザーがあるためで始まる URL パターンにアクセス許可`category`します。</span><span class="sxs-lookup"><span data-stu-id="33439-129">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `false`, all users are granted access, because all users are granted access to the URL pattern that starts with `category`.</span></span>  
  
-   <span data-ttu-id="33439-130">場合、<xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A>プロパティは`true`だけ`admin`ユーザーへのアクセスが付与されます。</span><span class="sxs-lookup"><span data-stu-id="33439-130">If the <xref:System.Web.Routing.PageRouteHandler.CheckPhysicalUrlAccess%2A> property is `true`, only `admin` users are granted access.</span></span> <span data-ttu-id="33439-131">始まる URL パターンにはすべてのユーザーがアクセス`category`、のみが`admin`Categoriespage.aspx 物理ページにユーザーにアクセスします。</span><span class="sxs-lookup"><span data-stu-id="33439-131">All users have access to the URL pattern that begins with `category`, but only `admin` users have access to the physical page Categoriespage.aspx.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetHttpHandler">
      <MemberSignature Language="C#" Value="public virtual System.Web.IHttpHandler GetHttpHandler (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Web.IHttpHandler GetHttpHandler(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Web::IHttpHandler ^ GetHttpHandler(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="abstract member GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler&#xA;override this.GetHttpHandler : System.Web.Routing.RequestContext -&gt; System.Web.IHttpHandler" Usage="pageRouteHandler.GetHttpHandler requestContext" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Web.Routing.IRouteHandler.GetHttpHandler(System.Web.Routing.RequestContext)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Web.IHttpHandler</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="33439-132">要求に関する情報をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-132">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33439-133">要求を処理するオブジェクトを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-133">Returns the object that processes the request.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33439-134">要求を処理するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-134">The object that processes the request.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33439-135">
            <paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-135">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="GetSubstitutedVirtualPath">
      <MemberSignature Language="C#" Value="public string GetSubstitutedVirtualPath (System.Web.Routing.RequestContext requestContext);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string GetSubstitutedVirtualPath(class System.Web.Routing.RequestContext requestContext) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath(System.Web.Routing.RequestContext)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ GetSubstitutedVirtualPath(System::Web::Routing::RequestContext ^ requestContext);" />
      <MemberSignature Language="F#" Value="member this.GetSubstitutedVirtualPath : System.Web.Routing.RequestContext -&gt; string" Usage="pageRouteHandler.GetSubstitutedVirtualPath requestContext" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="requestContext" Type="System.Web.Routing.RequestContext" />
      </Parameters>
      <Docs>
        <param name="requestContext">
          <span data-ttu-id="33439-136">要求に関する情報をカプセル化するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-136">An object that encapsulates information about the request.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="33439-137">すべての置換パラメーターに置き換えが適用された後に、ルートに対応する物理ファイルの仮想パスを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-137">Returns the virtual path of the physical file for the route after substitutions have been applied to any replacement parameters.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="33439-138">ルートから生成された物理ファイルの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-138">The URL of the physical file that was generated from a route.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-139">場合、<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>値がすべての置換パラメーターを含まない、<xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A>メソッドとして同じ値を返します、<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="33439-139">If the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> value does not contain any replacement parameters, the <xref:System.Web.Routing.PageRouteHandler.GetSubstitutedVirtualPath%2A> method returns the same value as the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="33439-140">
            <paramref name="requestContext" /> パラメーターが <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-140">The <paramref name="requestContext" /> parameter is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
    <Member MemberName="VirtualPath">
      <MemberSignature Language="C#" Value="public string VirtualPath { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string VirtualPath" />
      <MemberSignature Language="DocId" Value="P:System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property VirtualPath As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::String ^ VirtualPath { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.VirtualPath : string" Usage="System.Web.Routing.PageRouteHandler.VirtualPath" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Web</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="33439-141">このルートに関連付けられている Web ページの仮想パスを取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-141">Gets the virtual path of the Web page that is associated with this route.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="33439-142">置換パラメーターに対して置き換えが適用される前の、Web ページの URL。</span>
          <span class="sxs-lookup">
            <span data-stu-id="33439-142">The URL of the Web page, before substitutions have been applied for any replacement parameters.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="33439-143">設定する、<xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A>プロパティ、<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>コンス トラクターまたは、<xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType>コンス トラクター。</span><span class="sxs-lookup"><span data-stu-id="33439-143">You set the <xref:System.Web.Routing.PageRouteHandler.VirtualPath%2A> property in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor or in the <xref:System.Web.Routing.PageRouteHandler.%23ctor%2A?displayProperty=nameWithType> constructor.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Web.Routing.Route" />
      </Docs>
    </Member>
  </Members>
</Type>