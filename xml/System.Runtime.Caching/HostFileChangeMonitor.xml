<Type Name="HostFileChangeMonitor" FullName="System.Runtime.Caching.HostFileChangeMonitor">
  <Metadata><Meta Name="ms.openlocfilehash" Value="1f9a8513015431426715cbe347a2f8c86c4f33a4" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70513663" /></Metadata><TypeSignature Language="C#" Value="public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed beforefieldinit HostFileChangeMonitor extends System.Runtime.Caching.FileChangeMonitor" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.HostFileChangeMonitor" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class HostFileChangeMonitor&#xA;Inherits FileChangeMonitor" />
  <TypeSignature Language="C++ CLI" Value="public ref class HostFileChangeMonitor sealed : System::Runtime::Caching::FileChangeMonitor" />
  <TypeSignature Language="F#" Value="type HostFileChangeMonitor = class&#xA;    inherit FileChangeMonitor" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Runtime.Caching.FileChangeMonitor</BaseTypeName>
  </Base>
  <Interfaces />
  <Docs>
    <summary>ディレクトリおよびファイル パスを監視し、監視対象のアイテムへの変更をキャッシュに通知します。 このクラスは継承できません。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 クラスは、 <xref:System.Runtime.Caching.FileChangeMonitor>型の具象実装です。 <xref:System.Runtime.Caching.HostFileChangeMonitor> このクラスはシールされているため、拡張できません。 このクラスは、既存のキャッシュ実装を使用して、ファイルとディレクトリの変更を監視する場合に便利です。  
  
 クラスは、指定されたファイルまた<xref:System.Runtime.Caching.HostFileChangeMonitor>はディレクトリパスごとに、次のいずれかの変更が発生した場合に変更通知をトリガーします。  
  
-   監視対象のファイルまたはディレクトリの名前が変更されます。  
  
-   指定されたファイルまたはディレクトリは、モニターの作成時には存在しませんでしたが、後で作成されました。 つまり、監視対象の項目のスコープ内にファイルまたはディレクトリが作成されています。  
  
-   監視対象ファイルのサイズが変更されました。  
  
-   監視対象のファイルの内容が変更されたか、監視対象のディレクトリの内容が変更されました。  
  
-   ファイルまたはディレクトリのアクセス制御リスト (ACL) が変更されました。  
  
-   監視対象のファイルまたはディレクトリが削除されました。  
  
 監視対象のファイルまたはディレクトリに対して同時に発生する変更が多<xref:System.Runtime.Caching.HostFileChangeMonitor>すぎる場合、インスタンスは特定の変更を追跡できなくなる可能性があります。 このシナリオでは、 <xref:System.Runtime.Caching.HostFileChangeMonitor>クラスによって変更通知がトリガーされます。 このシナリオは、 <xref:System.Runtime.Caching.HostFileChangeMonitor>インスタンスがディレクトリを監視し、ディレクトリ構造のスコープで短時間に多くの変更が行われた場合に発生する可能性が高くなります。  
  
 <xref:System.Runtime.Caching.HostFileChangeMonitor>クラスの目的は、監視対象のファイルおよびディレクトリのセット間で何かが変更されたことを通知するだけなので、特定の変更に関する詳細がキャプチャされないことは重要ではないと考えられません。 <xref:System.Runtime.Caching.HostFileChangeMonitor>クラスの目的は、キャッシュエントリ (またはエントリ) を削除できるように状態が変更されたことを通知することです。 クラスは<xref:System.Runtime.Caching.HostFileChangeMonitor>変更内容を正確に示すものではないため、内部変更追跡のオーバーフローは関係ありません。  
  
 <xref:System.Runtime.Caching.HostFileChangeMonitor>インスタンスへのパスを指定する場合、ディレクトリおよびファイルのパスは、ディレクトリまたはファイルへの完全パスである必要があります。 パス内の相対パスとワイルドカード文字は使用できません。  
  
 ASP.NET アプリケーションでクラスを使用すると、監視対象のアイテムへのアクセスに使用される Windows id は、ASP.NET アプリケーションのアプリケーション id になります。 <xref:System.Runtime.Caching.HostFileChangeMonitor> つまり、アプリケーション id は次のいずれかになります。  
  
-   プロセス id。  
  
-   構成されたアプリケーション id。  
  
-   アプリケーションが UNC 共有から実行されている場合は、UNC 資格情報。  
  
 クラスが non-ASP.NET アプリケーションで使用されている場合<xref:System.IO.FileSystemWatcher> 、クラスは、ファイルを監視するために内部的に使用されます。 <xref:System.Runtime.Caching.HostFileChangeMonitor> その結果、監視対象のファイルまたはディレクトリに適用されるすべてのアクセス制御リスト (ACL) は、現在のスレッドの Windows id に適用されます。  
  
> [!NOTE]
>  呼び出し元は、適切なレベルのコードアクセスセキュリティ (CAS) アクセス許可を持ち、監視対象のすべてのディレクトリおよびパスに対する NTFS アクセス許可を持っている必要があります。  
  
   
  
## Examples  
 次の例では、オブジェクトを<xref:System.Runtime.Caching.HostFileChangeMonitor>使用して、ファイルシステム上のソースデータ (ファイル) の状態を監視するキャッシュ項目を作成します。 キャッシュエントリは、オブジェクトを<xref:System.Runtime.Caching.CacheItemPolicy>使用して定義され、キャッシュエントリの削除と有効期限の詳細を提供します。  
  
 [!code-csharp[CachingASPNetApplications#1](~/samples/snippets/csharp/VS_Snippets_WebNet/cachingaspnetapplications/cs/default.aspx.cs#1)]
 [!code-vb[CachingASPNetApplications#1](~/samples/snippets/visualbasic/VS_Snippets_WebNet/cachingaspnetapplications/vb/default.aspx.vb#1)]  
  
 ]]></format>
    </remarks>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public HostFileChangeMonitor (System.Collections.Generic.IList&lt;string&gt; filePaths);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(class System.Collections.Generic.IList`1&lt;string&gt; filePaths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (filePaths As IList(Of String))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; HostFileChangeMonitor(System::Collections::Generic::IList&lt;System::String ^&gt; ^ filePaths);" />
      <MemberSignature Language="F#" Value="new System.Runtime.Caching.HostFileChangeMonitor : System.Collections.Generic.IList&lt;string&gt; -&gt; System.Runtime.Caching.HostFileChangeMonitor" Usage="new System.Runtime.Caching.HostFileChangeMonitor filePaths" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="filePaths" Type="System.Collections.Generic.IList&lt;System.String&gt;" />
      </Parameters>
      <Docs>
        <param name="filePaths">監視対象のディレクトリ パスまたはファイル パスが 1 つ以上含まれているリスト。</param>
        <summary><see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 コンストラクターの<xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A>呼び出しでは、 `filePaths`パラメーターに null 以外の値を指定する必要があります。 コンストラクターは、少なくとも、渡されたパスのコレクションを検証してから、これらのパスの監視を初期化します。  
  
> [!NOTE]
>  コンストラクターは、パス名の文字列検証のみを実行します。 パスを正規化したり、パスが存在することを検証したりすることはありません。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><paramref name="filePaths" /> が <see langword="null" /> です。</exception>
        <exception cref="T:System.ArgumentException"><paramref name="filePaths" /> に項目が含まれていません。  
  
- または - 
<paramref name="filePaths" /> 一覧のパスが <see langword="null" /> または空の文字列です。</exception>
      </Docs>
    </Member>
    <Member MemberName="Dispose">
      <MemberSignature Language="C#" Value="protected override void Dispose (bool disposing);" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig virtual instance void Dispose(bool disposing) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)" />
      <MemberSignature Language="VB.NET" Value="Protected Overrides Sub Dispose (disposing As Boolean)" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; override void Dispose(bool disposing);" />
      <MemberSignature Language="F#" Value="override this.Dispose : bool -&gt; unit" Usage="hostFileChangeMonitor.Dispose disposing" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="disposing" Type="System.Boolean" />
      </Parameters>
      <Docs>
        <param name="disposing">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="FilePaths">
      <MemberSignature Language="C#" Value="public override System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt; FilePaths { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;string&gt; FilePaths" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property FilePaths As ReadOnlyCollection(Of String)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ FilePaths { System::Collections::ObjectModel::ReadOnlyCollection&lt;System::String ^&gt; ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.FilePaths : System.Collections.ObjectModel.ReadOnlyCollection&lt;string&gt;" Usage="System.Runtime.Caching.HostFileChangeMonitor.FilePaths" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;System.String&gt;</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="M:System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})" /> コンストラクターに渡されたディレクトリおよびファイル パスのコレクションを取得します。</summary>
        <value>ディレクトリおよびファイル パスのコレクション。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="LastModified">
      <MemberSignature Language="C#" Value="public override DateTimeOffset LastModified { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.DateTimeOffset LastModified" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property LastModified As DateTimeOffset" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property DateTimeOffset LastModified { DateTimeOffset get(); };" />
      <MemberSignature Language="F#" Value="member this.LastModified : DateTimeOffset" Usage="System.Runtime.Caching.HostFileChangeMonitor.LastModified" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>監視されているファイルまたはパスの最終更新日時を示す読み取り専用の値を取得します。</summary>
        <value>監視されているファイルまたはパスの最終更新日時。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 ファイル変更モニターが複数のファイルまたはパスを監視している場合、このプロパティは、すべてのファイルとパスのセットの最新の書き込み時刻を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="UniqueId">
      <MemberSignature Language="C#" Value="public override string UniqueId { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string UniqueId" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberSignature Language="VB.NET" Value="Public Overrides ReadOnly Property UniqueId As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::String ^ UniqueId { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.UniqueId : string" Usage="System.Runtime.Caching.HostFileChangeMonitor.UniqueId" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>監視対象のディレクトリおよびファイル パスのセットに基づく <see cref="T:System.Runtime.Caching.HostFileChangeMonitor" /> インスタンスの識別子を取得します。</summary>
        <value>変更監視機能の識別子。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.HostFileChangeMonitor.UniqueId%2A>プロパティ値を構成する文字列は、次の部分から構成されます。  
  
-   ファイルまたはディレクトリのパス。  
  
-   UTC 時刻の最新の書き込み時刻。タイマー刻みとして表されますが、16進数の文字列として表現されます。  
  
-   ファイルサイズ (16 進数文字列として表されます)。  
  
 ファイル変更モニターが複数のパスを監視している場合、このプロパティによって返される情報は、監視対象のすべてのディレクトリとファイルパスに対して1つの文字列に連結されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
