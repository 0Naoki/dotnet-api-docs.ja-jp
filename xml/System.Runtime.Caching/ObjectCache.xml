<Type Name="ObjectCache" FullName="System.Runtime.Caching.ObjectCache">
  <Metadata><Meta Name="ms.openlocfilehash" Value="5857681ac8d5732c6af8a6885bbec57f01693a37" /><Meta Name="ms.sourcegitcommit" Value="88014e1c5440e3df4f66ef04393854d15b1fd534" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="09/05/2019" /><Meta Name="ms.locfileid" Value="70490448" /></Metadata><TypeSignature Language="C#" Value="public abstract class ObjectCache : System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract beforefieldinit ObjectCache extends System.Object implements class System.Collections.Generic.IEnumerable`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt;, class System.Collections.IEnumerable" />
  <TypeSignature Language="DocId" Value="T:System.Runtime.Caching.ObjectCache" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class ObjectCache&#xA;Implements IEnumerable(Of KeyValuePair(Of String, Object))" />
  <TypeSignature Language="C++ CLI" Value="public ref class ObjectCache abstract : System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;" />
  <TypeSignature Language="F#" Value="type ObjectCache = class&#xA;    interface seq&lt;KeyValuePair&lt;string, obj&gt;&gt;&#xA;    interface IEnumerable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime.Caching</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IEnumerable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <summary>オブジェクト キャッシュを表し、オブジェクト キャッシュにアクセスするための基本メソッドおよびプロパティを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Runtime.Caching.ObjectCache>型は、メモリ内オブジェクトキャッシュのプライマリ型です。 カスタムキャッシュ実装を開発するには、 <xref:System.Runtime.Caching.ObjectCache>クラスから派生します。  
  
> [!NOTE]
>  クラスは、 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]の新しいです。 <xref:System.Runtime.Caching.ObjectCache>  
  
 組み込み<xref:System.Runtime.Caching.MemoryCache>クラスは、 <xref:System.Runtime.Caching.ObjectCache>クラスから派生します。 クラスは、 <xref:System.Runtime.Caching.ObjectCache>クラスから派生するの[!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)]唯一の具象オブジェクトキャッシュ実装です。 <xref:System.Runtime.Caching.MemoryCache>  
  
 ]]></format>
    </remarks>
    <threadsafe>この型はスレッド セーフです。</threadsafe>
    <block subset="none" type="overrides"><para>型は<see cref="T:System.Runtime.Caching.ObjectCache" />共通のキャッシュ関数のみを表すため、 <see cref="T:System.Runtime.Caching.ObjectCache" />インスタンスをインスタンス化して取得する必要があるかどうかの要件はありません。 また、 <see cref="T:System.Runtime.Caching.ObjectCache" />クラスの具象実装をシングルトンする必要はありません。  
  
 <block subset="none" type="note"><para><see cref="T:System.Runtime.Caching.MemoryCache" />はシングルトンではありませんが、インスタンスを1つ<see cref="T:System.Runtime.Caching.MemoryCache" />だけ作成する必要があります。また、キャッシュ項目がこれらのインスタンスを使用する必要があるコードだけを作成する必要があります。  
  
</para></block>  
  
 <see cref="T:System.Runtime.Caching.ObjectCache" />クラスから継承する場合は、そのメソッドをオーバーライドする必要があります。</para></block>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="protected ObjectCache ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.#ctor" />
      <MemberSignature Language="VB.NET" Value="Protected Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; ObjectCache();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <Parameters />
      <Docs>
        <summary><see cref="T:System.Runtime.Caching.ObjectCache" /> クラスを初期化するために、派生クラスのコンストラクターから呼び出されます。</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Add">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、一致するキーを持つ既存のキャッシュ エントリを返すことを要求せずに、キャッシュ エントリをキャッシュに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Runtime.Caching.ObjectCache.Add%2A>のオーバーロードは、同じキーを持つ既存のキャッシュエントリを上書きしたり、削除したりせずに、キャッシュエントリをキャッシュに挿入しようとします。 キャッシュエントリには、型指定<xref:System.Runtime.Caching.CacheItem>されたオブジェクトまたはジェネリックオブジェクトを指定できます。  
  
 メソッド<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>のオーバーロード<xref:System.Runtime.Caching.ObjectCache.Add%2A>とメソッドのオーバーロードには、大きな違いが1つあります。 これらのメソッドがキャッシュエントリを挿入するときに、一致するエントリがキャッシュに存在<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>する場合、メソッドのオーバーロードは、既存の<xref:System.Runtime.Caching.ObjectCache.Add%2A>キャッシュエントリを返しますが、メソッドのオーバーロードは返しません。 これらの異なるメソッドオーバーロードを使用すると、呼び出し元は既存のキャッシュエントリが必要かどうかに基づいてコードを最適化できます。 分散キャッシュでは、メソッドを使用<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>して既存の値を返す方が、メソッドを使用<xref:System.Runtime.Caching.ObjectCache.Add%2A>してブール値を返すよりもコストが高くなる可能性があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (item As CacheItem, policy As CacheItemPolicy) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Add(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool&#xA;override this.Add : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; bool" Usage="objectCache.Add (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">追加するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリを <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとしてキャッシュに挿入しようと試み、エントリの削除方法の詳細を追加します。</summary>
        <returns>挿入が成功した場合は <see langword="true" />。<paramref name="item" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドが内部でを呼び出し<xref:System.Runtime.Caching.ObjectCache> <xref:System.Runtime.Caching.ObjectCache.Add%2A> <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>ているため、メソッドオーバーロードはクラスの仮想 (abstract ではありません) です。 <xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。 キャッシュ実装が<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドに特別な動作を必要としない場合は、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバーロードを実装するだけで済みます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * DateTimeOffset * string -&gt; bool&#xA;override this.Add : string * obj * DateTimeOffset * string -&gt; bool" Usage="objectCache.Add (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。 このパラメーターは、<see cref="Overload:System.Runtime.Caching.ObjectCache.Add" /> メソッドが呼び出されるときに必要です。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] に領域が実装されていないため、既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、既存のキャッシュ エントリを上書きせずに、キャッシュ エントリをキャッシュに挿入します。</summary>
        <returns>挿入が成功した場合は <see langword="true" />。<paramref name="key" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドが内部でを呼び出し<xref:System.Runtime.Caching.ObjectCache> <xref:System.Runtime.Caching.ObjectCache.Add%2A> <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>ているため、メソッドオーバーロードはクラスの仮想 (abstract ではありません) です。 <xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。 キャッシュ実装が<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドに特別な動作を必要としない場合は、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバーロードを実装するだけで済みます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Add">
      <MemberSignature Language="C#" Value="public virtual bool Add (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Add(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Add(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function Add (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool&#xA;override this.Add : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; bool" Usage="objectCache.Add (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</summary>
        <returns>挿入の試行が成功した場合は <see langword="true" />。<paramref name="key" /> と同じキーを持つエントリがキャッシュに既に存在する場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッドが内部でを呼び出し<xref:System.Runtime.Caching.ObjectCache> <xref:System.Runtime.Caching.ObjectCache.Add%2A> <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>ているため、メソッドオーバーロードはクラスの仮想 (abstract ではありません) です。 <xref:System.Runtime.Caching.ObjectCache.Add%2A> これにより、キャッシュの実装者が提供する必要があるメソッドオーバーロードの数が減ります。 キャッシュ実装が<xref:System.Runtime.Caching.ObjectCache.Add%2A>メソッドに特別な動作を必要としない場合は、 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>メソッドのオーバーロードを実装するだけで済みます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="AddOrGetExisting">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入しようと試み、一致するキーを持つ既存のキャッシュ エントリを返します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>のオーバーロードは、エントリをキャッシュに挿入します。 一致するキーを持つキャッシュエントリが既に存在する場合は、既存のエントリが返されます。 キャッシュエントリには、オブジェクト<xref:System.Runtime.Caching.CacheItem>またはジェネリックオブジェクトを指定できます。  
  
 <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A> オーバーロード <xref:System.Runtime.Caching.ObjectCache.Add%2A> とオーバーロードには1つの違いがあります。 これらのオーバーロードされたメソッドがキャッシュエントリを挿入しようとすると、既存の挿入されたキャッシュエントリと一致するキー <xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%2A>を持つ既存のエントリが見つかった場合、オーバーロードは既存のキャッシュエントリを返します。 オーバーロード<xref:System.Runtime.Caching.ObjectCache.Add%2A>にはありません。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem AddOrGetExisting (System.Runtime.Caching.CacheItem value, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem AddOrGetExisting(class System.Runtime.Caching.CacheItem value, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (value As CacheItem, policy As CacheItemPolicy) As CacheItem" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract System::Runtime::Caching::CacheItem ^ AddOrGetExisting(System::Runtime::Caching::CacheItem ^ value, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.AddOrGetExisting (value, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされると、指定された <see cref="T:System.Runtime.Caching.CacheItem" /> オブジェクトをキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</summary>
        <returns>同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリ。それ以外の場合は <see langword="null" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * DateTimeOffset * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キー、キャッシュ エントリのオブジェクト、絶対有効期限の値、およびオプションでキャッシュを追加する領域を使用して、キャッシュ エントリをキャッシュに挿入します。</summary>
        <returns>同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリの値。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>メソッドオーバーロードは、オブジェクトではなく、 <xref:System.Runtime.Caching.CacheItem>オブジェクトの値を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="AddOrGetExisting">
      <MemberSignature Language="C#" Value="public abstract object AddOrGetExisting (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object AddOrGetExisting(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.AddOrGetExisting(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function AddOrGetExisting (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member AddOrGetExisting : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; obj" Usage="objectCache.AddOrGetExisting (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、キャッシュ エントリのキーと値、およびエントリの削除方法の情報を指定します。</summary>
        <returns>同じキーを持つキャッシュ エントリが存在する場合は指定したキャッシュ エントリの値。それ以外の場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Runtime.Caching.ObjectCache.AddOrGetExisting%28System.String%2CSystem.Object%2CSystem.Runtime.Caching.CacheItemPolicy%2CSystem.String%29>は、オブジェクトでは<xref:System.Runtime.Caching.CacheItem>なく、オブジェクトの値を返します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Contains">
      <MemberSignature Language="C#" Value="public abstract bool Contains (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Contains(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Contains(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Contains (key As String, Optional regionName As String = null) As Boolean" />
      <MemberSignature Language="F#" Value="abstract member Contains : string * string -&gt; bool" Usage="objectCache.Contains (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリが見つかる可能性があるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ内にキャッシュ エントリが既に存在するかどうかを確認します。</summary>
        <returns><paramref name="key" /> と同じキー値を持つキャッシュ エントリがキャッシュに存在する場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateCacheEntryChangeMonitor">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheEntryChangeMonitor CreateCacheEntryChangeMonitor(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function CreateCacheEntryChangeMonitor (keys As IEnumerable(Of String), Optional regionName As String = null) As CacheEntryChangeMonitor" />
      <MemberSignature Language="F#" Value="abstract member CreateCacheEntryChangeMonitor : seq&lt;string&gt; * string -&gt; System.Runtime.Caching.CacheEntryChangeMonitor" Usage="objectCache.CreateCacheEntryChangeMonitor (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheEntryChangeMonitor</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">監視するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">任意。 領域が実装されている場合は、<paramref name="keys" /> パラメーターのキャッシュ キーが存在するキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、指定したキャッシュ エントリへの変更に応答してイベントをトリガーできる <see cref="T:System.Runtime.Caching.CacheEntryChangeMonitor" /> オブジェクトを作成します。</summary>
        <returns>キャッシュ内のキャッシュ エントリを監視する変更監視機能。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 派生<xref:System.Runtime.Caching.ObjectCache>クラスが基本<xref:System.Runtime.Caching.ObjectCache.CreateCacheEntryChangeMonitor%2A>メソッドをオーバーライドする場合、キャッシュの実装はオブジェクト<xref:System.Runtime.Caching.CacheEntryChangeMonitor>を作成する必要があります。 この特別な変更モニターは、パラメーターに指定されているキャッシュエントリが変更さ`keys`れたときに、呼び出し元に通知します。 たとえば、 `keys`パラメーター内の監視対象のアイテムがキャッシュから更新または削除された場合、このメソッドによって作成された変更モニターによってイベントがトリガーされます。  
  
 キャッシュ実装が名前付きキャッシュ領域をサポートしている場合は、 `regionName`パラメーターとして文字列値を指定できます。 それ以外の場合、パラメーター `null`の既定値はです。  
  
> [!NOTE]
>  キャッシュエントリの変更モニターがサポートされていないキャッシュ実装があります。 キャッシュ実装でオブジェクトがサポート<xref:System.Runtime.Caching.CacheEntryChangeMonitor>されているかどうかを確認するには、特定のキャッシュ実装に関するドキュメントを参照してください。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="DefaultCacheCapabilities">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.Runtime.Caching.DefaultCacheCapabilities DefaultCacheCapabilities" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property DefaultCacheCapabilities As DefaultCacheCapabilities" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Runtime::Caching::DefaultCacheCapabilities DefaultCacheCapabilities { System::Runtime::Caching::DefaultCacheCapabilities get(); };" />
      <MemberSignature Language="F#" Value="member this.DefaultCacheCapabilities : System.Runtime.Caching.DefaultCacheCapabilities" Usage="System.Runtime.Caching.ObjectCache.DefaultCacheCapabilities" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.DefaultCacheCapabilities</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>派生クラスでオーバーライドされると、キャッシュ実装で提供される機能の説明を取得します。</summary>
        <value>キャッシュ実装の既定の機能を示すフラグのビットごとの組み合わせ。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Get">
      <MemberSignature Language="C#" Value="public abstract object Get (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Get(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Get(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Get (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Get : string * string -&gt; obj" Usage="objectCache.Get (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、指定したキャッシュ エントリをキャッシュからオブジェクトとして取得します。</summary>
        <returns><paramref name="key" /> で識別されるキャッシュ エントリ。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCacheItem">
      <MemberSignature Language="C#" Value="public abstract System.Runtime.Caching.CacheItem GetCacheItem (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Runtime.Caching.CacheItem GetCacheItem(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCacheItem(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCacheItem (key As String, Optional regionName As String = null) As CacheItem" />
      <MemberSignature Language="F#" Value="abstract member GetCacheItem : string * string -&gt; System.Runtime.Caching.CacheItem" Usage="objectCache.GetCacheItem (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Caching.CacheItem</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">取得するキャッシュ エントリの一意の識別子。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュが追加されたキャッシュ内の名前付き領域。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] では領域が実装されていないため、既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、指定したキャッシュ エントリをキャッシュから <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとして取得します。</summary>
        <returns><paramref name="key" /> で識別されるキャッシュ エントリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 一部のキャッシュ実装ではクラスを<xref:System.Runtime.Caching.CacheItem>拡張する可能性があるため、このメソッドのオーバーロードが存在します。 その場合、メソッドの<xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29>オーバーロードは、必ずしもキャッシュされたデータに関するすべての情報を返すとは限りません。 ただし、メソッド<xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>のオーバーロードを使用すると、キャッシュ値だけを超えるカスタムキャッシュを返すことができます。  
  
 メソッドは <xref:System.Runtime.Caching.ObjectCache.Get%28System.String%2CSystem.String%29> メソッドに似ていますが、メソッドがを返した場合は、 <xref:System.Runtime.Caching.CacheItem>キャッシュエントリがインスタンスとして返される点が異なります。 <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>  <xref:System.Runtime.Caching.ObjectCache.GetCacheItem%28System.String%2CSystem.String%29>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetCount">
      <MemberSignature Language="C#" Value="public abstract long GetCount (string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int64 GetCount(string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetCount(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetCount (Optional regionName As String = null) As Long" />
      <MemberSignature Language="F#" Value="abstract member GetCount : string -&gt; int64" Usage="objectCache.GetCount regionName" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリ数の計算対象となるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ内のキャッシュ エントリの合計数を取得します。</summary>
        <returns>キャッシュ内のキャッシュ エントリの数。 <paramref name="regionName" /> が <see langword="null" /> でない場合、指定したキャッシュ領域内のエントリの数を示します。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="protected abstract System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method familyhidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Protected MustOverride Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object))" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; abstract System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string, obj&gt;&gt;" Usage="objectCache.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリのコレクションを反復処理するために使用できる列挙子を作成します。</summary>
        <returns>キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュの実装者は、このメソッドをオーバーライドおよび拡張して、キャッシュエントリのコレクションを反復処理するためのカスタム手段を提供できます。  
  
> [!NOTE]
>  通常、列挙子を返す操作は、キャッシュエントリ全体を返すよりもコストが高くなります。  
  
 このメソッドは、 <xref:System.Runtime.Caching.ObjectCache>クラスがメソッド<xref:System.Collections.IEnumerable.GetEnumerator%2A>と<xref:System.Collections.Generic.IEnumerable%601.GetEnumerator%2A>メソッドに対して持つ明示的なインターフェイスの実装によって呼び出されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValues">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>キャッシュ エントリのセットを取得します。</summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public abstract System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (System.Collections.Generic.IEnumerable&lt;string&gt; keys, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(class System.Collections.Generic.IEnumerable`1&lt;string&gt; keys, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.Collections.Generic.IEnumerable{System.String},System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function GetValues (keys As IEnumerable(Of String), Optional regionName As String = null) As IDictionary(Of String, Object)" />
      <MemberSignature Language="F#" Value="abstract member GetValues : seq&lt;string&gt; * string -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (keys, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Collections.Generic.IEnumerable&lt;System.String&gt;" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="keys">取得するキャッシュ エントリの一意の識別子のコレクション。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリまたはエントリが追加されたキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、指定したキーに対応するキャッシュ エントリのセットを取得します。</summary>
        <returns>キャッシュ エントリを表すキーと値のペアのディクショナリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>メソッドオーバーロードは、1つのネットワーク呼び出し中のキャッシュからの複数のキャッシュエントリのフェッチをサポートする分散キャッシュのパフォーマンスの最適化です。  
  
 呼び出し元はメソッドに1つ以上のキーを渡すことができますが、キャッシュ内のすべてのキーがエントリを表すという保証はありません。 そのため、返されたディクショナリに含まれる項目の数が、メソッドに渡されたキーの数よりも少なくなる場合があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetValues">
      <MemberSignature Language="C#" Value="public virtual System.Collections.Generic.IDictionary&lt;string,object&gt; GetValues (string regionName, params string[] keys);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.Generic.IDictionary`2&lt;string, object&gt; GetValues(string regionName, string[] keys) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.GetValues(System.String,System.String[])" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function GetValues (regionName As String, ParamArray keys As String()) As IDictionary(Of String, Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::Generic::IDictionary&lt;System::String ^, System::Object ^&gt; ^ GetValues(System::String ^ regionName, ... cli::array &lt;System::String ^&gt; ^ keys);" />
      <MemberSignature Language="F#" Value="abstract member GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;&#xA;override this.GetValues : string * string[] -&gt; System.Collections.Generic.IDictionary&lt;string, obj&gt;" Usage="objectCache.GetValues (regionName, keys)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IDictionary&lt;System.String,System.Object&gt;</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="regionName" Type="System.String" />
        <Parameter Name="keys" Type="System.String[]">
          <Attributes>
            <Attribute FrameworkAlternate="dotnet-plat-ext-2.1">
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリまたはエントリが追加されたキャッシュ内の名前付き領域。 [!INCLUDE[net_v40_short](~/includes/net-v40-short-md.md)] では領域が実装されていないため、既定値は <see langword="null" /> です。</param>
        <param name="keys">取得するキャッシュ エントリの一意の識別子のコレクション。</param>
        <summary>指定したキーに対応するキャッシュ エントリのセットを取得します。</summary>
        <returns>キャッシュ エントリを表すキーと値のペアのディクショナリ。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 メソッド<xref:System.Runtime.Caching.ObjectCache.GetValues%2A?displayProperty=nameWithType>のオーバーロードは<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>メソッドのオーバーロードに似ていC#ますが、などのマネージ言語でサポートされている省略可能なパラメーター構文を使用して、名前付き領域を渡すことができます。  
  
 クラスは<xref:System.Runtime.Caching.ObjectCache> 、 `params`配列を<xref:System.Runtime.Caching.ObjectCache.GetValues%28System.Collections.Generic.IEnumerable%7BSystem.String%7D%2CSystem.String%29>メソッドオーバーロードに渡す既定の実装を提供するため、このメソッドは仮想メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Host">
      <MemberSignature Language="C#" Value="public static IServiceProvider Host { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property class System.IServiceProvider Host" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Host" />
      <MemberSignature Language="VB.NET" Value="Public Shared Property Host As IServiceProvider" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static property IServiceProvider ^ Host { IServiceProvider ^ get(); void set(IServiceProvider ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Host : IServiceProvider with get, set" Usage="System.Runtime.Caching.ObjectCache.Host" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>get: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8">
          <AttributeName>set: System.Security.SecurityCritical</AttributeName>
        </Attribute>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>get: System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.IServiceProvider</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><see cref="T:System.Runtime.Caching.ObjectCache" /> の実装が使用でき、ホスト固有のサービスを <see cref="T:System.Runtime.Caching.ObjectCache" /> の実装に提供できる、管理されたホスティング環境への参照を取得または設定します。</summary>
        <value>キャッシュを認識する管理対象のホスト環境への参照。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 プロパティは、ホスト環境および .NET Framework [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]ホスト環境に依存する動作を実装するキャッシュ実装によって使用されます。 <xref:System.Runtime.Caching.ObjectCache.Host%2A>  
  
 次の表に、管理されたホスティング環境から使用可能であり、 <xref:System.Runtime.Caching.ObjectCache> <xref:System.Runtime.Caching.ObjectCache.Host%2A>プロパティを通じて実装で使用できるホスト環境サービスのセットを示します。  
  
|サービス|説明|  
|-------------|-----------------|  
|<xref:System.Runtime.Caching.Hosting.IApplicationIdentifier>|ホスト環境では、パフォーマンスカウンターの特定などの機能のためにキャッシュの実装で必要になる可能性があるアプリケーションドメインの識別子を提供できます。|  
|<xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>|ホスト環境では、 [!INCLUDE[dnprdnshort](~/includes/dnprdnshort-md.md)]に用意されているものを使用する代わりに、カスタムのファイル変更通知システムを提供できます。|  
|<xref:System.Runtime.Caching.Hosting.IMemoryCacheManager>|キャッシュの実装がホスト環境にキャッシュメモリの消費を報告できるようにします。 これにより、ホスト環境は複数のキャッシュ実装間でメモリ使用量を一元的に管理できます。|  
  
> [!NOTE]
>  このプロパティ値の呼び出し元には、無制限のコードアクセスセキュリティのアクセス許可が必要です。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">プロパティに割り当てられている値が <see langword="null" /> です。</exception>
        <exception cref="T:System.InvalidOperationException">プロパティ値を複数回設定しようとしました。</exception>
        <permission cref="F:System.Security.Permissions.SecurityAction.Demand">このプロパティのすべてのアクセサーに対する完全な信頼。 このプロパティは、部分的に信頼されているコードでは使用できません。</permission>
      </Docs>
    </Member>
    <Member MemberName="InfiniteAbsoluteExpiration">
      <MemberSignature Language="C#" Value="public static readonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.DateTimeOffset InfiniteAbsoluteExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly InfiniteAbsoluteExpiration As DateTimeOffset " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly DateTimeOffset InfiniteAbsoluteExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable InfiniteAbsoluteExpiration : DateTimeOffset" Usage="System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTimeOffset</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ エントリに絶対有効期限が設定されていないことを示す値を取得します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 有効期限の値として設定された<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>フィールド値を使用してキャッシュに挿入されるキャッシュエントリは、絶対ポイントに基づいて期限切れにならないようにする必要があります。 ただし、この設定のキャッシュエントリは、メモリ不足によって発生する変更監視イベントの削除など、特定のキャッシュ実装によって決定される他の理由でキャッシュから削除できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item">
      <MemberSignature Language="C#" Value="public abstract object this[string key] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object Item(string)" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Item(System.String)" />
      <MemberSignature Language="VB.NET" Value="Default Public MustOverride Property Item(key As String) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::Object ^ default[System::String ^] { System::Object ^ get(System::String ^ key); void set(System::String ^ key, System::Object ^ value); };" />
      <MemberSignature Language="F#" Value="member this.Item(string) : obj with get, set" Usage="System.Runtime.Caching.ObjectCache.Item" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ内のキャッシュ エントリの一意の識別子。</param>
        <summary><see cref="T:System.Runtime.Caching.ObjectCache" /> クラスの既定のインデクサーを取得または設定します。</summary>
        <value>キャッシュ インスタンスへのインデクサーとして使用されるキー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティの set アクセサーの動作は、メソッドに<xref:System.Runtime.Caching.MemoryCache.Set%28System.String%2CSystem.Object%2CSystem.DateTimeOffset%2CSystem.String%29>似ています。 内部的には、キャッシュ実装は、指定された値の絶対<xref:System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration>有効期限をメソッドに設定できます。 ただし、この動作は最終的にキャッシュの実装によって決まります。  
  
 Get アクセサーの動作は、 <xref:System.Collections.Specialized.NameValueCollection.Get%28System.String%29>メソッドを呼び出し、リージョン名にを使用する`null`のと似ています。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Name">
      <MemberSignature Language="C#" Value="public abstract string Name { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance string Name" />
      <MemberSignature Language="DocId" Value="P:System.Runtime.Caching.ObjectCache.Name" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride ReadOnly Property Name As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract property System::String ^ Name { System::String ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.Name : string" Usage="System.Runtime.Caching.ObjectCache.Name" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>特定の <see cref="T:System.Runtime.Caching.ObjectCache" /> インスタンスの名前を取得します。</summary>
        <value>特定のキャッシュ インスタンスの名前。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 キャッシュの実装によっては、1つのアプリケーションで実行されているキャッシュの複数のインスタンスをサポートする場合があります。 このプロパティを使用すると、キャッシュの実装者は、特定のキャッシュインスタンスを識別する名前を返すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="NoSlidingExpiration">
      <MemberSignature Language="C#" Value="public static readonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="ILAsm" Value=".field public static initonly valuetype System.TimeSpan NoSlidingExpiration" />
      <MemberSignature Language="DocId" Value="F:System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberSignature Language="VB.NET" Value="Public Shared ReadOnly NoSlidingExpiration As TimeSpan " />
      <MemberSignature Language="C++ CLI" Value="public: static initonly TimeSpan NoSlidingExpiration;" />
      <MemberSignature Language="F#" Value=" staticval mutable NoSlidingExpiration : TimeSpan" Usage="System.Runtime.Caching.ObjectCache.NoSlidingExpiration" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TimeSpan</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>キャッシュ エントリにスライド式有効期限が設定されていないことを示します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 期間または定義された時間に基づく有効期限は、スライディング有効期限とも呼ばれます。 通常、スライド式有効期限に基づく項目を見つけするキャッシュ実装は、指定された時間内にアクセスされていない項目を削除します。  
  
 有効期限の値として設定された<xref:System.Runtime.Caching.ObjectCache.NoSlidingExpiration>フィールド値を使用してキャッシュに挿入されるキャッシュエントリは、スライディング時間枠の非アクティビティのため、削除しないでください。 ただし、キャッシュ項目に絶対有効期限が設定されている場合、またはその他の削除イベント (変更モニターやメモリ不足など) が発生した場合は、キャッシュ項目を削除できます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Remove">
      <MemberSignature Language="C#" Value="public abstract object Remove (string key, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Remove(string key, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Remove(System.String,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Function Remove (key As String, Optional regionName As String = null) As Object" />
      <MemberSignature Language="F#" Value="abstract member Remove : string * string -&gt; obj" Usage="objectCache.Remove (key, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリが追加されたキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュからキャッシュ エントリを削除します。</summary>
        <returns>キーで指定された、削除されたキャッシュ エントリの値を表すオブジェクト。指定したエントリが見つからない場合は <see langword="null" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 カスタムキャッシュ実装でこのメソッドをオーバーライドする場合、に`key`対応するキャッシュにキャッシュエントリがあると、削除された項目の値が返されます。 キャッシュから何も削除されていない場合、 `null`メソッドはを返します。  
  
> [!NOTE]
>  一部の分散キャッシュ実装では、キャッシュから削除された値を返す機能がサポートされていない場合があります。 これは、キャッシュの実装で、削除されたキャッシュ項目の値を返すことがサポートされていないことが原因である可能性があります。 また、戻り値としてオブジェクトをマーシャリングすると、コストが高すぎることが原因である場合もあります。 このような場合、キャッシュの実装`null`はを返すことができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="Set">
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.Runtime.Caching.ObjectCache.Set%2A>オーバーロードメソッドの一般的な動作は、挿入操作または更新操作です。 指定されたエントリが存在しない場合、キャッシュエントリが新しいエントリとして挿入されるか、既に存在する場合は、新しい値でキャッシュエントリが更新されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </MemberGroup>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (System.Runtime.Caching.CacheItem item, System.Runtime.Caching.CacheItemPolicy policy);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(class System.Runtime.Caching.CacheItem item, class System.Runtime.Caching.CacheItemPolicy policy) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.Runtime.Caching.CacheItem,System.Runtime.Caching.CacheItemPolicy)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (item As CacheItem, policy As CacheItemPolicy)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; abstract void Set(System::Runtime::Caching::CacheItem ^ item, System::Runtime::Caching::CacheItemPolicy ^ policy);" />
      <MemberSignature Language="F#" Value="abstract member Set : System.Runtime.Caching.CacheItem * System.Runtime.Caching.CacheItemPolicy -&gt; unit" Usage="objectCache.Set (item, policy)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="item" Type="System.Runtime.Caching.CacheItem" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
      </Parameters>
      <Docs>
        <param name="item">追加するキャッシュ項目。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリを <see cref="T:System.Runtime.Caching.CacheItem" /> インスタンスとしてキャッシュに挿入し、エントリの削除方法に関する情報を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 の`item`キーが存在しない場合、 `item`は新しいキャッシュエントリとして挿入されます。 一致`item`するキーを持つ項目が存在する場合、の`item`値は、既存のキャッシュエントリの値を更新または上書きするために使用されます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, DateTimeOffset absoluteExpiration, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, valuetype System.DateTimeOffset absoluteExpiration, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.DateTimeOffset,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, absoluteExpiration As DateTimeOffset, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * DateTimeOffset * string -&gt; unit" Usage="objectCache.Set (key, value, absoluteExpiration, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="absoluteExpiration" Type="System.DateTimeOffset" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="absoluteExpiration">キャッシュ エントリの有効期限が切れる固定日時。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入し、時間ベースの有効期限の詳細を指定します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 と一致`key`する項目がキャッシュに存在しない場合は`value` 、 `key`を使用して新しいキャッシュエントリとして挿入されます。 一致`item`するキーを持つ項目が存在する場合は、を使用`value`してキャッシュエントリが更新または上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Set">
      <MemberSignature Language="C#" Value="public abstract void Set (string key, object value, System.Runtime.Caching.CacheItemPolicy policy, string regionName = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void Set(string key, object value, class System.Runtime.Caching.CacheItemPolicy policy, string regionName) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.Set(System.String,System.Object,System.Runtime.Caching.CacheItemPolicy,System.String)" />
      <MemberSignature Language="VB.NET" Value="Public MustOverride Sub Set (key As String, value As Object, policy As CacheItemPolicy, Optional regionName As String = null)" />
      <MemberSignature Language="F#" Value="abstract member Set : string * obj * System.Runtime.Caching.CacheItemPolicy * string -&gt; unit" Usage="objectCache.Set (key, value, policy, regionName)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="key" Type="System.String" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="policy" Type="System.Runtime.Caching.CacheItemPolicy" />
        <Parameter Name="regionName" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="key">キャッシュ エントリの一意の識別子。</param>
        <param name="value">挿入するオブジェクト。</param>
        <param name="policy">キャッシュ エントリの削除の詳細を格納しているオブジェクト。 このオブジェクトは、単純な絶対有効期限よりも多くの削除オプションを提供します。</param>
        <param name="regionName">任意。 領域が実装されている場合は、キャッシュ エントリを追加できるキャッシュ内の名前付き領域。 省略可能なパラメーターの既定値は <see langword="null" /> です。</param>
        <summary>派生クラスでオーバーライドされると、キャッシュ エントリをキャッシュに挿入します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドオーバーロードを使用すると、時間ベースの絶対有効期限で使用できるものよりも多くの削除または有効期限の詳細を指定できます。  
  
 と一致`key`する項目がキャッシュに存在しない場合は`value` 、 `key`を使用して新しいキャッシュエントリとして挿入されます。 一致`item`するキーを持つ項目が存在する場合は、を使用`value`してキャッシュエントリが更新または上書きされます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;string,object&gt;&gt; IEnumerable&lt;KeyValuePair&lt;string,object&gt;&gt;.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.Generic.IEnumerator`1&lt;valuetype System.Collections.Generic.KeyValuePair`2&lt;string, object&gt;&gt; System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#Generic#IEnumerable&lt;System#Collections#Generic#KeyValuePair&lt;System#String,System#Object&gt;&gt;#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator(Of KeyValuePair(Of String, Object)) Implements IEnumerable(Of KeyValuePair(Of String, Object)).GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::Generic::IEnumerator&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt; ^ System.Collections.Generic.IEnumerable&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;.GetEnumerator() = System::Collections::Generic::IEnumerable&lt;System::Collections::Generic::KeyValuePair&lt;System::String ^, System::Object ^&gt;&gt;::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.Generic.IEnumerable`1.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Runtime.TargetedPatchingOptOut("Performance critical to inline this type of method across NGen image boundaries")</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Collections.Generic.IEnumerator&lt;System.Collections.Generic.KeyValuePair&lt;System.String,System.Object&gt;&gt;</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>厳密に型指定されたコレクションに対する繰り返し処理をサポートします。</summary>
        <returns>キャッシュ内のキャッシュ エントリへのアクセスを提供する列挙子オブジェクト。</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IEnumerable.GetEnumerator">
      <MemberSignature Language="C#" Value="System.Collections.IEnumerator IEnumerable.GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance class System.Collections.IEnumerator System.Collections.IEnumerable.GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Runtime.Caching.ObjectCache.System#Collections#IEnumerable#GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Function GetEnumerator () As IEnumerator Implements IEnumerable.GetEnumerator" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Collections::IEnumerator ^ System.Collections.IEnumerable.GetEnumerator() = System::Collections::IEnumerable::GetEnumerator;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime.Caching</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>ジェネリック コレクションに対する反復処理をサポートします。</summary>
        <returns>キャッシュ内のアイテムへのアクセスを提供する列挙子オブジェクト。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメンバーは、明示的なインターフェイス メンバーの実装です。 派生<xref:System.Runtime.Caching.ObjectCache>インスタンスが<xref:System.Collections.IEnumerable>インターフェイスにキャストされている場合にのみ使用できます。  
  
 開発者は、このメソッドを使用して、キャッシュエントリのジェネリックコレクションを反復処理できます。  
  
 これは、 <xref:System.Runtime.Caching.ObjectCache.GetEnumerator%2A>メソッド<xref:System.Collections.IEnumerable.GetEnumerator%2A>を内部で呼び出す既定の実装です。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>
