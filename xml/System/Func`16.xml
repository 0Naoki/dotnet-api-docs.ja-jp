<Type Name="Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;" FullName="System.Func&lt;T1,T2,T3,T4,T5,T6,T7,T8,T9,T10,T11,T12,T13,T14,T15,TResult&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="99f047f34f0d5e317f9dacbe2edaf89bbf353f73" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36431775" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate TResult Func&lt;in T1,in T2,in T3,in T4,in T5,in T6,in T7,in T8,in T9,in T10,in T11,in T12,in T13,in T14,in T15,out TResult&gt;(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi sealed Func`16&lt;- T1, - T2, - T3, - T4, - T5, - T6, - T7, - T8, - T9, - T10, - T11, - T12, - T13, - T14, - T15, + TResult&gt; extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.Func`16" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Function Func(Of In T1, In T2, In T3, In T4, In T5, In T6, In T7, In T8, In T9, In T10, In T11, In T12, In T13, In T14, In T15, Out TResult)(arg1 As T1, arg2 As T2, arg3 As T3, arg4 As T4, arg5 As T5, arg6 As T6, arg7 As T7, arg8 As T8, arg9 As T9, arg10 As T10, arg11 As T11, arg12 As T12, arg13 As T13, arg14 As T14, arg15 As T15) As TResult " />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename T8, typename T9, typename T10, typename T11, typename T12, typename T13, typename T14, typename T15, typename TResult&gt;&#xA;public delegate TResult Func(T1 arg1, T2 arg2, T3 arg3, T4 arg4, T5 arg5, T6 arg6, T7 arg7, T8 arg8, T9 arg9, T10 arg10, T11 arg11, T12 arg12, T13 arg13, T14 arg14, T15 arg15);" />
  <TypeSignature Language="F#" Value="type Func&lt;'T1, 'T2, 'T3, 'T4, 'T5, 'T6, 'T7, 'T8, 'T9, 'T10, 'T11, 'T12, 'T13, 'T14, 'T15, 'Result&gt; = delegate of 'T1 * 'T2 * 'T3 * 'T4 * 'T5 * 'T6 * 'T7 * 'T8 * 'T9 * 'T10 * 'T11 * 'T12 * 'T13 * 'T14 * 'T15 -&gt; 'Result" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>System.Core</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T2">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T3">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T4">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T5">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T6">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T7">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T8">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T9">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T10">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T11">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T12">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T13">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T14">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="T15">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
    <TypeParameter Name="TResult">
      <Constraints>
        <ParameterAttribute>Covariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Parameters>
    <Parameter Name="arg1" Type="T1" />
    <Parameter Name="arg2" Type="T2" />
    <Parameter Name="arg3" Type="T3" />
    <Parameter Name="arg4" Type="T4" />
    <Parameter Name="arg5" Type="T5" />
    <Parameter Name="arg6" Type="T6" />
    <Parameter Name="arg7" Type="T7" />
    <Parameter Name="arg8" Type="T8" />
    <Parameter Name="arg9" Type="T9" />
    <Parameter Name="arg10" Type="T10" />
    <Parameter Name="arg11" Type="T11" />
    <Parameter Name="arg12" Type="T12" />
    <Parameter Name="arg13" Type="T13" />
    <Parameter Name="arg14" Type="T14" />
    <Parameter Name="arg15" Type="T15" />
  </Parameters>
  <ReturnValue>
    <ReturnType>TResult</ReturnType>
  </ReturnValue>
  <Docs>
    <typeparam name="T1">このデリゲートによってカプセル化されるメソッドの最初のパラメーターの型。</typeparam>
    <typeparam name="T2">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーターの型。</typeparam>
    <typeparam name="T3">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーターの型。</typeparam>
    <typeparam name="T4">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーターの型。</typeparam>
    <typeparam name="T5">このデリゲートによってカプセル化されるメソッドの第 5 パラメーターの型。</typeparam>
    <typeparam name="T6">このデリゲートによってカプセル化されるメソッドの第 6 パラメーターの型。</typeparam>
    <typeparam name="T7">このデリゲートによってカプセル化されるメソッドの第 7 パラメーターの型。</typeparam>
    <typeparam name="T8">このデリゲートによってカプセル化されるメソッドの第 8 パラメーターの型。</typeparam>
    <typeparam name="T9">このデリゲートによってカプセル化されるメソッドの第 9 パラメーターの型。</typeparam>
    <typeparam name="T10">このデリゲートによってカプセル化されるメソッドの第 10 パラメーターの型。</typeparam>
    <typeparam name="T11">このデリゲートによってカプセル化されるメソッドの第 11 パラメーターの型。</typeparam>
    <typeparam name="T12">このデリゲートによってカプセル化されるメソッドの第 12 パラメーターの型。</typeparam>
    <typeparam name="T13">このデリゲートによってカプセル化されるメソッドの第 13 パラメーターの型。</typeparam>
    <typeparam name="T14">このデリゲートによってカプセル化されるメソッドの第 14 パラメーターの型。</typeparam>
    <typeparam name="T15">このデリゲートによってカプセル化されるメソッドの第 15 パラメーターの型。</typeparam>
    <typeparam name="TResult">このデリゲートによってカプセル化されるメソッドの戻り値の型。</typeparam>
    <param name="arg1">このデリゲートによってカプセル化されるメソッドの最初のパラメーター。</param>
    <param name="arg2">このデリゲートによってカプセル化されるメソッドの 2 番目のパラメーター。</param>
    <param name="arg3">このデリゲートによってカプセル化されるメソッドの 3 番目のパラメーター。</param>
    <param name="arg4">このデリゲートによってカプセル化されるメソッドの 4 番目のパラメーター。</param>
    <param name="arg5">このデリゲートによってカプセル化されるメソッドの第 5 パラメーター。</param>
    <param name="arg6">このデリゲートによってカプセル化されるメソッドの第 6 パラメーター。</param>
    <param name="arg7">このデリゲートによってカプセル化されるメソッドの第 7 パラメーター。</param>
    <param name="arg8">このデリゲートによってカプセル化されるメソッドの第 8 パラメーター。</param>
    <param name="arg9">このデリゲートによってカプセル化されるメソッドの第 9 パラメーター。</param>
    <param name="arg10">このデリゲートによってカプセル化されるメソッドの第 10 パラメーター。</param>
    <param name="arg11">このデリゲートによってカプセル化されるメソッドの第 11 パラメーター。</param>
    <param name="arg12">このデリゲートによってカプセル化されるメソッドの第 12 パラメーター。</param>
    <param name="arg13">このデリゲートによってカプセル化されるメソッドの第 13 パラメーター。</param>
    <param name="arg14">このデリゲートによってカプセル化されるメソッドの第 14 パラメーター。</param>
    <param name="arg15">このデリゲートによってカプセル化されるメソッドの第 15 パラメーター。</param>
    <summary>15 個のパラメーターを受け取り、<typeparamref name="TResult" /> パラメーターに指定された型の値を返すメソッドをカプセル化します。</summary>
    <returns>このデリゲートによってカプセル化されるメソッドの戻り値。</returns>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このデリゲートを使用して、明示的にカスタム デリゲートを宣言しなくても、パラメーターとして渡すことができるメソッドを表すことができます。 カプセル化されるメソッドは、このデリゲートによって定義されているメソッドのシグネチャに対応する必要があります。 つまり、カプセル化されるメソッドはそれぞれが渡された値によって、15 個のパラメーターである必要があります、値を返す必要があります。  
  
> [!NOTE]
>  15 個のパラメーターを返すメソッドを参照する`void`(として宣言されている Visual basic、または、`Sub`ではなく同様、 `Function`)、ジェネリックを使用して<xref:System.Action%6015>代わりに委任します。  
  
 使用することも、<xref:System.Func%6016>匿名メソッド、ラムダ式を持つデリゲートします。  
  
 ラムダ式の基になる型がジェネリックのいずれかの`Func`デリゲート。 これによって、デリゲートを明示的に割り当てることがなく、ラムダ式をパラメーターとして渡します。  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Action`15" />
  </Docs>
</Type>