<Type Name="EventHandler" FullName="System.EventHandler">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="bdfad21e1dcbc95726c6071d169836083d0cda88" />
    <Meta Name="ms.sourcegitcommit" Value="5a49536d99d2d0b54e4cb7280870903e043272df" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="07/03/2018" />
    <Meta Name="ms.locfileid" Value="37480706" />
  </Metadata>
  <TypeSignature Language="C#" Value="public delegate void EventHandler(object sender, EventArgs e);" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed EventHandler extends System.MulticastDelegate" />
  <TypeSignature Language="DocId" Value="T:System.EventHandler" />
  <TypeSignature Language="VB.NET" Value="Public Delegate Sub EventHandler(sender As Object, e As EventArgs)" />
  <TypeSignature Language="C++ CLI" Value="public delegate void EventHandler(System::Object ^ sender, EventArgs ^ e);" />
  <TypeSignature Language="F#" Value="type EventHandler = delegate of obj * EventArgs -&gt; unit" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Delegate</BaseTypeName>
  </Base>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Parameters>
    <Parameter Name="sender" Type="System.Object" />
    <Parameter Name="e" Type="System.EventArgs" />
  </Parameters>
  <ReturnValue>
    <ReturnType>System.Void</ReturnType>
  </ReturnValue>
  <Docs>
    <param name="sender">
      <span data-ttu-id="e1da2-101">イベントのソース。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1da2-101">The source of the event.</span>
      </span>
    </param>
    <param name="e">
      <span data-ttu-id="e1da2-102">イベント データを格納していないオブジェクト。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1da2-102">An object that contains no event data.</span>
      </span>
    </param>
    <summary>
      <span data-ttu-id="e1da2-103">イベント データを含まないイベントを処理するメソッドを表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="e1da2-103">Represents the method that will handle an event that has no event data.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="e1da2-104">.NET Framework でのイベント モデルは、イベント デリゲートをイベントのハンドラーを関連付けることに基づきます。</span><span class="sxs-lookup"><span data-stu-id="e1da2-104">The event model in the .NET Framework is based on having an event delegate that connects an event with its handler.</span></span> <span data-ttu-id="e1da2-105">イベントを発生させるのには、2 つの要素が必要です。</span><span class="sxs-lookup"><span data-stu-id="e1da2-105">To raise an event, two elements are needed:</span></span>  
  
-   <span data-ttu-id="e1da2-106">イベントに応答を提供するメソッドを識別するデリゲート。</span><span class="sxs-lookup"><span data-stu-id="e1da2-106">A delegate that identifies the method that provides the response to the event.</span></span>  
  
-   <span data-ttu-id="e1da2-107">必要に応じて、イベント データを提供する場合、イベント データを保持するクラスです。</span><span class="sxs-lookup"><span data-stu-id="e1da2-107">Optionally, a class that holds the event data, if the event provides data.</span></span>  
  
 <span data-ttu-id="e1da2-108">デリゲートは、署名、つまり、戻り値の型、メソッドのパラメーター リストの型を定義する型です。</span><span class="sxs-lookup"><span data-stu-id="e1da2-108">The delegate is a type that defines a signature, that is, the return value type and parameter list types for a method.</span></span> <span data-ttu-id="e1da2-109">デリゲート型を使用して、デリゲートと同じシグネチャを持つ任意のメソッドを参照できる変数を宣言することができます。</span><span class="sxs-lookup"><span data-stu-id="e1da2-109">You can use the delegate type to declare a variable that can refer to any method with the same signature as the delegate.</span></span>  
  
 <span data-ttu-id="e1da2-110">標準イベント ハンドラー デリゲートのシグネチャは、値を返さないメソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-110">The standard signature of an event handler delegate defines a method that does not return a value.</span></span> <span data-ttu-id="e1da2-111">このメソッドの最初のパラメーターは型<xref:System.Object>イベントを発生させる、インスタンスを指しています。</span><span class="sxs-lookup"><span data-stu-id="e1da2-111">This method's first parameter is of type <xref:System.Object> and refers to the instance that raises the event.</span></span> <span data-ttu-id="e1da2-112">2 番目のパラメーターが型から派生<xref:System.EventArgs>とイベント データを保持します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-112">Its second parameter is derived from type <xref:System.EventArgs> and holds the event data.</span></span> <span data-ttu-id="e1da2-113">2 番目のパラメーターの値だけは、イベントがイベント データを生成しない場合、<xref:System.EventArgs.Empty?displayProperty=nameWithType>フィールド。</span><span class="sxs-lookup"><span data-stu-id="e1da2-113">If the event does not generate event data, the second parameter is simply the value of the <xref:System.EventArgs.Empty?displayProperty=nameWithType> field.</span></span> <span data-ttu-id="e1da2-114">2 番目のパラメーターから派生した型は、それ以外の場合、<xref:System.EventArgs>し、フィールドやイベント データを保持するために必要なプロパティを提供します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-114">Otherwise, the second parameter is a type derived from <xref:System.EventArgs> and supplies any fields or properties needed to hold the event data.</span></span>  
  
 <span data-ttu-id="e1da2-115"><xref:System.EventHandler>デリゲートは、定義済みのデリゲートを具体的にはデータを生成しないイベントのイベント ハンドラー メソッドを表します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-115">The <xref:System.EventHandler> delegate is a predefined delegate that specifically represents an event handler method for an event that does not generate data.</span></span> <span data-ttu-id="e1da2-116">ジェネリックを使用する場合は、イベントがデータを生成する必要があります<xref:System.EventHandler%601>クラスに委任します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-116">If your event does generate data, you must use the generic <xref:System.EventHandler%601> delegate class.</span></span>  
  
 <span data-ttu-id="e1da2-117">イベントを処理するメソッドを使用してイベントを関連付けるには、イベントにデリゲートのインスタンスを追加します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-117">To associate the event with the method that will handle the event, add an instance of the delegate to the event.</span></span> <span data-ttu-id="e1da2-118">デリゲートを削除しない限り、そのイベントが発生すると常にイベント ハンドラーが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="e1da2-118">The event handler is called whenever the event occurs, unless you remove the delegate.</span></span>  
  
 <span data-ttu-id="e1da2-119">イベント ハンドラー デリゲートの詳細については、次を参照してください。[処理とイベントの発生](~/docs/standard/events/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-119">For more information about event handler delegates, see [Handling and Raising Events](~/docs/standard/events/index.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="e1da2-120">次の例では、という名前のイベント`ThresholdReached`関連付けられている、<xref:System.EventHandler>を委任します。</span><span class="sxs-lookup"><span data-stu-id="e1da2-120">The following example shows an event named `ThresholdReached` that is associated with an <xref:System.EventHandler> delegate.</span></span> <span data-ttu-id="e1da2-121">割り当てられているメソッド、<xref:System.EventHandler>でデリゲートが呼び出される、`OnThresholdReached`メソッド。</span><span class="sxs-lookup"><span data-stu-id="e1da2-121">The method assigned to the <xref:System.EventHandler> delegate is called in the `OnThresholdReached` method.</span></span>  
  
 [!code-cpp[EventsOverview#6](~/samples/snippets/cpp/VS_Snippets_CLR/eventsoverview/cpp/programwithdata.cpp#6)]
 [!code-csharp[EventsOverview#6](~/samples/snippets/csharp/VS_Snippets_CLR/eventsoverview/cs/programwithdata.cs#6)]
 [!code-vb[EventsOverview#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/eventsoverview/vb/module1withdata.vb#6)]  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.EventHandler`1" />
    <altmember cref="T:System.EventArgs" />
    <altmember cref="T:System.Delegate" />
  </Docs>
</Type>