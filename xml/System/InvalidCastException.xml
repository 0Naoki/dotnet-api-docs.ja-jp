<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="InvalidCastException.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac57906f31b11cbf95ef8c0899681cd7c2ecc491667.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">7906f31b11cbf95ef8c0899681cd7c2ecc491667</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.InvalidCastException">
          <source>The exception that is thrown for invalid casting or explicit conversion.</source>
          <target state="translated">無効なキャストまたは明示的な変換が発生したときにスローされる例外。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The .NET Framework supports automatic conversion from derived types to their base types and back to the derived type, as well as from types that present interfaces to interface objects and back.</source>
          <target state="translated">.NET Framework では、その基本型および派生された型への派生型からだけでなくインターフェイス オブジェクトとの間にインターフェイスを提供する型からの自動変換をサポートします。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>It also includes a variety of mechanisms that support custom conversions.</source>
          <target state="translated">また、さまざまなカスタムの変換をサポートするメカニズムも含まれます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For more information, see <bpt id="p1">[</bpt>Type Conversion in the .NET Framework<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework における型変換<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown when the conversion of an instance of one type to another type is not supported.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 1 つの型のインスタンスの別の型への変換がサポートされていない場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For example, attempting to convert a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to a <ph id="ph2">&lt;xref:System.DateTime&gt;</ph> value throws an <ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">たとえば、変換中に、<ph id="ph1">&lt;xref:System.Char&gt;</ph>値を<ph id="ph2">&lt;xref:System.DateTime&gt;</ph>値がスローされます、<ph id="ph3">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>It differs from an <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception, which is thrown when a conversion of one type to another is supported, but the value of the source type is outside the range of the target type.</source>
          <target state="translated">異なり、 <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> 、1 つの型の間の変換がサポートされているが、ソースの種類の値がターゲット型の範囲外の場合にスローされる例外。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>An <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is caused by developer error and should not be handled in a <ph id="ph2">`try/catch`</ph> block; instead, the cause of the exception should be eliminated.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外は開発者のエラーによって発生およびで処理する必要があります、<ph id="ph2">`try/catch`</ph>ブロックです。 代わりに、例外の原因を排除する必要があります。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For information about conversions supported by the system, see the <ph id="ph1">&lt;xref:System.Convert&gt;</ph> class.</source>
          <target state="translated">システムでサポートされている変換については、次を参照してください。、<ph id="ph1">&lt;xref:System.Convert&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For errors that occur when the destination type can store source type values, but is not large enough to store a specific source value, see the <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception.</source>
          <target state="translated">ソースの種類は、値が、大きさがない変換先の型を格納できる場合に発生したエラーの特定のソース値を格納するのに十分なを参照してください、<ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In many cases, your language compiler detects that no conversion exists between the source type and the target type and issues a compiler error.</source>
          <target state="translated">多くの場合は、言語コンパイラは、変換はありませんが、ソースの種類とターゲットの種類が存在し、コンパイラ エラーことを検出します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Some of the conditions under which an attempted conversion throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception are discussed in the following sections:</source>
          <target state="translated">試みた変換がスローされる条件の一部、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外は次のセクションで説明します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Primitive types and IConvertible<ept id="p1">](#Primitive)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>プリミティブ型と IConvertible<ept id="p1">](#Primitive)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>The Convert.ChangeType method<ept id="p1">](#ChangeType)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>Convert.ChangeType メソッド<ept id="p1">](#ChangeType)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Narrowing conversions and IConvertible implementations<ept id="p1">](#Narrowing)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>縮小変換と IConvertible の実装<ept id="p1">](#Narrowing)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Downcasting<ept id="p1">](#Downcasting)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>ダウン キャスト<ept id="p1">](#Downcasting)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Conversion from an interface object<ept id="p1">](#Interface)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>インターフェイスのオブジェクトからの変換<ept id="p1">](#Interface)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>String conversions<ept id="p1">](#String)</ept><ph id="ph1"> </ph></source>
          <target state="translated"><bpt id="p1">[</bpt>文字列変換<ept id="p1">](#String)</ept><ph id="ph1"> </ph></target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><bpt id="p1">[</bpt>Visual Basic 6.0 migration<ept id="p1">](#Migration)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>Visual Basic 6.0 の移行<ept id="p1">](#Migration)</ept></target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For an explicit reference conversion to be successful, the source value must be <ph id="ph1">`null`</ph>, or the object type referenced by the source argument must be convertible to the destination type by an implicit reference conversion.</source>
          <target state="translated">元の値が指定する必要がありますを成功させるに明示的な参照変換、変換、 <ph id="ph1">`null`</ph>、または元の引数が参照されているオブジェクトの種類は、暗黙的な参照変換によって変換先の型に変換可能である必要があります。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following intermediate language (IL) instructions throw an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception:</source>
          <target state="translated">中間言語 (IL) の次の手順をスロー、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> uses the HRESULT COR_E_INVALIDCAST, which has the value 0x80004002.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> 値は 0x80004002 HRESULT COR_E_INVALIDCAST を使用します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For a list of initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>, see the <ph id="ph2">&lt;xref:System.InvalidCastException.%23ctor%2A&gt;</ph> constructors.</source>
          <target state="translated">インスタンスの初期プロパティ値の一覧については<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>を参照してください、<ph id="ph2">&lt;xref:System.InvalidCastException.%23ctor%2A&gt;</ph>コンス トラクターです。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Primitive types and IConvertible</source>
          <target state="translated">プリミティブ型と IConvertible</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You directly or indirectly call a primitive type's <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation that does not support a particular conversion.</source>
          <target state="translated">直接または間接的に呼び出す、プリミティブ型の<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>特定の変換をサポートしていない実装します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>For example, trying to convert a <ph id="ph1">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Char&gt;</ph> or a <ph id="ph3">&lt;xref:System.DateTime&gt;</ph> value to an <ph id="ph4">&lt;xref:System.Int32&gt;</ph> throws an <ph id="ph5">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">たとえば、変換を試みて、<ph id="ph1">&lt;xref:System.Boolean&gt;</ph>値を<ph id="ph2">&lt;xref:System.Char&gt;</ph>または<ph id="ph3">&lt;xref:System.DateTime&gt;</ph>値を<ph id="ph4">&lt;xref:System.Int32&gt;</ph>をスロー、<ph id="ph5">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following example calls both the <ph id="ph1">&lt;xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph> methods to convert a <ph id="ph3">&lt;xref:System.Boolean&gt;</ph> value to a <ph id="ph4">&lt;xref:System.Char&gt;</ph>.</source>
          <target state="translated">次の例では、両方を呼び出します、<ph id="ph1">&lt;xref:System.Boolean.System%23IConvertible%23ToChar%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Convert.ToChar%28System.Boolean%29?displayProperty=nameWithType&gt;</ph>を変換するメソッド、<ph id="ph3">&lt;xref:System.Boolean&gt;</ph>値を<ph id="ph4">&lt;xref:System.Char&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In both cases, the method call throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">どちらの場合、メソッドの呼び出しがスローされます、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Because the conversion is not supported, there is no workaround.</source>
          <target state="translated">変換がサポートされていないために、回避策はありません。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The Convert.ChangeType method</source>
          <target state="translated">Convert.ChangeType メソッド</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You've called the <ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method to convert an object from one type to another, but one or both types don't implement the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">呼び出して、<ph id="ph1">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>間、1 つの型が 1 つまたは両方の種類からオブジェクトを変換するメソッドを実装しない、<ph id="ph2">&lt;xref:System.IConvertible&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In most cases, because the conversion is not supported, there is no workaround.</source>
          <target state="translated">ほとんどの場合、変換がサポートされていないためが回避策はありません。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In some cases, a possible workaround is to manually assign property values from the source type to similar properties of a the target type.</source>
          <target state="translated">場合によっては、可能な回避策はのようなプロパティに元の型からプロパティ値を手動で割り当てるには、対象の型。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Narrowing conversions and IConvertible implementations</source>
          <target state="translated">縮小変換と IConvertible の実装</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Narrowing operators define the explicit conversions supported by a type.</source>
          <target state="translated">縮小の演算子は、型によってサポートされている明示的な変換を定義します。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>A casting operator in C# or the <ph id="ph1">`CType`</ph> conversion method in Visual Basic (if <ph id="ph2">`Option Strict`</ph> is on)  is required to perform the conversion.</source>
          <target state="translated">C# のキャスト演算子または<ph id="ph1">`CType`</ph>Visual Basic での変換メソッド (場合<ph id="ph2">`Option Strict`</ph>に) 変換を実行するために必要なです。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>However, if neither the source type nor the target type defines an explicit or narrowing conversion between the two types, and the <ph id="ph1">&lt;xref:System.IConvertible&gt;</ph> implementation of one or both types doesn't support a conversion from the source type to the target type, an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown.</source>
          <target state="translated">ただしが明示的または自動縮小の 2 つの型間の変換元の型でもターゲット型が定義されている場合、および<ph id="ph1">&lt;xref:System.IConvertible&gt;</ph>ソースの種類からターゲット型への変換をサポートしていない 1 つまたは両方の種類の実装、<ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>例外がスローされます。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In most cases, because the conversion is not supported, there is no workaround.</source>
          <target state="translated">ほとんどの場合、変換がサポートされていないためが回避策はありません。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Downcasting</source>
          <target state="translated">ダウン キャスト</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are downcasting, that is, trying to convert an instance of a base type to one of its derived types.</source>
          <target state="translated">ダウン キャスト、つまり、その派生型のいずれかの基本型のインスタンスに変換しようとしています。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In the following example, trying to convert a <ph id="ph1">`Person`</ph> object to a <ph id="ph2">`PersonWithID`</ph> object fails.</source>
          <target state="translated">次の例では、変換を試みて、<ph id="ph1">`Person`</ph>オブジェクトを<ph id="ph2">`PersonWithID`</ph>オブジェクトが失敗します。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>As the example shows, the downcast succeeds only if the <ph id="ph1">`Person`</ph> object was created by an upcast from a <ph id="ph2">`PersonWithId`</ph> object to a <ph id="ph3">`Person`</ph> object, or if the <ph id="ph4">`Person`</ph> object is <ph id="ph5">`null`</ph>.</source>
          <target state="translated">例に示すように、キャストが成功した場合にのみ、<ph id="ph1">`Person`</ph>からアップ キャストによってオブジェクトが作成された、<ph id="ph2">`PersonWithId`</ph>オブジェクトを<ph id="ph3">`Person`</ph>オブジェクト、または、<ph id="ph4">`Person`</ph>オブジェクトが<ph id="ph5">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Conversion from an interface object</source>
          <target state="translated">インターフェイスのオブジェクトからの変換</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are attempting to convert an interface object to a type that  implements that interface, but the target type is not the same type or a base class of the type from which the interface object was originally derived.</source>
          <target state="translated">インターフェイス オブジェクトをそのインターフェイスを実装する型に変換しようとしているが、対象の型は、同じ型またはインターフェイス オブジェクトを派生元と最初の型の基底クラスではありません。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The following example throws an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception when it attempts to convert an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> object  to a <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object.</source>
          <target state="translated">次の例をスロー、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外に変換しようとしたとき、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>オブジェクトを<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The conversion fails because although the <ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> class implements the <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> interface, the <ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph> object is not related to the <ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph> class from which  the interface object was derived.</source>
          <target state="translated">に、変換が失敗したが、<ph id="ph1">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>クラスが実装する、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>インターフェイス、<ph id="ph3">&lt;xref:System.Globalization.DateTimeFormatInfo&gt;</ph>オブジェクトに関係のない、<ph id="ph4">&lt;xref:System.Globalization.CultureInfo&gt;</ph>インターフェイス オブジェクトの派生元クラスです。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>As the exception message indicates, the conversion would succeed only if the interface object is converted back to an instance of the original type, in this case a  <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>.</source>
          <target state="translated">例外としてメッセージを示します、ここでは、インターフェイス オブジェクトが元の型のインスタンスに変換される場合にのみ、変換が成功すると、<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The conversion would also succeed if the interface object is converted to an instance of a base type of the original type.</source>
          <target state="translated">変換は、インターフェイス オブジェクトが元の型の基本型のインスタンスに変換される場合も成功します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>String conversions</source>
          <target state="translated">文字列変換</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You are trying to convert a value or an object to its string representation by using a casting operator in C#.</source>
          <target state="translated">C# でキャスト演算子を使用して、値またはオブジェクトを文字列形式に変換しようとするとします。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>In the following example, both the attempt to cast a <ph id="ph1">&lt;xref:System.Char&gt;</ph> value to a string and the attempt to cast an integer to a string throw an <ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">次の例では、両方しようとしてキャスト、<ph id="ph1">&lt;xref:System.Char&gt;</ph>文字列および文字列 throw を整数にキャストしようとすると、値、<ph id="ph2">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Using the Visual Basic <ph id="ph1">`CStr`</ph> operator to convert a value of a primitive type to a string succeeds.</source>
          <target state="translated">Visual Basic を使用して<ph id="ph1">`CStr`</ph>プリミティブ型の値を文字列に変換する操作は成功します。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The operation does not throw an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception.</source>
          <target state="translated">操作はスローされません、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>例外。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>To successfully covert an instance of any type to its string representation, call its <ph id="ph1">`ToString`</ph> method, as the following example does.</source>
          <target state="translated">任意の型を文字列形式のインスタンスが正常に変換する方法を呼び出す、<ph id="ph1">`ToString`</ph>メソッドでは、次の例としてはします。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>The <ph id="ph1">`ToString`</ph> method is always present, since the <ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph> method is defined by the <ph id="ph3">&lt;xref:System.Object&gt;</ph> class and therefore is either inherited or overridden by all managed types.</source>
          <target state="translated"><ph id="ph1">`ToString`</ph>メソッドが存在し、以降では常に、<ph id="ph2">&lt;xref:System.Object.ToString%2A&gt;</ph>でメソッドが定義されている、<ph id="ph3">&lt;xref:System.Object&gt;</ph>クラスしそのため、継承またはすべてのマネージ型でオーバーライドします。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>Visual Basic 6.0 migration</source>
          <target state="translated">Visual Basic 6.0 の移行</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>You're upgrading a Visual Basic 6.0 application with a call to a custom event in a user control to Visual Basic .NET, and an <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> exception is thrown with the message, "Specified cast is not valid."</source>
          <target state="translated">Visual Basic .net ユーザー コントロールにカスタム イベントの呼び出しで Visual Basic 6.0 アプリケーションをアップグレードして、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>メッセージで例外がスローされます、「指定されたキャストは無効です」</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>To eliminate this exception, change the line of code in your form (such as <ph id="ph1">`Form1`</ph>)</source>
          <target state="translated">この例外をなくすためには、フォーム内のコード行を変更する (など<ph id="ph1">`Form1`</ph>)</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.InvalidCastException">
          <source>and replace it with the following line of code:</source>
          <target state="translated">次のコード行に置き換えます。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" uid="T:System.InvalidCastException">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> property of the new instance to a system-supplied message that describes the error, such as "Cannot cast from source type to destination type."</source>
          <target state="translated">このコンス トラクター、 <ph id="ph1">&lt;xref:System.Exception.Message%2A&gt;</ph> 「にキャストできませんソースの種類から変換先の型」など、エラーを説明するシステム提供のメッセージの新しいインスタンスのプロパティ。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>This message takes into account the current system culture.</source>
          <target state="translated">このメッセージには、現在のシステムのカルチャが考慮されます。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 参照 (Visual Basic の場合は <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor">
          <source>The localized error message string.</source>
          <target state="translated">ローカライズされたエラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The message that describes the error.</source>
          <target state="translated">エラーを説明するメッセージ。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified error message.</source>
          <target state="translated">指定したエラー メッセージを使用して、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>の新しい例外を使用して、プロパティ、<ph id="ph2">`message`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 参照 (Visual Basic の場合は <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The object that holds the serialized object data.</source>
          <target state="translated">シリアル化されたオブジェクト データを保持するオブジェクト。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>The contextual information about the source or destination.</source>
          <target state="translated">転送元または転送先に関するコンテキスト情報。</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with serialized data.</source>
          <target state="translated">シリアル化したデータを使用して、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>This constructor is called during deserialization to reconstitute the exception object transmitted over a stream.</source>
          <target state="translated">このコンストラクターは、逆シリアル化中に、ストリームで送信された例外オブジェクトを再構築するために呼び出されます。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
          <source>For more information, see <bpt id="p1">[</bpt>XML and SOAP Serialization<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>.</source>
          <target state="translated">詳細については、次を参照してください。 <bpt id="p1">[</bpt>XML および SOAP シリアル化<ept id="p1">](~/docs/standard/serialization/xml-and-soap-serialization.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The error message that explains the reason for the exception.</source>
          <target state="translated">例外の原因を説明するエラー メッセージ。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The exception that is the cause of the current exception.</source>
          <target state="translated">現在の例外の原因となった例外。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>If the <bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> parameter is not <ph id="ph1">&lt;see langword="null" /&gt;</ph>, the current exception is raised in a <ph id="ph2">&lt;see langword="catch" /&gt;</ph> block that handles the inner exception.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>innerException<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> でない場合は、内部例外を処理する <ph id="ph2">&lt;see langword="catch" /&gt;</ph> ブロックで現在の例外が発生します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified error message and a reference to the inner exception that is the cause of this exception.</source>
          <target state="translated">指定したエラー メッセージおよびこの例外の原因となった内部例外への参照を使用して、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>An exception that is thrown as a direct result of a previous exception should include a reference to the previous exception in the <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property.</source>
          <target state="translated">前の例外の直接の結果としてスローされる例外については、<ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> プロパティに、前の例外への参照が格納されます。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The <ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property returns the same value that is passed into the constructor, or returns <ph id="ph2">`null`</ph> if the <ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph> property does not supply the inner exception value to the constructor.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Exception.InnerException%2A&gt;</ph>プロパティをコンス トラクターに渡されるかを返す同じ値を返します<ph id="ph2">`null`</ph>場合、<ph id="ph3">&lt;xref:System.Exception.InnerException%2A&gt;</ph>プロパティがコンス トラクターには、内部例外値を指定していません。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The inner exception reference.</source>
          <target state="translated">内部例外の参照。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Exception)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The message that indicates the reason the exception occurred.</source>
          <target state="translated">例外が発生した理由を示すメッセージ。</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The error code (HRESULT) value associated with the exception.</source>
          <target state="translated">この例外に関連付けられているエラー コード (HRESULT) 値。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Initializes a new instance of the <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> class with a specified message and error code.</source>
          <target state="translated">指定したメッセージとエラー コードを使用して、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> クラスの新しいインスタンスを初期化します。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>This constructor initializes the <ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph> property of the new exception using the <ph id="ph2">`message`</ph> parameter.</source>
          <target state="translated">このコンス トラクター、<ph id="ph1">&lt;xref:System.Exception.Message%2A?displayProperty=nameWithType&gt;</ph>の新しい例外を使用して、プロパティ、<ph id="ph2">`message`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The content of <ph id="ph1">`message`</ph> is intended to be understood by humans.</source>
          <target state="translated"><ph id="ph1">`message`</ph> の内容は、ユーザーが理解できる内容にします。</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The caller of this constructor is required to ensure that this string has been localized for the current system culture.</source>
          <target state="translated">このコンストラクターの呼び出し元は、この文字列が現在のシステムのカルチャに合わせてローカライズ済みであることを確認しておく必要があります。</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>This constructor supplies an HRESULT value that is accessible to inheritors of the <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> class, via the protected <ph id="ph2">&lt;xref:System.Exception.HResult%2A&gt;</ph> property of the <ph id="ph3">&lt;xref:System.Exception&gt;</ph> class.</source>
          <target state="translated">このコンス トラクターの継承元にアクセス可能な HRESULT 値を提供する、<ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>経由で、保護対象のクラス<ph id="ph2">&lt;xref:System.Exception.HResult%2A&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Exception&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The following table shows the initial property values for an instance of <ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.InvalidCastException&gt;</ph> のインスタンスの初期プロパティ値を次の表に示します。</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Property</source>
          <target state="translated">プロパティ</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>A null reference (<ph id="ph1">`Nothing`</ph> in Visual Basic).</source>
          <target state="translated">null 参照 (Visual Basic の場合は <ph id="ph1">`Nothing`</ph>)。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.InvalidCastException.#ctor(System.String,System.Int32)">
          <source>The error message string.</source>
          <target state="translated">エラー メッセージ文字列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>