<Type Name="Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;" FullName="System.Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt;">
  <TypeSignature Language="C#" Value="public class Tuple&lt;T1,T2,T3,T4,T5,T6,T7,TRest&gt; : IComparable, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable beforefieldinit Tuple`8&lt;T1, T2, T3, T4, T5, T6, T7, TRest&gt; extends System.Object implements class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.IComparable" />
  <TypeSignature Language="DocId" Value="T:System.Tuple`8" />
  <TypeSignature Language="VB.NET" Value="Public Class Tuple(Of T1, T2, T3, T4, T5, T6, T7, TRest)&#xA;Implements IComparable, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T1, typename T2, typename T3, typename T4, typename T5, typename T6, typename T7, typename TRest&gt;&#xA;public ref class Tuple : IComparable, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T1" />
    <TypeParameter Name="T2" />
    <TypeParameter Name="T3" />
    <TypeParameter Name="T4" />
    <TypeParameter Name="T5" />
    <TypeParameter Name="T6" />
    <TypeParameter Name="T7" />
    <TypeParameter Name="TRest" />
  </TypeParameters>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
  </Interfaces>
  <Docs>
    <typeparam name="T1"><span data-ttu-id="d3682-101">組の 1 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-101">The type of the tuple's first component.</span></span></typeparam>
    <typeparam name="T2"><span data-ttu-id="d3682-102">組の 2 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-102">The type of the tuple's second component.</span></span></typeparam>
    <typeparam name="T3"><span data-ttu-id="d3682-103">組の 3 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-103">The type of the tuple's third component.</span></span></typeparam>
    <typeparam name="T4"><span data-ttu-id="d3682-104">組の 4 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-104">The type of the tuple's fourth component.</span></span></typeparam>
    <typeparam name="T5"><span data-ttu-id="d3682-105">組の 5 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-105">The type of the tuple's fifth component.</span></span></typeparam>
    <typeparam name="T6"><span data-ttu-id="d3682-106">組の 6 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-106">The type of the tuple's sixth component.</span></span></typeparam>
    <typeparam name="T7"><span data-ttu-id="d3682-107">組の 7 番目のコンポーネントの型。</span><span class="sxs-lookup"><span data-stu-id="d3682-107">The type of the tuple's seventh component.</span></span></typeparam>
    <typeparam name="TRest"><span data-ttu-id="d3682-108">組の残りのコンポーネントの型を定義する汎用 <see langword="Tuple" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-108">Any generic <see langword="Tuple" /> object that defines the types of the tuple's remaining components.</span></span></typeparam>
    <summary><span data-ttu-id="d3682-109">*n* 組 (*n* は 8 以上) を表します。</span><span class="sxs-lookup"><span data-stu-id="d3682-109">Represents an *n*-tuple, where *n* is 8 or greater.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-110">組は、特定の数と一連の値を持つデータ構造です。</span><span class="sxs-lookup"><span data-stu-id="d3682-110">A tuple is a data structure that has a specific number and sequence of values.</span></span> <span data-ttu-id="d3682-111"><xref:System.Tuple%608>クラスを表します、 *n*-8 個以上のコンポーネントが含まれる組です。</span><span class="sxs-lookup"><span data-stu-id="d3682-111">The <xref:System.Tuple%608> class represents an *n*-tuple that has eight or more components.</span></span>  
  
 <span data-ttu-id="d3682-112">インスタンス化することができます、 <xref:System.Tuple%608> 、静的なを呼び出すことによって正確に 8 個の要素を持つオブジェクト<xref:System.Tuple.Create%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-112">You can instantiate a <xref:System.Tuple%608> object with exactly eight components by calling the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d3682-113">次の例では、8 組 (組) を含む 20 未満の素数を作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-113">The following example creates an 8-tuple (octuple) that contains prime numbers that are less than 20.</span></span> <span data-ttu-id="d3682-114">各コンポーネントの種類を確認する型の推定を使用することに注意してください。</span><span class="sxs-lookup"><span data-stu-id="d3682-114">Note that it uses type inference to determine the type of each component.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="d3682-115">呼び出して 8 個以上のコンポーネントを持つ n タプル オブジェクトをインスタンス化することもできます、<xref:System.Tuple%608.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-115">You can also instantiate an n-tuple object with eight or more components by calling the <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="d3682-116">次の例では、<xref:System.Tuple%608.%23ctor%2A>コンス トラクターを前の例で作成される組と等価の 8 タプルを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-116">The following example uses the <xref:System.Tuple%608.%23ctor%2A> constructor to create an 8-tuple that is equivalent to the tuple created in the previous example.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
> [!NOTE]
>  <span data-ttu-id="d3682-117">9 つまたは複数のコンポーネントでは、n タプルを作成するに呼び出す必要があります、<xref:System.Tuple%608.%23ctor%2A>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-117">To create an n-tuple with nine or more components, you must call the  <xref:System.Tuple%608.%23ctor%2A> constructor.</span></span> <span data-ttu-id="d3682-118">静的ファクトリ メソッド、<xref:System.Tuple>クラスの作成をサポートしない`Tuple`8 つ以上のコンポーネントを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-118">The static factory methods of the <xref:System.Tuple> class do not support the creation of `Tuple` objects with more than eight components.</span></span>  
  
 <span data-ttu-id="d3682-119">N タプルの 8 個以上のコンポーネントを持つインスタンスを作成する、<xref:System.Tuple%608.%23ctor%2A>コンス トラクター、ジェネリック型を指定する`Tuple`オブジェクトとして、 `rest` 8 ~ を定義するパラメーター *n*組の番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="d3682-119">To instantiate an n-tuple that has eight or more components with the <xref:System.Tuple%608.%23ctor%2A> constructor, you supply a generic `Tuple` object as the `rest` parameter to define the eighth through *n*th components of the tuple.</span></span> <span data-ttu-id="d3682-120">汎用的な入れ子により`Tuple`この方法でオブジェクトをそのコンポーネントの数に実用的な制限がない組を作成することができます。</span><span class="sxs-lookup"><span data-stu-id="d3682-120">By nesting generic `Tuple` objects in this way, you can create a tuple that has no practical limitation on the number of its components.</span></span>  
  
 <span data-ttu-id="d3682-121">次の例では、デトロイト市、ミシガンの国勢 1860 から 2000 の母集団のデータを格納している 17 組を作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-121">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each national census from 1860 to 2000.</span></span> <span data-ttu-id="d3682-122">組の最初のコンポーネントは、市区町村名です。</span><span class="sxs-lookup"><span data-stu-id="d3682-122">The first component of the tuple is the city name.</span></span> <span data-ttu-id="d3682-123">2 番目のコンポーネントは、データ系列の開始日と 3 番目のコンポーネントは、開始日に作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-123">The second component is the start date of the data series, and the third component is the population at the start date.</span></span> <span data-ttu-id="d3682-124">後続の各コンポーネントは、10 年間の間隔で人口を提供します。</span><span class="sxs-lookup"><span data-stu-id="d3682-124">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="d3682-125">17 組が入れ子により作成された、<xref:System.Tuple%603>の内部オブジェクト、<xref:System.Tuple%608>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-125">The 17-tuple is created by nesting a <xref:System.Tuple%603> object inside a <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="d3682-126">(である、<xref:System.Tuple%603>の値として提供されているオブジェクト、`rest`内のパラメーター、<xref:System.Tuple%608>クラスのコンス トラクターです)。これは、<xref:System.Tuple%608>は外部で、さらに、入れ子にされたオブジェクトは、<xref:System.Tuple%608>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-126">(That is, the <xref:System.Tuple%603> object is supplied as the value of the `rest` parameter in the <xref:System.Tuple%608> class constructor.) This <xref:System.Tuple%608> object is, in turn, nested in an outer <xref:System.Tuple%608> object.</span></span> <span data-ttu-id="d3682-127">(である、<xref:System.Tuple%608>の値として提供されているオブジェクト、`rest`外部パラメーター<xref:System.Tuple%608>オブジェクトのクラスのコンス トラクターです)。</span><span class="sxs-lookup"><span data-stu-id="d3682-127">(That is, the <xref:System.Tuple%608> object is supplied as the value of the `rest` parameter in the outer <xref:System.Tuple%608> object's class constructor.)</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 <span data-ttu-id="d3682-128">組の最初の 7 つのコンポーネントの値を取得するには、読み取り専用を使用して<xref:System.Tuple%607.Item1%2A>、 <xref:System.Tuple%607.Item2%2A>、 <xref:System.Tuple%607.Item3%2A>、 <xref:System.Tuple%607.Item4%2A>、 <xref:System.Tuple%607.Item5%2A>、 <xref:System.Tuple%607.Item6%2A>、および<xref:System.Tuple%607.Item7%2A>インスタンス プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-128">You can retrieve the value of the tuple's first seven components by using the read-only <xref:System.Tuple%607.Item1%2A>, <xref:System.Tuple%607.Item2%2A>, <xref:System.Tuple%607.Item3%2A>, <xref:System.Tuple%607.Item4%2A>, <xref:System.Tuple%607.Item5%2A>, <xref:System.Tuple%607.Item6%2A>, and <xref:System.Tuple%607.Item7%2A> instance properties.</span></span> <span data-ttu-id="d3682-129">その他のコンポーネントが入れ子になっておよびから取得できる、<xref:System.Tuple%608.Rest%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-129">Any additional components are nested and can be retrieved from the <xref:System.Tuple%608.Rest%2A> property.</span></span> <span data-ttu-id="d3682-130">前の例で、<xref:System.Tuple%608.Item1%2A>を通じて<xref:System.Tuple%608.Item7%2A>プロパティは、最初の組の 7 番目のコンポーネントからを取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-130">In the previous example, the <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties retrieve the first through seventh components of the tuple.</span></span> <span data-ttu-id="d3682-131">8 ~ 14 番目のコンポーネントが 2 番目のレベルで入れ子になっている組に含まれ、によって表される、`Rest.Item1`を通じて`Rest.Item7`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-131">The eighth through fourteenth components are contained in the tuple that is nested at the second level, and are represented by the `Rest.Item1` through `Rest.Item7` properties.</span></span> <span data-ttu-id="d3682-132">15 番目までの 17 番目のコンポーネントが 3 番目のレベルで入れ子になっている組に含まれ、によって表される、`Rest.Rest.Item1`も`Rest.Rest.Item3`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-132">The fifteenth through seventeenth components are contained in the tuple that is nested at the third level, and are represented by the `Rest.Rest.Item1` though `Rest.Rest.Item3` properties.</span></span>  
  
 <span data-ttu-id="d3682-133">組は、4 つの方法でよく使用されます。</span><span class="sxs-lookup"><span data-stu-id="d3682-133">Tuples are commonly used in four different ways:</span></span>  
  
-   <span data-ttu-id="d3682-134">単一のデータのセットを表します。</span><span class="sxs-lookup"><span data-stu-id="d3682-134">To represent a single set of data.</span></span> <span data-ttu-id="d3682-135">たとえば、組は、データベースのレコードを表すことができ、そのコンポーネントは、レコードの個別のフィールドを表すことができます。</span><span class="sxs-lookup"><span data-stu-id="d3682-135">For example, a tuple can represent a database record, and its components can represent individual fields of the record.</span></span>  
  
-   <span data-ttu-id="d3682-136">簡単にアクセスしたり、操作、データ セットを提供します。</span><span class="sxs-lookup"><span data-stu-id="d3682-136">To provide easy access to, and manipulation of, a data set.</span></span>  
  
-   <span data-ttu-id="d3682-137">使用せず、メソッドから複数の値を返す`out`パラメーター (c#) または`ByRef`パラメーター (Visual Basic の場合)。</span><span class="sxs-lookup"><span data-stu-id="d3682-137">To return multiple values from a method without the use of `out` parameters (in C#) or `ByRef` parameters (in Visual Basic).</span></span> <span data-ttu-id="d3682-138">たとえば、前の例を返します、計算された統計情報を市区町村名と共に、<xref:System.Tuple%607>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-138">For example, the previous example returns its computed statistics, along with the city name, in a <xref:System.Tuple%607> object.</span></span>  
  
-   <span data-ttu-id="d3682-139">メソッドに渡される複数の値、1 つのパラメーターを使用します。</span><span class="sxs-lookup"><span data-stu-id="d3682-139">To pass multiple values to a method through a single parameter.</span></span> <span data-ttu-id="d3682-140">たとえば、<xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType>メソッドには、スレッドが起動時に実行される方法を 1 つの値を提供できる 1 つのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-140">For example, the <xref:System.Threading.Thread.Start%28System.Object%29?displayProperty=nameWithType> method has a single parameter that lets you supply one value to the method that the thread executes at startup.</span></span> <span data-ttu-id="d3682-141">指定した場合、<xref:System.Tuple%607>オブジェクト、メソッド引数として、データの 7 つの項目を含む、スレッドのスタートアップ ルーチンを指定することができます。</span><span class="sxs-lookup"><span data-stu-id="d3682-141">If you supply a <xref:System.Tuple%607> object as the method argument, you can supply the thread’s startup routine with seven items of data.</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Tuple" />
    <altmember cref="T:System.Tuple`1" />
    <altmember cref="T:System.Tuple`2" />
    <altmember cref="T:System.Tuple`3" />
    <altmember cref="T:System.Tuple`4" />
    <altmember cref="T:System.Tuple`5" />
    <altmember cref="T:System.Tuple`6" />
    <altmember cref="T:System.Tuple`7" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public Tuple (T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(!T1 item1, !T2 item2, !T3 item3, !T4 item4, !T5 item5, !T6 item6, !T7 item7, !TRest rest) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (item1 As T1, item2 As T2, item3 As T3, item4 As T4, item5 As T5, item6 As T6, item7 As T7, rest As TRest)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; Tuple(T1 item1, T2 item2, T3 item3, T4 item4, T5 item5, T6 item6, T7 item7, TRest rest);" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="item1" Type="T1" />
        <Parameter Name="item2" Type="T2" />
        <Parameter Name="item3" Type="T3" />
        <Parameter Name="item4" Type="T4" />
        <Parameter Name="item5" Type="T5" />
        <Parameter Name="item6" Type="T6" />
        <Parameter Name="item7" Type="T7" />
        <Parameter Name="rest" Type="TRest" />
      </Parameters>
      <Docs>
        <param name="item1"><span data-ttu-id="d3682-142">組の 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-142">The value of the tuple's first component.</span></span></param>
        <param name="item2"><span data-ttu-id="d3682-143">組の 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-143">The value of the tuple's second component.</span></span></param>
        <param name="item3"><span data-ttu-id="d3682-144">組の 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-144">The value of the tuple's third component.</span></span></param>
        <param name="item4"><span data-ttu-id="d3682-145">組の 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-145">The value of the tuple's fourth component</span></span></param>
        <param name="item5"><span data-ttu-id="d3682-146">組の 5 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-146">The value of the tuple's fifth component.</span></span></param>
        <param name="item6"><span data-ttu-id="d3682-147">組の 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-147">The value of the tuple's sixth component.</span></span></param>
        <param name="item7"><span data-ttu-id="d3682-148">組の 7 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-148">The value of the tuple's seventh component.</span></span></param>
        <param name="rest"><span data-ttu-id="d3682-149">組の残りのコンポーネントの値を格納する汎用 <see langword="Tuple" /> オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-149">Any generic <see langword="Tuple" /> object that contains the values of the tuple's remaining components.</span></span></param>
        <summary><span data-ttu-id="d3682-150"><see cref="T:System.Tuple`8" /> クラスの新しいインスタンスを初期化します。</span><span class="sxs-lookup"><span data-stu-id="d3682-150">Initializes a new instance of the <see cref="T:System.Tuple`8" /> class.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-151">静的なを使用することもできます。<xref:System.Tuple.Create%2A?displayProperty=nameWithType>メソッドを明示的にそのコンポーネントの種類を指定せずに、8 組 (組) オブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="d3682-151">You can also use the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple (octuple) object without having to explicitly specify the types of its components.</span></span> <span data-ttu-id="d3682-152">次の例では、 <xref:System.Tuple.Create%2A?displayProperty=nameWithType> 20 未満の素数を格納している 8 タプル オブジェクトをインスタンス化するメソッド。</span><span class="sxs-lookup"><span data-stu-id="d3682-152">The following example uses the <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method to instantiate an 8-tuple object that contains prime numbers that are less than 20.</span></span>  
  
 [!code-csharp[System.Tuple.Create#17](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/createntuple.cs#17)]
 [!code-vb[System.Tuple.Create#17](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/createntuple.vb#17)]  
  
 <span data-ttu-id="d3682-153">これは、次の呼び出しに、<xref:System.Tuple%607.%23ctor%2A>クラスのコンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-153">This is equivalent to the following call to the <xref:System.Tuple%607.%23ctor%2A> class constructor.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Class#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.class/cs/octuple1.cs#1)]
 [!code-vb[System.Tuple\`8.Class#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.class/vb/octuple1.vb#1)]  
  
 <span data-ttu-id="d3682-154">ただし、静的な<xref:System.Tuple.Create%2A?displayProperty=nameWithType>8 つ以上のコンポーネントと組オブジェクトを作成する方法を使用できません。</span><span class="sxs-lookup"><span data-stu-id="d3682-154">However, the static <xref:System.Tuple.Create%2A?displayProperty=nameWithType> method cannot be used to create a tuple object with more than eight components.</span></span>  
  
 <span data-ttu-id="d3682-155">使用する場合、 <xref:System.Tuple%608.%23ctor%2A> 8 個以上のコンポーネント、n タプルを作成するコンス トラクターを使用する、`rest`からを作成する、入れ子になった n 組を持つ 7 つのコンポーネントを 1 つのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-155">When using the <xref:System.Tuple%608.%23ctor%2A> constructor to create an n-tuple with eight or more components, you use the `rest` parameter to create a nested n-tuple that has from one to seven components.</span></span> <span data-ttu-id="d3682-156">連続するレベルの入れ子を使用すると、コンポーネントの実質的に無制限の数を持つ n タプルを作成できます。</span><span class="sxs-lookup"><span data-stu-id="d3682-156">By using successive levels of nesting, you can create an n-tuple that has a virtually unlimited number of components.</span></span> <span data-ttu-id="d3682-157">たとえば、25 タプルを作成するには、インスタンス化する、<xref:System.Tuple%608>次のように、入れ子の 3 つのレベルを持つオブジェクトします。</span><span class="sxs-lookup"><span data-stu-id="d3682-157">For example, to create a 25-tuple, you instantiate a <xref:System.Tuple%608> object with three levels of nesting, as follows:</span></span>  
  
-   <span data-ttu-id="d3682-158">最も外側<xref:System.Tuple%608>オブジェクトには、最初 7 番目のコンポーネントを通じてにはが含まれています。</span><span class="sxs-lookup"><span data-stu-id="d3682-158">The outermost <xref:System.Tuple%608> object contains the first through seventh components.</span></span> <span data-ttu-id="d3682-159">その<xref:System.Tuple%608.Rest%2A>プロパティへのアクセスを提供する、<xref:System.Tuple%608>入れ子の最初のレベルにあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-159">Its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the first level of nesting.</span></span>  
  
-   <span data-ttu-id="d3682-160">最も外側にある、入れ子になった<xref:System.Tuple%608>オブジェクトには、8 ~ 14 番目のコンポーネントが含まれています。 およびその<xref:System.Tuple%608.Rest%2A>プロパティへのアクセスを提供する、 <xref:System.Tuple%608> 2 つ目の入れ子のレベルにあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-160">The outermost nested <xref:System.Tuple%608> object contains the eighth through fourteenth components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%608> object at the second level of nesting.</span></span>  
  
-   <span data-ttu-id="d3682-161"><xref:System.Tuple%608>入れ子の 2 番目のレベルのオブジェクトには、15 ~ 21 コンポーネントが含まれています。 およびその<xref:System.Tuple%608.Rest%2A>プロパティへのアクセスを提供する、 <xref:System.Tuple%604> 3 つ目の入れ子のレベルにあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-161">The <xref:System.Tuple%608> object at the second level of nesting contains the fifteenth through twenty-first  components, and its <xref:System.Tuple%608.Rest%2A> property provides access to an <xref:System.Tuple%604> object at the third level of nesting.</span></span>  
  
-   <span data-ttu-id="d3682-162">最も内側の組は、<xref:System.Tuple%604>約 20 秒から 25 個目のコンポーネントを含むオブジェクトです。</span><span class="sxs-lookup"><span data-stu-id="d3682-162">The innermost tuple is a <xref:System.Tuple%604> object that contains the twenty-second through twenty-fifth components.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-163">次の例では、市区町村デトロイトのミシガン、各年の国勢調査 1860 から 2000年への母集団のデータを格納している 17 組を作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-163">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, for each census from 1860 to 2000.</span></span> <span data-ttu-id="d3682-164">組の最初のコンポーネントは、市区町村名です。</span><span class="sxs-lookup"><span data-stu-id="d3682-164">The first component of the tuple is the city name.</span></span> <span data-ttu-id="d3682-165">2 番目のコンポーネントは、データの系列の開始日と 3 番目のコンポーネントは、開始日に作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-165">The second component is the start date of the series of data, and the third component is the population at the start date.</span></span> <span data-ttu-id="d3682-166">後続の各コンポーネントは、10 年間の間隔で人口を提供します。</span><span class="sxs-lookup"><span data-stu-id="d3682-166">Each subsequent component provides the population at decade intervals.</span></span> <span data-ttu-id="d3682-167">例では、入れ子の 2 つのレイヤーを使用して、17 組を作成しますが 3 番目の 7 番目のコンポーネントからデータが含まれます population 1900 年から 1860、入れ子になった 7 タプル、1970 年を通じて 1910 の母集団のデータを含む 7 組を定義すると、3 つ組が内部に入れ子になった。カタログの作成データを格納します。</span><span class="sxs-lookup"><span data-stu-id="d3682-167">The example uses two layers of nesting to create the 17-tuple: It defines a 7-tuple whose third through seventh components contain population data for 1860 through 1900, a nested 7-tuple that contains population data for 1910 through 1970, and an inner nested 3-tuple that contains population data for 1980 through 2000.</span></span>  
  
 [!code-csharp[System.Tuple.Create#19](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple.create/cs/example.cs#19)]
 [!code-vb[System.Tuple.Create#19](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple.create/vb/example.vb#19)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3682-168"><paramref name="rest" /> がジェネリック <see langword="Tuple" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="d3682-168"><paramref name="rest" /> is not a generic <see langword="Tuple" /> object.</span></span></exception>
        <altmember cref="M:System.Tuple.Create``8(``0,``1,``2,``3,``4,``5,``6,``7)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3682-169">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-169">The object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="d3682-170">現在の <see cref="T:System.Tuple`8" /> オブジェクトが、指定されたオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d3682-170">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="d3682-171">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3682-171"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-172">`obj`パラメーターは、次の条件を満たしている場合に、現在のインスタンスと等しくなりますと見なされます。</span><span class="sxs-lookup"><span data-stu-id="d3682-172">The `obj` parameter is considered to be equal to the current instance if it meets all the following conditions:</span></span>  
  
-   <span data-ttu-id="d3682-173"><xref:System.Tuple%608>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-173">It is a <xref:System.Tuple%608> object.</span></span>  
  
-   <span data-ttu-id="d3682-174">現在のインスタンスと同じ種類のコンポーネントの同じの合計数があります。</span><span class="sxs-lookup"><span data-stu-id="d3682-174">It has the same total number of components that are of the same types as the current instance.</span></span>  
  
-   <span data-ttu-id="d3682-175">(その入れ子になったコンポーネントを含む) のコンポーネントが現在のインスタンスと同じです。</span><span class="sxs-lookup"><span data-stu-id="d3682-175">Its components (including its nested components) are equal to those of the current instance.</span></span> <span data-ttu-id="d3682-176">等しいかどうかは、各コンポーネントの既定の等値比較子によって決定されます。</span><span class="sxs-lookup"><span data-stu-id="d3682-176">Equality is determined by the default equality comparer for each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-177">次の例では、5 つを定義します<xref:System.Tuple%608>素数を格納するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-177">The following example defines five <xref:System.Tuple%608> objects that contain prime numbers.</span></span> <span data-ttu-id="d3682-178">残りのオブジェクトの各に最初のオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="d3682-178">It then compares the first object with each of the remaining objects.</span></span> <span data-ttu-id="d3682-179">最初と最後の出力に示す<xref:System.Tuple%608>オブジェクトは、同じ値を持つコンポーネントの同じ数値があるためです。</span><span class="sxs-lookup"><span data-stu-id="d3682-179">As the output shows, only the first and the last <xref:System.Tuple%608> objects are equal, because they have an identical number of components with identical values.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.equals/cs/equals1.cs#1)]
 [!code-vb[System.Tuple\`8.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.equals/vb/equals1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3682-180">現在の <see cref="T:System.Tuple`8" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="d3682-180">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object.</span></span></summary>
        <returns><span data-ttu-id="d3682-181">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="d3682-181">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Item1">
      <MemberSignature Language="C#" Value="public T1 Item1 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T1 Item1" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item1" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item1 As T1" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T1 Item1 { T1 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T1</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-182">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 1 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-182">Gets the value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></summary>
        <value><span data-ttu-id="d3682-183">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 1 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-183">The value of the current <see cref="T:System.Tuple`8" /> object's first component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-184">型を動的に決定することができます、<xref:System.Tuple%608.Item1%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-184">You can dynamically determine the type of the <xref:System.Tuple%608.Item1%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-185">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item1%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-185">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item1%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-186">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、および、によって返される配列から最初の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-186">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the first element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-187">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-187">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-188">17 組の最初のコンポーネントは、市区町村名です。</span><span class="sxs-lookup"><span data-stu-id="d3682-188">The first component of the 17-tuple is the city name.</span></span> <span data-ttu-id="d3682-189">この例では、<xref:System.Tuple%608.Item1%2A>母集団のデータを表示する前にテーブル ヘッダーに都市名を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-189">The example uses the <xref:System.Tuple%608.Item1%2A> property to display the city name in the table header before displaying the population data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item2">
      <MemberSignature Language="C#" Value="public T2 Item2 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T2 Item2" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item2" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item2 As T2" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T2 Item2 { T2 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T2</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-190">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 2 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-190">Gets the value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></summary>
        <value><span data-ttu-id="d3682-191">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 2 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-191">The value of the current <see cref="T:System.Tuple`8" /> object's second component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-192">型を動的に決定することができます、<xref:System.Tuple%608.Item2%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-192">You can dynamically determine the type of the <xref:System.Tuple%608.Item2%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-193">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item2%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-193">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item2%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-194">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、およびによって返される配列から 2 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-194">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the second element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-195">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-195">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-196">17 タプルの 2 番目のコンポーネントは、データ系列の最初の年です。</span><span class="sxs-lookup"><span data-stu-id="d3682-196">The second component of the 17-tuple is the first year of the data series.</span></span> <span data-ttu-id="d3682-197">例の値を割り当てて、<xref:System.Tuple%608.Item2%2A>変数、および、使用のデータが表示される年を表すその変数のプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-197">The example assigns the value of the <xref:System.Tuple%608.Item2%2A> property to a variable, and then uses that variable to represent the year whose data is displayed.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item3">
      <MemberSignature Language="C#" Value="public T3 Item3 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T3 Item3" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item3" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item3 As T3" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T3 Item3 { T3 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T3</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-198">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 3 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-198">Gets the value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></summary>
        <value><span data-ttu-id="d3682-199">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 3 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-199">The value of the current <see cref="T:System.Tuple`8" /> object's third component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-200">型を動的に決定することができます、<xref:System.Tuple%608.Item3%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-200">You can dynamically determine the type of the <xref:System.Tuple%608.Item3%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-201">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item3%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-201">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item3%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-202">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、およびによって返される配列から 3 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-202">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the third element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-203">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-203">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-204">17 タプルの 3 番目のコンポーネントは、1860 の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-204">The third component of the 17-tuple is the population in 1860.</span></span> <span data-ttu-id="d3682-205">この例では、 <xref:System.Tuple%608.Item3%2A> population の変更の 1860 と 1870 間の年間の割合を計算する人口の値を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-205">The example uses the <xref:System.Tuple%608.Item3%2A> property to display the population value and to calculate the annual rate of population change between 1860 and 1870.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item4">
      <MemberSignature Language="C#" Value="public T4 Item4 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T4 Item4" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item4" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item4 As T4" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T4 Item4 { T4 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T4</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-206">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 4 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-206">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></summary>
        <value><span data-ttu-id="d3682-207">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 4 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-207">The value of the current <see cref="T:System.Tuple`8" /> object's fourth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-208">型を動的に決定することができます、<xref:System.Tuple%608.Item4%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-208">You can dynamically determine the type of the <xref:System.Tuple%608.Item4%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-209">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item4%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-209">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item4%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-210">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、およびによって返される配列から 4 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-210">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fourth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-211">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-211">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-212">17 タプルの 4 番目のコンポーネントは、1870 の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-212">The fourth component of the 17-tuple is the population in 1870.</span></span> <span data-ttu-id="d3682-213">この例では、 <xref:System.Tuple%608.Item4%2A> population の変更の 1870 と 1880 間の年間の割合を計算する人口の値を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-213">The example uses the <xref:System.Tuple%608.Item4%2A> property to display the population value and to calculate the annual rate of population change between 1870 and 1880.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item5">
      <MemberSignature Language="C#" Value="public T5 Item5 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T5 Item5" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item5" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item5 As T5" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T5 Item5 { T5 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T5</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-214">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 5 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-214">Gets the value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></summary>
        <value><span data-ttu-id="d3682-215">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 5 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-215">The value of the current <see cref="T:System.Tuple`8" /> object's fifth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-216">型を動的に決定することができます、<xref:System.Tuple%608.Item5%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-216">You can dynamically determine the type of the <xref:System.Tuple%608.Item5%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-217">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item5%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-217">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item5%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-218">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、および、によって返される配列から 5 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-218">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the fifth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-219">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-219">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-220">17 タプルの 5 番目のコンポーネントは、1880 年の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-220">The fifth component of the 17-tuple is the population in 1880.</span></span> <span data-ttu-id="d3682-221">この例では、 <xref:System.Tuple%608.Item5%2A> population の変更の 1880 と 1890 間の年間の割合を計算する人口の値を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-221">The example uses the <xref:System.Tuple%608.Item5%2A> property to display the population value and to calculate the annual rate of population change between 1880 and 1890.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item6">
      <MemberSignature Language="C#" Value="public T6 Item6 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T6 Item6" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item6" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item6 As T6" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T6 Item6 { T6 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T6</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-222">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 6 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-222">Gets the value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></summary>
        <value><span data-ttu-id="d3682-223">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 6 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-223">The value of the current <see cref="T:System.Tuple`8" /> object's sixth component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-224">型を動的に決定することができます、<xref:System.Tuple%608.Item6%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-224">You can dynamically determine the type of the <xref:System.Tuple%608.Item6%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-225">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item6%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-225">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item6%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-226">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、および、によって返される配列から 6 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-226">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the sixth element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-227">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-227">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-228">17 タプルの 6 番目のコンポーネントは、1890 の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-228">The sixth component of the 17-tuple is the population in 1890.</span></span> <span data-ttu-id="d3682-229">この例では、 <xref:System.Tuple%608.Item6%2A> population の変更の 1900 と 1890 間の年間の割合を計算する人口の値を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-229">The example uses the <xref:System.Tuple%608.Item6%2A> property to display the population value and to calculate the annual rate of population change between 1890 and 1900.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Item7">
      <MemberSignature Language="C#" Value="public T7 Item7 { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !T7 Item7" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Item7" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Item7 As T7" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property T7 Item7 { T7 get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T7</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-230">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 7 番目のコンポーネントの値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-230">Gets the value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></summary>
        <value><span data-ttu-id="d3682-231">現在の <see cref="T:System.Tuple`8" /> オブジェクトの 7 番目のコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-231">The value of the current <see cref="T:System.Tuple`8" /> object's seventh component.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-232">型を動的に決定することができます、<xref:System.Tuple%608.Item7%2A>コンポーネントを 2 つの方法のいずれかで。</span><span class="sxs-lookup"><span data-stu-id="d3682-232">You can dynamically determine the type of the <xref:System.Tuple%608.Item7%2A> component in one of two ways:</span></span>  
  
-   <span data-ttu-id="d3682-233">呼び出して、`GetType`メソッドによって返される値を<xref:System.Tuple%608.Item7%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-233">By calling the `GetType` method on the value that is returned by the <xref:System.Tuple%608.Item7%2A> property.</span></span>  
  
-   <span data-ttu-id="d3682-234">取得することによって、<xref:System.Type>を表すオブジェクト、<xref:System.Tuple%608>オブジェクト、および、によって返される配列から 7 番目の要素を取得するその<xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-234">By retrieving the <xref:System.Type> object that represents the <xref:System.Tuple%608> object, and retrieving the seventh element from the array that is returned by its <xref:System.Type.GetGenericArguments%2A?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-235">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-235">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-236">17 タプルの 7 番目のコンポーネントは、1900 年の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-236">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="d3682-237">この例では、 <xref:System.Tuple%608.Item7%2A> population の変更の 1900 と 1910 間の年間の割合を計算する人口の値を表示するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-237">The example uses the <xref:System.Tuple%608.Item7%2A> property to display the population value and to calculate the annual rate of population change between 1900 and 1910.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="Rest">
      <MemberSignature Language="C#" Value="public TRest Rest { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance !TRest Rest" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.Rest" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rest As TRest" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property TRest Rest { TRest get(); };" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TRest</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-238">現在の <see cref="T:System.Tuple`8" /> オブジェクトの残りのコンポーネントを取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-238">Gets the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></summary>
        <value><span data-ttu-id="d3682-239">現在の <see cref="T:System.Tuple`8" /> オブジェクトの残りのコンポーネントの値。</span><span class="sxs-lookup"><span data-stu-id="d3682-239">The value of the current <see cref="T:System.Tuple`8" /> object's remaining components.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-240"><xref:System.Tuple%608.Rest%2A>プロパティを返します、入れ子になった`Tuple`ただし 8 へのアクセスは許可されているオブジェクト*n*組の番目のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="d3682-240">The <xref:System.Tuple%608.Rest%2A> property returns a nested `Tuple` object that allows access to the eighth though *n*th components of the tuple.</span></span> <span data-ttu-id="d3682-241">に、組内のコンポーネントの合計数によっては 8 ~ 14 番目のコンポーネントの値を取得できる、入れ子になったから`Tuple`オブジェクトの<xref:System.Tuple%608.Item1%2A>を通じて<xref:System.Tuple%608.Item7%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-241">Depending on the total number of components in the tuple, the values of the eighth through fourteenth components can be retrieved from the nested `Tuple` object's <xref:System.Tuple%608.Item1%2A> through <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="d3682-242">使用してできます、 <xref:System.Tuple%608.Rest%2A> 、入れ子になったのプロパティ<xref:System.Tuple%608>を取得するオブジェクト、 `Tuple` [次へ] の入れ子のレベルにあるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-242">You can then use the <xref:System.Tuple%608.Rest%2A> property of a nested <xref:System.Tuple%608> object to retrieve the `Tuple` object at the next level of nesting.</span></span>  
  
 <span data-ttu-id="d3682-243">入れ子になったコンポーネントの数は、動的に決定する`Tuple`によって返されるオブジェクト、<xref:System.Tuple%608.Rest%2A>桁をその型の名前から抽出してプロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-243">You can dynamically determine the number of components in a nested `Tuple` object that is returned by the <xref:System.Tuple%608.Rest%2A> property by extracting the digit from its type name.</span></span> <span data-ttu-id="d3682-244">具体的な例を次に示します。</span><span class="sxs-lookup"><span data-stu-id="d3682-244">The following example provides an illustration.</span></span>  
  
 [!code-vb[System.Tuple\`8.Item1#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/rest.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="d3682-245">次の例では、デトロイト市、ミシガン、2000 1860 からの母集団のデータを格納している 17 組オブジェクトを作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-245">The following example creates a 17-tuple object that contains population data for the city of Detroit, Michigan, from 1860 to 2000.</span></span> <span data-ttu-id="d3682-246">17 タプルの 7 番目のコンポーネントは、1900 年の人口です。</span><span class="sxs-lookup"><span data-stu-id="d3682-246">The seventh component of the 17-tuple is the population in 1900.</span></span> <span data-ttu-id="d3682-247">この例では、 <xref:System.Tuple%608.Rest%2A> 14 番目のコンポーネントとそのを通じて 8 番目の値を取得するプロパティを使用して、<xref:System.Tuple%608.Rest%2A>の入れ子になったプロパティ<xref:System.Tuple%608>残りの要素の値を取得するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-247">The example uses the <xref:System.Tuple%608.Rest%2A> property to retrieve the values of the eighth through fourteenth components, and it uses the <xref:System.Tuple%608.Rest%2A> property of the nested <xref:System.Tuple%608> object to retrieve the values of the remaining components.</span></span>  
  
 [!code-csharp[System.Tuple\`8.Item1#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.item1/cs/item1.cs#1)]
 [!code-vb[System.Tuple\`8.Item1#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.item1/vb/item1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d3682-248">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-248">An object to compare with the current instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="d3682-249">比較用のカスタムの規則を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-249">An object that provides custom rules for comparison.</span></span></param>
        <summary><span data-ttu-id="d3682-250">指定された比較子を使用して現在の <see cref="T:System.Tuple`8" /> オブジェクトと指定されたオブジェクトを比較し、並べ替え順序において、現在のオブジェクトの位置が指定されたオブジェクトの前になるか、後ろになるか、同じになるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="d3682-250">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object by using a specified comparer and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="d3682-251">並べ替え順序における、このインスタンスと <paramref name="other" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="d3682-251">A signed integer that indicates the relative position of this instance and <paramref name="other" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="d3682-252"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="d3682-252"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="d3682-253"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="d3682-253"></term><description> Description</span></span>  
  
 <span data-ttu-id="d3682-254"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="d3682-254"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="d3682-255"></term><description> このインスタンスの位置が <paramref name="other" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="d3682-255"></term><description> This instance precedes <paramref name="other" />.</span></span>  
  
 <span data-ttu-id="d3682-256"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="d3682-256"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d3682-257"></term><description> このインスタンスと <paramref name="other" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="d3682-257"></term><description> This instance and <paramref name="other" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="d3682-258"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="d3682-258"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="d3682-259"></term><description> このインスタンスの位置は <paramref name="other" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="d3682-259"></term><description> This instance follows <paramref name="other" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-260">このメンバーは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-260">This member is an explicit interface implementation.</span></span> <span data-ttu-id="d3682-261">これは、<xref:System.Tuple%608> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d3682-261">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 <span data-ttu-id="d3682-262">このメソッドでは、カスタマイズした比較を定義できます。<xref:System.Tuple%608>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-262">This method lets you define customized comparisons of <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="d3682-263">たとえば、順序に、このメソッドを使用することができます<xref:System.Tuple%608>オブジェクトが特定のコンポーネントの値に基づきます。</span><span class="sxs-lookup"><span data-stu-id="d3682-263">For example, you can use this method to order <xref:System.Tuple%608> objects based on the value of a specific component.</span></span>  
  
 <span data-ttu-id="d3682-264">コレクションを並べ替えることによって最もよく呼び出されますが、このメソッドは、直接呼び出すことができるなどのメソッドを<xref:System.Collections.IComparer>パラメーター コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="d3682-264">Although this method can be called directly, it is most commonly called by collection-sorting methods that include <xref:System.Collections.IComparer> parameters to order the members of a collection.</span></span> <span data-ttu-id="d3682-265">たとえば、メソッドによって呼び出されます、<xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType>メソッドおよび<xref:System.Collections.SortedList.Add%2A>のメソッド、<xref:System.Collections.SortedList>を使用してインスタンス化されるオブジェクト、<xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType>コンス トラクターです。</span><span class="sxs-lookup"><span data-stu-id="d3682-265">For example, it is called by the <xref:System.Array.Sort%28System.Array%2CSystem.Collections.IComparer%29?displayProperty=nameWithType> method and the <xref:System.Collections.SortedList.Add%2A> method of a <xref:System.Collections.SortedList> object that is instantiated by using the <xref:System.Collections.SortedList.%23ctor%28System.Collections.IComparer%29?displayProperty=nameWithType> constructor.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d3682-266"><xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-266">The <xref:System.Tuple%608.System%23Collections%23IStructuralComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="d3682-267">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d3682-267">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="d3682-268">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-268">To determine whether two objects are equal, call the <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%2A> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-269">次の例の配列を作成する<xref:System.Tuple%608>4 米国の都市 1940年から 2000年の人口データが含まれているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-269">The following example creates an array of <xref:System.Tuple%608> objects that contains population data for four U.S. cities from 1940 to 2000.</span></span> <span data-ttu-id="d3682-270">組の最初のコンポーネントは、市区町村名です。</span><span class="sxs-lookup"><span data-stu-id="d3682-270">The octuple's first component is the city name.</span></span> <span data-ttu-id="d3682-271">残りの 6 つのコンポーネントでは、1940年から 2000年までの 10 年間の間隔で人口を表します。</span><span class="sxs-lookup"><span data-stu-id="d3682-271">The remaining six components represent the population at 10-year intervals from 1940 to 2000.</span></span>  
  
 <span data-ttu-id="d3682-272">`PopulationComparer`クラスを提供する<xref:System.Collections.IComparer>により、そのコンポーネントのいずれかでソートするには、構成される組の配列を実装します。</span><span class="sxs-lookup"><span data-stu-id="d3682-272">The `PopulationComparer` class provides an <xref:System.Collections.IComparer> implementation that allows the array of octuples to be sorted by any one of its components.</span></span> <span data-ttu-id="d3682-273">2 つの値が用意されて、`PopulationComparer`コンス トラクター内のクラス: 並べ替え順序を定義するコンポーネントの位置と<xref:System.Boolean>組オブジェクトを昇順または降順で並べ替える必要があるかどうかを示す値。</span><span class="sxs-lookup"><span data-stu-id="d3682-273">Two values are provided to the `PopulationComparer` class in its constructor: The position of the component that defines the sort order, and a <xref:System.Boolean> value that indicates whether the tuple objects should be sorted in ascending or descending order.</span></span>  
  
 <span data-ttu-id="d3682-274">例では、し、並べ替えられていない順序で配列の要素が表示されます、3 番目のコンポーネント (1950 年カタログ作成) で並べ替えてと、それらを表示し、8 番目のコンポーネント (2000年のカタログ作成) で並べ替えてして表示にします。</span><span class="sxs-lookup"><span data-stu-id="d3682-274">The example then displays the elements in the array in unsorted order, sorts them by the third component (the population in 1950) and displays them, and then sorts them by the eighth component (the population in 2000) and displays them.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto2.cs#2)]
 [!code-vb[System.Tuple\`8.CompareTo#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3682-275"><paramref name="other" /> は <see cref="T:System.Tuple`8" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="d3682-275"><paramref name="other" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="d3682-276">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-276">The object to compare with this instance.</span></span></param>
        <param name="comparer"><span data-ttu-id="d3682-277">2 つのオブジェクトが等しいかどうかの評価に使用するメソッドを定義するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-277">An object that defines the method to use to evaluate whether the two objects are equal.</span></span></param>
        <summary><span data-ttu-id="d3682-278">指定された比較メソッドに基づいて、現在の <see cref="T:System.Tuple`8" /> オブジェクトが指定したオブジェクトと等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="d3682-278">Returns a value that indicates whether the current <see cref="T:System.Tuple`8" /> object is equal to a specified object based on a specified comparison method.</span></span></summary>
        <returns>
          <span data-ttu-id="d3682-279">現在のインスタンスが指定したオブジェクトと等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="d3682-279"><see langword="true" /> if the current instance is equal to the specified object; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-280">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-280">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3682-281">これは、<xref:System.Tuple%608> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d3682-281">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="d3682-282"><xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装が呼び出される場合にのみ`other`は`null`、キャスト (c#) またはに (Visual Basic) の変換が正常にすることができるかどうかと、<xref:System.Tuple%608>コンポーネントの合計数が同じオブジェクト (に含めて入れ子になった`Tuple`オブジェクト)、現在のインスタンスと同じ型のです。</span><span class="sxs-lookup"><span data-stu-id="d3682-282">The <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation is called only if `other` is not `null`, and if it can be successfully cast (in C#) or converted (in Visual Basic) to a <xref:System.Tuple%608> object that has the same total number of components (including those in nested `Tuple` objects) of the same types as the current instance.</span></span> <span data-ttu-id="d3682-283"><xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29>メソッドの最初のパス、<xref:System.Tuple%608.Item1%2A>の値、<xref:System.Tuple%608>と比較するオブジェクト、<xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="d3682-283">The <xref:System.Tuple%608.System%23Collections%23IStructuralEquatable%23Equals%28System.Object%2CSystem.Collections.IEqualityComparer%29> method first passes the <xref:System.Tuple%608.Item1%2A> values of the <xref:System.Tuple%608> objects to be compared to the <xref:System.Collections.IEqualityComparer.Equals%2A?displayProperty=nameWithType> implementation.</span></span> <span data-ttu-id="d3682-284">このメソッドの呼び出しが返された場合`true`、メソッドが再度呼び出され、渡された、 <xref:System.Tuple%608.Item2%2A> 、2 つの値<xref:System.Tuple%608>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-284">If this method call returns `true`, the method is called again and passed the <xref:System.Tuple%608.Item2%2A> values of the two <xref:System.Tuple%608> objects.</span></span> <span data-ttu-id="d3682-285">これは、メソッド呼び出しから戻るまで続きます`false`特定の値、または 2 つのペアを比較するときに<xref:System.Tuple%608.Rest%2A>値、メソッドに渡されます。</span><span class="sxs-lookup"><span data-stu-id="d3682-285">This continues until the method call returns `false` when it compares a specific pair of values, or the two <xref:System.Tuple%608.Rest%2A> values are passed to the method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer"><span data-ttu-id="d3682-286">現在の <see cref="T:System.Tuple`8" /> オブジェクトのハッシュ コードを計算する <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> メソッドを持つオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-286">An object whose <see cref="M:System.Collections.IEqualityComparer.GetHashCode(System.Object)" /> method calculates the hash code of the current <see cref="T:System.Tuple`8" /> object.</span></span></param>
        <summary><span data-ttu-id="d3682-287">指定した計算メソッドを使用して、現在の <see cref="T:System.Tuple`8" /> オブジェクトのハッシュ コードを計算します。</span><span class="sxs-lookup"><span data-stu-id="d3682-287">Calculates the hash code for the current <see cref="T:System.Tuple`8" /> object by using a specified computation method.</span></span></summary>
        <returns><span data-ttu-id="d3682-288">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="d3682-288">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-289">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-289">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3682-290">これは、<xref:System.Tuple%608> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d3682-290">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 <span data-ttu-id="d3682-291">メソッドは、単にへの呼び出しをラップ、`comparer`オブジェクトの<xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType>実装します。</span><span class="sxs-lookup"><span data-stu-id="d3682-291">The method simply wraps a call to the `comparer` object's <xref:System.Collections.IEqualityComparer.GetHashCode%2A?displayProperty=nameWithType> implementation.</span></span>  
  
 <span data-ttu-id="d3682-292">2 つのハッシュ コードの計算に使用するアルゴリズムが同じハッシュ コードを返す必要があります<xref:System.Tuple%608>同等であると見なされるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-292">The algorithm used to compute the hash code should return the same hash code for two <xref:System.Tuple%608> objects that are considered to be equal.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (obj As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ obj) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="d3682-293">現在のインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-293">An object to compare with the current instance.</span></span></param>
        <summary><span data-ttu-id="d3682-294">現在の <see cref="T:System.Tuple`8" /> オブジェクトと指定したオブジェクトを比較して、現在のオブジェクトが、並べ替え順序において、指定したオブジェクトの前後または同じ位置のいずれにあるかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="d3682-294">Compares the current <see cref="T:System.Tuple`8" /> object to a specified object and returns an integer that indicates whether the current object is before, after, or in the same position as the specified object in the sort order.</span></span></summary>
        <returns><span data-ttu-id="d3682-295">並べ替え順序における、このインスタンスと <paramref name="obj" /> の相対位置を示す符号付き整数値 (次の表を参照)。</span><span class="sxs-lookup"><span data-stu-id="d3682-295">A signed integer that indicates the relative position of this instance and <paramref name="obj" /> in the sort order, as shown in the following table.</span></span>  
  
 <span data-ttu-id="d3682-296"><list type="table"><listheader><term> 値</span><span class="sxs-lookup"><span data-stu-id="d3682-296"><list type="table"><listheader><term> Value</span></span>  
  
 <span data-ttu-id="d3682-297"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="d3682-297"></term><description> Description</span></span>  
  
 <span data-ttu-id="d3682-298"></description></listheader><item><term> 負の整数</span><span class="sxs-lookup"><span data-stu-id="d3682-298"></description></listheader><item><term> A negative integer</span></span>  
  
 <span data-ttu-id="d3682-299"></term><description> このインスタンスの位置が <paramref name="obj" /> よりも前です。</span><span class="sxs-lookup"><span data-stu-id="d3682-299"></term><description> This instance precedes <paramref name="obj" />.</span></span>  
  
 <span data-ttu-id="d3682-300"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="d3682-300"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="d3682-301"></term><description> このインスタンスと <paramref name="obj" /> の位置は、並べ替え順序において同じです。</span><span class="sxs-lookup"><span data-stu-id="d3682-301"></term><description> This instance and <paramref name="obj" /> have the same position in the sort order.</span></span>  
  
 <span data-ttu-id="d3682-302"></description></item><item><term> 正の整数</span><span class="sxs-lookup"><span data-stu-id="d3682-302"></description></item><item><term> A positive integer</span></span>  
  
 <span data-ttu-id="d3682-303"></term><description> このインスタンスの位置は <paramref name="obj" /> よりも後ろです。</span><span class="sxs-lookup"><span data-stu-id="d3682-303"></term><description> This instance follows <paramref name="obj" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-304">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-304">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d3682-305">これは、<xref:System.Tuple%608> のインスタンスが <xref:System.IComparable> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d3682-305">It can be used only when the <xref:System.Tuple%608> instance is cast to an <xref:System.IComparable> interface.</span></span>  
  
 <span data-ttu-id="d3682-306">このメソッドを提供、<xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType>の実装、<xref:System.Tuple%608>クラスです。</span><span class="sxs-lookup"><span data-stu-id="d3682-306">This method provides the <xref:System.IComparable.CompareTo%2A?displayProperty=nameWithType> implementation for the <xref:System.Tuple%608> class.</span></span> <span data-ttu-id="d3682-307">コレクションの並べ替えの既定のオーバー ロードによって最もよく呼び出さは直接メソッドを呼び出すことができます、メソッドなど<xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType>と<xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>コレクションのメンバーの順序付けをします。</span><span class="sxs-lookup"><span data-stu-id="d3682-307">Although the method can be called directly, it is most commonly called by the default overloads of collection-sorting methods, such as <xref:System.Array.Sort%28System.Array%29?displayProperty=nameWithType> and <xref:System.Collections.SortedList.Add%2A?displayProperty=nameWithType>, to order the members of a collection.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="d3682-308"><xref:System.Tuple%608.System%23IComparable%23CompareTo%2A>並べ替え操作で使用するためのメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-308">The <xref:System.Tuple%608.System%23IComparable%23CompareTo%2A> method is intended for use in sorting operations.</span></span> <span data-ttu-id="d3682-309">これはありません、比較の主な目的は 2 つのオブジェクトが等しいかどうかを判断するときに使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d3682-309">It should not be used when the primary purpose of a comparison is to determine whether two objects are equal.</span></span> <span data-ttu-id="d3682-310">2 つのオブジェクトが等しいかどうかを判断するを呼び出して、<xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-310">To determine whether two objects are equal, call the <xref:System.Tuple%608.Equals%28System.Object%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d3682-311">このメソッドは、各コンポーネントを比較するのにオブジェクトの既定の比較子を使用します。</span><span class="sxs-lookup"><span data-stu-id="d3682-311">This method uses the default object comparer to compare each component.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-312">次の例では、コンポーネントが含まれる素数の範囲を含む整数は、構成される組の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-312">The following example creates an array of octuples whose components are integers that contain a range of prime numbers.</span></span> <span data-ttu-id="d3682-313">例では、並べ替えられて、配列の要素を表示するには、配列を並べ替えますおよび並べ替え順序で配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="d3682-313">The example displays the elements of the array in unsorted order, sorts the array, and then displays the array in sorted order.</span></span> <span data-ttu-id="d3682-314">出力は、配列がして並べ替えられていることを示しています。 <xref:System.Tuple%608.Item1%2A>、または組の最初のコンポーネントです。</span><span class="sxs-lookup"><span data-stu-id="d3682-314">The output shows that the array has been sorted by <xref:System.Tuple%608.Item1%2A>, or the tuple's first component.</span></span> <span data-ttu-id="d3682-315">例では、直接呼び出しませんなお、<xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-315">Note that the example does not directly call the <xref:System.Tuple%608.System%23IComparable%23CompareTo%28System.Object%29> method.</span></span> <span data-ttu-id="d3682-316">このメソッドはによって暗黙的に呼び出されます、<xref:System.Array.Sort%28System.Array%29>配列内の各要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="d3682-316">This method is called implicitly by the <xref:System.Array.Sort%28System.Array%29> method for each element in the array.</span></span>  
  
 [!code-csharp[System.Tuple\`8.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.compareto/cs/compareto1.cs#1)]
 [!code-vb[System.Tuple\`8.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.compareto/vb/compareto1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d3682-317"><paramref name="obj" /> は <see cref="T:System.Tuple`8" /> オブジェクトではありません。</span><span class="sxs-lookup"><span data-stu-id="d3682-317"><paramref name="obj" /> is not a <see cref="T:System.Tuple`8" /> object.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Item">
      <MemberSignature Language="C#" Value="object System.Runtime.CompilerServices.ITuple.Item[int index] { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Runtime.CompilerServices.ITuple.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Item(index As Integer) As Object Implements ITuple.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Runtime.CompilerServices.ITuple.Item[int] { System::Object ^ get(int index); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index"><span data-ttu-id="d3682-318">指定した <see langword="Tuple" /> 要素のインデックス。</span><span class="sxs-lookup"><span data-stu-id="d3682-318">The index of the specified <see langword="Tuple" /> element.</span></span> <span data-ttu-id="d3682-319"><c>index</c> の範囲は、<see langword="Item1" /> について 0 から、<see langword="Tuple" /> の要素の数より 1 少ない数までです。</span><span class="sxs-lookup"><span data-stu-id="d3682-319"><c>index</c> can range from 0 for <see langword="Item1" /> to one less than the number of elements in the <see langword="Tuple" />.</span></span></param>
        <summary><span data-ttu-id="d3682-320">指定した <see langword="Tuple" /> 要素の値を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-320">Gets the value of the specified <see langword="Tuple" /> element.</span></span></summary>
        <value><span data-ttu-id="d3682-321">指定した位置にある <see langword="Tuple" /> 要素の値。</span><span class="sxs-lookup"><span data-stu-id="d3682-321">The value of the <see langword="Tuple" /> element at the specified position.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-322"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-322">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Item%2A?displayProperty=nameWithType> property is an explicit interface implementation.</span></span> <span data-ttu-id="d3682-323">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%608>オブジェクトを<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-323">To call it, you must cast or convert the <xref:System.Tuple%608> object to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="d3682-324"><paramref name="index" /> が 0 未満です。</span><span class="sxs-lookup"><span data-stu-id="d3682-324"><paramref name="index" /> is less than 0.</span></span>  
  
 <span data-ttu-id="d3682-325">- または -</span><span class="sxs-lookup"><span data-stu-id="d3682-325">-or-</span></span>  
  
 <span data-ttu-id="d3682-326"><paramref name="index" /> が <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" /> 以上です。</span><span class="sxs-lookup"><span data-stu-id="d3682-326"><paramref name="index" /> is greater than or equal to <see cref="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.Runtime.CompilerServices.ITuple.Length">
      <MemberSignature Language="C#" Value="int System.Runtime.CompilerServices.ITuple.Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Runtime.CompilerServices.ITuple.Length" />
      <MemberSignature Language="DocId" Value="P:System.Tuple`8.System#Runtime#CompilerServices#ITuple#Length" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Length As Integer Implements ITuple.Length" />
      <MemberSignature Language="C++ CLI" Value="property int System.Runtime.CompilerServices.ITuple.Length { int get(); };" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Runtime.CompilerServices.ITuple.Length</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary><span data-ttu-id="d3682-327"><see langword="Tuple" /> にある要素の数を取得します。</span><span class="sxs-lookup"><span data-stu-id="d3682-327">Gets the number of elements in the <see langword="Tuple" />.</span></span></summary>
        <value><span data-ttu-id="d3682-328"><see langword="Tuple" /> にある要素の数。</span><span class="sxs-lookup"><span data-stu-id="d3682-328">The number of elements in the <see langword="Tuple" />.</span></span></value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-329"><xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A>プロパティは、明示的なインターフェイス実装です。</span><span class="sxs-lookup"><span data-stu-id="d3682-329">The <xref:System.Tuple%608.System%23Runtime%23CompilerServices%23ITuple%23Length%2A> property is an explicit interface implementation.</span></span> <span data-ttu-id="d3682-330">これを呼び出すには、キャストまたは変換する必要があります、<xref:System.Tuple%608>型を<xref:System.Runtime.CompilerServices.ITuple>インターフェイス オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d3682-330">To call it, you must cast or convert the <xref:System.Tuple%608> type to an <xref:System.Runtime.CompilerServices.ITuple> interface object.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Tuple`8.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="d3682-331">この <see cref="T:System.Tuple`8" /> インスタンスの値を表す文字列を返します。</span><span class="sxs-lookup"><span data-stu-id="d3682-331">Returns a string that represents the value of this <see cref="T:System.Tuple`8" /> instance.</span></span></summary>
        <returns><span data-ttu-id="d3682-332">この <see cref="T:System.Tuple`8" /> オブジェクトの文字列表現。</span><span class="sxs-lookup"><span data-stu-id="d3682-332">The string representation of this <see cref="T:System.Tuple`8" /> object.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d3682-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span><span class="sxs-lookup"><span data-stu-id="d3682-333">The string returned by this method takes the form (*Item1*, *Item2*, *Item3*, *Item4*, `Item5, Item6, Item7`, *Item8*…), where *Item1*, *Item2*, *Item3*, *Item4*, *Item5*, *Item6*, and *Item7* represent the values of the <xref:System.Tuple%608.Item1%2A>, <xref:System.Tuple%608.Item2%2A>, <xref:System.Tuple%608.Item3%2A>, <xref:System.Tuple%608.Item4%2A>, <xref:System.Tuple%608.Item5%2A>, <xref:System.Tuple%608.Item6%2A>, and <xref:System.Tuple%608.Item7%2A> properties.</span></span> <span data-ttu-id="d3682-334">*Item8*の値を表す、<xref:System.Tuple%608>オブジェクトの`Next.Item1`プロパティです。</span><span class="sxs-lookup"><span data-stu-id="d3682-334">*Item8* represents the value of the <xref:System.Tuple%608> object's `Next.Item1` property.</span></span> <span data-ttu-id="d3682-335">その他の入れ子になったコンポーネントの値に従って*Item8*です。</span><span class="sxs-lookup"><span data-stu-id="d3682-335">The value of any additional nested components follow *Item8*.</span></span> <span data-ttu-id="d3682-336">プロパティ値のいずれかが場合`null`、として表されます<xref:System.String.Empty?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="d3682-336">If any of the property values is `null`, it is represented as <xref:System.String.Empty?displayProperty=nameWithType>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d3682-337">次の例では、デトロイト市、ミシガン 1860 1900 年からの母集団のデータを格納している 17 組を作成します。</span><span class="sxs-lookup"><span data-stu-id="d3682-337">The following example creates a 17-tuple that contains population data for the city of Detroit, Michigan, from 1860 to 1900.</span></span> <span data-ttu-id="d3682-338">次を使用して、<xref:System.Tuple%608.ToString%2A>組のデータを表示するメソッド。</span><span class="sxs-lookup"><span data-stu-id="d3682-338">It then uses the <xref:System.Tuple%608.ToString%2A> method to display the tuple's data.</span></span>  
  
 [!code-csharp[System.Tuple\`8.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.tuple`8.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.Tuple\`8.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.tuple`8.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>