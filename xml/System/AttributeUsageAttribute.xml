<Type Name="AttributeUsageAttribute" FullName="System.AttributeUsageAttribute">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="2b1842e83e2d3609b8a0bfed42e5f28c48b6f965" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="39886192" />
  </Metadata>
  <TypeSignature Language="C#" Value="public sealed class AttributeUsageAttribute : Attribute" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi serializable sealed beforefieldinit AttributeUsageAttribute extends System.Attribute" />
  <TypeSignature Language="DocId" Value="T:System.AttributeUsageAttribute" />
  <TypeSignature Language="VB.NET" Value="Public NotInheritable Class AttributeUsageAttribute&#xA;Inherits Attribute" />
  <TypeSignature Language="C++ CLI" Value="public ref class AttributeUsageAttribute sealed : Attribute" />
  <TypeSignature Language="F#" Value="type AttributeUsageAttribute = class&#xA;    inherit Attribute" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Attribute</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.AttributeUsage(System.AttributeTargets.Class, Inherited=true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="90264-101">別の属性クラスの使用方法を指定します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90264-101">Specifies the usage of another attribute class.</span>
      </span>
      <span data-ttu-id="90264-102">このクラスは継承できません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="90264-102">This class cannot be inherited.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90264-103">独自の属性クラスを定義する場合は、配置することによって使用される方法を制御することができます、<xref:System.AttributeUsageAttribute>属性クラスにします。</span><span class="sxs-lookup"><span data-stu-id="90264-103">When you are defining your own attribute class, you can control the manner in which it is used by placing an <xref:System.AttributeUsageAttribute> on your attribute class.</span></span> <span data-ttu-id="90264-104">指定された属性クラスから派生する必要があります<xref:System.Attribute>、直接または間接的にします。</span><span class="sxs-lookup"><span data-stu-id="90264-104">The indicated attribute class must derive from <xref:System.Attribute>, either directly or indirectly.</span></span>  
  
 <span data-ttu-id="90264-105">属性クラスは、位置指定引数と名前付きパラメーターを指定します。</span><span class="sxs-lookup"><span data-stu-id="90264-105">Attribute classes have positional and named parameters.</span></span> <span data-ttu-id="90264-106">属性クラスの各パブリック コンス トラクターは、そのクラスの位置指定パラメーターの有効なシーケンスを定義します。</span><span class="sxs-lookup"><span data-stu-id="90264-106">Each public constructor for an attribute class defines a valid sequence of positional parameters for that class.</span></span> <span data-ttu-id="90264-107">名前付きパラメーターは、静的でない、パブリック、および読み取り/書き込みフィールドまたは属性クラスのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="90264-107">Named parameters are defined by the non-static, public, and read-write fields or properties of the attribute class.</span></span>  
  
 <span data-ttu-id="90264-108">3 つのプロパティの<xref:System.AttributeUsageAttribute>次のパラメーターを定義することによって設定されます。</span><span class="sxs-lookup"><span data-stu-id="90264-108">The three properties of <xref:System.AttributeUsageAttribute> are set by defining the following parameters:</span></span>  
  
-   <xref:System.AttributeUsageAttribute.ValidOn%2A>  
  
 <span data-ttu-id="90264-109">この位置指定パラメーターでは、示された属性を上に配置できるプログラム要素を指定します。</span><span class="sxs-lookup"><span data-stu-id="90264-109">This positional parameter specifies the program elements that the indicated attribute can be placed on.</span></span> <span data-ttu-id="90264-110">属性を配置できるすべての可能な要素のセットが一覧表示、<xref:System.AttributeTargets>列挙体。</span><span class="sxs-lookup"><span data-stu-id="90264-110">The set of all possible elements that you can place an attribute on is listed in the <xref:System.AttributeTargets> enumeration.</span></span> <span data-ttu-id="90264-111">いくつかを結合できます<xref:System.AttributeTargets>値のビットごとの OR 演算を使用して、有効なプログラム要素の目的の組み合わせを取得します。</span><span class="sxs-lookup"><span data-stu-id="90264-111">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.AllowMultiple%2A>  
  
 <span data-ttu-id="90264-112">この名前付きパラメーターは、示された属性が特定のプログラム要素に対して複数回指定するかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="90264-112">This named parameter specifies whether the indicated attribute can be specified more than once for a given program element.</span></span>  
  
-   <xref:System.AttributeUsageAttribute.Inherited%2A>  
  
 <span data-ttu-id="90264-113">この名前付きパラメーターは、派生クラスとメンバーをオーバーライドするによって示された属性を継承できるかどうかを指定します。</span><span class="sxs-lookup"><span data-stu-id="90264-113">This named parameter specifies whether the indicated attribute can be inherited by derived classes and overriding members.</span></span>  
  
 <span data-ttu-id="90264-114">属性の使用方法の詳細については、次を参照してください。<xref:System.Attribute>と[属性](~/docs/standard/attributes/index.md)します。</span><span class="sxs-lookup"><span data-stu-id="90264-114">For more information about using attributes, see <xref:System.Attribute> and [Attributes](~/docs/standard/attributes/index.md).</span></span>  
  
 ]]></format>
    </remarks>
    <altmember cref="T:System.Attribute" />
    <altmember cref="T:System.AttributeTargets" />
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AttributeUsageAttribute (AttributeTargets validOn);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor(valuetype System.AttributeTargets validOn) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AttributeUsageAttribute.#ctor(System.AttributeTargets)" />
      <MemberSignature Language="VB.NET" Value="Public Sub New (validOn As AttributeTargets)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AttributeUsageAttribute(AttributeTargets validOn);" />
      <MemberSignature Language="F#" Value="new AttributeUsageAttribute : AttributeTargets -&gt; AttributeUsageAttribute" Usage="new System.AttributeUsageAttribute validOn" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters>
        <Parameter Name="validOn" Type="System.AttributeTargets" />
      </Parameters>
      <Docs>
        <param name="validOn">
          <span data-ttu-id="90264-115">有効なプログラム要素を示す、ビット単位の OR 演算を使用して組み合わせた値のセット。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-115">The set of values combined using a bitwise OR operation to indicate which program elements are valid.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="90264-116">
            <see cref="T:System.AttributeUsageAttribute" />、<see cref="T:System.AttributeTargets" /> 値、および <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> 値の指定リストを使用して、<see cref="P:System.AttributeUsageAttribute.Inherited" /> クラスの新しいインスタンスを初期化します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-116">Initializes a new instance of the <see cref="T:System.AttributeUsageAttribute" /> class with the specified list of <see cref="T:System.AttributeTargets" />, the <see cref="P:System.AttributeUsageAttribute.AllowMultiple" /> value, and the <see cref="P:System.AttributeUsageAttribute.Inherited" /> value.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90264-117">いくつかを結合できます<xref:System.AttributeTargets>値のビットごとの OR 演算を使用して、有効なプログラム要素の目的の組み合わせを取得します。</span><span class="sxs-lookup"><span data-stu-id="90264-117">You can combine several <xref:System.AttributeTargets> values using a bitwise OR operation to get the desired combination of valid program elements.</span></span>  
  
 <span data-ttu-id="90264-118">既定のプロパティ値を参照してください、 <xref:System.AttributeUsageAttribute.ValidOn%2A>、 <xref:System.AttributeUsageAttribute.AllowMultiple%2A>、および<xref:System.AttributeUsageAttribute.Inherited%2A>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="90264-118">For default property values, see the <xref:System.AttributeUsageAttribute.ValidOn%2A>, <xref:System.AttributeUsageAttribute.AllowMultiple%2A>, and <xref:System.AttributeUsageAttribute.Inherited%2A> properties.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90264-119">DispId 属性の定義を結合するいくつかのビットごとの OR 演算の使用方法を示します<xref:System.AttributeTargets>値。</span><span class="sxs-lookup"><span data-stu-id="90264-119">The definition of the DispId attribute illustrates the use of a bitwise OR operation to combine several <xref:System.AttributeTargets> values.</span></span>  
  
 [!code-cpp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CPP/source.cpp#1)]
 [!code-csharp[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/CS/source.cs#1)]
 [!code-vb[Classic AttributeUsageAttribute.AttributeUsageAttribute Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic AttributeUsageAttribute.AttributeUsageAttribute Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
    <Member MemberName="AllowMultiple">
      <MemberSignature Language="C#" Value="public bool AllowMultiple { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool AllowMultiple" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.AllowMultiple" />
      <MemberSignature Language="VB.NET" Value="Public Property AllowMultiple As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool AllowMultiple { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.AllowMultiple : bool with get, set" Usage="System.AttributeUsageAttribute.AllowMultiple" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90264-120">制御対象とする属性の複数のインスタンスを 1 つのプログラム要素に対して指定できるかどうかを示すブール値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-120">Gets or sets a Boolean value indicating whether more than one instance of the indicated attribute can be specified for a single program element.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90264-121">複数のインスタンスを指定できる場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-121">
              <see langword="true" /> if more than one instance is allowed to be specified; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="90264-122">既定値は、<see langword="false" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-122">The default is <see langword="false" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90264-123">プログラム要素に対して複数回指定できる属性は、複数回使用属性と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="90264-123">An attribute that can be specified more than once for a program element is called a multi-use attribute.</span></span> <span data-ttu-id="90264-124">1 回だけ指定できる属性は、単一使用属性と呼ばれます。</span><span class="sxs-lookup"><span data-stu-id="90264-124">An attribute that can be specified only once is called a single-use attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="Inherited">
      <MemberSignature Language="C#" Value="public bool Inherited { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool Inherited" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.Inherited" />
      <MemberSignature Language="VB.NET" Value="Public Property Inherited As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool Inherited { bool get(); void set(bool value); };" />
      <MemberSignature Language="F#" Value="member this.Inherited : bool with get, set" Usage="System.AttributeUsageAttribute.Inherited" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90264-125">示された属性が派生クラスによって継承され、メンバーをオーバーライドするかどうかを決定する <see cref="T:System.Boolean" /> 値を取得または設定します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-125">Gets or sets a <see cref="T:System.Boolean" /> value that determines whether the indicated attribute is inherited by derived classes and overriding members.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90264-126">属性が派生クラスにより継承され、メンバーをオーバーライドする場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-126">
              <see langword="true" /> if the attribute can be inherited by derived classes and overriding members; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="90264-127">既定値は、<see langword="true" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-127">The default is <see langword="true" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="90264-128"><xref:System.AttributeUsageAttribute.Inherited%2A>プロパティを決定します。</span><span class="sxs-lookup"><span data-stu-id="90264-128">The <xref:System.AttributeUsageAttribute.Inherited%2A> property determines:</span></span>  
  
-   <span data-ttu-id="90264-129">クラスは基底クラスから派生するかどうかを属性でタグ付け、<xref:System.AttributeUsageAttribute>属性が適用される属性を継承します。</span><span class="sxs-lookup"><span data-stu-id="90264-129">Whether classes derived from a base class tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  
  
-   <span data-ttu-id="90264-130">メソッドが基底クラスのメソッドをオーバーライドするクラスを派生するかどうかを属性でタグ付け、<xref:System.AttributeUsageAttribute>属性が適用される属性を継承します。</span><span class="sxs-lookup"><span data-stu-id="90264-130">Whether methods of derived classes that override a base class method tagged with the attribute to which the <xref:System.AttributeUsageAttribute> attribute is applied inherit that attribute.</span></span>  <span data-ttu-id="90264-131">(クラスは、基底クラスのメンバーを継承している場合にも継承そのメンバーに適用される任意の属性です。)</span><span class="sxs-lookup"><span data-stu-id="90264-131">(If a class inherits a base class member, it also inherits any attributes applied to that member.)</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="90264-132">次の例では、する属性間の差、<xref:System.AttributeUsageAttribute>属性を<xref:System.AttributeUsageAttribute.Inherited%2A>プロパティの値`true`が適用されるとする 1 つ<xref:System.AttributeUsageAttribute>属性を<xref:System.AttributeUsageAttribute.Inherited%2A>プロパティの値`false`が適用されます。</span><span class="sxs-lookup"><span data-stu-id="90264-132">The following example illustrates the difference between an attribute to which an <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `true` is applied and one to which  <xref:System.AttributeUsageAttribute> attribute with an <xref:System.AttributeUsageAttribute.Inherited%2A> property value of `false` is applied .</span></span> <span data-ttu-id="90264-133">例では、2 つの属性を定義します。`InheritedAttribute`と`NotInheritedAttribute`します。</span><span class="sxs-lookup"><span data-stu-id="90264-133">The example defines two attributes, `InheritedAttribute` and `NotInheritedAttribute`.</span></span> <span data-ttu-id="90264-134">両方の属性は、クラスとメソッドに適用できます。</span><span class="sxs-lookup"><span data-stu-id="90264-134">Both attributes can apply to classes and methods.</span></span> <span data-ttu-id="90264-135"><xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティ、<xref:System.AttributeUsageAttribute>に適用される属性`InheritedAttribute`は`true`、派生クラスによって継承されているのメンバーが基底クラスのメソッドをオーバーライドするクラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="90264-135">Because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `InheritedAttribute` is `true`, it is inherited by derived classes and the members of derived classes that override the base class method.</span></span>  <span data-ttu-id="90264-136">その一方で、ため、<xref:System.AttributeUsageAttribute.Inherited%2A>のプロパティ、<xref:System.AttributeUsageAttribute>に適用される属性`NotInheritedAttribute`は`false`、派生クラスによって継承されていないのメンバーが基底クラスのメソッドをオーバーライドするクラスを派生します。</span><span class="sxs-lookup"><span data-stu-id="90264-136">On the other hand, because the <xref:System.AttributeUsageAttribute.Inherited%2A> property of the <xref:System.AttributeUsageAttribute> attribute applied to `NotInheritedAttribute` is `false`, it is not inherited by derived classes and the members of derived classes that override the base class method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#1)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#1)]  
  
 <span data-ttu-id="90264-137">この例は、2 つの基本クラスを定義します。</span><span class="sxs-lookup"><span data-stu-id="90264-137">The example then defines two  base classes.</span></span> <span data-ttu-id="90264-138">まず、 `BaseA`、1 つのメソッドを持つ`MethodA`。</span><span class="sxs-lookup"><span data-stu-id="90264-138">The first, `BaseA`, has a single method, `MethodA`.</span></span>  <span data-ttu-id="90264-139">次に、 `BaseB`、1 つのメソッドを持つ`MethodB`します。</span><span class="sxs-lookup"><span data-stu-id="90264-139">The second, `BaseB`, has a single method, `MethodB`.</span></span> <span data-ttu-id="90264-140">`BaseA` `MethodA`タグが付けられた、`InheritedAttribute`属性、および`BaseB`と`MethodB`でタグ付けされます、`NotInheritedAttribute`属性。</span><span class="sxs-lookup"><span data-stu-id="90264-140">`BaseA` and `MethodA` are tagged with the `InheritedAttribute` attribute, and `BaseB` and `MethodB` are tagged with the `NotInheritedAttribute` attribute.</span></span> <span data-ttu-id="90264-141">`DerivedA` 継承`BaseA`オーバーライドとその`MethodA`メソッド。</span><span class="sxs-lookup"><span data-stu-id="90264-141">`DerivedA` inherits from `BaseA` and overrides its `MethodA` method.</span></span> <span data-ttu-id="90264-142">`DerivedB` 継承`BaseB`オーバーライドとその`MethodB`メソッド。</span><span class="sxs-lookup"><span data-stu-id="90264-142">`DerivedB` inherits from `BaseB` and overrides its `MethodB` method.</span></span>  
  
 [!code-csharp[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/cs/Inherited1.cs#2)]
 [!code-vb[System.AttributeUsageAttribute.Inherited#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/System.AttributeUsageAttribute.Inherited/vb/Inherited1.vb#2)]  
  
 <span data-ttu-id="90264-143">例を示しますから出力として`DerivedA`と`DerivedA.MethodA`継承、`InheritedAttribute`属性が`DerivedB`と`DerivedB.MethodB`を継承しません、`NotInheritedAttribute`属性。</span><span class="sxs-lookup"><span data-stu-id="90264-143">As the output from the example shows, `DerivedA` and `DerivedA.MethodA` inherit the `InheritedAttribute` attribute, but `DerivedB` and `DerivedB.MethodB` do not inherit the `NotInheritedAttribute` attribute.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Attribute" />
      </Docs>
    </Member>
    <Member MemberName="ValidOn">
      <MemberSignature Language="C#" Value="public AttributeTargets ValidOn { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AttributeTargets ValidOn" />
      <MemberSignature Language="DocId" Value="P:System.AttributeUsageAttribute.ValidOn" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property ValidOn As AttributeTargets" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AttributeTargets ValidOn { AttributeTargets get(); };" />
      <MemberSignature Language="F#" Value="member this.ValidOn : AttributeTargets" Usage="System.AttributeUsageAttribute.ValidOn" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AttributeTargets</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="90264-144">制御対象とする属性を適用できるプログラム要素を識別する一連の値を取得します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-144">Gets a set of values identifying which program elements that the indicated attribute can be applied to.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="90264-145">1 つ以上の <see cref="T:System.AttributeTargets" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-145">One or several <see cref="T:System.AttributeTargets" /> values.</span>
          </span>
          <span data-ttu-id="90264-146">既定値は、<see langword="All" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="90264-146">The default is <see langword="All" />.</span>
          </span>
        </value>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.AttributeTargets" />
      </Docs>
    </Member>
  </Members>
</Type>