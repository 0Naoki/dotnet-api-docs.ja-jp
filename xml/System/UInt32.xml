<Type Name="UInt32" FullName="System.UInt32">
  <TypeSignature Language="C#" Value="public struct UInt32 : IComparable, IComparable&lt;uint&gt;, IConvertible, IEquatable&lt;uint&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit unsigned int32 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;unsigned int32&gt;, class System.IConvertible, class System.IEquatable`1&lt;unsigned int32&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.UInt32" />
  <TypeSignature Language="VB.NET" Value="Public Structure UInt32&#xA;Implements IComparable, IComparable(Of UInteger), IConvertible, IEquatable(Of UInteger), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class UInt32 : IComparable, IComparable&lt;System::UInt32&gt;, IConvertible, IEquatable&lt;System::UInt32&gt;, IFormattable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.UInt32&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.CLSCompliant(false)</AttributeName>
    </Attribute>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ccb29-101">32 ビット符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-101">Represents a 32-bit unsigned integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-102">`UInt32`値型は、0 から 4,294,967,295 までの値を符号なし整数を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-102">The `UInt32` value type represents unsigned integers with values ranging from 0 to 4,294,967,295.</span></span>  
  
> [!IMPORTANT]
>  <span data-ttu-id="ccb29-103"><xref:System.UInt32>型が CLS 準拠ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-103">The <xref:System.UInt32> type is not CLS-compliant.</span></span> <span data-ttu-id="ccb29-104">CLS 準拠の代替の型は<xref:System.Int64>します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-104">The CLS-compliant alternative type is <xref:System.Int64>.</span></span> <span data-ttu-id="ccb29-105"><xref:System.Int32> 置換する代わりに使用できる、<xref:System.UInt32>値の範囲は 0 ~<xref:System.Int32.MaxValue>します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-105"><xref:System.Int32> can be used instead to replace a <xref:System.UInt32> value that ranges from zero to <xref:System.Int32.MaxValue>.</span></span> <span data-ttu-id="ccb29-106">CLS 準拠の詳細については、次を参照してください。[言語非依存および言語非依存コンポーネント](~/docs/standard/language-independence-and-language-independent-components.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-106">For more information about CLS compliance, see [Language Independence and Language-Independent Components](~/docs/standard/language-independence-and-language-independent-components.md).</span></span>  
  
 <span data-ttu-id="ccb29-107">`UInt32` この型のインスタンスを比較するインスタンスの値を変換するメソッドを提供、<xref:System.String>表現、および convert、<xref:System.String>この型のインスタンスに数値の形式です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-107">`UInt32` provides methods to compare instances of this type, convert the value of an instance to its <xref:System.String> representation, and convert the <xref:System.String> representation of a number to an instance of this type.</span></span>  
  
 <span data-ttu-id="ccb29-108">方法については仕様コード コントロールの書式設定、<xref:System.String>値の型の表現を参照してください[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-108">For information about how format specification codes control the <xref:System.String> representation of value types, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ccb29-109">この種類のすべてのメンバーでは、スレッド セーフです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-109">All members of this type are thread safe.</span></span> <span data-ttu-id="ccb29-110">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-110">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="ccb29-111">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-111">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.Int32" />
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb29-112">指定したオブジェクトまたは <see cref="T:System.UInt32" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-112">Compares this instance to a specified object or <see cref="T:System.UInt32" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb29-113">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-113">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ccb29-114">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-114">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ccb29-115">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-115">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-116"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="ccb29-116"><list type="table"><listheader><term> Return Value</span></span>  
  
 <span data-ttu-id="ccb29-117"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-117"></term><description> Description</span></span>  
  
 <span data-ttu-id="ccb29-118"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ccb29-118"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="ccb29-119"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-119"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-120"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="ccb29-120"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="ccb29-121"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-121"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-122"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ccb29-122"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="ccb29-123"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-123"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-124">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-124">-or-</span></span>  
  
 <span data-ttu-id="ccb29-125"><paramref name="value" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-125"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-126">任意のインスタンス<xref:System.UInt32>、その値に関係なくが大きいと見なされますより`null`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-126">Any instance of <xref:System.UInt32>, regardless of its value, is considered greater than `null`.</span></span>  
  
 <span data-ttu-id="ccb29-127">`value`パラメーターでなければなりません`null`またはのインスタンス<xref:System.UInt32>です。 それ以外の場合、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-127">The `value` parameter must be `null` or an instance of <xref:System.UInt32>; otherwise, an exception is thrown.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-128">次のコード例を示しています、<xref:System.UInt32.CompareTo%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-128">The following code example demonstrates the <xref:System.UInt32.CompareTo%2A> method.</span></span>  
  
 [!code-cpp[UInt32 Example#3](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#3)]
 [!code-csharp[UInt32 Example#3](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#3)]
 [!code-vb[UInt32 Example#3](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ccb29-129"><paramref name="value" /> が <see cref="T:System.UInt32" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-129"><paramref name="value" /> is not a <see cref="T:System.UInt32" />.</span></span></exception>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (uint value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(unsigned int32 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.CompareTo(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As UInteger) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::UInt32 value);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ccb29-130">比較対象の符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-130">An unsigned integer to compare.</span></span></param>
        <summary><span data-ttu-id="ccb29-131">指定した 32 ビット符号なし整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-131">Compares this instance to a specified 32-bit unsigned integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ccb29-132">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-132">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-133"><list type="table"><listheader><term> 戻り値</span><span class="sxs-lookup"><span data-stu-id="ccb29-133"><list type="table"><listheader><term> Return value</span></span>  
  
 <span data-ttu-id="ccb29-134"></term><description>説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-134"></term><description> Description</span></span>  
  
 <span data-ttu-id="ccb29-135"></description></listheader><item><term> 0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ccb29-135"></description></listheader><item><term> Less than zero</span></span>  
  
 <span data-ttu-id="ccb29-136"></term><description> このインスタンスは、<paramref name="value" /> よりも小さいです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-136"></term><description> This instance is less than <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-137"></description></item><item><term> 0</span><span class="sxs-lookup"><span data-stu-id="ccb29-137"></description></item><item><term> Zero</span></span>  
  
 <span data-ttu-id="ccb29-138"></term><description> このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-138"></term><description> This instance is equal to <paramref name="value" />.</span></span>  
  
 <span data-ttu-id="ccb29-139"></description></item><item><term> 0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ccb29-139"></description></item><item><term> Greater than zero</span></span>  
  
 <span data-ttu-id="ccb29-140"></term><description> このインスタンスは <paramref name="value" /> よりも大きいです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-140"></term><description> This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-141">このメソッドを実装する、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスし、実行よりもわずかに向上、<xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType>メソッドに変換があるないため、`value`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-141">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.UInt32.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="ccb29-142">プログラミング言語に応じてコードに考えられる場合があります、<xref:System.UInt32.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-142">Depending on your programming language, it might be possible to code a <xref:System.UInt32.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="ccb29-143">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</span><span class="sxs-lookup"><span data-stu-id="ccb29-143">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="ccb29-144">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-144">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="ccb29-145">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクトを生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスおよび<xref:System.Int32>パラメーター形式です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-145">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="ccb29-146">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを決定する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-146">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-147">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.UInt32.CompareTo%2A>いくつかの値と参照型のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-147">The following code example demonstrates generic and nongeneric versions of the <xref:System.UInt32.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb29-148">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.UInt32" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-148">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.UInt32" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ccb29-149">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-149">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="ccb29-150">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-150">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns>
          <span data-ttu-id="ccb29-151"><paramref name="obj" /> が <see cref="T:System.UInt32" /> のインスタンスで、このインスタンスの値に等しい場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-151"><see langword="true" /> if <paramref name="obj" /> is an instance of <see cref="T:System.UInt32" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ccb29-152">次のコード例を示しています、<xref:System.UInt32.Equals%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-152">The following code example demonstrates the <xref:System.UInt32.Equals%2A> method.</span></span>  
  
 [!code-cpp[UInt32_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32_Equals/CPP/uint32_equals.cpp#1)]
 [!code-csharp[UInt32_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32_Equals/CS/uint32_equals.cs#1)]
 [!code-vb[UInt32_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32_Equals/VB/uint32_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="ccb29-153">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-153">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="ccb29-154">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.UInt32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-154">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="ccb29-155">それ以外の場合を呼び出すことが、<see cref="M:System.UInt32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.UInt32" />値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-155">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="ccb29-156">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="ccb29-156">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ccb29-157">場合、<see cref="T:System.Byte" />と<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッド、2 つ目の比較を返しますが<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.UInt32.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-157">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</para>
        </block>
        <altmember cref="M:System.UInt32.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (uint obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(unsigned int32 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Equals(System.UInt32)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(System::UInt32 obj);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.UInt32" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ccb29-158">このインスタンスと比較する値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-158">A value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="ccb29-159">このインスタンスが、指定した <see cref="T:System.UInt32" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-159">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.UInt32" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ccb29-160"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-160"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-161">このメソッドを実装する、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりもわずかに向上、<xref:System.UInt32.Equals%28System.Object%29>メソッドに変換があるないため、`obj`オブジェクトへのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-161">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than the <xref:System.UInt32.Equals%28System.Object%29> method because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para><span data-ttu-id="ccb29-162">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-162">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.UInt32.Equals(System.UInt32)" /> method overloads.</span></span> <span data-ttu-id="ccb29-163">場合の間の暗黙的な変換、<paramref name="obj" />引数および<see cref="T:System.UInt32" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラが暗黙的な変換と呼び出しを実行、<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-163">If an implicit conversion between the <paramref name="obj" /> argument and a <see cref="T:System.UInt32" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method.</span></span> <span data-ttu-id="ccb29-164">それ以外の場合を呼び出すことが、<see cref="M:System.UInt32.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数ではありません、<see cref="T:System.UInt32" />値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-164">Otherwise, they call the <see cref="M:System.UInt32.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not a <see cref="T:System.UInt32" /> value.</span></span> <span data-ttu-id="ccb29-165">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="ccb29-165">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ccb29-166">場合、<see cref="T:System.Byte" />と<see cref="T:System.UInt16" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため、<see cref="M:System.UInt32.Equals(System.UInt32)" />メソッド、2 つ目の比較を返しますが<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.UInt32.Equals(System.Object)" />メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-166">In the case of <see cref="T:System.Byte" /> and <see cref="T:System.UInt16" /> values,  the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.UInt32.Equals(System.UInt32)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.UInt32.Equals(System.Object)" /> method.</span></span>  
  
 [!code-csharp[System.UInt32.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.equals/cs/equalsoverl.cs#1)]
 [!code-vb[System.UInt32.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.equals/vb/equalsoverl.vb#1)]</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb29-167">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-167">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ccb29-168">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ccb29-168">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb29-169"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.UInt32" /> を返します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-169">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.UInt32" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-170">列挙型定数 <see cref="F:System.TypeCode.UInt32" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-170">The enumerated constant, <see cref="F:System.TypeCode.UInt32" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const uint MaxValue = 4294967295;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MaxValue = unsigned int32(4294967295)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As UInteger  = 4294967295" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MaxValue = 4294967295;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>4294967295</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ccb29-171"><see cref="T:System.UInt32" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-171">Represents the largest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="ccb29-172">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-172">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-173">この定数の値が 4,294,967,295 です。つまり、16 進数 0 xffffffff です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-173">The value of this constant is 4,294,967,295; that is, hexadecimal 0xFFFFFFFF.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-174">次の例では、<xref:System.UInt32.MinValue>と<xref:System.UInt32.MaxValue>ことを確認するフィールド、<xref:System.Int64>値の範囲内では、<xref:System.UInt32>型変換を実行する前に入力します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-174">The following example uses the <xref:System.UInt32.MinValue> and <xref:System.UInt32.MaxValue> fields to verify that an <xref:System.Int64> value is within the range of the <xref:System.UInt32> type before it performs a type conversion.</span></span> <span data-ttu-id="ccb29-175">この確認により、<xref:System.OverflowException>実行時にします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-175">This verification prevents an <xref:System.OverflowException> at run time.</span></span>  
  
 [!code-csharp[System.UInt32.MaxValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.UInt32.MaxValue/cs/MaxValue1.cs#1)]
 [!code-vb[System.UInt32.MaxValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.UInt32.MaxValue/vb/MaxValue1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const uint MinValue = 0;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal unsigned int32 MinValue = unsigned int32(0)" />
      <MemberSignature Language="DocId" Value="F:System.UInt32.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As UInteger  = 0" />
      <MemberSignature Language="C++ CLI" Value="public: System::UInt32 MinValue = 0;" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <MemberValue>0</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ccb29-176"><see cref="T:System.UInt32" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-176">Represents the smallest possible value of <see cref="T:System.UInt32" />.</span></span> <span data-ttu-id="ccb29-177">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-177">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-178">この定数の値は 0 です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-178">The value of this constant is 0.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-179">次の例で使用する方法、<xref:System.UInt32.MinValue>の最小有効値を表示するフィールド、<xref:System.UInt32>変数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-179">The following example demonstrates how to use the <xref:System.UInt32.MinValue> field to display the smallest possible value of a <xref:System.UInt32> variable.</span></span>  
  
 [!code-cpp[UInt32 Example#2](~/samples/snippets/cpp/VS_Snippets_CLR/UInt32 Example/CPP/source.cpp#2)]
 [!code-csharp[UInt32 Example#2](~/samples/snippets/csharp/VS_Snippets_CLR/UInt32 Example/CS/source.cs#2)]
 [!code-vb[UInt32 Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR/UInt32 Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.UInt32.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb29-180">数値の文字列形式を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-180">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-181">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-181">A string representing the number to convert.</span></span></param>
        <summary><span data-ttu-id="ccb29-182">数値の文字列形式を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-182">Converts the string representation of a number to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb29-183"><paramref name="s" /> に格納されている数値と等しい 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-183">A 32-bit unsigned integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-184">`s`パラメーターが、次の形式の数値の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-184">The `s` parameter should be the string representation of a number in the following form.</span></span>  
  
 <span data-ttu-id="ccb29-185">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-185">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-186">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-186">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-187">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-187">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-188">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-188">Element</span></span>|<span data-ttu-id="ccb29-189">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-189">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-190">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-190">*ws*</span></span>|<span data-ttu-id="ccb29-191">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-191">Optional white space.</span></span>|  
|<span data-ttu-id="ccb29-192">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-192">*sign*</span></span>|<span data-ttu-id="ccb29-193">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-193">An optional sign.</span></span> <span data-ttu-id="ccb29-194">有効な符号文字がによって決定されます、<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-194">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ccb29-195">ただし、負の記号のみで使える 0;それ以外の場合がスローされます、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-195">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="ccb29-196">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-196">*digits*</span></span>|<span data-ttu-id="ccb29-197">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-197">A sequence of digits ranging from 0 to 9.</span></span> <span data-ttu-id="ccb29-198">先頭の 0 は無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-198">Any leading zeros are ignored.</span></span>|  
  
> [!NOTE]
>  <span data-ttu-id="ccb29-199">指定された文字列、`s`パラメーターを使用して解釈されます、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="ccb29-199">The string specified by the `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb29-200">任意の桁区切り記号または 10 進区切り記号を含めることはできませんとに小数部を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-200">It cannot contain any group separators or decimal separator, and it cannot have a decimal portion.</span></span>  
  
 <span data-ttu-id="ccb29-201">`s`パラメーターは書式設定情報を使用して解析、<xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-201">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo?displayProperty=nameWithType> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ccb29-202">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-202">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb29-203">特定のカルチャの書式情報を使用して、文字列を解析するを使用して、<xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-203">To parse a string by using the formatting information of a specific culture, use the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-204">次の例では、<xref:System.UInt32.Parse%28System.String%29>文字列値の配列を解析します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-204">The following example uses the <xref:System.UInt32.Parse%28System.String%29> method to parse an array of string values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parse1.cs#1)]
 [!code-vb[System.UInt32.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ccb29-205"><paramref name="s" /> パラメーターが <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-205">The <paramref name="s" /> parameter is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb29-206"><paramref name="s" /> パラメーターが適切な書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-206">The <paramref name="s" /> parameter is not of the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ccb29-207"><paramref name="s" /> パラメーターが <see cref="F:System.UInt32.MinValue" /> 未満の数値か、<see cref="F:System.UInt32.MaxValue" /> より大きい数値を表しています。</span><span class="sxs-lookup"><span data-stu-id="ccb29-207">The <paramref name="s" /> parameter represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-208">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-208">A string representing the number to convert.</span></span> <span data-ttu-id="ccb29-209">文字列は、<c>style</c> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-209">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ccb29-210"><c>s</c> に許可されている書式を指定する列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-210">A bitwise combination of the enumeration values that specify the permitted format of <c>s</c>.</span></span> <span data-ttu-id="ccb29-211">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-211">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="ccb29-212">指定したスタイルの数値の文字列形式を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-212">Converts the string representation of a number in a specified style to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb29-213"><paramref name="s" /> で指定した数値と等しい 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-213">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-214">`style`パラメーター スタイル要素を定義します (空白、正または負の記号、桁区切り記号や小数点記号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-214">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, the group separator symbol, or the decimal point symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb29-215">`style` ビット フラグの組み合わせを指定する必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-215">`style` must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ccb29-216">`style`パラメーター オーバー ロードに役立つときにこのメソッドは、`s`によって表される数システム (10 進または 16 進数) と 16 進数値の文字列形式を含む`s`、実行時にのみ、または空白文字を許可しない場合し、で記号がわかっている`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-216">The `style` parameter makes this method overload useful when `s` contains the string representation of a hexadecimal value, when the number system (decimal or hexadecimal) represented by `s` is known only at run time, or when you want to disallow white space or a sign symbol in `s`.</span></span>  
  
 <span data-ttu-id="ccb29-217">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-217">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-218">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-218">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-219">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-219">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-220">場合`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-220">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-221">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-221">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-222">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-222">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-223">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-223">Element</span></span>|<span data-ttu-id="ccb29-224">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-224">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-225">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-225">*ws*</span></span>|<span data-ttu-id="ccb29-226">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-226">Optional white space.</span></span> <span data-ttu-id="ccb29-227">先頭の空白文字が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-227">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb29-228">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ccb29-228">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb29-229">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-229">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ccb29-230">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-230">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-231">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-231">*sign*</span></span>|<span data-ttu-id="ccb29-232">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-232">An optional sign.</span></span> <span data-ttu-id="ccb29-233">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-233">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-234">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-234">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-235">ただし、負の記号のみで使える 0;それ以外の場合がスローされます、<xref:System.OverflowException>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-235">However, the negative sign symbol can be used only with zero; otherwise, the method throws an <xref:System.OverflowException>.</span></span>|  
|<span data-ttu-id="ccb29-236">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-236">*digits*</span></span><br /><br /> <span data-ttu-id="ccb29-237">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-237">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ccb29-238">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-238">*exponential_digits*</span></span>|<span data-ttu-id="ccb29-239">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-239">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb29-240">*Fractional_digits*数字の 0 が有効ではのみです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-240">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ccb29-241">*、*</span><span class="sxs-lookup"><span data-stu-id="ccb29-241">*,*</span></span>|<span data-ttu-id="ccb29-242">カルチャ固有のグループの区切り記号です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-242">A culture-specific group separator symbol.</span></span> <span data-ttu-id="ccb29-243">現在のカルチャの桁区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-243">The current culture's group separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-244">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb29-244">*.*</span></span>|<span data-ttu-id="ccb29-245">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-245">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb29-246">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-246">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-247">数字の 0 は、解析操作を成功させるため桁の小数部として表示できます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.FormatException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-247">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, a <xref:System.FormatException> is thrown.</span></span>|  
|<span data-ttu-id="ccb29-248">E</span><span class="sxs-lookup"><span data-stu-id="ccb29-248">E</span></span>|<span data-ttu-id="ccb29-249">"E"または"E"文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-249">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb29-250">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-250">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-251">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-251">*hexdigits*</span></span>|<span data-ttu-id="ccb29-252">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="ccb29-252">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ccb29-253">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-253">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ccb29-254">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーが存在する可能性がありますが、入力文字列内に存在する必要がない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-254">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in the input string.</span></span> <span data-ttu-id="ccb29-255">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-255">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ccb29-256">`NumberStyles` の値</span><span class="sxs-lookup"><span data-stu-id="ccb29-256">`NumberStyles` value</span></span>|<span data-ttu-id="ccb29-257">使用できる要素`s`数字だけでなく</span><span class="sxs-lookup"><span data-stu-id="ccb29-257">Elements permitted in `s` in addition to digits</span></span>|  
|--------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ccb29-258">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-258">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ccb29-259">小数点 (.) と*小数部の桁*要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-259">The decimal point (.) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ccb29-260">"E"または"E"文字は、と共に、指数表記法を示す*exponential_digits*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-260">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ccb29-261">*Ws*の先頭の要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-261">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ccb29-262">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-262">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ccb29-263">*記号*の先頭の要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-263">The *sign* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ccb29-264">*記号*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-264">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ccb29-265">*記号*数値の値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-265">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ccb29-266">グループの区切り記号 (,) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-266">The group separator (,) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ccb29-267">通貨 ($) の要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-267">The currency ($) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ccb29-268">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-268">All elements.</span></span> <span data-ttu-id="ccb29-269">ただし、 `s` 16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-269">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ccb29-270">*Ws*開始または終了の位置にある要素`s`、*記号*の開始時`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="ccb29-270">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ccb29-271">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-271">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ccb29-272">`ws`、 `sign`、桁区切り記号 (*、*)、および小数点 (*.*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-272">The `ws`, `sign`, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ccb29-273">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-273">All elements.</span></span> <span data-ttu-id="ccb29-274">ただし、 `s` 16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-274">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ccb29-275">異なり、他の<xref:System.Globalization.NumberStyles>の値の許可は必要ありません、内の特定のスタイル要素のプレゼンス`s`、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>スタイル値つまりの個別の数値文字`s`は常に 16 進数の文字として解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-275">Unlike the other <xref:System.Globalization.NumberStyles> values, which allow for, but do not require, the presence of particular style elements in `s`, the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> style value means that the individual numeric characters in `s` are always interpreted as hexadecimal characters.</span></span> <span data-ttu-id="ccb29-276">有効な 16 進数の文字は 0 ~ 9、A ~ F、a ~ f です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-276">Valid hexadecimal characters are 0-9, A-F, and a-f.</span></span> <span data-ttu-id="ccb29-277">"0 x"などのプレフィックスを指定することはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-277">A prefix, such as "0x", is not allowed.</span></span> <span data-ttu-id="ccb29-278">のみ他のフラグと組み合わせることができます、`style`パラメーターは<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-278">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb29-279">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白のフラグが含まれている。)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-279">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
 <span data-ttu-id="ccb29-280">のみ他のフラグと組み合わせることができます、`style`パラメーターは<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-280">The only other flags that can be combined with the `style` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb29-281">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白のフラグが含まれている。)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-281">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb29-282">場合`s`文字列表現は、16 進数は、そのことはできません前に、装飾 (など`0x`または`&h`) の 16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-282">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb29-283">これにより、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-283">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ccb29-284">`s`パラメーターは書式設定情報を使用して解析、<xref:System.Globalization.NumberFormatInfo>現在のシステムのカルチャに初期化されるオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-284">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ccb29-285">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-285">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-286">次の例の番号を使用して、文字列配列の各要素を解析しようとしました。<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-286">The following example tries to parse each element in a string array by using a number of <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex2.cs#2)]
 [!code-vb[System.UInt32.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb29-287"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-287"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ccb29-288"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-288"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ccb29-289">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-289">-or-</span></span>  
  
 <span data-ttu-id="ccb29-290"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-290"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="ccb29-291"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-291"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="ccb29-292"><paramref name="s" /> は <see cref="F:System.UInt32.MinValue" /> 未満の数値か、<see cref="F:System.UInt32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-292"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="ccb29-293">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-293">-or-</span></span>  
  
 <span data-ttu-id="ccb29-294"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-294"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-295">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-295">A string that represents the number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb29-296"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-296">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="ccb29-297">指定したカルチャ固有の書式による数値の文字列形式を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-297">Converts the string representation of a number in a specified culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb29-298"><paramref name="s" /> で指定した数値と等しい 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-298">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-299">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ccb29-299">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ccb29-300">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-300">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-301">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-301">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-302">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-302">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-303">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-303">Element</span></span>|<span data-ttu-id="ccb29-304">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-304">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-305">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-305">*ws*</span></span>|<span data-ttu-id="ccb29-306">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-306">Optional white space.</span></span>|  
|<span data-ttu-id="ccb29-307">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-307">*sign*</span></span>|<span data-ttu-id="ccb29-308">オプションの符号または負の符号場合`s`値 0 を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-308">An optional sign, or a negative sign if `s` represents the value zero.</span></span>|  
|<span data-ttu-id="ccb29-309">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-309">*digits*</span></span>|<span data-ttu-id="ccb29-310">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-310">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ccb29-311">S パラメーターを使用して解釈されます、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="ccb29-311">The s parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb29-312">符号なし整数値の 10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-312">In addition to the unsigned integer value's decimal digits, only leading and trailing spaces along with a leading sign is allowed.</span></span> <span data-ttu-id="ccb29-313">(マイナス記号が存在する場合`s`の値は 0、またはメソッドでのスローを表す必要があります、 <xref:System.OverflowException>)。使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-313">(If the negative sign is present, `s` must represent a value of zero, or the method throws an <xref:System.OverflowException>.) To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method.</span></span>  
  
 <span data-ttu-id="ccb29-314">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>の書式に関するカルチャ固有の情報を提供するオブジェクト`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-314">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ccb29-315">3 つの方法を使用する、`provider`パラメーター、解析操作にカスタムの書式情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-315">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="ccb29-316">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-316">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="ccb29-317">(その実装の<xref:System.IFormatProvider.GetFormat%2A>単にそれ自体を返します)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-317">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb29-318">渡すことができます、<xref:System.Globalization.CultureInfo>使用する書式のカルチャを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-318">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="ccb29-319">その<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式指定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-319">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="ccb29-320">カスタムを渡すことができます<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-320">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb29-321">その<xref:System.IFormatProvider.GetFormat%2A>メソッドはインスタンス化を返す必要があります、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-321">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb29-322">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-322">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-323">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-323">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="ccb29-324">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-324">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="ccb29-325">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-325">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="ccb29-326"><xref:System.Globalization.NumberFormatInfo>に属しているオブジェクト<xref:System.Globalization.CultureInfo>にオブジェクトが渡され、<xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29>をユーザーに変換するメソッドの入力、<xref:System.UInt32>値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-326">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.UInt32.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to a <xref:System.UInt32> value.</span></span>  
  
 [!code-csharp[ParseMethod#6](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#6)]
 [!code-vb[ParseMethod#6](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#6)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb29-327"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-327"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="ccb29-328"><paramref name="s" /> のスタイルが正しくありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-328"><paramref name="s" /> is not in the correct style.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="ccb29-329"><paramref name="s" /> は <see cref="F:System.UInt32.MinValue" /> 未満の数値か、<see cref="F:System.UInt32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-329"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
        <altmember cref="Overload:System.UInt32.TryParse" />
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As UInteger" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static uint Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig unsigned int32 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As UInteger" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static System::UInt32 Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-330">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-330">A string representing the number to convert.</span></span> <span data-ttu-id="ccb29-331">文字列は、<c>style</c> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-331">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ccb29-332"><c>s</c> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-332">A bitwise combination of enumeration values that indicates the style elements that can be present in <c>s</c>.</span></span> <span data-ttu-id="ccb29-333">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-333">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb29-334"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-334">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <summary><span data-ttu-id="ccb29-335">指定したスタイルおよびカルチャ固有の書式にある数値の文字列表記を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-335">Converts the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ccb29-336"><paramref name="s" /> で指定した数値と等しい 32 ビット符号なし整数。</span><span class="sxs-lookup"><span data-stu-id="ccb29-336">A 32-bit unsigned integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-337">`style`パラメーター スタイル要素を定義します (空白や正または負符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-337">The `style` parameter defines the style elements (such as white space or the positive or negative sign symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb29-338">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-338">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span>  
  
 <span data-ttu-id="ccb29-339">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-339">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-340">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-340">[*ws*][*$*][*sign*]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-341">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-341">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-342">場合`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-342">If `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-343">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-343">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-344">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-344">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-345">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-345">Element</span></span>|<span data-ttu-id="ccb29-346">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-346">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-347">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-347">*ws*</span></span>|<span data-ttu-id="ccb29-348">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-348">Optional white space.</span></span> <span data-ttu-id="ccb29-349">先頭に空白文字は使用できません`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-349">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb29-350">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ccb29-350">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb29-351">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ccb29-351">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object that is returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ccb29-352">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-352">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-353">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-353">*sign*</span></span>|<span data-ttu-id="ccb29-354">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-354">An optional sign.</span></span> <span data-ttu-id="ccb29-355">(メソッドをスロー、<xref:System.OverflowException>場合`s`に負の符号が含まれており、0 以外の数値を表します)。先頭に表示できる符号`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグの末尾を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-355">(The method throws an <xref:System.OverflowException> if `s` includes a negative sign and represents a non-zero number.) The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-356">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-356">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-357">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-357">*digits*</span></span>|<span data-ttu-id="ccb29-358">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-358">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ccb29-359">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb29-359">*.*</span></span>|<span data-ttu-id="ccb29-360">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-360">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb29-361">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-361">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-362">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-362">*fractional_digits*</span></span>|<span data-ttu-id="ccb29-363">数字 0 ~ 9 の 1 つ以上の出現場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ、またはそうでない場合は 0 の数字の 1 つまたは複数回出現します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-363">One or more occurrences of the digit 0-9 if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, or one or more occurrences of the digit 0 if it does not.</span></span> <span data-ttu-id="ccb29-364">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-364">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-365">E</span><span class="sxs-lookup"><span data-stu-id="ccb29-365">E</span></span>|<span data-ttu-id="ccb29-366">"E"または"E"文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-366">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb29-367">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-367">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-368">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-368">*exponential_digits*</span></span>|<span data-ttu-id="ccb29-369">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-369">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb29-370">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-370">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-371">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-371">*hexdigits*</span></span>|<span data-ttu-id="ccb29-372">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="ccb29-372">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ccb29-373">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-373">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully.</span></span> <span data-ttu-id="ccb29-374">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーが存在する可能性がありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-374">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="ccb29-375">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-375">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ccb29-376">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="ccb29-376">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="ccb29-377">使用できる要素`s`数字だけでなく</span><span class="sxs-lookup"><span data-stu-id="ccb29-377">Elements permitted in `s` in addition to digits</span></span>|  
|------------------------------------------|-----------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ccb29-378">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-378">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ccb29-379">小数点 (*.*) および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-379">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="ccb29-380">ただし、スタイルが含まれていない場合、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグを*fractional_digits*のみ 1 つ以上の数字が 0 ので構成されている必要があります。 それ以外の場合、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-380">However, if style does not include the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag, *fractional_digits* must consist of only one or more 0 digits; otherwise, an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ccb29-381">"E"または"E"文字は、と共に、指数表記法を示す*exponential_digits*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-381">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ccb29-382">*Ws*の先頭にある要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-382">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ccb29-383">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-383">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ccb29-384">前に符号*桁*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-384">A sign before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ccb29-385">後に記号*桁*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-385">A sign after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ccb29-386">かっこの前に、と後*桁*を負の値を示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-386">Parentheses before and after *digits* to indicate a negative value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ccb29-387">桁区切り記号 (*、*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-387">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ccb29-388">通貨 (*$*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-388">The currency (*$*) element.</span></span>|  
  
 <span data-ttu-id="ccb29-389">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、 `s` 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-389">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="ccb29-390">のみの他のフラグと組み合わせることができますが<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-390">The only other flags that can be combined with it are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb29-391">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、両方の空白のフラグが含まれている。)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-391">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb29-392">場合、`s`パラメーターは、16 進数の文字列形式は、その前に、装飾することはできません (など`0x`または`&h`) の 16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-392">If the `s` parameter is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb29-393">これにより、解析操作が例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-393">This causes the parse operation to throw an exception.</span></span>  
  
 <span data-ttu-id="ccb29-394">`provider`パラメーターは、<xref:System.IFormatProvider>実装が<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>の書式に関するカルチャ固有の情報を提供するオブジェクト`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-394">The `provider` parameter is an <xref:System.IFormatProvider> implementation whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ccb29-395">3 つの方法を使用する、`provider`パラメーター、解析操作にカスタムの書式情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-395">There are three ways to use the `provider` parameter to supply custom formatting information to the parse operation:</span></span>  
  
-   <span data-ttu-id="ccb29-396">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-396">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span> <span data-ttu-id="ccb29-397">(その実装の<xref:System.IFormatProvider.GetFormat%2A>単にそれ自体を返します)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-397">(Its implementation of <xref:System.IFormatProvider.GetFormat%2A> simply returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb29-398">渡すことができます、<xref:System.Globalization.CultureInfo>使用する書式のカルチャを指定するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-398">You can pass a <xref:System.Globalization.CultureInfo> object that specifies the culture whose formatting is to be used.</span></span> <span data-ttu-id="ccb29-399">その<xref:System.Globalization.CultureInfo.NumberFormat%2A>プロパティは、書式指定情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-399">Its <xref:System.Globalization.CultureInfo.NumberFormat%2A> property provides formatting information.</span></span>  
  
-   <span data-ttu-id="ccb29-400">カスタムを渡すことができます<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-400">You can pass a custom <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb29-401">その<xref:System.IFormatProvider.GetFormat%2A>メソッドはインスタンス化を返す必要があります、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-401">Its <xref:System.IFormatProvider.GetFormat%2A> method must instantiate and return the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb29-402">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-402">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-403">次の例では、<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>数値の文字列形式をさまざまなを 32 ビット符号なし整数値に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-403">The following example uses the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method to convert various string representations of numbers to 32-bit unsigned integer values.</span></span>  
  
 [!code-csharp[System.UInt32.Parse#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.parse/cs/parseex4.cs#4)]
 [!code-vb[System.UInt32.Parse#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.parse/vb/parseex4.vb#4)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.Parse(System.String)" />
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="ccb29-404"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-404"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ccb29-405"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-405"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ccb29-406">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-406">-or-</span></span>  
  
 <span data-ttu-id="ccb29-407"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-407"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="ccb29-408"><paramref name="s" /> の書式が、<paramref name="style" /> に準拠した書式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-408"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="ccb29-409"><paramref name="s" /> は <see cref="F:System.UInt32.MinValue" /> 未満の数値か、<see cref="F:System.UInt32.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-409"><paramref name="s" /> represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span>  
  
 <span data-ttu-id="ccb29-410">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-410">-or-</span></span>  
  
 <span data-ttu-id="ccb29-411"><paramref name="s" /> は 0 以外の小数部の桁を含んでいます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-411"><paramref name="s" /> includes non-zero, fractional digits.</span></span></exception>
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-412">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-412">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-413">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-413">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns>
          <span data-ttu-id="ccb29-414">現在のインスタンスの値がゼロでない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-414"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-415">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-415">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-416">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-416">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-417">推奨される代替手段が呼び出されて、<xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-417">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-418">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-418">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-419">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-419">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-420"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-420">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-421">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-421">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-422">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-422">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-423">推奨される代替手段が呼び出されて、<xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-423">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-424">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-424">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-425">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-425">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-426"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-426">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-427">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-427">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-428">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-428">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-429">推奨される代替手段が呼び出されて、<xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-429">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-430">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-430">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-431">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-431">This conversion is not supported.</span></span> <span data-ttu-id="ccb29-432">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-432">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-433">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-433">This conversion is not supported.</span></span> <span data-ttu-id="ccb29-434">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-434">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ccb29-435">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-435">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-436">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-436">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-437">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-437">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-438"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-438">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-439">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-439">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-440">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-440">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-441">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-441">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-442">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-442">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-443">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-443">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-444"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-444">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-445">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-445">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-446">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-446">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-447">推奨される代替手段が呼び出されて、<xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-447">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-448">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-448">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-449">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-449">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-450"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-450">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-451">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-451">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-452">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-452">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-453">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-453">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-454">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-454">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-455">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-455">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-456"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-456">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-457">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-457">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-458">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-458">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-459">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-459">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-460">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-460">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-461">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-461">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-462"><see cref="T:System.Int64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-462">The value of the current instance, converted to an <see cref="T:System.Int64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-463">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-463">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-464">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-464">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-465">推奨される代替手段が呼び出されて、<xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-465">The recommended alternative is to call the <xref:System.Convert.ToInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-466">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-466">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-467">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-467">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-468"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-468">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-469">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-469">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-470">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-470">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-471">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-471">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-472">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-472">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-473">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-473">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-474"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-474">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-475">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-475">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-476">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-476">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-477">推奨される代替手段が呼び出されて、<xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-477">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ccb29-478">この <see cref="T:System.UInt32" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="ccb29-478">The type to which to convert this <see cref="T:System.UInt32" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb29-479">戻り値の書式に関するカルチャ固有の情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="ccb29-479">An <see cref="T:System.IFormatProvider" /> implementation that supplies culture-specific information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="ccb29-480">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-480">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-481"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-481">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-482">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-483">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-483">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-484">推奨される代替手段が呼び出されて、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-484">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-485">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-485">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-486">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-486">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-487"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-487">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-488">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-488">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-489">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-489">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-490">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-490">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-491">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-491">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-492">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-492">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-493">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-493">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-494">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-494">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-495">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-495">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-496">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-496">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ccb29-497">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-497">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ccb29-498"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-498">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-499">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-499">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ccb29-500">これは、<xref:System.UInt32> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-500">It can be used only when the <xref:System.UInt32> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ccb29-501">推奨される代替手段が呼び出されて、<xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-501">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.UInt32%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb29-502">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-502">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ccb29-503">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-503">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="ccb29-504">0 から 9 までの一連の数字から構成され、符号または先行ゼロを含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ccb29-504">The string representation of the value of this instance, consisting of a sequence of digits ranging from 0 to 9, without a sign or leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-505"><xref:System.UInt32.ToString>メソッドの形式、 <xref:System.UInt32> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-505">The <xref:System.UInt32.ToString> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="ccb29-506">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.UInt32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-506">If you want to specify a different format or culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb29-507">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ccb29-507">To use format</span></span>|<span data-ttu-id="ccb29-508">カルチャの</span><span class="sxs-lookup"><span data-stu-id="ccb29-508">For culture</span></span>|<span data-ttu-id="ccb29-509">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-509">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb29-510">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-510">Default ("G") format</span></span>|<span data-ttu-id="ccb29-511">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-511">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ccb29-512">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-512">A specific format</span></span>|<span data-ttu-id="ccb29-513">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-513">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="ccb29-514">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-514">A specific format</span></span>|<span data-ttu-id="ccb29-515">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-515">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-516">次の例を表示、<xref:System.UInt32>既定により値<xref:System.UInt32.ToString>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-516">The following example displays a <xref:System.UInt32> value by using the default <xref:System.UInt32.ToString> method.</span></span> <span data-ttu-id="ccb29-517">文字列形式も表示されます、<xref:System.UInt32>をいくつかの標準書式指定子を使用して結果の値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-517">It also displays the string representations of the <xref:System.UInt32> value that results from using some standard format specifiers.</span></span> <span data-ttu-id="ccb29-518">例は、EN-US カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-518">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring1.cs#1)]
 [!code-vb[System.UInt32.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ccb29-519">カルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-519">An object that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ccb29-520">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-520">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ccb29-521">0 から 9 までの一連の数字で構成され、符号も先行ゼロも含まない、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ccb29-521">The string representation of the value of this instance, which consists of a sequence of digits ranging from 0 to 9, without a sign or leading zeros.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-522"><xref:System.UInt32.ToString%28System.IFormatProvider%29>メソッドの形式、 <xref:System.UInt32> ("G"、または [全般]) の既定の値の形式を使用して、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-522">The <xref:System.UInt32.ToString%28System.IFormatProvider%29> method formats a <xref:System.UInt32> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ccb29-523">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<xref:System.UInt32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-523">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb29-524">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ccb29-524">To use format</span></span>|<span data-ttu-id="ccb29-525">カルチャの</span><span class="sxs-lookup"><span data-stu-id="ccb29-525">For culture</span></span>|<span data-ttu-id="ccb29-526">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-526">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb29-527">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-527">Default ("G") format</span></span>|<span data-ttu-id="ccb29-528">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-528">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="ccb29-529">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-529">A specific format</span></span>|<span data-ttu-id="ccb29-530">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-530">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
|<span data-ttu-id="ccb29-531">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-531">A specific format</span></span>|<span data-ttu-id="ccb29-532">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-532">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ccb29-533">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-533">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb29-534">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>カルチャに固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-534">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific formatting information.</span></span> <span data-ttu-id="ccb29-535">ただしのプロパティのいずれも、<xref:System.Globalization.NumberFormatInfo>一般数値書式指定子 ("G") でフォーマットするときに使用されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-535">However, none of the properties of the <xref:System.Globalization.NumberFormatInfo> are used when formatting with the general numeric format specifier ("G").</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-536">次の例では、インバリアント カルチャのいずれかを含む、いくつかの書式プロバイダーを使用して、16 ビット符号付き整数値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-536">The following example formats a 16-bit signed integer value by using several format providers, including one for the invariant culture.</span></span> <span data-ttu-id="ccb29-537">例の出力が書式設定された文字列がによって返されることを示しています、<xref:System.UInt32.ToString%28System.IFormatProvider%29>メソッドは、書式プロバイダーに関係なく同じです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-537">The output from the example illustrates that the formatted string returned by the <xref:System.UInt32.ToString%28System.IFormatProvider%29> method is the same regardless of the format provider.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring2.cs#2)]
 [!code-vb[System.UInt32.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ccb29-538">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-538">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="ccb29-539">このインスタンスの数値を、指定した書式を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-539">Converts the numeric value of this instance to its equivalent string representation using the specified format.</span></span></summary>
        <returns><span data-ttu-id="ccb29-540"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ccb29-540">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-541"><xref:System.UInt32.ToString%28System.String%29>メソッドの形式、<xref:System.UInt32>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>を現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-541">The <xref:System.UInt32.ToString%28System.String%29> method formats a <xref:System.UInt32> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="ccb29-542">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<xref:System.UInt32.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="ccb29-542">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb29-543">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ccb29-543">To use format</span></span>|<span data-ttu-id="ccb29-544">カルチャの</span><span class="sxs-lookup"><span data-stu-id="ccb29-544">For culture</span></span>|<span data-ttu-id="ccb29-545">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-545">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb29-546">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-546">Default ("G") format</span></span>|<span data-ttu-id="ccb29-547">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-547">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="ccb29-548">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-548">Default ("G") format</span></span>|<span data-ttu-id="ccb29-549">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-549">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ccb29-550">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-550">A specific format</span></span>|<span data-ttu-id="ccb29-551">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-551">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ccb29-552">`format`パラメーターに任意の有効なできます[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、または任意の組み合わせ[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-552">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ccb29-553">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.UInt32>オブジェクトは、一般書式指定子 ("G") でフォーマットします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-553">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="ccb29-554">場合`format`その他の値、メソッドがスローされますが、<xref:System.FormatException>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-554">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ccb29-555">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-555">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ccb29-556">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-556">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ccb29-557">.NET Framework における書式設定のサポートに関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-557">For more information about support for formatting in the .NET Framework, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ccb29-558">によって返される文字列の形式が決定されます、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-558">The format of the returned string is determined by the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span> <span data-ttu-id="ccb29-559">によって、`format`パラメーター、このオブジェクトは、桁区切り記号などのシンボルと、出力文字列に小数点記号を制御します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-559">Depending on the `format` parameter, this object controls symbols such as the group separator and the decimal point symbol in the output string.</span></span> <span data-ttu-id="ccb29-560">現在のカルチャ以外のカルチャの書式情報を提供するには、呼び出し、<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-560">To provide formatting information for cultures other than the current culture, call the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-561">次の例では、各標準書式指定文字列と一部のカスタム書式指定文字列を使用して、32 ビット符号なし整数値を表示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-561">The following example displays a 32-bit unsigned integer value by using each standard format string and some custom format strings.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring3.cs#3)]
 [!code-vb[System.UInt32.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb29-562"><paramref name="format" /> パラメーターが無効です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-562">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ccb29-563">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-563">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb29-564">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-564">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="ccb29-565">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-565">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ccb29-566"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ccb29-566">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-567"><xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドの形式、<xref:System.UInt32>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-567">The <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method formats a <xref:System.UInt32> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ccb29-568">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<xref:System.UInt32.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-568">If you want to use default format or culture settings, use the other overloads of the <xref:System.UInt32.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ccb29-569">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ccb29-569">To use format</span></span>|<span data-ttu-id="ccb29-570">カルチャの</span><span class="sxs-lookup"><span data-stu-id="ccb29-570">For culture</span></span>|<span data-ttu-id="ccb29-571">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-571">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ccb29-572">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-572">Default ("G") format</span></span>|<span data-ttu-id="ccb29-573">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-573">Default (current) culture</span></span>|<xref:System.UInt32.ToString>|  
|<span data-ttu-id="ccb29-574">既定値 ("G") 書式</span><span class="sxs-lookup"><span data-stu-id="ccb29-574">Default ("G") format</span></span>|<span data-ttu-id="ccb29-575">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-575">A specific culture</span></span>|<xref:System.UInt32.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ccb29-576">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ccb29-576">A specific format</span></span>|<span data-ttu-id="ccb29-577">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ccb29-577">Default (current) culture</span></span>|<xref:System.UInt32.ToString%28System.String%29>|  
  
 <span data-ttu-id="ccb29-578">`format`パラメーターに任意の有効なできます[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)、または任意の組み合わせ[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-578">The `format` parameter can be any valid [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), or any combination of [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span> <span data-ttu-id="ccb29-579">場合`format`と等しい<xref:System.String.Empty?displayProperty=nameWithType>または`null`、現在の戻り値<xref:System.UInt32>オブジェクトは、一般書式指定子 ("G") でフォーマットします。</span><span class="sxs-lookup"><span data-stu-id="ccb29-579">If `format` is equal to <xref:System.String.Empty?displayProperty=nameWithType> or is `null`, the return value of the current <xref:System.UInt32> object is formatted with the general format specifier ("G").</span></span> <span data-ttu-id="ccb29-580">場合`format`その他の値、メソッドがスローされますが、<xref:System.FormatException>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-580">If `format` is any other value, the method throws a <xref:System.FormatException>.</span></span>  
  
 <span data-ttu-id="ccb29-581">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-581">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ccb29-582">数値書式指定子の詳細については、次を参照してください。[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-582">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ccb29-583">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-583">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ccb29-584">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-584">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb29-585">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-585">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string returned by this method.</span></span> <span data-ttu-id="ccb29-586">ときに、<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>メソッドが呼び出され、呼び出し、`provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType>メソッド渡します、<xref:System.Type>を表すオブジェクト、<xref:System.Globalization.NumberFormatInfo>型です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-586">When the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method is invoked, it calls the `provider` parameter's <xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType> method and passes it a <xref:System.Type> object that represents the <xref:System.Globalization.NumberFormatInfo> type.</span></span> <span data-ttu-id="ccb29-587"><xref:System.IFormatProvider.GetFormat%2A>メソッドが戻ります、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在の書式設定情報を提供する<xref:System.UInt32>桁区切り記号や小数点記号などの値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-587">The <xref:System.IFormatProvider.GetFormat%2A> method then returns the <xref:System.Globalization.NumberFormatInfo> object that provides information for formatting the current <xref:System.UInt32> value, such as the group separator symbol or the decimal point symbol.</span></span> <span data-ttu-id="ccb29-588">3 つの方法を使用する、`provider`書式設定情報を指定するパラメーター、<xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="ccb29-588">There are three ways to use the `provider` parameter to supply formatting information to the <xref:System.UInt32.ToString%28System.String%2CSystem.IFormatProvider%29> method:</span></span>  
  
-   <span data-ttu-id="ccb29-589">渡すことができます、<xref:System.Globalization.CultureInfo>の書式情報を提供するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-589">You can pass a <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ccb29-590">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>そのカルチャの数値の書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-590">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ccb29-591">実際に渡すことができます<xref:System.Globalization.NumberFormatInfo>数値書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-591">You can pass the actual <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ccb29-592">(その実装の<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>自体を返すだけです)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-592">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb29-593">実装するカスタム オブジェクトを渡すことができます<xref:System.IFormatProvider>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-593">You can pass a custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb29-594">その<xref:System.IFormatProvider.GetFormat%2A>メソッドがインスタンス化し、返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-594">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb29-595">場合`provider`は`null`、に基づいて返される文字列の書式設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-595">If `provider` is `null`, the formatting of the returned string is based on the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-596">次の例は、標準の数値書式指定子と特定の番号を使用して、32 ビット符号なし整数値を表示<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-596">The following example displays a 32-bit unsigned integer value by using the standard numeric format specifiers and a number of specific <xref:System.Globalization.CultureInfo> objects.</span></span>  
  
 [!code-csharp[System.UInt32.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tostring/cs/tostring4.cs#4)]
 [!code-vb[System.UInt32.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tostring/vb/tostring4.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ccb29-597"><paramref name="format" /> パラメーターが無効です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-597">The <paramref name="format" /> parameter is invalid.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32&amp;" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ccb29-598">数値の文字列表記を、それと等価の 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-598">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ccb29-599">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-599">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.UInt32.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-600">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-600">A string that represents the number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="ccb29-601">このメソッドから制御が返されたとき、変換に成功した場合は、<c>s</c> に格納された数値と等価な 32 ビット符号なし整数値が格納されます。変換に失敗した場合は 0 が格納されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-601">When this method returns, contains the 32-bit unsigned integer value that is equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ccb29-602"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.UInt32.MinValue" /> より小さいか <see cref="F:System.UInt32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-602">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="ccb29-603">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-603">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ccb29-604">数値の文字列表記を、それと等価の 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-604">Tries to convert the string representation of a number to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ccb29-605">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-605">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="ccb29-606"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-606"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-607"><xref:System.UInt32.TryParse%2A>などのメソッドは、<xref:System.UInt32.Parse%2A>メソッド、点を除いて、変換が失敗した場合に、it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-607">The <xref:System.UInt32.TryParse%2A> method is like the <xref:System.UInt32.Parse%2A> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ccb29-608">このメソッドをテストする例外処理を使用する必要がある、<xref:System.FormatException>場合`s`無効なため、正常に解析することはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-608">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="ccb29-609">`s`パラメーターが、次の形式の 10 進数の文字列形式にする必要があります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-609">The `s` parameter should be the string representation of a decimal number in the following form:</span></span>  
  
 <span data-ttu-id="ccb29-610">[*ws*][*sign*]*digits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-610">[*ws*][*sign*]*digits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-611">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-611">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-612">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-612">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-613">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-613">Element</span></span>|<span data-ttu-id="ccb29-614">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-614">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-615">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-615">*ws*</span></span>|<span data-ttu-id="ccb29-616">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-616">Optional white space.</span></span>|  
|<span data-ttu-id="ccb29-617">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-617">*sign*</span></span>|<span data-ttu-id="ccb29-618">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-618">An optional sign.</span></span> <span data-ttu-id="ccb29-619">有効な符号文字がによって決定されます、<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType>現在のカルチャのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-619">Valid sign characters are determined by the <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType> properties of the current culture.</span></span>|  
|<span data-ttu-id="ccb29-620">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-620">*digits*</span></span>|<span data-ttu-id="ccb29-621">10 進数字の 0 から 9 までのシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-621">A sequence of decimal digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ccb29-622">`s`パラメーターを使用して解釈されます、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="ccb29-622">The `s` parameter is interpreted by using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ccb29-623">10 進数字以外には、先頭と末尾のスペースが先頭の符号と共にのみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-623">In addition to the decimal digits, only leading and trailing spaces with a leading sign are allowed.</span></span> <span data-ttu-id="ccb29-624">使用できるカルチャに固有の書式情報を持つスタイル要素を明示的に定義する`s`を呼び出し、<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-624">To explicitly define the style elements with the culture-specific formatting information that can be present in `s`, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb29-625">指定された文字列、`s`パラメーターは、任意の桁区切り記号または 10 進区切り記号を含めることはできず、小数部を持つことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-625">The string specified by the `s` parameter cannot contain any group separators or decimal separator, and it cannot have a fractional portion.</span></span>  
  
 <span data-ttu-id="ccb29-626">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>現在のシステム カルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-626">The `s` parameter is parsed by using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object for the current system culture.</span></span> <span data-ttu-id="ccb29-627">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ccb29-627">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType>.</span></span>  
  
 <span data-ttu-id="ccb29-628">このオーバー ロード内のすべての桁を解釈し、`s`として小数点以下桁数のパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-628">This overload interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="ccb29-629">16 進数の文字列表現を解析するには、呼び出し、<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>オーバー ロードを代用します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-629">To parse the string representation of a hexadecimal number, call the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> overload instead.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-630">次の例では、<xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29>文字列配列の各要素に対して 1 回のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-630">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.UInt32%40%29> method once for each element in a string array.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse1.cs#1)]
 [!code-vb[System.UInt32.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out uint result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] unsigned int32&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.UInt32.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.UInt32@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As UInteger) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] System::UInt32 % result);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.UInt32&amp;" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ccb29-631">変換する数値を表す文字列。</span><span class="sxs-lookup"><span data-stu-id="ccb29-631">A string that represents the number to convert.</span></span> <span data-ttu-id="ccb29-632">文字列は、<c>style</c> パラメーターで指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-632">The string is interpreted by using the style specified by the <c>style</c> parameter.</span></span></param>
        <param name="style"><span data-ttu-id="ccb29-633"><c>s</c> に許可されている書式を示す列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-633">A bitwise combination of enumeration values that indicates the permitted format of <c>s</c>.</span></span> <span data-ttu-id="ccb29-634">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-634">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ccb29-635"><c>s</c> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-635">An object that supplies culture-specific formatting information about <c>s</c>.</span></span></param>
        <param name="result"><span data-ttu-id="ccb29-636">変換が成功した場合、このメソッドが返されるときに、<c>s</c> に格納された数値と等しい 32 ビット符号なし整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-636">When this method returns, contains the 32-bit unsigned integer value equivalent to the number contained in <c>s</c>, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ccb29-637"><c>s</c> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、 <c>style</c> に準拠した形式ではない、または <see cref="F:System.UInt32.MinValue" /> より小さいか <see cref="F:System.UInt32.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-637">The conversion fails if the <c>s</c> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <c>style</c>, or represents a number that is less than <see cref="F:System.UInt32.MinValue" /> or greater than <see cref="F:System.UInt32.MaxValue" />.</span></span> <span data-ttu-id="ccb29-638">このパラメーターは初期化されていない状態で渡されています。<c>result</c> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-638">This parameter is passed uninitialized; any value originally supplied in <c>result</c> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ccb29-639">指定したスタイルおよびカルチャ固有の書式による数値の文字列形式を、それと等価な 32 ビット符号なし整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-639">Tries to convert the string representation of a number in a specified style and culture-specific format to its 32-bit unsigned integer equivalent.</span></span> <span data-ttu-id="ccb29-640">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-640">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns>
          <span data-ttu-id="ccb29-641"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ccb29-641"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ccb29-642"><xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>などのメソッドは、<xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29>メソッド、点を除いて、変換が失敗した場合に、it が例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-642">The <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method is like the <xref:System.UInt32.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29> method, except that it does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ccb29-643">このメソッドをテストする例外処理を使用する必要がある、<xref:System.FormatException>場合`s`無効なため、正常に解析されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-643">This method eliminates the need to use exception handling to test for a <xref:System.FormatException> if `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="ccb29-644">`style`パラメーター スタイル要素を定義します (空白や正または負符号) では許可されて、`s`解析操作が成功するためのパラメーターです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-644">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ccb29-645">ビット フラグの組み合わせを可能にする必要があります、<xref:System.Globalization.NumberStyles>列挙します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-645">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ccb29-646">値に応じて`style`、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-646">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-647">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-647">[*ws*][*$*][*sign*][*digits*,]*digits*[.*fractional_digits*][E[*sign*]*exponential_digits*][*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-648">角かっこ ([および]) は省略可能の項目です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-648">Items in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ccb29-649">またはの場合、`style`パラメーターが含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>、`s`パラメーターは、次の要素を含めることがあります。</span><span class="sxs-lookup"><span data-stu-id="ccb29-649">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ccb29-650">[*ws*]*hexdigits*[*ws*]</span><span class="sxs-lookup"><span data-stu-id="ccb29-650">[*ws*]*hexdigits*[*ws*]</span></span>  
  
 <span data-ttu-id="ccb29-651">次の表では、各要素について説明します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-651">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ccb29-652">要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-652">Element</span></span>|<span data-ttu-id="ccb29-653">説明</span><span class="sxs-lookup"><span data-stu-id="ccb29-653">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ccb29-654">*ws*</span><span class="sxs-lookup"><span data-stu-id="ccb29-654">*ws*</span></span>|<span data-ttu-id="ccb29-655">省略可能なホワイト スペースです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-655">Optional white space.</span></span> <span data-ttu-id="ccb29-656">先頭の空白文字が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、またはの末尾`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-656">White space can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ccb29-657">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ccb29-657">A culture-specific currency symbol.</span></span> <span data-ttu-id="ccb29-658">文字列内での位置がによって定義された、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="ccb29-658">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ccb29-659">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-659">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-660">*sign*</span><span class="sxs-lookup"><span data-stu-id="ccb29-660">*sign*</span></span>|<span data-ttu-id="ccb29-661">省略可能な符号の場合。</span><span class="sxs-lookup"><span data-stu-id="ccb29-661">An optional sign.</span></span> <span data-ttu-id="ccb29-662">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に表示されることができますフラグ、およびその`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-662">The sign can appear at the start of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-663">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-663">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ccb29-664">ただし、負の符号が存在する場合、`s`解析操作が成功するためのゼロの値を表すことができますのみです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-664">However, if the negative sign is present, `s` can only represent the value zero for the parse operation to succeed.</span></span>|  
|<span data-ttu-id="ccb29-665">*digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-665">*digits*</span></span>|<span data-ttu-id="ccb29-666">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-666">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ccb29-667">*、*</span><span class="sxs-lookup"><span data-stu-id="ccb29-667">*,*</span></span>|<span data-ttu-id="ccb29-668">カルチャ固有のグループの区切り記号。</span><span class="sxs-lookup"><span data-stu-id="ccb29-668">A culture-specific group separator.</span></span> <span data-ttu-id="ccb29-669">指定されたカルチャの桁区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-669">The group separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-670">*.*</span><span class="sxs-lookup"><span data-stu-id="ccb29-670">*.*</span></span>|<span data-ttu-id="ccb29-671">カルチャに固有の小数点記号です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-671">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ccb29-672">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-672">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-673">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-673">*fractional_digits*</span></span>|<span data-ttu-id="ccb29-674">数字の 0 の 1 つ以上の出現します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-674">One or more occurrences of the digit 0.</span></span> <span data-ttu-id="ccb29-675">小数部の桁が表示できる`s`場合にのみ、`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-675">Fractional digits can appear in `s` only if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-676">E</span><span class="sxs-lookup"><span data-stu-id="ccb29-676">E</span></span>|<span data-ttu-id="ccb29-677">"E"または"E"文字は、値を指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-677">The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</span></span> <span data-ttu-id="ccb29-678">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-678">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-679">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-679">*exponential_digits*</span></span>|<span data-ttu-id="ccb29-680">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ccb29-680">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ccb29-681">`s`場合、パラメーターは指数表記の数値を表すことができる`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="ccb29-681">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ccb29-682">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ccb29-682">*hexdigits*</span></span>|<span data-ttu-id="ccb29-683">一連の 0 f からまたは f 0 から 16 進数の数字</span><span class="sxs-lookup"><span data-stu-id="ccb29-683">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
 <span data-ttu-id="ccb29-684">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) が正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-684">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="ccb29-685">ほとんど残りの<xref:System.Globalization.NumberStyles>メンバーが存在する可能性がありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-685">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be present, but are not required to be present, in this input string.</span></span> <span data-ttu-id="ccb29-686">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在可能な要素に影響を与える`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-686">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ccb29-687">非複合`NumberStyles`値</span><span class="sxs-lookup"><span data-stu-id="ccb29-687">Non-composite `NumberStyles` values</span></span>|<span data-ttu-id="ccb29-688">数字以外の値で使用できる要素</span><span class="sxs-lookup"><span data-stu-id="ccb29-688">Elements permitted in value in addition to digits</span></span>|  
|------------------------------------------|-------------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ccb29-689">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="ccb29-689">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ccb29-690">小数点 (*.*) および*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-690">The decimal point (*.*) and *fractional_digits* elements.</span></span> <span data-ttu-id="ccb29-691">ただし、 *fractional_digits*のみ 1 つ以上の数字 0、またはメソッドを返しますので構成されている必要があります`false`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-691">However, *fractional_digits* must consist of only one or more 0 digits, or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ccb29-692">"E"または"E"文字は、と共に、指数表記法を示す*exponential_digits*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-692">The "e" or "E" character, which indicates exponential notation, along with *exponential_digits*.</span></span> <span data-ttu-id="ccb29-693">場合`s`の数値を表す、0 以外の小数部のコンポーネント、指数表記で持つことができません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-693">If `s` represents a number in exponential notation, it cannot have a non-zero, fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ccb29-694">*Ws*の先頭の要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-694">The *ws* element at the start of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ccb29-695">*Ws*の末尾に要素`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-695">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ccb29-696">*記号*の前に要素*桁*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-696">The *sign* element before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ccb29-697">*記号*要素の後に*桁*です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-697">The *sign* element after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ccb29-698">*記号*ゼロの数値を囲むかっこの形式での要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-698">The *sign* element in the form of parentheses enclosing a zero numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ccb29-699">桁区切り記号 (*、*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-699">The group separator (*,*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ccb29-700">通貨 (*$*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-700">The currency (*$*) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ccb29-701">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-701">All elements.</span></span> <span data-ttu-id="ccb29-702">ただし、 `s` 16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-702">However, `s` cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ccb29-703">*Ws*開始または終了の位置にある要素`s`、*記号*の開始時`s`、および小数点 (*.*) シンボル。</span><span class="sxs-lookup"><span data-stu-id="ccb29-703">The *ws* element at the start or end of `s`, *sign* at the start of `s`, and the decimal point (*.*) symbol.</span></span> <span data-ttu-id="ccb29-704">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-704">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ccb29-705">*Ws*、*記号*、桁区切り記号 (*、*)、および小数点 (*.*) 要素です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-705">The *ws*, *sign*, group separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ccb29-706">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="ccb29-706">All elements.</span></span> <span data-ttu-id="ccb29-707">ただし、 `s` 16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-707">However, `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ccb29-708">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、 `s` 16 進値でなければなりません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-708">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value.</span></span> <span data-ttu-id="ccb29-709">その他のフラグのみで使用可能な`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-709">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ccb29-710">(、<xref:System.Globalization.NumberStyles>列挙体には、複合スタイル<xref:System.Globalization.NumberStyles.HexNumber>、両方の空白のフラグが含まれている)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-710">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber>, that includes both white-space flags.)</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="ccb29-711">場合`s`文字列表現は、16 進数は、そのことはできません前に、装飾 (など`0x`または`&h`) の 16 進数として区別します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-711">If `s` is the string representation of a hexadecimal number, it cannot be preceded by any decoration (such as `0x` or `&h`) that differentiates it as a hexadecimal number.</span></span> <span data-ttu-id="ccb29-712">これにより、変換に失敗します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-712">This causes the conversion to fail.</span></span>  
  
 <span data-ttu-id="ccb29-713">`provider`パラメーターは、<xref:System.IFormatProvider>実装します。</span><span class="sxs-lookup"><span data-stu-id="ccb29-713">The `provider` parameter is an <xref:System.IFormatProvider> implementation.</span></span> <span data-ttu-id="ccb29-714">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>の書式に関するカルチャ固有の情報を提供するオブジェクト`s`です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-714">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ccb29-715">`provider`パラメーターは、次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-715">The `provider` parameter can be any one of the following:</span></span>  
  
-   <span data-ttu-id="ccb29-716">A<xref:System.Globalization.CultureInfo>の書式情報を提供するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-716">A <xref:System.Globalization.CultureInfo> object that represents the culture that supplies formatting information.</span></span> <span data-ttu-id="ccb29-717">その<xref:System.Globalization.CultureInfo.GetFormat%2A>メソッドを返します、<xref:System.Globalization.NumberFormatInfo>そのカルチャの数値の書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-717">Its <xref:System.Globalization.CultureInfo.GetFormat%2A> method returns the <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information for that culture.</span></span>  
  
-   <span data-ttu-id="ccb29-718">A<xref:System.Globalization.NumberFormatInfo>数値書式設定情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-718">A <xref:System.Globalization.NumberFormatInfo> object that provides numeric formatting information.</span></span> <span data-ttu-id="ccb29-719">(その実装の<xref:System.Globalization.NumberFormatInfo.GetFormat%2A>自体を返すだけです)。</span><span class="sxs-lookup"><span data-stu-id="ccb29-719">(Its implementation of <xref:System.Globalization.NumberFormatInfo.GetFormat%2A> just returns itself.)</span></span>  
  
-   <span data-ttu-id="ccb29-720">実装するカスタム オブジェクト<xref:System.IFormatProvider>です。</span><span class="sxs-lookup"><span data-stu-id="ccb29-720">A custom object that implements <xref:System.IFormatProvider>.</span></span> <span data-ttu-id="ccb29-721">その<xref:System.IFormatProvider.GetFormat%2A>メソッドがインスタンス化し、返します、<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ccb29-721">Its <xref:System.IFormatProvider.GetFormat%2A> method instantiates and returns the <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ccb29-722">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="ccb29-722">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ccb29-723">次の例では、<xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29>さまざまな文字列の数を持つメソッドと<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="ccb29-723">The following example calls the <xref:System.UInt32.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.UInt32%40%29> method with a number of different strings and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.UInt32.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.uint32.tryparse/cs/tryparse2.cs#2)]
 [!code-vb[System.UInt32.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.uint32.tryparse/vb/tryparse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <altCompliant cref="M:System.Int64.TryParse(System.String,System.Int64@)" />
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="ccb29-724"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-724"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
 <span data-ttu-id="ccb29-725">- または -</span><span class="sxs-lookup"><span data-stu-id="ccb29-725">-or-</span></span>  
  
 <span data-ttu-id="ccb29-726"><paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ccb29-726"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.UInt32.Parse(System.String)" />
        <altmember cref="M:System.UInt32.ToString" />
      </Docs>
    </Member>
  </Members>
</Type>