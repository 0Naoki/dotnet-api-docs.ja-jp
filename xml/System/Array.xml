<Type Name="Array" FullName="System.Array">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="e84e497cc9b3a9531978b8704b5e107ac8cfda55" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36435086" />
  </Metadata>
  <TypeSignature Language="C#" Value="public abstract class Array : ICloneable, System.Collections.IList, System.Collections.IStructuralComparable, System.Collections.IStructuralEquatable" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi abstract serializable beforefieldinit Array extends System.Object implements class System.Collections.ICollection, class System.Collections.IEnumerable, class System.Collections.IList, class System.Collections.IStructuralComparable, class System.Collections.IStructuralEquatable, class System.ICloneable" />
  <TypeSignature Language="DocId" Value="T:System.Array" />
  <TypeSignature Language="VB.NET" Value="Public MustInherit Class Array&#xA;Implements ICloneable, IList, IStructuralComparable, IStructuralEquatable" />
  <TypeSignature Language="C++ CLI" Value="public ref class Array abstract : ICloneable, System::Collections::IList, System::Collections::IStructuralComparable, System::Collections::IStructuralEquatable" />
  <TypeSignature Language="F#" Value="type Array = class&#xA;    interface ICloneable&#xA;    interface ICollection&#xA;    interface IList&#xA;    interface IEnumerable&#xA;    interface IStructuralComparable&#xA;    interface IStructuralEquatable" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.Object</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.Collections.IList</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.Collections.IStructuralEquatable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.ICloneable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="0cffc-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-101">Provides methods for creating, manipulating, searching, and sorting arrays, thereby serving as the base class for all arrays in the common language runtime.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-102"><xref:System.Array>クラスは、の一部、<xref:System.Collections>名前空間。</span><span class="sxs-lookup"><span data-stu-id="0cffc-102">The <xref:System.Array> class is not part of the <xref:System.Collections> namespaces.</span></span> <span data-ttu-id="0cffc-103">ただし、まだと見なされます、コレクションに基づいているため、<xref:System.Collections.IList>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-103">However, it is still considered a collection because it is based on the <xref:System.Collections.IList> interface.</span></span>  
  
 <span data-ttu-id="0cffc-104"><xref:System.Array>クラスは、配列をサポートする言語の実装で基底クラスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-104">The <xref:System.Array> class is the base class for language implementations that support arrays.</span></span> <span data-ttu-id="0cffc-105">ただし、システムとコンパイラから派生できる明示的に、<xref:System.Array>クラスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-105">However, only the system and compilers can derive explicitly from the <xref:System.Array> class.</span></span> <span data-ttu-id="0cffc-106">ユーザーは、言語によって提供される配列構造を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-106">Users should employ the array constructs provided by the language.</span></span>  
  
 <span data-ttu-id="0cffc-107">要素の値は、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-107">An element is a value in an <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-108">長さ、<xref:System.Array>に格納できる要素の合計数です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-108">The length of an <xref:System.Array> is the total number of elements it can contain.</span></span> <span data-ttu-id="0cffc-109">下限の境界、<xref:System.Array>最初の要素のインデックスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-109">The lower bound of an <xref:System.Array> is the index of its first element.</span></span> <span data-ttu-id="0cffc-110"><xref:System.Array>下限を持つことができますが、既定では 0 の下限の境界があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-110">An <xref:System.Array> can have any lower bound, but it has a lower bound of zero by default.</span></span> <span data-ttu-id="0cffc-111">インスタンスを作成するときに、別の下限を定義することができます、<xref:System.Array>クラスを使用して<xref:System.Array.CreateInstance%2A>です。多次元<xref:System.Array>各次元の下限を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-111">A different lower bound can be defined when creating an instance of the <xref:System.Array> class using <xref:System.Array.CreateInstance%2A>.A multidimensional <xref:System.Array> can have different bounds for each dimension.</span></span> <span data-ttu-id="0cffc-112">配列には、最大 32 次元を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-112">An array can have a maximum of 32 dimensions.</span></span>  
  
 <span data-ttu-id="0cffc-113">内のクラスとは異なり、<xref:System.Collections>名前空間、<xref:System.Array>固定容量があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-113">Unlike the classes in the <xref:System.Collections> namespaces, <xref:System.Array> has a fixed capacity.</span></span> <span data-ttu-id="0cffc-114">容量を増やす必要がありますを作成する新しい<xref:System.Array>必要な容量を持つオブジェクトを古い要素のコピー<xref:System.Array>を新しいオブジェクトを古い<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-114">To increase the capacity, you must create a new <xref:System.Array> object with the required capacity, copy the elements from the old <xref:System.Array> object to the new one, and delete the old <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-115">既定では、最大サイズ、 <xref:System.Array> 2 ギガバイト (GB)。</span><span class="sxs-lookup"><span data-stu-id="0cffc-115">By default, the maximum size of an <xref:System.Array> is 2 gigabytes (GB).</span></span> <span data-ttu-id="0cffc-116">64 ビット環境では、設定してサイズの制限を回避できます、`enabled`の属性、 [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md)構成要素を`true`実行時環境でします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-116">In a 64-bit environment, you can avoid the size restriction by setting the `enabled` attribute of the [gcAllowVeryLargeObjects](~/docs/framework/configure-apps/file-schema/runtime/gcallowverylargeobjects-element.md) configuration element to `true` in the run-time environment.</span></span> <span data-ttu-id="0cffc-117">ただし、配列が 40億要素の合計と 0X7FEFFFFF の特定のディメンション (0X7FFFFFC7 バイト配列および 1 バイト構造体の配列の場合) 内の最大のインデックスに制限できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-117">However, the array will still be limited to a total of 4 billion elements, and to a maximum index of 0X7FEFFFFF in any given dimension (0X7FFFFFC7 for byte arrays and arrays of single-byte structures).</span></span>  
  
 <span data-ttu-id="0cffc-118">1 次元配列の実装、 <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>、 <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>、 <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>、<xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType>と<xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType>ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-118">Single-dimensional arrays implement the <xref:System.Collections.Generic.IList%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.ICollection%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IEnumerable%601?displayProperty=nameWithType>, <xref:System.Collections.Generic.IReadOnlyList%601?displayProperty=nameWithType> and <xref:System.Collections.Generic.IReadOnlyCollection%601?displayProperty=nameWithType> generic interfaces.</span></span> <span data-ttu-id="0cffc-119">実装は実行時に、配列に提供され、その結果、ジェネリック インターフェイスに表示されないの宣言の構文、<xref:System.Array>クラスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-119">The implementations are provided to arrays at run time, and as a result, the generic interfaces do not appear in the declaration syntax for the <xref:System.Array> class.</span></span> <span data-ttu-id="0cffc-120">さらに、ジェネリック インターフェイスの種類 (明示的なインターフェイスの実装) の配列をキャストによってのみアクセス可能なインターフェイス メンバーの参照トピックではありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-120">In addition,  there are no reference topics for interface members that are accessible only by casting an array to the generic interface type (explicit interface implementations).</span></span> <span data-ttu-id="0cffc-121">これらのインターフェイスの 1 つの配列をキャストするときの注意すべき重要な点は、追加するメンバーが挿入、または、要素のスローを削除<xref:System.NotSupportedException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-121">The key thing to be aware of when you cast an array to one of these interfaces is that members which add, insert, or remove elements throw <xref:System.NotSupportedException>.</span></span>  
  
 <span data-ttu-id="0cffc-122"><xref:System.Type> オブジェクトは、配列型の宣言に関する情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-122"><xref:System.Type> objects provide information about array type declarations.</span></span> <span data-ttu-id="0cffc-123"><xref:System.Array> 同じ配列の型を持つオブジェクトが同じ<xref:System.Type>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0cffc-123"><xref:System.Array> objects with the same array type share the same <xref:System.Type> object.</span></span>  
  
 <span data-ttu-id="0cffc-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> <xref:System.Type.GetElementType%2A?displayProperty=nameWithType>で期待どおりの結果を返さない可能性があります<xref:System.Array>ため場合、配列は、型にキャスト<xref:System.Array>結果は配列ではなく、オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0cffc-124"><xref:System.Type.IsArray%2A?displayProperty=nameWithType> and <xref:System.Type.GetElementType%2A?displayProperty=nameWithType> might not return the expected results with <xref:System.Array> because if an array is cast to the type <xref:System.Array>, the result is an object, not an array.</span></span> <span data-ttu-id="0cffc-125">つまり、`typeof(System.Array).IsArray`返します`false`、および`typeof(System.Array).GetElementType`を返します`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-125">That is, `typeof(System.Array).IsArray` returns `false`, and `typeof(System.Array).GetElementType` returns `null`.</span></span>  
  
 <span data-ttu-id="0cffc-126"><xref:System.Array.Copy%2A?displayProperty=nameWithType>メソッドだけでなく配列間の同じ型が、さまざまな種類の標準的な配列間の要素のコピーです。 型キャストを自動的に処理します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-126">The <xref:System.Array.Copy%2A?displayProperty=nameWithType> method copies elements not only between arrays of the same type but also between standard arrays of different types; it handles type casting automatically.</span></span>  
  
 <span data-ttu-id="0cffc-127">一部のメソッドでなど<xref:System.Array.CreateInstance%2A>、 <xref:System.Array.Copy%2A>、 <xref:System.Array.CopyTo%2A>、 <xref:System.Array.GetValue%2A>、および<xref:System.Array.SetValue%2A>大容量の配列に対応するパラメーターとして 64 ビット整数値を許容するオーバー ロードを提供します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-127">Some methods, such as <xref:System.Array.CreateInstance%2A>, <xref:System.Array.Copy%2A>, <xref:System.Array.CopyTo%2A>, <xref:System.Array.GetValue%2A>, and <xref:System.Array.SetValue%2A>, provide overloads that accept 64-bit integers as parameters to accommodate large capacity arrays.</span></span> <span data-ttu-id="0cffc-128"><xref:System.Array.LongLength%2A> および<xref:System.Array.GetLongLength%2A>64 ビット整数の配列の長さを示すを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-128"><xref:System.Array.LongLength%2A> and <xref:System.Array.GetLongLength%2A> return 64-bit integers indicating the length of the array.</span></span>  
  
 <span data-ttu-id="0cffc-129"><xref:System.Array>並べ替えは保証されません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-129">The <xref:System.Array> is not guaranteed to be sorted.</span></span>  <span data-ttu-id="0cffc-130">並べ替える必要があります、<xref:System.Array>操作を実行する前に (など<xref:System.Array.BinarySearch%2A>) を必要とする、<xref:System.Array>並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-130">You must sort the <xref:System.Array> prior to performing operations (such as <xref:System.Array.BinarySearch%2A>) that require the <xref:System.Array> to be sorted.</span></span>  
  
 <span data-ttu-id="0cffc-131">使用して、<xref:System.Array>オブジェクトのネイティブ コード内のポインターではサポートされていませんがスローされます、<xref:System.NotSupportedException>のいくつかの方法です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-131">Using an <xref:System.Array> object of pointers in native code is not supported and will throw a <xref:System.NotSupportedException> for several methods.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-132">次のコード例に示す方法<xref:System.Array.Copy%2A?displayProperty=nameWithType>整数型の配列と型の配列の要素をコピー<xref:System.Object>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-132">The following code example shows how <xref:System.Array.Copy%2A?displayProperty=nameWithType> copies elements between an array of type integer and an array of type <xref:System.Object>.</span></span>  
  
 [!code-cpp[Classic Array Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source.cs#1)]
 [!code-vb[Classic Array Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0cffc-133">次のコード例は、作成し、初期化、<xref:System.Array>し、そのプロパティおよびその要素を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-133">The following code example creates and initializes an <xref:System.Array> and displays its properties and its elements.</span></span>  
  
 [!code-cpp[Classic Array Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array Example/CPP/source3.cpp#2)]
 [!code-csharp[Classic Array Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array Example/CS/source3.cs#2)]
 [!code-vb[Classic Array Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array Example/VB/source3.vb#2)]  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="0cffc-134">パブリック静的 (<see langword="Shared" /> Visual Basic で) この型のメンバーは、スレッド セーフであります。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-134">Public static (<see langword="Shared" /> in Visual Basic) members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="0cffc-135">インスタンス メンバーの場合は、スレッド セーフであるとは限りません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-135">Any instance members are not guaranteed to be thread safe.</span>
      </span>
      <span data-ttu-id="0cffc-136">この実装は同期済みは提供されません (スレッド セーフな) ラッパーを<see cref="T:System.Array" />。 ただし、.NET Framework のクラスがに基づいて<see cref="T:System.Array" />独自の同期されたバージョンを使用して、コレクションの提供、<see cref="P:System.Array.SyncRoot" />プロパティです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-136">This implementation does not provide a synchronized (thread safe) wrapper for an <see cref="T:System.Array" />; however, .NET Framework classes based on <see cref="T:System.Array" /> provide their own synchronized version of the collection using the <see cref="P:System.Array.SyncRoot" /> property.</span>
      </span>
      <span data-ttu-id="0cffc-137">コレクションの列挙は、本質的にスレッド セーフなプロシージャではありません。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-137">Enumerating through a collection is intrinsically not a thread-safe procedure.</span>
      </span>
      <span data-ttu-id="0cffc-138">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-138">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span>
      </span>
      <span data-ttu-id="0cffc-139">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span>
      <span class="sxs-lookup">
        <span data-stu-id="0cffc-139">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.Object" />
    <altmember cref="T:System.Type" />
  </Docs>
  <Members>
    <Member MemberName="AsReadOnly&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt; AsReadOnly&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Collections.ObjectModel.ReadOnlyCollection`1&lt;!!T&gt; AsReadOnly&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.AsReadOnly``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function AsReadOnly(Of T) (array As T()) As ReadOnlyCollection(Of T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static System::Collections::ObjectModel::ReadOnlyCollection&lt;T&gt; ^ AsReadOnly(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member AsReadOnly : 'T[] -&gt; System.Collections.ObjectModel.ReadOnlyCollection&lt;'T&gt;" Usage="System.Array.AsReadOnly array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.ObjectModel.ReadOnlyCollection&lt;T&gt;</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-140">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-140">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-141">The one-dimensional, zero-based array to wrap in a read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-142">Returns a read-only wrapper for the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-142">Returns a read-only wrapper for the specified array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-143">A read-only <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1" /> wrapper for the specified array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-144">配列へのすべての変更を防ぐためには、このラッパーを介してのみ配列を公開します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-144">To prevent any modifications to the array, expose the array only through this wrapper.</span></span>  
  
 <span data-ttu-id="0cffc-145">読み取り専用であるコレクションは、コレクションのコレクションの変更を防止するラッパーです。そのため、基になるコレクションの変更が加えられた、読み取り専用コレクションはそれらの変更を反映します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-145">A collection that is read-only is simply a collection with a wrapper that prevents modifying the collection; therefore, if changes are made to the underlying collection, the read-only collection reflects those changes.</span></span>  
  
 <span data-ttu-id="0cffc-146">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-146">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-147">次の例は、読み取り専用の配列をラップ<xref:System.Collections.ObjectModel.ReadOnlyCollection%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-147">The following example wraps an array in a read-only <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>.</span></span>  
  
 [!code-cpp[System.Array.AsReadOnly#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CPP/arrayasreadonly.cpp#1)]
 [!code-csharp[System.Array.AsReadOnly#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.AsReadOnly/CS/arrayasreadonly.cs#1)]
 [!code-vb[System.Array.AsReadOnly#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.AsReadOnly/VB/arrayasreadonly.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-148">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-148">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="BinarySearch">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-149">Searches a one-dimensional sorted <see cref="T:System.Array" /> for a value, using a binary search algorithm.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * obj -&gt; int" Usage="System.Array.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-150">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-151">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-151">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-152">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-153">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-154">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-155">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-156">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-157">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-157">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-158">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-158">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-159">場合、 <xref:System.Array> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-159">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-160">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-160">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-161">このインデックスが 1 つである場合、配列の上限よりも大きい要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-161">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-162">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-162">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-163">いずれか`value`のすべての要素または`array`実装する必要があります、<xref:System.IComparable>比較に使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-163">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="0cffc-164">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-164">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-165">場合`value`を実装しません、<xref:System.IComparable>インターフェイスの要素の`array`用にテストされていません<xref:System.IComparable>で検索を開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-165">If`value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="0cffc-166">検索が実装されていない要素が発生した場合、例外がスローされます<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-166">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="0cffc-167">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-167">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-168">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-168">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-169">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-169">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-170">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-170">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-171">つまり、<xref:System.IComparable>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-171">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-172">このメソッドは、O (ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-172">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-173">次のコード例は、使用する方法を示しています。<xref:System.Array.BinarySearch%2A>の特定のオブジェクトを検索する、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-173">The following code example shows how to use <xref:System.Array.BinarySearch%2A> to locate a specific object in an <xref:System.Array>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-174">配列には、昇順で並べ替え順序では、要素が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-174">The array is created with its elements in ascending sort order.</span></span> <span data-ttu-id="0cffc-175"><xref:System.Array.BinarySearch%2A>メソッドには、昇順で並べ替えられて、配列が必要です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-175">The <xref:System.Array.BinarySearch%2A> method requires the array to be sorted in ascending order.</span></span>  
  
 [!code-cpp[Classic Array.BinarySearch Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.BinarySearch Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/CS/source.cs#1)]
 [!code-vb[Classic Array.BinarySearch Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.BinarySearch Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-176">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-176">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-177">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-177">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-178">
            <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-178">
              <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-179">
            <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-179">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * obj * System.Collections.IComparer -&gt; int" Usage="System.Array.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-180">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-181">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-181">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-182">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-183">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-183">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-184">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-184">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-185">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-185">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-186">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-186">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-187">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-187">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-188">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-188">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-189">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-189">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-190">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-190">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-191">場合、 <xref:System.Array> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-191">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-192">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-192">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-193">このインデックスが 1 つである場合、配列の上限よりも大きい要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-193">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-194">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-194">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-195">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-195">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="0cffc-196">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>として大文字と小文字の文字列検索を実行する比較子。</span><span class="sxs-lookup"><span data-stu-id="0cffc-196">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="0cffc-197">場合`comparer`は`null`の要素`array`指定して、指定した値と比較<xref:System.Collections.IComparer>実装します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-197">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="0cffc-198">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-198">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-199">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable>または指定した値によって、要素自体によって提供される実装します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-199">If`comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="0cffc-200">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-200">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-201">場合`comparer`は`null`と`value`を実装しません、<xref:System.IComparable>インターフェイスの要素の`array`用にテストされていません<xref:System.IComparable>で検索を開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-201">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="0cffc-202">検索が実装されていない要素が発生した場合、例外がスローされます<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-202">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="0cffc-203">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-203">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-204">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-204">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-205">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-205">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-206">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-206">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-207">つまり、<xref:System.IComparable>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-207">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-208">このメソッドは、O (ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-208">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-209">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-209">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-210">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-210">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-211">
            <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-211">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-212">
            <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-212">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * int * int * obj -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-213">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-213">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-214">The starting index of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-214">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-215">The length of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-215">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-216">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-216">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-217">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-217">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable" /> interface implemented by each element of the array and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-218">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-218">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-219">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-219">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-220">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-220">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-221">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-221">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-222">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-222">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-223">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-223">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-224">場合、 <xref:System.Array> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-224">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-225">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-225">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="0cffc-226">このインデックスが 1 つである場合、配列の上限よりも大きい要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-226">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-227">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-227">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-228">いずれか`value`のすべての要素または`array`実装する必要があります、<xref:System.IComparable>比較に使用されるインターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-228">Either `value` or every element of `array` must implement the <xref:System.IComparable> interface, which is used for comparisons.</span></span> <span data-ttu-id="0cffc-229">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-229">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-230">場合`value`を実装しません、<xref:System.IComparable>インターフェイスの要素の`array`用にテストされていません<xref:System.IComparable>で検索を開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-230">If `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="0cffc-231">検索が実装されていない要素が発生した場合、例外がスローされます<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-231">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="0cffc-232">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-232">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-233">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-233">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-234">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-234">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-235">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-235">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-236">つまり、<xref:System.IComparable>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-236">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-237">このメソッドは、O (ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-237">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-238">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-238">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-239">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-239">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-240">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-240">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-241">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-241">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-242">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-242">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-243">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-243">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-244">
            <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-244">
              <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch">
      <MemberSignature Language="C#" Value="public static int BinarySearch (Array array, int index, int length, object value, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch(class System.Array array, int32 index, int32 length, object value, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch(System.Array,System.Int32,System.Int32,System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int BinarySearch(Array ^ array, int index, int length, System::Object ^ value, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : Array * int * int * obj * System.Collections.IComparer -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-245">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-245">The sorted one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-246">The starting index of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-246">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-247">The length of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-247">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-248">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-248">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-249">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-249">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-250">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-250">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-251">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-251">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.IComparer" /> interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-252">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-252">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-253">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-253">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-254">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-254">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-255">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-255">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-256">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-256">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-257">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-257">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-258">場合、 <xref:System.Array> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-258">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-259">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-259">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-260">このインデックスが 1 つである場合、配列の上限よりも大きい要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-260">If this index is one greater than the upper bound of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-261">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-261">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-262">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-262">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="0cffc-263">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>として大文字と小文字の文字列検索を実行する比較子。</span><span class="sxs-lookup"><span data-stu-id="0cffc-263">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="0cffc-264">場合`comparer`は`null`の要素`array`指定して、指定した値と比較<xref:System.Collections.IComparer>実装します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-264">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.IComparer> implementation.</span></span> <span data-ttu-id="0cffc-265">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-265">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-266">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable>または指定した値によって、要素自体によって提供される実装します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-266">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable> implementation provided by the element itself or by the specified value.</span></span> <span data-ttu-id="0cffc-267">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-267">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-268">場合`comparer`は`null`と`value`を実装しません、<xref:System.IComparable>インターフェイスの要素の`array`用にテストされていません<xref:System.IComparable>で検索を開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-268">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable> interface, the elements of `array` are not tested for <xref:System.IComparable> before the search begins.</span></span> <span data-ttu-id="0cffc-269">検索が実装されていない要素が発生した場合、例外がスローされます<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-269">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable>.</span></span>  
  
 <span data-ttu-id="0cffc-270">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-270">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-271">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-271">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-272">`null` 常に参照型; と比較できます。そのため、比較で`null`を使用する場合に例外を生成しない<xref:System.IComparable>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-272">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-273">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-273">For every element tested, `value` is passed to the appropriate <xref:System.IComparable> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-274">つまり、<xref:System.IComparable>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-274">That is, the <xref:System.IComparable> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-275">このメソッドは、O (ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-275">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-276">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-276">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-277">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-277">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-278">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-278">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-279">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-279">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-280">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-280">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-281">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-281">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-282">
            <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-282">
              <paramref name="comparer" /> is <see langword="null" />, <paramref name="value" /> does not implement the <see cref="T:System.IComparable" /> interface, and the search encounters an element that does not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * 'T -&gt; int" Usage="System.Array.BinarySearch (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-283">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-283">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-284">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-284">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-285">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-285">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-286">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-286">Searches an entire one-dimensional sorted array for a specific element, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-287">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-287">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-288">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-288">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-289">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-289">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-290">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-290">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-291">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-291">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-292">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-292">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-293">場合`array`、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-293">If `array` does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-294">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-294">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-295">このインデックスが配列のサイズに等しい場合は、要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-295">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-296">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-296">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-297">`T` 実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスは、比較に使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-297">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="0cffc-298">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable%601>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-298">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-299">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-299">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-300">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-300">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-301">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-301">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-302">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable%601>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-302">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-303">つまり、<xref:System.IComparable%601>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-303">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-304">このメソッドは、O (ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-304">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-305">次のコード例を示しています、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>ジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-305">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="0cffc-306">任意の順序で、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-306">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="0cffc-307">配列が表示され、並べ替え、もう一度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-307">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="0cffc-308">配列を使用するために並べ替える必要があります、<xref:System.Array.BinarySearch%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-308">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-309">呼び出し、<xref:System.Array.Sort%2A>と<xref:System.Array.BinarySearch%2A>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-309">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-310">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-310">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="0cffc-311"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>ジェネリック メソッドのオーバー ロードが 2 つの文字列の検索に使用しに含まれていない、配列と 1 つを 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-311">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="0cffc-312">配列との戻り値、<xref:System.Array.BinarySearch%2A>メソッドに渡される、`ShowWhere`場合は、文字列が検出され、それ以外の場合、要素検索文字列が間に配列を使用した場合は、インデックス値を表示するジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-312">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="0cffc-313">インデックスは負の場合は、文字列が、配列であるため、`ShowWhere`メソッドにはビットごとの補数 (、~ c# および Visual C は、演算子`Xor`Visual Basic では-1) を検索するよりも大きい一覧の最初の要素のインデックスを取得する strいます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-313">The index is negative if the string is not in the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor`-1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-314">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-314">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-315">
            <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-315">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Array.BinarySearch (array, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-316">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-316">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-317">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-317">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-318">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-318">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-319">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-319">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-320">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-320">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-321">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-321">Searches an entire one-dimensional sorted array for a value using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-322">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-322">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-323">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-323">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-324">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-324">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-325">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-325">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-326">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-326">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-327">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-327">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-328">場合、 <xref:System.Array> 、指定した値を含まない、メソッドは、負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-328">If the <xref:System.Array> does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-329">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-329">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result to produce an index.</span></span> <span data-ttu-id="0cffc-330">このインデックスが配列のサイズに等しい場合は、要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-330">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-331">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-331">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-332">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-332">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="0cffc-333">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>として大文字と小文字の文字列検索を実行する比較子。</span><span class="sxs-lookup"><span data-stu-id="0cffc-333">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="0cffc-334">場合`comparer`は`null`の要素`array`指定して、指定した値と比較<xref:System.Collections.Generic.IComparer%601>ジェネリック インターフェイスの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-334">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="0cffc-335">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-335">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-336">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable%601>で提供されるジェネリック インターフェイス実装`T`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-336">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided by `T`.</span></span> <span data-ttu-id="0cffc-337">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable%601>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-337">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-338">場合`comparer`は`null`と`value`を実装しません、<xref:System.IComparable%601>ジェネリック インターフェイスでの要素`array`用にテストされていません<xref:System.IComparable%601>で検索を開始する前にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-338">If `comparer` is `null` and `value` does not implement the <xref:System.IComparable%601> generic interface, the elements of `array` are not tested for <xref:System.IComparable%601> before the search begins.</span></span> <span data-ttu-id="0cffc-339">検索が実装されていない要素が発生した場合、例外がスローされます<xref:System.IComparable%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-339">An exception is thrown if the search encounters an element that does not implement <xref:System.IComparable%601>.</span></span>  
  
 <span data-ttu-id="0cffc-340">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-340">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-341">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-341">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-342">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-342">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-343">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable%601>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-343">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-344">つまり、<xref:System.IComparable%601>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-344">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-345">このメソッドは、O (ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-345">This method is an O(log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-346">次の例で、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-346">The following example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="0cffc-347">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-347">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-348">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-348">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-349">配列が表示され、並べ替え、もう一度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-349">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="0cffc-350">配列を使用するために並べ替える必要があります、<xref:System.Array.BinarySearch%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-350">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-351">呼び出し、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>と<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-351">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-352">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-352">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="0cffc-353"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードが 2 つの文字列の検索に使用しに含まれていない、配列と 1 つを 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-353">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="0cffc-354">配列との戻り値、<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>メソッドに渡される、`ShowWhere`場合は、文字列が検出され、それ以外の場合、要素検索文字列が間に配列を使用した場合は、インデックス値を表示するジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-354">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="0cffc-355">インデックスが負の値、文字列は、n がない場合、配列のため、`ShowWhere`メソッドにはビットごとの補数 (、~ c# および Visual C は、演算子`Xor`Visual Basic では-1) が検索からより大きい一覧の最初の要素のインデックスを取得ng です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-355">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-356">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-356">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-357">
            <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-357">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-358">
            <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-358">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * int * int * 'T -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-359">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-359">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-360">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-360">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-361">The starting index of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-361">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-362">The length of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-362">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-363">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-363">The object to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-364">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-364">Searches a range of elements in a one-dimensional sorted array for a value, using the <see cref="T:System.IComparable`1" /> generic interface implemented by each element of the <see cref="T:System.Array" /> and by the specified value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-365">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-365">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-366">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-366">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-367">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-367">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-368">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-368">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-369">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-369">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-370">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-370">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-371">配列に指定された値が含まれていない場合、このメソッドは負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-371">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-372">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-372">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-373">このインデックスが配列のサイズに等しい場合は、要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-373">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-374">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-374">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-375">`T` 実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスは、比較に使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-375">`T` must implement the <xref:System.IComparable%601> generic interface, which is used for comparisons.</span></span> <span data-ttu-id="0cffc-376">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable%601>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-376">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-377">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-377">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-378">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-378">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-379">`null` 常に参照型; と比較できます。そのため、比較で`null`例外を生成しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-379">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-380">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable%601>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-380">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-381">つまり、<xref:System.IComparable%601>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-381">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-382">このメソッドは、O (ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-382">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-383">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-383">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-384">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-384">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-385">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-385">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-386">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-386">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-387">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-387">-or-  <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-388">
            <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-388">
              <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="BinarySearch&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int BinarySearch&lt;T&gt; (T[] array, int index, int length, T value, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 BinarySearch&lt;T&gt;(!!T[] array, int32 index, int32 length, !!T value, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.BinarySearch``1(``0[],System.Int32,System.Int32,``0,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function BinarySearch(Of T) (array As T(), index As Integer, length As Integer, value As T, comparer As IComparer(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int BinarySearch(cli::array &lt;T&gt; ^ array, int index, int length, T value, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member BinarySearch : 'T[] * int * int * 'T * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; int" Usage="System.Array.BinarySearch (array, index, length, value, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-389">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-389">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-390">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-390">The sorted one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-391">The starting index of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-391">The starting index of the range to search.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-392">The length of the range to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-392">The length of the range to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-393">The object to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-393">The object to search for.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-394">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-394">The <see cref="T:System.Collections.Generic.IComparer`1" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-395">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-395">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-396">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-396">Searches a range of elements in a one-dimensional sorted array for a value, using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-397">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-397">The index of the specified <paramref name="value" /> in the specified <paramref name="array" />, if <paramref name="value" /> is found; otherwise, a negative number.</span>
          </span>
          <span data-ttu-id="0cffc-398">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-398">If <paramref name="value" /> is not found and <paramref name="value" /> is less than one or more elements in <paramref name="array" />, the negative number returned is the bitwise complement of the index of the first element that is larger than <paramref name="value" />.</span>
          </span>
          <span data-ttu-id="0cffc-399">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-399">If <paramref name="value" /> is not found and <paramref name="value" /> is greater than all elements in <paramref name="array" />, the negative number returned is the bitwise complement of (the index of the last element plus 1).</span>
          </span>
          <span data-ttu-id="0cffc-400">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-400">If this method is called with a non-sorted <paramref name="array" />, the return value can be incorrect and a negative number could be returned, even if <paramref name="value" /> is present in <paramref name="array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-401">このメソッドは、負のインデックスを含む配列の検索をサポートしていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-401">This method does not support searching arrays that contain negative indexes.</span></span> <span data-ttu-id="0cffc-402">`array` このメソッドを呼び出す前に並べ替える必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-402">`array` must be sorted before calling this method.</span></span>  
  
 <span data-ttu-id="0cffc-403">配列に指定された値が含まれていない場合、このメソッドは負の整数を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-403">If the array does not contain the specified value, the method returns a negative integer.</span></span> <span data-ttu-id="0cffc-404">ビットごとの補数演算子を適用することができます (~、C# の場合は、 `Not` Visual Basic では) インデックスを生成するために負の値の結果にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-404">You can apply the bitwise complement operator (~ in C#, `Not` in Visual Basic) to the negative result  to produce an index.</span></span> <span data-ttu-id="0cffc-405">このインデックスが配列のサイズに等しい場合は、要素が存在しないよりも大きい`value`配列にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-405">If this index is equal to the size of the array, there are no elements larger than `value` in the array.</span></span> <span data-ttu-id="0cffc-406">それ以外の場合より大きい最初の要素のインデックス`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-406">Otherwise, it is the index of the first element that is larger than `value`.</span></span>  
  
 <span data-ttu-id="0cffc-407">比較演算子は、要素を比較する方法をカスタマイズします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-407">The comparer customizes how the elements are compared.</span></span> <span data-ttu-id="0cffc-408">たとえば、使用することができます、<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>として大文字と小文字の文字列検索を実行する比較子。</span><span class="sxs-lookup"><span data-stu-id="0cffc-408">For example, you can use a <xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType> as the comparer to perform case-insensitive string searches.</span></span>  
  
 <span data-ttu-id="0cffc-409">場合`comparer`は`null`の要素`array`指定して、指定した値と比較<xref:System.Collections.Generic.IComparer%601>ジェネリック インターフェイスの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-409">If `comparer` is not `null`, the elements of `array` are compared to the specified value using the specified <xref:System.Collections.Generic.IComparer%601> generic interface implementation.</span></span> <span data-ttu-id="0cffc-410">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります`comparer`以外の場合、結果が正しくない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-410">The elements of `array` must already be sorted in increasing value according to the sort order defined by `comparer`; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-411">場合`comparer`は`null`、比較が行われますを使用して、<xref:System.IComparable%601>ジェネリック インターフェイスの実装の種類指定した`T`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-411">If `comparer` is `null`, the comparison is done using the <xref:System.IComparable%601> generic interface implementation provided for type `T`.</span></span> <span data-ttu-id="0cffc-412">要素`array`既にによって定義されている並べ替え順序に従って値を昇順に並べ替える必要があります、<xref:System.IComparable%601>実装です。 それ以外の場合、結果正しく可能性がありますされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-412">The elements of `array` must already be sorted in increasing value according to the sort order defined by the <xref:System.IComparable%601> implementation; otherwise, the result might be incorrect.</span></span>  
  
 <span data-ttu-id="0cffc-413">重複する要素が許可されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-413">Duplicate elements are allowed.</span></span> <span data-ttu-id="0cffc-414">場合、<xref:System.Array>に等しい 2 つ以上の要素が含まれる`value`メソッドは、発生した回数、1 つだけとは限りません最初の 1 つのインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-414">If the <xref:System.Array> contains more than one element equal to `value`, the method returns the index of only one of the occurrences, and not necessarily the first one.</span></span>  
  
 <span data-ttu-id="0cffc-415">`null` 常に参照型; と比較できます。そのため、比較で`null`を使用する場合に例外を生成しない<xref:System.IComparable%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-415">`null` can always be compared with any other reference type; therefore, comparisons with `null` do not generate an exception when using <xref:System.IComparable%601>.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-416">テストするには、すべての要素に対して`value`、適切なに渡される<xref:System.IComparable%601>場合でも、実装`value`は`null`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-416">For every element tested, `value` is passed to the appropriate <xref:System.IComparable%601> implementation, even if `value` is `null`.</span></span> <span data-ttu-id="0cffc-417">つまり、<xref:System.IComparable%601>実装を指定された要素を比較する方法を決定`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-417">That is, the <xref:System.IComparable%601> implementation determines how a given element compares to `null`.</span></span>  
  
 <span data-ttu-id="0cffc-418">このメソッドは、O (ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-418">This method is an O(log `n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-419">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-419">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-420">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-420">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-421">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-421">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-422">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-422">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-423">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-423">-or-  <paramref name="comparer" /> is <see langword="null" />, and <paramref name="value" /> is of a type that is not compatible with the elements of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-424">
            <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-424">
              <paramref name="comparer" /> is <see langword="null" />, and <paramref name="T" /> does not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.Sort" />
      </Docs>
    </Member>
    <Member MemberName="Clear">
      <MemberSignature Language="C#" Value="public static void Clear (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Clear(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clear(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Clear(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Clear : Array * int * int -&gt; unit" Usage="System.Array.Clear (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-425">The array whose elements need to be cleared.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-425">The array whose elements need to be cleared.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-426">The starting index of the range of elements to clear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-426">The starting index of the range of elements to clear.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-427">The number of elements to clear.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-427">The number of elements to clear.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-428">Sets a range of elements in an array to the default value of each element type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-428">Sets a range of elements in an array to the default value of each element type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-429">このメソッドは、配列内の各要素を要素の型の既定値にリセットします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-429">This method resets each element in an array to the element type's default value.</span></span> <span data-ttu-id="0cffc-430">参照型の要素を設定 (など<xref:System.String>要素) を`null`、し、値型の要素を次の表に示すように既定値に設定します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-430">It sets elements of reference types (including <xref:System.String> elements) to `null`, and sets elements of value types to the default values shown in the following table.</span></span>  
  
|<span data-ttu-id="0cffc-431">型</span><span class="sxs-lookup"><span data-stu-id="0cffc-431">Type</span></span>|<span data-ttu-id="0cffc-432">[値]</span><span class="sxs-lookup"><span data-stu-id="0cffc-432">Value</span></span>|  
|----------|-----------|  
|<xref:System.Boolean>|`false`|  
|<span data-ttu-id="0cffc-433">すべての整数と浮動小数点数値型</span><span class="sxs-lookup"><span data-stu-id="0cffc-433">All integral and floating point numeric types</span></span>|<span data-ttu-id="0cffc-434">0 (ゼロ)</span><span class="sxs-lookup"><span data-stu-id="0cffc-434">0 (zero)</span></span>|  
|<xref:System.DateTime>|<xref:System.DateTime.MinValue?displayProperty=nameWithType>|  
|<span data-ttu-id="0cffc-435">他の値型</span><span class="sxs-lookup"><span data-stu-id="0cffc-435">Other value types</span></span>|<span data-ttu-id="0cffc-436">型のフィールドの既定値</span><span class="sxs-lookup"><span data-stu-id="0cffc-436">Default value of the type's fields</span></span>|  
  
 <span data-ttu-id="0cffc-437">範囲は、要素のラップが行ごとに多次元配列内にクリアされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-437">The range of cleared elements wrap from row to row in a multi-dimensional array.</span></span>  
  
 <span data-ttu-id="0cffc-438">このメソッドは、要素の値のみをクリアします。要素自体は削除されません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-438">This method only clears the values of the elements; it does not delete the elements themselves.</span></span> <span data-ttu-id="0cffc-439">配列が固定サイズです。そのため、要素を追加または削除することはできません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-439">An array has a fixed size; therefore, elements cannot be added or removed.</span></span>  
  
 <span data-ttu-id="0cffc-440">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-440">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-441">次の例では、<xref:System.Array.Clear%2A>メソッドを 1 次元、2 次元、および 3 次元の配列内の整数値をリセットします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-441">The following example uses the <xref:System.Array.Clear%2A> method to reset integer values in a one-dimensional, two-dimensional, and three-dimensional array.</span></span>  
  
 [!code-csharp[System.Array.Clear#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/example.cs#1)]
 [!code-vb[System.Array.Clear#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/example.vb#1)]  
  
 <span data-ttu-id="0cffc-442">次の例では定義、`TimeZoneTime`を含む構造体、<xref:System.TimeZoneInfo>フィールドおよび<xref:System.DateTimeOffset>フィールドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-442">The following example defines a `TimeZoneTime` structure that includes a <xref:System.TimeZoneInfo> field and a <xref:System.DateTimeOffset> field.</span></span> <span data-ttu-id="0cffc-443">呼び出して、<xref:System.Array.Clear%2A>の 2 つの要素の配列内の 1 つの要素を消去するメソッドを`TimeZoneTime`値。</span><span class="sxs-lookup"><span data-stu-id="0cffc-443">It then calls the <xref:System.Array.Clear%2A> method to clear one element in a two-element array of `TimeZoneTime` values.</span></span> <span data-ttu-id="0cffc-444">メソッドの既定値に消去された要素の値を設定する、<xref:System.TimeZoneInfo>オブジェクトは`null`、および既定値の<xref:System.DateTimeOffset>オブジェクトは<xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-444">The method sets the value of the cleared element to the default value of a <xref:System.TimeZoneInfo> object, which is `null`, and the default value of a <xref:System.DateTimeOffset> object, which is <xref:System.DateTimeOffset.MinValue?displayProperty=nameWithType>.</span></span>  
  
 [!code-csharp[System.Array.Clear#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clear/cs/clearstruct1.cs#2)]
 [!code-vb[System.Array.Clear#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clear/vb/clearstruct1.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-445">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-445">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-446">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-446">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-447">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-447">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-448">-or-  The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-448">-or-  The sum of <paramref name="index" /> and <paramref name="length" /> is greater than the size of <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Clone">
      <MemberSignature Language="C#" Value="public object Clone ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance object Clone() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Clone" />
      <MemberSignature Language="VB.NET" Value="Public Function Clone () As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Object ^ Clone();" />
      <MemberSignature Language="F#" Value="abstract member Clone : unit -&gt; obj&#xA;override this.Clone : unit -&gt; obj" Usage="array.Clone " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.ICloneable.Clone</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-449">Creates a shallow copy of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-449">Creates a shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-450">A shallow copy of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-450">A shallow copy of the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-451">簡易コピー、<xref:System.Array>の要素のみをコピー、<xref:System.Array>は参照型または値の型が、参照先のオブジェクトはコピーされませんがあるかどうか、します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-451">A shallow copy of an <xref:System.Array> copies only the elements of the <xref:System.Array>, whether they are reference types or value types, but it does not copy the objects that the references refer to.</span></span> <span data-ttu-id="0cffc-452">新しい参照<xref:System.Array>オブジェクトを指す同じ元の参照<xref:System.Array> をポイントします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-452">The references in the new <xref:System.Array> point to the same objects that the references in the original <xref:System.Array> point to.</span></span>  
  
 <span data-ttu-id="0cffc-453">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-453">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-454">クローンは、同じ<xref:System.Type>元<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-454">The clone is of the same <xref:System.Type> as the original <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-455">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Array.Length%2A>します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-455">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-456">次のコード例のクローン、<xref:System.Globalization.CultureInfo?displayProperty=nameWithType>配列し、シャロー コピーの動作を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-456">The following code example clones a <xref:System.Globalization.CultureInfo?displayProperty=nameWithType> array and demonstrates the behavior of a shallow copy.</span></span>  
  
 [!code-cpp[System.Array.Clone#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Clone/CPP/arrayclone.cpp#1)]
 [!code-csharp[System.Array.Clone#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Clone/CS/arrayclone.cs#1)]
 [!code-vb[System.Array.Clone#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Clone/VB/arrayclone.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="ConstrainedCopy">
      <MemberSignature Language="C#" Value="public static void ConstrainedCopy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ConstrainedCopy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ConstrainedCopy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void ConstrainedCopy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="F#" Value="static member ConstrainedCopy : Array * int * Array * int * int -&gt; unit" Usage="System.Array.ConstrainedCopy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="0cffc-457">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-457">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="0cffc-458">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-458">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="0cffc-459">The <see cref="T:System.Array" /> that receives the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-459">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="0cffc-460">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-460">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-461">A 32-bit integer that represents the number of elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-461">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-462">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-462">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="0cffc-463">Guarantees that all changes are undone if the copy does not succeed completely.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-463">Guarantees that all changes are undone if the copy does not succeed completely.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-464">`sourceArray`と`destinationArray`パラメーターが同じ次元数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-464">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span>  <span data-ttu-id="0cffc-465">`sourceArray`型と同じである必要がありますかから派生した、`destinationArray`入力です。 それ以外の場合、<xref:System.ArrayTypeMismatchException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-465">The `sourceArray` type must be the same as or derived from the `destinationArray` type; otherwise, an <xref:System.ArrayTypeMismatchException> is thrown.</span></span>  <span data-ttu-id="0cffc-466">異なり<xref:System.Array.Copy%2A>、<xref:System.Array.ConstrainedCopy%2A>任意の操作を実行する前に、配列型の互換性を確認します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-466">Unlike <xref:System.Array.Copy%2A>, <xref:System.Array.ConstrainedCopy%2A> verifies the compatibility of the array types before performing any operation.</span></span>  
  
 <span data-ttu-id="0cffc-467">多次元配列間でコピーする場合、配列動作長い 1 次元配列のように、行 (または列) が概念的にレイアウトされるエンド ツー エンドします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-467">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="0cffc-468">たとえば、配列要素がある 3 つの行 (列) 4 つの要素で、各コピー 6 つの配列の先頭から場合は、最初の行 (または列) の 4 つすべての要素と、2 番目の行 (または列) の最初の 2 つの要素コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-468">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="0cffc-469">3 番目の行 (または列の)、2 番目の要素からコピーを開始する`sourceIndex`さらに、2 番目の行 (または列) の長さ + 2、最初の行 (または列) の上限をする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-469">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="0cffc-470">場合`sourceArray`と`destinationArray`重なっているため、のこのメソッドの動作としての元の値`sourceArray`する前に一時的な場所に保存された`destinationArray`は上書きされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-470">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="0cffc-471">[C++]</span><span class="sxs-lookup"><span data-stu-id="0cffc-471">[C++]</span></span>  
  
 <span data-ttu-id="0cffc-472">このメソッドは、標準の C/C++ 関数`memmove`ではなく、`memcpy`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-472">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="0cffc-473">配列は、参照型の配列または値型の配列になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-473">The arrays can be reference-type arrays or value-type arrays.</span></span>  <span data-ttu-id="0cffc-474">場合`sourceArray`と`destinationArray`両方の参照型の配列または型の両方の配列は、 <xref:System.Object>、シャロー コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-474">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="0cffc-475">簡易コピー、<xref:System.Array>は、新しい<xref:System.Array>元と同じ要素への参照を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-475">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-476">要素自体または要素が参照はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-476">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="0cffc-477">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-477">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-478">このメソッドは、コピー中に例外をスローした場合、`destinationArray`は変更されていません。 したがって、<xref:System.Array.ConstrainedCopy%2A>制約された実行領域内で使用できます (<xref:System.Runtime.ConstrainedExecution.Cer>)。</span><span class="sxs-lookup"><span data-stu-id="0cffc-478">If this method throws an exception while copying, the `destinationArray` remains unchanged; therefore, <xref:System.Array.ConstrainedCopy%2A> can be used within a constrained execution region (<xref:System.Runtime.ConstrainedExecution.Cer>).</span></span>  
  
 <span data-ttu-id="0cffc-479">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-479">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-480">
            <paramref name="sourceArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-480">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-481">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-481">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-482">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-482">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-483">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-483">The <paramref name="sourceArray" /> type is neither the same as nor derived from the <paramref name="destinationArray" /> type.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-484">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-484">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-485">
            <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-485">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-486">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-486">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-487">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-487">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-488">
            <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-488">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-489">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-489">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.Copy" />
        <altmember cref="M:System.Array.Clone" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.ReliabilityContractAttribute" />
        <altmember cref="T:System.Runtime.ConstrainedExecution.Cer" />
      </Docs>
    </Member>
    <Member MemberName="ConvertAll&lt;TInput,TOutput&gt;">
      <MemberSignature Language="C#" Value="public static TOutput[] ConvertAll&lt;TInput,TOutput&gt; (TInput[] array, Converter&lt;TInput,TOutput&gt; converter);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!TOutput[] ConvertAll&lt;TInput, TOutput&gt;(!!TInput[] array, class System.Converter`2&lt;!!TInput, !!TOutput&gt; converter) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ConvertAll``2(``0[],System.Converter{``0,``1})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function ConvertAll(Of TInput, TOutput) (array As TInput(), converter As Converter(Of TInput, TOutput)) As TOutput()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TInput, typename TOutput&gt;&#xA; static cli::array &lt;TOutput&gt; ^ ConvertAll(cli::array &lt;TInput&gt; ^ array, Converter&lt;TInput, TOutput&gt; ^ converter);" />
      <MemberSignature Language="F#" Value="static member ConvertAll : 'Input[] * Converter&lt;'Input, 'Output&gt; -&gt; 'Output[]" Usage="System.Array.ConvertAll (array, converter)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>TOutput[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TInput" />
        <TypeParameter Name="TOutput" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="TInput[]" />
        <Parameter Name="converter" Type="System.Converter&lt;TInput,TOutput&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TInput">
          <span data-ttu-id="0cffc-490">元の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-490">The type of the elements of the source array.</span>
          </span>
        </typeparam>
        <typeparam name="TOutput">
          <span data-ttu-id="0cffc-491">変換後の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-491">The type of the elements of the target array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-492">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-492">The one-dimensional, zero-based <see cref="T:System.Array" /> to convert to a target type.</span>
          </span>
        </param>
        <param name="converter">
          <span data-ttu-id="0cffc-493">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-493">A <see cref="T:System.Converter`2" /> that converts each element from one type to another type.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-494">Converts an array of one type to an array of another type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-494">Converts an array of one type to an array of another type.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-495">An array of the target type containing the converted elements from the source array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-495">An array of the target type containing the converted elements from the source array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-496"><xref:System.Converter%602>オブジェクトを対象の型に変換するメソッドにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-496">The <xref:System.Converter%602> is a delegate to a method that converts an object to the target type.</span></span>  <span data-ttu-id="0cffc-497">要素`array`に個別に渡される、 <xref:System.Converter%602>、し、新しい配列に変換された要素が保存されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-497">The elements of `array` are individually passed to the <xref:System.Converter%602>, and the converted elements are saved in the new array.</span></span>  
  
 <span data-ttu-id="0cffc-498">ソース`array`は変更されません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-498">The source `array` remains unchanged.</span></span>  
  
 <span data-ttu-id="0cffc-499">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-499">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-500">次のコード例は、という名前のメソッドを定義`PointFToPoint`変換する、<xref:System.Drawing.PointF>に構造体、<xref:System.Drawing.Point>構造体。</span><span class="sxs-lookup"><span data-stu-id="0cffc-500">The following code example defines a method named `PointFToPoint` that converts a <xref:System.Drawing.PointF> structure to a <xref:System.Drawing.Point> structure.</span></span> <span data-ttu-id="0cffc-501">配列を作成し<xref:System.Drawing.PointF>構造と、作成、`Converter<PointF, Point>`委任 (`Converter(Of PointF, Point)` Visual Basic で) を表す、`PointFToPoint`メソッドにデリゲートを渡します、<xref:System.Array.ConvertAll%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-501">The example then creates an array of <xref:System.Drawing.PointF> structures, creates a `Converter<PointF, Point>` delegate (`Converter(Of PointF, Point)` in Visual Basic) to represent the `PointFToPoint` method, and passes the delegate to the <xref:System.Array.ConvertAll%2A> method.</span></span> <span data-ttu-id="0cffc-502"><xref:System.Array.ConvertAll%2A>メソッドは成功する入力の一覧の各要素、`PointFToPoint`メソッドの新しいリストに変換された要素を格納および<xref:System.Drawing.Point>構造体。</span><span class="sxs-lookup"><span data-stu-id="0cffc-502">The <xref:System.Array.ConvertAll%2A> method passes each element of the input list to the `PointFToPoint` method and puts the converted elements into a new list of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="0cffc-503">両方の一覧が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-503">Both lists are displayed.</span></span>  
  
 [!code-cpp[Array_ConvertAll#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_ConvertAll/cpp/source.cpp#1)]
 [!code-csharp[Array_ConvertAll#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_ConvertAll/cs/source.cs#1)]
 [!code-vb[Array_ConvertAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_ConvertAll/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-504">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-504">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-505">-or-  <paramref name="converter" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-505">-or-  <paramref name="converter" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Converter`2" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Copy">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-506">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-506">Copies a range of elements in one <see cref="T:System.Array" /> to another <see cref="T:System.Array" /> and performs type casting and boxing as required.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * Array * int -&gt; unit" Usage="System.Array.Copy (sourceArray, destinationArray, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="0cffc-507">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-507">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="0cffc-508">The <see cref="T:System.Array" /> that receives the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-508">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-509">A 32-bit integer that represents the number of elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-509">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-510">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-510">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="0cffc-511">The length is specified as a 32-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-511">The length is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-512">`sourceArray`と`destinationArray`パラメーターが同じ次元数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-512">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="0cffc-513">さらに、`destinationArray`次元されて既に必要があり、十分な数の要素にコピーしたデータを対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-513">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="0cffc-514">多次元配列間でコピーする場合、配列動作長い 1 次元配列のように、行 (または列) が概念的にレイアウトされるエンド ツー エンドします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-514">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="0cffc-515">たとえば、配列要素がある 3 つの行 (列) 4 つの要素で、各コピー 6 つの配列の先頭から場合は、最初の行 (または列) の 4 つすべての要素と、2 番目の行 (または列) の最初の 2 つの要素コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-515">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="0cffc-516">場合`sourceArray`と`destinationArray`重なっているため、のこのメソッドの動作としての元の値`sourceArray`する前に一時的な場所に保存された`destinationArray`は上書きされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-516">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="0cffc-517">[C++]</span><span class="sxs-lookup"><span data-stu-id="0cffc-517">[C++]</span></span>  
  
 <span data-ttu-id="0cffc-518">このメソッドは、標準の C/C++ 関数`memmove`ではなく、`memcpy`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-518">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="0cffc-519">配列は、参照型の配列または値型の配列になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-519">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="0cffc-520">型のダウン キャストを実行すると、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="0cffc-520">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="0cffc-521">参照型の配列から値型の配列にコピーするとき、各要素はボックス化解除され、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-521">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="0cffc-522">参照型の配列に値型の配列からコピーする場合は、各要素がボックス化され、コピーされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-522">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="0cffc-523">参照型または値型の配列からコピーするとき、 <xref:System.Object> 、配列、<xref:System.Object>がそれぞれの値または参照を保持するために作成され、その後、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-523">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="0cffc-524">コピーするとき、 <xref:System.Object> 、参照型または値型の配列と割り当て先の配列が可能であれば、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-524">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="0cffc-525">場合`sourceArray`と`destinationArray`両方の参照型の配列または型の両方の配列は、 <xref:System.Object>、シャロー コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-525">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="0cffc-526">簡易コピー、<xref:System.Array>は、新しい<xref:System.Array>元と同じ要素への参照を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-526">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-527">要素自体または要素が参照はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-527">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="0cffc-528">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-528">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-529"><xref:System.ArrayTypeMismatchException>の配列が互換性のない型である場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-529">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="0cffc-530">型の互換性の定義は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-530">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-531">型と互換性のあります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-531">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-532">値型と互換性が<xref:System.Object>とその値の型によって実装されたインターフェイス型を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-532">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="0cffc-533">値型では、直接そのインターフェイスを実装する場合にのみ、インターフェイスに接続されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-533">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="0cffc-534">切断されている型に互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-534">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="0cffc-535">2 つの組み込みの (定義済み) の値型に拡大変換元の型から変換先の型へのコピーがある場合に互換性がします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-535">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="0cffc-536">拡大変換では縮小変換には、情報が失われる可能性が一方については、失われます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-536">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="0cffc-537">たとえば、拡大変換は、32 ビット符号付き整数に変換する 64 ビット符号付き整数にし、縮小変換は、64 ビット符号付き整数に変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="0cffc-537">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="0cffc-538">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-538">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="0cffc-539">非組み込みの (ユーザー定義) の値の型とのみ互換性が自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-539">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-540">列挙型に暗黙的な変換がある<xref:System.Enum>とその基になる型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-540">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="0cffc-541">場合のすべての要素`sourceArray`キャスト (たとえば、派生クラスを基底クラスまたはオブジェクトへのインターフェイスから) が必要ですし、1 つまたは複数の要素に対応する型にキャストできません`destinationArray`、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-541">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="0cffc-542">このメソッドの状態のコピー中に例外をスローした場合`destinationArray`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-542">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-543">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-543">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-544">
            <paramref name="sourceArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-544">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-545">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-545">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-546">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-546">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-547">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-547">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-548">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-548">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-549">
            <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-549">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-550">
            <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-550">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-551">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-551">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, Array destinationArray, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, class System.Array destinationArray, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, destinationArray As Array, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, Array ^ destinationArray, long length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * Array * int64 -&gt; unit" Usage="System.Array.Copy (sourceArray, destinationArray, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="0cffc-552">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-552">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="0cffc-553">The <see cref="T:System.Array" /> that receives the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-553">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-554">A 64-bit integer that represents the number of elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-554">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="0cffc-555">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-555">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-556">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-556">Copies a range of elements from an <see cref="T:System.Array" /> starting at the first element and pastes them into another <see cref="T:System.Array" /> starting at the first element.</span>
          </span>
          <span data-ttu-id="0cffc-557">The length is specified as a 64-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-557">The length is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-558">`sourceArray`と`destinationArray`パラメーターが同じ次元数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-558">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="0cffc-559">さらに、`destinationArray`次元されて既に必要があり、十分な数の要素にコピーしたデータを対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-559">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="0cffc-560">多次元配列間でコピーする場合、配列動作長い 1 次元配列のように、行 (または列) が概念的にレイアウトされるエンド ツー エンドします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-560">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end to end.</span></span> <span data-ttu-id="0cffc-561">たとえば、配列要素がある 3 つの行 (列) 4 つの要素で、各コピー 6 つの配列の先頭から場合は、最初の行 (または列) の 4 つすべての要素と、2 番目の行 (または列) の最初の 2 つの要素コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-561">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span>  
  
 <span data-ttu-id="0cffc-562">場合`sourceArray`と`destinationArray`重なっているため、のこのメソッドの動作としての元の値`sourceArray`する前に一時的な場所に保存された`destinationArray`は上書きされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-562">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="0cffc-563">[C++]</span><span class="sxs-lookup"><span data-stu-id="0cffc-563">[C++]</span></span>  
  
 <span data-ttu-id="0cffc-564">このメソッドは、標準の C/C++ 関数`memmove`ではなく、`memcpy`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-564">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="0cffc-565">配列は、参照型の配列または値型の配列になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-565">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="0cffc-566">型のダウン キャストを実行すると、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="0cffc-566">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="0cffc-567">参照型の配列から値型の配列にコピーするとき、各要素はボックス化解除され、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-567">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="0cffc-568">参照型の配列に値型の配列からコピーする場合は、各要素がボックス化され、コピーされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-568">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="0cffc-569">参照型または値型の配列からコピーするとき、 <xref:System.Object> 、配列、<xref:System.Object>がそれぞれの値または参照を保持するために作成され、その後、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-569">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="0cffc-570">コピーするとき、 <xref:System.Object> 、参照型または値型の配列と割り当て先の配列が可能であれば、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-570">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="0cffc-571">場合`sourceArray`と`destinationArray`両方の参照型の配列または型の両方の配列は、 <xref:System.Object>、シャロー コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-571">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="0cffc-572">簡易コピー、<xref:System.Array>は、新しい<xref:System.Array>元と同じ要素への参照を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-572">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-573">要素自体または要素が参照はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-573">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="0cffc-574">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-574">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-575"><xref:System.ArrayTypeMismatchException>の配列が互換性のない型である場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-575">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="0cffc-576">型の互換性の定義は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-576">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-577">型と互換性のあります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-577">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-578">値型と互換性が<xref:System.Object>とその値の型によって実装されたインターフェイス型を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-578">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="0cffc-579">値型では、直接そのインターフェイスを実装する場合にのみ、インターフェイスに接続されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-579">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="0cffc-580">切断されている型に互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-580">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="0cffc-581">2 つの組み込みの (定義済み) の値型に拡大変換元の型から変換先の型へのコピーがある場合に互換性がします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-581">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="0cffc-582">拡大変換では縮小変換には、情報が失われる可能性が一方については、失われます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-582">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="0cffc-583">たとえば、拡大変換は、32 ビット符号付き整数に変換する 64 ビット符号付き整数にし、縮小変換は、64 ビット符号付き整数に変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="0cffc-583">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="0cffc-584">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-584">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="0cffc-585">非組み込みの (ユーザー定義) の値の型とのみ互換性が自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-585">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-586">列挙型に暗黙的な変換がある<xref:System.Enum>とその基になる型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-586">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="0cffc-587">場合のすべての要素`sourceArray`キャスト (たとえば、派生クラスを基底クラスまたはオブジェクトへのインターフェイスから) が必要ですし、1 つまたは複数の要素に対応する型にキャストできません`destinationArray`、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-587">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="0cffc-588">このメソッドの状態のコピー中に例外をスローした場合`destinationArray`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-588">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-589">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-589">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-590">
            <paramref name="sourceArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-590">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-591">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-591">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-592">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-592">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-593">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-593">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-594">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-594">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-595">
            <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-595">
              <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-596">
            <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-596">
              <paramref name="length" /> is greater than the number of elements in <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-597">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-597">-or-  <paramref name="length" /> is greater than the number of elements in <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, int sourceIndex, Array destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int32 sourceIndex, class System.Array destinationArray, int32 destinationIndex, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Integer, destinationArray As Array, destinationIndex As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, int sourceIndex, Array ^ destinationArray, int destinationIndex, int length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * int * Array * int * int -&gt; unit" Usage="System.Array.Copy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int32" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="0cffc-598">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-598">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="0cffc-599">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-599">A 32-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="0cffc-600">The <see cref="T:System.Array" /> that receives the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-600">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="0cffc-601">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-601">A 32-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-602">A 32-bit integer that represents the number of elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-602">A 32-bit integer that represents the number of elements to copy.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-603">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-603">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="0cffc-604">The length and the indexes are specified as 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-604">The length and the indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-605">`sourceArray`と`destinationArray`パラメーターが同じ次元数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-605">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="0cffc-606">さらに、`destinationArray`次元されて既に必要があり、十分な数の要素から始まる必要があります、`destinationIndex`にコピーしたデータを対応する位置。</span><span class="sxs-lookup"><span data-stu-id="0cffc-606">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="0cffc-607">多次元配列間でコピーする場合、配列動作長い 1 次元配列のように、行 (または列) が概念的にレイアウトされるエンド ツー エンドします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-607">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="0cffc-608">たとえば、配列要素がある 3 つの行 (列) 4 つの要素で、各コピー 6 つの配列の先頭から場合は、最初の行 (または列) の 4 つすべての要素と、2 番目の行 (または列) の最初の 2 つの要素コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-608">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="0cffc-609">3 番目の行 (または列の)、2 番目の要素からコピーを開始する`sourceIndex`さらに、2 番目の行 (または列) の長さ + 2、最初の行 (または列) の上限をする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-609">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="0cffc-610">場合`sourceArray`と`destinationArray`重なっているため、のこのメソッドの動作としての元の値`sourceArray`する前に一時的な場所に保存された`destinationArray`は上書きされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-610">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="0cffc-611">[C++]</span><span class="sxs-lookup"><span data-stu-id="0cffc-611">[C++]</span></span>  
  
 <span data-ttu-id="0cffc-612">このメソッドは、標準の C/C++ 関数`memmove`ではなく、`memcpy`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-612">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="0cffc-613">配列は、参照型の配列または値型の配列になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-613">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="0cffc-614">型のダウン キャストを実行すると、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="0cffc-614">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="0cffc-615">参照型の配列から値型の配列にコピーするとき、各要素はボックス化解除され、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-615">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="0cffc-616">参照型の配列に値型の配列からコピーする場合は、各要素がボックス化され、コピーされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-616">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="0cffc-617">参照型または値型の配列からコピーするとき、 <xref:System.Object> 、配列、<xref:System.Object>がそれぞれの値または参照を保持するために作成され、その後、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-617">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="0cffc-618">コピーするとき、 <xref:System.Object> 、参照型または値型の配列と割り当て先の配列が可能であれば、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-618">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="0cffc-619">場合`sourceArray`と`destinationArray`両方の参照型の配列または型の両方の配列は、 <xref:System.Object>、シャロー コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-619">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="0cffc-620">簡易コピー、<xref:System.Array>は、新しい<xref:System.Array>元と同じ要素への参照を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-620">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-621">要素自体または要素が参照はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-621">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="0cffc-622">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-622">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-623"><xref:System.ArrayTypeMismatchException>の配列が互換性のない型である場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-623">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="0cffc-624">型の互換性の定義は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-624">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-625">型と互換性のあります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-625">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-626">値型と互換性が<xref:System.Object>とその値の型によって実装されたインターフェイス型を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-626">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="0cffc-627">値型では、直接そのインターフェイスを実装する場合にのみ、インターフェイスに接続されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-627">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="0cffc-628">切断されている型に互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-628">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="0cffc-629">2 つの組み込みの (定義済み) の値型に拡大変換元の型から変換先の型へのコピーがある場合に互換性がします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-629">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="0cffc-630">拡大変換では縮小変換には、情報が失われる可能性が一方については、失われます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-630">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="0cffc-631">たとえば、拡大変換は、32 ビット符号付き整数に変換する 64 ビット符号付き整数にし、縮小変換は、64 ビット符号付き整数に変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="0cffc-631">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="0cffc-632">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-632">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="0cffc-633">非組み込みの (ユーザー定義) の値の型とのみ互換性が自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-633">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-634">列挙型に暗黙的な変換がある<xref:System.Enum>とその基になる型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-634">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="0cffc-635">場合のすべての要素`sourceArray`キャスト (たとえば、派生クラスを基底クラスまたはオブジェクトへのインターフェイスから) が必要ですし、1 つまたは複数の要素に対応する型にキャストできません`destinationArray`、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-635">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="0cffc-636">このメソッドの状態のコピー中に例外をスローした場合`destinationArray`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-636">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-637">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-637">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-638">次のコード例は、1 つをコピーする方法を示しています。<xref:System.Array>型の<xref:System.Object>別<xref:System.Array>整数型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-638">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-639">
            <paramref name="sourceArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-639">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-640">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-640">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-641">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-641">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-642">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-642">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-643">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-643">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-644">
            <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-644">
              <paramref name="sourceIndex" /> is less than the lower bound of the first dimension of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-645">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-645">-or-  <paramref name="destinationIndex" /> is less than the lower bound of the first dimension of <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-646">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-646">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-647">
            <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-647">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-648">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-648">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <Member MemberName="Copy">
      <MemberSignature Language="C#" Value="public static void Copy (Array sourceArray, long sourceIndex, Array destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Copy(class System.Array sourceArray, int64 sourceIndex, class System.Array destinationArray, int64 destinationIndex, int64 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Copy(System.Array,System.Int64,System.Array,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Copy (sourceArray As Array, sourceIndex As Long, destinationArray As Array, destinationIndex As Long, length As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Copy(Array ^ sourceArray, long sourceIndex, Array ^ destinationArray, long destinationIndex, long length);" />
      <MemberSignature Language="F#" Value="static member Copy : Array * int64 * Array * int64 * int64 -&gt; unit" Usage="System.Array.Copy (sourceArray, sourceIndex, destinationArray, destinationIndex, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="sourceArray" Type="System.Array" />
        <Parameter Name="sourceIndex" Type="System.Int64" />
        <Parameter Name="destinationArray" Type="System.Array" />
        <Parameter Name="destinationIndex" Type="System.Int64" />
        <Parameter Name="length" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="sourceArray">
          <span data-ttu-id="0cffc-649">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-649">The <see cref="T:System.Array" /> that contains the data to copy.</span>
          </span>
        </param>
        <param name="sourceIndex">
          <span data-ttu-id="0cffc-650">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-650">A 64-bit integer that represents the index in the <c>sourceArray</c> at which copying begins.</span>
          </span>
        </param>
        <param name="destinationArray">
          <span data-ttu-id="0cffc-651">The <see cref="T:System.Array" /> that receives the data.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-651">The <see cref="T:System.Array" /> that receives the data.</span>
          </span>
        </param>
        <param name="destinationIndex">
          <span data-ttu-id="0cffc-652">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-652">A 64-bit integer that represents the index in the <c>destinationArray</c> at which storing begins.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-653">A 64-bit integer that represents the number of elements to copy.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-653">A 64-bit integer that represents the number of elements to copy.</span>
          </span>
          <span data-ttu-id="0cffc-654">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-654">The integer must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-655">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-655">Copies a range of elements from an <see cref="T:System.Array" /> starting at the specified source index and pastes them to another <see cref="T:System.Array" /> starting at the specified destination index.</span>
          </span>
          <span data-ttu-id="0cffc-656">The length and the indexes are specified as 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-656">The length and the indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-657">`sourceArray`と`destinationArray`パラメーターが同じ次元数を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-657">The `sourceArray` and `destinationArray` parameters must have the same number of dimensions.</span></span> <span data-ttu-id="0cffc-658">さらに、`destinationArray`次元されて既に必要があり、十分な数の要素から始まる必要があります、`destinationIndex`にコピーしたデータを対応する位置。</span><span class="sxs-lookup"><span data-stu-id="0cffc-658">In addition, `destinationArray` must already have been dimensioned and must have a sufficient number of elements starting from the `destinationIndex` position to accommodate the copied data.</span></span>  
  
 <span data-ttu-id="0cffc-659">多次元配列間でコピーする場合、配列動作長い 1 次元配列のように、行 (または列) が概念的にレイアウトされるエンド ツー エンドします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-659">When copying between multidimensional arrays, the array behaves like a long one-dimensional array, where the rows (or columns) are conceptually laid end-to-end.</span></span> <span data-ttu-id="0cffc-660">たとえば、配列要素がある 3 つの行 (列) 4 つの要素で、各コピー 6 つの配列の先頭から場合は、最初の行 (または列) の 4 つすべての要素と、2 番目の行 (または列) の最初の 2 つの要素コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-660">For example, if an array has three rows (or columns) with four elements each, copying six elements from the beginning of the array would copy all four elements of the first row (or column) and the first two elements of the second row (or column).</span></span> <span data-ttu-id="0cffc-661">3 番目の行 (または列の)、2 番目の要素からコピーを開始する`sourceIndex`さらに、2 番目の行 (または列) の長さ + 2、最初の行 (または列) の上限をする必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-661">To start copying from the second element of the third row (or column), `sourceIndex` must be the upper bound of the first row (or column) plus the length of the second row (or column) plus two.</span></span>  
  
 <span data-ttu-id="0cffc-662">場合`sourceArray`と`destinationArray`重なっているため、のこのメソッドの動作としての元の値`sourceArray`する前に一時的な場所に保存された`destinationArray`は上書きされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-662">If `sourceArray` and `destinationArray` overlap, this method behaves as if the original values of `sourceArray` were preserved in a temporary location before `destinationArray` is overwritten.</span></span>  
  
 <span data-ttu-id="0cffc-663">[C++]</span><span class="sxs-lookup"><span data-stu-id="0cffc-663">[C++]</span></span>  
  
 <span data-ttu-id="0cffc-664">このメソッドは、標準の C/C++ 関数`memmove`ではなく、`memcpy`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-664">This method is equivalent to the standard C/C++ function `memmove`, not `memcpy`.</span></span>  
  
 <span data-ttu-id="0cffc-665">配列は、参照型の配列または値型の配列になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-665">The arrays can be reference-type arrays or value-type arrays.</span></span> <span data-ttu-id="0cffc-666">型のダウン キャストを実行すると、必要に応じて。</span><span class="sxs-lookup"><span data-stu-id="0cffc-666">Type downcasting is performed, as required.</span></span>  
  
-   <span data-ttu-id="0cffc-667">参照型の配列から値型の配列にコピーするとき、各要素はボックス化解除され、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-667">When copying from a reference-type array to a value-type array, each element is unboxed and then copied.</span></span> <span data-ttu-id="0cffc-668">参照型の配列に値型の配列からコピーする場合は、各要素がボックス化され、コピーされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-668">When copying from a value-type array to a reference-type array, each element is boxed and then copied.</span></span>  
  
-   <span data-ttu-id="0cffc-669">参照型または値型の配列からコピーするとき、 <xref:System.Object> 、配列、<xref:System.Object>がそれぞれの値または参照を保持するために作成され、その後、コピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-669">When copying from a reference-type or value-type array to an <xref:System.Object> array, an <xref:System.Object> is created to hold each value or reference and then copied.</span></span> <span data-ttu-id="0cffc-670">コピーするとき、 <xref:System.Object> 、参照型または値型の配列と割り当て先の配列が可能であれば、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-670">When copying from an <xref:System.Object> array to a reference-type or value-type array and the assignment is not possible, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
-   <span data-ttu-id="0cffc-671">場合`sourceArray`と`destinationArray`両方の参照型の配列または型の両方の配列は、 <xref:System.Object>、シャロー コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-671">If `sourceArray` and `destinationArray` are both reference-type arrays or are both arrays of type <xref:System.Object>, a shallow copy is performed.</span></span> <span data-ttu-id="0cffc-672">簡易コピー、<xref:System.Array>は、新しい<xref:System.Array>元と同じ要素への参照を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-672">A shallow copy of an <xref:System.Array> is a new <xref:System.Array> containing references to the same elements as the original <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-673">要素自体または要素が参照はコピーされません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-673">The elements themselves or anything referenced by the elements are not copied.</span></span> <span data-ttu-id="0cffc-674">詳細がこれに対し、コピー、<xref:System.Array>要素と要素が直接または間接的に参照するすべてコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-674">In contrast, a deep copy of an <xref:System.Array> copies the elements and everything directly or indirectly referenced by the elements.</span></span>  
  
 <span data-ttu-id="0cffc-675"><xref:System.ArrayTypeMismatchException>の配列が互換性のない型である場合にスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-675">An <xref:System.ArrayTypeMismatchException> is thrown if the arrays are of incompatible types.</span></span> <span data-ttu-id="0cffc-676">型の互換性の定義は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-676">Type compatibility is defined as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-677">型と互換性のあります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-677">A type is compatible with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-678">値型と互換性が<xref:System.Object>とその値の型によって実装されたインターフェイス型を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-678">A value type is compatible with <xref:System.Object> and with an interface type implemented by that value type.</span></span> <span data-ttu-id="0cffc-679">値型では、直接そのインターフェイスを実装する場合にのみ、インターフェイスに接続されていると見なされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-679">A value type is considered connected to an interface only if it implements that interface directly.</span></span> <span data-ttu-id="0cffc-680">切断されている型に互換性がありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-680">Disconnected types are not compatible.</span></span>  
  
-   <span data-ttu-id="0cffc-681">2 つの組み込みの (定義済み) の値型に拡大変換元の型から変換先の型へのコピーがある場合に互換性がします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-681">Two intrinsic (predefined) value types are compatible if copying from the source type to the destination type is a widening conversion.</span></span> <span data-ttu-id="0cffc-682">拡大変換では縮小変換には、情報が失われる可能性が一方については、失われます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-682">A widening conversion never loses information, whereas a narrowing conversion can lose information.</span></span> <span data-ttu-id="0cffc-683">たとえば、拡大変換は、32 ビット符号付き整数に変換する 64 ビット符号付き整数にし、縮小変換は、64 ビット符号付き整数に変換する 32 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="0cffc-683">For example, converting a 32-bit signed integer to a 64-bit signed integer is a widening conversion, and converting a 64-bit signed integer to a 32-bit signed integer is a narrowing conversion.</span></span> <span data-ttu-id="0cffc-684">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-684">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
-   <span data-ttu-id="0cffc-685">非組み込みの (ユーザー定義) の値の型とのみ互換性が自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-685">A nonintrinsic (user-defined) value type is compatible only with itself.</span></span>  
  
-   <span data-ttu-id="0cffc-686">列挙型に暗黙的な変換がある<xref:System.Enum>とその基になる型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-686">Enumerations have an implicit conversion to <xref:System.Enum> and to their underlying type.</span></span>  
  
 <span data-ttu-id="0cffc-687">場合のすべての要素`sourceArray`キャスト (たとえば、派生クラスを基底クラスまたはオブジェクトへのインターフェイスから) が必要ですし、1 つまたは複数の要素に対応する型にキャストできません`destinationArray`、<xref:System.InvalidCastException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-687">If every element in `sourceArray` requires a downcast (for example, from a base class to a derived class or from an interface to an object) and one or more elements cannot be cast to the corresponding type in `destinationArray`, an <xref:System.InvalidCastException> is thrown.</span></span>  
  
 <span data-ttu-id="0cffc-688">このメソッドの状態のコピー中に例外をスローした場合`destinationArray`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-688">If this method throws an exception while copying, the state of `destinationArray` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-689">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-689">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-690">次のコード例は、1 つをコピーする方法を示しています。<xref:System.Array>型の<xref:System.Object>別<xref:System.Array>整数型。</span><span class="sxs-lookup"><span data-stu-id="0cffc-690">The following code example shows how to copy from one <xref:System.Array> of type <xref:System.Object> to another <xref:System.Array> of type integer.</span></span>  
  
 [!code-cpp[Classic Array.Copy1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Copy1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Copy1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Copy1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-691">
            <paramref name="sourceArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-691">
              <paramref name="sourceArray" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-692">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-692">-or-  <paramref name="destinationArray" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-693">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-693">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> have different ranks.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-694">
            <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-694">
              <paramref name="sourceArray" /> and <paramref name="destinationArray" /> are of incompatible types.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-695">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-695">At least one element in <paramref name="sourceArray" /> cannot be cast to the type of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-696">
            <paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-696">
              <paramref name="sourceIndex" /> is outside the range of valid indexes for the <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-697">-or-  <paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-697">-or-  <paramref name="destinationIndex" /> is outside the range of valid indexes for the <paramref name="destinationArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-698">-or-  <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-698">-or-  <paramref name="length" /> is less than 0 or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-699">
            <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-699">
              <paramref name="length" /> is greater than the number of elements from <paramref name="sourceIndex" /> to the end of <paramref name="sourceArray" />.</span>
          </span>
          <span data-ttu-id="0cffc-700">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-700">-or-  <paramref name="length" /> is greater than the number of elements from <paramref name="destinationIndex" /> to the end of <paramref name="destinationArray" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.ConstrainedCopy(System.Array,System.Int32,System.Array,System.Int32,System.Int32)" />
        <altmember cref="M:System.Array.Clone" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CopyTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-701">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-701">Copies all the elements of the current one-dimensional array to the specified one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void CopyTo(class System.Array array, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void CopyTo(Array ^ array, int index);" />
      <MemberSignature Language="F#" Value="abstract member CopyTo : Array * int -&gt; unit&#xA;override this.CopyTo : Array * int -&gt; unit" Usage="array.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.ICollection.CopyTo(System.Array,System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-702">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-702">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-703">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-703">A 32-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-704">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-704">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="0cffc-705">The index is specified as a 32-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-705">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-706">このメソッドは、現在の配列インスタンスのすべての要素をコピー、`array`コピー先の配列、インデックスから始まります`index`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-706">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="0cffc-707">`array`コピー先の配列次元されて既に必要があり、十分な数の要素をコピーした要素に対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-707">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="0cffc-708">そうしないと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-708">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="0cffc-709">このメソッドは、サポート、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-709">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="0cffc-710">実装する場合<xref:System.Collections.ICollection?displayProperty=nameWithType>が使用して明示的に必要な<xref:System.Array.Copy%2A>余分な間接参照を回避します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-710">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="0cffc-711">このメソッドの状態のコピー中に例外をスローした場合`array`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-711">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-712">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Array.Length%2A>します。のみの簡易コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-712">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-713">次のコード例をコピーする方法を示しています、<xref:System.Array>別<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-713">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0cffc-714">次のコード例をコピーする方法を示しています、<xref:System.Array>別<xref:System.Array>下限が 0 にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-714">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="0cffc-715">なおソース全体<xref:System.Array>をコピーすると、ターゲット内の既存の要素を上書きする空の要素を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-715">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-716">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-716">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-717">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-717">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-718">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-718">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-719">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-719">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-720">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-720">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-721">The source array is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-721">The source array is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-722">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-722">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="CopyTo">
      <MemberSignature Language="C#" Value="public void CopyTo (Array array, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void CopyTo(class System.Array array, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CopyTo(System.Array,System.Int64)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void CopyTo(Array ^ array, long index);" />
      <MemberSignature Language="F#" Value="member this.CopyTo : Array * int64 -&gt; unit" Usage="array.CopyTo (array, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-723">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-723">The one-dimensional array that is the destination of the elements copied from the current array.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-724">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-724">A 64-bit integer that represents the index in <c>array</c> at which copying begins.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-725">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-725">Copies all the elements of the current one-dimensional array to the specified one-dimensional array starting at the specified destination array index.</span>
          </span>
          <span data-ttu-id="0cffc-726">The index is specified as a 64-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-726">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-727">このメソッドは、現在の配列インスタンスのすべての要素をコピー、`array`コピー先の配列、インデックスから始まります`index`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-727">This method copies all the elements of the current array instance to the `array` destination array, starting at index `index`.</span></span> <span data-ttu-id="0cffc-728">`array`コピー先の配列次元されて既に必要があり、十分な数の要素をコピーした要素に対応する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-728">The `array` destination array must already have been dimensioned and must have a sufficient number of elements to accommodate the copied elements.</span></span> <span data-ttu-id="0cffc-729">そうしないと、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-729">Otherwise, the method throws an exception.</span></span>  
  
 <span data-ttu-id="0cffc-730">このメソッドは、サポート、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-730">This method supports the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="0cffc-731">実装する場合<xref:System.Collections.ICollection?displayProperty=nameWithType>が使用して明示的に必要な<xref:System.Array.Copy%2A>余分な間接参照を回避します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-731">If implementing <xref:System.Collections.ICollection?displayProperty=nameWithType> is not explicitly required, use <xref:System.Array.Copy%2A> to avoid an extra indirection.</span></span>  
  
 <span data-ttu-id="0cffc-732">このメソッドの状態のコピー中に例外をスローした場合`array`が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-732">If this method throws an exception while copying, the state of `array` is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-733">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Array.Length%2A>します。のみの簡易コピーを実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-733">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.It performs a shallow copy only.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-734">次のコード例をコピーする方法を示しています、<xref:System.Array>別<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-734">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CopyTo Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CopyTo Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#1)]  
  
 <span data-ttu-id="0cffc-735">次のコード例をコピーする方法を示しています、<xref:System.Array>別<xref:System.Array>下限が 0 にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-735">The following code example shows how to copy an <xref:System.Array> to another <xref:System.Array> with a nonzero lower bound.</span></span> <span data-ttu-id="0cffc-736">なおソース全体<xref:System.Array>をコピーすると、ターゲット内の既存の要素を上書きする空の要素を含む<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-736">Note that the entire source <xref:System.Array> is copied, including empty elements that overwrite existing elements in the target <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CopyTo Example#2](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CPP/source.cpp#2)]
 [!code-csharp[Classic Array.CopyTo Example#2](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/CS/source.cs#2)]
 [!code-vb[Classic Array.CopyTo Example#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CopyTo Example/VB/source.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-737">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-737">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-738">
            <paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-738">
              <paramref name="index" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-739">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-739">
              <paramref name="array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-740">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-740">-or-  The number of elements in the source array is greater than the available number of elements from <paramref name="index" /> to the end of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArrayTypeMismatchException">
          <span data-ttu-id="0cffc-741">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-741">The type of the source <see cref="T:System.Array" /> cannot be cast automatically to the type of the destination <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-742">The source <see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-742">The source <see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-743">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-743">At least one element in the source <see cref="T:System.Array" /> cannot be cast to the type of destination <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Collections.ICollection" />
        <altmember cref="M:System.Array.Copy(System.Array,System.Array,System.Int64)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="CreateInstance">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-744">Initializes a new instance of the <see cref="T:System.Array" /> class.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-744">Initializes a new instance of the <see cref="T:System.Array" /> class.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-745">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-745">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-746">The size of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-746">The size of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-747">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-747">Creates a one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and length, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-748">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-748">A new one-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-749">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-749">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-750">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-750">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-751">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-751">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-752">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-752">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-753">次のコード例は、作成し、1 次元を初期化する方法を示しています。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-753">The following code example shows how to create and initialize a one-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-754">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-754">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-755">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-755">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-756">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-756">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-757">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-757">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-758">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-758">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-759">
            <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-759">
              <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params int[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;int&gt; ^ lengths);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-760">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-760">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="0cffc-761">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-761">An array of 32-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-762">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-762">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="0cffc-763">The dimension lengths are specified in an array of 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-763">The dimension lengths are specified in an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-764">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-764">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-765">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-765">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-766">内の要素の数、`lengths`配列で、新しいディメンションの数でなければなりません。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-766">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-767">各要素、`lengths`配列は、新たに対応する次元の長さを指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-767">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-768">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-768">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-769">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-769">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-770">このメソッドは、O (`n`) 操作では、ここで`n`のすべての値の積は、`lengths`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-770">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-771">次のコード例は、作成し、多次元を初期化する方法を示しています。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-771">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-772">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-772">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-773">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-773">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-774">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-774">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="0cffc-775">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-775">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-776">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-776">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-777">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-777">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-778">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-778">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-779">Any value in <paramref name="lengths" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-779">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, params long[] lengths);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int64[] lengths) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, ParamArray lengths As Long()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, ... cli::array &lt;long&gt; ^ lengths);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int64[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-780">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-780">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="0cffc-781">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-781">An array of 64-bit integers that represent the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
          <span data-ttu-id="0cffc-782">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-782">Each integer in the array must be between zero and <see cref="F:System.Int32.MaxValue" />, inclusive.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-783">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-783">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
          <span data-ttu-id="0cffc-784">The dimension lengths are specified in an array of 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-784">The dimension lengths are specified in an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-785">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-785">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-786">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-786">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-787">内の要素の数、`lengths`配列で、新しいディメンションの数でなければなりません。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-787">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-788">各要素、`lengths`配列は、新たに対応する次元の長さを指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-788">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-789">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-789">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-790">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-790">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-791">このメソッドは、O (`n`) 操作では、ここで`n`のすべての値の積は、`lengths`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-791">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-792">次のコード例は、作成し、多次元を初期化する方法を示しています。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-792">The following code example shows how to create and initialize a multidimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance3 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance3 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance3 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-793">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-793">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-794">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-794">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-795">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-795">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="0cffc-796">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-796">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-797">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-797">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-798">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-798">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-799">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-799">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-800">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-800">Any value in <paramref name="lengths" /> is less than zero or greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length1, length2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-801">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-801">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="0cffc-802">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-802">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="0cffc-803">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-803">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-804">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-804">Creates a two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-805">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-805">A new two-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-806">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-806">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-807">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-807">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-808">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-808">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-809">このメソッドは、O (`n`) 操作では、ここで`n`の製品は、`length1`と`length2`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-809">This method is an O(`n`) operation, where `n` is the product of `length1` and `length2`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-810">次のコード例は、作成し、2 次元を初期化する方法を示しています。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-810">The following code example shows how to create and initialize a two-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-811">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-811">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-812">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-812">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-813">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-813">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-814">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-814">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-815">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-815">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-816">
            <paramref name="length1" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-816">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-817">-or-  <paramref name="length2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-817">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int[] lengths, int[] lowerBounds);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32[] lengths, int32[] lowerBounds) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32[],System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, lengths As Integer(), lowerBounds As Integer()) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, cli::array &lt;int&gt; ^ lengths, cli::array &lt;int&gt; ^ lowerBounds);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int[] * int[] -&gt; Array" Usage="System.Array.CreateInstance (elementType, lengths, lowerBounds)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="lengths" Type="System.Int32[]" />
        <Parameter Name="lowerBounds" Type="System.Int32[]" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-818">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-818">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lengths">
          <span data-ttu-id="0cffc-819">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-819">A one-dimensional array that contains the size of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="lowerBounds">
          <span data-ttu-id="0cffc-820">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-820">A one-dimensional array that contains the lower bound (starting index) of each dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-821">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-821">Creates a multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with the specified lower bounds.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-822">A new multidimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length and lower bound for each dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-823">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-823">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-824">`lengths`と`lowerBounds`配列は同じ数の要素を持つ必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-824">The `lengths` and `lowerBounds` arrays must have the same number of elements.</span></span> <span data-ttu-id="0cffc-825">内の要素の数、`lengths`配列で、新しいディメンションの数でなければなりません。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-825">The number of elements in the `lengths` array must equal the number of dimensions in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-826">各要素、`lengths`配列は、新たに対応する次元の長さを指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-826">Each element of the `lengths` array must specify the length of the corresponding dimension in the new <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-827">各要素、`lowerBounds`配列は新たに対応する次元の下限を指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-827">Each element of the `lowerBounds` array must specify the lower bound of the corresponding dimension in the new <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-828">一般に、.NET Framework クラス ライブラリと多くのプログラミング言語は、0 以外の下限を処理しません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-828">Generally, the .NET Framework class library and many programming languages do not handle nonzero lower bounds.</span></span>  
  
 <span data-ttu-id="0cffc-829">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-829">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-830">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-830">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-831">このメソッドは、O (`n`) 操作では、ここで`n`のすべての値の積は、`lengths`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-831">This method is an O(`n`) operation, where `n` is the product of all values in `lengths`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-832">次のコード例は、作成し、多次元を初期化する方法を示しています。<xref:System.Array>下限を指定します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-832">The following code example shows how to create and initialize a multidimensional <xref:System.Array> with specified lower bounds.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance4 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance4 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance4 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-833">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-833">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-834">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-834">-or-  <paramref name="lengths" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-835">-or-  <paramref name="lowerBounds" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-835">-or-  <paramref name="lowerBounds" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-836">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-836">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
          <span data-ttu-id="0cffc-837">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-837">-or-  The <paramref name="lengths" /> array contains less than one element.</span>
          </span>
          <span data-ttu-id="0cffc-838">-or-  The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-838">-or-  The <paramref name="lengths" /> and <paramref name="lowerBounds" /> arrays do not contain the same number of elements.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-839">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-839">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-840">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-840">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-841">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-841">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-842">Any value in <paramref name="lengths" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-842">Any value in <paramref name="lengths" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-843">-or-  Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-843">-or-  Any value in <paramref name="lowerBounds" /> is very large, such that the sum of a dimension's lower bound and length is greater than <see cref="F:System.Int32.MaxValue" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="CreateInstance">
      <MemberSignature Language="C#" Value="public static Array CreateInstance (Type elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig class System.Array CreateInstance(class System.Type elementType, int32 length1, int32 length2, int32 length3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.CreateInstance(System.Type,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function CreateInstance (elementType As Type, length1 As Integer, length2 As Integer, length3 As Integer) As Array" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static Array ^ CreateInstance(Type ^ elementType, int length1, int length2, int length3);" />
      <MemberSignature Language="F#" Value="static member CreateInstance : Type * int * int * int -&gt; Array" Usage="System.Array.CreateInstance (elementType, length1, length2, length3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Array</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="elementType" Type="System.Type" />
        <Parameter Name="length1" Type="System.Int32" />
        <Parameter Name="length2" Type="System.Int32" />
        <Parameter Name="length3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="elementType">
          <span data-ttu-id="0cffc-844">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-844">The <see cref="T:System.Type" /> of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length1">
          <span data-ttu-id="0cffc-845">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-845">The size of the first dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length2">
          <span data-ttu-id="0cffc-846">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-846">The size of the second dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <param name="length3">
          <span data-ttu-id="0cffc-847">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-847">The size of the third dimension of the <see cref="T:System.Array" /> to create.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-848">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-848">Creates a three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> and dimension lengths, with zero-based indexing.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-849">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-849">A new three-dimensional <see cref="T:System.Array" /> of the specified <see cref="T:System.Type" /> with the specified length for each dimension, using zero-based indexing.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-850">ほとんどのクラスとは異なり<xref:System.Array>提供、<xref:System.Array.CreateInstance%2A>メソッド、遅延バインディング アクセスを許可する、パブリック コンス トラクターの代わりにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-850">Unlike most classes, <xref:System.Array> provides the <xref:System.Array.CreateInstance%2A> method, instead of public constructors, to allow for late bound access.</span></span>  
  
 <span data-ttu-id="0cffc-851">参照型の要素に初期化されます`null`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-851">Reference-type elements are initialized to `null`.</span></span> <span data-ttu-id="0cffc-852">値型の要素は、ゼロに初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-852">Value-type elements are initialized to zero.</span></span>  
  
 <span data-ttu-id="0cffc-853">このメソッドは、O (`n`) 操作、場所`n`の製品は、 `length1`、 `length2`、および`length3`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-853">This method is an O(`n`) operation, where `n` is the product of `length1`, `length2`, and `length3`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-854">次のコード例は、作成し、3 次元を初期化する方法を示しています。<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-854">The following code example shows how to create and initialize a three-dimensional <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.CreateInstance2 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.CreateInstance2 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.CreateInstance2 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-855">
            <paramref name="elementType" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-855">
              <paramref name="elementType" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-856">
            <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-856">
              <paramref name="elementType" /> is not a valid <see cref="T:System.Type" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-857">
            <paramref name="elementType" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-857">
              <paramref name="elementType" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-858">For example, <see cref="T:System.Void" /> is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-858">For example, <see cref="T:System.Void" /> is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-859">-or-  <paramref name="elementType" /> is an open generic type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-859">-or-  <paramref name="elementType" /> is an open generic type.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-860">
            <paramref name="length1" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-860">
              <paramref name="length1" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-861">-or-  <paramref name="length2" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-861">-or-  <paramref name="length2" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-862">-or-  <paramref name="length3" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-862">-or-  <paramref name="length3" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Empty&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] Empty&lt;T&gt; ();" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] Empty&lt;T&gt;() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Empty``1" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Empty(Of T) () As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ Empty();" />
      <MemberSignature Language="F#" Value="static member Empty : unit -&gt; 'T[]" Usage="System.Array.Empty " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters />
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-863">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-863">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <summary>
          <span data-ttu-id="0cffc-864">Returns an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-864">Returns an empty array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-865">Returns an empty <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-865">Returns an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Exists&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool Exists&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool Exists&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Exists(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool Exists(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member Exists : 'T[] * Predicate&lt;'T&gt; -&gt; bool" Usage="System.Array.Exists (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-866">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-866">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-867">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-867">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-868">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-868">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-869">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-869">Determines whether the specified array contains elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-870">
            <see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-870">
              <see langword="true" /> if <paramref name="array" /> contains one or more elements that match the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-871"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-871">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-872">要素`array`に個別に渡される、<xref:System.Predicate%601>一致が見つかったときに処理が停止しているとします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-872">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when a match is found.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-873">C# および Visual Basic の場合は、その必要はありませんを作成する、<xref:System.Predicate%601>明示的に委任します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-873">In C# and Visual Basic, it is not necessary to create the <xref:System.Predicate%601> delegate explicitly.</span></span> <span data-ttu-id="0cffc-874">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-874">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-875">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-875">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-876">次の例についての一致条件を指定する、<xref:System.Array.Exists%2A>メソッド usinglambda 式かどうか、地球から始まり、指定した文字または、渡された配列の地球が見つかったかどうかを確認します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-876">The following example specifies the match conditions for the <xref:System.Array.Exists%2A> method usinglambda expressions to check whether a planet starts with a given letter or whether the planet is found on the given array.</span></span>  
  
 [!code-csharp[System.Array.Exists#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists3.cs#3)]
 [!code-vb[System.Array.Exists#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists3.vb#3)]  
  
 <span data-ttu-id="0cffc-877">次の例では、<xref:System.Array.Exists%2A>メソッドを文字列配列の任意の名前が指定された文字で始まるかどうかを示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-877">The following example uses the <xref:System.Array.Exists%2A> method to indicate whether any names in a string array begin with a specified character.</span></span> <span data-ttu-id="0cffc-878">この例のインスタンスを作成、`StringSearcher`クラス コンス トラクターを検索する文字列を渡すことによってオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="0cffc-878">The example instantiates a `StringSearcher` object by passing the string to search for to its class constructor.</span></span> <span data-ttu-id="0cffc-879">`StringSearcher.StartsWith`メソッドと同じシグネチャを持つ、<xref:System.Predicate%601>を委任します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-879">The `StringSearcher.StartsWith` method has same signature as the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="0cffc-880">ときに、<xref:System.Array.Exists%2A>メソッドが呼び出されると、返されるまで、配列の各メンバーが、デリゲートに渡された`true`または配列内のすべての要素を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-880">When the <xref:System.Array.Exists%2A> method is called, each member of the array is passed to the delegate until it returns `true` or iterates all the elements in the array.</span></span>  
  
 [!code-csharp[System.Array.Exists#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists1.cs#1)]
 [!code-vb[System.Array.Exists#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists1.vb#1)]  
  
 <span data-ttu-id="0cffc-881">ことができますもラムダ式を使用ではなく、デリゲートのシグネチャを持つ対応するメソッドを明示的に定義します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-881">You can also use a lambda expression rather than explicitly define a method whose signature corresponds to that of the delegate.</span></span> <span data-ttu-id="0cffc-882">次の例が置き換えられます、`StringSearcher`クラスとその`StartsWith`ラムダ式を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-882">The following example replaces the `StringSearcher` class and its `StartsWith` method with a lambda expression.</span></span>  
  
 [!code-csharp[System.Array.Exists#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.exists/cs/exists2.cs#2)]
 [!code-vb[System.Array.Exists#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.exists/vb/exists2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-883">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-883">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-884">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-884">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member Fill : 'T[] * 'T -&gt; unit" Usage="System.Array.Fill (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Fill&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Fill&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Fill&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Fill``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Fill(Of T) (array As T(), value As T, startIndex As Integer, count As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Fill(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member Fill : 'T[] * 'T * int * int -&gt; unit" Usage="System.Array.Fill (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="value">To be added.</param>
        <param name="startIndex">To be added.</param>
        <param name="count">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Find&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T Find&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T Find&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Find(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T Find(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member Find : 'T[] * Predicate&lt;'T&gt; -&gt; 'T" Usage="System.Array.Find (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-885">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-885">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-886">The one-dimensional, zero-based array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-886">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-887">The predicate that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-887">The predicate that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-888">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-888">Searches for an element that matches the conditions defined by the specified predicate, and returns the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-889">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-889">The first element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-890"><xref:System.Predicate%601>メソッドまたはラムダ式を返すデリゲート`true`デリゲートまたはラムダ式で定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-890">The <xref:System.Predicate%601> is a delegate to a method or a lambda expression that returns `true` if the object passed to it matches the conditions defined in the delegate or lambda expression.</span></span>  <span data-ttu-id="0cffc-891">要素`array`に個別に渡される、 <xref:System.Predicate%601>、最初の要素で開始および終了の最後の要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-891">The elements of `array` are individually passed to the <xref:System.Predicate%601>, starting with the first element and ending with the last element.</span></span>  <span data-ttu-id="0cffc-892">一致が見つかった場合は、処理が停止しました。</span><span class="sxs-lookup"><span data-stu-id="0cffc-892">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="0cffc-893">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-893">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-894">次の例では、<xref:System.Predicate%601>を持つデリゲート、<xref:System.Array.Find%2A>ジェネリック メソッドの配列を検索する<xref:System.Drawing.Point>構造体。</span><span class="sxs-lookup"><span data-stu-id="0cffc-894">The following example uses a <xref:System.Predicate%601> delegate with the <xref:System.Array.Find%2A> generic method to search an array of <xref:System.Drawing.Point> structures.</span></span> <span data-ttu-id="0cffc-895">デリゲートが表すメソッド`ProductGT10`、返します`true`X と Y のフィールドの製品が 100,000 より大きい場合。</span><span class="sxs-lookup"><span data-stu-id="0cffc-895">The method the delegate represents, `ProductGT10`, returns `true` if the product of the X and Y fields is greater than 100,000.</span></span> <span data-ttu-id="0cffc-896"><xref:System.Array.Find%2A>メソッドがテスト条件を満たす最初のポイントを返す、配列の各要素に対してデリゲートを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-896">The <xref:System.Array.Find%2A> method calls the delegate for each element of the array, returning the first point that meets the test condition.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-897">Visual Basic および C# では、デリゲートを明示的に作成またはジェネリック メソッドの型引数を指定する必要はありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-897">Visual Basic and C# users do not have to create the delegate explicitly or specify the type argument of the generic method.</span></span> <span data-ttu-id="0cffc-898">コンパイラでは、指定したメソッドの引数から必要な型を決定します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-898">The compilers determine the necessary types from the method arguments you supply.</span></span>  
  
 [!code-csharp[System.Array.Find#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/source.cs#1)]
 [!code-vb[System.Array.Find#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/source.vb#1)]  
  
 <span data-ttu-id="0cffc-899">必要なシグネチャを持つメソッドを明示的に定義するのではなくインスタンス化する、<xref:System.Predicate%601>を委任して、デリゲートに渡すこと、<xref:System.Array.Find%2A>メソッド、ラムダ式を使用する一般的なは。</span><span class="sxs-lookup"><span data-stu-id="0cffc-899">Rather than explicitly defining a method with the necessary signature, instantiating a <xref:System.Predicate%601> delegate, and passing the delegate to the <xref:System.Array.Find%2A> method, it is customary to use a lambda expression.</span></span> <span data-ttu-id="0cffc-900">ラムダ式として使用する点を除いては、次の例は、1 つ前と同じ、`match`引数。</span><span class="sxs-lookup"><span data-stu-id="0cffc-900">The following example is identical to the previous one, except that it uses a lambda expression as the `match` argument.</span></span>  
  
 [!code-csharp[System.Array.Find#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.find/cs/lambda.cs#2)]
 [!code-vb[System.Array.Find#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.find/vb/lambda.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-901">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-901">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-902">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-902">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T[] FindAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T[] FindAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindAll(Of T) (array As T(), match As Predicate(Of T)) As T()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static cli::array &lt;T&gt; ^ FindAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindAll : 'T[] * Predicate&lt;'T&gt; -&gt; 'T[]" Usage="System.Array.FindAll (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T[]</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-903">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-903">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-904">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-904">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-905">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-905">The <see cref="T:System.Predicate`1" /> that defines the conditions of the elements to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-906">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-906">Retrieves all the elements that match the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-907">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-907">An <see cref="T:System.Array" /> containing all the elements that match the conditions defined by the specified predicate, if found; otherwise, an empty <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-908"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-908">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-909">要素`array`に個別に渡される、<xref:System.Predicate%601>条件に一致する要素が返される配列に保存されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-909">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and the elements that match the conditions are saved in the returned array.</span></span>  
  
 <span data-ttu-id="0cffc-910">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-910">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-911">次の例では、範囲は 0 ~ 1,000 値を持つ 50 個のランダムな数値の配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-911">The following example creates an array of 50 random numbers with values that can range from 0 to 1,000.</span></span> <span data-ttu-id="0cffc-912">呼び出して、<xref:System.Array.FindAll%2A>を 600 に 300 の値の範囲を返すラムダ式を持つメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-912">It then calls the <xref:System.Array.FindAll%2A> method with a lambda expression that returns the values that range from 300 to 600.</span></span> <span data-ttu-id="0cffc-913">ラムダ式のという名前のパラメーターが渡されることに注意してください`x`です。 渡される個々 の配列のメンバーを表すこの、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-913">Note that the lambda expression is passed a parameter named `x`;  this represents the individual array member that is passed to the <xref:System.Predicate%601>.</span></span> <span data-ttu-id="0cffc-914">またを注意してください。 ローカル`lBound`と`uBound`変数は、ラムダ式内でアクセス可能です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-914">Also note that the local `lBound` and `uBound` variables are accessible within the lambda expression.</span></span>  
  
 [!code-csharp[System.Array.FindAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.findall/cs/findall.cs#1)]
 [!code-vb[System.Array.FindAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.findall/vb/findall.vb#1)]  
  
 <span data-ttu-id="0cffc-915">次のコード例を示しています、 <xref:System.Array.Find%2A>、 <xref:System.Array.FindLast%2A>、および<xref:System.Array.FindAll%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-915">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="0cffc-916">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-916">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-917">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-917">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-918"><xref:System.Array.Find%2A>ジェネリック メソッドは、最初に、各要素を順番に渡してから、配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-918">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-919">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`要素"Amargasaurus"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-919">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-920">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-920">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-921">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-921">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-922"><xref:System.Array.FindLast%2A>末尾から旧バージョンとの配列を検索するジェネリック メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-922">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="0cffc-923">"Dilophosaurus"5 番目の位置にある要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-923">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="0cffc-924"><xref:System.Array.FindAll%2A>で"終了するすべての要素を含む配列を返すジェネリック メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-924">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="0cffc-925">要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-925">The elements are displayed.</span></span>  
  
 <span data-ttu-id="0cffc-926">このコード例も示します、<xref:System.Array.Exists%2A>と<xref:System.Array.TrueForAll%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-926">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-927">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-927">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-928">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-928">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-929">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-929">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the first occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-930">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-930">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-931">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-931">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-932">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-932">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-933">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-933">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-934">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-934">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-935"><xref:System.Array>はフォワード最初の要素を起点と最後の要素で終わる検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-935">The <xref:System.Array> is searched forward starting at the first element and ending at the last element.</span></span>  
  
 <span data-ttu-id="0cffc-936"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-936">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-937">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-937">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-938">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-938">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-939">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-939">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-940">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-940">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-941">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-941">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-942"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、各要素を順番に渡して、先頭から、配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-942">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-943">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の位置 1 にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-943">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-944">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-944">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-945">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-945">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-946"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から開始し、配列の末尾を続行する配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-946">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="0cffc-947">5 番目の位置にある要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-947">It finds the element at position 5.</span></span> <span data-ttu-id="0cffc-948">最後に、<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から 3 つの要素の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-948">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="0cffc-949">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-949">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-950">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-950">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-951">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-951">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-952">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-952">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-953">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-953">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-954">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-954">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-955">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-955">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-956">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-956">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the specified index to the last element.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-957">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-957">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-958"><xref:System.Array>転送を開始位置として検索`startIndex`と最後の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-958">The <xref:System.Array> is searched forward starting at `startIndex` and ending at the last element.</span></span>  
  
 <span data-ttu-id="0cffc-959"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-959">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-960">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-960">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-961">このメソッドは、O (`n`) 操作では、ここで`n`から要素の数は、`startIndex`の末尾に`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-961">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-962">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-962">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-963">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-963">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-964">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-964">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-965"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、各要素を順番に渡して、先頭から、配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-965">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-966">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の位置 1 にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-966">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-967">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-967">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-968">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-968">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-969"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から開始し、配列の末尾を続行する配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-969">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="0cffc-970">5 番目の位置にある要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-970">It finds the element at position 5.</span></span> <span data-ttu-id="0cffc-971">最後に、<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から 3 つの要素の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-971">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="0cffc-972">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-972">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-973">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-973">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-974">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-974">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-975">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-975">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindIndex : 'T[] * int * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindIndex (array, startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-976">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-976">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-977">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-977">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-978">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-978">The zero-based starting index of the search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-979">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-979">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-980">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-980">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-981">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-981">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the first occurrence within the range of elements in the <see cref="T:System.Array" /> that starts at the specified index and contains the specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-982">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-982">The zero-based index of the first occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-983"><xref:System.Array>転送を開始位置として検索が`startIndex`で終わる`startIndex`plus`count`から 1 を引いた場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-983">The <xref:System.Array> is searched forward starting at `startIndex` and ending at `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="0cffc-984"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-984">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-985">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-985">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-986">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-986">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-987">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-987">The following code example demonstrates all three overloads of the <xref:System.Array.FindIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-988">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-988">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-989">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-989">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-990"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、各要素を順番に渡して、先頭から、配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-990">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-991">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の位置 1 にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-991">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 1.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-992">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-992">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-993">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-993">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-994"><xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から開始し、配列の末尾を続行する配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-994">The <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 2 and continuing to the end of the array.</span></span> <span data-ttu-id="0cffc-995">5 番目の位置にある要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-995">It finds the element at position 5.</span></span> <span data-ttu-id="0cffc-996">最後に、<xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 2 から 3 つの要素の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-996">Finally, the <xref:System.Array.FindIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 2.</span></span> <span data-ttu-id="0cffc-997">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-997">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindIndex/cs/source.cs#1)]
 [!code-vb[Array_FindIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-998">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-998">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-999">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-999">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1000">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1000">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1001">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1001">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1002">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1002">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLast&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static T FindLast&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig !!T FindLast&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLast(Of T) (array As T(), match As Predicate(Of T)) As T" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static T FindLast(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLast : 'T[] * Predicate&lt;'T&gt; -&gt; 'T" Usage="System.Array.FindLast (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>T</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1003">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1003">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1004">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1004">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-1005">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1005">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1006">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1006">Searches for an element that matches the conditions defined by the specified predicate, and returns the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1007">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1007">The last element that matches the conditions defined by the specified predicate, if found; otherwise, the default value for type <paramref name="T" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1008"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1008">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-1009">要素`array`に個別に渡される、<xref:System.Predicate%601>への移行の旧バージョンと、 <xref:System.Array>、最後の要素で開始および終了の最初の要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1009">The elements of `array` are individually passed to the <xref:System.Predicate%601>, moving backward in the <xref:System.Array>, starting with the last element and ending with the first element.</span></span>  <span data-ttu-id="0cffc-1010">一致が見つかった場合は、処理が停止しました。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1010">Processing is stopped when a match is found.</span></span>  
  
 <span data-ttu-id="0cffc-1011">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1011">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1012">次のコード例を示しています、 <xref:System.Array.Find%2A>、 <xref:System.Array.FindLast%2A>、および<xref:System.Array.FindAll%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1012">The following code example demonstrates the <xref:System.Array.Find%2A>, <xref:System.Array.FindLast%2A>, and <xref:System.Array.FindAll%2A> generic methods.</span></span> <span data-ttu-id="0cffc-1013">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1013">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-1014">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1014">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-1015"><xref:System.Array.Find%2A>ジェネリック メソッドは、最初に、各要素を順番に渡してから、配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1015">The <xref:System.Array.Find%2A> generic method traverses the array from the beginning, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-1016">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`要素"Amargasaurus"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1016">The search stops when the `EndsWithSaurus` method returns `true` for the element "Amargasaurus".</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1017">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1017">In C# and Visual Basic, it is not necessary to create the`Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-1018">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1018">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-1019"><xref:System.Array.FindLast%2A>末尾から旧バージョンとの配列を検索するジェネリック メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1019">The <xref:System.Array.FindLast%2A> generic method is used to search the array backward from the end.</span></span> <span data-ttu-id="0cffc-1020">"Dilophosaurus"5 番目の位置にある要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1020">It finds the element "Dilophosaurus" at position 5.</span></span> <span data-ttu-id="0cffc-1021"><xref:System.Array.FindAll%2A>で"終了するすべての要素を含む配列を返すジェネリック メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1021">The <xref:System.Array.FindAll%2A> generic method is used to return an array containing all the elements that end in "saurus".</span></span> <span data-ttu-id="0cffc-1022">要素が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1022">The elements are displayed.</span></span>  
  
 <span data-ttu-id="0cffc-1023">このコード例も示します、<xref:System.Array.Exists%2A>と<xref:System.Array.TrueForAll%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1023">The code example also demonstrates the <xref:System.Array.Exists%2A> and <xref:System.Array.TrueForAll%2A> generic methods.</span></span>  
  
 [!code-cpp[Array_FindEtAl#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindEtAl/cpp/source.cpp#1)]
 [!code-csharp[Array_FindEtAl#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindEtAl/cs/source.cs#1)]
 [!code-vb[Array_FindEtAl#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindEtAl/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1024">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1024">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-1025">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1025">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <MemberGroup MemberName="FindLastIndex&lt;T&gt;">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1026">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1026">Searches for an element that matches the conditions defined by a specified predicate, and returns the zero-based index of the last occurrence within an <see cref="T:System.Array" /> or a portion of it.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1027">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1027">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1028">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1028">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-1029">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1029">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1030">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1030">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1031">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1031">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1032"><xref:System.Array>後方の最後の要素の最初と最後の最初の要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1032">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1033"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1033">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-1034">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1034">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-1035">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1035">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1036">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindLastIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1036">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-1037">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1037">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-1038">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1038">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-1039"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、最後に、各要素を順番に渡してから旧バージョンとの配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1039">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-1040">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の 5 番目の位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1040">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1041">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1041">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-1042">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1042">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-1043"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 4 から開始し、配列の先頭を続行する前に、配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1043">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="0cffc-1044">位置 1 である要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1044">It finds the element at position 1.</span></span> <span data-ttu-id="0cffc-1045">最後に、 <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> 3 つの要素位置 4 から開始し、逆方向 (つまり、4、3、および 2) の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1045">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="0cffc-1046">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1046">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1047">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1047">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-1048">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1048">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, startIndex, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1049">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1049">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1050">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1050">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1051">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1051">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-1052">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1052">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1053">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1053">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1054">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1054">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1055"><xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`と最初の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1055">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1056"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1056">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-1057">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1057">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-1058">このメソッドは、O (`n`) 操作では、ここで`n`の先頭から要素の数は、`array`に`startIndex`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1058">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1059">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindLastIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1059">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-1060">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1060">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-1061">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1061">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-1062"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、最後に、各要素を順番に渡してから旧バージョンとの配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1062">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-1063">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の 5 番目の位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1063">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1064">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1064">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-1065">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1065">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-1066"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 4 から開始し、配列の先頭を続行する前に、配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1066">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="0cffc-1067">位置 1 である要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1067">It finds the element at position 1.</span></span> <span data-ttu-id="0cffc-1068">最後に、 <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> 3 つの要素位置 4 から開始し、逆方向 (つまり、4、3、および 2) の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1068">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="0cffc-1069">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1069">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1070">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-1071">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1071">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1072">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1072">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="FindLastIndex&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int FindLastIndex&lt;T&gt; (T[] array, int startIndex, int count, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 FindLastIndex&lt;T&gt;(!!T[] array, int32 startIndex, int32 count, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.FindLastIndex``1(``0[],System.Int32,System.Int32,System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function FindLastIndex(Of T) (array As T(), startIndex As Integer, count As Integer, match As Predicate(Of T)) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int FindLastIndex(cli::array &lt;T&gt; ^ array, int startIndex, int count, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member FindLastIndex : 'T[] * int * int * Predicate&lt;'T&gt; -&gt; int" Usage="System.Array.FindLastIndex (array, startIndex, count, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1073">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1073">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1074">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1074">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1075">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1075">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-1076">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1076">The number of elements in the section to search.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-1077">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1077">The <see cref="T:System.Predicate`1" /> that defines the conditions of the element to search for.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1078">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1078">Searches for an element that matches the conditions defined by the specified predicate, and returns the zero-based index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1079">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1079">The zero-based index of the last occurrence of an element that matches the conditions defined by <paramref name="match" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1080"><xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`で終わる`startIndex`マイナス`count`1、さらに場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1080">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="0cffc-1081"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1081">The <xref:System.Predicate%601> is a delegate to a method that returns `true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-1082">要素`array`に個別に渡される、<xref:System.Predicate%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1082">The elements of `array` are individually passed to the <xref:System.Predicate%601>.</span></span>  
  
 <span data-ttu-id="0cffc-1083">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1083">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1084">次のコード例に示しますの 3 つすべてのオーバー ロード、<xref:System.Array.FindLastIndex%2A>ジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1084">The following code example demonstrates all three overloads of the <xref:System.Array.FindLastIndex%2A> generic method.</span></span> <span data-ttu-id="0cffc-1085">"Saurus"で終わる (位置 1 から 5 など) のうちの 2 台の 8 恐竜の名前を含む文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1085">An array of strings is created, containing 8 dinosaur names, two of which (at positions 1 and 5) end with "saurus".</span></span> <span data-ttu-id="0cffc-1086">コード例でも定義という名前の検索述語メソッド`EndsWithSaurus`、文字列パラメーターを受け入れるし、ブール値を返しますが、入力文字列では"かどうかを示すを値です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1086">The code example also defines a search predicate method named `EndsWithSaurus`, which accepts a string parameter and returns a Boolean value indicating whether the input string ends in "saurus".</span></span>  
  
 <span data-ttu-id="0cffc-1087"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29>メソッドのオーバー ロードは、最後に、各要素を順番に渡してから旧バージョンとの配列を通過する時間、`EndsWithSaurus`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1087">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Predicate%7B%60%600%7D%29> method overload traverses the array backward from the end, passing each element in turn to the `EndsWithSaurus` method.</span></span> <span data-ttu-id="0cffc-1088">検索を停止するときに、`EndsWithSaurus`メソッドを返します。`true`の 5 番目の位置にある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1088">The search stops when the `EndsWithSaurus` method returns `true` for the element at position 5.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1089">C# および Visual Basic の場合は、その必要はありませんを作成する、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1089">In C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-1090">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1090">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 <span data-ttu-id="0cffc-1091"><xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29>位置 4 から開始し、配列の先頭を続行する前に、配列を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1091">The <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the array beginning at position 4 and continuing backward to the beginning of the array.</span></span> <span data-ttu-id="0cffc-1092">位置 1 である要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1092">It finds the element at position 1.</span></span> <span data-ttu-id="0cffc-1093">最後に、 <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> 3 つの要素位置 4 から開始し、逆方向 (つまり、4、3、および 2) の範囲を検索するメソッド オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1093">Finally, the <xref:System.Array.FindLastIndex%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Predicate%7B%60%600%7D%29> method overload is used to search the range of three elements beginning at position 4 and working backward (that is, elements 4, 3, and 2).</span></span> <span data-ttu-id="0cffc-1094">"Saurus"で終わる範囲に恐竜の名前が存在しないために、-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1094">It returns –1 because there are no dinosaur names in that range that end with "saurus".</span></span>  
  
 [!code-cpp[Array_FindLastIndex#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_FindLastIndex/cpp/source.cpp#1)]
 [!code-csharp[Array_FindLastIndex#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_FindLastIndex/cs/source.cs#1)]
 [!code-vb[Array_FindLastIndex#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_FindLastIndex/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1095">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1095">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-1096">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1096">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1097">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1097">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1098">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1098">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1099">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1099">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.Find``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindLast``1(``0[],System.Predicate{``0})" />
        <altmember cref="M:System.Array.FindAll``1(``0[],System.Predicate{``0})" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="Overload:System.Array.IndexOf" />
        <altmember cref="Overload:System.Array.LastIndexOf" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
    <Member MemberName="ForEach&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void ForEach&lt;T&gt; (T[] array, Action&lt;T&gt; action);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void ForEach&lt;T&gt;(!!T[] array, class System.Action`1&lt;!!T&gt; action) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.ForEach``1(``0[],System.Action{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub ForEach(Of T) (array As T(), action As Action(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void ForEach(cli::array &lt;T&gt; ^ array, Action&lt;T&gt; ^ action);" />
      <MemberSignature Language="F#" Value="static member ForEach : 'T[] * Action&lt;'T&gt; -&gt; unit" Usage="System.Array.ForEach (array, action)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="action" Type="System.Action&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1100">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1100">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1101">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1101">The one-dimensional, zero-based <see cref="T:System.Array" /> on whose elements the action is to be performed.</span>
          </span>
        </param>
        <param name="action">
          <span data-ttu-id="0cffc-1102">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1102">The <see cref="T:System.Action`1" /> to perform on each element of <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1103">Performs the specified action on each element of the specified array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1103">Performs the specified action on each element of the specified array.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1104"><xref:System.Action%601>を渡すとき、オブジェクトが操作を実行するメソッドにデリゲートします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1104">The <xref:System.Action%601> is a delegate to a method that performs an action on the object passed to it.</span></span>  <span data-ttu-id="0cffc-1105">要素`array`に個別に渡される、<xref:System.Action%601>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1105">The elements of `array` are individually passed to the <xref:System.Action%601>.</span></span>  
  
 <span data-ttu-id="0cffc-1106">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1106">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1107">次の例は、使用する方法を示しています。<xref:System.Array.ForEach%2A>整数配列の各要素の四角形を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1107">The following example shows how to use <xref:System.Array.ForEach%2A> to display the squares of each element in an integer array.</span></span>  
  
 [!code-cpp[System.Array.ForEach#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.foreach/cpp/source.cpp#1)]
 [!code-csharp[System.Array.ForEach#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.foreach/cs/source.cs#1)]
 [!code-vb[System.Array.ForEach#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.foreach/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1108">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1108">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-1109">-or-  <paramref name="action" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1109">-or-  <paramref name="action" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.Action`1" />
      </Docs>
    </Member>
    <Member MemberName="GetEnumerator">
      <MemberSignature Language="C#" Value="public System.Collections.IEnumerator GetEnumerator ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.Collections.IEnumerator GetEnumerator() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetEnumerator" />
      <MemberSignature Language="VB.NET" Value="Public Function GetEnumerator () As IEnumerator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::Collections::IEnumerator ^ GetEnumerator();" />
      <MemberSignature Language="F#" Value="abstract member GetEnumerator : unit -&gt; System.Collections.IEnumerator&#xA;override this.GetEnumerator : unit -&gt; System.Collections.IEnumerator" Usage="array.GetEnumerator " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IEnumerable.GetEnumerator</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Collections.IEnumerator</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1110">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1110">Returns an <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1111">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1111">An <see cref="T:System.Collections.IEnumerator" /> for the <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1112">[Visual Basic、C# の場合]</span><span class="sxs-lookup"><span data-stu-id="0cffc-1112">[Visual Basic, C#]</span></span>  
  
 <span data-ttu-id="0cffc-1113">`foreach` C# 言語のステートメント (`for each` C++ では、 `For Each` Visual Basic で)、列挙子の複雑さが隠されています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1113">The `foreach` statement of the C# language (`for each` in C++, `For Each` in Visual Basic) hides the complexity of the enumerators.</span></span> <span data-ttu-id="0cffc-1114">したがって、列挙子を直接操作するのではなく、`foreach` を使用することをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1114">Therefore, using `foreach` is recommended, instead of directly manipulating the enumerator.</span></span>  
  
 <span data-ttu-id="0cffc-1115">列挙子を使用すると、コレクション内のデータを読み取ることができますが、基になるコレクションを変更することはできません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1115">Enumerators can be used to read the data in the collection, but they cannot be used to modify the underlying collection.</span></span>  
  
 <span data-ttu-id="0cffc-1116">最初に、列挙子はコレクション内の 1 番目の要素の前に位置付けられます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1116">Initially, the enumerator is positioned before the first element in the collection.</span></span> <span data-ttu-id="0cffc-1117"><xref:System.Collections.IEnumerator.Reset%2A> を実行した場合も、列挙子はこの位置に戻されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1117"><xref:System.Collections.IEnumerator.Reset%2A> also brings the enumerator back to this position.</span></span>  <span data-ttu-id="0cffc-1118">この位置では、<xref:System.Collections.IEnumerator.Current%2A> が未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1118">At this position, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="0cffc-1119">そのため、<xref:System.Collections.IEnumerator.MoveNext%2A> の値を読み取る前に、<xref:System.Collections.IEnumerator.Current%2A> を呼び出して列挙子をコレクションの最初の要素に進める必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1119">Therefore, you must call <xref:System.Collections.IEnumerator.MoveNext%2A> to advance the enumerator to the first element of the collection before reading the value of <xref:System.Collections.IEnumerator.Current%2A>.</span></span>  
  
 <span data-ttu-id="0cffc-1120"><xref:System.Collections.IEnumerator.Current%2A> は、<xref:System.Collections.IEnumerator.MoveNext%2A> または <xref:System.Collections.IEnumerator.Reset%2A> が呼び出されるまでは同じオブジェクトを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1120"><xref:System.Collections.IEnumerator.Current%2A> returns the same object until either <xref:System.Collections.IEnumerator.MoveNext%2A> or <xref:System.Collections.IEnumerator.Reset%2A> is called.</span></span> <span data-ttu-id="0cffc-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> は、<xref:System.Collections.IEnumerator.Current%2A> を次の要素に設定します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1121"><xref:System.Collections.IEnumerator.MoveNext%2A> sets <xref:System.Collections.IEnumerator.Current%2A> to the next element.</span></span>  
  
 <span data-ttu-id="0cffc-1122">場合<xref:System.Collections.IEnumerator.MoveNext%2A>列挙子をコレクションの末尾が、コレクション内の最後の要素の後に配置されているパスと<xref:System.Collections.IEnumerator.MoveNext%2A>返します`false`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1122">If <xref:System.Collections.IEnumerator.MoveNext%2A> passes the end of the collection, the enumerator is positioned after the last element in the collection and <xref:System.Collections.IEnumerator.MoveNext%2A> returns `false`.</span></span> <span data-ttu-id="0cffc-1123">列挙子がこの位置では、後続の呼び出しの場合<xref:System.Collections.IEnumerator.MoveNext%2A>を返すことも`false`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1123">When the enumerator is at this position, subsequent calls to <xref:System.Collections.IEnumerator.MoveNext%2A> also return `false`.</span></span> <span data-ttu-id="0cffc-1124">最後の呼び出し場合<xref:System.Collections.IEnumerator.MoveNext%2A>返される`false`、<xref:System.Collections.IEnumerator.Current%2A>が定義されていません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1124">If the last call to <xref:System.Collections.IEnumerator.MoveNext%2A> returned `false`, <xref:System.Collections.IEnumerator.Current%2A> is undefined.</span></span> <span data-ttu-id="0cffc-1125"><xref:System.Collections.IEnumerator.Current%2A> をコレクションの最初の要素にもう一度設定するには、<xref:System.Collections.IEnumerator.Reset%2A> を呼び出してから <xref:System.Collections.IEnumerator.MoveNext%2A> を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1125">To set <xref:System.Collections.IEnumerator.Current%2A> to the first element of the collection again, you can call <xref:System.Collections.IEnumerator.Reset%2A> followed by <xref:System.Collections.IEnumerator.MoveNext%2A>.</span></span>  
  
 <span data-ttu-id="0cffc-1126">コレクションが変更されない限り、列挙子は有効です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1126">An enumerator remains valid as long as the collection remains unchanged.</span></span> <span data-ttu-id="0cffc-1127">コレクションに対して変更 (要素の追加、変更、削除など) が行われると、列挙子は回復不可能な無効状態になり、その動作は未定義になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1127">If changes are made to the collection, such as adding, modifying, or deleting elements, the enumerator is irrecoverably invalidated and its behavior is undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1128">列挙子には、コレクションへの排他アクセスがありません。したがって、コレクションの列挙処理は本質的にスレッド セーフな処理ではありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1128">The enumerator does not have exclusive access to the collection; therefore, enumerating through a collection is intrinsically not a thread safe procedure.</span></span>  <span data-ttu-id="0cffc-1129">列挙処理でスレッド セーフを確保するには、列挙処理が終わるまでコレクションをロックできます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1129">To guarantee thread safety during enumeration, you can lock the collection during the entire enumeration.</span></span>  <span data-ttu-id="0cffc-1130">コレクションに対し複数のスレッドがアクセスして読み取りや書き込みを行うことができるようにするには、独自に同期化を実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1130">To allow the collection to be accessed by multiple threads for reading and writing, you must implement your own synchronization.</span></span>  
  
 <span data-ttu-id="0cffc-1131">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1131">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1132">次のコード例は、使用する方法を示しています。<xref:System.Array.GetEnumerator%2A>を配列の要素を一覧表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1132">The following code example shows how to use <xref:System.Array.GetEnumerator%2A> to list the elements of an array.</span></span>  
  
 [!code-cpp[System.Array_GetEnumerator#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CPP/array_getenumerator.cpp#1)]
 [!code-csharp[System.Array_GetEnumerator#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetEnumerator/CS/array_getenumerator.cs#1)]
 [!code-vb[System.Array_GetEnumerator#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetEnumerator/VB/array_getenumerator.vb#1)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="GetLength">
      <MemberSignature Language="C#" Value="public int GetLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLength (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLength(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLength : int -&gt; int" Usage="array.GetLength dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="0cffc-1133">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1133">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1134">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1134">Gets a 32-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1135">A 32-bit integer that represents the number of elements in the specified dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1135">A 32-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1136">例<xref:System.Array.GetLength%2A>は`GetLength(0)`の最初の次元で要素の数が返されます、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1136">An example of <xref:System.Array.GetLength%2A> is `GetLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1137">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1137">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1138">次の例は、使用する方法を示しています。<xref:System.Array.GetLength%2A>ランクが異なる 2 つの配列のサイズを表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1138">The following example shows how to use <xref:System.Array.GetLength%2A> to display the dimensions of two arrays with different ranks.</span></span>  
  
 [!code-cpp[System.Array.GetLength#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getlength/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetLength#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getlength/cs/source.cs#1)]
 [!code-vb[System.Array.GetLength#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getlength/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1139">
            <paramref name="dimension" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1139">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1140">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1140">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLongLength">
      <MemberSignature Language="C#" Value="public long GetLongLength (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int64 GetLongLength(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLongLength(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLongLength (dimension As Integer) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; long GetLongLength(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLongLength : int -&gt; int64" Usage="array.GetLongLength dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="0cffc-1141">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1141">A zero-based dimension of the <see cref="T:System.Array" /> whose length needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1142">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1142">Gets a 64-bit integer that represents the number of elements in the specified dimension of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1143">A 64-bit integer that represents the number of elements in the specified dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1143">A 64-bit integer that represents the number of elements in the specified dimension.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1144">例<xref:System.Array.GetLongLength%2A>は`GetLongLength(0)`の最初の次元で要素の数が返されます、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1144">An example of <xref:System.Array.GetLongLength%2A> is `GetLongLength(0)`, which returns the number of elements in the first dimension of the <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1145">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1145">This method is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1146">
            <paramref name="dimension" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1146">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1147">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1147">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetLowerBound">
      <MemberSignature Language="C#" Value="public int GetLowerBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetLowerBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetLowerBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetLowerBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetLowerBound(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetLowerBound : int -&gt; int" Usage="array.GetLowerBound dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="0cffc-1148">A zero-based dimension of the array whose starting index needs to be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1148">A zero-based dimension of the array whose starting index needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1149">Gets the index of the first element of the specified dimension in the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1149">Gets the index of the first element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1150">The index of the first element of the specified dimension in the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1150">The index of the first element of the specified dimension in the array.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1151">`GetLowerBound(0)` 配列の最初の次元の開始インデックスを返しますと`GetLowerBound(Rank - 1)`配列の最後の次元の開始インデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1151">`GetLowerBound(0)` returns the starting index of the first dimension of the array, and `GetLowerBound(Rank - 1)` returns the starting index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="0cffc-1152"><xref:System.Array.GetLowerBound%2A>メソッドは、配列が空の場合でも常に、配列の下限のインデックスを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1152">The <xref:System.Array.GetLowerBound%2A> method always returns a value that indicates the index of the lower bound of the array, even if the array is empty.</span></span>  
  
 <span data-ttu-id="0cffc-1153">なお、.NET Framework でのほとんどの配列は 0 から始まる (は、<xref:System.Array.GetLowerBound%2A>配列の各次元のゼロが返される)、.NET Framework は 0 から始まる配列をサポートします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1153">Note that, although most arrays in the .NET Framework are zero-based (that is, the <xref:System.Array.GetLowerBound%2A> method returns zero for each dimension of an array), the .NET Framework does support arrays that are not zero-based.</span></span> <span data-ttu-id="0cffc-1154">そのような配列を作成できます、<xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29>メソッド、およびアンマネージ コードから返すこともできます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1154">Such arrays can be created with the <xref:System.Array.CreateInstance%28System.Type%2CSystem.Int32%5B%5D%2CSystem.Int32%5B%5D%29> method, and can also be returned from unmanaged code.</span></span>  
  
 <span data-ttu-id="0cffc-1155">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1155">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1156">次の例では、<xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドを 1 次元、2 次元配列の境界を表示して、配列要素の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1156">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1157">
            <paramref name="dimension" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1157">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1158">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1158">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="GetUpperBound">
      <MemberSignature Language="C#" Value="public int GetUpperBound (int dimension);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance int32 GetUpperBound(int32 dimension) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetUpperBound(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetUpperBound (dimension As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int GetUpperBound(int dimension);" />
      <MemberSignature Language="F#" Value="member this.GetUpperBound : int -&gt; int" Usage="array.GetUpperBound dimension" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="dimension" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="dimension">
          <span data-ttu-id="0cffc-1159">A zero-based dimension of the array whose upper bound needs to be determined.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1159">A zero-based dimension of the array whose upper bound needs to be determined.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1160">Gets the index of the last element of the specified dimension in the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1160">Gets the index of the last element of the specified dimension in the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1161">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1161">The index of the last element of the specified dimension in the array, or -1 if the specified dimension is empty.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1162">`GetUpperBound(0)` 配列の最初の次元の最後のインデックスを返しますと`GetUpperBound(Rank - 1)`配列の最後の次元の最後のインデックスを返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1162">`GetUpperBound(0)` returns the last index in the first dimension of the array, and `GetUpperBound(Rank - 1)` returns the last index of the last dimension of the array.</span></span>  
  
 <span data-ttu-id="0cffc-1163">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1163">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1164">次の例では、<xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドを 1 次元、2 次元配列の境界を表示して、配列要素の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1164">The following example uses the <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods to display the bounds of a one-dimensional and two-dimensional array and to display the values of their array elements.</span></span>  
  
 [!code-cpp[System.Array.GetUpperBound#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.array.getupperbound/cpp/source.cpp#1)]
 [!code-csharp[System.Array.GetUpperBound#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.getupperbound/cs/source.cs#1)]
 [!code-vb[System.Array.GetUpperBound#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.getupperbound/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1165">
            <paramref name="dimension" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1165">
              <paramref name="dimension" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1166">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1166">-or-  <paramref name="dimension" /> is equal to or greater than <see cref="P:System.Array.Rank" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <MemberGroup MemberName="GetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1167">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1167">Gets the value of the specified element in the current <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int -&gt; obj" Usage="array.GetValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cffc-1168">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1168">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1169">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1169">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1170">The index is specified as a 32-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1170">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1171">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1171">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1172"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>方法を決定できるかどうかの値`index`が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1172">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1173">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1173">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1174">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1174">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1175">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1175">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1176">
            <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1176">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Integer()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;int&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int[] -&gt; obj" Usage="array.GetValue indices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="0cffc-1177">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1177">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1178">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1178">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1179">The indexes are specified as an array of 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1179">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1180">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1180">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1181">内の要素の数`indices`内のディメンションの数と同じにする必要があります、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1181">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1182">すべての要素、`indices`配列が多次元で、目的の要素の位置をまとめて指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1182">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1183"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1183">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1184">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1184">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1185">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1185">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1186">
            <paramref name="indices" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1186">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1187">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1187">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1188">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1188">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 -&gt; obj" Usage="array.GetValue index" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cffc-1189">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1189">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1190">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1190">Gets the value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1191">The index is specified as a 64-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1191">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1192">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1192">The value at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1193"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>方法を決定できるかどうかの値`index`が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1193">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1194">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1194">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1195">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1195">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1196">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1196">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1197">
            <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1197">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (ParamArray indices As Long()) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(... cli::array &lt;long&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64[] -&gt; obj" Usage="array.GetValue indices" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="indices">
          <span data-ttu-id="0cffc-1198">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1198">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1199">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1199">Gets the value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1200">The indexes are specified as an array of 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1200">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1201">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1201">The value at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1202">内の要素の数`indices`内のディメンションの数と同じにする必要があります、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1202">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1203">すべての要素、`indices`配列が多次元で、目的の要素の位置をまとめて指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1203">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1204"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1204">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1205">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1205">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1206">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1206">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1207">
            <paramref name="indices" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1207">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1208">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1208">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1209">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1209">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int * int -&gt; obj" Usage="array.GetValue (index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="0cffc-1210">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1210">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1211">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1211">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1212">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1212">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1213">The indexes are specified as 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1213">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1214">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1214">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1215"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1215">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1216">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1216">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1217">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1217">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1218">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1218">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1219">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1219">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 * int64 -&gt; obj" Usage="array.GetValue (index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="0cffc-1220">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1220">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1221">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1221">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1222">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1222">Gets the value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1223">The indexes are specified as 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1223">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1224">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1224">The value at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1225"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1225">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1226">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1226">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1227">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1227">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1228">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1228">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1229">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1229">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Integer, index2 As Integer, index3 As Integer) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(int index1, int index2, int index3);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int * int * int -&gt; obj" Usage="array.GetValue (index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="0cffc-1230">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1230">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1231">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1231">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="0cffc-1232">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1232">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1233">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1233">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1234">The indexes are specified as 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1234">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1235">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1235">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1236"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1236">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1237">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1237">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1238">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1238">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1239">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1239">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1240">
            <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1240">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <Member MemberName="GetValue">
      <MemberSignature Language="C#" Value="public object GetValue (long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance object GetValue(int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.GetValue(System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function GetValue (index1 As Long, index2 As Long, index3 As Long) As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::Object ^ GetValue(long index1, long index2, long index3);" />
      <MemberSignature Language="F#" Value="member this.GetValue : int64 * int64 * int64 -&gt; obj" Usage="array.GetValue (index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="index1">
          <span data-ttu-id="0cffc-1241">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1241">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1242">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1242">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="0cffc-1243">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1243">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to get.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1244">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1244">Gets the value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1245">The indexes are specified as 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1245">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1246">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1246">The value at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1247"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1247">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1248">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1248">This method is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1249">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1249">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1250">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1250">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1251">
            <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1251">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.SetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="IndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1252">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1252">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array or in a range of elements in the array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj -&gt; int" Usage="System.Array.IndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1253">The one-dimensional array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1253">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1254">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1254">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1255">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1255">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1256">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1256">The index of the first occurrence of <paramref name="value" /> in <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1257">このメソッドは、1 次元 arrayfor のすべての要素を検索`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1257">This method searches all the elements of a one-dimensional arrayfor `value`.</span></span> <span data-ttu-id="0cffc-1258">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して各要素の等値比較を実行する`Equals`メソッドの一致が見つかるまでです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1258">To determine whether `value` exists in `array`, the method performs an equality comparison by calling each element's `Equals` method until it finds a match.</span></span> <span data-ttu-id="0cffc-1259">つまり、この要素をオーバーライドする場合、<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1259">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1260">ほとんどの配列の下限を 0 ため、このメソッドは、– 1 返します通常を行う場合`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1260">Because most arrays have a lower bound of zero, this method generally returns –1 if`value` isn’t found.</span></span> <span data-ttu-id="0cffc-1261">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF) です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1261">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="0cffc-1262">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1262">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1263">例がの次の 3 つオーバー ロードを呼び出して、<xref:System.Array.IndexOf%2A>文字列配列の文字列のインデックスを検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1263">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="0cffc-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>、文字列の最初に見つかった位置を決定する、文字列配列の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1264"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する文字列配列の最後の要素の 4 番目の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1265"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する、文字列"the"の配列を配列の末尾に最後の一致を後ろにある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1266"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1267">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1267">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1268">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1268">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1269">The one-dimensional array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1269">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1270">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1270">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1271">The starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1271">The starting index of the search.</span>
          </span>
          <span data-ttu-id="0cffc-1272">0 (zero) is valid in an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1272">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1273">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1273">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="0cffc-1274">The range extends from a specified index to the end of the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1274">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1275">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1275">The index of the first occurrence of <paramref name="value" />, if it’s found, within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1276">このメソッドを 1 次元配列のインデックス位置にある要素からは検索`startIndex`最後の要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1276">This method searches a one-dimensional array from the element at index `startIndex` to the last element.</span></span> <span data-ttu-id="0cffc-1277">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して、等値比較を実行し、`Equals`一致が見つかるまでのすべての要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1277">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="0cffc-1278">つまり、この要素をオーバーライドする場合、<xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1278">This means that if the element overrides the <xref:System.Object.Equals%28System.Object%29?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1279">ほとんどの配列の下限を 0 ため、このメソッドは、– 1 返します通常を行う場合`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1279">Because most arrays have a lower bound of zero, this method generally returns –1 if `value` isn’t found.</span></span> <span data-ttu-id="0cffc-1280">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF) です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1280">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="0cffc-1281">場合`startIndex`equals <xref:System.Array.Length%2A?displayProperty=nameWithType>-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1281">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>,the method returns -1.</span></span> <span data-ttu-id="0cffc-1282">場合`startIndex`がより大きい<xref:System.Array.Length%2A?displayProperty=nameWithType>がスローされます、<xref:System.ArgumentOutOfRangeException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1282">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="0cffc-1283">このメソッドは、O (`n`) 操作では、ここで`n`から要素の数は、`startIndex`の末尾に`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1283">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1284">例がの次の 3 つオーバー ロードを呼び出して、<xref:System.Array.IndexOf%2A>文字列配列の文字列のインデックスを検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1284">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="0cffc-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>、文字列の最初に見つかった位置を決定する、文字列配列の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1285"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する文字列配列の最後の要素の 4 番目の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1286"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する、文字列"the"の配列を配列の末尾に最後の一致を後ろにある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1287"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1288">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1288">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1289">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1289">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1290">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1290">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf">
      <MemberSignature Language="C#" Value="public static int IndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int IndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : Array * obj * int * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1291">The one-dimensional array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1291">The one-dimensional array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1292">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1292">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1293">The starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1293">The starting index of the search.</span>
          </span>
          <span data-ttu-id="0cffc-1294">0 (zero) is valid in an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1294">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-1295">The number of elements to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1295">The number of elements to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1296">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1296">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of ifs first occurrence.</span>
          </span>
          <span data-ttu-id="0cffc-1297">The range extends from a specified index for a specified number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1297">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1298">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1298">The index of the first occurrence of <paramref name="value" />, if it’s found in the <paramref name="array" /> from index <paramref name="startIndex" /> to <paramref name="startIndex" /> + <paramref name="count" /> - 1; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1299">このメソッドは、1 次元 arrayfrom の要素を検索`startIndex`に`startIndex`plus`count`から 1 を引いた場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1299">This method searches the elements of a one-dimensional arrayfrom `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="0cffc-1300">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して、等値比較を実行し、`Equals`一致が見つかるまでのすべての要素のメソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1300">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `Equals` method of every element until it finds a match.</span></span> <span data-ttu-id="0cffc-1301">つまり、この要素をオーバーライドする場合、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1301">This means that if the element overrides the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1302">Becausemost 配列の下限を 0 である一般的に、このメソッドは – 1 時を返します`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1302">Becausemost arrays have a lower bound of zero, this method generally returns –1 when `value` isn’t found.</span></span> <span data-ttu-id="0cffc-1303">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>(0x80000000) と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>(0x7FFFFFFF) です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1303">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> (0x80000000) and `value` isn’t found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType> (0x7FFFFFFF).</span></span>  
  
 <span data-ttu-id="0cffc-1304">場合`startindex`equals <xref:System.Array.Length%2A?displayProperty=nameWithType>-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1304">If `startindex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span> <span data-ttu-id="0cffc-1305">場合`startIndex`がより大きい<xref:System.Array.Length%2A?displayProperty=nameWithType>がスローされます、<xref:System.ArgumentOutOfRangeException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1305">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="0cffc-1306">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1306">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1307">例がの次の 3 つオーバー ロードを呼び出して、<xref:System.Array.IndexOf%2A>文字列配列の文字列のインデックスを検索するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1307">The example calls the following three overloads of the <xref:System.Array.IndexOf%2A> method to find the index of a string in a string array:</span></span>  
  
-   <span data-ttu-id="0cffc-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>、文字列の最初に見つかった位置を決定する、文字列配列の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1308"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%29>, to determine the first occurrence of the string "the" in a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する文字列配列の最後の要素の 4 番目の"the"です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1309"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in the fourth to the last elements of a string array.</span></span>  
  
-   <span data-ttu-id="0cffc-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>、文字列の最初に見つかった位置を決定する、文字列"the"の配列を配列の末尾に最後の一致を後ろにある要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1310"><xref:System.Array.IndexOf%28System.Array%2CSystem.Object%2CSystem.Int32%2CSystem.Int32%29>, to determine the first occurrence of the string "the" in a string array from the element that follows the last successful match to the end of the array.</span></span> <span data-ttu-id="0cffc-1311">値を決定する、`count`引数を配列の開始インデックスからの上限値を減算し、1 を追加します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1311">To determine the value of the `count` argument, it subtracts the upper bound of the array from the starting index and adds one.</span></span>  
  
 [!code-cpp[Classic Array.IndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.IndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.IndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.IndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1312">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1312">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1313">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1313">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1314">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1314">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1315">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1315">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1316">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1316">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T -&gt; int" Usage="System.Array.IndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1317">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1317">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1318">The one-dimensional, zero-based array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1318">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1319">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1319">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1320">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1320">Searches for the specified object and returns the index of its first occurrence in a one-dimensional array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1321">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1321">The zero-based index of the first occurrence of <paramref name="value" /> in the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1322">このメソッドの 1 次元配列のすべての要素を検索する`value`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1322">This method searches all the elements of a one-dimensional array for `value`.</span></span> <span data-ttu-id="0cffc-1323">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して、等値比較を実行し、`T.Equals`メソッドのすべての要素をします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1323">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="0cffc-1324">つまり、`T`よりも優先、<xref:System.Object.Equals%2A>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1324">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1325">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1325">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1326">次の例では、すべて次の 3 つジェネリック オーバー ロードの<xref:System.Array.IndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1326">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1327">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1327">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1328"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、最初から配列を検索し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1328">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1329"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードが 3 のインデックスの場所を開始位置として、配列と、配列の末尾まで続行を検索するために使用し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1329">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1330">最後に、<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>その範囲内で検索文字列のインスタンスが存在しないため – 1 を返しますではメソッドのオーバー ロードを使用して、インデックス位置 2 から 2 つのエントリの範囲を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1330">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1331">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1331">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1332">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1332">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1333">The one-dimensional, zero-based array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1333">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1334">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1334">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1335">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1335">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="0cffc-1336">0 (zero) is valid in an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1336">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1337">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1337">Searches for the specified object in a range of elements of a one dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="0cffc-1338">The range extends from a specified index to the end of the array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1338">The range extends from a specified index to the end of the array.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1339">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1339">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from <paramref name="startIndex" /> to the last element, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1340">このメソッドを 1 次元配列にある要素からは検索`startIndex`配列の末尾にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1340">This method searches a one-dimensional array from the element at `startIndex` to the end of the array.</span></span> <span data-ttu-id="0cffc-1341">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して、等値比較を実行し、`T.Equals`メソッドのすべての要素をします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1341">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="0cffc-1342">つまり、`T`よりも優先、<xref:System.Object.Equals%2A>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1342">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1343">場合`startIndex`equals <xref:System.Array.Length%2A>、メソッドを返します - 1.If`startIndex`がより大きい<xref:System.Array.Length%2A?displayProperty=nameWithType>がスローされます、<xref:System.ArgumentOutOfRangeException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1343">If `startIndex` equals <xref:System.Array.Length%2A>,the method returns -1.If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="0cffc-1344">このメソッドは、O (`n`) 操作では、ここで`n`から要素の数は、`startIndex`の末尾に`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1344">This method is an O(`n`) operation, where `n` is the number of elements from `startIndex` to the end of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1345">次の例では、すべて次の 3 つジェネリック オーバー ロードの<xref:System.Array.IndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1345">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1346">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1346">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1347"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、最初から配列を検索し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1347">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1348"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードが 3 のインデックスの場所を開始位置として、配列と、配列の末尾まで続行を検索するために使用し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1348">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1349">最後に、<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>その範囲内で検索文字列のインスタンスが存在しないため – 1 を返しますではメソッドのオーバー ロードを使用して、インデックス位置 2 から 2 つのエントリの範囲を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1349">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1350">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1350">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1351">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1351">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="IndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int IndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 IndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.IndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function IndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int IndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member IndexOf : 'T[] * 'T * int * int -&gt; int" Usage="System.Array.IndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1352">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1352">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1353">The one-dimensional, zero-based array to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1353">The one-dimensional, zero-based array to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1354">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1354">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1355">The zero-based starting index of the search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1355">The zero-based starting index of the search.</span>
          </span>
          <span data-ttu-id="0cffc-1356">0 (zero) is valid in an empty array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1356">0 (zero) is valid in an empty array.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-1357">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1357">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1358">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1358">Searches for the specified object in a range of elements of a one-dimensional array, and returns the index of its first occurrence.</span>
          </span>
          <span data-ttu-id="0cffc-1359">The range extends from a specified index for a specified number of elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1359">The range extends from a specified index for a specified number of elements.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1360">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1360">The zero-based index of the first occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that starts at <paramref name="startIndex" /> and contains the number of elements specified in <paramref name="count" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1361">このメソッド searchesthe、1 次元の配列の要素から`startIndex`に`startIndex`plus`count`から 1 を引いた場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1361">This method searchesthe elements of a one-dimensional array from `startIndex` to `startIndex` plus `count` minus 1, if `count` is greater than 0.</span></span> <span data-ttu-id="0cffc-1362">確認するかどうか`value`内に存在する`array`、メソッドを呼び出して、等値比較を実行し、`T.Equals`メソッドのすべての要素をします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1362">To determine whether `value` exists in `array`, the method performs an equality comparison by calling the `T.Equals` method on every element.</span></span> <span data-ttu-id="0cffc-1363">つまり、`T`よりも優先、<xref:System.Object.Equals%2A>メソッド、その上書きが呼び出されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1363">This means that if `T` overrides the <xref:System.Object.Equals%2A> method, that override is called.</span></span>  
  
 <span data-ttu-id="0cffc-1364">場合`startIndex`equals <xref:System.Array.Length%2A?displayProperty=nameWithType>-1 を返します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1364">If `startIndex` equals <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method returns -1.</span></span>  <span data-ttu-id="0cffc-1365">場合`startIndex`がより大きい<xref:System.Array.Length%2A?displayProperty=nameWithType>がスローされます、<xref:System.ArgumentOutOfRangeException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1365">If `startIndex` is greater than <xref:System.Array.Length%2A?displayProperty=nameWithType>, the method throws an <xref:System.ArgumentOutOfRangeException>.</span></span>  
  
 <span data-ttu-id="0cffc-1366">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1366">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1367">次の例では、すべて次の 3 つジェネリック オーバー ロードの<xref:System.Array.IndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1367">The following example demonstrates all three generic overloads of the <xref:System.Array.IndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1368">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1368">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1369"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、最初から配列を検索し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1369">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the array from the beginning, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1370"><xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードが 3 のインデックスの場所を開始位置として、配列と、配列の末尾まで続行を検索するために使用し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1370">The <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array beginning with index location 3 and continuing to the end of the array, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1371">最後に、<xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>その範囲内で検索文字列のインスタンスが存在しないため – 1 を返しますではメソッドのオーバー ロードを使用して、インデックス位置 2 から 2 つのエントリの範囲を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1371">Finally, the <xref:System.Array.IndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of two entries, beginning at index location two; it returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_IndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_IndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_IndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_IndexOf/cs/source.cs#1)]
 [!code-vb[Array_IndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_IndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1372">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1372">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1373">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1373">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1374">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1374">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1375">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1375">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.LastIndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Initialize">
      <MemberSignature Language="C#" Value="public void Initialize ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void Initialize() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Initialize" />
      <MemberSignature Language="VB.NET" Value="Public Sub Initialize ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void Initialize();" />
      <MemberSignature Language="F#" Value="member this.Initialize : unit -&gt; unit" Usage="array.Initialize " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1376">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1376">Initializes every element of the value-type <see cref="T:System.Array" /> by calling the default constructor of the value type.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1377">このメソッドがコンパイラが値型の配列をサポートするように設計されていますほとんどのユーザーには、このメソッドは必要ありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1377">This method is designed to help compilers support value-type arrays; most users do not need this method.</span></span> <span data-ttu-id="0cffc-1378">これは参照型の配列で使用しないでください。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1378">It must not be used on reference-type arrays.</span></span>  
  
 <span data-ttu-id="0cffc-1379">場合、<xref:System.Array>値型ではない<xref:System.Array>または値の型に既定のコンス トラクターがあるない場合、<xref:System.Array>は変更されません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1379">If the <xref:System.Array> is not a value-type <xref:System.Array> or if the value type does not have a default constructor, the <xref:System.Array> is not modified.</span></span>  
  
 <span data-ttu-id="0cffc-1380">値型<xref:System.Array>ディメンションの任意の数と、下限を持つことができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1380">The value-type <xref:System.Array> can have any lower bound and any number of dimensions.</span></span>  
  
 <span data-ttu-id="0cffc-1381">このメソッドは、O (`n`) 操作では、ここで`n`は<xref:System.Array.Length%2A>します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1381">This method is an O(`n`) operation, where `n` is <xref:System.Array.Length%2A>.</span></span>  
  
> [!CAUTION]
>  <span data-ttu-id="0cffc-1382">このメソッドはコンス トラクター; を持つ値型でのみ使用できます。ただし、ネイティブに C# の場合は、値型には、コンス トラクターはありません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1382">You can use this method only on value types that have constructors; however, value types that are native to C# do not have constructors.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="IsFixedSize">
      <MemberSignature Language="C#" Value="public bool IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsFixedSize" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsFixedSize As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsFixedSize : bool" Usage="System.Array.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1383">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1383">Gets a value indicating whether the <see cref="T:System.Array" /> has a fixed size.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1384">このプロパティは常に<see langword="true" />のすべての配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1384">This property is always <see langword="true" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1385"><xref:System.Array> 実装する、<xref:System.Array.IsFixedSize%2A>プロパティが必要としているため、<xref:System.Collections.IList?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1385"><xref:System.Array> implements the <xref:System.Array.IsFixedSize%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="0cffc-1386">固定サイズの配列は、追加または削除できません要素の配列が作成された後で既存の要素は変更できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1386">An array with a fixed size does not allow the addition or removal of elements after the array is created, but it allows the modification of existing elements.</span></span>  
  
 <span data-ttu-id="0cffc-1387">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1387">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
      </Docs>
    </Member>
    <Member MemberName="IsReadOnly">
      <MemberSignature Language="C#" Value="public bool IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsReadOnly" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsReadOnly As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsReadOnly : bool" Usage="System.Array.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1388">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1388">Gets a value indicating whether the <see cref="T:System.Array" /> is read-only.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1389">このプロパティは常に<see langword="false" />のすべての配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1389">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1390"><xref:System.Array> 実装する、<xref:System.Array.IsReadOnly%2A>プロパティが必要としているため、<xref:System.Collections.IList?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1390"><xref:System.Array> implements the <xref:System.Array.IsReadOnly%2A> property because it is required by the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span> <span data-ttu-id="0cffc-1391">読み取り専用配列を追加、削除、または要素の変更後にできません、配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1391">An array that is read-only does not allow the addition, removal, or modification of elements after the array is created.</span></span>  
  
 <span data-ttu-id="0cffc-1392">読み取り専用コレクションを必要とする場合を使用して、<xref:System.Collections>を実装するクラス、<xref:System.Collections.IList?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1392">If you require a read-only collection, use a <xref:System.Collections> class that implements the <xref:System.Collections.IList?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="0cffc-1393">キャストの配列に変換するか、<xref:System.Collections.IList>インターフェイス オブジェクト、<xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType>プロパティから返される`false`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1393">If you cast or convert an array to an <xref:System.Collections.IList> interface object, the <xref:System.Collections.IList.IsReadOnly%2A?displayProperty=nameWithType> property returns `false`.</span></span> <span data-ttu-id="0cffc-1394">ただし、キャストを配列に変換するか、 <xref:System.Collections.Generic.IList%601> 、インターフェイス、`IsReadOnly`プロパティから返される`true`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1394">However, if you cast or convert an array to a <xref:System.Collections.Generic.IList%601> interface, the `IsReadOnly` property returns `true`.</span></span>  
  
 <span data-ttu-id="0cffc-1395">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1395">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.Collections.IList" />
        <altmember cref="N:System.Collections" />
        <altmember cref="T:System.Collections.Generic.IList`1" />
        <altmember cref="N:System.Collections.Generic" />
      </Docs>
    </Member>
    <Member MemberName="IsSynchronized">
      <MemberSignature Language="C#" Value="public bool IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.IsSynchronized" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property IsSynchronized As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property bool IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Value="member this.IsSynchronized : bool" Usage="System.Array.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1396">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1396">Gets a value indicating whether access to the <see cref="T:System.Array" /> is synchronized (thread safe).</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1397">このプロパティは常に<see langword="false" />のすべての配列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1397">This property is always <see langword="false" /> for all arrays.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1398"><xref:System.Array> 実装する、<xref:System.Array.IsSynchronized%2A>プロパティが必要としているため、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1398"><xref:System.Array> implements the <xref:System.Array.IsSynchronized%2A> property because it is required by the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="0cffc-1399">.NET framework のクラスがに基づいて<xref:System.Array>独自の同期されたバージョンを使用して、コレクションの提供、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1399">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="0cffc-1400">配列を使用するクラスに、独自の同期を使用することができますも実装、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1400">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="0cffc-1401">同期されたコードで操作を実行する必要があります、`SyncRoot`コレクションの操作は、コレクションのです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1401">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="0cffc-1402">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1402">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="0cffc-1403">具体的には、コレクションを同時に変更する可能性がある別スレッドとの適切な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1403">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="0cffc-1404">なおの実装によって<xref:System.Array.SyncRoot%2A>返す可能性があります、<xref:System.Array>自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1404">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="0cffc-1405">コレクションの列挙は本質的にスレッド セーフな方法です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1405">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="0cffc-1406">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1406">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cffc-1407">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1407">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="0cffc-1408">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1408">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1409">次のコード例を使用して配列を列挙中にロックする方法を示しています、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1409">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.SyncRoot" />
        <altmember cref="T:System.Collections.ICollection" />
      </Docs>
    </Member>
    <MemberGroup MemberName="LastIndexOf">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1410">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1410">Returns the index of the last occurrence of a value in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj -&gt; int" Usage="System.Array.LastIndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1411">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1411">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1412">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1412">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1413">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1413">Searches for the specified object and returns the index of the last occurrence within the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1414">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1414">The index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1415">1 次元<xref:System.Array>後方の最後の要素の最初と最後の最初の要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1415">The one-dimensional <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1416">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1416">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1417">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1417">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1418">ほとんどの配列が下限を 0 であるためこのメソッドは、通常 – 1 の場合に`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1418">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="0cffc-1419">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>、これは`System.Int32.MinValue - 1`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1419">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="0cffc-1420">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1420">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1421">.NET framework version 2.0 では、このメソッドを使用して、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、<xref:System.Array>を決定するかどうか、<xref:System.Object>によって指定された、`value`パラメーターが存在します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1421">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="0cffc-1422">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、 `value` <xref:System.Object>自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1422">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
 <span data-ttu-id="0cffc-1423"><xref:System.IComparable.CompareTo%2A> メソッド、`item`パラメーター コレクション内のオブジェクトにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1423"><xref:System.IComparable.CompareTo%2A> methods of the `item` parameter on the objects in the collection.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1424">次のコード例では、配列内の指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1424">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1425">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1425">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1426">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1426">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1427">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1427">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1428">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1428">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1429">The starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1429">The starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1430">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1430">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1431">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1431">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1432">1 次元<xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`と最初の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1432">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1433">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1433">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1434">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1434">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1435">ほとんどの配列が下限を 0 であるためこのメソッドは、通常 – 1 の場合に`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1435">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="0cffc-1436">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>、これは`System.Int32.MinValue - 1`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1436">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="0cffc-1437">このメソッドは、O (`n`) 操作では、ここで`n`の先頭から要素の数は、`array`に`startIndex`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1437">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
 <span data-ttu-id="0cffc-1438">.NET framework version 2.0 では、このメソッドを使用して、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、<xref:System.Array>を決定するかどうか、<xref:System.Object>によって指定された、`value`パラメーターが存在します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1438">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="0cffc-1439">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、 `value` <xref:System.Object>自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1439">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1440">次のコード例では、配列内の指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1440">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1441">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1441">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1442">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1442">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1443">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1443">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf">
      <MemberSignature Language="C#" Value="public static int LastIndexOf (Array array, object value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf(class System.Array array, object value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf(System.Array,System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static int LastIndexOf(Array ^ array, System::Object ^ value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : Array * obj * int * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1444">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1444">The one-dimensional <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1445">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1445">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1446">The starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1446">The starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-1447">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1447">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1448">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1448">Searches for the specified object and returns the index of the last occurrence within the range of elements in the one-dimensional <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1449">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1449">The index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, the lower bound of the array minus 1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1450">1 次元<xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`で終わる`startIndex`マイナス`count`1、さらに場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1450">The one-dimensional <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="0cffc-1451">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1451">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1452">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1452">If the element type is a nonintrinsic (user-defined) type, the`Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1453">ほとんどの配列が下限を 0 であるためこのメソッドは、通常 – 1 の場合に`value`が見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1453">Since most arrays will have a lower bound of zero, this method would generally return –1 when `value` is not found.</span></span> <span data-ttu-id="0cffc-1454">配列の下限の境界と等しいというまれなケース<xref:System.Int32.MinValue?displayProperty=nameWithType>と`value`が見つからない、このメソッドが戻る<xref:System.Int32.MaxValue?displayProperty=nameWithType>、これは`System.Int32.MinValue - 1`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1454">In the rare case that the lower bound of the array is equal to <xref:System.Int32.MinValue?displayProperty=nameWithType> and `value` is not found, this method returns <xref:System.Int32.MaxValue?displayProperty=nameWithType>, which is `System.Int32.MinValue - 1`.</span></span>  
  
 <span data-ttu-id="0cffc-1455">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1455">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
 <span data-ttu-id="0cffc-1456">.NET framework version 2.0 では、このメソッドを使用して、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、<xref:System.Array>を決定するかどうか、<xref:System.Object>によって指定された、`value`パラメーターが存在します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1456">In the .NET Framework version 2.0, this method uses the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the <xref:System.Array> to determine whether the <xref:System.Object> specified by the `value` parameter exists.</span></span> <span data-ttu-id="0cffc-1457">.NET Framework の以前のバージョンでは、この決定を使用して行われた、<xref:System.Object.Equals%2A>と<xref:System.IComparable.CompareTo%2A>のメソッド、 `value` <xref:System.Object>自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1457">In the earlier versions of the .NET Framework, this determination was made by using the <xref:System.Object.Equals%2A> and <xref:System.IComparable.CompareTo%2A> methods of the `value`<xref:System.Object> itself.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1458">次のコード例では、配列内の指定した要素の最後に見つかった位置のインデックスを確認する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1458">The following code example shows how to determine the index of the last occurrence of a specified element in an array.</span></span> <span data-ttu-id="0cffc-1459">注意してください、<xref:System.Array.LastIndexOf%2A>メソッドは逆方向検索です。 したがって、`count`以下にする必要があります (`startIndex`マイナス 1 を足した数、配列の下限値)。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1459">Note that the <xref:System.Array.LastIndexOf%2A> method is a backward search; therefore, `count` must be less than or equal to (`startIndex` minus the lower bound of the array plus 1).</span></span>  
  
 [!code-cpp[Classic Array.LastIndexOf Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.LastIndexOf Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/CS/source.cs#1)]
 [!code-vb[Classic Array.LastIndexOf Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.LastIndexOf Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1460">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1460">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1461">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1461">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1462">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1462">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1463">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1464">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1464">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T -&gt; int" Usage="System.Array.LastIndexOf (array, value)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1465">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1465">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1466">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1466">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1467">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1467">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1468">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1468">Searches for the specified object and returns the index of the last occurrence within the entire <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1469">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1469">The zero-based index of the last occurrence of <paramref name="value" /> within the entire <paramref name="array" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1470"><xref:System.Array>後方の最後の要素の最初と最後の最初の要素を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1470">The <xref:System.Array> is searched backward starting at the last element and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1471">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1471">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1472">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1472">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1473">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1473">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1474">次のコード例をすべて次の 3 つジェネリックのオーバー ロードを示しています、<xref:System.Array.LastIndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1474">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1475">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1475">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1476"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、末尾から配列全体を検索し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1476">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1477"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードは、旧バージョンと配列はインデックスの場所に 3 と、配列の先頭に継続を検索するために使用し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1477">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1478">最後に、<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>メソッドのオーバー ロードが、インデックスの位置 4 に開始し、逆方向に拡張する 4 つのエントリの範囲を検索に使用される (つまり、その項目を検索、4、3、2、および 1 の場所で); 検索のインスタンスが存在しないために、この検索は – 1 を返しますその範囲内の文字列。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1478">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1479">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1479">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1480">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1480">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1481">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1481">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1482">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1482">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1483">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1483">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1484">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1484">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that extends from the first element to the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1485">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1485">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that extends from the first element to <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1486"><xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`と最初の要素で終了します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1486">The <xref:System.Array> is searched backward starting at `startIndex` and ending at the first element.</span></span>  
  
 <span data-ttu-id="0cffc-1487">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1487">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1488">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1488">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1489">このメソッドは、O (`n`) 操作では、ここで`n`の先頭から要素の数は、`array`に`startIndex`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1489">This method is an O(`n`) operation, where `n` is the number of elements from the beginning of `array` to `startIndex`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1490">次のコード例をすべて次の 3 つジェネリックのオーバー ロードを示しています、<xref:System.Array.LastIndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1490">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1491">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1491">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1492"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、末尾から配列全体を検索し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1492">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1493"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードは、旧バージョンと配列はインデックスの場所に 3 と、配列の先頭に継続を検索するために使用し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1493">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1494">最後に、<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>メソッドのオーバー ロードが、インデックスの位置 4 に開始し、逆方向に拡張する 4 つのエントリの範囲を検索に使用される (つまり、その項目を検索、4、3、2、および 1 の場所で); 検索のインスタンスが存在しないために、この検索は – 1 を返しますその範囲内の文字列。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1494">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1495">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1495">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1496">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1496">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="LastIndexOf&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static int LastIndexOf&lt;T&gt; (T[] array, T value, int startIndex, int count);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int32 LastIndexOf&lt;T&gt;(!!T[] array, !!T value, int32 startIndex, int32 count) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.LastIndexOf``1(``0[],``0,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function LastIndexOf(Of T) (array As T(), value As T, startIndex As Integer, count As Integer) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static int LastIndexOf(cli::array &lt;T&gt; ^ array, T value, int startIndex, int count);" />
      <MemberSignature Language="F#" Value="static member LastIndexOf : 'T[] * 'T * int * int -&gt; int" Usage="System.Array.LastIndexOf (array, value, startIndex, count)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="value" Type="T" />
        <Parameter Name="startIndex" Type="System.Int32" />
        <Parameter Name="count" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1497">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1497">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1498">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1498">The one-dimensional, zero-based <see cref="T:System.Array" /> to search.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-1499">The object to locate in <c>array</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1499">The object to locate in <c>array</c>.</span>
          </span>
        </param>
        <param name="startIndex">
          <span data-ttu-id="0cffc-1500">The zero-based starting index of the backward search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1500">The zero-based starting index of the backward search.</span>
          </span>
        </param>
        <param name="count">
          <span data-ttu-id="0cffc-1501">The number of elements in the section to search.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1501">The number of elements in the section to search.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1502">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1502">Searches for the specified object and returns the index of the last occurrence within the range of elements in the <see cref="T:System.Array" /> that contains the specified number of elements and ends at the specified index.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-1503">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1503">The zero-based index of the last occurrence of <paramref name="value" /> within the range of elements in <paramref name="array" /> that contains the number of elements specified in <paramref name="count" /> and ends at <paramref name="startIndex" />, if found; otherwise, –1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1504"><xref:System.Array>検索旧バージョンとを開始位置として、`startIndex`で終わる`startIndex`マイナス`count`1、さらに場合`count`が 0 より大きい。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1504">The <xref:System.Array> is searched backward starting at `startIndex` and ending at `startIndex` minus `count` plus 1, if `count` is greater than 0.</span></span>  
  
 <span data-ttu-id="0cffc-1505">要素は、指定した値を使用して、<xref:System.Object.Equals%2A?displayProperty=nameWithType>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1505">The elements are compared to the specified value using the <xref:System.Object.Equals%2A?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="0cffc-1506">要素の型が非組み込みの (ユーザー定義) 型の場合、`Equals`その型の実装を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1506">If the element type is a nonintrinsic (user-defined) type, the `Equals` implementation of that type is used.</span></span>  
  
 <span data-ttu-id="0cffc-1507">このメソッドは、O (`n`) 操作では、ここで`n`は`count`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1507">This method is an O(`n`) operation, where `n` is `count`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1508">次のコード例をすべて次の 3 つジェネリックのオーバー ロードを示しています、<xref:System.Array.LastIndexOf%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1508">The following code example demonstrates all three generic overloads of the <xref:System.Array.LastIndexOf%2A> method.</span></span> <span data-ttu-id="0cffc-1509">インデックス位置 0 と 5 のインデックス位置に 2 回、表示される 1 つのエントリで、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1509">An array of strings is created, with one entry that appears twice, at index location 0 and index location 5.</span></span> <span data-ttu-id="0cffc-1510"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29>メソッドのオーバー ロードは、末尾から配列全体を検索し、文字列の 2 番目の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1510">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%29> method overload searches the entire array from the end, and finds the second occurrence of the string.</span></span> <span data-ttu-id="0cffc-1511"><xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29>メソッドのオーバー ロードは、旧バージョンと配列はインデックスの場所に 3 と、配列の先頭に継続を検索するために使用し、文字列の最初の出現箇所を検索します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1511">The <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%29> method overload is used to search the array backward beginning with index location 3 and continuing to the beginning of the array, and finds the first occurrence of the string.</span></span> <span data-ttu-id="0cffc-1512">最後に、<xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29>メソッドのオーバー ロードが、インデックスの位置 4 に開始し、逆方向に拡張する 4 つのエントリの範囲を検索に使用される (つまり、その項目を検索、4、3、2、および 1 の場所で); 検索のインスタンスが存在しないために、この検索は – 1 を返しますその範囲内の文字列。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1512">Finally, the <xref:System.Array.LastIndexOf%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Int32%2CSystem.Int32%29> method overload is used to search a range of four entries, beginning at index location 4 and extending backward (that is, it searches the items at locations 4, 3, 2, and 1); this search returns –1 because there are no instances of the search string in that range.</span></span>  
  
 [!code-cpp[Array_LastIndexOf#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_LastIndexOf/cpp/source.cpp#1)]
 [!code-csharp[Array_LastIndexOf#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_LastIndexOf/cs/source.cs#1)]
 [!code-vb[Array_LastIndexOf#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_LastIndexOf/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1513">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1513">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1514">
            <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1514">
              <paramref name="startIndex" /> is outside the range of valid indexes for <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1515">-or-  <paramref name="count" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1515">-or-  <paramref name="count" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-1516">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1516">-or-  <paramref name="startIndex" /> and <paramref name="count" /> do not specify a valid section in <paramref name="array" />.</span>
          </span>
        </exception>
        <altmember cref="Overload:System.Array.IndexOf" />
      </Docs>
    </Member>
    <Member MemberName="Length">
      <MemberSignature Language="C#" Value="public int Length { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Length" />
      <MemberSignature Language="DocId" Value="P:System.Array.Length" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Length As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Length { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Length : int" Usage="System.Array.Length" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1517">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1517">Gets the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1518">すべてのディメンション内の要素の合計数、<see cref="T:System.Array" />配列の要素が存在しない場合はゼロです。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1518">The total number of elements in all the dimensions of the <see cref="T:System.Array" />; zero if there are no elements in the array.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1519">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1519">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1520">次の例では、<xref:System.Array.Length%2A>配列内の要素の合計数を取得するプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1520">The following example uses the <xref:System.Array.Length%2A> property to get the total number of elements in an array.</span></span> <span data-ttu-id="0cffc-1521">また、使用、<xref:System.Array.GetUpperBound%2A>多次元配列の各次元内の要素の数を決定するメソッド。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1521">It also uses the <xref:System.Array.GetUpperBound%2A> method to determine the number of elements in each dimension of a multidimensional array.</span></span>  
  
 [!code-csharp[System.Array.Length#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.length/cs/length1.cs#1)]
 [!code-vb[System.Array.Length#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.length/vb/length1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="0cffc-1522">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1522">The array is multidimensional and contains more than <see cref="F:System.Int32.MaxValue" /> elements.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="LongLength">
      <MemberSignature Language="C#" Value="public long LongLength { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int64 LongLength" />
      <MemberSignature Language="DocId" Value="P:System.Array.LongLength" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property LongLength As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property long LongLength { long get(); };" />
      <MemberSignature Language="F#" Value="member this.LongLength : int64" Usage="System.Array.LongLength" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1523">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1523">Gets a 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1524">すべてのディメンション内の要素の合計数を表す 64 ビットの整数、<see cref="T:System.Array" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1524">A 64-bit integer that represents the total number of elements in all the dimensions of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1525">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1525">Retrieving the value of this property is an O(1) operation.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
        <altmember cref="P:System.Array.Length" />
        <altmember cref="P:System.Collections.ICollection.Count" />
        <altmember cref="P:System.Array.Rank" />
      </Docs>
    </Member>
    <Member MemberName="Rank">
      <MemberSignature Language="C#" Value="public int Rank { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 Rank" />
      <MemberSignature Language="DocId" Value="P:System.Array.Rank" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property Rank As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property int Rank { int get(); };" />
      <MemberSignature Language="F#" Value="member this.Rank : int" Usage="System.Array.Rank" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>get: System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.Success)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1526">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1526">Gets the rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1527">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1527">For example, a one-dimensional array returns 1, a two-dimensional array returns 2, and so on.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-1528">ランク (次元数)、<see cref="T:System.Array" />です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1528">The rank (number of dimensions) of the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1529">たとえば、Visual Basic コード</span><span class="sxs-lookup"><span data-stu-id="0cffc-1529">For example, the Visual Basic code</span></span>  
  
```vb  
Dim TDArray(0,0,0) As Integer  
```  
  
 <span data-ttu-id="0cffc-1530">および c# コード</span><span class="sxs-lookup"><span data-stu-id="0cffc-1530">and the C# code</span></span>  
  
```csharp  
int[,,] TDArray = new int[1,1,1];  
```  
  
 <span data-ttu-id="0cffc-1531">次の 3 つの次元の配列を作成、<xref:System.Array.Rank%2A>プロパティの値は 3 です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1531">create an array of three dimensions with a <xref:System.Array.Rank%2A> property whose value is 3.</span></span>  
  
 <span data-ttu-id="0cffc-1532">ジャグ配列 (配列の配列) が 1 次元配列です。値、<xref:System.Array.Rank%2A>プロパティは 1 です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1532">A jagged array (an array of arrays) is a one-dimensional array; the value of its <xref:System.Array.Rank%2A> property is 1.</span></span>  
  
 <span data-ttu-id="0cffc-1533">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1533">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1534">次の例は、1 次元の配列、2 次元の配列およびジャグ配列を初期化し、取得、<xref:System.Array.Rank%2A>それぞれのプロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1534">The following example initializes a one-dimensional array, a two-dimensional array, and a jagged array, and retrieves the <xref:System.Array.Rank%2A> property of each.</span></span>  
  
 [!code-csharp[System.Array.Rank#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.rank/cs/rank1.cs#1)]
 [!code-vb[System.Array.Rank#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.rank/vb/rank1.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.Length" />
        <altmember cref="M:System.Array.GetLength(System.Int32)" />
        <altmember cref="P:System.Array.LongLength" />
        <altmember cref="M:System.Array.GetLongLength(System.Int32)" />
      </Docs>
    </Member>
    <Member MemberName="Resize&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Resize&lt;T&gt; (ref T[] array, int newSize);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Resize&lt;T&gt;(!!T[]&amp; array, int32 newSize) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Resize``1(``0[]@,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Resize(Of T) (ByRef array As T(), newSize As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Resize(cli::array &lt;T&gt; ^ % array, int newSize);" />
      <MemberSignature Language="F#" Value="static member Resize :  * int -&gt; unit" Usage="System.Array.Resize (array, newSize)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]&amp;" RefType="ref" />
        <Parameter Name="newSize" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1535">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1535">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1536">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1536">The one-dimensional, zero-based array to resize, or <see langword="null" /> to create a new array with the specified size.</span>
          </span>
        </param>
        <param name="newSize">
          <span data-ttu-id="0cffc-1537">The size of the new array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1537">The size of the new array.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1538">Changes the number of elements of a one-dimensional array to the specified new size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1538">Changes the number of elements of a one-dimensional array to the specified new size.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1539">このメソッドは、指定したサイズで新しい配列を割り当てます、元の配列から新しい 1 つに要素をコピーし、し、元の配列を新しいものに置き換えます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1539">This method allocates a new array with the specified size, copies elements from the old array to the new one, and then replaces the old array with the new one.</span></span> <span data-ttu-id="0cffc-1540">`array` 1 次元配列である必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1540">`array` must be a one-dimensional array.</span></span>  
  
 <span data-ttu-id="0cffc-1541">場合`array`は`null`、このメソッドは、指定したサイズで新しい配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1541">If `array` is `null`, this method creates a new array with the specified size.</span></span>  
  
 <span data-ttu-id="0cffc-1542">場合`newSize`がより大きい、<xref:System.Array.Length%2A>元の配列の新しい配列が割り当てられ、すべての要素が元の配列から新しい 1 つにコピーします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1542">If `newSize` is greater than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and all the elements are copied from the old array to the new one.</span></span>  <span data-ttu-id="0cffc-1543">場合`newSize`はより小さい<xref:System.Array.Length%2A>元の配列の新しい配列が割り当てられている、要素がコピーされた元の配列から新しいゲートウェイに新しいが塗りつぶされるまで以外の場合は元の配列内の要素の残りの部分は無視されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1543">If `newSize` is less than the <xref:System.Array.Length%2A> of the old array, a new array is allocated and elements are copied from the old array to the new one until the new one is filled; the rest of the elements in the old array are ignored.</span></span>  <span data-ttu-id="0cffc-1544">場合`newSize`と等しい、<xref:System.Array.Length%2A>の元の配列では、このメソッドでは何も行われません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1544">If `newSize` is equal to the <xref:System.Array.Length%2A> of the old array, this method does nothing.</span></span>  
  
 <span data-ttu-id="0cffc-1545">このメソッドは、O (`n`) 操作では、ここで`n`は`newSize`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1545">This method is an O(`n`) operation, where `n` is `newSize`.</span></span>  
  
 <span data-ttu-id="0cffc-1546"><xref:System.Array.Resize%2A>メソッド サイズを 1 次元配列のみを変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1546">The <xref:System.Array.Resize%2A> method resizes a one-dimensional array only.</span></span> <span data-ttu-id="0cffc-1547"><xref:System.Array>多次元配列のサイズを変更するためのメソッドがクラスに含まれません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1547">The <xref:System.Array> class does not include a method for resizing multi-dimensional arrays.</span></span> <span data-ttu-id="0cffc-1548">これを行うには、独自のコードを指定するか、サード パーティ ライブラリで特殊なメソッドを呼び出す必要があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1548">To do this, you must either provide your own code or call a special-purpose method in a third-party library.</span></span> <span data-ttu-id="0cffc-1549">次のコードは、1 つの配列のサイズを変更するメソッドの実装を示しています。 *n*ディメンションです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1549">The following code illustrates one possible implementation for a method that resizes an array of *n* dimensions.</span></span>  
  
 [!code-csharp[System.Array.Resize#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/resizexd.cs#2)]
 [!code-vb[System.Array.Resize#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/resizexd.vb#2)]  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1550">次の例では、配列のサイズを変更するしくみを示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1550">The following example shows how resizing affects the array.</span></span>  
  
 [!code-cpp[System.Array.Resize#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Resize/CPP/System.Array.Resize.cpp#1)]
 [!code-csharp[System.Array.Resize#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Resize/CS/arrayresize.cs#1)]
 [!code-vb[System.Array.Resize#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Resize/VB/arrayresize.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1551">
            <paramref name="newSize" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1551">
              <paramref name="newSize" /> is less than zero.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <MemberGroup MemberName="Reverse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1552">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1552">Reverses the order of the elements in a one-dimensional <see cref="T:System.Array" /> or in a portion of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member Reverse : Array -&gt; unit" Usage="System.Array.Reverse array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1553">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1553">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1554">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1554">Reverses the sequence of the elements in the entire one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1555">このメソッドでは、位置にある要素への呼び出し後`myArray[i]`ここで、`i`配列内のすべてのインデックスに移動`myArray[j]`ここで、`j`と等しい`(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1555">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="0cffc-1556">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1556">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1557">次の例に示すように、<xref:System.Array.Reverse%2A>ジャグ配列を反転させるメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1557">As the following example shows, the <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span> <span data-ttu-id="0cffc-1558">現在のカルチャのカレンダーの現在の年の各月の 1 つの要素を持つジャグ配列を初期化します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1558">It initializes a jagged array with one element for each month of the current year in the current culture's calendar.</span></span> <span data-ttu-id="0cffc-1559">各要素には、その月の日と同じ数の要素を配列が含まれています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1559">Each element contains an array with as many elements as that month has days.</span></span> <span data-ttu-id="0cffc-1560">例では、呼び出し、配列の内容を表示する、<xref:System.Array.Reverse%2A>メソッド、および、逆順の配列の内容を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1560">The example displays the contents of the array, calls the <xref:System.Array.Reverse%2A> method, and then displays the contents of the reversed array.</span></span>  
  
 [!code-csharp[System.Array.Reverse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.reverse/cs/reversejagged.cs#1)]
 [!code-vb[System.Array.Reverse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.reverse/vb/reversejagged.vb#1)]  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1561">次のコード例の値の並べ替えを取り消す方法を示しています、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1561">The following code example shows how to reverse the sort of the values in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1562">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1562">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1563">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1563">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse">
      <MemberSignature Language="C#" Value="public static void Reverse (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Reverse(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Reverse : Array * int * int -&gt; unit" Usage="System.Array.Reverse (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1564">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1564">The one-dimensional <see cref="T:System.Array" /> to reverse.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1565">The starting index of the section to reverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1565">The starting index of the section to reverse.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-1566">The number of elements in the section to reverse.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1566">The number of elements in the section to reverse.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1567">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1567">Reverses the sequence of the elements in a range of elements in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1568">このメソッドでは、位置にある要素への呼び出し後`myArray[i]`ここで、`i`配列内のすべてのインデックスに移動`myArray[j]`ここで、`j`と等しい`(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1568">After a call to this method, the element at `myArray[i]`, where `i` is any index in the array, moves to `myArray[j]`, where `j` equals `(myArray.Length + myArray.GetLowerBound(0)) - (i - myArray.GetLowerBound(0)) - 1`.</span></span>  
  
 <span data-ttu-id="0cffc-1569"><xref:System.Array.Reverse%2A>ジャグ配列を反転させるメソッドを使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1569">The <xref:System.Array.Reverse%2A> method can be used to reverse a jagged array.</span></span>  
  
 <span data-ttu-id="0cffc-1570">このメソッドは、O (`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1570">This method is an O(`n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1571">次のコード例は、内の要素の範囲内の値の並べ替えを取り消す方法を示しています、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1571">The following code example shows how to reverse the sort of the values in a range of elements in an <xref:System.Array>.</span></span>  
  
 [!code-cpp[Classic Array.Reverse1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CPP/source.cpp#1)]
 [!code-csharp[Classic Array.Reverse1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/CS/source.cs#1)]
 [!code-vb[Classic Array.Reverse1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_Classic/classic Array.Reverse1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1572">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1572">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1573">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1573">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1574">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1574">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1575">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1575">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1576">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1576">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member Reverse : 'T[] -&gt; unit" Usage="System.Array.Reverse array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Reverse&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Reverse&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Reverse&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Reverse``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Reverse(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Reverse(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Reverse : 'T[] * int * int -&gt; unit" Usage="System.Array.Reverse (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">To be added.</typeparam>
        <param name="array">To be added.</param>
        <param name="index">To be added.</param>
        <param name="length">To be added.</param>
        <summary>To be added.</summary>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="SetValue">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1577">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1577">Sets the specified element in the current <see cref="T:System.Array" /> to the specified value.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int -&gt; unit" Usage="array.SetValue (value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1578">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1578">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1579">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1579">A 32-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1580">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1580">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1581">The index is specified as a 32-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1581">The index is specified as a 32-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1582"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>方法を決定できるかどうかの値`index`が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1582">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1583">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1583">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1584">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1584">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1585">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1585">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1586">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1586">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1587">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1587">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1588">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1588">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1589">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1589">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1590">
            <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1590">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params int[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Integer())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;int&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int[] -&gt; unit" Usage="array.SetValue (value, indices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int32[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1591">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1591">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="0cffc-1592">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1592">A one-dimensional array of 32-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1593">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1593">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1594">The indexes are specified as an array of 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1594">The indexes are specified as an array of 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1595">内の要素の数`indices`内のディメンションの数と同じにする必要があります、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1595">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1596">すべての要素、`indices`配列が多次元で、目的の要素の位置をまとめて指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1596">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1597"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドは、かどうかの値のいずれかを判断できます、`indices`配列が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1597">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1598">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1598">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1599">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1599">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1600">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1600">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1601">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1601">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1602">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1602">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1603">
            <paramref name="indices" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1603">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1604">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1604">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1605">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1605">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1606">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1606">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 -&gt; unit" Usage="array.SetValue (value, index)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1607">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1607">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1608">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1608">A 64-bit integer that represents the position of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1609">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1609">Sets a value to the element at the specified position in the one-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1610">The index is specified as a 64-bit integer.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1610">The index is specified as a 64-bit integer.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1611"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>方法を決定できるかどうかの値`index`が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1611">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether the value of `index` is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1612">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1612">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1613">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1613">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1614">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1614">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1615">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1615">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1616">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1616">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1617">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1617">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1618">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1618">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1619">
            <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1619">
              <paramref name="index" /> is outside the range of valid indexes for the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, params long[] indices);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64[] indices) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64[])" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, ParamArray indices As Long())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, ... cli::array &lt;long&gt; ^ indices);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64[] -&gt; unit" Usage="array.SetValue (value, indices)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="indices" Type="System.Int64[]">
          <Attributes>
            <Attribute>
              <AttributeName>System.ParamArray</AttributeName>
            </Attribute>
          </Attributes>
        </Parameter>
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1620">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1620">The new value for the specified element.</span>
          </span>
        </param>
        <param name="indices">
          <span data-ttu-id="0cffc-1621">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1621">A one-dimensional array of 64-bit integers that represent the indexes specifying the position of the element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1622">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1622">Sets a value to the element at the specified position in the multidimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1623">The indexes are specified as an array of 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1623">The indexes are specified as an array of 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1624">内の要素の数`indices`内のディメンションの数と同じにする必要があります、<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1624">The number of elements in `indices` must equal the number of dimensions in the <xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1625">すべての要素、`indices`配列が多次元で、目的の要素の位置をまとめて指定する必要があります<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1625">All elements in the `indices` array must collectively specify the position of the desired element in the multidimensional <xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1626"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドは、かどうかの値のいずれかを判断できます、`indices`配列が範囲外です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1626">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the values in the `indices` array is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1627">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1627">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1628">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1628">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1629">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1629">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1630">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1630">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1631">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1631">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1632">
            <paramref name="indices" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1632">
              <paramref name="indices" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1633">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1633">The number of dimensions in the current <see cref="T:System.Array" /> is not equal to the number of elements in <paramref name="indices" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1634">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1634">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1635">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1635">Any element in <paramref name="indices" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int * int -&gt; unit" Usage="array.SetValue (value, index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1636">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1636">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="0cffc-1637">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1637">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1638">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1638">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1639">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1639">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1640">The indexes are specified as 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1640">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1641"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1641">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1642">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1642">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1643">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1643">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1644">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1644">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1645">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1645">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1646">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1646">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1647">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1647">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1648">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1648">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1649">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1649">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 * int64 -&gt; unit" Usage="array.SetValue (value, index1, index2)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1650">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1650">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="0cffc-1651">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1651">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1652">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1652">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1653">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1653">Sets a value to the element at the specified position in the two-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1654">The indexes are specified as 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1654">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1655"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1655">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1656">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1656">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1657">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1657">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1658">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1658">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1659">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1659">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1660">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1660">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1661">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1661">The current <see cref="T:System.Array" /> does not have exactly two dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1662">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1662">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1663">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1663">Either <paramref name="index1" /> or <paramref name="index2" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, int index1, int index2, int index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int32 index1, int32 index2, int32 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int32,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Integer, index2 As Integer, index3 As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, int index1, int index2, int index3);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int * int * int -&gt; unit" Usage="array.SetValue (value, index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int32" />
        <Parameter Name="index2" Type="System.Int32" />
        <Parameter Name="index3" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1664">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1664">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="0cffc-1665">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1665">A 32-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1666">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1666">A 32-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="0cffc-1667">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1667">A 32-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1668">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1668">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1669">The indexes are specified as 32-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1669">The indexes are specified as 32-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1670"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1670">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1671">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1671">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1672">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1672">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1673">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1673">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1674">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1674">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1675">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1675">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1676">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1676">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1677">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1677">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.IndexOutOfRangeException">
          <span data-ttu-id="0cffc-1678">
            <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1678">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <Member MemberName="SetValue">
      <MemberSignature Language="C#" Value="public void SetValue (object value, long index1, long index2, long index3);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance void SetValue(object value, int64 index1, int64 index2, int64 index3) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.SetValue(System.Object,System.Int64,System.Int64,System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Sub SetValue (value As Object, index1 As Long, index2 As Long, index3 As Long)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; void SetValue(System::Object ^ value, long index1, long index2, long index3);" />
      <MemberSignature Language="F#" Value="member this.SetValue : obj * int64 * int64 * int64 -&gt; unit" Usage="array.SetValue (value, index1, index2, index3)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.InteropServices.ComVisible(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
        <Parameter Name="index1" Type="System.Int64" />
        <Parameter Name="index2" Type="System.Int64" />
        <Parameter Name="index3" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-1679">The new value for the specified element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1679">The new value for the specified element.</span>
          </span>
        </param>
        <param name="index1">
          <span data-ttu-id="0cffc-1680">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1680">A 64-bit integer that represents the first-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index2">
          <span data-ttu-id="0cffc-1681">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1681">A 64-bit integer that represents the second-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <param name="index3">
          <span data-ttu-id="0cffc-1682">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1682">A 64-bit integer that represents the third-dimension index of the <see cref="T:System.Array" /> element to set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1683">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1683">Sets a value to the element at the specified position in the three-dimensional <see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1684">The indexes are specified as 64-bit integers.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1684">The indexes are specified as 64-bit integers.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1685"><xref:System.Array.GetLowerBound%2A>と<xref:System.Array.GetUpperBound%2A>メソッドでは、範囲外のインデックスのいずれかがいるかどうかを判断できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1685">The <xref:System.Array.GetLowerBound%2A> and <xref:System.Array.GetUpperBound%2A> methods can determine whether any of the indexes is out of bounds.</span></span>  
  
 <span data-ttu-id="0cffc-1686">変換の詳細については、次を参照してください。<xref:System.Convert>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1686">For more information about conversions, see <xref:System.Convert>.</span></span>  
  
 <span data-ttu-id="0cffc-1687">このメソッドは、o (1) 操作です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1687">This method is an O(1) operation.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1688">場合<xref:System.Array.SetValue%2A>を割り当てるため`null`値の型の配列の要素に、要素のすべてのフィールドが 0 に初期化されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1688">If <xref:System.Array.SetValue%2A> is used to assign `null` to an element of an array of value types, all fields of the element are initialized to zero.</span></span> <span data-ttu-id="0cffc-1689">要素の値は、null 参照ではありません、null 参照を検索して見つかりません。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1689">The value of the element is not a null reference, and cannot be found by searching for a null reference.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1690">次のコード例では、設定および 1 次元または多次元配列内の特定の値を取得する方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1690">The following code example demonstrates how to set and get a specific value in a one-dimensional or multidimensional array.</span></span>  
  
 [!code-cpp[System.Array_GetSetValue#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array_GetSetValue/CPP/array_getsetvalue.cpp#1)]
 [!code-csharp[System.Array_GetSetValue#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array_GetSetValue/CS/array_getsetvalue.cs#1)]
 [!code-vb[System.Array_GetSetValue#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array_GetSetValue/VB/array_getsetvalue.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1691">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1691">The current <see cref="T:System.Array" /> does not have exactly three dimensions.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="0cffc-1692">
            <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1692">
              <paramref name="value" /> cannot be cast to the element type of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1693">
            <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1693">
              <paramref name="index1" /> or <paramref name="index2" /> or <paramref name="index3" /> is outside the range of valid indexes for the corresponding dimension of the current <see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.GetLowerBound(System.Int32)" />
        <altmember cref="M:System.Array.GetUpperBound(System.Int32)" />
        <altmember cref="Overload:System.Array.GetValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Sort">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-1694">Sorts the elements in a one-dimensional array.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1694">Sorts the elements in a one-dimensional array.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array);" />
      <MemberSignature Language="F#" Value="static member Sort : Array -&gt; unit" Usage="System.Array.Sort array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1695">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1695">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1696">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1696">Sorts the elements in an entire one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1697">各要素`array`実装する必要があります、<xref:System.IComparable>の他のすべての要素との比較ができるようにするインターフェイス`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1697">Each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1698">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1698">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1699">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1699">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1700">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1700">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1701">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1701">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1702">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1702">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1703">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1703">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1704">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1704">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1705">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1705">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1706">次のコード例の値を並べ替える方法を示しています、<xref:System.Array>既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1706">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1707">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1707">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1708">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1708">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1709">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1709">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1710">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1710">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array -&gt; unit" Usage="System.Array.Sort (keys, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="0cffc-1711">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1711">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-1712">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1712">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1713">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1713">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1714">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1714">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1715">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1715">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1716">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1716">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-1717">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1717">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1718">各キーに、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable>他のすべてのキーの比較ができるようにするインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1718">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-1719">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1719">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-1720">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1720">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-1721">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1721">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1722">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1722">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1723">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1723">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1724">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1724">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1725">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1725">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1726">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1726">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1727">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1727">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1728">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`keys`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1728">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1729">次の例では、キーと値を格納する 2 番目の配列の 2 つの関連付けられている配列を並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1729">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="0cffc-1730">並べ替えを行います既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1730">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1731">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1731">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1732">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1732">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1733">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1733">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-1734">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1734">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1735">
            <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1735">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1736">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1736">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.IDictionary" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (array, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1737">The one-dimensional array to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1737">The one-dimensional array to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-1738">The implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1738">The implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-1739">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1739">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1740">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1740">Sorts the elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1741">場合`comparer`は`null`の各要素`array`実装する必要があります、<xref:System.IComparable>の他のすべての要素との比較ができるようにするインターフェイス`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1741">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1742">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1742">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1743">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1743">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1744">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1744">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1745">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1745">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1746">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1746">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1747">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1747">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1748">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1748">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1749">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1749">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1750">.NET Framework は定義済み<xref:System.Collections.IComparer>実装は、次の表に示されています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1750">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="0cffc-1751">実装</span><span class="sxs-lookup"><span data-stu-id="0cffc-1751">Implementation</span></span>|<span data-ttu-id="0cffc-1752">説明</span><span class="sxs-lookup"><span data-stu-id="0cffc-1752">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1753">任意の 2 つのオブジェクトを比較しますが、文字列の大文字と小文字の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1753">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1754">現在のカルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1754">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1755">インバリアント カルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1755">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1756">型の 2 つのオブジェクトを比較`T`型の既定の並べ替え順序を使用しています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1756">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="0cffc-1757">独自のインスタンスを提供することによって、カスタム比較をサポートすることも<xref:System.Collections.IComparer>実装を`comparer`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1757">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="0cffc-1758">この例ではこれを定義して、`ReverseComparer`クラスの既定の並べ替え順序を反転する型のインスタンス大文字と小文字の文字列比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1758">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1759">次の例では、既定の比較子を使用して文字列 arrayby で値が並べ替えられます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1759">The following example sorts the values in a string arrayby using the default comparer.</span></span> <span data-ttu-id="0cffc-1760">カスタムも定義<xref:System.Collections.IComparer>という名前の実装`ReverseComparer`を反転し、結果オブジェクトの既定の並べ替え順序、大文字と小文字の文字列の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1760">It also defines a custom <xref:System.Collections.IComparer> implementation named `ReverseComparer` that reverses an object's default sort order while performing a case-insensitive string comparison.</span></span> <span data-ttu-id="0cffc-1761">出力は、現在のカルチャによって異なる場合がありますに注意してください。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1761">Note that the output might vary depending on the current culture.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1762">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1762">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1763">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1763">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1764">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1764">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1765">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1765">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-1766">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1766">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-1767">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1767">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (keys, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="0cffc-1768">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1768">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-1769">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1769">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1770">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1770">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-1771">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1771">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-1772">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1772">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1773">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1773">Sorts a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1774">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1774">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1775">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1775">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-1776">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1776">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1777">場合`comparer`は`null`、それぞれのキー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable>他のすべてのキーの比較ができるようにするインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1777">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-1778">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1778">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-1779">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1779">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-1780">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1780">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1781">.NET Framework は定義済み<xref:System.Collections.IComparer>実装は、次の表に示されています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1781">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="0cffc-1782">実装</span><span class="sxs-lookup"><span data-stu-id="0cffc-1782">Implementation</span></span>|<span data-ttu-id="0cffc-1783">説明</span><span class="sxs-lookup"><span data-stu-id="0cffc-1783">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1784">任意の 2 つのオブジェクトを比較しますが、文字列の大文字と小文字の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1784">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1785">現在のカルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1785">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1786">インバリアント カルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1786">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1787">型の 2 つのオブジェクトを比較`T`型の既定の並べ替え順序を使用しています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1787">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="0cffc-1788">独自のインスタンスを提供することによって、カスタム比較をサポートすることも<xref:System.Collections.IComparer>実装を`comparer`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1788">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="0cffc-1789">この例ではこれを定義して、<xref:System.Collections.IComparer>既定の並べ替え順序を反転し、大文字と小文字の文字列比較を実行する実装。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1789">The example does this by defining an <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="0cffc-1790">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1790">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1791">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1791">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1792">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1792">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1793">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1793">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1794">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1794">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1795">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1795">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1796">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`keys`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1796">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `keys`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1797">次の例では、キーと値を格納する 2 番目の配列の 2 つの関連付けられている配列を並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1797">The following example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="0cffc-1798">並べ替えを行います既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1798">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1799">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1799">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1800">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1800">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1801">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1801">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-1802">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1802">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1803">
            <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1803">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-1804">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1804">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-1805">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1805">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1806">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1806">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-1807">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、する並べ替え操作を previouslythrew<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1807">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previouslythrew <see cref="T:System.ArgumentException" /> will not throw an exception, becausethe insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * int * int -&gt; unit" Usage="System.Array.Sort (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1808">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1808">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1809">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1809">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-1810">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1810">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1811">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1811">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1812">内の要素の指定した範囲内の各要素`array`実装する必要があります、<xref:System.IComparable>の他のすべての要素との比較ができるようにするインターフェイス`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1812">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1813">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1813">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1814">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1814">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1815">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1815">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1816">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1816">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1817">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1817">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1818">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1818">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1819">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1819">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1820">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1820">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1821">次のコード例の値を並べ替える方法を示しています、<xref:System.Array>既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1821">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1822">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1822">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1823">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1823">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1824">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1824">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1825">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1825">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1826">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1826">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1827">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1827">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1828">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1828">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * int * int -&gt; unit" Usage="System.Array.Sort (keys, items, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="0cffc-1829">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1829">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-1830">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1830">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1831">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1831">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1832">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1832">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-1833">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1833">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1834">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1834">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable" /> implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1835">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1835">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1836">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1836">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-1837">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1837">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1838">内の要素の指定された範囲内の各キー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable>他のすべてのキーの比較ができるようにするインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1838">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-1839">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1839">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-1840">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1840">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-1841">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1841">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1842">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1842">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1843">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1843">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1844">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1844">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1845">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1845">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1846">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1846">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1847">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1847">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1848">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1848">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1849">次のコード例では、キーと値を格納する 2 番目の配列の 2 つの関連付けられている配列を並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1849">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="0cffc-1850">並べ替えを行います既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1850">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1851">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1851">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1852">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1852">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1853">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1853">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-1854">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1854">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1855">
            <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1855">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="0cffc-1856">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1856">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1857">
            <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1857">
              <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-1858">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1858">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1859">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1859">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1860">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1860">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array array, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array array, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ array, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * int * int * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (array, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="array" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="array">
          <span data-ttu-id="0cffc-1861">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1861">The one-dimensional <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1862">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1862">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-1863">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1863">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-1864">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1864">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-1865">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1865">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1866">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1866">Sorts the elements in a range of elements in a one-dimensional <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1867">場合`comparer`は`null`、内の要素の指定した範囲内の各要素`array`実装する必要があります、<xref:System.IComparable>の他のすべての要素との比較ができるようにするインターフェイス`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1867">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable> interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1868">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1868">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1869">.NET Framework は定義済み<xref:System.Collections.IComparer>実装は、次の表に示されています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1869">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="0cffc-1870">実装</span><span class="sxs-lookup"><span data-stu-id="0cffc-1870">Implementation</span></span>|<span data-ttu-id="0cffc-1871">説明</span><span class="sxs-lookup"><span data-stu-id="0cffc-1871">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1872">任意の 2 つのオブジェクトを比較しますが、文字列の大文字と小文字の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1872">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1873">現在のカルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1873">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1874">インバリアント カルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1874">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1875">型の 2 つのオブジェクトを比較`T`型の既定の並べ替え順序を使用しています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1875">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="0cffc-1876">独自のインスタンスを提供することによって、カスタム比較をサポートすることも<xref:System.Collections.IComparer>実装を`comparer`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1876">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="0cffc-1877">この例ではこれを定義して、`ReverseComparer`クラスの既定の並べ替え順序を反転する型のインスタンス大文字と小文字の文字列比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1877">The example does this by defining a `ReverseComparer` class that reverses the default sort order for instances of a type and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="0cffc-1878">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1878">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1879">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1879">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1880">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1880">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1881">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1881">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1882">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1882">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1883">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1883">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1884">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1884">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1885">次のコード例の値を並べ替える方法を示しています、<xref:System.Array>既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1885">The following code example shows how to sort the values in an <xref:System.Array> using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1886">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1886">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort/CPP/arraysort.cpp#1)]
 [!code-csharp[System.Array.Sort#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort/CS/arraysort.cs#1)]
 [!code-vb[System.Array.Sort#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort/VB/arraysort.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1887">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1887">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1888">
            <paramref name="array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1888">
              <paramref name="array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1889">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1889">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1890">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1890">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1891">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1891">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1892">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1892">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-1893">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1893">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1894">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1894">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-1895">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1895">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort">
      <MemberSignature Language="C#" Value="public static void Sort (Array keys, Array items, int index, int length, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort(class System.Array keys, class System.Array items, int32 index, int32 length, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort(System.Array,System.Array,System.Int32,System.Int32,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort (keys As Array, items As Array, index As Integer, length As Integer, comparer As IComparer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static void Sort(Array ^ keys, Array ^ items, int index, int length, System::Collections::IComparer ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : Array * Array * int * int * System.Collections.IComparer -&gt; unit" Usage="System.Array.Sort (keys, items, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="keys" Type="System.Array" />
        <Parameter Name="items" Type="System.Array" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="keys">
          <span data-ttu-id="0cffc-1896">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1896">The one-dimensional <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-1897">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1897">The one-dimensional <see cref="T:System.Array" /> that contains the items that correspond to each of the keys in the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1898">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1898">-or-  <see langword="null" /> to sort only the <c>keys</c><see cref="T:System.Array" />.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-1899">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1899">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-1900">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1900">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-1901">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1901">The <see cref="T:System.Collections.IComparer" /> implementation to use when comparing elements.</span>
          </span>
          <span data-ttu-id="0cffc-1902">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1902">-or-  <see langword="null" /> to use the <see cref="T:System.IComparable" /> implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1903">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1903">Sorts a range of elements in a pair of one-dimensional <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.IComparer" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1904">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1904">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-1905">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1905">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-1906">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1906">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-1907">場合`comparer`は`null`、内の要素の指定された範囲内の各キー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable>他のすべてのキーの比較ができるようにするインターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1907">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable> interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-1908">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1908">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-1909">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1909">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-1910">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1910">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1911">.NET Framework は定義済み<xref:System.Collections.IComparer>実装は、次の表に示されています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1911">The .NET Framework includes predefined <xref:System.Collections.IComparer> implementations listed in the following table.</span></span>  
  
|<span data-ttu-id="0cffc-1912">実装</span><span class="sxs-lookup"><span data-stu-id="0cffc-1912">Implementation</span></span>|<span data-ttu-id="0cffc-1913">説明</span><span class="sxs-lookup"><span data-stu-id="0cffc-1913">Description</span></span>|  
|--------------------|-----------------|  
|<xref:System.Collections.CaseInsensitiveComparer?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1914">任意の 2 つのオブジェクトを比較しますが、文字列の大文字と小文字の比較を実行します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1914">Compares any two objects, but performs a case-insensitive comparison of strings.</span></span>|  
|<xref:System.Collections.Comparer.Default?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1915">現在のカルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1915">Compares any two objects by using the sorting conventions of the current culture.</span></span>|  
|<xref:System.Collections.Comparer.DefaultInvariant?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1916">インバリアント カルチャの並べ替え規則を使用して、2 つのオブジェクトを比較します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1916">Compares any two objects by using the sorting conventions of the invariant culture.</span></span>|  
|<xref:System.Collections.Generic.Comparer%601.Default%2A?displayProperty=nameWithType>|<span data-ttu-id="0cffc-1917">型の 2 つのオブジェクトを比較`T`型の既定の並べ替え順序を使用しています。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1917">Compares two objects of type `T` by using the type's default sort order.</span></span>|  
  
 <span data-ttu-id="0cffc-1918">独自のインスタンスを提供することによって、カスタム比較をサポートすることも<xref:System.Collections.IComparer>実装を`comparer`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1918">You can also support custom comparisons by providing an instance of your own <xref:System.Collections.IComparer> implementation to the `comparer` parameter.</span></span> <span data-ttu-id="0cffc-1919">この例ではこのカスタムを定義することで<xref:System.Collections.IComparer>既定の並べ替え順序を反転し、大文字と小文字の文字列比較を実行する実装。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1919">The example does this by defining a custom <xref:System.Collections.IComparer> implementation that reverses the default sort order and performs case-insensitive string comparison.</span></span>  
  
 <span data-ttu-id="0cffc-1920">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1920">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1921">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1921">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1922">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1922">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1923">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1923">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1924">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1924">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1925">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1925">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1926">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1926">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1927">次のコード例では、キーと値を格納する 2 番目の配列の 2 つの関連付けられている配列を並べ替える方法を示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1927">The following code example shows how to sort two associated arrays where the first array contains the keys and the second array contains the values.</span></span> <span data-ttu-id="0cffc-1928">並べ替えを行います既定の比較子と並べ替え順序を反転するカスタムの比較演算子を使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1928">Sorts are done using the default comparer and a custom comparer that reverses the sort order.</span></span> <span data-ttu-id="0cffc-1929">現在に応じて結果が異なる場合があります注<xref:System.Globalization.CultureInfo>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1929">Note that the result might vary depending on the current <xref:System.Globalization.CultureInfo>.</span></span>  
  
 [!code-cpp[System.Array.Sort2#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.Sort2/CPP/arraysort2.cpp#1)]
 [!code-csharp[System.Array.Sort2#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.Sort2/CS/arraysort2.cs#1)]
 [!code-vb[System.Array.Sort2#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.Sort2/VB/arraysort2.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1930">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1930">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.RankException">
          <span data-ttu-id="0cffc-1931">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1931">The <paramref name="keys" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
          <span data-ttu-id="0cffc-1932">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1932">-or-  The <paramref name="items" /><see cref="T:System.Array" /> is multidimensional.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-1933">
            <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1933">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="0cffc-1934">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1934">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1935">
            <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1935">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-1936">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1936">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-1937">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1937">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1938">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1938">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-1939">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1939">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-1940">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1940">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1941">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1941">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable" /> interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-1942">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1942">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.IComparer" />
        <altmember cref="T:System.IComparable" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] -&gt; unit" Usage="System.Array.Sort array" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1943">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1943">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1944">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1944">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1945">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1945">Sorts the elements in an entire <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1946">各要素`array`実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスの他のすべての要素との比較ができるようにする`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1946">Each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1947">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1947">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1948">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1948">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1949">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1949">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1950">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1950">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1951">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1951">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1952">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1952">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1953">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1953">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1954">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1954">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1955">次のコード例を示しています、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>ジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1955">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload.</span></span> <span data-ttu-id="0cffc-1956">任意の順序で、文字列の配列が作成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1956">An array of strings is created, in no particular order.</span></span>  
  
 <span data-ttu-id="0cffc-1957">配列が表示され、並べ替え、もう一度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1957">The array is displayed, sorted, and displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1958">呼び出し、<xref:System.Array.Sort%2A>と<xref:System.Array.BinarySearch%2A>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1958">The calls to the <xref:System.Array.Sort%2A> and <xref:System.Array.BinarySearch%2A> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-1959">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1959">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="0cffc-1960"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29>ジェネリック メソッドのオーバー ロードが 2 つの文字列の検索に使用しに含まれていない、配列と 1 つを 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1960">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="0cffc-1961">配列との戻り値、<xref:System.Array.BinarySearch%2A>メソッドに渡される、`ShowWhere`場合は、文字列が検出され、それ以外の場合、要素検索文字列が間に配列を使用した場合は、インデックス値を表示するジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1961">The array and the return value of the <xref:System.Array.BinarySearch%2A> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="0cffc-1962">インデックスが負の値、文字列は、n がない場合、配列のため、`ShowWhere`メソッドにはビットごとの補数 (、~ c# および Visual C は、演算子`Xor`Visual Basic では-1) が検索からより大きい一覧の最初の要素のインデックスを取得ng です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1962">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearch#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearch/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearch#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearch/cs/source.cs#1)]
 [!code-vb[Array_SortSearch#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearch/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1963">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1963">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1964">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1964">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1965">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1965">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1966">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1966">The one-dimensional, zero-base <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-1967">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1967">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1968">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1968">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1969">場合`comparer`は`null`の各要素`array`実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスの他のすべての要素との比較ができるようにする`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1969">If `comparer` is `null`, each element of `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-1970">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1970">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1971">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1971">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1972">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1972">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1973">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1973">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-1974">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1974">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-1975">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1975">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-1976">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1976">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-1977">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1977">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-1978">次のコード例を示しています、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1978">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload and the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload.</span></span>  
  
 <span data-ttu-id="0cffc-1979">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1979">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-1980">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1980">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-1981">配列が表示され、並べ替え、もう一度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1981">The array is displayed, sorted, and displayed again.</span></span> <span data-ttu-id="0cffc-1982">配列を使用するために並べ替える必要があります、<xref:System.Array.BinarySearch%2A>メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1982">Arrays must be sorted in order to use the <xref:System.Array.BinarySearch%2A> method.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-1983">呼び出し、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>と<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1983">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-1984">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1984">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 <span data-ttu-id="0cffc-1985"><xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロードが 2 つの文字列の検索に使用しに含まれていない、配列と 1 つを 1 つです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1985">The <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is then used to search for two strings, one that is not in the array and one that is.</span></span> <span data-ttu-id="0cffc-1986">配列との戻り値、<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>メソッドに渡される、`ShowWhere`場合は、文字列が検出され、それ以外の場合、要素検索文字列が間に配列を使用した場合は、インデックス値を表示するジェネリック メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1986">The array and the return value of the <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> method are passed to the `ShowWhere` generic method, which displays the index value if the string is found, and otherwise the elements the search string would fall between if it were in the array.</span></span> <span data-ttu-id="0cffc-1987">インデックスが負の値、文字列は、n がない場合、配列のため、`ShowWhere`メソッドにはビットごとの補数 (、~ c# および Visual C は、演算子`Xor`Visual Basic では-1) が検索からより大きい一覧の最初の要素のインデックスを取得ng です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1987">The index is negative if the string is not n the array, so the `ShowWhere` method takes the bitwise complement (the ~ operator in C# and Visual C++, `Xor` -1 in Visual Basic) to obtain the index of the first element in the list that is larger than the search string.</span></span>  
  
 [!code-cpp[Array_SortSearchComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortSearchComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortSearchComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortSearchComparer/cs/source.cs#1)]
 [!code-vb[Array_SortSearchComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortSearchComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-1988">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1988">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-1989">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1989">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-1990">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1990">The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-1991">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1991">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-1992">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1992">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, Comparison&lt;T&gt; comparison);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, class System.Comparison`1&lt;!!T&gt; comparison) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Comparison{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), comparison As Comparison(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, Comparison&lt;T&gt; ^ comparison);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * Comparison&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, comparison)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="comparison" Type="System.Comparison&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-1993">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1993">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-1994">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1994">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="comparison">
          <span data-ttu-id="0cffc-1995">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1995">The <see cref="T:System.Comparison`1" /> to use when comparing elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-1996">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-1996">Sorts the elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Comparison`1" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-1997">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1997">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-1998">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1998">This method uses introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-1999">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-1999">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2000">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2000">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2001">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2001">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2002">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2002">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2003">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2003">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2004">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2004">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2005">次のコード例を示しています、<xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29>メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2005">The following code example demonstrates the <xref:System.Collections.Generic.List%601.Sort%28System.Comparison%7B%600%7D%29> method overload.</span></span>  
  
 <span data-ttu-id="0cffc-2006">このコード例は、名前付き文字列に対して代替の比較のメソッドを定義`CompareDinosByLength`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2006">The code example defines an alternative comparison method for strings, named `CompareDinosByLength`.</span></span> <span data-ttu-id="0cffc-2007">このメソッドは次のように機能します。 最初に、テスト、comparandsare`null`、し、null 参照が null でないより小さいとして扱われます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2007">This method works as follows: First, the comparandsare tested for`null`, and a null reference is treated as less than a non-null.</span></span> <span data-ttu-id="0cffc-2008">次に、文字列の長さが比較され、長い文字列は、大きい値を指定するものと見なされます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2008">Second, the string lengths are compared, and the longer string is deemed to be greater.</span></span> <span data-ttu-id="0cffc-2009">3 番目に、長さが等しい場合は、通常の文字列比較は使用されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2009">Third, if the lengths are equal, ordinary string comparison is used.</span></span>  
  
 <span data-ttu-id="0cffc-2010">文字列の配列が作成され、任意の順序で、4 つの文字列に設定されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2010">A array of strings is created and populated with four strings, in no particular order.</span></span> <span data-ttu-id="0cffc-2011">一覧は、空の文字列と null 参照にも含まれます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2011">The list also includes an empty string and a null reference.</span></span> <span data-ttu-id="0cffc-2012">使用して並べ替えられて、一覧が表示されます、<xref:System.Comparison%601>を表すジェネリック デリゲート、`CompareDinosByLength`メソッドを再び表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2012">The list is displayed, sorted using a <xref:System.Comparison%601> generic delegate representing the `CompareDinosByLength` method, and displayed again.</span></span>  
  
 [!code-cpp[Array_SortComparison#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortComparison/cpp/source.cpp#1)]
 [!code-csharp[Array_SortComparison#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortComparison/cs/source.cs#1)]
 [!code-vb[Array_SortComparison#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortComparison/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2013">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2013">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-2014">-or-  <paramref name="comparison" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2014">-or-  <paramref name="comparison" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2015">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2015">The implementation of <paramref name="comparison" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-2016">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2016">For example, <paramref name="comparison" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-2017">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2017">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Comparison`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * int * int -&gt; unit" Usage="System.Array.Sort (array, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-2018">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2018">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-2019">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2019">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-2020">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2020">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-2021">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2021">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2022">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2022">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each element of the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2023">内の要素の指定した範囲内の各要素`array`実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスの他のすべての要素との比較ができるようにする`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2023">Each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-2024">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2024">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2025">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2025">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2026">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2026">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2027">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2027">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2028">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2028">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2029">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2029">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2030">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2030">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2031">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2031">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2032">次のコード例を示しています、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>配列内の範囲を並べ替えるためのジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2032">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="0cffc-2033">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2033">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2034">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2034">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2035">コード例では、作成し、恐竜の名前では、正確に言うと) 後に次の 3 つの恐竜から成る配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2035">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="0cffc-2036"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>ジェネリック メソッドのオーバー ロードが表示されると、配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2036">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="0cffc-2037"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>とジェネリック メソッドのオーバー ロードを使用`ReverseCompare`最後の 3 つの要素を逆の順序で並べ替える。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2037">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="0cffc-2038">徹底的に混乱を防ぐ恐竜が再度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2038">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2039">呼び出し、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>と<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2039">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-2040">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2040">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2041">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2041">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2042">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2042">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2043">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2043">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2044">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2044">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2045">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2045">One or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;T&gt; (T[] array, int index, int length, System.Collections.Generic.IComparer&lt;T&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;T&gt;(!!T[] array, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!T&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``1(``0[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of T) (array As T(), index As Integer, length As Integer, comparer As IComparer(Of T))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static void Sort(cli::array &lt;T&gt; ^ array, int index, int length, System::Collections::Generic::IComparer&lt;T&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'T[] * int * int * System.Collections.Generic.IComparer&lt;'T&gt; -&gt; unit" Usage="System.Array.Sort (array, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-2046">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2046">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-2047">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2047">The one-dimensional, zero-based <see cref="T:System.Array" /> to sort.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-2048">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2048">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-2049">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2049">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-2050">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2050">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2051">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2051">Sorts the elements in a range of elements in an <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2052">場合`comparer`は`null`、内の要素の指定した範囲内の各要素`array`実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスの他のすべての要素との比較ができるようにする`array`です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2052">If `comparer` is `null`, each element within the specified range of elements in `array` must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other element in `array`.</span></span>  
  
 <span data-ttu-id="0cffc-2053">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2053">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2054">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2054">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2055">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2055">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2056">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2056">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2057">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2057">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2058">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2058">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2059">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2059">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2060">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2060">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2061">次のコード例を示しています、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>ジェネリック メソッドのオーバー ロードおよび<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>配列内の範囲を並べ替えるためのジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2061">The following code example demonstrates the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload and the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload for sorting a range in an array.</span></span>  
  
 <span data-ttu-id="0cffc-2062">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2062">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2063">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2063">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2064">コード例では、作成し、恐竜の名前では、正確に言うと) 後に次の 3 つの恐竜から成る配列を表示します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2064">The code example creates and displays an array of dinosaur names, consisting of three herbivores followed by three carnivores (tyrannosaurids, to be precise).</span></span> <span data-ttu-id="0cffc-2065"><xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29>ジェネリック メソッドのオーバー ロードが表示されると、配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2065">The <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Int32%2CSystem.Int32%29> generic method overload is used to sort the last three elements of the array, which is then displayed.</span></span> <span data-ttu-id="0cffc-2066"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>とジェネリック メソッドのオーバー ロードを使用`ReverseCompare`最後の 3 つの要素を逆の順序で並べ替える。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2066">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overload is used with `ReverseCompare` to sort the last three elements in reverse order.</span></span> <span data-ttu-id="0cffc-2067">徹底的に混乱を防ぐ恐竜が再度表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2067">The thoroughly confused dinosaurs are displayed again.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2068">呼び出し、<xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>と<xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドの表示が、対応する非への呼び出しから、他と同じため、Visual Basic、c#、および C は、最初の引数の型から、ジェネリック型パラメーターの型を推論します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2068">The calls to the <xref:System.Array.Sort%60%601%28%60%600%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> and <xref:System.Array.BinarySearch%60%601%28%60%600%5B%5D%2C%60%600%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first argument.</span></span> <span data-ttu-id="0cffc-2069">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2069">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_SortIntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_SortIntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_SortIntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_SortIntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_SortIntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_SortIntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2070">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2070">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2071">
            <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2071">
              <paramref name="index" /> is less than the lower bound of <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2072">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2072">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2073">
            <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2073">
              <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in <paramref name="array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2074">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2074">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-2075">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2075">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2076">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2076">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in <paramref name="array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-2077">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2077">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[])" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue())" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] -&gt; unit" Usage="System.Array.Sort (keys, items)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0cffc-2078">キー用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2078">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0cffc-2079">項目用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2079">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="0cffc-2080">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2080">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-2081">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2081">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2082">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2082">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2083">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2083">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-2084">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2084">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-2085">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2085">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-2086">各キーに、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスとその他のすべてのキーの比較ができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2086">Each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-2087">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2087">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-2088">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2088">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-2089">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2089">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2090">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2090">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2091">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2091">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2092">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2092">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2093">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2093">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2094">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2094">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2095">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2095">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2096">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2096">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2097">次のコード例を示しています、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>、および<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>の並べ替えキーと値を表す配列のペアのジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2097">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="0cffc-2098">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2098">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2099">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2099">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2100">コード例では、作成し、恐竜の名前 (キー) の配列と各恐竜メートル (値) の最大長を表す整数の配列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2100">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="0cffc-2101">配列の並べ替え、および複数回表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2101">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="0cffc-2102"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>オーバー ロードは最初の配列で恐竜名の順序で両方の配列の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2102">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="0cffc-2103"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロード クラスのインスタンスおよび`ReverseCompare`ペアの配列の並べ替え順序を反転させるために使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2103">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2104"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>オーバー ロードは両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2104">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2105"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロードは逆の順序で両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2105">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2106">ジェネリック メソッドの呼び出しの表示が、対応する非への呼び出しの間に違い Visual Basic、c#、および C++ の最初の 2 つの引数の型のジェネリック型パラメーターの型を推論するため。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2106">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="0cffc-2107">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2107">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2108">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2108">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2109">
            <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2109">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2110">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2110">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2111">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2111">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
        <altmember cref="T:System.Collections.Generic.IDictionary`2" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; unit" Usage="System.Array.Sort (keys, items, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0cffc-2112">キー用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2112">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0cffc-2113">項目用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2113">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="0cffc-2114">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2114">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-2115">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2115">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-2116">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2116">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2117">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2117">Sorts a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2118">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2118">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-2119">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2119">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-2120">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2120">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-2121">場合`comparer`は`null`、それぞれのキー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスとその他のすべてのキーの比較ができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2121">If `comparer` is `null`, each key in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-2122">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2122">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-2123">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2123">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-2124">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2124">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2125">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2125">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2126">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2126">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2127">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2127">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2128">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2128">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2129">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2129">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2130">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2130">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2131">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2131">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2132">次のコード例を示しています、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>、[\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 >、<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>、および<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>の並べ替えキーと値を表す配列のペアのジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2132">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>,<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="0cffc-2133">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2133">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2134">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2134">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2135">コード例では、作成し、恐竜の名前 (キー) の配列と各恐竜メートル (値) の最大長を表す整数の配列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2135">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="0cffc-2136">配列の並べ替え、および複数回表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2136">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="0cffc-2137"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>オーバー ロードは最初の配列で恐竜名の順序で両方の配列の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2137">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="0cffc-2138">[\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > のインスタンスおよびオーバー ロード`ReverseCompare`を並べ替え順序を逆にするために使用ペアの配列。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2138">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2139"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>オーバー ロードは両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2139">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2140"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロードは逆の順序で両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2140">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2141">ジェネリック メソッドの呼び出しの表示が、対応する非への呼び出しの間に違い Visual Basic、c#、および C++ の最初の 2 つの引数の型のジェネリック型パラメーターの型を推論するため。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2141">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="0cffc-2142">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2142">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2143">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2143">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2144">
            <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2144">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2145">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2145">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2146">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2146">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-2147">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2147">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2148">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2148">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-2149">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2149">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * int * int -&gt; unit" Usage="System.Array.Sort (keys, items, index, length)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0cffc-2150">キー用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2150">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0cffc-2151">項目用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2151">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="0cffc-2152">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2152">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-2153">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2153">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-2154">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2154">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-2155">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2155">The number of elements in the range to sort.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2156">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2156">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the <see cref="T:System.IComparable`1" /> generic interface implementation of each key.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2157">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2157">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-2158">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2158">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-2159">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2159">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-2160">内の要素の指定された範囲内の各キー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスとその他のすべてのキーの比較ができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2160">Each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-2161">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2161">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-2162">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2162">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-2163">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2163">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2164">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2164">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2165">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2165">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2166">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2166">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2167">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2167">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2168">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2168">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2169">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2169">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2170">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2170">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2171">次のコード例を示しています、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>、[\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 >、および<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>ジェネリック メソッドのオーバー ロード、並べ替えキーと値を表す配列のペア。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2171">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="0cffc-2172">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>` (`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2172">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>` (`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2173">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2173">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2174">コード例では、作成し、恐竜の名前 (キー) の配列と各恐竜メートル (値) の最大長を表す整数の配列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2174">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="0cffc-2175">配列の並べ替え、および複数回表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2175">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="0cffc-2176"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>オーバー ロードは最初の配列で恐竜名の順序で両方の配列の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2176">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="0cffc-2177"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロード クラスのインスタンスおよび`ReverseCompare`ペアの配列の並べ替え順序を反転させるために使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2177">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2178">[\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29 > オーバー ロードは両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2178">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2179"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロードは逆の順序で両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2179">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2180">ジェネリック メソッドの呼び出しの表示が、対応する非への呼び出しの間に違い Visual Basic、c#、および C++ の最初の 2 つの引数の型のジェネリック型パラメーターの型を推論するため。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2180">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="0cffc-2181">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2181">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2182">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2182">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2183">
            <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2183">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="0cffc-2184">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2184">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2185">
            <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2185">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2186">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2186">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2187">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2187">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2188">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2188">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2189">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2189">One or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="Sort&lt;TKey,TValue&gt;">
      <MemberSignature Language="C#" Value="public static void Sort&lt;TKey,TValue&gt; (TKey[] keys, TValue[] items, int index, int length, System.Collections.Generic.IComparer&lt;TKey&gt; comparer);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig void Sort&lt;TKey, TValue&gt;(!!TKey[] keys, !!TValue[] items, int32 index, int32 length, class System.Collections.Generic.IComparer`1&lt;!!TKey&gt; comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.Sort``2(``0[],``1[],System.Int32,System.Int32,System.Collections.Generic.IComparer{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Sub Sort(Of TKey, TValue) (keys As TKey(), items As TValue(), index As Integer, length As Integer, comparer As IComparer(Of TKey))" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename TKey, typename TValue&gt;&#xA; static void Sort(cli::array &lt;TKey&gt; ^ keys, cli::array &lt;TValue&gt; ^ items, int index, int length, System::Collections::Generic::IComparer&lt;TKey&gt; ^ comparer);" />
      <MemberSignature Language="F#" Value="static member Sort : 'Key[] * 'Value[] * int * int * System.Collections.Generic.IComparer&lt;'Key&gt; -&gt; unit" Usage="System.Array.Sort (keys, items, index, length, comparer)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.MayCorruptInstance, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="TKey" />
        <TypeParameter Name="TValue" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="keys" Type="TKey[]" />
        <Parameter Name="items" Type="TValue[]" />
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="length" Type="System.Int32" />
        <Parameter Name="comparer" Type="System.Collections.Generic.IComparer&lt;TKey&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="TKey">
          <span data-ttu-id="0cffc-2190">キー用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2190">The type of the elements of the key array.</span>
          </span>
        </typeparam>
        <typeparam name="TValue">
          <span data-ttu-id="0cffc-2191">項目用の配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2191">The type of the elements of the items array.</span>
          </span>
        </typeparam>
        <param name="keys">
          <span data-ttu-id="0cffc-2192">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2192">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the keys to sort.</span>
          </span>
        </param>
        <param name="items">
          <span data-ttu-id="0cffc-2193">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2193">The one-dimensional, zero-based <see cref="T:System.Array" /> that contains the items that correspond to the keys in <c>keys</c>, or <see langword="null" /> to sort only <c>keys</c>.</span>
          </span>
        </param>
        <param name="index">
          <span data-ttu-id="0cffc-2194">The starting index of the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2194">The starting index of the range to sort.</span>
          </span>
        </param>
        <param name="length">
          <span data-ttu-id="0cffc-2195">The number of elements in the range to sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2195">The number of elements in the range to sort.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-2196">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2196">The <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface implementation to use when comparing elements, or <see langword="null" /> to use the <see cref="T:System.IComparable`1" /> generic interface implementation of each element.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2197">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2197">Sorts a range of elements in a pair of <see cref="T:System.Array" /> objects (one contains the keys and the other contains the corresponding items) based on the keys in the first <see cref="T:System.Array" /> using the specified <see cref="T:System.Collections.Generic.IComparer`1" /> generic interface.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2198">各キーに、 `keys` <xref:System.Array>に対応するアイテムがある、 `items`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2198">Each key in the `keys`<xref:System.Array> has a corresponding item in the `items`<xref:System.Array>.</span></span> <span data-ttu-id="0cffc-2199">キーが、並べ替え、対応する項目の中に再配置される、 `items` <xref:System.Array>同様の位置を変更します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2199">When a key is repositioned during the sorting, the corresponding item in the `items`<xref:System.Array> is similarly repositioned.</span></span> <span data-ttu-id="0cffc-2200">したがって、 `items` <xref:System.Array>内の対応するキーの並べ替え方法に従って並べ替えられて、 `keys`<xref:System.Array>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2200">Therefore, the `items`<xref:System.Array> is sorted according to the arrangement of the corresponding keys in the `keys`<xref:System.Array>.</span></span>  
  
 <span data-ttu-id="0cffc-2201">場合`comparer`は`null`、内の要素の指定された範囲内の各キー、 `keys` <xref:System.Array>実装する必要があります、<xref:System.IComparable%601>ジェネリック インターフェイスとその他のすべてのキーの比較ができるようにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2201">If `comparer` is `null`, each key within the specified range of elements in the `keys`<xref:System.Array> must implement the <xref:System.IComparable%601> generic interface to be capable of comparisons with every other key.</span></span>  
  
 <span data-ttu-id="0cffc-2202">キーよりも項目がありますが、対応するキーのない項目が並べ替えられていない場合を並べ替えることができます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2202">You can sort if there are more items than keys, but the items that have no corresponding keys will not be sorted.</span></span> <span data-ttu-id="0cffc-2203">項目はより多くのキーがある場合に並べ替えることはできません。スローされること、<xref:System.ArgumentException>です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2203">You cannot sort if there are more keys than items; doing this throws an <xref:System.ArgumentException>.</span></span>  
  
 <span data-ttu-id="0cffc-2204">並べ替えが正常に完了していない場合、結果は未定義です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2204">If the sort is not successfully completed, the results are undefined.</span></span>  
  
 <span data-ttu-id="0cffc-2205">このメソッドは、次のような内省的で並べ替え (introsort) アルゴリズムを使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2205">This method uses the introspective sort (introsort) algorithm as follows:</span></span>  
  
-   <span data-ttu-id="0cffc-2206">パーティションのサイズが 16 個未満の要素の場合は、これを使用して、[挿入ソート](https://en.wikipedia.org/wiki/Insertion_sort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2206">If the partition size is fewer than 16 elements, it uses an [insertion sort](https://en.wikipedia.org/wiki/Insertion_sort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2207">パーティションの数が 2 を超える場合 \* ログ<sup>N</sup>ここで、 *N*範囲を使用して、入力配列の[Heapsort](https://en.wikipedia.org/wiki/Heapsort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2207">If the number of partitions exceeds 2 \* Log<sup>N</sup>, where  *N* is the range of the input array, it uses a [Heapsort](https://en.wikipedia.org/wiki/Heapsort) algorithm.</span></span>  
  
-   <span data-ttu-id="0cffc-2208">それ以外の場合、使用して、[クイック ソート](https://en.wikipedia.org/wiki/Quicksort)アルゴリズムです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2208">Otherwise, it uses a [Quicksort](https://en.wikipedia.org/wiki/Quicksort) algorithm.</span></span>  
  
 <span data-ttu-id="0cffc-2209">この実装は、不安定な並べ替えを実行しますつまり、2 つの要素が等しい場合、順序が維持されない可能性があります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2209">This implementation performs an unstable sort; that is, if two elements are equal, their order might not be preserved.</span></span> <span data-ttu-id="0cffc-2210">これに対し、安定した並べ替えには、同じである要素の順序が保持されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2210">In contrast, a stable sort preserves the order of elements that are equal.</span></span>  
  
 <span data-ttu-id="0cffc-2211">最悪の場合、Heapsort とクイック ソート アルゴリズムの使用により並べ替えられた配列の場合は、このメソッドは、O (`n`ログ`n`) 操作では、ここで`n`は`length`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2211">For arrays that are sorted by using the Heapsort and Quicksort algorithms, in the worst case, this method is an O(`n` log `n`) operation, where `n` is `length`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2212">次のコード例を示しています、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>、 <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>、および [\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > の並べ替えキーと値を表す配列のペアのジェネリック メソッドのオーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2212">The following code example demonstrates the <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>, <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>, and [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> generic method overloads, for sorting pairs of arrays that represent keys and values.</span></span>  
  
 <span data-ttu-id="0cffc-2213">このコード例は、名前付き文字列の代替の比較子を定義`ReverseCompare`を実装する、 `IComparer<string>`(`IComparer(Of String)` Visual basic で`IComparer<String^>`Visual C で) ジェネリック インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2213">The code example defines an alternative comparer for strings, named `ReverseCompare`, which implements the `IComparer<string>`(`IComparer(Of String)` in Visual Basic, `IComparer<String^>` in Visual C++) generic interface.</span></span> <span data-ttu-id="0cffc-2214">比較演算子の呼び出し、<xref:System.String.CompareTo%28System.String%29>メソッド、文字列は、低-高にではなく高から低を並べ替えられるように、比較対照値の順序を反転します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2214">The comparer calls the <xref:System.String.CompareTo%28System.String%29> method, reversing the order of the comparands so that the strings sort high-to-low instead of low-to-high.</span></span>  
  
 <span data-ttu-id="0cffc-2215">コード例では、作成し、恐竜の名前 (キー) の配列と各恐竜メートル (値) の最大長を表す整数の配列が表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2215">The code example creates and displays an array of dinosaur names (the keys) and an array of integers representing the maximum length of each dinosaur in meters (the values).</span></span> <span data-ttu-id="0cffc-2216">配列の並べ替え、および複数回表示されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2216">The arrays are then sorted and displayed several times:</span></span>  
  
-   <span data-ttu-id="0cffc-2217"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29>オーバー ロードは最初の配列で恐竜名の順序で両方の配列の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2217">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%29> overload is used to sort both arrays in order of the dinosaur names in the first array.</span></span>  
  
-   <span data-ttu-id="0cffc-2218"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29>オーバー ロード クラスのインスタンスおよび`ReverseCompare`ペアの配列の並べ替え順序を反転させるために使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2218">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload and an instance of `ReverseCompare` are used to reverse the sort order of the paired arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2219"><xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29>オーバー ロードは両方の配列の最後の 3 つの要素の並べ替えに使用します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2219">The <xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%29> overload is used to sort the last three elements of both arrays.</span></span>  
  
-   <span data-ttu-id="0cffc-2220">[\]、TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29 > オーバー ロードは、最後の 3 つの並べ替えに使用逆の順序で両方の要素を配列します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2220">The [\], TValue\<xref:System.Array.Sort%60%602%28%60%600%5B%5D%2C%60%601%5B%5D%2CSystem.Int32%2CSystem.Int32%2CSystem.Collections.Generic.IComparer%7B%60%600%7D%29> overload is used to sort the last three elements of both arrays in reverse order.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2221">ジェネリック メソッドの呼び出しの表示が、対応する非への呼び出しの間に違い Visual Basic、c#、および C++ の最初の 2 つの引数の型のジェネリック型パラメーターの型を推論するため。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2221">The calls to the generic methods do not look any different from calls to their nongeneric counterparts, because Visual Basic, C#, and C++ infer the type of the generic type parameter from the type of the first two arguments.</span></span> <span data-ttu-id="0cffc-2222">使用する場合、 [Ildasm.exe (IL 逆アセンブラー)](~/docs/framework/tools/ildasm-exe-il-disassembler.md)を Microsoft intermediate language (MSIL) を確認するには、ジェネリック メソッドが呼び出されることを確認できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2222">If you use the [Ildasm.exe (IL Disassembler)](~/docs/framework/tools/ildasm-exe-il-disassembler.md) to examine the Microsoft intermediate language (MSIL), you can see that the generic methods are being called.</span></span>  
  
 [!code-cpp[Array_Sort2IntIntIComparer#1](~/samples/snippets/cpp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cpp/source.cpp#1)]
 [!code-csharp[Array_Sort2IntIntIComparer#1](~/samples/snippets/csharp/VS_Snippets_CLR/Array_Sort2IntIntIComparer/cs/source.cs#1)]
 [!code-vb[Array_Sort2IntIntIComparer#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Array_Sort2IntIntIComparer/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2223">
            <paramref name="keys" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2223">
              <paramref name="keys" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2224">
            <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2224">
              <paramref name="index" /> is less than the lower bound of <paramref name="keys" />.</span>
          </span>
          <span data-ttu-id="0cffc-2225">-or-  <paramref name="length" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2225">-or-  <paramref name="length" /> is less than zero.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2226">
            <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2226">
              <paramref name="items" /> is not <see langword="null" />, and the lower bound of <paramref name="keys" /> does not match the lower bound of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2227">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2227">-or-  <paramref name="items" /> is not <see langword="null" />, and the length of <paramref name="keys" /> is greater than the length of <paramref name="items" />.</span>
          </span>
          <span data-ttu-id="0cffc-2228">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2228">-or-  <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="keys" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2229">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2229">-or-  <paramref name="items" /> is not <see langword="null" />, and <paramref name="index" /> and <paramref name="length" /> do not specify a valid range in the <paramref name="items" /><see cref="T:System.Array" />.</span>
          </span>
          <span data-ttu-id="0cffc-2230">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2230">-or-  The implementation of <paramref name="comparer" /> caused an error during the sort.</span>
          </span>
          <span data-ttu-id="0cffc-2231">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2231">For example, <paramref name="comparer" /> might not return 0 when comparing an item with itself.</span>
          </span>
        </exception>
        <exception cref="T:System.InvalidOperationException">
          <span data-ttu-id="0cffc-2232">
            <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2232">
              <paramref name="comparer" /> is <see langword="null" />, and one or more elements in the <paramref name="keys" /><see cref="T:System.Array" /> do not implement the <see cref="T:System.IComparable`1" /> generic interface.</span>
          </span>
        </exception>
        <block subset="none" type="usage">
          <span data-ttu-id="0cffc-2233">
            <para>.NET Framework 4 およびそれ以前のバージョンは、クイック ソート アルゴリズムのみを使用します。クイック ソートを状況によっては、並べ替え操作によってスローされる無効な比較演算子を識別、<see cref="T:System.IndexOutOfRangeException" />例外、およびスロー、<see cref="T:System.ArgumentException" />呼び出し元の例外。以降で、[です。以前の操作の並べ替えがスローされました可能であれば INCLUDE[net_v45](~/includes/net-v45-md.md)]、<see cref="T:System.ArgumentException" />挿入の並べ替えと heapsort アルゴリズムでは、無効な比較演算子が検出されないため、例外がスローされません。ほとんどの場合、これより少ない 16 個の要素を持つ配列に適用されます。</para>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2233">
              <para>The .NET Framework 4 and earlier versions used only the Quicksort algorithm. Quicksort identifies invalid comparers in some situations in which the sorting operation throws an <see cref="T:System.IndexOutOfRangeException" /> exception, and throws an <see cref="T:System.ArgumentException" /> exception to the caller. Starting with the [!INCLUDE[net_v45](~/includes/net-v45-md.md)], it is possible that sorting operations that previously threw <see cref="T:System.ArgumentException" /> will not throw an exception, because the insertion sort and heapsort algorithms do not detect an invalid comparer. For the most part, this applies to arrays with fewer than 16 elements.</para>
            </span>
          </span>
        </block>
        <altmember cref="T:System.Collections.Generic.IComparer`1" />
        <altmember cref="T:System.IComparable`1" />
        <altmember cref="Overload:System.Array.BinarySearch" />
      </Docs>
    </Member>
    <Member MemberName="SyncRoot">
      <MemberSignature Language="C#" Value="public object SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.SyncRoot" />
      <MemberSignature Language="VB.NET" Value="Public ReadOnly Property SyncRoot As Object" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property System::Object ^ SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.SyncRoot : obj" Usage="System.Array.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-2234">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2234">Gets an object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-2235">
            <see cref="T:System.Array" /> へのアクセスの同期に使用できるオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2235">An object that can be used to synchronize access to the <see cref="T:System.Array" />.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2236">このプロパティを実装して、<xref:System.Collections.ICollection?displayProperty=nameWithType>インターフェイスです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2236">This property implements the <xref:System.Collections.ICollection?displayProperty=nameWithType> interface.</span></span>  
  
 <span data-ttu-id="0cffc-2237">.NET framework のクラスがに基づいて<xref:System.Array>独自の同期されたバージョンを使用して、コレクションの提供、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2237">.NET Framework classes based on <xref:System.Array> provide their own synchronized version of the collection using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 <span data-ttu-id="0cffc-2238">配列を使用するクラスに、独自の同期を使用することができますも実装、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2238">Classes that use arrays can also implement their own synchronization using the <xref:System.Array.SyncRoot%2A> property.</span></span> <span data-ttu-id="0cffc-2239">同期されたコードで操作を実行する必要があります、`SyncRoot`コレクションの操作は、コレクションのです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2239">The synchronizing code must perform operations on the `SyncRoot` of the collection, not directly on the collection.</span></span> <span data-ttu-id="0cffc-2240">これにより、他のオブジェクトから派生したコレクションを適切に操作できるようになります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2240">This ensures proper operation of collections that are derived from other objects.</span></span> <span data-ttu-id="0cffc-2241">具体的には、コレクションを同時に変更する可能性がある別スレッドとの適切な同期を維持します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2241">Specifically, it maintains proper synchronization with other threads that might be simultaneously modifying the collection.</span></span> <span data-ttu-id="0cffc-2242">なおの実装によって<xref:System.Array.SyncRoot%2A>返す可能性があります、<xref:System.Array>自体です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2242">Note that some implementations of <xref:System.Array.SyncRoot%2A> might return the <xref:System.Array> itself.</span></span>  
  
 <span data-ttu-id="0cffc-2243">コレクションの列挙は本質的にスレッド セーフな方法です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2243">Enumerating through a collection is intrinsically not a thread safe procedure.</span></span> <span data-ttu-id="0cffc-2244">コレクションの同期がとられている場合でも、別のスレッドによってそのコレクションを変更できるため、変更の結果として列挙子は例外をスローします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2244">Even when a collection is synchronized, other threads can still modify the collection, which causes the enumerator to throw an exception.</span></span> <span data-ttu-id="0cffc-2245">列挙処理を確実にスレッド セーフに行うには、列挙中にコレクションをロックするか、他のスレッドによって行われた変更によってスローされる例外をキャッチします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2245">To guarantee thread safety during enumeration, you can either lock the collection during the entire enumeration or catch the exceptions resulting from changes made by other threads.</span></span>  
  
 <span data-ttu-id="0cffc-2246">このプロパティ値を取得することは、O(1) 操作になります。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2246">Retrieving the value of this property is an O(1) operation.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2247">次のコード例を使用して配列を列挙中にロックする方法を示しています、<xref:System.Array.SyncRoot%2A>プロパティです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2247">The following code example shows how to lock an array during the entire enumeration by using the <xref:System.Array.SyncRoot%2A> property.</span></span>  
  
 [!code-cpp[System.Array.SyncRoot#1](~/samples/snippets/cpp/VS_Snippets_CLR_System/system.Array.SyncRoot/cpp/source.cpp#1)]
 [!code-csharp[System.Array.SyncRoot#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Array.SyncRoot/cs/source.cs#1)]
 [!code-vb[System.Array.SyncRoot#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Array.SyncRoot/vb/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="P:System.Array.IsSynchronized" />
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.Count">
      <MemberSignature Language="C#" Value="int System.Collections.ICollection.Count { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance int32 System.Collections.ICollection.Count" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#Count" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property Count As Integer Implements ICollection.Count" />
      <MemberSignature Language="C++ CLI" Value="property int System.Collections.ICollection.Count { int get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.Count" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.Count</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-2248">Gets the number of elements contained in the <see cref="T:System.Array" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2248">Gets the number of elements contained in the <see cref="T:System.Array" />.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-2249">コレクションに格納されている要素の数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2249">The number of elements contained in the collection.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2250">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2250">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2251">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.ICollection> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2251">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.ICollection> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.IsSynchronized">
      <MemberSignature Language="C#" Value="bool System.Collections.ICollection.IsSynchronized { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.ICollection.IsSynchronized" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#IsSynchronized" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsSynchronized As Boolean Implements ICollection.IsSynchronized" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.ICollection.IsSynchronized { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.IsSynchronized" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.IsSynchronized</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.ICollection.SyncRoot">
      <MemberSignature Language="C#" Value="object System.Collections.ICollection.SyncRoot { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.ICollection.SyncRoot" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#ICollection#SyncRoot" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property SyncRoot As Object Implements ICollection.SyncRoot" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.ICollection.SyncRoot { System::Object ^ get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.ICollection.SyncRoot" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.ICollection.SyncRoot</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Add">
      <MemberSignature Language="C#" Value="int IList.Add (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.Add(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Add(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Add (value As Object) As Integer Implements IList.Add" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.Add(System::Object ^ value) = System::Collections::IList::Add;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Add(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-2252">The object to be added to the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2252">The object to be added to the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2253">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2253">Calling this method always throws a <see cref="T:System.NotSupportedException" /> exception.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2254">Adding a value to an array is not supported.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2254">Adding a value to an array is not supported.</span>
          </span>
          <span data-ttu-id="0cffc-2255">No value is returned.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2255">No value is returned.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2256">通常、<xref:System.Collections.IList.Add%2A?displayProperty=nameWithType>実装では、コレクションにメンバーを追加します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2256">Ordinarily, an <xref:System.Collections.IList.Add%2A?displayProperty=nameWithType> implementation adds a member to a collection.</span></span> <span data-ttu-id="0cffc-2257">ただし、配列がある固定サイズのため (、<xref:System.Array.IsFixedSize%2A>プロパティは常に返します`true`)、このメソッドは常にスロー、<xref:System.NotSupportedException>例外。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2257">However, because arrays have a fixed size (the <xref:System.Array.IsFixedSize%2A> property always returns `true`), this method always throws a <xref:System.NotSupportedException> exception.</span></span>  
  
 <span data-ttu-id="0cffc-2258">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2258">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2259">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2259">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-2260">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2260">The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Clear">
      <MemberSignature Language="C#" Value="void IList.Clear ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Clear() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Clear" />
      <MemberSignature Language="VB.NET" Value="Sub Clear () Implements IList.Clear" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Clear() = System::Collections::IList::Clear;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Clear</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="0cffc-2261">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2261">Removes all items from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2262">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2262">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2263">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2263">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-2264">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2264">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Contains">
      <MemberSignature Language="C#" Value="bool IList.Contains (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IList.Contains(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Contains(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function Contains (value As Object) As Boolean Implements IList.Contains" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IList.Contains(System::Object ^ value) = System::Collections::IList::Contains;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Contains(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-2265">The object to locate in the current list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2265">The object to locate in the current list.</span>
          </span>
          <span data-ttu-id="0cffc-2266">The element to locate can be <see langword="null" /> for reference types.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2266">The element to locate can be <see langword="null" /> for reference types.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2267">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2267">Determines whether an element is in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2268">
            <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2268">
              <see langword="true" /> if <paramref name="value" /> is found in the <see cref="T:System.Collections.IList" />; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2269">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2269">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2270">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2270">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IndexOf">
      <MemberSignature Language="C#" Value="int IList.IndexOf (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IList.IndexOf(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#IndexOf(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function IndexOf (value As Object) As Integer Implements IList.IndexOf" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IList.IndexOf(System::Object ^ value) = System::Collections::IList::IndexOf;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.IndexOf(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute>
          <AttributeName>System.Runtime.ConstrainedExecution.ReliabilityContract(System.Runtime.ConstrainedExecution.Consistency.WillNotCorruptState, System.Runtime.ConstrainedExecution.Cer.MayFail)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-2271">The object to locate in the current list.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2271">The object to locate in the current list.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2272">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2272">Determines the index of a specific item in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2273">The index of value if found in the list; otherwise, -1.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2273">The index of value if found in the list; otherwise, -1.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2274">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2274">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2275">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2275">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Insert">
      <MemberSignature Language="C#" Value="void IList.Insert (int index, object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Insert(int32 index, object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Insert(System.Int32,System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Insert (index As Integer, value As Object) Implements IList.Insert" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Insert(int index, System::Object ^ value) = System::Collections::IList::Insert;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Insert(System.Int32,System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cffc-2276">The index at which <c>value</c> should be inserted.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2276">The index at which <c>value</c> should be inserted.</span>
          </span>
        </param>
        <param name="value">
          <span data-ttu-id="0cffc-2277">The object to insert.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2277">The object to insert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2278">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2278">Inserts an item to the <see cref="T:System.Collections.IList" /> at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2279">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2279">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2280">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2280">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2281">
            <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2281">
              <paramref name="index" /> is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-2282">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2282">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="0cffc-2283">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2283">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
        <exception cref="T:System.NullReferenceException">
          <span data-ttu-id="0cffc-2284">
            <paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2284">
              <paramref name="value" /> is null reference in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsFixedSize">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsFixedSize { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsFixedSize" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsFixedSize" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsFixedSize As Boolean Implements IList.IsFixedSize" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsFixedSize { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.IsFixedSize" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsFixedSize</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.IsReadOnly">
      <MemberSignature Language="C#" Value="bool System.Collections.IList.IsReadOnly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance bool System.Collections.IList.IsReadOnly" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#IsReadOnly" />
      <MemberSignature Language="VB.NET" Value=" ReadOnly Property IsReadOnly As Boolean Implements IList.IsReadOnly" />
      <MemberSignature Language="C++ CLI" Value="property bool System.Collections.IList.IsReadOnly { bool get(); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.IsReadOnly" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.IsReadOnly</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>To be added.</summary>
        <value>To be added.</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Item">
      <MemberSignature Language="C#" Value="object System.Collections.IList.Item[int index] { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance object System.Collections.IList.Item(int32)" />
      <MemberSignature Language="DocId" Value="P:System.Array.System#Collections#IList#Item(System.Int32)" />
      <MemberSignature Language="VB.NET" Value=" Property Item(index As Integer) As Object Implements IList.Item" />
      <MemberSignature Language="C++ CLI" Value="property System::Object ^ System.Collections.IList.Item[int] { System::Object ^ get(int index); void set(int index, System::Object ^ value); };" />
      <MemberSignature Language="F#" Usage="System.Array.System.Collections.IList.Item" />
      <MemberType>Property</MemberType>
      <Implements>
        <InterfaceMember>P:System.Collections.IList.Item(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cffc-2285">The index of the element to get or set.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2285">The index of the element to get or set.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2286">Gets or sets the element at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2286">Gets or sets the element at the specified index.</span>
          </span>
        </summary>
        <value>
          <span data-ttu-id="0cffc-2287">指定したインデックス位置にある要素。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2287">The element at the specified index.</span>
          </span>
        </value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2288">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2288">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2289">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2289">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2290">
            <paramref name="index" /> is less than zero.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2290">
              <paramref name="index" /> is less than zero.</span>
          </span>
          <span data-ttu-id="0cffc-2291">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2291">-or-  <paramref name="index" /> is equal to or greater than <see cref="P:System.Collections.ICollection.Count" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="0cffc-2292">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2292">The current <see cref="T:System.Array" /> does not have exactly one dimension.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.Remove">
      <MemberSignature Language="C#" Value="void IList.Remove (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.Remove(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#Remove(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Sub Remove (value As Object) Implements IList.Remove" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.Remove(System::Object ^ value) = System::Collections::IList::Remove;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.Remove(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="0cffc-2293">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2293">The object to remove from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2294">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2294">Removes the first occurrence of a specific object from the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2295">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2295">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2296">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2296">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-2297">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2297">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="0cffc-2298">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2298">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IList.RemoveAt">
      <MemberSignature Language="C#" Value="void IList.RemoveAt (int index);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance void System.Collections.IList.RemoveAt(int32 index) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IList#RemoveAt(System.Int32)" />
      <MemberSignature Language="VB.NET" Value="Sub RemoveAt (index As Integer) Implements IList.RemoveAt" />
      <MemberSignature Language="C++ CLI" Value=" virtual void System.Collections.IList.RemoveAt(int index) = System::Collections::IList::RemoveAt;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IList.RemoveAt(System.Int32)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="index" Type="System.Int32" />
      </Parameters>
      <Docs>
        <param name="index">
          <span data-ttu-id="0cffc-2299">The index of the element to remove.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2299">The index of the element to remove.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2300">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2300">Removes the <see cref="T:System.Collections.IList" /> item at the specified index.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2301">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2301">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2302">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IList> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2302">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IList> interface.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentOutOfRangeException">
          <span data-ttu-id="0cffc-2303">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2303">index is not a valid index in the <see cref="T:System.Collections.IList" />.</span>
          </span>
        </exception>
        <exception cref="T:System.NotSupportedException">
          <span data-ttu-id="0cffc-2304">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2304">The <see cref="T:System.Collections.IList" /> is read-only.</span>
          </span>
          <span data-ttu-id="0cffc-2305">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2305">-or-  The <see cref="T:System.Collections.IList" /> has a fixed size.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IStructuralComparable.CompareTo (object other, System.Collections.IComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralComparable.CompareTo(object other, class System.Collections.IComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralComparable#CompareTo(System.Object,System.Collections.IComparer)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (other As Object, comparer As IComparer) As Integer Implements IStructuralComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralComparable.CompareTo(System::Object ^ other, System::Collections::IComparer ^ comparer) = System::Collections::IStructuralComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralComparable.CompareTo(System.Object,System.Collections.IComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0cffc-2306">The object to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2306">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-2307">An object that compares the current object and <c>other</c>.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2307">An object that compares the current object and <c>other</c>.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2308">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2308">Determines whether the current collection object precedes, occurs in the same position as, or follows another object in the sort order.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2309">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2309">An integer that indicates the relationship of the current collection object to other, as shown in the following table.</span>
          </span>
          <span data-ttu-id="0cffc-2310">
            <list type="table">
              <listheader>
                <term> Return value  </term>
                <description> Description  </description>
              </listheader>
              <item>
                <term> -1  </term>
                <description> The current instance precedes <paramref name="other" />.  </description>
              </item>
              <item>
                <term> 0  </term>
                <description> The current instance and <paramref name="other" /> are equal.  </description>
              </item>
              <item>
                <term> 1  </term>
                <description> The current instance follows <paramref name="other" />.  </description>
              </item>
            </list>
          </span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2310">
              <list type="table">
                <listheader>
                  <term> Return value  </term>
                  <description> Description  </description>
                </listheader>
                <item>
                  <term> -1  </term>
                  <description> The current instance precedes <paramref name="other" />.  </description>
                </item>
                <item>
                  <term> 0  </term>
                  <description> The current instance and <paramref name="other" /> are equal.  </description>
                </item>
                <item>
                  <term> 1  </term>
                  <description> The current instance follows <paramref name="other" />.  </description>
                </item>
              </list>
            </span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2311">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2311">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2312">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IStructuralComparable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2312">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralComparable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.Equals">
      <MemberSignature Language="C#" Value="bool IStructuralEquatable.Equals (object other, System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.Collections.IStructuralEquatable.Equals(object other, class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#Equals(System.Object,System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function Equals (other As Object, comparer As IEqualityComparer) As Boolean Implements IStructuralEquatable.Equals" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.Collections.IStructuralEquatable.Equals(System::Object ^ other, System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::Equals;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.Equals(System.Object,System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="System.Object" />
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="other">
          <span data-ttu-id="0cffc-2313">The object to compare with the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2313">The object to compare with the current instance.</span>
          </span>
        </param>
        <param name="comparer">
          <span data-ttu-id="0cffc-2314">An object that determines whether the current instance and <c>other</c> are equal.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2314">An object that determines whether the current instance and <c>other</c> are equal.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2315">Determines whether an object is equal to the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2315">Determines whether an object is equal to the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2316">
            <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2316">
              <see langword="true" /> if the two objects are equal; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2317">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2317">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2318">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2318">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.Collections.IStructuralEquatable.GetHashCode">
      <MemberSignature Language="C#" Value="int IStructuralEquatable.GetHashCode (System.Collections.IEqualityComparer comparer);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.Collections.IStructuralEquatable.GetHashCode(class System.Collections.IEqualityComparer comparer) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.System#Collections#IStructuralEquatable#GetHashCode(System.Collections.IEqualityComparer)" />
      <MemberSignature Language="VB.NET" Value="Function GetHashCode (comparer As IEqualityComparer) As Integer Implements IStructuralEquatable.GetHashCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.Collections.IStructuralEquatable.GetHashCode(System::Collections::IEqualityComparer ^ comparer) = System::Collections::IStructuralEquatable::GetHashCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.Collections.IStructuralEquatable.GetHashCode(System.Collections.IEqualityComparer)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="comparer" Type="System.Collections.IEqualityComparer" />
      </Parameters>
      <Docs>
        <param name="comparer">
          <span data-ttu-id="0cffc-2319">An object that computes the hash code of the current object.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2319">An object that computes the hash code of the current object.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2320">Returns a hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2320">Returns a hash code for the current instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2321">The hash code for the current instance.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2321">The hash code for the current instance.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2322">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2322">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="0cffc-2323">これは、<xref:System.Array> のインスタンスが <xref:System.Collections.IStructuralEquatable> インターフェイスにキャストされる場合にのみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2323">It can be used only when the <xref:System.Array> instance is cast to an <xref:System.Collections.IStructuralEquatable> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="TrueForAll&lt;T&gt;">
      <MemberSignature Language="C#" Value="public static bool TrueForAll&lt;T&gt; (T[] array, Predicate&lt;T&gt; match);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TrueForAll&lt;T&gt;(!!T[] array, class System.Predicate`1&lt;!!T&gt; match) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Array.TrueForAll``1(``0[],System.Predicate{``0})" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TrueForAll(Of T) (array As T(), match As Predicate(Of T)) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA;generic &lt;typename T&gt;&#xA; static bool TrueForAll(cli::array &lt;T&gt; ^ array, Predicate&lt;T&gt; ^ match);" />
      <MemberSignature Language="F#" Value="static member TrueForAll : 'T[] * Predicate&lt;'T&gt; -&gt; bool" Usage="System.Array.TrueForAll (array, match)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <TypeParameters>
        <TypeParameter Name="T" />
      </TypeParameters>
      <Parameters>
        <Parameter Name="array" Type="T[]" />
        <Parameter Name="match" Type="System.Predicate&lt;T&gt;" />
      </Parameters>
      <Docs>
        <typeparam name="T">
          <span data-ttu-id="0cffc-2324">配列要素の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2324">The type of the elements of the array.</span>
          </span>
        </typeparam>
        <param name="array">
          <span data-ttu-id="0cffc-2325">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2325">The one-dimensional, zero-based <see cref="T:System.Array" /> to check against the conditions.</span>
          </span>
        </param>
        <param name="match">
          <span data-ttu-id="0cffc-2326">The predicate that defines the conditions to check against the elements.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2326">The predicate that defines the conditions to check against the elements.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="0cffc-2327">Determines whether every element in the array matches the conditions defined by the specified predicate.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2327">Determines whether every element in the array matches the conditions defined by the specified predicate.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="0cffc-2328">
            <see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2328">
              <see langword="true" /> if every element in <paramref name="array" /> matches the conditions defined by the specified predicate; otherwise, <see langword="false" />.</span>
          </span>
          <span data-ttu-id="0cffc-2329">If there are no elements in the array, the return value is <see langword="true" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2329">If there are no elements in the array, the return value is <see langword="true" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="0cffc-2330"><xref:System.Predicate%601>を返すメソッドをデリゲート`true`デリゲートで定義された条件と一致する場合は、オブジェクトに渡されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2330">The <xref:System.Predicate%601> is a delegate to a method that returns`true` if the object passed to it matches the conditions defined in the delegate.</span></span>  <span data-ttu-id="0cffc-2331">要素`array`に個別に渡される、 <xref:System.Predicate%601>、デリゲートが返されるときの処理が停止および`false`任意の要素。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2331">The elements of `array` are individually passed to the <xref:System.Predicate%601>, and processing is stopped when the delegate returns `false` for any element.</span></span>  
  
 <span data-ttu-id="0cffc-2332">このメソッドは、O (`n`) 操作では、ここで`n`は、<xref:System.Array.Length%2A>の`array`します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2332">This method is an O(`n`) operation, where `n` is the <xref:System.Array.Length%2A> of `array`.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="0cffc-2333">次の例は、文字列の配列内の各要素の最後の文字が数字かどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2333">The following example determines whether the last character of each element in a string array is a number.</span></span> <span data-ttu-id="0cffc-2334">2 つの文字列配列を作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2334">It creates two string arrays.</span></span> <span data-ttu-id="0cffc-2335">両方の文字列の文字のアルファベットと数字で終わる文字列で終わる最初 arrayincludes です。2 番目の配列は、数字で終わる文字列ののみで構成されます。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2335">The first arrayincludes both strings that end with alphabetic characters and strings that end with numeric characters.The second array consists only of strings that end with numeric characters.</span></span> <span data-ttu-id="0cffc-2336">定義、`EndWithANumber`シグネチャと一致するメソッド、<xref:System.Predicate%601>を委任します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2336">The example also defines an `EndWithANumber` method whose signature matches the <xref:System.Predicate%601> delegate.</span></span> <span data-ttu-id="0cffc-2337">各配列を渡します、<xref:System.Array.TrueForAll%2A>メソッドを表すデリゲートと、`EndsWithANumber`メソッドです。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2337">The example passes each array to the <xref:System.Array.TrueForAll%2A> method along with a delegate that represents the `EndsWithANumber` method.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall2.cs#2)]
 [!code-vb[System.Array.TrueForAll#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall2.vb#2)]  
  
 <span data-ttu-id="0cffc-2338">次の例は、文字列配列を通過する点を除いて、最初に似ています、<xref:System.Array.TrueForAll%2A>メソッドと、特定の配列要素は、数値の文字列形式で終わるかどうかを決定するラムダ式。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2338">The following example is similar to the first, except that it passes the string array to the <xref:System.Array.TrueForAll%2A> method along with  a lambda expression that determines whether a particular array element ends with the string representation of a number.</span></span>  
  
 [!code-csharp[System.Array.TrueForAll#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.array.trueforall/cs/trueforall1.cs#1)]
 [!code-vb[System.Array.TrueForAll#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.array.trueforall/vb/trueforall1.vb#1)]  
  
 <span data-ttu-id="0cffc-2339">どちらの場合、<xref:System.Array.TrueForAll%2A>メソッドを返します。`false`数値の中で終わっていない最初の配列要素に到達したとすぐにします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2339">In both cases, the <xref:System.Array.TrueForAll%2A> method returns `false` as soon as it encounters the first array element that does not end in a number.</span></span> <span data-ttu-id="0cffc-2340">返しますそれ以外の場合、`true`後、配列内のすべての要素を反復処理します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2340">Otherwise, it returns `true` after iterating all the elements in the array.</span></span>  
  
> [!NOTE]
>  <span data-ttu-id="0cffc-2341">どちらの例から分かるように、c# および Visual Basic では、作成する必要はありません、`Predicate<string>`委任 (`Predicate(Of String)` Visual Basic の) 明示的にします。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2341">As both examples show, in C# and Visual Basic, it is not necessary to create the `Predicate<string>` delegate (`Predicate(Of String)` in Visual Basic) explicitly.</span></span> <span data-ttu-id="0cffc-2342">これらの言語では、コンテキストから適切なデリゲートを推論し、自動的に作成します。</span><span class="sxs-lookup"><span data-stu-id="0cffc-2342">These languages infer the correct delegate from context and create it automatically.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="0cffc-2343">
            <paramref name="array" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2343">
              <paramref name="array" /> is <see langword="null" />.</span>
          </span>
          <span data-ttu-id="0cffc-2344">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          <span class="sxs-lookup">
            <span data-stu-id="0cffc-2344">-or-  <paramref name="match" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Array.Exists``1(``0[],System.Predicate{``0})" />
        <altmember cref="T:System.Predicate`1" />
      </Docs>
    </Member>
  </Members>
</Type>