<Type Name="Int64" FullName="System.Int64">
  <Metadata><Meta Name="ms.openlocfilehash" Value="b84122271f8bc4adaa3385efe12e2c7d45b29dc0" /><Meta Name="ms.sourcegitcommit" Value="055a4a82a0b08bfbdc21bd1347fb71f7fe2c099e" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/15/2019" /><Meta Name="ms.locfileid" Value="69420166" /></Metadata><TypeSignature Language="C#" Value="public struct Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int64" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int64&#xA;Implements IComparable, IComparable(Of Long), IConvertible, IEquatable(Of Long), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.1.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netcore-3.0;netstandard-2.1">
      <AttributeName>System.Runtime.CompilerServices.IsReadOnly</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary><span data-ttu-id="ff6d0-101">64 ビット符号付き整数を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-101">Represents a 64-bit signed integer.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-102"><xref:System.Int64>は、負の 9223372036854775808 ( <xref:System.Int64.MinValue?displayProperty=nameWithType>定数で表されます) から正の 9223372036854775807 (で表されます) の範囲の値を持つ符号付き整数を表す、変更できない値型です。<xref:System.Int64.MaxValue?displayProperty=nameWithType>定数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-102"><xref:System.Int64> is an immutable value type that represents signed integers with values that range from negative 9,223,372,036,854,775,808 (which is represented by the <xref:System.Int64.MinValue?displayProperty=nameWithType> constant) through positive 9,223,372,036,854,775,807 (which is represented by the <xref:System.Int64.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="ff6d0-103">.NET Framework には、0 ~ 18446744073709551615 の範囲の値を表す<xref:System.UInt64>、符号なし64ビット整数値型 () も含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-103">The .NET Framework also includes an unsigned 64-bit integer value type, <xref:System.UInt64>, which represents values that range from 0 to 18,446,744,073,709,551,615.</span></span>  
  
## <a name="instantiating-an-int64-value"></a><span data-ttu-id="ff6d0-104">Int64 値のインスタンス化</span><span class="sxs-lookup"><span data-stu-id="ff6d0-104">Instantiating an Int64 Value</span></span>  
 <span data-ttu-id="ff6d0-105">値は<xref:System.Int64>いくつかの方法でインスタンス化できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-105">You can instantiate an <xref:System.Int64> value in several ways:</span></span>  
  
-   <span data-ttu-id="ff6d0-106"><xref:System.Int64>変数を宣言し、 <xref:System.Int64>データ型の範囲内のリテラル整数値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-106">You can declare an <xref:System.Int64> variable and assign it a literal integer value that is within the range of the <xref:System.Int64> data type.</span></span> <span data-ttu-id="ff6d0-107">次の例では<xref:System.Int64> 、2つの変数を宣言し、その値をこのように代入します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-107">The following example declares two <xref:System.Int64> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#1)]
     [!code-vb[System.Int64.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="ff6d0-108">範囲が<xref:System.Int64>型のサブセットである整数型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-108">You can assign the value of an integral type whose range is a subset of the <xref:System.Int64> type.</span></span> <span data-ttu-id="ff6d0-109">これは、のC#キャスト演算子や Visual Basic の変換メソッドを必要としない拡大変換です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#4)]
     [!code-vb[System.Int64.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="ff6d0-110">範囲が<xref:System.Int64>型の値を超えている数値型の値を割り当てることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int64> type.</span></span> <span data-ttu-id="ff6d0-111">これは縮小変換であるため、がオンになってC#いる場合`Option Strict`は、のキャスト演算子と Visual Basic の変換メソッドが必要です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="ff6d0-112">数値が<xref:System.Single>、小数部分を含む<xref:System.Double>、、 <xref:System.Decimal>またはの値の場合、その小数部の処理は、変換を実行するコンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="ff6d0-113">次の例では、縮小変換を実行して<xref:System.Int64> 、複数の数値を変数に割り当てています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int64> variables.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#2)]
     [!code-vb[System.Int64.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="ff6d0-114"><xref:System.Convert>クラスのメソッドを呼び出して、サポートされている任意の型<xref:System.Int64>を値に変換できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int64> value.</span></span> <span data-ttu-id="ff6d0-115">ではインターフェイスが<xref:System.Int64>サポートさ<xref:System.IConvertible>れているため、これが可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-115">This is possible because <xref:System.Int64> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-116">次の例は、値の<xref:System.Decimal>配列を値に変換する方法を<xref:System.Int64>示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int64> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
     [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
-   <span data-ttu-id="ff6d0-117"><xref:System.Int64.Parse%2A>または<xref:System.Int64.TryParse%2A>メソッドを呼び出して、 <xref:System.Int64>値<xref:System.Int64>の文字列形式をに変換できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-117">You can call the <xref:System.Int64.Parse%2A> or <xref:System.Int64.TryParse%2A> method to convert the string representation of an <xref:System.Int64> value to an <xref:System.Int64>.</span></span> <span data-ttu-id="ff6d0-118">文字列には、10進数または16進数のいずれかを含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="ff6d0-119">次の例は、10進数と16進数の文字列の両方を使用した解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#3)]
     [!code-vb[System.Int64.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int64-values"></a><span data-ttu-id="ff6d0-120">Int64 値に対する操作の実行</span><span class="sxs-lookup"><span data-stu-id="ff6d0-120">Performing Operations on Int64 Values</span></span>  
 <span data-ttu-id="ff6d0-121">型<xref:System.Int64>は、加算、減算、除算、乗算、否定、単項否定などの標準的な数値演算をサポートします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-121">The <xref:System.Int64> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="ff6d0-122">他の整数型と同様に<xref:System.Int64> 、型では、 `AND`ビット`OR`ごと`XOR`の、、、左シフト、および右シフト演算子もサポートされています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-122">Like the other integral types, the <xref:System.Int64> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="ff6d0-123">標準の数値演算子を使用して2つ<xref:System.Int64>の値を比較することも<xref:System.Int64.CompareTo%2A> 、 <xref:System.Int64.Equals%2A>メソッドまたはメソッドを呼び出すこともできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-123">You can use the standard numeric operators to compare two <xref:System.Int64> values, or you can call the <xref:System.Int64.CompareTo%2A> or <xref:System.Int64.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="ff6d0-124">また、 <xref:System.Math>クラスのメンバーを呼び出して、数値の絶対値を取得したり、整数除算から商と剰余を計算したり、最大値または最小値を決定したりするなど、さまざまな数値演算を実行することもできます。長整数、数値の符号の取得、および数値の丸め処理を行います。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two long integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int64-as-a-string"></a><span data-ttu-id="ff6d0-125">Int64 を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="ff6d0-125">Representing an Int64 as a String</span></span>  
 <span data-ttu-id="ff6d0-126">型<xref:System.Int64>は、標準およびカスタムの数値書式指定文字列を完全にサポートします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-126">The <xref:System.Int64> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="ff6d0-127">(詳細については、「[書式設定型](~/docs/standard/base-types/formatting-types.md)」、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」、および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください)。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="ff6d0-128"><xref:System.Int64>値を、先行ゼロを含まない整数文字列として書式設定するには<xref:System.Int64.ToString> 、パラメーターなしのメソッドを呼び出すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-128">To format an <xref:System.Int64> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="ff6d0-129">"D" 書式指定子を使用すると、指定した数の先行ゼロを文字列形式で含めることもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="ff6d0-130">"N" 書式指定子を使用すると、桁区切り記号を含めたり、数値の文字列形式で表示する小数点以下の桁数を指定したりすることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="ff6d0-131">"X" 書式指定子を使用すると、 <xref:System.Int64>値を16進文字列として表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-131">By using the "X" format specifier, you can represent an <xref:System.Int64> value as a hexadecimal string.</span></span> <span data-ttu-id="ff6d0-132">次の例では、これらの4つ<xref:System.Int64>の方法で、値の配列の要素の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-132">The following example formats the elements in an array of <xref:System.Int64> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Int64.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="ff6d0-133">また、 <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>メソッドを呼び出し<xref:System.Int64> 、メソッドの2番目のパラメーターとして base を指定することで、バイナリ、8進数、10進数、または16進数の文字列として値を書式設定することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-133">You can also format an <xref:System.Int64> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="ff6d0-134">次の例では、このメソッドを呼び出して、整数値の配列のバイナリ、8進数、および16進数表現を表示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Int64.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="ff6d0-135">10進数以外の32ビット整数値の使用</span><span class="sxs-lookup"><span data-stu-id="ff6d0-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="ff6d0-136">個々の long 整数を10進値として使用するだけでなく、長い整数値を使用してビットごとの演算を実行したり、長整数値のバイナリまたは16進表現を使用したりすることもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-136">In addition to working with individual long integers as decimal values, you may want to perform bitwise operations with long integer values, or work with the binary or hexadecimal representations of long integer values.</span></span> <span data-ttu-id="ff6d0-137"><xref:System.Int64>値は63ビットで表され、60番目のビットは符号ビットとして使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-137"><xref:System.Int64> values are represented in 63 bits, with the sixty-fourth bit used as a sign bit.</span></span> <span data-ttu-id="ff6d0-138">正の値は、符号と絶対値表現を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="ff6d0-139">負の値は、2の補数表現に含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="ff6d0-140">このことは、値に対して<xref:System.Int64>ビットごとの演算を実行する場合や、個々のビットを操作する場合に留意することが重要です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int64> values or when you work with individual bits.</span></span> <span data-ttu-id="ff6d0-141">数値、ブール値、または比較演算を任意の2つの非10進値に対して実行するには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe><span data-ttu-id="ff6d0-142">この型のすべてのメンバーは、スレッドセーフです。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-142">All members of this type are thread safe.</span></span> <span data-ttu-id="ff6d0-143">インスタンスの状態を変更するように見えるメンバーは、実際には新しい値で初期化された新しいインスタンスを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span></span> <span data-ttu-id="ff6d0-144">他の型と同様に、この型のインスタンスを含む共有変数の読み取りと書き込みは、スレッドセーフを保証するためにロックによって保護される必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span></span></threadsafe>
    <altmember cref="T:System.UInt64" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="ff6d0-145">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-145">Sample: .NET Framework 4 Formatting Utility</span></span></related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff6d0-146">指定したオブジェクトまたは <see cref="T:System.Int64" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-146">Compares this instance to a specified object or <see cref="T:System.Int64" /> and returns an indication of their relative values.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(long value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int64 -&gt; int&#xA;override this.CompareTo : int64 -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff6d0-147">比較対象の整数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-147">An integer to compare.</span></span></param>
        <summary><span data-ttu-id="ff6d0-148">指定した 64 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-148">Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-149">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-149">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ff6d0-150">戻り値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-150">Return Value</span></span> 
 </term><description> <span data-ttu-id="ff6d0-151">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-151">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ff6d0-152">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-152">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-153">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-153">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ff6d0-154">0</span><span class="sxs-lookup"><span data-stu-id="ff6d0-154">Zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-155">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-155">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ff6d0-156">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-156">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-157">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-157">This instance is greater than <paramref name="value" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-158">このメソッドは、 <xref:System.IComparable%601?displayProperty=nameWithType> `value`パラメーターをオブジェクトに変換する必要<xref:System.Int64.CompareTo%2A?displayProperty=nameWithType>がないため、インターフェイスを実装し、メソッドよりも若干優れています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-158">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="ff6d0-159">プログラミング言語によっては、パラメーターの型がインスタンスの<xref:System.Int64.CompareTo%2A>型よりも少ない (幅が狭い) メソッドをコーディングすることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-159">Depending on your programming language, it might be possible to code a <xref:System.Int64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="ff6d0-160">これが可能なのは、一部のプログラミング言語では、インスタンスと同数のビットを持つ型として、パラメーターを表す暗黙的な拡大変換が実行されるためです。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-160">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="ff6d0-161">たとえば、インスタンスの型が<xref:System.Int32>で、パラメーターの型がである<xref:System.Byte>とします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-161">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="ff6d0-162">Microsoft C#コンパイラは、パラメーターの<xref:System.Int32>値をオブジェクトとして表現する命令を生成し、 <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> <xref:System.Int32>インスタンスと<xref:System.Int32>パラメーターの値を比較するメソッドを生成します。もの.</span><span class="sxs-lookup"><span data-stu-id="ff6d0-162">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="ff6d0-163">プログラミング言語のドキュメントを参照して、コンパイラが数値型の暗黙的な拡大変換を実行するかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-163">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-164">次のコード例は、いくつかの値および<xref:System.Int64.CompareTo%2A>参照型について、ジェネリックおよび非ジェネリックバージョンのメソッドを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-164">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-2.0;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="value"><span data-ttu-id="ff6d0-165">比較対象のオブジェクト、または <see langword="null" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-165">An object to compare, or <see langword="null" />.</span></span></param>
        <summary><span data-ttu-id="ff6d0-166">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-166">Compares this instance to a specified object and returns an indication of their relative values.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-167">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span></span>  
  
 <list type="table"><listheader><term> <span data-ttu-id="ff6d0-168">戻り値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-168">Return Value</span></span> 
 </term><description> <span data-ttu-id="ff6d0-169">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-169">Description</span></span> 
 </description></listheader><item><term> <span data-ttu-id="ff6d0-170">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-170">Less than zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-171">このインスタンスは <paramref name="value" /> よりも小さくなっています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-171">This instance is less than <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ff6d0-172">0</span><span class="sxs-lookup"><span data-stu-id="ff6d0-172">Zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-173">このインスタンスは <paramref name="value" /> と等価です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-173">This instance is equal to <paramref name="value" />.</span></span>  
  
 </description></item><item><term> <span data-ttu-id="ff6d0-174">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-174">Greater than zero</span></span> 
 </term><description> <span data-ttu-id="ff6d0-175">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-175">This instance is greater than <paramref name="value" />.</span></span>  
  
<span data-ttu-id="ff6d0-176">- または -</span><span class="sxs-lookup"><span data-stu-id="ff6d0-176">-or-</span></span> 
 <span data-ttu-id="ff6d0-177"><paramref name="value" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-177"><paramref name="value" /> is <see langword="null" />.</span></span>  
  
 </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-178"><xref:System.Int64>値に関係なく、は null 参照よりも大きいと見なされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-178">An <xref:System.Int64>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="ff6d0-179">パラメーター `value`は、また`null`はの<xref:System.Int64>インスタンスである必要があります。それ以外の場合は、例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-179">The `value` parameter must be `null` or an instance of <xref:System.Int64>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff6d0-180"><paramref name="value" /> が <see cref="T:System.Int64" /> ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-180"><paramref name="value" /> is not an <see cref="T:System.Int64" />.</span></span></exception>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff6d0-181">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int64" /> に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int64" />.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(long obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ff6d0-182">このインスタンスと比較する <see cref="T:System.Int64" /> 値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-182">An <see cref="T:System.Int64" /> value to compare to this instance.</span></span></param>
        <summary><span data-ttu-id="ff6d0-183">このインスタンスが指定した <see cref="T:System.Int64" /> 値に等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int64" /> value.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-184"><paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-184"><see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-185">このメソッドは、 <xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイスを実装し、 `obj`パラメーターを<xref:System.Int64.Equals%2A>オブジェクトに変換する必要がないため、より少しのパフォーマンスを発揮します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="ff6d0-186">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.Int64.Equals(System.Int64)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span></span> <span data-ttu-id="ff6d0-187">引数<paramref name="obj" /> <see cref="T:System.Object" />との<see cref="M:System.Int64.Equals(System.Int64)" />間の暗黙の変換が定義されていて、引数がとして型指定されていない場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。<see cref="T:System.Int64" /></span><span class="sxs-lookup"><span data-stu-id="ff6d0-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span></span> <span data-ttu-id="ff6d0-188">それ以外の場合は<see cref="M:System.Int64.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.Int64" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-188">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span></span> <span data-ttu-id="ff6d0-189">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-189">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ff6d0-190"><see cref="T:System.Byte" /> <see cref="T:System.SByte" /> <see langword="true" /> 、、 、<see cref="T:System.UInt16" />、、およびの<see cref="T:System.UInt32" />各値の場合、最初の比較が返されます。これは、コンパイラが自動的に拡大変換を実行してを呼び出すためです。 <see cref="T:System.Int32" /> <see cref="T:System.Int16" />メソッド。一方、2番目の<see langword="false" />比較では、コンパイラ<see cref="M:System.Int64.Equals(System.Object)" />がメソッドを呼び出すため、が返されます。 <see cref="M:System.Int64.Equals(System.Int64)" /></span><span class="sxs-lookup"><span data-stu-id="ff6d0-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="ff6d0-191">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-191">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj"><span data-ttu-id="ff6d0-192">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-192">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="ff6d0-193">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-193">Returns a value indicating whether this instance is equal to a specified object.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-194"><see langword="true" /> が <paramref name="obj" /> のインスタンスで、このインスタンスの値に等しい場合は <see cref="T:System.Int64" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-194"><see langword="true" /> if <paramref name="obj" /> is an instance of an <see cref="T:System.Int64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="ff6d0-195">次のコード例では、の`Equals` `Int64`コンテキストでを使用し、2つの long 型`true`の値を比較して、同じ`false`数値を表す場合はを返します。それ以外の場合はを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-195">The following code example illustrates the use of `Equals` in the context of `Int64`, comparing two long values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int64_Equals/CPP/int64_equals.cpp#1)]
 [!code-csharp[Int64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int64_Equals/CS/int64_equals.cs#1)]
 [!code-vb[Int64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int64_Equals/VB/int64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage"><para><span data-ttu-id="ff6d0-196">コンパイラのオーバーロードの解決では、2つ<see cref="M:System.Int64.Equals(System.Int64)" />のメソッドオーバーロードの動作の明らかな違いを考慮することができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-196">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span></span> <span data-ttu-id="ff6d0-197">引数<paramref name="obj" /> <see cref="T:System.Object" />との<see cref="M:System.Int64.Equals(System.Int64)" />間の暗黙の変換が定義されていて、引数がとして型指定されていない場合、コンパイラは暗黙的な変換を実行し、メソッドを呼び出します。<see cref="T:System.Int64" /></span><span class="sxs-lookup"><span data-stu-id="ff6d0-197">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span></span> <span data-ttu-id="ff6d0-198">それ以外の場合は<see cref="M:System.Int64.Equals(System.Object)" /> 、メソッドを呼び出します<see langword="false" /> 。この<paramref name="obj" />メソッドは、引数<see cref="T:System.Int64" />が値でない場合は常にを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-198">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span></span> <span data-ttu-id="ff6d0-199">次の例は、2つのメソッドオーバーロード間の動作の違いを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-199">The following example illustrates the difference in behavior between the two method overloads.</span></span> <span data-ttu-id="ff6d0-200"><see cref="T:System.Byte" /> <see cref="T:System.SByte" /> <see langword="true" /> 、、 、<see cref="T:System.UInt16" />、、およびの<see cref="T:System.UInt32" />各値の場合、最初の比較が返されます。これは、コンパイラが自動的に拡大変換を実行してを呼び出すためです。 <see cref="T:System.Int32" /> <see cref="T:System.Int16" />メソッド。一方、2番目の<see langword="false" />比較では、コンパイラ<see cref="M:System.Int64.Equals(System.Object)" />がメソッドを呼び出すため、が返されます。 <see cref="M:System.Int64.Equals(System.Int64)" /></span><span class="sxs-lookup"><span data-stu-id="ff6d0-200">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span></span>  
  
<span data-ttu-id="ff6d0-201">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-201">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span></span></para></block>
        <altmember cref="M:System.Int64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff6d0-202">このインスタンスのハッシュ コードを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-202">Returns the hash code for this instance.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-203">32 ビット符号付き整数ハッシュ コード。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-203">A 32-bit signed integer hash code.</span></span></returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff6d0-204"><see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int64" />を返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-204">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int64" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-205">列挙型定数 <see cref="F:System.TypeCode.Int64" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-205">The enumerated constant, <see cref="F:System.TypeCode.Int64" />.</span></span></returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MaxValue = int64(9223372036854775807)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Long  = 9223372036854775807" />
      <MemberSignature Language="C++ CLI" Value="public: long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int64" Usage="System.int64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>9223372036854775807</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ff6d0-206"><see langword="Int64" /> の最大有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-206">Represents the largest possible value of an <see langword="Int64" />.</span></span> <span data-ttu-id="ff6d0-207">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-207">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-208">この定数の値は9223372036854775807です。つまり、16進数の0x7FFFFFFFFFFFFFFF です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-208">The value of this constant is 9,223,372,036,854,775,807; that is, hexadecimal 0x7FFFFFFFFFFFFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const long MinValue = -9223372036854775808;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MinValue = int64(-9223372036854775808)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Long  = -9223372036854775808" />
      <MemberSignature Language="C++ CLI" Value="public: long MinValue = -9223372036854775808;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int64" Usage="System.int64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>-9223372036854775808</MemberValue>
      <Docs>
        <summary><span data-ttu-id="ff6d0-209"><see langword="Int64" /> の最小有効値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-209">Represents the smallest possible value of an <see langword="Int64" />.</span></span> <span data-ttu-id="ff6d0-210">このフィールドは定数です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-210">This field is constant.</span></span></summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-211">この定数の値は負の9223372036854775808です。つまり、16進数の0x8000000000000000 です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-211">The value of this constant is negative 9,223,372,036,854,775,808; that is, hexadecimal 0x8000000000000000.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff6d0-212">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-212">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span></summary>
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int64" Usage="System.int64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-213">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-213">A string containing a number to convert.</span></span></param>
        <summary><span data-ttu-id="ff6d0-214">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-214">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-215"><paramref name="s" /> に格納されている数値と等しい 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-215">A 64-bit signed integer equivalent to the number contained in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-216">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ff6d0-217">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-218">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-218">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ff6d0-219">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ff6d0-220">要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-220">Element</span></span>|<span data-ttu-id="ff6d0-221">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ff6d0-222">ws</span><span class="sxs-lookup"><span data-stu-id="ff6d0-222">ws</span></span>|<span data-ttu-id="ff6d0-223">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-223">Optional white space.</span></span>|  
|<span data-ttu-id="ff6d0-224">sign</span><span class="sxs-lookup"><span data-stu-id="ff6d0-224">sign</span></span>|<span data-ttu-id="ff6d0-225">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-225">An optional sign.</span></span>|  
|<span data-ttu-id="ff6d0-226">数字</span><span class="sxs-lookup"><span data-stu-id="ff6d0-226">digits</span></span>|<span data-ttu-id="ff6d0-227">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ff6d0-228">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ff6d0-229">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ff6d0-230">で`s`使用できるスタイル要素を明示的に定義するに<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>は、 <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッドまたはメソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ff6d0-231">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ff6d0-232">他のカルチャの書式設定情報を使用して文字列を解析する<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>には、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-232">To parse a string using the formatting information of some other culture, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-233">次の例は、 <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>メソッドを使用して、文字列値を64ビット符号付き整数値に変換する方法を示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-233">The following example demonstrates how to convert a string value into a 64-bit signed integer value using the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="ff6d0-234">その後、結果として得られる長整数値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-234">It then displays the resulting long integer value.</span></span>  
  
 [!code-csharp[System.Int64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff6d0-235"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-235"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-236"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-236"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ff6d0-237"><paramref name="s" /> は、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-237"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-238">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-238">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int64" Usage="System.int64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-239">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-239">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="ff6d0-240"><see cref="T:System.Globalization.NumberStyles" /> で使用可能な書式を示す、<paramref name="s" /> 値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-240">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />.</span></span> <span data-ttu-id="ff6d0-241">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <summary><span data-ttu-id="ff6d0-242">指定したスタイルの数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-242">Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-243"><paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-243">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-244">`style` パラメーター`s`では、解析操作を成功させるためにパラメーターで使用できるスタイル要素 (空白、正または負の記号、または桁区切り記号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ff6d0-245"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ff6d0-246">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-246">Depending on the value of `style`, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="ff6d0-247">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="ff6d0-248">または、 `style`に<xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合:</span><span class="sxs-lookup"><span data-stu-id="ff6d0-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="ff6d0-249">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-250">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-250">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ff6d0-251">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ff6d0-252">要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-252">Element</span></span>|<span data-ttu-id="ff6d0-253">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ff6d0-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-254">*ws*</span></span>|<span data-ttu-id="ff6d0-255">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-255">Optional white space.</span></span> <span data-ttu-id="ff6d0-256">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ff6d0-257">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="ff6d0-258">文字列内での位置は、現在の<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>カルチャ<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティとプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="ff6d0-259">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれている場合`style`は`s` 、現在のカルチャの通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-260">*sign*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-260">*sign*</span></span>|<span data-ttu-id="ff6d0-261">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-261">An optional sign.</span></span> <span data-ttu-id="ff6d0-262">`s`に<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> `s` `style`フラグが含ま`style`れている場合は、の先頭に符号が表示されます。また、にフラグが含まれている場合は、の末尾にも表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ff6d0-263">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-264">*数字*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-264">*digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-266">*exponential_digits*</span></span>|<span data-ttu-id="ff6d0-267">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ff6d0-268">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ff6d0-269">*、*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-269">*,*</span></span>|<span data-ttu-id="ff6d0-270">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="ff6d0-271">に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合`style` 、 `s`現在のカルチャの桁区切り記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-272">*.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-272">*.*</span></span>|<span data-ttu-id="ff6d0-273">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ff6d0-274">に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合`style` 、現在`s`のカルチャの小数点の記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ff6d0-275">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字<xref:System.OverflowException>が含まれている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="ff6d0-276">*e*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-276">*e*</span></span>|<span data-ttu-id="ff6d0-277">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ff6d0-278">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-279">*hexdigits*</span></span>|<span data-ttu-id="ff6d0-280">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ff6d0-281">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-281">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ff6d0-282">数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応する) は、 <xref:System.Int64>型の範囲内にある場合は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-282">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="ff6d0-283">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、入力文字列内に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-283">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="ff6d0-284">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-284">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ff6d0-285">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-285">NumberStyles value</span></span>|<span data-ttu-id="ff6d0-286">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-286">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="ff6d0-287">*Digits*要素のみ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-287">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="ff6d0-288">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-288">The decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-289">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-289">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="ff6d0-290">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-290">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="ff6d0-291">が`s`指数表記の数値を表す場合、結果の数値に0以外の小数部を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-291">If `s` represents a number in exponential notation, the resulting numeric value cannot include any non-zero fractional digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="ff6d0-292">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-292">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="ff6d0-293">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-293">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="ff6d0-294">の`s`先頭にある*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-294">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="ff6d0-295">の`s`末尾の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-295">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="ff6d0-296">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-296">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="ff6d0-297">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-297">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="ff6d0-298">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-298">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="ff6d0-299">すべて。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-299">All.</span></span> <span data-ttu-id="ff6d0-300">`s`パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-300">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="ff6d0-301">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-301">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-302">表す.</span><span class="sxs-lookup"><span data-stu-id="ff6d0-302">) symbol.</span></span> <span data-ttu-id="ff6d0-303">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-303">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="ff6d0-304">*Ws*、 *sign*、桁区切り記号 ( *、* )、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-304">The *ws*, *sign*, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-305">要素.</span><span class="sxs-lookup"><span data-stu-id="ff6d0-305">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="ff6d0-306">を除く`s`すべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-306">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ff6d0-307">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-307">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ff6d0-308">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-308">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="ff6d0-309">`s`パラメーターと組み合わせることができる他のフラグは、 <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-309">The only other flags that can be combined with the `s` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ff6d0-310">(列挙<xref:System.Globalization.NumberStyles>体には、両方の空白<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>フラグを含む複合数値スタイルが含まれています)。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-310">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ff6d0-311">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-311">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="ff6d0-312">解析操作に使用する書式情報を持つカルチャを指定するには、 <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-312">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-313">次の例では<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> 、メソッドを使用して、複数<xref:System.Int64>の値の文字列形式を解析します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-313">The following example uses the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int64> values.</span></span> <span data-ttu-id="ff6d0-314">この例の現在のカルチャは en-us です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-314">The current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.Int64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff6d0-315"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-315"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff6d0-316"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-316"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ff6d0-317">- または -</span><span class="sxs-lookup"><span data-stu-id="ff6d0-317">-or-</span></span> 
 <span data-ttu-id="ff6d0-318"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-318"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-319"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-319"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ff6d0-320"><paramref name="s" /> は、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-320"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span>  
  
<span data-ttu-id="ff6d0-321">- または -</span><span class="sxs-lookup"><span data-stu-id="ff6d0-321">-or-</span></span> 
 <span data-ttu-id="ff6d0-322"><paramref name="style" /> は小数の桁数をサポートしていますが、<paramref name="s" /> に 0 以外の小数の桁数が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-322"><paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-323">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-323">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-324">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-324">A string containing a number to convert.</span></span></param>
        <param name="provider"><span data-ttu-id="ff6d0-325"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-325">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="ff6d0-326">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-326">Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-327"><paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-327">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-328"><xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドのこのオーバーロードは、通常、さまざまな方法で書式設定できるテキストを<xref:System.Int64>値に変換するために使用されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-328">This overload of the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int64> value.</span></span> <span data-ttu-id="ff6d0-329">たとえば、ユーザーが入力したテキストを HTML テキストボックスに数値に変換するために使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-329">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="ff6d0-330">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-330">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ff6d0-331">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-331">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-332">角かっこ ([および]) 内の項目は省略可能であり、その他の項目は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-332">Items in square brackets ([ and ]) are optional, and other items are as follows.</span></span>  
  
 <span data-ttu-id="ff6d0-333">ws</span><span class="sxs-lookup"><span data-stu-id="ff6d0-333">ws</span></span>  
 <span data-ttu-id="ff6d0-334">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-334">An optional white space.</span></span>  
  
 <span data-ttu-id="ff6d0-335">sign</span><span class="sxs-lookup"><span data-stu-id="ff6d0-335">sign</span></span>  
 <span data-ttu-id="ff6d0-336">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-336">An optional sign.</span></span>  
  
 <span data-ttu-id="ff6d0-337">数字</span><span class="sxs-lookup"><span data-stu-id="ff6d0-337">digits</span></span>  
 <span data-ttu-id="ff6d0-338">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-338">A sequence of digits ranging from 0 to 9.</span></span>  
  
 <span data-ttu-id="ff6d0-339">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ff6d0-340">10進数に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ff6d0-341">`s`で<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>使用できるスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="ff6d0-342">パラメーターは、オブジェクト<xref:System.Globalization.NumberFormatInfo>やオブジェクト<xref:System.Globalization.CultureInfo>などの実装です。 <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="ff6d0-343">パラメーター `provider`は、の`s`書式に関するカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ff6d0-344">が`provider` の`null`場合は、現在のカルチャのが使用されます。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-345">次の例は、Web フォームのボタンクリックイベントハンドラーです。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="ff6d0-346">このメソッドは、 <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティによって返される配列を使用して、ユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="ff6d0-347">次に、その<xref:System.Globalization.CultureInfo>ロケールに対応するオブジェクトをインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="ff6d0-348">次に、その<xref:System.Globalization.CultureInfo>オブジェクトに属する<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> <xref:System.Int64>オブジェクトをメソッドに渡して、ユーザーの入力を値に変換します。 <xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int64> value.</span></span>  
  
 [!code-csharp[ParseMethod#5](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#5)]
 [!code-vb[ParseMethod#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff6d0-349"><paramref name="s" /> は <see langword="null" />です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-349"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-350"><paramref name="s" /> が正しい形式ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-350"><paramref name="s" /> is not in the correct format.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ff6d0-351"><paramref name="s" /> は、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-351"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-352">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-352">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Long" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-353">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-353">A string containing a number to convert.</span></span></param>
        <param name="style"><span data-ttu-id="ff6d0-354"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-354">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="ff6d0-355">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-355">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ff6d0-356"><paramref name="s" /> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-356">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <summary><span data-ttu-id="ff6d0-357">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-357">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-358"><paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-358">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-359">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白や正符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-359">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ff6d0-360"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-360">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ff6d0-361">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-361">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ff6d0-362">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-362">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="ff6d0-363">または、 `style`に<xref:System.Globalization.NumberStyles.AllowHexSpecifier>が含まれている場合:</span><span class="sxs-lookup"><span data-stu-id="ff6d0-363">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="ff6d0-364">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-364">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-365">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-365">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ff6d0-366">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-366">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ff6d0-367">要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-367">Element</span></span>|<span data-ttu-id="ff6d0-368">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-368">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ff6d0-369">*ws*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-369">*ws*</span></span>|<span data-ttu-id="ff6d0-370">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-370">Optional white space.</span></span> <span data-ttu-id="ff6d0-371">が`s` `s` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> `style`フラグを含む`style`場合は、の先頭に空白が表示されます。また、にフラグが含まれている場合は、の末尾に空白文字を含めることができます。 <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-371">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ff6d0-372">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-372">A culture-specific currency symbol.</span></span> <span data-ttu-id="ff6d0-373">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-373">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ff6d0-374">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-374">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-375">*sign*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-375">*sign*</span></span>|<span data-ttu-id="ff6d0-376">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-376">An optional sign.</span></span> <span data-ttu-id="ff6d0-377">に`s` `style` `s` `style` フラグが<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>含まれている場合、またはの末尾にフラグが含まれている場合は、の先頭に符号が表示されます。 <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-377">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="ff6d0-378">に`s` <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグが含まれている場合`style`は、かっこを使用して負の値を示すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-378">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-379">*数字*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-379">*digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-380">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-380">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-381">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-381">*exponential_digits*</span></span>|<span data-ttu-id="ff6d0-382">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-382">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="ff6d0-383">*、*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-383">*,*</span></span>|<span data-ttu-id="ff6d0-384">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="ff6d0-385">で指定さ`provider`れたカルチャの桁区切り記号は、 `style`に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-386">*.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-386">*.*</span></span>|<span data-ttu-id="ff6d0-387">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ff6d0-388">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="ff6d0-389">解析操作が成功するためには、数字0のみが小数点の数字として表示されます。*fractional_digits*に他の数字<xref:System.OverflowException>が含まれている場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="ff6d0-390">*e*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-390">*e*</span></span>|<span data-ttu-id="ff6d0-391">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ff6d0-392">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-393">*hexdigits*</span></span>|<span data-ttu-id="ff6d0-394">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ff6d0-395">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-395">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ff6d0-396">小数点以下の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイルに対応) は、 <xref:System.Int64>型の範囲内にある場合は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-396">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="ff6d0-397">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-397">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="ff6d0-398">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-398">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ff6d0-399">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-399">Non-composite NumberStyles values</span></span>|<span data-ttu-id="ff6d0-400">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-400">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-401">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-401">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-402">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-402">The decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-403">) と*小数部の数字*の要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-403">) and *fractional-digits* elements.</span></span> <span data-ttu-id="ff6d0-404">ただし、*小数点以下*の桁数は1桁以上の0桁で構成<xref:System.OverflowException>する必要があります。それ以外の場合は、がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-404">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-405">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-405">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-406">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-407">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-408">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-408">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-409">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-409">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-410">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-411">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-412">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="ff6d0-413">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ff6d0-414">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="ff6d0-415">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ff6d0-416">(列挙体には、両方の空白<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>フラグを含む複合数値スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="ff6d0-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ff6d0-417">パラメーターは、オブジェクト<xref:System.Globalization.NumberFormatInfo>やオブジェクト<xref:System.Globalization.CultureInfo>などの実装です。 <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="ff6d0-418">パラメーター `provider`は、解析に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="ff6d0-419">が`provider` の`null`場合は、現在のカルチャのが使用されます。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-420">次の`style` <xref:System.Int64>例では、さまざまなパラメーターを使用して、値の文字列形式を解析します。`provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int64> values.</span></span> <span data-ttu-id="ff6d0-421">また、解析操作で書式情報が使用されているカルチャに応じて、同じ文字列を解釈できるいくつかの方法についても説明します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-csharp[System.Int64.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int64.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException"><span data-ttu-id="ff6d0-422"><paramref name="s" /> が <see langword="null" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-422"><paramref name="s" /> is <see langword="null" />.</span></span></exception>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff6d0-423"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-423"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ff6d0-424">または</span><span class="sxs-lookup"><span data-stu-id="ff6d0-424">-or-</span></span> 
 <span data-ttu-id="ff6d0-425"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-425"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-426"><paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-426"><paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span></span></exception>
        <exception cref="T:System.OverflowException"><span data-ttu-id="ff6d0-427"><paramref name="s" /> は、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-427"><paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span>  
  
<span data-ttu-id="ff6d0-428">または</span><span class="sxs-lookup"><span data-stu-id="ff6d0-428">-or-</span></span> 
 <span data-ttu-id="ff6d0-429"><paramref name="style" /> は小数の桁をサポートしていますが、<paramref name="s" /> に 0 以外の小数の桁が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-429"><paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</span></span></exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-430">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-430">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-431">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-431">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-432">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-432">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-433">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-433"><see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-434">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-435">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-435">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-436">別の<xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-436">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-437">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-437">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-438">このメンバーの説明については、<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-438">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-439"><see cref="T:System.Byte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-439">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-440">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-441">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-441">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-442">別の<xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-442">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-443">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-443">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-444">このメンバーの説明については、<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-444">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-445"><see cref="T:System.Char" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-445">The value of the current instance, converted to a <see cref="T:System.Char" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-446">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-446">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-447">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-447">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-448">別の<xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-448">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-449">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-449">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-450">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-450">This conversion is not supported.</span></span> <span data-ttu-id="ff6d0-451">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-451">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-452">この変換はサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-452">This conversion is not supported.</span></span> <span data-ttu-id="ff6d0-453">値は返されません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-453">No value is returned.</span></span></returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException"><span data-ttu-id="ff6d0-454">すべての場合。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-454">In all cases.</span></span></exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-455">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-455">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-456">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-456">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-457"><see cref="T:System.Decimal" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-457">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-458">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-459">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-459">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-460">別の<xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-460">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-461">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-461">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-462">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-462">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-463"><see cref="T:System.Double" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-463">The value of the current instance, converted to a <see cref="T:System.Double" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-464">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-465">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-465">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-466">別の<xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-466">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-467">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-467">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-468">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-468">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-469"><see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-469">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-470">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-471">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-471">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-472">別の<xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-472">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-473">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-473">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-474">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-474">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-475"><see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-475">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-476">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-477">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-477">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-478">別の<xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-478">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-479">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-479">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-480">このメンバーの説明については、<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-480">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-481">変更されていない、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-481">The value of the current instance, unchanged.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-482">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-483">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-483">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-484">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-484">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-485">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-485">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-486"><see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-486">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-487">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-487">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-488">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-488">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-489">別の<xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-489">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-490">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-490">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-491">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-491">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-492"><see cref="T:System.Single" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-492">The value of the current instance, converted to a <see cref="T:System.Single" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-493">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-494">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-494">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-495">別の<xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-495">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="type"><span data-ttu-id="ff6d0-496">この <see cref="T:System.Int64" /> 値の変換後の型。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-496">The type to which to convert this <see cref="T:System.Int64" /> value.</span></span></param>
        <param name="provider"><span data-ttu-id="ff6d0-497">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-497">An <see cref="T:System.IFormatProvider" /> implementation that provides information about the format of the returned value.</span></span></param>
        <summary><span data-ttu-id="ff6d0-498">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-498">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-499"><paramref name="type" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-499">The value of the current instance, converted to <paramref name="type" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-500">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-501">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-501">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-502">別の方法として、 `static` (`Shared` Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-502">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-503">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-503">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-504">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-504">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-505"><see cref="T:System.UInt16" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-505">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-506">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-507">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-507">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-508">別の<xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-508">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-509">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-509">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-510">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-510">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-511"><see cref="T:System.UInt32" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-511">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-512">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-513">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-513">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-514">別の<xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-514">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-515">このパラメーターは無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-515">This parameter is ignored.</span></span></param>
        <summary><span data-ttu-id="ff6d0-516">このメンバーの説明については、<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /> のトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-516">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-517"><see cref="T:System.UInt64" /> に変換後の、現在のインスタンスの値。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-517">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-518">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-518">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="ff6d0-519">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-519">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="ff6d0-520">別の<xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType>方法として、メソッドを呼び出すことをお勧めします。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-520">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff6d0-521">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-521">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary><span data-ttu-id="ff6d0-522">このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-522">Converts the numeric value of this instance to its equivalent string representation.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-523">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 までの一連の数字から構成される、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-523">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-524">メソッド<xref:System.Int64.ToString>は、現在<xref:System.Int64>のカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-524">The <xref:System.Int64.ToString> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="ff6d0-525">別の形式またはカルチャを指定する場合は、次のように<xref:System.Int64.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-525">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ff6d0-526">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ff6d0-526">To use format</span></span>|<span data-ttu-id="ff6d0-527">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="ff6d0-527">For culture</span></span>|<span data-ttu-id="ff6d0-528">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="ff6d0-528">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ff6d0-529">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-529">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-530">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-530">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ff6d0-531">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-531">A specific format</span></span>|<span data-ttu-id="ff6d0-532">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-532">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="ff6d0-533">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-533">A specific format</span></span>|<span data-ttu-id="ff6d0-534">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-534">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ff6d0-535">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-535">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ff6d0-536">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-536">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ff6d0-537">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-537">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-538">次の例では<xref:System.Int64> 、既定<xref:System.Int64.ToString>のメソッドを使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-538">The following example displays an <xref:System.Int64> value using the default <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="ff6d0-539">また、多くの標準書式指定子<xref:System.Int64>を使用した結果として得られる値の文字列形式も表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-539">It also displays the string representations of the <xref:System.Int64> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="ff6d0-540">これらの例は、en-us カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-540">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ff6d0-541">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ff6d0-541">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider"><span data-ttu-id="ff6d0-542">カルチャ固有の書式情報を提供する <see cref="T:System.IFormatProvider" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-542">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span></span></param>
        <summary><span data-ttu-id="ff6d0-543">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-543">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-544"><paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-544">The string representation of the value of this instance as specified by <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-545">メソッド<xref:System.Int64.ToString%28System.IFormatProvider%29>は、指定<xref:System.Int64>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、既定の ("G" または "general") 形式の値を書式設定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-545">The <xref:System.Int64.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ff6d0-546">別の形式または現在のカルチャを指定する場合は、次のように<xref:System.Int64.ToString%2A>メソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-546">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ff6d0-547">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ff6d0-547">To use format</span></span>|<span data-ttu-id="ff6d0-548">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="ff6d0-548">For culture</span></span>|<span data-ttu-id="ff6d0-549">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="ff6d0-549">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ff6d0-550">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-550">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-551">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-551">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="ff6d0-552">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-552">A specific format</span></span>|<span data-ttu-id="ff6d0-553">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-553">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="ff6d0-554">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-554">A specific format</span></span>|<span data-ttu-id="ff6d0-555">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-555">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ff6d0-556">パラメーターは、インターフェイスを<xref:System.IFormatProvider>実装するオブジェクトです。 `provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-556">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="ff6d0-557">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="ff6d0-557">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="ff6d0-558">を実装<xref:System.IFormatProvider>するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-558">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="ff6d0-559">書式設定規則を使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-559">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="ff6d0-560">この値の特定の数値書式情報を格納しているオブジェクト。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-560">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="ff6d0-561">を実装<xref:System.IFormatProvider>し、書式設定情報<xref:System.IFormatProvider.GetFormat%2A>を提供する<xref:System.Globalization.NumberFormatInfo>オブジェクトを返すメソッドを持つカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-561">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ff6d0-562">が`provider` <xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo>であるか、から`provider`オブジェクトを取得できない場合、戻り値は現在のカルチャのオブジェクトを使用して書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-562">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="ff6d0-563">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-563">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ff6d0-564">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-564">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ff6d0-565">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-565">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-566">次の例では、複数の異なる<xref:System.Int64>カルチャを<xref:System.Globalization.CultureInfo>表すオブジェクトを使用して、値の文字列形式を表示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-566">The following example displays the string representation of an <xref:System.Int64> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ff6d0-567">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ff6d0-567">Formatting Types in .NET</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ff6d0-568">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-568">A numeric format string.</span></span></param>
        <summary><span data-ttu-id="ff6d0-569">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-569">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-570"><paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-570">The string representation of the value of this instance as specified by <paramref name="format" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-571">メソッド<xref:System.Int64.ToString%28System.String%29>は、現在<xref:System.Int64>のカルチャの規則を表す<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定した書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-571">The <xref:System.Int64.ToString%28System.String%29> method formats an <xref:System.Int64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="ff6d0-572">既定の形式 ("G" または一般) を使用する場合、または別のカルチャを指定する場合は、次<xref:System.Int64.ToString%2A>のようにメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-572">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ff6d0-573">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ff6d0-573">To use format</span></span>|<span data-ttu-id="ff6d0-574">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="ff6d0-574">For culture</span></span>|<span data-ttu-id="ff6d0-575">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="ff6d0-575">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ff6d0-576">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-576">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-577">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-577">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="ff6d0-578">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-578">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-579">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-579">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ff6d0-580">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-580">A specific format</span></span>|<span data-ttu-id="ff6d0-581">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-581">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="ff6d0-582">パラメーター `format`には、"R" 以外の任意の有効な標準数値書式指定子、およびカスタム数値書式指定子の任意の組み合わせを指定できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-582">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="ff6d0-583">`format` が`null`または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-583">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="ff6d0-584">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-584">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ff6d0-585">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値](~/docs/standard/base-types/custom-numeric-format-strings.md)書式指定文字列」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-585">For more information about numeric format specifiers, [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ff6d0-586">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-586">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="ff6d0-587">このインスタンスの戻り値は、 <xref:System.Globalization.NumberFormatInfo>現在のカルチャので書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-587">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-588">次の例では<xref:System.Int64> 、サポートされている各標準数値書式指定子と、2つのカスタム数値書式指定文字列を使用して値を表示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-588">The following example displays an <xref:System.Int64> value using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="ff6d0-589">数値を文字列に変換する場合、この例では en-us カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-589">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-590"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-590"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ff6d0-591">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ff6d0-591">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ff6d0-592">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ff6d0-592">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ff6d0-593">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ff6d0-593">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="ff6d0-594">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="ff6d0-594">How to: Pad a Number with Leading Zeros</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format"><span data-ttu-id="ff6d0-595">数値書式指定文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-595">A numeric format string.</span></span></param>
        <param name="provider"><span data-ttu-id="ff6d0-596">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-596">An object that supplies culture-specific formatting information about this instance.</span></span></param>
        <summary><span data-ttu-id="ff6d0-597">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-597">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-598"><paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-598">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-599">メソッド<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>は、指定<xref:System.Int64>されたカルチャの<xref:System.Globalization.NumberFormatInfo>オブジェクトを使用して、指定された書式で値の書式を設定します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-599">The <xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="ff6d0-600">既定の書式設定またはカルチャ設定を使用する場合は、次のよう<xref:System.Int64.ToString%2A>にメソッドの他のオーバーロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-600">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="ff6d0-601">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="ff6d0-601">To use format</span></span>|<span data-ttu-id="ff6d0-602">カルチャの場合</span><span class="sxs-lookup"><span data-stu-id="ff6d0-602">For culture</span></span>|<span data-ttu-id="ff6d0-603">オーバーロードを使用する</span><span class="sxs-lookup"><span data-stu-id="ff6d0-603">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="ff6d0-604">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-604">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-605">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-605">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="ff6d0-606">既定 ("G") 形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-606">Default ("G") format</span></span>|<span data-ttu-id="ff6d0-607">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-607">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="ff6d0-608">特定の形式</span><span class="sxs-lookup"><span data-stu-id="ff6d0-608">A specific format</span></span>|<span data-ttu-id="ff6d0-609">既定の (現在の) カルチャ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-609">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
  
 <span data-ttu-id="ff6d0-610">パラメーター `format`には、標準またはカスタムの数値書式指定文字列を指定できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-610">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="ff6d0-611">すべてのカスタム数値書式指定文字と同様に、"R" (または "r") 以外のすべての標準の数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-611">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="ff6d0-612">`format` が`null`または空の文字列 ("") の場合、このインスタンスの戻り値は、一般的な数値書式指定子 ("G") で書式設定されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-612">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="ff6d0-613">パラメーターは、インターフェイスを<xref:System.IFormatProvider>実装するオブジェクトです。 `provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-613">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="ff6d0-614">このメソッドは、 <xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式に関するカルチャ固有の情報を提供するオブジェクトを返します。 <xref:System.IFormatProvider.GetFormat%2A></span><span class="sxs-lookup"><span data-stu-id="ff6d0-614">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="ff6d0-615">を実装<xref:System.IFormatProvider>するオブジェクトは、次のいずれかになります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-615">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="ff6d0-616">書式設定規則を使用するカルチャを表すオブジェクト。<xref:System.Globalization.CultureInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-616">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="ff6d0-617">この値の特定の数値書式情報を格納しているオブジェクト。<xref:System.Globalization.NumberFormatInfo></span><span class="sxs-lookup"><span data-stu-id="ff6d0-617">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="ff6d0-618">を実装<xref:System.IFormatProvider>し、書式設定情報<xref:System.IFormatProvider.GetFormat%2A>を提供する<xref:System.Globalization.NumberFormatInfo>オブジェクトを返すメソッドを持つカスタムオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-618">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="ff6d0-619">が`provider` <xref:System.Globalization.NumberFormatInfo> <xref:System.Globalization.NumberFormatInfo>であるか、から`provider`オブジェクトを取得できない場合、このインスタンスの戻り値は、現在のカルチャので書式設定されます。 `null`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-619">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="ff6d0-620">.NET Framework では、さまざまな書式設定がサポートされています。詳細については、次の書式設定に関するトピックを参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-620">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="ff6d0-621">数値書式指定子の詳細については、「[標準の数値書式指定文字列](~/docs/standard/base-types/standard-numeric-format-strings.md)」および「[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-621">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="ff6d0-622">書式設定の詳細については、「[型の書式設定](~/docs/standard/base-types/formatting-types.md)」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-622">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-623">次の例では、3つの異なるカルチャに対してサポートされている各標準数値書式指定子を使用して、正の値と負の値を表示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-623">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException"><span data-ttu-id="ff6d0-624"><paramref name="format" /> は使用できないか、またはサポートされていません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-624"><paramref name="format" /> is invalid or not supported.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md"><span data-ttu-id="ff6d0-625">.NET での型の書式設定</span><span class="sxs-lookup"><span data-stu-id="ff6d0-625">Formatting Types in .NET</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md"><span data-ttu-id="ff6d0-626">標準の数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ff6d0-626">Standard Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md"><span data-ttu-id="ff6d0-627">カスタム数値書式指定文字列</span><span class="sxs-lookup"><span data-stu-id="ff6d0-627">Custom Numeric Format Strings</span></span></related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md"><span data-ttu-id="ff6d0-628">方法: 数値に先行するゼロを埋め込む</span><span class="sxs-lookup"><span data-stu-id="ff6d0-628">How to: Pad a Number with Leading Zeros</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="ff6d0-629">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-629">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary><span data-ttu-id="ff6d0-630">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-630">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="ff6d0-631">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-631">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <altmember cref="Overload:System.Int64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-632">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-632">A string containing a number to convert.</span></span></param>
        <param name="result"><span data-ttu-id="ff6d0-633">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 64 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-633">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ff6d0-634"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-634">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="ff6d0-635">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-635">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ff6d0-636">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-636">Converts the string representation of a number to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="ff6d0-637">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-637">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-638"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-638"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-639">メソッドは<xref:System.Int64.Parse%2A>メソッドに似ていますが<xref:System.Int64.TryParse%2A> 、変換に失敗した場合にメソッドが例外をスローしない点が異なります。 <xref:System.Int64.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="ff6d0-639">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ff6d0-640">これにより、例外処理を使用して、無効<xref:System.FormatException>で、正常に`s`解析できないイベントでをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-640">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="ff6d0-641">パラメーター `s`には、次のような形式の数値が含まれています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-641">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="ff6d0-642">jax-ws[sign] 数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-642">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-643">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-643">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ff6d0-644">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-644">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ff6d0-645">要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-645">Element</span></span>|<span data-ttu-id="ff6d0-646">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-646">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ff6d0-647">*ws*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-647">*ws*</span></span>|<span data-ttu-id="ff6d0-648">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-648">An optional white space.</span></span>|  
|<span data-ttu-id="ff6d0-649">*sign*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-649">*sign*</span></span>|<span data-ttu-id="ff6d0-650">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-650">An optional sign.</span></span>|  
|<span data-ttu-id="ff6d0-651">*数字*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-651">*digits*</span></span>|<span data-ttu-id="ff6d0-652">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-652">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="ff6d0-653">パラメーターは、 <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイルを使用して解釈されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-653">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="ff6d0-654">10進数の数字に加えて、先頭と末尾のスペースだけでなく先頭の記号も使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-654">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="ff6d0-655">`s`で<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>使用できるカルチャ固有の書式情報と共にスタイル要素を明示的に定義するには、メソッドを使用します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-655">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method.</span></span>  
  
 <span data-ttu-id="ff6d0-656">パラメーターは、現在のシステムカルチャに対して<xref:System.Globalization.NumberFormatInfo>初期化されたオブジェクトの書式情報を使用して解析されます。 `s`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-656">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="ff6d0-657">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-657">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="ff6d0-658">このメソッドのオーバーロード<xref:System.Int64.TryParse%2A>は、 `s`パラメーター内のすべての桁を10進数として解釈します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-658">This overload of the <xref:System.Int64.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="ff6d0-659">16進数の文字列形式を解析するには、 <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>オーバーロードを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-659">To parse the string representation of a hexadecimal number, call the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-660">次の例では<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType> 、さまざまな文字列値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-660">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="ff6d0-661">この例では、 <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29>メソッドが変換できない文字列の一部を次に示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-661">Some of the strings that the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="ff6d0-662">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="ff6d0-662">"9432.0".</span></span> <span data-ttu-id="ff6d0-663">文字列に小数点の区切り文字を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-663">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="ff6d0-664">"16,667".</span><span class="sxs-lookup"><span data-stu-id="ff6d0-664">"16,667".</span></span> <span data-ttu-id="ff6d0-665">文字列にはグループ区切り記号を含めることができないため、変換に失敗します。整数の数字のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-665">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="ff6d0-666">"(100)".</span><span class="sxs-lookup"><span data-stu-id="ff6d0-666">"(100)".</span></span> <span data-ttu-id="ff6d0-667">現在のカルチャの<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>プロパティおよび<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティで定義されているものとは異なる負の符号を文字列に含めることができないため、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-667">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="ff6d0-668">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-668">"01FA".</span></span> <span data-ttu-id="ff6d0-669">文字列に16進数の数字を含めることができないため、変換に失敗します。10進数のみが含まれている必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-669">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-670">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-670">Parsing Numeric Strings in .NET</span></span></related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d"><span data-ttu-id="ff6d0-671">サンプル: .NET Framework 4 の書式設定ユーティリティ</span><span class="sxs-lookup"><span data-stu-id="ff6d0-671">Sample: .NET Framework 4 Formatting Utility</span></span></related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" Index="0" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="3" FrameworkAlternate="netcore-2.1;netcore-2.2;netcore-3.0;netstandard-2.1" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" Index="0" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" Index="1" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="provider" Type="System.IFormatProvider" Index="2" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
        <Parameter Name="result" Type="System.Int64" RefType="out" Index="3" FrameworkAlternate="dotnet-uwp-10.0;netcore-1.0;netcore-1.1;netcore-2.0;netcore-2.1;netcore-2.2;netcore-3.0;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;netstandard-1.0;netstandard-1.1;netstandard-1.2;netstandard-1.3;netstandard-1.4;netstandard-1.5;netstandard-1.6;netstandard-2.0;netstandard-2.1;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0" />
      </Parameters>
      <Docs>
        <param name="s"><span data-ttu-id="ff6d0-672">変換する数値を含む文字列。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-672">A string containing a number to convert.</span></span> <span data-ttu-id="ff6d0-673">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-673">The string is interpreted using the style specified by <paramref name="style" />.</span></span></param>
        <param name="style"><span data-ttu-id="ff6d0-674"><paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-674">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span></span> <span data-ttu-id="ff6d0-675">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-675">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span></span></param>
        <param name="provider"><span data-ttu-id="ff6d0-676"><paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-676">An object that supplies culture-specific formatting information about <paramref name="s" />.</span></span></param>
        <param name="result"><span data-ttu-id="ff6d0-677">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 64 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-677">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span></span> <span data-ttu-id="ff6d0-678"><paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-678">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span></span> <span data-ttu-id="ff6d0-679">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-679">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span></span></param>
        <summary><span data-ttu-id="ff6d0-680">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-680">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span></span> <span data-ttu-id="ff6d0-681">戻り値は変換が成功したか失敗したかを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-681">A return value indicates whether the conversion succeeded or failed.</span></span></summary>
        <returns><span data-ttu-id="ff6d0-682"><see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-682"><see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="ff6d0-683">メソッドは<xref:System.Int64.Parse%2A>メソッドに似ていますが<xref:System.Int64.TryParse%2A> 、変換に失敗した場合にメソッドが例外をスローしない点が異なります。 <xref:System.Int64.TryParse%2A></span><span class="sxs-lookup"><span data-stu-id="ff6d0-683">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="ff6d0-684">これにより、例外処理を使用して、無効<xref:System.FormatException>で、正常に`s`解析できないイベントでをテストする必要がなくなります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-684">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="ff6d0-685">パラメーター `style`は、解析操作を成功させるために`s`パラメーターで使用できるスタイル要素 (空白、正または負の符号など) を定義します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-685">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="ff6d0-686"><xref:System.Globalization.NumberStyles>列挙体のビットフラグの組み合わせである必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-686">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="ff6d0-687">の`style`値に応じて、パラメーター `s`には次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-687">Depending on the value of `style`,the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="ff6d0-688">jax-ws[$]シャープ[数字,] 数字 [. fractional_digits] [e [sign] exponential_digits] [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-688">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="ff6d0-689">パラメーターに次の`style`ものが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>含まれている場合は、または。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-689">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="ff6d0-690">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="ff6d0-690">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="ff6d0-691">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-691">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="ff6d0-692">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-692">The following table describes each element.</span></span>  
  
|<span data-ttu-id="ff6d0-693">要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-693">Element</span></span>|<span data-ttu-id="ff6d0-694">説明</span><span class="sxs-lookup"><span data-stu-id="ff6d0-694">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="ff6d0-695">*ws*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-695">*ws*</span></span>|<span data-ttu-id="ff6d0-696">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-696">Optional white space.</span></span> <span data-ttu-id="ff6d0-697">`s`に`s` フラグが`style`含まれている<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>場合は、の先頭に空白が表示されます。または、の末尾にフラグが含まれている場合もあります。`style` <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-697">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="ff6d0-698">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-698">A culture-specific currency symbol.</span></span> <span data-ttu-id="ff6d0-699">文字列内での位置<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>は、 `provider`パラメーターの<xref:System.IFormatProvider.GetFormat%2A>メソッドによっ<xref:System.Globalization.NumberFormatInfo>て返されるオブジェクトのプロパティによって定義されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-699">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="ff6d0-700">に<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグが含まれて`s`いる`style`場合は、通貨記号がに表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-700">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-701">*sign*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-701">*sign*</span></span>|<span data-ttu-id="ff6d0-702">省略可能な符号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-702">An optional sign.</span></span> <span data-ttu-id="ff6d0-703">にフラグ`s` <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>また`style` は<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグが含まれている場合は、に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-703">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="ff6d0-704">*数字*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-704">*digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-705">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-705">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="ff6d0-706">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-706">*exponential_digits*</span></span>|<span data-ttu-id="ff6d0-707">0から9までの一連の数字。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-707">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="ff6d0-708">*Fractional_digits*の場合、数字0のみが有効です。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-708">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="ff6d0-709">*、*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-709">*,*</span></span>|<span data-ttu-id="ff6d0-710">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-710">A culture-specific thousands separator.</span></span> <span data-ttu-id="ff6d0-711">で指定さ`provider`れたカルチャの桁区切り記号は、 `style`に<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-711">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-712">*.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-712">*.*</span></span>|<span data-ttu-id="ff6d0-713">カルチャ固有の小数点の記号。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-713">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="ff6d0-714">で指定さ`provider`れたカルチャの小数点の記号は`style` 、に<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグが含まれている場合にで`s`使用できます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-714">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-715">*e*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-715">*e*</span></span>|<span data-ttu-id="ff6d0-716">"E" または "E" 文字。値が指数表記で表されることを示します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-716">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="ff6d0-717">に`s` <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグが含まれている場合`style` 、パラメーターは指数表記で数値を表すことができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-717">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="ff6d0-718">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-718">*hexdigits*</span></span>|<span data-ttu-id="ff6d0-719">0から f、または0から F までの16進数のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-719">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="ff6d0-720">の終端の NUL (U + 0000) 文字`s`は、 `style`引数の値に関係なく、解析操作によって無視されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-720">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="ff6d0-721">10進数の数字のみを含む文字列 ( <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグに対応) は、常に正常に解析されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-721">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="ff6d0-722">残り<xref:System.Globalization.NumberStyles>のメンバーのほとんどは、この入力文字列に存在する必要があるが必須ではない要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-722">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="ff6d0-723">次の表は、の<xref:System.Globalization.NumberStyles>各メンバーが、に`s`存在する可能性のある要素にどのように影響するかを示しています。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-723">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="ff6d0-724">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="ff6d0-724">Non-composite NumberStyles values</span></span>|<span data-ttu-id="ff6d0-725">数字に加えてで許可される要素</span><span class="sxs-lookup"><span data-stu-id="ff6d0-725">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-726">10進数のみ。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-726">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-727">小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-727">The decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-728">) と*fractional_digits*要素があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-728">) and *fractional_digits* elements.</span></span> <span data-ttu-id="ff6d0-729">ただし、 *fractional_digits*は1桁以上の0桁で構成されている`false`必要があります。それ以外の場合、メソッドはを返します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-729">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-730">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-730">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="ff6d0-731">パラメーター `s`は、0以外の小数部分を含まない<xref:System.Int64>データ型の範囲内の整数を表す必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-731">The `s` parameter must represent an integer within the range of the <xref:System.Int64> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-732">の`s`先頭にある*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-732">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-733">の`s`末尾の*ws*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-733">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-734">*数字*の前に記号を付けることができます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-734">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-735">*数字*の後に符号が表示されます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-735">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-736">数値を囲むかっこ形式の*sign*要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-736">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-737">桁区切り記号 ( *,* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-737">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-738">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-738">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-739">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-739">All elements.</span></span> <span data-ttu-id="ff6d0-740">`s`パラメーターは、16進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-740">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-741">`s`の\*\* `s`先頭または末尾にある ws 要素、の先頭に*符号*、および小数点 ( *.*</span><span class="sxs-lookup"><span data-stu-id="ff6d0-741">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="ff6d0-742">表す.</span><span class="sxs-lookup"><span data-stu-id="ff6d0-742">) symbol.</span></span> <span data-ttu-id="ff6d0-743">パラメーター `s`では、指数表記を使用することもできます。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-743">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-744">*Ws*、 *sign*、桁区切り記号 (*、*)、および小数点 (*.*) の要素。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-744">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="ff6d0-745">を除く`s`すべてのスタイルは、16進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-745">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="ff6d0-746">フラグが<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>使用されて`s`いる場合、はプレフィックスのない16進数の値である必要があります。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-746">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="ff6d0-747">たとえば、"C9AF3" は正常に解析されますが、"0xC9AF3" は正常に解析されません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-747">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="ff6d0-748">内に`style` <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>存在できるフラグは、とだけです。<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType></span><span class="sxs-lookup"><span data-stu-id="ff6d0-748">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="ff6d0-749">(列挙体には、両方の<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>空白フラグを含む複合スタイルがあります)。 <xref:System.Globalization.NumberStyles></span><span class="sxs-lookup"><span data-stu-id="ff6d0-749">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="ff6d0-750"><xref:System.Globalization.CultureInfo> <xref:System.IFormatProvider.GetFormat%2A>パラメーターはオブジェクトや<xref:System.Globalization.NumberFormatInfo>オブジェクトなどの実装であり、そのメソッドはオブジェクトを返します。<xref:System.Globalization.NumberFormatInfo> <xref:System.IFormatProvider> `provider`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-750">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="ff6d0-751">オブジェクト<xref:System.Globalization.NumberFormatInfo>は、の書式に関するカルチャ固有の`s`情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-751">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="ff6d0-752"><xref:System.Globalization.NumberFormatInfo>が`provider` の場合は、現在のカルチャのオブジェクトが使用されます。`null`</span><span class="sxs-lookup"><span data-stu-id="ff6d0-752">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="ff6d0-753">次の例では<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> 、さまざまな文字列と<xref:System.Globalization.NumberStyles>値を指定してメソッドを呼び出します。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-753">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException"><span data-ttu-id="ff6d0-754"><paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-754"><paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span></span>  
  
<span data-ttu-id="ff6d0-755">または</span><span class="sxs-lookup"><span data-stu-id="ff6d0-755">-or-</span></span> 
 <span data-ttu-id="ff6d0-756"><paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span><span class="sxs-lookup"><span data-stu-id="ff6d0-756"><paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span></span></exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md"><span data-ttu-id="ff6d0-757">.NET での数値文字列の解析</span><span class="sxs-lookup"><span data-stu-id="ff6d0-757">Parsing Numeric Strings in .NET</span></span></related>
      </Docs>
    </Member>
  </Members>
</Type>
