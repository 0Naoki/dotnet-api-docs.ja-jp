<Type Name="Int64" FullName="System.Int64">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="db7710c3d50ebb42990baca840dacdd11af7ba5f" />
    <Meta Name="ms.sourcegitcommit" Value="c0c07dbd19cd7017243f9ac36915755f79bc8da6" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="11/27/2018" />
    <Meta Name="ms.locfileid" Value="52342833" />
  </Metadata>
  <TypeSignature Language="C#" Value="public struct Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="ILAsm" Value=".class public sequential ansi serializable sealed beforefieldinit int64 extends System.ValueType implements class System.IComparable, class System.IComparable`1&lt;int64&gt;, class System.IConvertible, class System.IEquatable`1&lt;int64&gt;, class System.IFormattable" />
  <TypeSignature Language="DocId" Value="T:System.Int64" />
  <TypeSignature Language="VB.NET" Value="Public Structure Int64&#xA;Implements IComparable, IComparable(Of Long), IConvertible, IEquatable(Of Long), IFormattable" />
  <TypeSignature Language="C++ CLI" Value="public value class Int64 : IComparable, IComparable&lt;long&gt;, IConvertible, IEquatable&lt;long&gt;, IFormattable" />
  <TypeSignature Language="F#" Value="type int64 = struct&#xA;    interface IFormattable&#xA;    interface IConvertible" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>1.0.5000.0</AssemblyVersion>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.ValueType</BaseTypeName>
  </Base>
  <Interfaces>
    <Interface>
      <InterfaceName>System.IComparable</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IComparable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IConvertible</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IEquatable&lt;System.Int64&gt;</InterfaceName>
    </Interface>
    <Interface>
      <InterfaceName>System.IFormattable</InterfaceName>
    </Interface>
  </Interfaces>
  <Attributes>
    <Attribute FrameworkAlternate="netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
    <Attribute FrameworkAlternate="netframework-1.1;netframework-2.0;netframework-3.0;netframework-3.5;netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netframework-4.8;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0">
      <AttributeName>System.Serializable</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>
      <span data-ttu-id="d18eb-101">64 ビット符号付き整数を表します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d18eb-101">Represents a 64-bit signed integer.</span>
      </span>
    </summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-102"><xref:System.Int64> 変更不可の値の型を表す符号付き整数 9,223,372,036,854,775,808 負の値の範囲の値を (で表される、<xref:System.Int64.MinValue?displayProperty=nameWithType>定数) (これは、で表される正9,223,372,036,854,775,807経由<xref:System.Int64.MaxValue?displayProperty=nameWithType>定数。</span><span class="sxs-lookup"><span data-stu-id="d18eb-102"><xref:System.Int64> is an immutable value type that represents signed integers with values that range from negative 9,223,372,036,854,775,808 (which is represented by the <xref:System.Int64.MinValue?displayProperty=nameWithType> constant) through positive 9,223,372,036,854,775,807 (which is represented by the <xref:System.Int64.MaxValue?displayProperty=nameWithType> constant.</span></span> <span data-ttu-id="d18eb-103">.NET Framework には、64 ビット符号なし整数値の型も含まれています<xref:System.UInt64>18,446,744,073,709,551,615 を 0 から範囲の値を表します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-103">The .NET Framework also includes an unsigned 64-bit integer value type, <xref:System.UInt64>, which represents values that range from 0 to 18,446,744,073,709,551,615.</span></span>  
  
## <a name="instantiating-an-int64-value"></a><span data-ttu-id="d18eb-104">Int64 値をインスタンス化します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-104">Instantiating an Int64 Value</span></span>  
 <span data-ttu-id="d18eb-105">インスタンス化することができます、<xref:System.Int64>いくつかの方法で値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-105">You can instantiate an <xref:System.Int64> value in several ways:</span></span>  
  
-   <span data-ttu-id="d18eb-106">宣言することができます、<xref:System.Int64>変数の範囲内にある整数リテラル値を割り当てます、<xref:System.Int64>データ型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-106">You can declare an <xref:System.Int64> variable and assign it a literal integer value that is within the range of the <xref:System.Int64> data type.</span></span> <span data-ttu-id="d18eb-107">次の例で 2 つ<xref:System.Int64>変数し、それらにこの方法で値を割り当てます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-107">The following example declares two <xref:System.Int64> variables and assigns them values in this way.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#1)]
     [!code-vb[System.Int64.Instantiation#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#1)]  
  
-   <span data-ttu-id="d18eb-108">範囲がサブセットは、整数型の値を割り当てることができますの<xref:System.Int64>型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-108">You can assign the value of an integral type whose range is a subset of the <xref:System.Int64> type.</span></span> <span data-ttu-id="d18eb-109">これは、キャスト演算子 (C#) または Visual Basic で変換メソッドを必要としない拡大変換です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-109">This is a widening conversion that does not require a cast operator in C# or a conversion method in Visual Basic.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#4)]
     [!code-vb[System.Int64.Instantiation#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#4)]  
  
-   <span data-ttu-id="d18eb-110">範囲を超えています数値型の値を割り当てることができますの<xref:System.Int64>型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-110">You can assign the value of a numeric type whose range exceeds that of the <xref:System.Int64> type.</span></span> <span data-ttu-id="d18eb-111">縮小変換には、このため場合、キャスト演算子 (C#) および Visual Basic での変換メソッドが必要に`Option Strict`にします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-111">This is a narrowing conversion, so it requires a cast operator in C# and a conversion method in Visual Basic if `Option Strict` is on.</span></span> <span data-ttu-id="d18eb-112">数値の値がある場合、 <xref:System.Single>、 <xref:System.Double>、または<xref:System.Decimal>小数コンポーネント、その小数部分の処理が含まれる値は、変換を実行して、コンパイラによって異なります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-112">If the numeric value is a <xref:System.Single>, <xref:System.Double>, or <xref:System.Decimal> value that includes a fractional component, the handling of its fractional part depends on the compiler performing the conversion.</span></span> <span data-ttu-id="d18eb-113">次の例をいくつかの数値を割り当てる縮小変換を実行する<xref:System.Int64>変数。</span><span class="sxs-lookup"><span data-stu-id="d18eb-113">The following example performs narrowing conversions to assign several numeric values to <xref:System.Int64> variables.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#2)]
     [!code-vb[System.Int64.Instantiation#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#2)]  
  
-   <span data-ttu-id="d18eb-114">メソッドを呼び出すことができます、<xref:System.Convert>いずれかに変換するクラスには、型がサポートされている、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-114">You can call a method of the <xref:System.Convert> class to convert any supported type to an <xref:System.Int64> value.</span></span> <span data-ttu-id="d18eb-115">これは、考えられるため、<xref:System.Int64>をサポートしています、<xref:System.IConvertible>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-115">This is possible because <xref:System.Int64> supports the <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-116">次の例は、配列の変換を示しています。<xref:System.Decimal>値<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-116">The following example illustrates the conversion of an array of <xref:System.Decimal> values to <xref:System.Int64> values.</span></span>  
  
     [!code-csharp[System.Convert.ToInt64#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.convert.toint64/cs/toint64_1.cs#4)]
     [!code-vb[System.Convert.ToInt64#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.convert.toint64/vb/toint64_1.vb#4)]  
  
-   <span data-ttu-id="d18eb-117">呼び出すことができます、<xref:System.Int64.Parse%2A>または<xref:System.Int64.TryParse%2A>の文字列形式に変換するメソッド、<xref:System.Int64>値を<xref:System.Int64>します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-117">You can call the <xref:System.Int64.Parse%2A> or <xref:System.Int64.TryParse%2A> method to convert the string representation of an <xref:System.Int64> value to an <xref:System.Int64>.</span></span> <span data-ttu-id="d18eb-118">文字列は、10 進数または 16 進数の数字を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-118">The string can contain either decimal or hexadecimal digits.</span></span> <span data-ttu-id="d18eb-119">次の例では、10 進数と 16 進数の文字列の両方を使用して、解析操作を示しています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-119">The following example illustrates the parse operation by using both a decimal and a hexadecimal string.</span></span>  
  
     [!code-csharp[System.Int64.Instantiation#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.instantiation/cs/instantiate1.cs#3)]
     [!code-vb[System.Int64.Instantiation#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.instantiation/vb/instantiate1.vb#3)]  
  
## <a name="performing-operations-on-int64-values"></a><span data-ttu-id="d18eb-120">Int64 値に対して操作を実行します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-120">Performing Operations on Int64 Values</span></span>  
 <span data-ttu-id="d18eb-121"><xref:System.Int64>型は、加算、減算、除算、乗算、否定、単項マイナス演算子などの標準の数値演算をサポートしています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-121">The <xref:System.Int64> type supports standard mathematical operations such as addition, subtraction, division, multiplication, negation, and unary negation.</span></span> <span data-ttu-id="d18eb-122">などの他の整数型、<xref:System.Int64>型演算子もサポートされて`AND`、 `OR`、 `XOR`、左 shift キー、および右シフト演算子。</span><span class="sxs-lookup"><span data-stu-id="d18eb-122">Like the other integral types, the <xref:System.Int64> type also supports the bitwise `AND`, `OR`, `XOR`, left shift, and right shift operators.</span></span>  
  
 <span data-ttu-id="d18eb-123">標準の数値演算子を使用するには 2 つを比較する<xref:System.Int64>を呼び出すの値か、<xref:System.Int64.CompareTo%2A>または<xref:System.Int64.Equals%2A>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-123">You can use the standard numeric operators to compare two <xref:System.Int64> values, or you can call the <xref:System.Int64.CompareTo%2A> or <xref:System.Int64.Equals%2A> method.</span></span>  
  
 <span data-ttu-id="d18eb-124">メンバーを呼び出すこともできます、<xref:System.Math>をさまざまな数値の商と整数の除算の剰余を計算する 2 つの最大値または最小値を決定する絶対パスの値を取得するなどの数値演算を実行するクラス長整数、数値の符号を取得して、数値を四捨五入します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-124">You can also call the members of the <xref:System.Math> class to perform a wide range of numeric operations, including getting the absolute value of a number, calculating the quotient and remainder from integral division, determining the maximum or minimum value of two long integers, getting the sign of a number, and rounding a number.</span></span>  
  
## <a name="representing-an-int64-as-a-string"></a><span data-ttu-id="d18eb-125">Int64 を文字列として表す</span><span class="sxs-lookup"><span data-stu-id="d18eb-125">Representing an Int64 as a String</span></span>  
 <span data-ttu-id="d18eb-126"><xref:System.Int64>型は、標準およびカスタム数値書式指定文字列の完全なサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-126">The <xref:System.Int64> type provides full support for standard and custom numeric format strings.</span></span> <span data-ttu-id="d18eb-127">(詳細については、次を参照してください[型の書式設定](~/docs/standard/base-types/formatting-types.md)、 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)、および[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)。)。</span><span class="sxs-lookup"><span data-stu-id="d18eb-127">(For more information, see [Formatting Types](~/docs/standard/base-types/formatting-types.md), [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md), and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).)</span></span>  
  
 <span data-ttu-id="d18eb-128">書式設定、<xref:System.Int64>値先行ゼロなしで整数を文字列として、パラメーターなし呼び出せる<xref:System.Int64.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-128">To format an <xref:System.Int64> value as an integral string with no leading zeros, you can call the parameterless <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="d18eb-129">"D"書式指定子を使用して、指定された数の文字列表現の先頭のゼロも含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-129">By using the "D" format specifier, you can also include a specified number of leading zeros in the string representation.</span></span> <span data-ttu-id="d18eb-130">"N"書式指定子を使用すると、グループ区切り記号を含めるし、数値の文字列形式で表示する小数点以下桁数を指定できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-130">By using the "N" format specifier, you can include group separators and specify the number of decimal digits to appear in the string representation of the number.</span></span> <span data-ttu-id="d18eb-131">"X"書式指定子を使用して表すことができます、 <xref:System.Int64> 16 進数文字列値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-131">By using the "X" format specifier, you can represent an <xref:System.Int64> value as a hexadecimal string.</span></span> <span data-ttu-id="d18eb-132">次の例の配列内の要素の書式設定<xref:System.Int64>これら 4 つの方法で値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-132">The following example formats the elements in an array of <xref:System.Int64> values in these four ways.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#1)]
 [!code-vb[System.Int64.Formatting#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#1)]  
  
 <span data-ttu-id="d18eb-133">フォーマットすることも、 <xref:System.Int64> 8 進数、バイナリ形式で呼び出すことによって、10 進または 16 進数の文字列の値、<xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29>メソッドおよびメソッドの 2 番目のパラメーターとして情報を指定します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-133">You can also format an <xref:System.Int64> value as a binary, octal, decimal, or hexadecimal string by calling the <xref:System.Convert.ToString%28System.Int64%2CSystem.Int32%29> method and supplying the base as the method's second parameter.</span></span> <span data-ttu-id="d18eb-134">次の例では、このバイナリは、8 進数、表示するメソッドをおよび整数値の配列の 16 進数表記を呼び出します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-134">The following example calls this method to display the binary, octal, and hexadecimal representations of an array of integer values.</span></span>  
  
 [!code-csharp[System.Int64.Formatting#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.formatting/cs/formatting1.cs#2)]
 [!code-vb[System.Int64.Formatting#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.formatting/vb/formatting1.vb#2)]  
  
## <a name="working-with-non-decimal-32-bit-integer-values"></a><span data-ttu-id="d18eb-135">10 進数以外の 32 ビット整数値の使用</span><span class="sxs-lookup"><span data-stu-id="d18eb-135">Working with Non-Decimal 32-Bit Integer Values</span></span>  
 <span data-ttu-id="d18eb-136">10 進数値として個々 の長整数を扱うだけでなくを長整数値、ビットごとの演算を実行します。 または、長整数値のバイナリまたは 16 進表現を使用することがあります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-136">In addition to working with individual long integers as decimal values, you may want to perform bitwise operations with long integer values, or work with the binary or hexadecimal representations of long integer values.</span></span> <span data-ttu-id="d18eb-137"><xref:System.Int64> 値は、4 分の 60 ビットを符号ビットとして使用される、63 ビット単位で表されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-137"><xref:System.Int64> values are represented in 63 bits, with the sixty-fourth bit used as a sign bit.</span></span> <span data-ttu-id="d18eb-138">正の値は、符号および絶対値による表現を使用して表されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-138">Positive values are represented by using sign-and-magnitude representation.</span></span> <span data-ttu-id="d18eb-139">負の値では、2 つの補数表記でします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-139">Negative values are in two's complement representation.</span></span> <span data-ttu-id="d18eb-140">これでビットごとの演算を実行したときに留意する重要<xref:System.Int64>値または個別のビットを使用する場合。</span><span class="sxs-lookup"><span data-stu-id="d18eb-140">This is important to keep in mind when you perform bitwise operations on <xref:System.Int64> values or when you work with individual bits.</span></span> <span data-ttu-id="d18eb-141">数値、ブール値、または 2 つの非の 10 進値の比較演算を実行するためには、両方の値が同じ表現を使用する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-141">In order to perform a numeric, Boolean, or comparison operation on any two non-decimal values, both values must use the same representation.</span></span>  
  
 ]]></format>
    </remarks>
    <threadsafe>
      <span data-ttu-id="d18eb-142">この種類のすべてのメンバーは、スレッド セーフです。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d18eb-142">All members of this type are thread safe.</span>
      </span>
      <span data-ttu-id="d18eb-143">インスタンスの状態を変更する表示されるメンバーは、実際に新しい値で初期化された新しいインスタンスを返します。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d18eb-143">Members that appear to modify instance state actually return a new instance initialized with the new value.</span>
      </span>
      <span data-ttu-id="d18eb-144">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによって。</span>
      <span class="sxs-lookup">
        <span data-stu-id="d18eb-144">As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</span>
      </span>
    </threadsafe>
    <altmember cref="T:System.UInt64" />
    <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
      <span data-ttu-id="d18eb-145">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
      <span class="sxs-lookup">
        <span data-stu-id="d18eb-145">Sample: .NET Framework 4 Formatting Utility</span>
      </span>
    </related>
  </Docs>
  <Members>
    <MemberGroup MemberName="CompareTo">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-146">指定したオブジェクトまたは <see cref="T:System.Int64" /> とこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-146">Compares this instance to a specified object or <see cref="T:System.Int64" /> and returns an indication of their relative values.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (long value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(int64 value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Long) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(long value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : int64 -&gt; int&#xA;override this.CompareTo : int64 -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable`1.CompareTo(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d18eb-147">比較対象の整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-147">An integer to compare.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-148">指定した 64 ビット符号付き整数とこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-148">Compares this instance to a specified 64-bit signed integer and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-149">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-149">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="d18eb-150">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-150">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-151">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-151">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="d18eb-152">0 より小さい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-152">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-153">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-153">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="d18eb-154">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-154">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-155">このインスタンスは <paramref name="value" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-155">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="d18eb-156">0 より大きい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-156">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-157">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-157">This instance is greater than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-158">このメソッドを実装、<xref:System.IComparable%601?displayProperty=nameWithType>インターフェイスを実行よりも若干優れています、<xref:System.Int64.CompareTo%2A?displayProperty=nameWithType>メソッドに変換することはありませんので、`value`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-158">This method implements the <xref:System.IComparable%601?displayProperty=nameWithType> interface and performs slightly better than the <xref:System.Int64.CompareTo%2A?displayProperty=nameWithType> method because it does not have to convert the `value` parameter to an object.</span></span>  
  
 <span data-ttu-id="d18eb-159">によって、プログラミング言語をコードにことができる場合があります、<xref:System.Int64.CompareTo%2A>メソッドのパラメーターの型のビット数が少ないが、範囲が狭いインスタンス型よりもします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-159">Depending on your programming language, it might be possible to code a <xref:System.Int64.CompareTo%2A> method where the parameter type has fewer bits (is narrower) than the instance type.</span></span> <span data-ttu-id="d18eb-160">一部のプログラミング言語のインスタンスとビット数の型としてパラメーターを表す暗黙の拡大変換を実行するため、可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-160">This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</span></span>  
  
 <span data-ttu-id="d18eb-161">たとえば、インスタンスの型が<xref:System.Int32>パラメーターの型と<xref:System.Byte>します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-161">For example, suppose the instance type is <xref:System.Int32> and the parameter type is <xref:System.Byte>.</span></span> <span data-ttu-id="d18eb-162">Microsoft c# コンパイラはパラメーターの値を表す命令を生成、<xref:System.Int32>オブジェクト、し、生成、<xref:System.Int32.CompareTo%2A?displayProperty=nameWithType>の値を比較するメソッド、<xref:System.Int32>インスタンスと<xref:System.Int32>パラメーター表現。</span><span class="sxs-lookup"><span data-stu-id="d18eb-162">The Microsoft C# compiler generates instructions to represent the value of the parameter as an <xref:System.Int32> object, then generates a <xref:System.Int32.CompareTo%2A?displayProperty=nameWithType> method that compares the values of the <xref:System.Int32> instance and the <xref:System.Int32> parameter representation.</span></span>  
  
 <span data-ttu-id="d18eb-163">コンパイラが数値型に暗黙の拡大変換を実行するかどうかを判断する、プログラミング言語のドキュメントを参照してください。</span><span class="sxs-lookup"><span data-stu-id="d18eb-163">Consult your programming language's documentation to determine whether its compiler performs implicit widening conversions on numeric types.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-164">次のコード例に示しますジェネリックと非ジェネリック バージョンの<xref:System.Int64.CompareTo%2A>いくつかの値と参照型のメソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-164">The following code example demonstrates generic and nongeneric versions of the <xref:System.Int64.CompareTo%2A> method for several value and reference types.</span></span>  
  
 [!code-cpp[T.CompareTo#1](~/samples/snippets/cpp/VS_Snippets_CLR/T.CompareTo/CPP/cat.cpp#1)]
 [!code-csharp[T.CompareTo#1](~/samples/snippets/csharp/VS_Snippets_CLR/T.CompareTo/CS/cat.cs#1)]
 [!code-vb[T.CompareTo#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/T.CompareTo/VB/cat.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (value As Object) As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual int CompareTo(System::Object ^ value);" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : obj -&gt; int&#xA;override this.CompareTo : obj -&gt; int" Usage="int64.CompareTo value" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">
          <span data-ttu-id="d18eb-165">比較対象のオブジェクト、または <see langword="null" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-165">An object to compare, or <see langword="null" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-166">指定したオブジェクトとこのインスタンスを比較し、これらの相対値を示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-166">Compares this instance to a specified object and returns an indication of their relative values.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-167">このインスタンスと <paramref name="value" /> の相対値を示す符号付き数値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-167">A signed number indicating the relative values of this instance and <paramref name="value" />.</span>
          </span>
          <list type="table">
            <listheader>
              <term>
                <span data-ttu-id="d18eb-168">戻り値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-168">Return Value</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-169">説明</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-169">Description</span>
                </span>
              </description>
            </listheader>
            <item>
              <term>
                <span data-ttu-id="d18eb-170">0 より小さい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-170">Less than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-171">このインスタンスは、<paramref name="value" /> よりも小さくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-171">This instance is less than <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="d18eb-172">0</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-172">Zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-173">このインスタンスは <paramref name="value" /> と等価です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-173">This instance is equal to <paramref name="value" />.</span>
                </span>
              </description>
            </item>
            <item>
              <term>
                <span data-ttu-id="d18eb-174">0 より大きい値</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-174">Greater than zero</span>
                </span>
              </term>
              <description>
                <span data-ttu-id="d18eb-175">このインスタンスは <paramref name="value" /> よりも大きくなっています。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-175">This instance is greater than <paramref name="value" />.</span>
                </span>
                <span data-ttu-id="d18eb-176">- または -</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-176">-or-</span>
                </span>
                <span data-ttu-id="d18eb-177">
                  <paramref name="value" /> は <see langword="null" /> です。</span>
                <span class="sxs-lookup">
                  <span data-stu-id="d18eb-177">
                    <paramref name="value" /> is <see langword="null" />.</span>
                </span>
              </description>
            </item>
          </list>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-178"><xref:System.Int64>、その値に関係なくと見なされます、null 参照を超えています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-178">An <xref:System.Int64>, regardless of its value, is considered greater than a null reference.</span></span>  
  
 <span data-ttu-id="d18eb-179">`value`パラメーターである必要があります`null`のインスタンスまたは<xref:System.Int64>、それ以外の例外がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-179">The `value` parameter must be `null` or an instance of <xref:System.Int64>; otherwise, an exception is thrown.</span></span>  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d18eb-180">
            <paramref name="value" /> が <see cref="T:System.Int64" /> ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-180">
              <paramref name="value" /> is not an <see cref="T:System.Int64" />.</span>
          </span>
        </exception>
        <altmember cref="T:System.UInt64" />
        <altmember cref="M:System.Int64.Equals(System.Object)" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Equals">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-181">対象のインスタンスが、指定したオブジェクトまたは <see cref="T:System.Int64" /> に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-181">Returns a value indicating whether this instance is equal to a specified object or <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public bool Equals (long obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool Equals(int64 obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Int64)" />
      <MemberSignature Language="VB.NET" Value="Public Function Equals (obj As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool Equals(long obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : int64 -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IEquatable`1.Equals(`0)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Int64" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d18eb-182">このインスタンスと比較する <see cref="T:System.Int64" /> 値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-182">An <see cref="T:System.Int64" /> value to compare to this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-183">このインスタンスが指定した <see cref="T:System.Int64" /> 値に等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-183">Returns a value indicating whether this instance is equal to a specified <see cref="T:System.Int64" /> value.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-184">
            <paramref name="obj" /> の値がこのインスタンスと同じ場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-184">
              <see langword="true" /> if <paramref name="obj" /> has the same value as this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-185">このメソッドは、<xref:System.IEquatable%601?displayProperty=nameWithType>インターフェイス、および実行よりも若干優れています<xref:System.Int64.Equals%2A>に変換することはありませんので、`obj`オブジェクトに対するパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-185">This method implements the <xref:System.IEquatable%601?displayProperty=nameWithType> interface, and performs slightly better than <xref:System.Int64.Equals%2A> because it does not have to convert the `obj` parameter to an object.</span></span>  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="d18eb-186">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int64.Equals(System.Int64)" />メソッドのオーバー ロードします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-186">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="d18eb-187">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int64" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int64.Equals(System.Int64)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-187">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span>
            </span>
            <span data-ttu-id="d18eb-188">それ以外の場合、それらを呼び出す、<see cref="M:System.Int64.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int64" />値。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-188">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span>
            </span>
            <span data-ttu-id="d18eb-189">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-189">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="d18eb-190">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.SByte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.UInt16" />、 <see cref="T:System.Int32" />、および<see cref="T:System.UInt32" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため<see cref="M:System.Int64.Equals(System.Int64)" />メソッド、2 つ目の比較を返しますが、<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int64.Equals(System.Object)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-190">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="d18eb-191">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-191">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            </span>
          </para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="Equals">
      <MemberSignature Language="C#" Value="public override bool Equals (object obj);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance bool Equals(object obj) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Equals(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function Equals (obj As Object) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override bool Equals(System::Object ^ obj);" />
      <MemberSignature Language="F#" Value="override this.Equals : obj -&gt; bool" Usage="int64.Equals obj" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="obj" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="obj">
          <span data-ttu-id="d18eb-192">このインスタンスと比較するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-192">An object to compare with this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-193">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-193">Returns a value indicating whether this instance is equal to a specified object.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-194">
            <see langword="true" /> が <paramref name="obj" /> のインスタンスで、このインスタンスの値に等しい場合は <see cref="T:System.Int64" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-194">
              <see langword="true" /> if <paramref name="obj" /> is an instance of an <see cref="T:System.Int64" /> and equals the value of this instance; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Examples  
 <span data-ttu-id="d18eb-195">次のコード例は、の使用を示しています。`Equals`のコンテキストで`Int64`、2 つの long 値を比較すると、返す`true`、同じ番号を表している場合または`false`一致しない場合。</span><span class="sxs-lookup"><span data-stu-id="d18eb-195">The following code example illustrates the use of `Equals` in the context of `Int64`, comparing two long values and returning `true` if they represent the same number, or `false` if they do not.</span></span>  
  
 [!code-cpp[Int64_Equals#1](~/samples/snippets/cpp/VS_Snippets_CLR/Int64_Equals/CPP/int64_equals.cpp#1)]
 [!code-csharp[Int64_Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR/Int64_Equals/CS/int64_equals.cs#1)]
 [!code-vb[Int64_Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/Int64_Equals/VB/int64_equals.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="usage">
          <para>
            <span data-ttu-id="d18eb-196">コンパイラのオーバー ロードの解決は、2 つの動作の明らかな違いのアカウント可能性があります<see cref="M:System.Int64.Equals(System.Int64)" />メソッドのオーバー ロードします。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-196">Compiler overload resolution may account for an apparent difference in the behavior of the two <see cref="M:System.Int64.Equals(System.Int64)" /> method overloads.</span>
            </span>
            <span data-ttu-id="d18eb-197">場合の間の暗黙的な変換、<paramref name="obj" />引数と<see cref="T:System.Int64" />が定義されている引数として型指定されていないと、 <see cref="T:System.Object" />、コンパイラは、暗黙的な変換と呼び出しを実行、<see cref="M:System.Int64.Equals(System.Int64)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-197">If an implicit conversion between the <paramref name="obj" /> argument and an <see cref="T:System.Int64" /> is defined and the argument is not typed as an <see cref="T:System.Object" />, compilers perform an implicit conversion and call the <see cref="M:System.Int64.Equals(System.Int64)" /> method.</span>
            </span>
            <span data-ttu-id="d18eb-198">それ以外の場合、それらを呼び出す、<see cref="M:System.Int64.Equals(System.Object)" />メソッドで、常に返します<see langword="false" />場合その<paramref name="obj" />引数がない、<see cref="T:System.Int64" />値。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-198">Otherwise, they call the <see cref="M:System.Int64.Equals(System.Object)" /> method, which always returns <see langword="false" /> if its <paramref name="obj" /> argument is not an <see cref="T:System.Int64" /> value.</span>
            </span>
            <span data-ttu-id="d18eb-199">次の例は、2 つのメソッドのオーバー ロードの動作の違いを示しています。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-199">The following example illustrates the difference in behavior between the two method overloads.</span>
            </span>
            <span data-ttu-id="d18eb-200">場合、 <see cref="T:System.Byte" />、 <see cref="T:System.SByte" />、 <see cref="T:System.Int16" />、 <see cref="T:System.UInt16" />、 <see cref="T:System.Int32" />、および<see cref="T:System.UInt32" />値は、最初の比較を返します<see langword="true" />拡大変換と呼び出し、コンパイラが自動的に実行するため<see cref="M:System.Int64.Equals(System.Int64)" />メソッド、2 つ目の比較を返しますが、<see langword="false" />コンパイラを呼び出すため、<see cref="M:System.Int64.Equals(System.Object)" />メソッド。</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-200">In the case of the <see cref="T:System.Byte" />, <see cref="T:System.SByte" />, <see cref="T:System.Int16" />, <see cref="T:System.UInt16" />, <see cref="T:System.Int32" />, and <see cref="T:System.UInt32" /> values, the first comparison returns <see langword="true" /> because the compiler automatically performs a widening conversion and calls the <see cref="M:System.Int64.Equals(System.Int64)" /> method, whereas the second comparison returns <see langword="false" /> because the compiler calls the <see cref="M:System.Int64.Equals(System.Object)" /> method.</span>
            </span>
            <span data-ttu-id="d18eb-201">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            <span class="sxs-lookup">
              <span data-stu-id="d18eb-201">[!code-csharp[System.Int64.Equals#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.equals/cs/equalsoverl.cs#1)] [!code-vb[System.Int64.Equals#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.equals/vb/equalsoverl.vb#1)]</span>
            </span>
          </para>
        </block>
        <altmember cref="M:System.Int64.CompareTo(System.Object)" />
      </Docs>
    </Member>
    <Member MemberName="GetHashCode">
      <MemberSignature Language="C#" Value="public override int GetHashCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance int32 GetHashCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetHashCode" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function GetHashCode () As Integer" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override int GetHashCode();" />
      <MemberSignature Language="F#" Value="override this.GetHashCode : unit -&gt; int" Usage="int64.GetHashCode " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-202">このインスタンスのハッシュ コードを返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-202">Returns the hash code for this instance.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-203">32 ビット符号付き整数ハッシュ コード。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-203">A 32-bit signed integer hash code.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="GetTypeCode">
      <MemberSignature Language="C#" Value="public TypeCode GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance valuetype System.TypeCode GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Public Function GetTypeCode () As TypeCode" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual TypeCode GetTypeCode();" />
      <MemberSignature Language="F#" Value="abstract member GetTypeCode : unit -&gt; TypeCode&#xA;override this.GetTypeCode : unit -&gt; TypeCode" Usage="int64.GetTypeCode " />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-204">
            <see cref="T:System.TypeCode" /> 値型の <see cref="T:System.Int64" /> を返します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-204">Returns the <see cref="T:System.TypeCode" /> for value type <see cref="T:System.Int64" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-205">列挙型定数 <see cref="F:System.TypeCode.Int64" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-205">The enumerated constant, <see cref="F:System.TypeCode.Int64" />.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <altmember cref="T:System.TypeCode" />
      </Docs>
    </Member>
    <Member MemberName="MaxValue">
      <MemberSignature Language="C#" Value="public const long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MaxValue = int64(9223372036854775807)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MaxValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MaxValue As Long  = 9223372036854775807" />
      <MemberSignature Language="C++ CLI" Value="public: long MaxValue = 9223372036854775807;" />
      <MemberSignature Language="F#" Value="val mutable MaxValue : int64" Usage="System.int64.MaxValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>9223372036854775807</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-206">
            <see langword="Int64" /> の最大有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-206">Represents the largest possible value of an <see langword="Int64" />.</span>
          </span>
          <span data-ttu-id="d18eb-207">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-207">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-208">この定数の値は 9,223,372,036,854,775,807;つまり、16 進数 0x7FFFFFFFFFFFFFFF します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-208">The value of this constant is 9,223,372,036,854,775,807; that is, hexadecimal 0x7FFFFFFFFFFFFFFF.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MinValue" />
      </Docs>
    </Member>
    <Member MemberName="MinValue">
      <MemberSignature Language="C#" Value="public const long MinValue = -9223372036854775808;" />
      <MemberSignature Language="ILAsm" Value=".field public static literal int64 MinValue = int64(-9223372036854775808)" />
      <MemberSignature Language="DocId" Value="F:System.Int64.MinValue" />
      <MemberSignature Language="VB.NET" Value="Public Const MinValue As Long  = -9223372036854775808" />
      <MemberSignature Language="C++ CLI" Value="public: long MinValue = -9223372036854775808;" />
      <MemberSignature Language="F#" Value="val mutable MinValue : int64" Usage="System.int64.MinValue" />
      <MemberType>Field</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <MemberValue>-9223372036854775808</MemberValue>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-209">
            <see langword="Int64" /> の最小有効値を表します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-209">Represents the smallest possible value of an <see langword="Int64" />.</span>
          </span>
          <span data-ttu-id="d18eb-210">このフィールドは定数です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-210">This field is constant.</span>
          </span>
        </summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-211">この定数の値が負の 9,223,372,036,854,775,808;16 進数の 0x8000000000000000 は、します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-211">The value of this constant is negative 9,223,372,036,854,775,808; that is, hexadecimal 0x8000000000000000.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="F:System.Int64.MaxValue" />
      </Docs>
    </Member>
    <MemberGroup MemberName="Parse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-212">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-212">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int64.TryParse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s);" />
      <MemberSignature Language="F#" Value="static member Parse : string -&gt; int64" Usage="System.int64.Parse s" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-213">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-213">A string containing a number to convert.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-214">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-214">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-215">
            <paramref name="s" /> に格納されている数値と等しい 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-215">A 64-bit signed integer equivalent to the number contained in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-216">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-216">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d18eb-217">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-217">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-218">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-218">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d18eb-219">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-219">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d18eb-220">要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-220">Element</span></span>|<span data-ttu-id="d18eb-221">説明</span><span class="sxs-lookup"><span data-stu-id="d18eb-221">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d18eb-222">ws</span><span class="sxs-lookup"><span data-stu-id="d18eb-222">ws</span></span>|<span data-ttu-id="d18eb-223">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-223">Optional white space.</span></span>|  
|<span data-ttu-id="d18eb-224">sign</span><span class="sxs-lookup"><span data-stu-id="d18eb-224">sign</span></span>|<span data-ttu-id="d18eb-225">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-225">An optional sign.</span></span>|  
|<span data-ttu-id="d18eb-226">数字</span><span class="sxs-lookup"><span data-stu-id="d18eb-226">digits</span></span>|<span data-ttu-id="d18eb-227">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-227">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="d18eb-228">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d18eb-228">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d18eb-229">10 進数字だけでなくには、先頭と末尾の空白および先頭の符号のみを許可します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-229">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d18eb-230">使用可能なスタイル要素を明示的に定義する`s`、いずれかを使用して、<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>または<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-230">To explicitly define the style elements that can be present in `s`, use either the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> or the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d18eb-231">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-231">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="d18eb-232">他のいくつかのカルチャの書式設定情報を使用して文字列を解析するには、使用、<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-232">To parse a string using the formatting information of some other culture, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-233">次の例では、文字列値を使用して 64 ビット符号付き整数値に変換する方法、<xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-233">The following example demonstrates how to convert a string value into a 64-bit signed integer value using the <xref:System.Int64.Parse%28System.String%29?displayProperty=nameWithType> method.</span></span> <span data-ttu-id="d18eb-234">結果の長整数値が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-234">It then displays the resulting long integer value.</span></span>  
  
 [!code-csharp[System.Int64.Parse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse1.cs#1)]
 [!code-vb[System.Int64.Parse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse1.vb#1)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d18eb-235">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-235">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-236">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-236">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d18eb-237">
            <paramref name="s" /> が、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-237">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-238">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-238">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles -&gt; int64" Usage="System.int64.Parse (s, style)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-239">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-239">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="d18eb-240">
            <paramref name="s" /> で使用可能な書式を示す、<see cref="T:System.Globalization.NumberStyles" /> 値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-240">A bitwise combination of <see cref="T:System.Globalization.NumberStyles" /> values that indicates the permitted format of <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="d18eb-241">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-241">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-242">指定したスタイルの数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-242">Converts the string representation of a number in a specified style to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-243">
            <paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-243">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-244">`style`スタイル要素を定義するパラメーター (空白、正または負の符号のシンボルまたは数千など区切り記号) で許容される、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-244">The `style` parameter defines the style elements (such as white space, the positive or negative sign symbol, or the thousands separator symbol) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d18eb-245">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d18eb-245">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d18eb-246">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-246">Depending on the value of `style`, the `s` parameter may contain the following elements:</span></span>  
  
 <span data-ttu-id="d18eb-247">[ws][$][記号][数字] [.fractional_digits] [e [記号] exponential_digits] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-247">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="d18eb-248">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="d18eb-248">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="d18eb-249">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-249">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-250">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-250">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d18eb-251">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-251">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d18eb-252">要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-252">Element</span></span>|<span data-ttu-id="d18eb-253">説明</span><span class="sxs-lookup"><span data-stu-id="d18eb-253">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d18eb-254">*ws*</span><span class="sxs-lookup"><span data-stu-id="d18eb-254">*ws*</span></span>|<span data-ttu-id="d18eb-255">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-255">Optional white space.</span></span> <span data-ttu-id="d18eb-256">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-256">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d18eb-257">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-257">A culture-specific currency symbol.</span></span> <span data-ttu-id="d18eb-258">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>現在のカルチャのプロパティ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-258">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> properties of the current culture.</span></span> <span data-ttu-id="d18eb-259">現在のカルチャの通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-259">The current culture's currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-260">*sign*</span><span class="sxs-lookup"><span data-stu-id="d18eb-260">*sign*</span></span>|<span data-ttu-id="d18eb-261">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-261">An optional sign.</span></span> <span data-ttu-id="d18eb-262">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-262">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d18eb-263">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-263">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-264">*数字*</span><span class="sxs-lookup"><span data-stu-id="d18eb-264">*digits*</span></span><br /><br /> <span data-ttu-id="d18eb-265">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-265">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d18eb-266">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-266">*exponential_digits*</span></span>|<span data-ttu-id="d18eb-267">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-267">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d18eb-268">*Fractional_digits*数字の 0 が有効では専用です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-268">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d18eb-269">*、*</span><span class="sxs-lookup"><span data-stu-id="d18eb-269">*,*</span></span>|<span data-ttu-id="d18eb-270">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-270">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="d18eb-271">現在のカルチャの何千もの区切り記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-271">The current culture's thousands separator can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-272">*.*</span><span class="sxs-lookup"><span data-stu-id="d18eb-272">*.*</span></span>|<span data-ttu-id="d18eb-273">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-273">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d18eb-274">現在のカルチャの小数点記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-274">The current culture's decimal point symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d18eb-275">数字の 0 は、解析操作を成功させるための小数部の桁として表示されます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-275">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="d18eb-276">*e*</span><span class="sxs-lookup"><span data-stu-id="d18eb-276">*e*</span></span>|<span data-ttu-id="d18eb-277">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-277">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d18eb-278">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-278">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-279">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-279">*hexdigits*</span></span>|<span data-ttu-id="d18eb-280">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="d18eb-280">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d18eb-281">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="d18eb-281">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d18eb-282">数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) の範囲内にある場合は、常に正常に解析、<xref:System.Int64>型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-282">A string with digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="d18eb-283">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-283">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in the input string.</span></span> <span data-ttu-id="d18eb-284">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-284">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d18eb-285">NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d18eb-285">NumberStyles value</span></span>|<span data-ttu-id="d18eb-286">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-286">Elements permitted in s in addition to digits</span></span>|  
|------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None>|<span data-ttu-id="d18eb-287">*桁*要素のみです。</span><span class="sxs-lookup"><span data-stu-id="d18eb-287">The *digits* element only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint>|<span data-ttu-id="d18eb-288">10 進数のポイント (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-288">The decimal point ( *.*</span></span> <span data-ttu-id="d18eb-289">) と*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-289">) and *fractional-digits* elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent>|<span data-ttu-id="d18eb-290">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-290">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="d18eb-291">場合`s`指数表記、結果として得られる数値を表しますが、0 以外の小数部の桁数を含めることはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-291">If `s` represents a number in exponential notation, the resulting numeric value cannot include any non-zero fractional digits.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite>|<span data-ttu-id="d18eb-292">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-292">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite>|<span data-ttu-id="d18eb-293">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-293">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign>|<span data-ttu-id="d18eb-294">*サインオン*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-294">The *sign* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign>|<span data-ttu-id="d18eb-295">*サインオン*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-295">The *sign* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses>|<span data-ttu-id="d18eb-296">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-296">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands>|<span data-ttu-id="d18eb-297">桁区切り記号 ( *、* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-297">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol>|<span data-ttu-id="d18eb-298">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-298">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency>|<span data-ttu-id="d18eb-299">すべて。</span><span class="sxs-lookup"><span data-stu-id="d18eb-299">All.</span></span> <span data-ttu-id="d18eb-300">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-300">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float>|<span data-ttu-id="d18eb-301">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および小数点 (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-301">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="d18eb-302">) シンボル。</span><span class="sxs-lookup"><span data-stu-id="d18eb-302">) symbol.</span></span> <span data-ttu-id="d18eb-303">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-303">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number>|<span data-ttu-id="d18eb-304">*Ws*、*サインオン*、何千もの区切り記号 ( *、* )、および小数点 10 進数 (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-304">The *ws*, *sign*, thousands separator ( *,* ), and decimal point ( *.*</span></span> <span data-ttu-id="d18eb-305">) の要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-305">) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any>|<span data-ttu-id="d18eb-306">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-306">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="d18eb-307">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-307">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d18eb-308">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-308">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d18eb-309">のみ他のフラグと組み合わせて使用できますが、`s`パラメーターは<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-309">The only other flags that can be combined with the `s` parameter are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d18eb-310">(、<xref:System.Globalization.NumberStyles>列挙には、複合数値スタイルが含まれています<xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます。)。</span><span class="sxs-lookup"><span data-stu-id="d18eb-310">(The <xref:System.Globalization.NumberStyles> enumeration includes a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d18eb-311">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトを現在のシステム カルチャが初期化されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-311">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object that is initialized for the current system culture.</span></span> <span data-ttu-id="d18eb-312">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-312">To specify the culture whose formatting information is used for the parse operation, call the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-313">次の例では、<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType>をいくつかの文字列表現を解析<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-313">The following example uses the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%29?displayProperty=nameWithType> method to parse the string representations of several <xref:System.Int64> values.</span></span> <span data-ttu-id="d18eb-314">例では、現在のカルチャは、en-us (英語) です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-314">The current culture for the example is en-US.</span></span>  
  
 [!code-csharp[System.Int64.Parse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse2.cs#2)]
 [!code-vb[System.Int64.Parse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d18eb-315">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-315">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d18eb-316">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-316">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="d18eb-317">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-317">-or-</span>
          </span>
          <span data-ttu-id="d18eb-318">
            <paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-318">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-319">
            <paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-319">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d18eb-320">
            <paramref name="s" /> が、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-320">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="d18eb-321">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-321">-or-</span>
          </span>
          <span data-ttu-id="d18eb-322">
            <paramref name="style" /> は小数の桁数をサポートしていますが、<paramref name="s" /> に 0 以外の小数の桁数が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-322">
              <paramref name="style" /> supports fractional digits but <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-323">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-323">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-324">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-324">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d18eb-325">
            <paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-325">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-326">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-326">Converts the string representation of a number in a specified culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-327">
            <paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-327">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-328">このオーバー ロード、<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>メソッドでは、さまざまな方法で書式に設定するテキストに変換するために使用は通常、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-328">This overload of the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method is typically used to convert text that can be formatted in a variety of ways to an <xref:System.Int64> value.</span></span> <span data-ttu-id="d18eb-329">たとえば、これを数値には、HTML テキスト ボックスに、ユーザーが入力したテキストに変換する使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-329">For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</span></span>  
  
 <span data-ttu-id="d18eb-330">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-330">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d18eb-331">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-331">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-332">角かっこ ([と]) は、任意のアイテムおよびその他の項目は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="d18eb-332">Items in square brackets ([ and ]) are optional, and other items are as follows.</span></span>  
  
 <span data-ttu-id="d18eb-333">ws</span><span class="sxs-lookup"><span data-stu-id="d18eb-333">ws</span></span>  
 <span data-ttu-id="d18eb-334">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="d18eb-334">An optional white space.</span></span>  
  
 <span data-ttu-id="d18eb-335">sign</span><span class="sxs-lookup"><span data-stu-id="d18eb-335">sign</span></span>  
 <span data-ttu-id="d18eb-336">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-336">An optional sign.</span></span>  
  
 <span data-ttu-id="d18eb-337">数字</span><span class="sxs-lookup"><span data-stu-id="d18eb-337">digits</span></span>  
 <span data-ttu-id="d18eb-338">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-338">A sequence of digits ranging from 0 to 9.</span></span>  
  
 <span data-ttu-id="d18eb-339">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d18eb-339">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d18eb-340">10 進数字だけでなくには、先頭と末尾の空白および先頭の符号のみを許可します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-340">In addition to decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d18eb-341">使用可能なスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-341">To explicitly define the style elements that can be present in `s`, use the <xref:System.Int64.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29?displayProperty=nameWithType> method.</span></span>  
  
 <span data-ttu-id="d18eb-342">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-342">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="d18eb-343">`provider`パラメーターの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-343">The `provider` parameter supplies culture-specific information about the format of `s`.</span></span> <span data-ttu-id="d18eb-344">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-344">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-345">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-345">The following example is the button click event handler of a Web form.</span></span> <span data-ttu-id="d18eb-346">によって返される配列を使用して、<xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType>プロパティをユーザーのロケールを決定します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-346">It uses the array returned by the <xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType> property to determine the user's locale.</span></span> <span data-ttu-id="d18eb-347">インスタンス化し、<xref:System.Globalization.CultureInfo>そのロケールに対応するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-347">It then instantiates a <xref:System.Globalization.CultureInfo> object that corresponds to that locale.</span></span> <span data-ttu-id="d18eb-348"><xref:System.Globalization.NumberFormatInfo>オブジェクトに属する<xref:System.Globalization.CultureInfo>オブジェクトに渡されます、<xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29>にユーザーを変換するメソッドの入力、<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-348">The <xref:System.Globalization.NumberFormatInfo> object that belongs to that <xref:System.Globalization.CultureInfo> object is then passed to the <xref:System.Int64.Parse%28System.String%2CSystem.IFormatProvider%29> method to convert the user's input to an <xref:System.Int64> value.</span></span>  
  
 [!code-csharp[ParseMethod#5](~/samples/snippets/csharp/VS_Snippets_CLR/ParseMethod/cs/Default.aspx.cs#5)]
 [!code-vb[ParseMethod#5](~/samples/snippets/visualbasic/VS_Snippets_CLR/ParseMethod/vb/Default.aspx.vb#5)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d18eb-349">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-349">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-350">
            <paramref name="s" /> が正しい形式ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-350">
              <paramref name="s" /> is not in the correct format.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d18eb-351">
            <paramref name="s" /> が、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-351">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <altmember cref="Overload:System.Int64.TryParse" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-352">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-352">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style = System.Globalization.NumberStyles.Integer, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As ReadOnlySpan(Of Char), Optional style As NumberStyles = System.Globalization.NumberStyles.Integer, Optional provider As IFormatProvider = null) As Long" />
      <MemberSignature Language="F#" Value="static member Parse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="Parse">
      <MemberSignature Language="C#" Value="public static long Parse (string s, System.Globalization.NumberStyles style, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig int64 Parse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function Parse (s As String, style As NumberStyles, provider As IFormatProvider) As Long" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static long Parse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="static member Parse : string * System.Globalization.NumberStyles * IFormatProvider -&gt; int64" Usage="System.int64.Parse (s, style, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-353">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-353">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="d18eb-354">
            <paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-354">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="d18eb-355">通常指定する値は、<see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-355">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d18eb-356">
            <paramref name="s" /> に関するカルチャに固有の書式設定情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-356">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-357">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-357">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-358">
            <paramref name="s" /> で指定した数値と等しい 64 ビット符号付き整数。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-358">A 64-bit signed integer equivalent to the number specified in <paramref name="s" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-359">`style` (空白や正符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-359">The `style` parameter defines the style elements (such as white space or the positive sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d18eb-360">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d18eb-360">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d18eb-361">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-361">Depending on the value of `style`, the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d18eb-362">[ws][$][記号][数字] [.fractional_digits] [e [記号] exponential_digits] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-362">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="d18eb-363">または、`style`が含まれています<xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span><span class="sxs-lookup"><span data-stu-id="d18eb-363">Or, if `style` includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier>:</span></span>  
  
 <span data-ttu-id="d18eb-364">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-364">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-365">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-365">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d18eb-366">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-366">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d18eb-367">要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-367">Element</span></span>|<span data-ttu-id="d18eb-368">説明</span><span class="sxs-lookup"><span data-stu-id="d18eb-368">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d18eb-369">*ws*</span><span class="sxs-lookup"><span data-stu-id="d18eb-369">*ws*</span></span>|<span data-ttu-id="d18eb-370">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-370">Optional white space.</span></span> <span data-ttu-id="d18eb-371">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>の最後に、フラグ、およびそれが表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-371">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, and it can appear at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d18eb-372">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-372">A culture-specific currency symbol.</span></span> <span data-ttu-id="d18eb-373">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-373">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="d18eb-374">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-374">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-375">*sign*</span><span class="sxs-lookup"><span data-stu-id="d18eb-375">*sign*</span></span>|<span data-ttu-id="d18eb-376">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-376">An optional sign.</span></span> <span data-ttu-id="d18eb-377">先頭の符号が表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>フラグの末尾または`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-377">The sign can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> flag or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flag.</span></span> <span data-ttu-id="d18eb-378">かっこを使用できる`s`負の値を指定する場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-378">Parentheses can be used in `s` to indicate a negative value if `style` includes the <xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-379">*数字*</span><span class="sxs-lookup"><span data-stu-id="d18eb-379">*digits*</span></span><br /><br /> <span data-ttu-id="d18eb-380">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-380">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d18eb-381">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-381">*exponential_digits*</span></span>|<span data-ttu-id="d18eb-382">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-382">A sequence of digits from 0 through 9.</span></span>|  
|<span data-ttu-id="d18eb-383">*、*</span><span class="sxs-lookup"><span data-stu-id="d18eb-383">*,*</span></span>|<span data-ttu-id="d18eb-384">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-384">A culture-specific thousands separator symbol.</span></span> <span data-ttu-id="d18eb-385">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-385">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-386">*.*</span><span class="sxs-lookup"><span data-stu-id="d18eb-386">*.*</span></span>|<span data-ttu-id="d18eb-387">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-387">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d18eb-388">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-388">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span><br /><br /> <span data-ttu-id="d18eb-389">数字の 0 は、解析操作を成功させるための小数部の桁として表示されます。場合*fractional_digits*他の任意の数字が含まれています、<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-389">Only the digit 0 can appear as a fractional digit for the parse operation to succeed; if *fractional_digits* includes any other digit, an <xref:System.OverflowException> is thrown.</span></span>|  
|<span data-ttu-id="d18eb-390">*e*</span><span class="sxs-lookup"><span data-stu-id="d18eb-390">*e*</span></span>|<span data-ttu-id="d18eb-391">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-391">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d18eb-392">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-392">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-393">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-393">*hexdigits*</span></span>|<span data-ttu-id="d18eb-394">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="d18eb-394">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d18eb-395">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="d18eb-395">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d18eb-396">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>スタイル) の範囲内にある場合は、常に正常に解析、<xref:System.Int64>型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-396">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> style) always parses successfully if it is in the range of the <xref:System.Int64> type.</span></span> <span data-ttu-id="d18eb-397">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-397">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="d18eb-398">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-398">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d18eb-399">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d18eb-399">Non-composite NumberStyles values</span></span>|<span data-ttu-id="d18eb-400">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-400">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="d18eb-401">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="d18eb-401">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="d18eb-402">10 進数のポイント (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-402">The decimal point ( *.*</span></span> <span data-ttu-id="d18eb-403">) と*桁の小数部*要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-403">) and *fractional-digits* elements.</span></span> <span data-ttu-id="d18eb-404">ただし、*桁の小数部*のみ 1 つまたは複数の 0 の数字で構成する必要がありますまたは<xref:System.OverflowException>がスローされます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-404">However, *fractional-digits* must consist of only one or more 0 digits or an <xref:System.OverflowException> is thrown.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="d18eb-405">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-405">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="d18eb-406">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-406">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="d18eb-407">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-407">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="d18eb-408">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-408">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="d18eb-409">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-409">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="d18eb-410">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-410">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="d18eb-411">桁区切り記号 ( *、* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-411">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="d18eb-412">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-412">The *$* element.</span></span>|  
  
 <span data-ttu-id="d18eb-413">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-413">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d18eb-414">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-414">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d18eb-415">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-415">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d18eb-416">(、<xref:System.Globalization.NumberStyles>列挙体には複合数値スタイル、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="d18eb-416">(The <xref:System.Globalization.NumberStyles> enumeration has a composite number style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d18eb-417">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.NumberFormatInfo>または<xref:System.Globalization.CultureInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-417">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.NumberFormatInfo> or <xref:System.Globalization.CultureInfo> object.</span></span> <span data-ttu-id="d18eb-418">`provider`パラメーターの解析中に使用されるカルチャ固有の情報を提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-418">The `provider` parameter supplies culture-specific information used in parsing.</span></span> <span data-ttu-id="d18eb-419">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-419">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-420">次の例は、さまざまな`style`と`provider`パラメーターの文字列形式を解析する<xref:System.Int64>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-420">The following example uses a variety of `style` and `provider` parameters to parse the string representations of <xref:System.Int64> values.</span></span> <span data-ttu-id="d18eb-421">いくつかの書式情報を含むが、解析操作で使用されるカルチャに応じて、同じ文字列を解釈できるさまざまな方法も示します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-421">It also illustrates some of the different ways the same string can be interpreted depending on the culture whose formatting information is used for the parsing operation.</span></span>  
  
 [!code-csharp[System.Int64.Parse#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.int64.parse/cs/Parse3.cs#3)]
 [!code-vb[System.Int64.Parse#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.int64.parse/vb/Parse3.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <span data-ttu-id="d18eb-422">
            <paramref name="s" /> は <see langword="null" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-422">
              <paramref name="s" /> is <see langword="null" />.</span>
          </span>
        </exception>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d18eb-423">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-423">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="d18eb-424">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-424">-or-</span>
          </span>
          <span data-ttu-id="d18eb-425">
            <paramref name="style" /> は <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-425">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-426">
            <paramref name="s" /> の形式が <paramref name="style" /> に準拠していません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-426">
              <paramref name="s" /> is not in a format compliant with <paramref name="style" />.</span>
          </span>
        </exception>
        <exception cref="T:System.OverflowException">
          <span data-ttu-id="d18eb-427">
            <paramref name="s" /> が、<see cref="F:System.Int64.MinValue" /> 未満の数値か、<see cref="F:System.Int64.MaxValue" /> より大きい数値を表しています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-427">
              <paramref name="s" /> represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="d18eb-428">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-428">-or-</span>
          </span>
          <span data-ttu-id="d18eb-429">
            <paramref name="style" /> は小数の桁をサポートしていますが、<paramref name="s" /> に 0 以外の小数の桁が含まれています。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-429">
              <paramref name="style" /> supports fractional digits, but <paramref name="s" /> includes non-zero fractional digits.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-430">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-430">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="System.IComparable.CompareTo">
      <MemberSignature Language="C#" Value="int IComparable.CompareTo (object value);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IComparable.CompareTo(object value) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IComparable#CompareTo(System.Object)" />
      <MemberSignature Language="VB.NET" Value="Function CompareTo (value As Object) As Integer Implements IComparable.CompareTo" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IComparable.CompareTo(System::Object ^ value) = IComparable::CompareTo;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IComparable.CompareTo(System.Object)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="value" Type="System.Object" />
      </Parameters>
      <Docs>
        <param name="value">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.GetTypeCode">
      <MemberSignature Language="C#" Value="TypeCode IConvertible.GetTypeCode ();" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.TypeCode System.IConvertible.GetTypeCode() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#GetTypeCode" />
      <MemberSignature Language="VB.NET" Value="Function GetTypeCode () As TypeCode Implements IConvertible.GetTypeCode" />
      <MemberSignature Language="C++ CLI" Value=" virtual TypeCode System.IConvertible.GetTypeCode() = IConvertible::GetTypeCode;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.GetTypeCode</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.TypeCode</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToBoolean">
      <MemberSignature Language="C#" Value="bool IConvertible.ToBoolean (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance bool System.IConvertible.ToBoolean(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToBoolean(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToBoolean (provider As IFormatProvider) As Boolean Implements IConvertible.ToBoolean" />
      <MemberSignature Language="C++ CLI" Value=" virtual bool System.IConvertible.ToBoolean(IFormatProvider ^ provider) = IConvertible::ToBoolean;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToBoolean(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-431">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-431">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-432">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-432">For a description of this member, see <see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-433">現在のインスタンスの値が 0 でない場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-433">
              <see langword="true" /> if the value of the current instance is not zero; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-434">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-434">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-435">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-435">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-436">推奨される代替手段は、<xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-436">The recommended alternative is to call the <xref:System.Convert.ToBoolean%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToByte">
      <MemberSignature Language="C#" Value="byte IConvertible.ToByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int8 System.IConvertible.ToByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToByte (provider As IFormatProvider) As Byte Implements IConvertible.ToByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Byte System.IConvertible.ToByte(IFormatProvider ^ provider) = IConvertible::ToByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Byte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-437">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-437">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-438">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-438">For a description of this member, see <see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-439">
            <see cref="T:System.Byte" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-439">The value of the current instance, converted to a <see cref="T:System.Byte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-440">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-440">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-441">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-441">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-442">推奨される代替手段は、<xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-442">The recommended alternative is to call the <xref:System.Convert.ToByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToChar">
      <MemberSignature Language="C#" Value="char IConvertible.ToChar (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance char System.IConvertible.ToChar(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToChar(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToChar (provider As IFormatProvider) As Char Implements IConvertible.ToChar" />
      <MemberSignature Language="C++ CLI" Value=" virtual char System.IConvertible.ToChar(IFormatProvider ^ provider) = IConvertible::ToChar;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToChar(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Char</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-443">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-443">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-444">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-444">For a description of this member, see <see cref="M:System.IConvertible.ToChar(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-445">
            <see cref="T:System.Char" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-445">The value of the current instance, converted to a <see cref="T:System.Char" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-446">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-446">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-447">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-447">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-448">推奨される代替手段は、<xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-448">The recommended alternative is to call the <xref:System.Convert.ToChar%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDateTime">
      <MemberSignature Language="C#" Value="DateTime IConvertible.ToDateTime (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.DateTime System.IConvertible.ToDateTime(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDateTime(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDateTime (provider As IFormatProvider) As DateTime Implements IConvertible.ToDateTime" />
      <MemberSignature Language="C++ CLI" Value=" virtual DateTime System.IConvertible.ToDateTime(IFormatProvider ^ provider) = IConvertible::ToDateTime;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDateTime(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.DateTime</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-449">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-449">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-450">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-450">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d18eb-451">このメソッドを使用しようとすると、<see cref="T:System.InvalidCastException" /> がスローされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-451">Attempting to use this method throws an <see cref="T:System.InvalidCastException" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-452">この変換はサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-452">This conversion is not supported.</span>
          </span>
          <span data-ttu-id="d18eb-453">値は返されません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-453">No value is returned.</span>
          </span>
        </returns>
        <remarks>To be added.</remarks>
        <exception cref="T:System.InvalidCastException">
          <span data-ttu-id="d18eb-454">すべての場合。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-454">In all cases.</span>
          </span>
        </exception>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDecimal">
      <MemberSignature Language="C#" Value="decimal IConvertible.ToDecimal (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance valuetype System.Decimal System.IConvertible.ToDecimal(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDecimal(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDecimal (provider As IFormatProvider) As Decimal Implements IConvertible.ToDecimal" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Decimal System.IConvertible.ToDecimal(IFormatProvider ^ provider) = IConvertible::ToDecimal;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDecimal(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Decimal</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-455">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-455">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-456">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-456">For a description of this member, see <see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-457">
            <see cref="T:System.Decimal" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-457">The value of the current instance, converted to a <see cref="T:System.Decimal" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-458">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-458">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-459">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-459">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-460">推奨される代替手段は、<xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-460">The recommended alternative is to call the <xref:System.Convert.ToDecimal%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToDouble">
      <MemberSignature Language="C#" Value="double IConvertible.ToDouble (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float64 System.IConvertible.ToDouble(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToDouble(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToDouble (provider As IFormatProvider) As Double Implements IConvertible.ToDouble" />
      <MemberSignature Language="C++ CLI" Value=" virtual double System.IConvertible.ToDouble(IFormatProvider ^ provider) = IConvertible::ToDouble;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToDouble(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Double</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-461">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-461">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-462">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-462">For a description of this member, see <see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-463">
            <see cref="T:System.Double" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-463">The value of the current instance, converted to a <see cref="T:System.Double" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-464">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-464">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-465">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-465">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-466">推奨される代替手段は、<xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-466">The recommended alternative is to call the <xref:System.Convert.ToDouble%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt16">
      <MemberSignature Language="C#" Value="short IConvertible.ToInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int16 System.IConvertible.ToInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt16 (provider As IFormatProvider) As Short Implements IConvertible.ToInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual short System.IConvertible.ToInt16(IFormatProvider ^ provider) = IConvertible::ToInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-467">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-467">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-468">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-468">For a description of this member, see <see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-469">
            <see cref="T:System.Int16" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-469">The value of the current instance, converted to an <see cref="T:System.Int16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-470">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-470">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-471">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-471">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-472">推奨される代替手段は、<xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-472">The recommended alternative is to call the <xref:System.Convert.ToInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt32">
      <MemberSignature Language="C#" Value="int IConvertible.ToInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int32 System.IConvertible.ToInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt32 (provider As IFormatProvider) As Integer Implements IConvertible.ToInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual int System.IConvertible.ToInt32(IFormatProvider ^ provider) = IConvertible::ToInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-473">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-473">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-474">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-474">For a description of this member, see <see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-475">
            <see cref="T:System.Int32" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-475">The value of the current instance, converted to an <see cref="T:System.Int32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-476">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-476">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-477">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-477">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-478">推奨される代替手段は、<xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-478">The recommended alternative is to call the <xref:System.Convert.ToInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToInt64">
      <MemberSignature Language="C#" Value="long IConvertible.ToInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int64 System.IConvertible.ToInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToInt64 (provider As IFormatProvider) As Long Implements IConvertible.ToInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual long System.IConvertible.ToInt64(IFormatProvider ^ provider) = IConvertible::ToInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-479">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-479">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-480">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-480">For a description of this member, see <see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-481">変更されていない、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-481">The value of the current instance, unchanged.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-482">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-482">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-483">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-483">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSByte">
      <MemberSignature Language="C#" Value="sbyte IConvertible.ToSByte (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance int8 System.IConvertible.ToSByte(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSByte(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSByte (provider As IFormatProvider) As SByte Implements IConvertible.ToSByte" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::SByte System.IConvertible.ToSByte(IFormatProvider ^ provider) = IConvertible::ToSByte;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSByte(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.SByte</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-484">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-484">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-485">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-485">For a description of this member, see <see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-486">
            <see cref="T:System.SByte" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-486">The value of the current instance, converted to an <see cref="T:System.SByte" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-487">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-487">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-488">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-488">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-489">推奨される代替手段は、<xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-489">The recommended alternative is to call the <xref:System.Convert.ToSByte%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToSingle">
      <MemberSignature Language="C#" Value="float IConvertible.ToSingle (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance float32 System.IConvertible.ToSingle(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToSingle(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToSingle (provider As IFormatProvider) As Single Implements IConvertible.ToSingle" />
      <MemberSignature Language="C++ CLI" Value=" virtual float System.IConvertible.ToSingle(IFormatProvider ^ provider) = IConvertible::ToSingle;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToSingle(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Single</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-490">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-490">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-491">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-491">For a description of this member, see <see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-492">
            <see cref="T:System.Single" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-492">The value of the current instance, converted to a <see cref="T:System.Single" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-493">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-493">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-494">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-494">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-495">推奨される代替手段は、<xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-495">The recommended alternative is to call the <xref:System.Convert.ToSingle%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToType">
      <MemberSignature Language="C#" Value="object IConvertible.ToType (Type type, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance object System.IConvertible.ToType(class System.Type type, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToType(System.Type,System.IFormatProvider)" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::Object ^ System.IConvertible.ToType(Type ^ type, IFormatProvider ^ provider) = IConvertible::ToType;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToType(System.Type,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Object</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="type" Type="System.Type" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="type">
          <span data-ttu-id="d18eb-496">この <see cref="T:System.Int64" /> 値の変換後の型。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-496">The type to which to convert this <see cref="T:System.Int64" /> value.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d18eb-497">戻り値の書式に関する情報を提供する <see cref="T:System.IFormatProvider" /> の実装。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-497">An <see cref="T:System.IFormatProvider" /> implementation that provides information about the format of the returned value.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-498">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-498">For a description of this member, see <see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-499">
            <paramref name="type" /> に変換後の、現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-499">The value of the current instance, converted to <paramref name="type" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-500">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-500">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-501">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-501">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-502">推奨される代替手段は、 `static` (`Shared` Visual Basic で)<xref:System.Convert.ChangeType%2A?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-502">The recommended alternative is to call the `static` (`Shared` in Visual Basic) <xref:System.Convert.ChangeType%2A?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt16">
      <MemberSignature Language="C#" Value="ushort IConvertible.ToUInt16 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int16 System.IConvertible.ToUInt16(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt16(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt16 (provider As IFormatProvider) As UShort Implements IConvertible.ToUInt16" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt16 System.IConvertible.ToUInt16(IFormatProvider ^ provider) = IConvertible::ToUInt16;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt16(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt16</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-503">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-503">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-504">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-504">For a description of this member, see <see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-505">
            <see cref="T:System.UInt16" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-505">The value of the current instance, converted to a <see cref="T:System.UInt16" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-506">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-506">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-507">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-507">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-508">推奨される代替手段は、<xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-508">The recommended alternative is to call the <xref:System.Convert.ToUInt16%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt32">
      <MemberSignature Language="C#" Value="uint IConvertible.ToUInt32 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int32 System.IConvertible.ToUInt32(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt32(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt32 (provider As IFormatProvider) As UInteger Implements IConvertible.ToUInt32" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt32 System.IConvertible.ToUInt32(IFormatProvider ^ provider) = IConvertible::ToUInt32;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt32(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-509">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-509">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-510">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-510">For a description of this member, see <see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-511">
            <see cref="T:System.UInt32" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-511">The value of the current instance, converted to a <see cref="T:System.UInt32" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-512">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-512">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-513">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-513">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-514">推奨される代替手段は、<xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-514">The recommended alternative is to call the <xref:System.Convert.ToUInt32%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="System.IConvertible.ToUInt64">
      <MemberSignature Language="C#" Value="ulong IConvertible.ToUInt64 (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method hidebysig newslot virtual instance unsigned int64 System.IConvertible.ToUInt64(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.System#IConvertible#ToUInt64(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Function ToUInt64 (provider As IFormatProvider) As ULong Implements IConvertible.ToUInt64" />
      <MemberSignature Language="C++ CLI" Value=" virtual System::UInt64 System.IConvertible.ToUInt64(IFormatProvider ^ provider) = IConvertible::ToUInt64;" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToUInt64(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-1.1">
          <AttributeName>System.CLSCompliant(false)</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.UInt64</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-515">このパラメーターは無視されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-515">This parameter is ignored.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-516">このメンバーの詳細については、「<see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />」をご覧ください。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-516">For a description of this member, see <see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" />.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-517">
            <see cref="T:System.UInt64" /> に変換後の現在のインスタンスの値。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-517">The value of the current instance, converted to a <see cref="T:System.UInt64" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-518">このメンバーは、明示的なインターフェイス メンバーの実装です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-518">This member is an explicit interface member implementation.</span></span> <span data-ttu-id="d18eb-519">これは、<xref:System.Int64> のインスタンスが <xref:System.IConvertible> インターフェイスにキャストされる場合のみ、使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-519">It can be used only when the <xref:System.Int64> instance is cast to an <xref:System.IConvertible> interface.</span></span> <span data-ttu-id="d18eb-520">推奨される代替手段は、<xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-520">The recommended alternative is to call the <xref:System.Convert.ToUInt64%28System.Int64%29?displayProperty=nameWithType> method.</span></span>  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="ToString">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-521">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-521">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
      </Docs>
    </MemberGroup>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public override string ToString ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig virtual instance string ToString() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString" />
      <MemberSignature Language="VB.NET" Value="Public Overrides Function ToString () As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; override System::String ^ ToString();" />
      <MemberSignature Language="F#" Value="override this.ToString : unit -&gt; string" Usage="int64.ToString " />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters />
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-522">このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-522">Converts the numeric value of this instance to its equivalent string representation.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-523">値が負の場合はマイナス記号を伴い、先行ゼロを含まない 0 から 9 までの一連の数字から構成される、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-523">The string representation of the value of this instance, consisting of a minus sign if the value is negative, and a sequence of digits ranging from 0 to 9 with no leading zeroes.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-524"><xref:System.Int64.ToString>メソッド形式、 <xref:System.Int64> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>現在のカルチャのオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-524">The <xref:System.Int64.ToString> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of the current culture.</span></span> <span data-ttu-id="d18eb-525">別の形式またはカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int64.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-525">If you want to specify a different format or culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d18eb-526">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d18eb-526">To use format</span></span>|<span data-ttu-id="d18eb-527">カルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-527">For culture</span></span>|<span data-ttu-id="d18eb-528">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-528">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d18eb-529">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-529">Default ("G") format</span></span>|<span data-ttu-id="d18eb-530">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-530">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d18eb-531">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-531">A specific format</span></span>|<span data-ttu-id="d18eb-532">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-532">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="d18eb-533">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-533">A specific format</span></span>|<span data-ttu-id="d18eb-534">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-534">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d18eb-535">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-535">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d18eb-536">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-536">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d18eb-537">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-537">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-538">次の例では、表示、<xref:System.Int64>値の既定値を使用して<xref:System.Int64.ToString>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-538">The following example displays an <xref:System.Int64> value using the default <xref:System.Int64.ToString> method.</span></span> <span data-ttu-id="d18eb-539">文字列表現が表示されます、<xref:System.Int64>からさまざまな標準書式指定子を使用して結果の値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-539">It also displays the string representations of the <xref:System.Int64> value that results from using a number of standard format specifiers.</span></span> <span data-ttu-id="d18eb-540">例は、EN-US カルチャの書式指定規則を使用して表示されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-540">The examples are displayed using the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#1)]
 [!code-vb[System.Int64.ToString#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#1)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="d18eb-541">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-541">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : IFormatProvider -&gt; string" Usage="int64.ToString provider" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IConvertible.ToString(System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="provider">
          <span data-ttu-id="d18eb-542">カルチャ固有の書式情報を提供する <see cref="T:System.IFormatProvider" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-542">An <see cref="T:System.IFormatProvider" /> that supplies culture-specific formatting information.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-543">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-543">Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-544">
            <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-544">The string representation of the value of this instance as specified by <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-545"><xref:System.Int64.ToString%28System.IFormatProvider%29>メソッド形式、 <xref:System.Int64> ("G"または [全般]) の既定値を使用して形式、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-545">The <xref:System.Int64.ToString%28System.IFormatProvider%29> method formats an <xref:System.Int64> value in the default ("G", or general) format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d18eb-546">別の形式または現在のカルチャを指定する場合の他のオーバー ロードを使用して、<xref:System.Int64.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-546">If you want to specify a different format or the current culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d18eb-547">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d18eb-547">To use format</span></span>|<span data-ttu-id="d18eb-548">カルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-548">For culture</span></span>|<span data-ttu-id="d18eb-549">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-549">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d18eb-550">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-550">Default ("G") format</span></span>|<span data-ttu-id="d18eb-551">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-551">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="d18eb-552">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-552">A specific format</span></span>|<span data-ttu-id="d18eb-553">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-553">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
|<span data-ttu-id="d18eb-554">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-554">A specific format</span></span>|<span data-ttu-id="d18eb-555">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-555">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d18eb-556">`provider`パラメーターが実装するオブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-556">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="d18eb-557">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-557">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="d18eb-558">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-558">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="d18eb-559">A<xref:System.Globalization.CultureInfo>書式指定規則を使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-559">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="d18eb-560">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-560">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="d18eb-561">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-561">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d18eb-562">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できない`provider`、戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-562">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value is formatted with the <xref:System.Globalization.NumberFormatInfo> object for the current culture.</span></span>  
  
 <span data-ttu-id="d18eb-563">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-563">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d18eb-564">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-564">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d18eb-565">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-565">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-566">次の例の文字列表現を表示する、<xref:System.Int64>値を使用して<xref:System.Globalization.CultureInfo>いくつかの異なるカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-566">The following example displays the string representation of an <xref:System.Int64> value using <xref:System.Globalization.CultureInfo> objects that represent several different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#2)]
 [!code-vb[System.Int64.ToString#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#2)]  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="d18eb-567">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-567">Formatting Types in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance string ToString(string format) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; System::String ^ ToString(System::String ^ format);" />
      <MemberSignature Language="F#" Value="override this.ToString : string -&gt; string" Usage="int64.ToString format" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="d18eb-568">数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-568">A numeric format string.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-569">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-569">Converts the numeric value of this instance to its equivalent string representation, using the specified format.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-570">
            <paramref name="format" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-570">The string representation of the value of this instance as specified by <paramref name="format" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-571"><xref:System.Int64.ToString%28System.String%29>メソッド形式、<xref:System.Int64>を使用して指定された形式で値を<xref:System.Globalization.NumberFormatInfo>現在のカルチャの規則を表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-571">The <xref:System.Int64.ToString%28System.String%29> method formats an <xref:System.Int64> value in a specified format by using a <xref:System.Globalization.NumberFormatInfo> object that represents the conventions of the current culture.</span></span> <span data-ttu-id="d18eb-572">既定値 ("G"または [全般]) を使用する場合は、書式を設定または別のカルチャを指定するの他のオーバー ロードを使用して、<xref:System.Int64.ToString%2A>メソッドは、次のように。</span><span class="sxs-lookup"><span data-stu-id="d18eb-572">If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d18eb-573">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d18eb-573">To use format</span></span>|<span data-ttu-id="d18eb-574">カルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-574">For culture</span></span>|<span data-ttu-id="d18eb-575">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-575">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d18eb-576">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-576">Default ("G") format</span></span>|<span data-ttu-id="d18eb-577">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-577">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="d18eb-578">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-578">Default ("G") format</span></span>|<span data-ttu-id="d18eb-579">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-579">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d18eb-580">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-580">A specific format</span></span>|<span data-ttu-id="d18eb-581">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-581">A specific culture</span></span>|<xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>|  
  
 <span data-ttu-id="d18eb-582">`format` "R"を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせをパラメーターとして使用することができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-582">The `format` parameter can be any valid standard numeric format specifier except for "R", as well as any combination of custom numeric format specifiers.</span></span> <span data-ttu-id="d18eb-583">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-583">If `format` is `null` or an empty string (""), the return value of this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="d18eb-584">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-584">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d18eb-585">数値書式指定子の詳細については[Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-585">For more information about numeric format specifiers, [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d18eb-586">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-586">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
 <span data-ttu-id="d18eb-587">このインスタンスの戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-587">The return value of this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-588">次の例では、表示、<xref:System.Int64>値の 2 つのカスタム数値書式指定文字列とサポートされている標準の数値書式指定子を使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-588">The following example displays an <xref:System.Int64> value using each of the supported standard numeric format specifiers together with two custom numeric format strings.</span></span> <span data-ttu-id="d18eb-589">数値の値を文字列に変換では、EN-US カルチャの書式指定規則を使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-589">In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</span></span>  
  
 [!code-csharp[System.Int64.ToString#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#3)]
 [!code-vb[System.Int64.ToString#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#3)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-590">
            <paramref name="format" /> は使用できないか、またはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-590">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="T:System.String" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="d18eb-591">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-591">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="d18eb-592">標準の数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-592">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="d18eb-593">カスタム数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-593">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="d18eb-594">方法: 数値に先行するゼロを埋め込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-594">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="ToString">
      <MemberSignature Language="C#" Value="public string ToString (string format, IFormatProvider provider);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance string ToString(string format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.ToString(System.String,System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function ToString (format As String, provider As IFormatProvider) As String" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual System::String ^ ToString(System::String ^ format, IFormatProvider ^ provider);" />
      <MemberSignature Language="F#" Value="override this.ToString : string * IFormatProvider -&gt; string" Usage="int64.ToString (format, provider)" />
      <MemberType>Method</MemberType>
      <Implements>
        <InterfaceMember>M:System.IFormattable.ToString(System.String,System.IFormatProvider)</InterfaceMember>
      </Implements>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>1.0.5000.0</AssemblyVersion>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0;netframework-4.5;netframework-4.5.1;netframework-4.5.2;netframework-4.6;netframework-4.6.1;netframework-4.6.2;netframework-4.7;netframework-4.7.1;netframework-4.7.2;netstandard-1.0;netstandard-1.1;netstandard-1.2;xamarinandroid-7.1;xamarinios-10.8;xamarinmac-3.0;netframework-4.8">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.String</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="format" Type="System.String" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="format">
          <span data-ttu-id="d18eb-595">数値書式指定文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-595">A numeric format string.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d18eb-596">このインスタンスに関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-596">An object that supplies culture-specific formatting information about this instance.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-597">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-597">Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-598">
            <paramref name="format" /> および <paramref name="provider" /> で指定された、このインスタンスの値の文字列形式。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-598">The string representation of the value of this instance as specified by <paramref name="format" /> and <paramref name="provider" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-599"><xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29>メソッド形式、<xref:System.Int64>値を使用して指定された形式で、<xref:System.Globalization.NumberFormatInfo>特定のカルチャ オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-599">The <xref:System.Int64.ToString%28System.String%2CSystem.IFormatProvider%29> method formats an <xref:System.Int64> value in a specified format by using the <xref:System.Globalization.NumberFormatInfo> object of a specified culture.</span></span> <span data-ttu-id="d18eb-600">既定の形式またはカルチャの設定を使用する場合の他のオーバー ロードを使用して、<xref:System.Int64.ToString%2A>メソッドは、次のようにします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-600">If you want to use default format or culture settings, use the other overloads of the <xref:System.Int64.ToString%2A> method, as follows:</span></span>  
  
|<span data-ttu-id="d18eb-601">形式を使用するには</span><span class="sxs-lookup"><span data-stu-id="d18eb-601">To use format</span></span>|<span data-ttu-id="d18eb-602">カルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-602">For culture</span></span>|<span data-ttu-id="d18eb-603">オーバー ロードを使用します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-603">Use the overload</span></span>|  
|-------------------|-----------------|----------------------|  
|<span data-ttu-id="d18eb-604">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-604">Default ("G") format</span></span>|<span data-ttu-id="d18eb-605">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-605">Default (current) culture</span></span>|<xref:System.Int64.ToString>|  
|<span data-ttu-id="d18eb-606">既定 ("G") の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-606">Default ("G") format</span></span>|<span data-ttu-id="d18eb-607">特定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-607">A specific culture</span></span>|<xref:System.Int64.ToString%28System.IFormatProvider%29>|  
|<span data-ttu-id="d18eb-608">特定の形式</span><span class="sxs-lookup"><span data-stu-id="d18eb-608">A specific format</span></span>|<span data-ttu-id="d18eb-609">(現在) の既定のカルチャ</span><span class="sxs-lookup"><span data-stu-id="d18eb-609">Default (current) culture</span></span>|<xref:System.Int64.ToString%28System.String%29>|  
  
 <span data-ttu-id="d18eb-610">`format`パラメーターは、標準またはカスタム数値書式指定文字列のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-610">The `format` parameter can be either a standard or a custom numeric format string.</span></span> <span data-ttu-id="d18eb-611">すべてのカスタム数値書式指定文字として、"R"(または"r") 以外のすべての標準数値書式指定文字列がサポートされます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-611">All standard numeric format strings other than "R" (or "r") are supported, as are all custom numeric format characters.</span></span> <span data-ttu-id="d18eb-612">場合`format`は`null`または空の文字列 ("")、このインスタンスの戻り値が、一般的な数値書式指定子 ("G") でフォーマットされています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-612">If `format` is `null` or an empty string (""), the return value for this instance is formatted with the general numeric format specifier ("G").</span></span>  
  
 <span data-ttu-id="d18eb-613">`provider`パラメーターが実装するオブジェクト、<xref:System.IFormatProvider>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-613">The `provider` parameter is an object that implements the <xref:System.IFormatProvider> interface.</span></span> <span data-ttu-id="d18eb-614">その<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>このメソッドによって返される文字列の書式設定に関するカルチャに固有の情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-614">Its <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides culture-specific information about the format of the string that is returned by this method.</span></span> <span data-ttu-id="d18eb-615">実装するオブジェクト<xref:System.IFormatProvider>次のいずれかを指定できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-615">The object that implements <xref:System.IFormatProvider> can be any of the following:</span></span>  
  
-   <span data-ttu-id="d18eb-616">A<xref:System.Globalization.CultureInfo>書式指定規則を使用するカルチャを表すオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-616">A <xref:System.Globalization.CultureInfo> object that represents the culture whose formatting rules are to be used.</span></span>  
  
-   <span data-ttu-id="d18eb-617">A<xref:System.Globalization.NumberFormatInfo>この値の特定の数値書式設定情報を格納しているオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-617">A <xref:System.Globalization.NumberFormatInfo> object that contains specific numeric formatting information for this value.</span></span>  
  
-   <span data-ttu-id="d18eb-618">実装するカスタム オブジェクト<xref:System.IFormatProvider>と持つ<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>の書式情報を提供するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-618">A custom object that implements <xref:System.IFormatProvider> and whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object that provides formatting information.</span></span>  
  
 <span data-ttu-id="d18eb-619">場合`provider`は`null`または<xref:System.Globalization.NumberFormatInfo>からオブジェクトを取得できない`provider`、このインスタンスの戻り値は設定、<xref:System.Globalization.NumberFormatInfo>現在のカルチャ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-619">If `provider` is `null` or a <xref:System.Globalization.NumberFormatInfo> object cannot be obtained from `provider`, the return value for this instance is formatted with the <xref:System.Globalization.NumberFormatInfo> for the current culture.</span></span>  
  
 <span data-ttu-id="d18eb-620">.NET Framework は、次の書式設定のトピックで詳しく説明されている広範な書式設定のサポートを提供します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-620">The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</span></span>  
  
-   <span data-ttu-id="d18eb-621">数値書式指定子の詳細については、次を参照してください。 [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md)と[カスタム数値書式指定文字列](~/docs/standard/base-types/custom-numeric-format-strings.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-621">For more information about numeric format specifiers, see [Standard Numeric Format Strings](~/docs/standard/base-types/standard-numeric-format-strings.md) and [Custom Numeric Format Strings](~/docs/standard/base-types/custom-numeric-format-strings.md).</span></span>  
  
-   <span data-ttu-id="d18eb-622">書式設定に関する詳細については、次を参照してください。[型の書式設定](~/docs/standard/base-types/formatting-types.md)します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-622">For more information about formatting, see [Formatting Types](~/docs/standard/base-types/formatting-types.md).</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-623">次の例では、正と負の値が 3 つの異なるカルチャを使用して、サポートされている標準の数値書式指定子の各が表示されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-623">The following example displays a positive and a negative value using each of the supported standard numeric format specifiers for three different cultures.</span></span>  
  
 [!code-csharp[System.Int64.ToString#4](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.ToString/cs/ToString.cs#4)]
 [!code-vb[System.Int64.ToString#4](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.ToString/vb/ToString.vb#4)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.FormatException">
          <span data-ttu-id="d18eb-624">
            <paramref name="format" /> は使用できないか、またはサポートされていません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-624">
              <paramref name="format" /> is invalid or not supported.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <related type="Article" href="~/docs/standard/base-types/formatting-types.md">
          <span data-ttu-id="d18eb-625">.NET での型の書式設定</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-625">Formatting Types in .NET</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/standard-numeric-format-strings.md">
          <span data-ttu-id="d18eb-626">標準の数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-626">Standard Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/custom-numeric-format-strings.md">
          <span data-ttu-id="d18eb-627">カスタム数値書式指定文字列</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-627">Custom Numeric Format Strings</span>
          </span>
        </related>
        <related type="Article" href="~/docs/standard/base-types/how-to-pad-a-number-with-leading-zeros.md">
          <span data-ttu-id="d18eb-628">方法: 数値に先行するゼロを埋め込む</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-628">How to: Pad a Number with Leading Zeros</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="d18eb-629">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-629">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryFormat">
      <MemberSignature Language="C#" Value="public bool TryFormat (Span&lt;char&gt; destination, out int charsWritten, ReadOnlySpan&lt;char&gt; format = null, IFormatProvider provider = null);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig instance bool TryFormat(valuetype System.Span`1&lt;char&gt; destination, [out] int32&amp; charsWritten, valuetype System.ReadOnlySpan`1&lt;char&gt; format, class System.IFormatProvider provider) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryFormat(System.Span{System.Char},System.Int32@,System.ReadOnlySpan{System.Char},System.IFormatProvider)" />
      <MemberSignature Language="VB.NET" Value="Public Function TryFormat (destination As Span(Of Char), ByRef charsWritten As Integer, Optional format As ReadOnlySpan(Of Char) = null, Optional provider As IFormatProvider = null) As Boolean" />
      <MemberSignature Language="F#" Value="member this.TryFormat : Span&lt;char&gt; *  * ReadOnlySpan&lt;char&gt; * IFormatProvider -&gt; bool" Usage="int64.TryFormat (destination, charsWritten, format, provider)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="destination" Type="System.Span&lt;System.Char&gt;" />
        <Parameter Name="charsWritten" Type="System.Int32" RefType="out" />
        <Parameter Name="format" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
      </Parameters>
      <Docs>
        <param name="destination">To be added.</param>
        <param name="charsWritten">To be added.</param>
        <param name="format">To be added.</param>
        <param name="provider">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <MemberGroup MemberName="TryParse">
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Docs>
        <summary>
          <span data-ttu-id="d18eb-630">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-630">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="d18eb-631">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-631">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <altmember cref="Overload:System.Int64.Parse" />
      </Docs>
    </MemberGroup>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string *  -&gt; bool" Usage="System.int64.TryParse (s, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-632">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-632">A string containing a number to convert.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="d18eb-633">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 64 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-633">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="d18eb-634">
            <paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、正しい形式ではない、または <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-634">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not of the correct format, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="d18eb-635">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-635">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-636">数値の文字列形式を、それと等価な 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-636">Converts the string representation of a number to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="d18eb-637">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-637">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-638">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-638">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-639"><xref:System.Int64.TryParse%2A>などのメソッドは、<xref:System.Int64.Parse%2A>メソッドを除く、<xref:System.Int64.TryParse%2A>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-639">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d18eb-640">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されることはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-640">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be successfully parsed.</span></span>  
  
 <span data-ttu-id="d18eb-641">`s`パラメーターには、フォームの番号が含まれています。</span><span class="sxs-lookup"><span data-stu-id="d18eb-641">The `s` parameter contains a number of the form:</span></span>  
  
 <span data-ttu-id="d18eb-642">[ws][サインイン] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-642">[ws][sign]digits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-643">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-643">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d18eb-644">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-644">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d18eb-645">要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-645">Element</span></span>|<span data-ttu-id="d18eb-646">説明</span><span class="sxs-lookup"><span data-stu-id="d18eb-646">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d18eb-647">*ws*</span><span class="sxs-lookup"><span data-stu-id="d18eb-647">*ws*</span></span>|<span data-ttu-id="d18eb-648">省略可能な空白。</span><span class="sxs-lookup"><span data-stu-id="d18eb-648">An optional white space.</span></span>|  
|<span data-ttu-id="d18eb-649">*sign*</span><span class="sxs-lookup"><span data-stu-id="d18eb-649">*sign*</span></span>|<span data-ttu-id="d18eb-650">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-650">An optional sign.</span></span>|  
|<span data-ttu-id="d18eb-651">*数字*</span><span class="sxs-lookup"><span data-stu-id="d18eb-651">*digits*</span></span>|<span data-ttu-id="d18eb-652">0 から 9 までの数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-652">A sequence of digits ranging from 0 to 9.</span></span>|  
  
 <span data-ttu-id="d18eb-653">`s`パラメーターを使用して解釈されますが、<xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType>スタイル。</span><span class="sxs-lookup"><span data-stu-id="d18eb-653">The `s` parameter is interpreted using the <xref:System.Globalization.NumberStyles.Integer?displayProperty=nameWithType> style.</span></span> <span data-ttu-id="d18eb-654">10 進の数字以外には、先頭と末尾の空白および先頭の符号のみを使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-654">In addition to the decimal digits, only leading and trailing spaces together with a leading sign are allowed.</span></span> <span data-ttu-id="d18eb-655">使用できるカルチャに固有の書式情報とスタイル要素を明示的に定義する`s`を使用して、<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>メソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-655">To explicitly define the style elements together with the culture-specific formatting information that can be present in `s`, use the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method.</span></span>  
  
 <span data-ttu-id="d18eb-656">`s`で書式設定情報を使用してパラメーターを解析する<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のシステム カルチャ用に初期化します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-656">The `s` parameter is parsed using the formatting information in a <xref:System.Globalization.NumberFormatInfo> object initialized for the current system culture.</span></span> <span data-ttu-id="d18eb-657">詳細については、「<xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>」を参照してください。</span><span class="sxs-lookup"><span data-stu-id="d18eb-657">For more information, see <xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A>.</span></span>  
  
 <span data-ttu-id="d18eb-658">このオーバー ロード、<xref:System.Int64.TryParse%2A>メソッドですべての桁を解釈し、`s`として 10 進数字のパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-658">This overload of the <xref:System.Int64.TryParse%2A> method interprets all digits in the `s` parameter as decimal digits.</span></span> <span data-ttu-id="d18eb-659">16 進数の文字列表現を解析する、<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>オーバー ロードします。</span><span class="sxs-lookup"><span data-stu-id="d18eb-659">To parse the string representation of a hexadecimal number, call the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> overload.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-660">次の例では、<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType>数別の文字列値を持つメソッド。</span><span class="sxs-lookup"><span data-stu-id="d18eb-660">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29?displayProperty=nameWithType> method with a number of different string values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse1.cs#1)]
 [!code-vb[System.Int64.TryParse#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse1.vb#1)]  
  
 <span data-ttu-id="d18eb-661">文字列の一部を<xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29>メソッドは、この例では変換できませんは。</span><span class="sxs-lookup"><span data-stu-id="d18eb-661">Some of the strings that the <xref:System.Int64.TryParse%28System.String%2CSystem.Int64%40%29> method is unable to convert in this example are:</span></span>  
  
-   <span data-ttu-id="d18eb-662">"9432.0".</span><span class="sxs-lookup"><span data-stu-id="d18eb-662">"9432.0".</span></span> <span data-ttu-id="d18eb-663">小数点の記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-663">The conversion fails because the string cannot contain a decimal separator; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="d18eb-664">"16,667".</span><span class="sxs-lookup"><span data-stu-id="d18eb-664">"16,667".</span></span> <span data-ttu-id="d18eb-665">文字列は、グループの区切り記号を含めることはできませんので、変換に失敗します。整数の桁のみ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-665">The conversion fails because the string cannot contain group separators; it must contain integral digits only.</span></span>  
  
-   <span data-ttu-id="d18eb-666">"(100)".</span><span class="sxs-lookup"><span data-stu-id="d18eb-666">"(100)".</span></span> <span data-ttu-id="d18eb-667">文字列は、現在のカルチャによって定義されている以外の負の符号を含めることはできませんので、変換に失敗<xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType>と<xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType>プロパティ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-667">The conversion fails because the string cannot contain a negative sign other than the one defined by the current culture's <xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType> and <xref:System.Globalization.NumberFormatInfo.NumberNegativePattern%2A?displayProperty=nameWithType> properties.</span></span>  
  
-   <span data-ttu-id="d18eb-668">"01FA"。</span><span class="sxs-lookup"><span data-stu-id="d18eb-668">"01FA".</span></span> <span data-ttu-id="d18eb-669">文字列が 16 進数; を含めることはできませんので、変換に失敗します。10 進数字だけ含める必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-669">The conversion fails because the string cannot contain hexadecimal digits; it must contain decimal digits only.</span></span>  
  
 ]]></format>
        </remarks>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-670">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-670">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
        <related type="ExternalDocumentation" href="https://code.msdn.microsoft.com/NET-Framework-4-Formatting-9c4dae8d">
          <span data-ttu-id="d18eb-671">サンプル: .NET Framework 4 の書式設定ユーティリティ</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-671">Sample: .NET Framework 4 Formatting Utility</span>
          </span>
        </related>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (ReadOnlySpan&lt;char&gt; s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(valuetype System.ReadOnlySpan`1&lt;char&gt; s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.ReadOnlySpan{System.Char},System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As ReadOnlySpan(Of Char), style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(ReadOnlySpan&lt;char&gt; s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : ReadOnlySpan&lt;char&gt; * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.ReadOnlySpan&lt;System.Char&gt;" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">To be added.</param>
        <param name="style">To be added.</param>
        <param name="provider">To be added.</param>
        <param name="result">To be added.</param>
        <summary>To be added.</summary>
        <returns>To be added.</returns>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="TryParse">
      <MemberSignature Language="C#" Value="public static bool TryParse (string s, System.Globalization.NumberStyles style, IFormatProvider provider, out long result);" />
      <MemberSignature Language="ILAsm" Value=".method public static hidebysig bool TryParse(string s, valuetype System.Globalization.NumberStyles style, class System.IFormatProvider provider, [out] int64&amp; result) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.Int64.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Int64@)" />
      <MemberSignature Language="VB.NET" Value="Public Shared Function TryParse (s As String, style As NumberStyles, provider As IFormatProvider, ByRef result As Long) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; static bool TryParse(System::String ^ s, System::Globalization::NumberStyles style, IFormatProvider ^ provider, [Runtime::InteropServices::Out] long % result);" />
      <MemberSignature Language="F#" Value="static member TryParse : string * System.Globalization.NumberStyles * IFormatProvider *  -&gt; bool" Usage="System.int64.TryParse (s, style, provider, result)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Attributes>
        <Attribute FrameworkAlternate="netframework-4.0">
          <AttributeName>System.Security.SecuritySafeCritical</AttributeName>
        </Attribute>
      </Attributes>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="s" Type="System.String" />
        <Parameter Name="style" Type="System.Globalization.NumberStyles" />
        <Parameter Name="provider" Type="System.IFormatProvider" />
        <Parameter Name="result" Type="System.Int64" RefType="out" />
      </Parameters>
      <Docs>
        <param name="s">
          <span data-ttu-id="d18eb-672">変換する数値を含む文字列。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-672">A string containing a number to convert.</span>
          </span>
          <span data-ttu-id="d18eb-673">文字列は、<paramref name="style" /> で指定されたスタイルを使用して解釈されます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-673">The string is interpreted using the style specified by <paramref name="style" />.</span>
          </span>
        </param>
        <param name="style">
          <span data-ttu-id="d18eb-674">
            <paramref name="s" /> で存在する可能性を持つスタイル要素を示す、列挙値のビットごとの組み合わせ。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-674">A bitwise combination of enumeration values that indicates the style elements that can be present in <paramref name="s" />.</span>
          </span>
          <span data-ttu-id="d18eb-675">通常指定する値は <see cref="F:System.Globalization.NumberStyles.Integer" /> です。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-675">A typical value to specify is <see cref="F:System.Globalization.NumberStyles.Integer" />.</span>
          </span>
        </param>
        <param name="provider">
          <span data-ttu-id="d18eb-676">
            <paramref name="s" /> に関するカルチャ固有の書式情報を提供するオブジェクト。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-676">An object that supplies culture-specific formatting information about <paramref name="s" />.</span>
          </span>
        </param>
        <param name="result">
          <span data-ttu-id="d18eb-677">変換が成功した場合、このメソッドが返されるときに、<paramref name="s" /> に格納された数値と等価の 64 ビット符号付き整数値を格納します。変換に失敗した場合は 0 を格納します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-677">When this method returns, contains the 64-bit signed integer value equivalent of the number contained in <paramref name="s" />, if the conversion succeeded, or zero if the conversion failed.</span>
          </span>
          <span data-ttu-id="d18eb-678">
            <paramref name="s" /> パラメーターが <see langword="null" /> または <see cref="F:System.String.Empty" /> であるか、<paramref name="style" /> に準拠した形式ではない、または <see cref="F:System.Int64.MinValue" /> より小さいか <see cref="F:System.Int64.MaxValue" /> より大きい数値を表している場合、変換は失敗します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-678">The conversion fails if the <paramref name="s" /> parameter is <see langword="null" /> or <see cref="F:System.String.Empty" />, is not in a format compliant with <paramref name="style" />, or represents a number less than <see cref="F:System.Int64.MinValue" /> or greater than <see cref="F:System.Int64.MaxValue" />.</span>
          </span>
          <span data-ttu-id="d18eb-679">このパラメーターは初期化されていない状態で渡されています。<paramref name="result" /> で最初に指定された任意の値が上書きされます。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-679">This parameter is passed uninitialized; any value originally supplied in <paramref name="result" /> will be overwritten.</span>
          </span>
        </param>
        <summary>
          <span data-ttu-id="d18eb-680">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価の 64 ビット符号付き整数に変換します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-680">Converts the string representation of a number in a specified style and culture-specific format to its 64-bit signed integer equivalent.</span>
          </span>
          <span data-ttu-id="d18eb-681">戻り値は変換が成功したか失敗したかを示します。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-681">A return value indicates whether the conversion succeeded or failed.</span>
          </span>
        </summary>
        <returns>
          <span data-ttu-id="d18eb-682">
            <see langword="true" /> が正常に変換された場合は <paramref name="s" />。それ以外の場合は <see langword="false" />。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-682">
              <see langword="true" /> if <paramref name="s" /> was converted successfully; otherwise, <see langword="false" />.</span>
          </span>
        </returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="d18eb-683"><xref:System.Int64.TryParse%2A>などのメソッドは、<xref:System.Int64.Parse%2A>メソッドを除く、<xref:System.Int64.TryParse%2A>メソッドは、変換が失敗した場合に例外をスローしません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-683">The <xref:System.Int64.TryParse%2A> method is like the <xref:System.Int64.Parse%2A> method, except the <xref:System.Int64.TryParse%2A> method does not throw an exception if the conversion fails.</span></span> <span data-ttu-id="d18eb-684">例外処理を使用してテストする必要がある、<xref:System.FormatException>イベントで`s`有効でないし、正常に解析されたことはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-684">It eliminates the need to use exception handling to test for a <xref:System.FormatException> in the event that `s` is invalid and cannot be parsed successfully.</span></span>  
  
 <span data-ttu-id="d18eb-685">`style` (空白や正または負符号) で使用できるスタイル要素を定義するパラメーター、`s`解析操作が成功するためのパラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-685">The `style` parameter defines the style elements (such as white space or a positive or negative sign) that are allowed in the `s` parameter for the parse operation to succeed.</span></span> <span data-ttu-id="d18eb-686">ビット フラグの組み合わせがあります、<xref:System.Globalization.NumberStyles>列挙体。</span><span class="sxs-lookup"><span data-stu-id="d18eb-686">It must be a combination of bit flags from the <xref:System.Globalization.NumberStyles> enumeration.</span></span> <span data-ttu-id="d18eb-687">値に応じて`style`、`s`パラメーターは、次の要素を含めることができます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-687">Depending on the value of `style`,the `s` parameter may include the following elements:</span></span>  
  
 <span data-ttu-id="d18eb-688">[ws][$][記号][数字] [.fractional_digits] [e [記号] exponential_digits] の数字 [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-688">[ws][$][sign][digits,]digits[.fractional_digits][e[sign]exponential_digits][ws]</span></span>  
  
 <span data-ttu-id="d18eb-689">または、`style`パラメーターが含まれる<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span><span class="sxs-lookup"><span data-stu-id="d18eb-689">Or, if the `style` parameter includes <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>:</span></span>  
  
 <span data-ttu-id="d18eb-690">[ws] hexdigits [ws]</span><span class="sxs-lookup"><span data-stu-id="d18eb-690">[ws]hexdigits[ws]</span></span>  
  
 <span data-ttu-id="d18eb-691">角かっこ ([ および ]) 内の要素は省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-691">Elements in square brackets ([ and ]) are optional.</span></span> <span data-ttu-id="d18eb-692">次の表は、それぞれの要素の説明です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-692">The following table describes each element.</span></span>  
  
|<span data-ttu-id="d18eb-693">要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-693">Element</span></span>|<span data-ttu-id="d18eb-694">説明</span><span class="sxs-lookup"><span data-stu-id="d18eb-694">Description</span></span>|  
|-------------|-----------------|  
|<span data-ttu-id="d18eb-695">*ws*</span><span class="sxs-lookup"><span data-stu-id="d18eb-695">*ws*</span></span>|<span data-ttu-id="d18eb-696">空白文字の省略可能です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-696">Optional white space.</span></span> <span data-ttu-id="d18eb-697">先頭に空白文字を表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>フラグ、または末尾の`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-697">White space can appear at the beginning of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> flag, or at the end of `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType> flag.</span></span>|  
|*$*|<span data-ttu-id="d18eb-698">カルチャ固有の通貨記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-698">A culture-specific currency symbol.</span></span> <span data-ttu-id="d18eb-699">によって、文字列内の位置が定義されている、<xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A>のプロパティ、<xref:System.Globalization.NumberFormatInfo>によって返されるオブジェクト、<xref:System.IFormatProvider.GetFormat%2A>のメソッド、`provider`パラメーター。</span><span class="sxs-lookup"><span data-stu-id="d18eb-699">Its position in the string is defined by the <xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A> property of the <xref:System.Globalization.NumberFormatInfo> object returned by the <xref:System.IFormatProvider.GetFormat%2A> method of the `provider` parameter.</span></span> <span data-ttu-id="d18eb-700">通貨記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-700">The currency symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-701">*sign*</span><span class="sxs-lookup"><span data-stu-id="d18eb-701">*sign*</span></span>|<span data-ttu-id="d18eb-702">オプションの符号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-702">An optional sign.</span></span> <span data-ttu-id="d18eb-703">記号に表示される`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>または<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-703">A sign symbol can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType> or <xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType> flags.</span></span>|  
|<span data-ttu-id="d18eb-704">*数字*</span><span class="sxs-lookup"><span data-stu-id="d18eb-704">*digits*</span></span><br /><br /> <span data-ttu-id="d18eb-705">*fractional_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-705">*fractional_digits*</span></span><br /><br /> <span data-ttu-id="d18eb-706">*exponential_digits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-706">*exponential_digits*</span></span>|<span data-ttu-id="d18eb-707">0 ~ 9 桁の数字のシーケンス。</span><span class="sxs-lookup"><span data-stu-id="d18eb-707">A sequence of digits from 0 through 9.</span></span> <span data-ttu-id="d18eb-708">*Fractional_digits*数字の 0 が有効では専用です。</span><span class="sxs-lookup"><span data-stu-id="d18eb-708">For *fractional_digits*, only the digit 0 is valid.</span></span>|  
|<span data-ttu-id="d18eb-709">*、*</span><span class="sxs-lookup"><span data-stu-id="d18eb-709">*,*</span></span>|<span data-ttu-id="d18eb-710">カルチャ固有の桁区切り記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-710">A culture-specific thousands separator.</span></span> <span data-ttu-id="d18eb-711">数千で指定されたカルチャの区切り記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-711">The thousands separator of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-712">*.*</span><span class="sxs-lookup"><span data-stu-id="d18eb-712">*.*</span></span>|<span data-ttu-id="d18eb-713">カルチャに固有の小数点記号。</span><span class="sxs-lookup"><span data-stu-id="d18eb-713">A culture-specific decimal point symbol.</span></span> <span data-ttu-id="d18eb-714">指定されたカルチャの小数点記号`provider`に表示できる`s`場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-714">The decimal point symbol of the culture specified by `provider` can appear in `s` if `style` includes the <xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-715">*e*</span><span class="sxs-lookup"><span data-stu-id="d18eb-715">*e*</span></span>|<span data-ttu-id="d18eb-716">"E"または"E"文字は、値は指数表記で表されていることを示します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-716">The 'e' or 'E' character, which indicates that the value is represented in exponential notation.</span></span> <span data-ttu-id="d18eb-717">`s`パラメーターは指数表記の数値を表すことができる場合`style`が含まれています、<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>フラグ。</span><span class="sxs-lookup"><span data-stu-id="d18eb-717">The `s` parameter can represent a number in exponential notation if `style` includes the <xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType> flag.</span></span>|  
|<span data-ttu-id="d18eb-718">*hexdigits*</span><span class="sxs-lookup"><span data-stu-id="d18eb-718">*hexdigits*</span></span>|<span data-ttu-id="d18eb-719">0 ~ f、または f の 0 から 16 進数のシーケンス</span><span class="sxs-lookup"><span data-stu-id="d18eb-719">A sequence of hexadecimal digits from 0 through f, or 0 through F.</span></span>|  
  
> [!NOTE]
> <span data-ttu-id="d18eb-720">終端の NUL (u+0000) 文字`s`の値に関係なく、解析操作では無視されますが、`style`引数。</span><span class="sxs-lookup"><span data-stu-id="d18eb-720">Any terminating NUL (U+0000) characters in `s` are ignored by the parsing operation, regardless of the value of the `style` argument.</span></span>

 <span data-ttu-id="d18eb-721">10 進数字のみを含む文字列 (に対応する、<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>フラグ) を常に正常に解析します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-721">A string with decimal digits only (which corresponds to the <xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType> flag) always parses successfully.</span></span> <span data-ttu-id="d18eb-722">残りのほとんど<xref:System.Globalization.NumberStyles>メンバーがありますが、この入力文字列内に存在する必要はありません要素を制御します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-722">Most of the remaining <xref:System.Globalization.NumberStyles> members control elements that may be but are not required to be present in this input string.</span></span> <span data-ttu-id="d18eb-723">次の表に示す個別<xref:System.Globalization.NumberStyles>メンバー内に存在する要素に影響を与える`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-723">The following table indicates how individual <xref:System.Globalization.NumberStyles> members affect the elements that may be present in `s`.</span></span>  
  
|<span data-ttu-id="d18eb-724">非複合 NumberStyles 値</span><span class="sxs-lookup"><span data-stu-id="d18eb-724">Non-composite NumberStyles values</span></span>|<span data-ttu-id="d18eb-725">数字だけでなく s で許可されている要素</span><span class="sxs-lookup"><span data-stu-id="d18eb-725">Elements permitted in s in addition to digits</span></span>|  
|----------------------------------------|---------------------------------------------------|  
|<xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType>|<span data-ttu-id="d18eb-726">10 進数字のみです。</span><span class="sxs-lookup"><span data-stu-id="d18eb-726">Decimal digits only.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType>|<span data-ttu-id="d18eb-727">10 進数のポイント (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-727">The decimal point ( *.*</span></span> <span data-ttu-id="d18eb-728">) と*fractional_digits*要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-728">) and *fractional_digits* elements.</span></span> <span data-ttu-id="d18eb-729">ただし、 *fractional_digits*のみの 1 つ以上の数字が 0 のメソッドを返します。 で構成されている必要があります`false`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-729">However, *fractional_digits* must consist of only one or more 0 digits or the method returns `false`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType>|<span data-ttu-id="d18eb-730">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-730">The `s` parameter can also use exponential notation.</span></span> <span data-ttu-id="d18eb-731">`s`パラメーターの範囲内の整数を表す必要があります、 <xref:System.Int64> 0 以外の小数部がないデータ型。</span><span class="sxs-lookup"><span data-stu-id="d18eb-731">The `s` parameter must represent an integer within the range of the <xref:System.Int64> data type without a non-zero fractional component.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>|<span data-ttu-id="d18eb-732">*Ws*の先頭にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-732">The *ws* element at the beginning of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>|<span data-ttu-id="d18eb-733">*Ws*の末尾にある要素`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-733">The *ws* element at the end of `s`.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType>|<span data-ttu-id="d18eb-734">符号は、前に配置できます*桁*します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-734">A sign can appear before *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType>|<span data-ttu-id="d18eb-735">符号が後に表示できる*桁*します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-735">A sign can appear after *digits*.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType>|<span data-ttu-id="d18eb-736">*サインオン*形式の数値を囲むかっこ内の要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-736">The *sign* element in the form of parentheses enclosing the numeric value.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType>|<span data-ttu-id="d18eb-737">桁区切り記号 ( *、* ) 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-737">The thousands separator ( *,* ) element.</span></span>|  
|<xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType>|<span data-ttu-id="d18eb-738">*$* 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-738">The *$* element.</span></span>|  
|<xref:System.Globalization.NumberStyles.Currency?displayProperty=nameWithType>|<span data-ttu-id="d18eb-739">すべての要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-739">All elements.</span></span> <span data-ttu-id="d18eb-740">`s`パラメーターは、16 進数または指数表記の数値を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-740">The `s` parameter cannot represent a hexadecimal number or a number in exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType>|<span data-ttu-id="d18eb-741">*Ws*先頭または末尾に要素`s`、*サインオン*の先頭に`s`、および小数点 (*します。*</span><span class="sxs-lookup"><span data-stu-id="d18eb-741">The *ws* element at the beginning or end of `s`, *sign* at the beginning of `s`, and the decimal point ( *.*</span></span> <span data-ttu-id="d18eb-742">) シンボル。</span><span class="sxs-lookup"><span data-stu-id="d18eb-742">) symbol.</span></span> <span data-ttu-id="d18eb-743">`s`パラメーターは、指数表記も使用できます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-743">The `s` parameter can also use exponential notation.</span></span>|  
|<xref:System.Globalization.NumberStyles.Number?displayProperty=nameWithType>|<span data-ttu-id="d18eb-744">*Ws*、*サインオン*、何千もの区切り記号 (*、*)、および小数点 10 進数 (*.*) 要素。</span><span class="sxs-lookup"><span data-stu-id="d18eb-744">The *ws*, *sign*, thousands separator (*,*), and decimal point (*.*) elements.</span></span>|  
|<xref:System.Globalization.NumberStyles.Any?displayProperty=nameWithType>|<span data-ttu-id="d18eb-745">すべてのスタイルを除く`s`16 進数を表すことはできません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-745">All styles, except `s` cannot represent a hexadecimal number.</span></span>|  
  
 <span data-ttu-id="d18eb-746">場合、<xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType>フラグを使用すると、`s`プレフィックスのない 16 進数の値を指定する必要があります。</span><span class="sxs-lookup"><span data-stu-id="d18eb-746">If the <xref:System.Globalization.NumberStyles.AllowHexSpecifier?displayProperty=nameWithType> flag is used, `s` must be a hexadecimal value without a prefix.</span></span> <span data-ttu-id="d18eb-747">たとえば、"C9AF3"が正常に解析しますが、"0xC9AF3"はありません。</span><span class="sxs-lookup"><span data-stu-id="d18eb-747">For example, "C9AF3" parses successfully, but "0xC9AF3" does not.</span></span> <span data-ttu-id="d18eb-748">他のフラグのみに存在することができる`style`は<xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType>と<xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-748">The only other flags that can be present in `style` are <xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType> and <xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType>.</span></span> <span data-ttu-id="d18eb-749">(、<xref:System.Globalization.NumberStyles>列挙には複合スタイルは、 <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>、空白文字の両方のフラグが含まれます)。</span><span class="sxs-lookup"><span data-stu-id="d18eb-749">(The <xref:System.Globalization.NumberStyles> enumeration has a composite style, <xref:System.Globalization.NumberStyles.HexNumber?displayProperty=nameWithType>, that includes both white space flags.)</span></span>  
  
 <span data-ttu-id="d18eb-750">`provider`パラメーターは、<xref:System.IFormatProvider>実装など、<xref:System.Globalization.CultureInfo>オブジェクトまたは<xref:System.Globalization.NumberFormatInfo>オブジェクト、<xref:System.IFormatProvider.GetFormat%2A>メソッドを返します。 を<xref:System.Globalization.NumberFormatInfo>オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="d18eb-750">The `provider` parameter is an <xref:System.IFormatProvider> implementation, such as a <xref:System.Globalization.CultureInfo> object or a <xref:System.Globalization.NumberFormatInfo> object, whose <xref:System.IFormatProvider.GetFormat%2A> method returns a <xref:System.Globalization.NumberFormatInfo> object.</span></span> <span data-ttu-id="d18eb-751"><xref:System.Globalization.NumberFormatInfo>オブジェクトの書式設定に関するカルチャ固有の情報を提供`s`します。</span><span class="sxs-lookup"><span data-stu-id="d18eb-751">The <xref:System.Globalization.NumberFormatInfo> object provides culture-specific information about the format of `s`.</span></span> <span data-ttu-id="d18eb-752">場合`provider`は`null`、<xref:System.Globalization.NumberFormatInfo>オブジェクトの現在のカルチャが使用されます。</span><span class="sxs-lookup"><span data-stu-id="d18eb-752">If `provider` is `null`, the <xref:System.Globalization.NumberFormatInfo> object for the current culture is used.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="d18eb-753">次の例では、<xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29>別の文字列の数がメソッドおよび<xref:System.Globalization.NumberStyles>値。</span><span class="sxs-lookup"><span data-stu-id="d18eb-753">The following example calls the <xref:System.Int64.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Int64%40%29> method with a number of different string and <xref:System.Globalization.NumberStyles> values.</span></span>  
  
 [!code-csharp[System.Int64.TryParse#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.Int64.TryParse/cs/TryParse2.cs#2)]
 [!code-vb[System.Int64.TryParse#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.Int64.TryParse/vb/TryParse2.vb#2)]  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentException">
          <span data-ttu-id="d18eb-754">
            <paramref name="style" /> が <see cref="T:System.Globalization.NumberStyles" /> 値ではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-754">
              <paramref name="style" /> is not a <see cref="T:System.Globalization.NumberStyles" /> value.</span>
          </span>
          <span data-ttu-id="d18eb-755">- または -</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-755">-or-</span>
          </span>
          <span data-ttu-id="d18eb-756">
            <paramref name="style" /> が <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> 値と <see cref="F:System.Globalization.NumberStyles.HexNumber" /> 値の組み合わせではありません。</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-756">
              <paramref name="style" /> is not a combination of <see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /> and <see cref="F:System.Globalization.NumberStyles.HexNumber" /> values.</span>
          </span>
        </exception>
        <altmember cref="M:System.Int64.Parse(System.String)" />
        <altmember cref="M:System.Int64.ToString" />
        <related type="Article" href="~/docs/standard/base-types/parsing-numeric.md">
          <span data-ttu-id="d18eb-757">.NET での数値文字列の解析</span>
          <span class="sxs-lookup">
            <span data-stu-id="d18eb-757">Parsing Numeric Strings in .NET</span>
          </span>
        </related>
      </Docs>
    </Member>
  </Members>
</Type>