<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="Single.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac5a55e5f4bf64067757cfd61da12a6070a0e3d5cb3.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">a55e5f4bf64067757cfd61da12a6070a0e3d5cb3</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Represents a single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> value type represents a single-precision 32-bit number with values ranging from negative 3.402823e38 to positive 3.402823e38, as well as positive or negative zero, <ph id="ph2">&lt;xref:System.Single.PositiveInfinity&gt;</ph>, <ph id="ph3">&lt;xref:System.Single.NegativeInfinity&gt;</ph>, and not a number (<ph id="ph4">&lt;xref:System.Single.NaN&gt;</ph>).</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>値型単精度 32 ビットの数まで値を表します-3.402823e38 から 3.402823 e 38、だけでなく、正または負の値を 0 に<ph id="ph2">&lt;xref:System.Single.PositiveInfinity&gt;</ph>、 <ph id="ph3">&lt;xref:System.Single.NegativeInfinity&gt;</ph>、および非数 (<ph id="ph4">&lt;xref:System.Single.NaN&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>It is intended to represent values that are extremely large (such as distances between planets or galaxies) or extremely small (such as the molecular mass of a substance in kilograms) and that often are imprecise (such as the distance from earth to another solar system).</source>
          <target state="translated">値 (惑星または銀河系間の距離) など、非常に大規模なまたは (キロで物質の分子質量) などの非常に小さいとする多くの場合はありません (別の太陽系 earth からの距離) などの正確な値を表すものではします。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> type complies with the IEC 60559:1989 (IEEE 754) standard for binary floating-point arithmetic.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph> IEC 60559: 1989 (IEEE 754) バイナリ浮動小数点算術演算子の標準に準拠している型。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>This topic consists of the following sections:</source>
          <target state="translated">このトピックは、次のセクションで構成されています。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">[</bpt>Floating-point representation and precision<ept id="p1">](#Precision)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>精度の浮動小数点表現<ept id="p1">](#Precision)</ept></target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">[</bpt>Testing for equality<ept id="p1">](#Equality)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>等価性テスト<ept id="p1">](#Equality)</ept></target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">[</bpt>Floating-point values and exceptions<ept id="p1">](#Exceptions)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>浮動小数点値、および例外<ept id="p1">](#Exceptions)</ept></target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">[</bpt>Type conversion and the Single structure<ept id="p1">](#Conversion)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>型変換と 1 つの構造<ept id="p1">](#Conversion)</ept></target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">[</bpt>Floating-point functionality<ept id="p1">](#Functionality)</ept></source>
          <target state="translated"><bpt id="p1">[</bpt>浮動小数点の機能<ept id="p1">](#Functionality)</ept></target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Single?displayProperty=nameWithType&gt;</ph> provides methods to compare instances of this type, to convert the value of an instance to its string representation, and to convert the string representation of a number to an instance of this type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single?displayProperty=nameWithType&gt;</ph> インスタンスの値をその文字列形式に変換する数値の文字列形式をこの型のインスタンスに変換して、この型のインスタンスを比較するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For information about how format specification codes control the string representation of value types, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>, <bpt id="p2">[</bpt>Standard Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, and <bpt id="p3">[</bpt>Custom Numeric Format Strings<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">書式指定コードが値型の文字列形式を制御する方法については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>、<bpt id="p2">[</bpt>標準の数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>、および<bpt id="p3">[</bpt>カスタム数値書式指定文字列<ept id="p3">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Floating-point representation and precision</source>
          <target state="translated">精度の浮動小数点表現</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> data type stores single-precision floating-point values in a 32-bit binary format, as shown in the following table:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>データ型は、次の表に示すように、32 ビットのバイナリ形式で 1 つの単精度浮動小数点値を格納します。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Part</source>
          <target state="translated">パーツ</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Bits</source>
          <target state="translated">ビット</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Significand or mantissa</source>
          <target state="translated">有効桁または仮数部</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>0-22</source>
          <target state="translated">0-22</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Exponent</source>
          <target state="translated">指数</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>23-30</source>
          <target state="translated">23-30</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Sign (0 = positive, 1 = negative)</source>
          <target state="translated">記号 (0 1、正の数値を = = 負の値)</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>31</source>
          <target state="translated">31</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Just as decimal fractions are unable to precisely represent some fractional values (such as 1/3 or <ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>), binary fractions are unable to represent some fractional values.</source>
          <target state="translated">小数がいくつかの小数部の値を正確に表すことができないと同様 (1/3 などまたは<ph id="ph1">&lt;xref:System.Math.PI?displayProperty=nameWithType&gt;</ph>)、バイナリの小数部がいくつかの小数部の値を表すことができません。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For example, 2/10, which is represented precisely by .2 as a decimal fraction, is represented by .0011111001001100 as a binary fraction, with the pattern "1100" repeating to infinity.</source>
          <target state="translated">たとえば、2、小数として.2 で正確に表される、10 は、無限大パターン「1100」繰り返しでのバイナリの分数として.0011111001001100 で表されます。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In this case, the floating-point value provides an imprecise representation of the number that it represents.</source>
          <target state="translated">この場合、浮動小数点値は、それが表す数の不正確な表現を提供します。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Performing additional mathematical operations on the original floating-point value often increases its lack of precision.</source>
          <target state="translated">多くの場合、元の浮動小数点値で追加の数学演算を実行すると、その有効桁数が不足しているが増加します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For example, if you compare the results of multiplying .3 by 10 and adding .3 to .3 nine times, you will see that addition produces the less precise result, because it involves eight more operations than multiplication.</source>
          <target state="translated">たとえば、.3 で 10 を乗算した結果を比較すると、.3 に.3 を 9 回追加すると、その追加が表示されます結果を生成する精度の低い、乗算よりも多くの 8 つの操作が含まれるためです。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that this disparity is apparent only if you display the two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>, which, if necessary, displays all 9 digits of precision supported by the <ph id="ph2">&lt;xref:System.Single&gt;</ph> type.</source>
          <target state="translated">このような違いは、2 つを表示する場合にのみ確認することに注意してください<ph id="ph1">&lt;xref:System.Single&gt;</ph>"R"を使用して値<bpt id="p1">[</bpt>標準数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>であり、必要に応じて、すべての 9 桁の精度でサポートされているが表示されます、<ph id="ph2">&lt;xref:System.Single&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Because some numbers cannot be represented exactly as fractional binary values, floating-point numbers can only approximate real numbers.</source>
          <target state="translated">いくつかの数字は、バイナリ値の小数部として正確に表すことはできません、ために、浮動小数点数には、おおよその実数のみことができます。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>All floating-point numbers have a limited number of significant digits, which also determines how accurately a floating-point value approximates a real number.</source>
          <target state="translated">すべての浮動小数点数、浮動小数点値が実数を概算するどれだけ正確にも決定する有効桁数の限られています。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> value has up to 7 decimal digits of precision, although a maximum of 9 digits is maintained internally.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Single&gt;</ph>値は最大 7 桁の有効桁数、最大 9 桁が内部的に保持されています。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>This means that some floating-point operations may lack the precision to change a floating-point value.</source>
          <target state="translated">これは、浮動小数点演算の精度浮動小数点値を変更することがありますがないことを意味します。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following example defines a large single-precision floating-point value, and then adds the product of <ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> and one quadrillion to it.</source>
          <target state="translated">次の例は、大規模な単精度浮動小数点値を定義しの製品を追加<ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>と 1,000兆にします。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>However, the product is too small to modify the original floating-point value.</source>
          <target state="translated">ただし、製品は、元の浮動小数点値を変更するのには小さすぎます。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Its least significant digit is thousandths, whereas the most significant digit in the product is 1<bpt id="p1">&lt;sup&gt;</bpt>-312<ept id="p1">&lt;/sup&gt;</ept>.</source>
          <target state="translated">一方、製品の最上位桁は 1、その最下位の桁が 1/10、1/100、1/1000、<bpt id="p1">&lt;sup&gt;</bpt>-312<ept id="p1">&lt;/sup&gt;</ept>です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The limited precision of a floating-point number has several consequences:</source>
          <target state="translated">浮動小数点数の制限された有効桁数には、いくつかのような影響があります。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Two floating-point numbers that appear equal for a particular precision might not compare equal because their least significant digits are different.</source>
          <target state="translated">有効桁数が異なるためされません比較の特定の有効桁数で等しく見える 2 つの浮動小数点数が等しい場合があります。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the following example, a series of numbers are added together, and their total is compared with their expected total.</source>
          <target state="translated">次の例で、一連の数値を加算し、その合計が、予想される合計と比較します。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Although the two values appear to be the same, a call to the <ph id="ph1">`Equals`</ph> method indicates that they are not.</source>
          <target state="translated">2 つの値は同じであるへの呼び出しに見えますが、<ph id="ph1">`Equals`</ph>メソッドであることを示します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If you change the format items in the <ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph> statement from <ph id="ph2">`{0}`</ph> and <ph id="ph3">`{1}`</ph> to <ph id="ph4">`{0:R}`</ph> and <ph id="ph5">`{1:R}`</ph> to display all significant digits of the two <ph id="ph6">&lt;xref:System.Single&gt;</ph> values, it is clear that the two values are unequal because of a loss of precision during the addition operations.</source>
          <target state="translated">書式項目を変更する場合、<ph id="ph1">&lt;xref:System.Console.WriteLine%28System.String%2CSystem.Object%2CSystem.Object%29?displayProperty=nameWithType&gt;</ph>ステートメントから<ph id="ph2">`{0}`</ph>と<ph id="ph3">`{1}`</ph>に<ph id="ph4">`{0:R}`</ph>と<ph id="ph5">`{1:R}`</ph>、2 つのすべての有効桁数を表示する<ph id="ph6">&lt;xref:System.Single&gt;</ph>値、2 つの値が等しくないこと精度が失われるのため、追加操作中には明らかです。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In this case, the issue can be resolved by calling the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph> method to round the <ph id="ph2">&lt;xref:System.Single&gt;</ph> values to the desired precision before performing the comparison.</source>
          <target state="translated">呼び出してこの場合、この問題を解決できます、<ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%29?displayProperty=nameWithType&gt;</ph>を丸めるにメソッド、<ph id="ph2">&lt;xref:System.Single&gt;</ph>比較を実行する前に必要な有効桁数の値。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A mathematical or comparison operation that uses a floating-point number might not yield the same result if a decimal number is used, because the binary floating-point number might not equal the decimal number.</source>
          <target state="translated">浮動小数点数を使用する数値演算または比較演算可能性がありますいない場合、結果同じ 10 進数を使用すると、バイナリ浮動小数点数が 10 進数と等しくないためです。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A previous example illustrated this by displaying the result of multiplying .3 by 10 and adding .3 to .3 nine times.</source>
          <target state="translated">前の例では、.3 で 10 を乗算し、.3 に.3 9 回を追加することの結果を表示することによってこれを示します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>When accuracy in numeric operations with fractional values is important, use the <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> type instead of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> type.</source>
          <target state="translated">小数部の値を持つ数値演算で精度が重要を使用して、<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>型の代わりに、<ph id="ph2">&lt;xref:System.Single&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>When accuracy in numeric operations with integral values beyond the range of the <ph id="ph1">&lt;xref:System.Int64&gt;</ph> or <ph id="ph2">&lt;xref:System.UInt64&gt;</ph> types is important, use the <ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph> type.</source>
          <target state="translated">場合の範囲外の整数の値を持つ数値演算の精度、<ph id="ph1">&lt;xref:System.Int64&gt;</ph>または<ph id="ph2">&lt;xref:System.UInt64&gt;</ph>使用の種類は重要では、<ph id="ph3">&lt;xref:System.Numerics.BigInteger&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A value might not round-trip if a floating-point number is involved.</source>
          <target state="translated">値には、ラウンドト リップしません浮動小数点数が含まれている場合の可能性があります。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A value is said to round-trip if an operation converts an original floating-point number to another form, an inverse operation transforms the converted form back to a floating-point number, and the final floating-point number is equal to the original floating-point number.</source>
          <target state="translated">操作は、元の浮動小数点数を別の形式に変換します、逆の操作が、浮動小数点数に変換後のフォームを変換し、最終的な浮動小数点数が元の浮動小数点数に等しい場合、値はラウンドト リップをいいます。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The round trip might fail because one or more least significant digits are lost or changed in a conversion.</source>
          <target state="translated">ラウンド トリップは、1 つまたは複数の最下位の桁が失われたまたは変換で変更されるために失敗する可能性があります。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the following example, three <ph id="ph1">&lt;xref:System.Single&gt;</ph> values are converted to strings and saved in a file.</source>
          <target state="translated">次の例では、次の 3 つ<ph id="ph1">&lt;xref:System.Single&gt;</ph>値が文字列に変換され、ファイルに保存します。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>As the output shows, although the values appear to be identical, the restored values are not equal to the original values.</source>
          <target state="translated">出力が示すように同じ値が表示されますは、復元された値が元の値に等しくありません。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In this case, the values can be successfully round-tripped by using the "G9" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> to preserve the full precision of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values, as the following example shows.</source>
          <target state="translated">この場合、値を指定できますが正常に往復"G9"を使用して、<bpt id="p1">[</bpt>標準数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>の完全な精度を保持するために<ph id="ph1">&lt;xref:System.Single&gt;</ph>値は、次の例のようにします。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Single&gt;</ph> values have less precision than <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph> 値があるよりも精度が低い<ph id="ph2">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A <ph id="ph1">&lt;xref:System.Single&gt;</ph> value that is converted to a seemingly equivalent <ph id="ph2">&lt;xref:System.Double&gt;</ph> often does not equal the <ph id="ph3">&lt;xref:System.Double&gt;</ph> value because of differences in precision.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Single&gt;</ph>見かけ上と同じに変換される値<ph id="ph2">&lt;xref:System.Double&gt;</ph>多くの場合と等しくない、<ph id="ph3">&lt;xref:System.Double&gt;</ph>有効桁数の違いのための値。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the following example, the result of identical division operations is assigned to a <ph id="ph1">&lt;xref:System.Double&gt;</ph> value and a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">次の例では、同一の除算演算の結果が割り当てられている、<ph id="ph1">&lt;xref:System.Double&gt;</ph>値と<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>After the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is cast to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>, a comparison of the two values shows that they are unequal.</source>
          <target state="translated">後に、<ph id="ph1">&lt;xref:System.Single&gt;</ph>に値をキャスト、 <ph id="ph2">&lt;xref:System.Double&gt;</ph>、2 つの値の比較は、両者が等しくないことを示しています。</target>       </trans-unit>
        <trans-unit id="156" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>To avoid this problem, either use the <ph id="ph1">&lt;xref:System.Double&gt;</ph> data type in place of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> data type, or use the <ph id="ph3">&lt;xref:System.Math.Round%2A&gt;</ph> method so that both values have the same precision.</source>
          <target state="translated">この問題を避けるためには、使用するか、<ph id="ph1">&lt;xref:System.Double&gt;</ph>データの型の代わりに、<ph id="ph2">&lt;xref:System.Single&gt;</ph>データ型、またはを使用して、<ph id="ph3">&lt;xref:System.Math.Round%2A&gt;</ph>メソッド両方の値が同一の有効桁数を含めるようにします。</target>       </trans-unit>
        <trans-unit id="157" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Testing for equality</source>
          <target state="translated">等価性テスト</target>       </trans-unit>
        <trans-unit id="158" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>To be considered equal, two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values must represent identical values.</source>
          <target state="translated">等しいと見なされるに 2 つ<ph id="ph1">&lt;xref:System.Single&gt;</ph>値が同一の値を表す必要があります。</target>       </trans-unit>
        <trans-unit id="159" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>However, because of differences in precision between values, or because of a loss of precision by one or both values, floating-point values that are expected to be identical often turn out to be unequal due to differences in their least significant digits.</source>
          <target state="translated">ただし、有効桁数の値の間の違いのため、または 1 つまたは両方の値によって精度が失われるのためには、多くの場合は同じである必要な浮動小数点値に有効桁数の違いにより等しくないとします。</target>       </trans-unit>
        <trans-unit id="160" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>As a result, calls to the <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method to determine whether two values are equal, or calls to the <ph id="ph2">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method to determine the relationship between two <ph id="ph3">&lt;xref:System.Single&gt;</ph> values, often yield unexpected results.</source>
          <target state="translated">その結果、呼び出し、<ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>呼び出しまたは 2 つの値が等しいかどうかを決定するメソッド、 <ph id="ph2">&lt;xref:System.Single.CompareTo%2A&gt;</ph> 2 つの間の関係を決定するメソッド<ph id="ph3">&lt;xref:System.Single&gt;</ph>値、多くの場合、予期しない結果を生成します。</target>       </trans-unit>
        <trans-unit id="161" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>This is evident in the following example, where two apparently equal <ph id="ph1">&lt;xref:System.Single&gt;</ph> values turn out to be unequal, because the first value has 7 digits of precision, whereas the second value has 9.</source>
          <target state="translated">これは、次の例で示した 2 つのことが明らかと等しくという<ph id="ph1">&lt;xref:System.Single&gt;</ph>値が等しくないと、最初の値は、2 番目の値は 9 に 7 桁の有効桁数を持つため有効にします。</target>       </trans-unit>
        <trans-unit id="162" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Calculated values that follow different code paths and that are manipulated in different ways often prove to be unequal.</source>
          <target state="translated">異なるコード パスをたどることと、多くの場合、さまざまな方法で操作する計算値を証明と等しくなります。</target>       </trans-unit>
        <trans-unit id="163" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the following example, one <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is squared, and then the square root is calculated to restore the original value.</source>
          <target state="translated">次の例では、1 つ<ph id="ph1">&lt;xref:System.Single&gt;</ph>値は四角形、および元の値を復元する平方根を計算し、します。</target>       </trans-unit>
        <trans-unit id="164" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>A second <ph id="ph1">&lt;xref:System.Single&gt;</ph> is multiplied by 3.51 and squared before the square root of the result is divided by 3.51 to restore the original value.</source>
          <target state="translated">1 秒あたり<ph id="ph1">&lt;xref:System.Single&gt;</ph>は 3.51 が乗算され、前に、結果の平方根が元の値を復元する 3.51 で割った値を二乗します。</target>       </trans-unit>
        <trans-unit id="165" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Although the two values appear to be identical, a call to the <ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph> method indicates that they are not equal.</source>
          <target state="translated">2 つの値が同一に見えますへの呼び出し、<ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph>メソッドでは、両者が等しくないことを示します。</target>       </trans-unit>
        <trans-unit id="166" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Using the "G9" standard format string to return a result string that displays all the significant digits of each <ph id="ph1">&lt;xref:System.Single&gt;</ph> value shows that the second value is .0000000000001 less than the first.</source>
          <target state="translated">"G9"標準書式指定文字列を使用して、それぞれのすべての有効桁数を表示する結果文字列を取得する<ph id="ph1">&lt;xref:System.Single&gt;</ph>値では、2 番目の値が.0000000000001 であるかを示しています。 最初よりも小さいです。</target>       </trans-unit>
        <trans-unit id="167" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In cases where a loss of precision is likely to affect the result of a comparison, you can use the following techniques instead of calling the <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method:</source>
          <target state="translated">精度の損失が比較の結果に影響する可能性がある場合、呼び出す代わりに、次の手法を使用することができます、<ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.CompareTo%2A&gt;</ph>メソッド。</target>       </trans-unit>
        <trans-unit id="168" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Call the <ph id="ph1">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph> method to ensure that both values have the same precision.</source>
          <target state="translated">呼び出す、<ph id="ph1">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph>メソッドを両方の値が同一の有効桁数を含めることを確認してください。</target>       </trans-unit>
        <trans-unit id="169" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following example modifies a previous example to use this approach so that two fractional values are equivalent.</source>
          <target state="translated">次の例では、このアプローチを使用して、2 つの小数部の値が等しいようにする前の例を変更します。</target>       </trans-unit>
        <trans-unit id="170" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that the problem of precision still applies to rounding of midpoint values.</source>
          <target state="translated">精度の問題が引き続き中間値の丸め処理に適用されることに注意してください。</target>       </trans-unit>
        <trans-unit id="171" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For more information, see the <ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">詳細については、<ph id="ph1">&lt;xref:System.Math.Round%28System.Double%2CSystem.Int32%2CSystem.MidpointRounding%29?displayProperty=nameWithType&gt;</ph> メソッドを参照してください。</target>       </trans-unit>
        <trans-unit id="172" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Test for approximate equality instead of equality.</source>
          <target state="translated">等値ではなく概数に等しいかどうかをテストします。</target>       </trans-unit>
        <trans-unit id="173" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>This technique requires that you define either an absolute amount by which the two values can differ but still be equal, or that you define a relative amount by which the smaller value can diverge from the larger value.</source>
          <target state="translated">この手法は、絶対パスを定義することを必要とする 2 つの値は異なるが、引き続きの量に等しいか、または、小さい方の値が大きい方の値から分岐できます相対的な時間を定義します。</target>       </trans-unit>
        <trans-unit id="174" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> is sometimes used as an absolute measure of the distance between two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values when testing for equality.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> 2 つの間の距離の絶対的な測定値としては使用<ph id="ph2">&lt;xref:System.Single&gt;</ph>等しいかどうかをテストするときの値します。</target>       </trans-unit>
        <trans-unit id="175" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>However, <ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> measures the smallest possible value that can be added to, or subtracted from, a <ph id="ph2">&lt;xref:System.Single&gt;</ph> whose value is zero.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>追加、またはから減算できる最小有効値を測定、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値が 0 です。</target>       </trans-unit>
        <trans-unit id="176" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For most positive and negative <ph id="ph1">&lt;xref:System.Single&gt;</ph> values, the value of <ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> is too small to be detected.</source>
          <target state="translated">ほとんどの正の数および負<ph id="ph1">&lt;xref:System.Single&gt;</ph>値、値の<ph id="ph2">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>が小さすぎてを検出します。</target>       </trans-unit>
        <trans-unit id="177" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Therefore, except for values that are zero, we do not recommend its use in tests for equality.</source>
          <target state="translated">したがって、ゼロ値、お勧めしませんの等価性テストで使用します。</target>       </trans-unit>
        <trans-unit id="178" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following example uses the latter approach to define an <ph id="ph1">`IsApproximatelyEqual`</ph> method that tests the relative difference between two values.</source>
          <target state="translated">次の例では、後者のアプローチを使用して、定義、<ph id="ph1">`IsApproximatelyEqual`</ph>相対的な 2 つの値の差をテストするメソッド。</target>       </trans-unit>
        <trans-unit id="179" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>It also contrasts the result of calls to the <ph id="ph1">`IsApproximatelyEqual`</ph> method and the <ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph> method.</source>
          <target state="translated">呼び出しの結果を対比させても、<ph id="ph1">`IsApproximatelyEqual`</ph>メソッドおよび<ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="180" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Floating-point values and exceptions</source>
          <target state="translated">浮動小数点値、および例外</target>       </trans-unit>
        <trans-unit id="181" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Operations with floating-point values do not throw exceptions, unlike operations with integral types, which throw exceptions in cases of illegal operations such as division by zero or overflow.</source>
          <target state="translated">浮動小数点値を持つ操作は、整数型の 0 やオーバーフローによって除算などの無効な操作の場合に例外をスローする操作とは異なり、例外をスローしません。</target>       </trans-unit>
        <trans-unit id="182" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Instead, in these situations, the result of a floating-point operation is zero, positive infinity, negative infinity, or not a number (NaN):</source>
          <target state="translated">代わりに、このような場合は、浮動小数点演算の結果は 0、正の無限大、負の無限大、または非数 (NaN)。</target>       </trans-unit>
        <trans-unit id="183" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the result of a floating-point operation is too small for the destination format, the result is zero.</source>
          <target state="translated">浮動小数点演算の結果が小さすぎる場合、変換先形式の結果は 0 です。</target>       </trans-unit>
        <trans-unit id="184" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>This can occur when two very small floating-point numbers are multiplied, as the following example shows.</source>
          <target state="translated">これは、次の例のように、2 つの非常に小さい浮動小数点数値を乗算するときに発生します。</target>       </trans-unit>
        <trans-unit id="185" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the magnitude of the result of a floating-point operation exceeds the range of the destination format, the result of the operation is <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>, as appropriate for the sign of the result.</source>
          <target state="translated">浮動小数点演算の結果の大きさが、変換先形式の範囲を超えている場合、操作の結果は<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>、必要に応じて、結果の符号にします。</target>       </trans-unit>
        <trans-unit id="186" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The result of an operation that overflows <ph id="ph1">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Single.PositiveInfinity&gt;</ph>, and the result of an operation that overflows <ph id="ph3">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph4">&lt;xref:System.Single.NegativeInfinity&gt;</ph>, as the following example shows.</source>
          <target state="translated">オーバーフローが発生する操作の結果<ph id="ph1">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>は<ph id="ph2">&lt;xref:System.Single.PositiveInfinity&gt;</ph>、およびオーバーフローが発生する操作の結果<ph id="ph3">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>は<ph id="ph4">&lt;xref:System.Single.NegativeInfinity&gt;</ph>次の例を示します。</target>       </trans-unit>
        <trans-unit id="187" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> also results from a division by zero with a positive dividend, and <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph> results from a division by zero with a negative dividend.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> 正の被除数と 0 による除算の結果もと<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>被除数を負の値に 0 による除算の結果します。</target>       </trans-unit>
        <trans-unit id="188" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If a floating-point operation is invalid, the result of the operation is <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>.</source>
          <target state="translated">浮動小数点演算が有効でない場合、操作の結果は<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="189" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For example, <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> results from the following operations:</source>
          <target state="translated">たとえば、<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>次の操作の結果します。</target>       </trans-unit>
        <trans-unit id="190" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Division by zero with a dividend of zero.</source>
          <target state="translated">0 による除算、被除数と 0 です。</target>       </trans-unit>
        <trans-unit id="191" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that other cases of division by zero result in either <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>.</source>
          <target state="translated">いずれかで結果がゼロで除算の他のケースに注意してください<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="192" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Any floating-point operation with invalid input.</source>
          <target state="translated">無効な入力を持つ浮動小数点演算には。</target>       </trans-unit>
        <trans-unit id="193" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For example, attempting to find the square root of a negative value returns <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>.</source>
          <target state="translated">たとえば、負の値の平方根を返しますを検索しよう<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="194" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Any operation with an argument whose value is <ph id="ph1">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">値がある引数を持つすべての操作<ph id="ph1">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="195" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Type conversions and the Single structure</source>
          <target state="translated">型変換と 1 つの構造</target>       </trans-unit>
        <trans-unit id="196" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> structure does not define any explicit or implicit conversion operators; instead, conversions are implemented by the compiler.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>構造体は、明示的または暗黙的な変換演算子が定義されていません; 代わりに、変換がコンパイラによって実装されます。</target>       </trans-unit>
        <trans-unit id="197" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following table lists the possible conversions of a value of the other primitive numeric types to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value, It also indicates whether the conversion is widening or narrowing and whether the resulting <ph id="ph2">&lt;xref:System.Single&gt;</ph> may have less precision than the original value.</source>
          <target state="translated">次の表は、他のプリミティブ数値型に値の発生しうる変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値も記載されているかどうかと、変換を拡大または縮小するかどうか、結果として得られる<ph id="ph2">&lt;xref:System.Single&gt;</ph>元の値よりも精度が低い場合があります。</target>       </trans-unit>
        <trans-unit id="198" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Conversion from</source>
          <target state="translated">変換 (</target>       </trans-unit>
        <trans-unit id="199" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening/narrowing</source>
          <target state="translated">拡大/縮小</target>       </trans-unit>
        <trans-unit id="200" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Possible loss of precision</source>
          <target state="translated">有効桁数が失われる可能性</target>       </trans-unit>
        <trans-unit id="201" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="202" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>No</source>
          <target state="translated">×</target>       </trans-unit>
        <trans-unit id="203" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="204" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that C# requires a cast operator.</source>
          <target state="translated">C# を必要とするキャスト演算子に注意してください。</target>       </trans-unit>
        <trans-unit id="205" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="206" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Decimal&gt;</ph> supports 29 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Decimal&gt;</ph> 29 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="207" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Narrowing; out-of-range values are converted to <ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">縮小変換です。範囲外の値に変換する<ph id="ph1">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="208" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="209" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Double&gt;</ph> supports 17 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Double&gt;</ph> 17 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="210" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="211" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>No</source>
          <target state="translated">×</target>       </trans-unit>
        <trans-unit id="212" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="213" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="214" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph> supports 10 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> 10 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="215" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="216" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="217" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Int64&gt;</ph> supports 19 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64&gt;</ph> 19 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="218" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="219" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>No</source>
          <target state="translated">×</target>       </trans-unit>
        <trans-unit id="220" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="221" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>No</source>
          <target state="translated">×</target>       </trans-unit>
        <trans-unit id="222" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="223" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="224" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.UInt32&gt;</ph> supports 10 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.UInt32&gt;</ph> 10 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="225" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Widening</source>
          <target state="translated">Widening</target>       </trans-unit>
        <trans-unit id="226" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Yes.</source>
          <target state="translated">はい。</target>       </trans-unit>
        <trans-unit id="227" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Int64&gt;</ph> supports 20 decimal digits of precision; <ph id="ph2">&lt;xref:System.Single&gt;</ph> supports 9.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64&gt;</ph> 20 桁の精度をサポートしています<ph id="ph2">&lt;xref:System.Single&gt;</ph> 9 をサポートしています。</target>       </trans-unit>
        <trans-unit id="228" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following example converts the minimum or maximum value of other primitive numeric types to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">次の例は、他のプリミティブ数値型に最小値または最大値を変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="229" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In addition, the <ph id="ph1">&lt;xref:System.Double&gt;</ph> values <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph> covert to <ph id="ph5">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph6">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph7">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, respectively.</source>
          <target state="translated">さらに、<ph id="ph1">&lt;xref:System.Double&gt;</ph>値<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>、および<ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>を変換<ph id="ph5">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>、 <ph id="ph6">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>、および<ph id="ph7">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>、それぞれします。</target>       </trans-unit>
        <trans-unit id="230" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that the conversion of the value of some numeric types to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value can involve a loss of precision.</source>
          <target state="translated">注意するいくつかの数値型の値の変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値は、有効桁数の損失を伴うことができます。</target>       </trans-unit>
        <trans-unit id="231" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>As the example illustrates, a loss of precision is possible when converting <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, <ph id="ph2">&lt;xref:System.Double&gt;</ph>, <ph id="ph3">&lt;xref:System.Int32&gt;</ph>, <ph id="ph4">&lt;xref:System.Int64&gt;</ph>, <ph id="ph5">&lt;xref:System.UInt32&gt;</ph>, and <ph id="ph6">&lt;xref:System.UInt64&gt;</ph> values to <ph id="ph7">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">例を示しています、精度の損失を実行できるように変換するときに<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>、 <ph id="ph2">&lt;xref:System.Double&gt;</ph>、 <ph id="ph3">&lt;xref:System.Int32&gt;</ph>、 <ph id="ph4">&lt;xref:System.Int64&gt;</ph>、 <ph id="ph5">&lt;xref:System.UInt32&gt;</ph>、および<ph id="ph6">&lt;xref:System.UInt64&gt;</ph>値<ph id="ph7">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="232" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> is a widening conversion.</source>
          <target state="translated">変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を<ph id="ph2">&lt;xref:System.Double&gt;</ph>拡大変換されます。</target>       </trans-unit>
        <trans-unit id="233" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The conversion may result in a loss of precision if the <ph id="ph1">&lt;xref:System.Double&gt;</ph> type does not have a precise representation for the <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">変換があります精度が失われる場合、<ph id="ph1">&lt;xref:System.Double&gt;</ph>型の正確な表現を持たない、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="234" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The conversion of a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to a value of any primitive numeric data type other than a <ph id="ph2">&lt;xref:System.Double&gt;</ph> is a narrowing conversion and requires a cast operator (in C#) or a conversion method (in Visual Basic).</source>
          <target state="translated">変換、<ph id="ph1">&lt;xref:System.Single&gt;</ph>以外の任意のプリミティブ数値データ型の値に値を<ph id="ph2">&lt;xref:System.Double&gt;</ph>縮小変換は、キャスト演算子 (C# の場合) または (Visual Basic) の変換メソッドが必要です。</target>       </trans-unit>
        <trans-unit id="235" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Values that are outside the range of the target data type, which are defined by the target type's <ph id="ph1">`MinValue`</ph> and <ph id="ph2">`MaxValue`</ph> properties, behave as shown in the following table.</source>
          <target state="translated">対象の種類が定義されている対象のデータ型の範囲外にある値<ph id="ph1">`MinValue`</ph>と<ph id="ph2">`MaxValue`</ph>プロパティは、次の表に示すようにどおりに動作します。</target>       </trans-unit>
        <trans-unit id="236" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Target type</source>
          <target state="translated">変換後の型</target>       </trans-unit>
        <trans-unit id="237" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Result</source>
          <target state="translated">結果</target>       </trans-unit>
        <trans-unit id="238" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Any integral type</source>
          <target state="translated">任意の整数型</target>       </trans-unit>
        <trans-unit id="239" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception if the conversion occurs in a checked context.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> Checked コンテキストでは、変換が発生した場合に例外です。</target>       </trans-unit>
        <trans-unit id="240" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the conversion occurs in an unchecked context (the default in C#), the conversion operation succeeds but the value overflows.</source>
          <target state="translated">Unchecked コンテキスト (c# では既定値) に変換する場合は、変換操作が成功しますが、値がオーバーフローです。</target>       </trans-unit>
        <trans-unit id="241" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>An <ph id="ph1">&lt;xref:System.OverflowException&gt;</ph> exception,</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.OverflowException&gt;</ph>例外</target>       </trans-unit>
        <trans-unit id="242" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In addition, <ph id="ph1">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph> throw an <ph id="ph4">&lt;xref:System.OverflowException&gt;</ph> for conversions to integers in a checked context, but these values overflow when converted to integers in an unchecked context.</source>
          <target state="translated">さらに、 <ph id="ph1">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>、および<ph id="ph3">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>スロー、<ph id="ph4">&lt;xref:System.OverflowException&gt;</ph>は checked コンテキストですがこれらの値のオーバーフロー unchecked コンテキストで整数に変換されるので整数に変換します。</target>       </trans-unit>
        <trans-unit id="243" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph>, they always throw an <ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>.</source>
          <target state="translated">変換<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>、常にスロー、<ph id="ph2">&lt;xref:System.OverflowException&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="244" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Double&gt;</ph>, they convert to <ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>, and <ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>, respectively.</source>
          <target state="translated">変換<ph id="ph1">&lt;xref:System.Double&gt;</ph>には変換<ph id="ph2">&lt;xref:System.Double.NaN?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Double.PositiveInfinity?displayProperty=nameWithType&gt;</ph>、および<ph id="ph4">&lt;xref:System.Double.NegativeInfinity?displayProperty=nameWithType&gt;</ph>、それぞれします。</target>       </trans-unit>
        <trans-unit id="245" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Note that a loss of precision may result from converting a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to another numeric type.</source>
          <target state="translated">注への変換から発生する可能性があります精度の損失、<ph id="ph1">&lt;xref:System.Single&gt;</ph>を別の数値型の値。</target>       </trans-unit>
        <trans-unit id="246" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the case of converting non-integral <ph id="ph1">&lt;xref:System.Single&gt;</ph> values, as the output from the example shows, the fractional component is lost when the <ph id="ph2">&lt;xref:System.Single&gt;</ph> value is either rounded (as in Visual Basic) or truncated (as in C#).</source>
          <target state="translated">整数以外の変換の場合<ph id="ph1">&lt;xref:System.Single&gt;</ph>値、例からの出力に示す、小数部が失われます、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値が (Visual Basic の場合) のように丸められますか (のように C# の場合) に切り捨てられます。</target>       </trans-unit>
        <trans-unit id="247" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For conversions to <ph id="ph1">&lt;xref:System.Decimal&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph> values, the <ph id="ph3">&lt;xref:System.Single&gt;</ph> value may not have a precise representation in the target data type.</source>
          <target state="translated">変換<ph id="ph1">&lt;xref:System.Decimal&gt;</ph>と<ph id="ph2">&lt;xref:System.Double&gt;</ph>、値、<ph id="ph3">&lt;xref:System.Single&gt;</ph>値では、対象のデータ型では、正確に表現はありません。</target>       </trans-unit>
        <trans-unit id="248" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following example converts a number of <ph id="ph1">&lt;xref:System.Single&gt;</ph> values to several other numeric types.</source>
          <target state="translated">次の例の数の変換<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を他のいくつかの数値型にします。</target>       </trans-unit>
        <trans-unit id="249" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The conversions occur in a checked context in Visual Basic (the default) and in C# (because of the <bpt id="p1">[</bpt>checked<ept id="p1">](~/docs/csharp/language-reference/keywords/checked.md)</ept> keyword).</source>
          <target state="translated">Visual Basic (既定) と C# の場合は checked コンテキストで発生する、変換 (のため、<bpt id="p1">[</bpt>チェック<ept id="p1">](~/docs/csharp/language-reference/keywords/checked.md)</ept>キーワード) です。</target>       </trans-unit>
        <trans-unit id="250" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The output from the example shows the result for conversions in both a checked an unchecked context.</source>
          <target state="translated">例の出力両方チェック変換の結果を示しています unchecked コンテキスト。</target>       </trans-unit>
        <trans-unit id="251" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can perform conversions in an unchecked context in Visual Basic by compiling with the <ph id="ph1">`/removeintchecks+`</ph> compiler switch and in C# by commenting out the <ph id="ph2">`checked`</ph> statement.</source>
          <target state="translated">コンパイルすると Visual Basic で unchecked コンテキストでの変換を行うことができます、<ph id="ph1">`/removeintchecks+`</ph>コンパイラ スイッチと c# コメント アウトすることによって、<ph id="ph2">`checked`</ph>ステートメントです。</target>       </trans-unit>
        <trans-unit id="252" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For more information on the conversion of numeric types, see <bpt id="p1">[</bpt>Type Conversion in the .NET Framework<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept> and <bpt id="p2">[</bpt>Type Conversion Tables<ept id="p2">](~/docs/standard/base-types/conversion-tables.md)</ept>.</source>
          <target state="translated">数値型の変換の詳細については、次を参照してください。 <bpt id="p1">[</bpt>.NET Framework における型変換<ept id="p1">](~/docs/standard/base-types/type-conversion.md)</ept>と<bpt id="p2">[</bpt>型変換の表<ept id="p2">](~/docs/standard/base-types/conversion-tables.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="253" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Floating-point functionality</source>
          <target state="translated">浮動小数点の機能</target>       </trans-unit>
        <trans-unit id="254" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> structure and related types provide methods to perform the following categories of operations:</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>構造および関連する型は、次のカテゴリの操作を実行するメソッドを提供します。</target>       </trans-unit>
        <trans-unit id="255" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Comparison of values<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>値の比較<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="256" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can call the <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method to determine whether two <ph id="ph2">&lt;xref:System.Single&gt;</ph> values are equal, or the <ph id="ph3">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method to determine the relationship between two values.</source>
          <target state="translated">呼び出すことができます、<ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>メソッドを 2 つあるかどうかを判断<ph id="ph2">&lt;xref:System.Single&gt;</ph>値が等しいか、または<ph id="ph3">&lt;xref:System.Single.CompareTo%2A&gt;</ph>メソッドを 2 つの値の間の関係を決定します。</target>       </trans-unit>
        <trans-unit id="257" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> structure also supports a complete set of comparison operators.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>構造体には、比較演算子の完全なセットもサポートしています。</target>       </trans-unit>
        <trans-unit id="258" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For example, you can test for equality or inequality, or determine whether one value is greater than or equal to another value.</source>
          <target state="translated">たとえば、等しいかどうかをテストまたは 1 つの値が別の値以上かどうかを判断できます。</target>       </trans-unit>
        <trans-unit id="259" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If one of the operands is a <ph id="ph1">&lt;xref:System.Double&gt;</ph>, the <ph id="ph2">&lt;xref:System.Single&gt;</ph> value is converted to a <ph id="ph3">&lt;xref:System.Double&gt;</ph> before performing the comparison.</source>
          <target state="translated">オペランドの 1 つの場合、 <ph id="ph1">&lt;xref:System.Double&gt;</ph>、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値を変換する、<ph id="ph3">&lt;xref:System.Double&gt;</ph>比較を実行する前にします。</target>       </trans-unit>
        <trans-unit id="260" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If one of the operands is an integral type, it is converted to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> before performing the comparison.</source>
          <target state="translated">一方のオペランドが整数型の場合に変換されます、<ph id="ph1">&lt;xref:System.Single&gt;</ph>比較を実行する前にします。</target>       </trans-unit>
        <trans-unit id="261" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Although these are widening conversions, they may involve a loss of precision.</source>
          <target state="translated">これらは、拡大変換が有効桁数の損失が含まれます。</target>       </trans-unit>
        <trans-unit id="262" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Because of differences in precision, two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values that you expect to be equal may turn out to be unequal, which affects the result of the comparison.</source>
          <target state="translated">有効桁数が異なるのため 2 つ<ph id="ph1">&lt;xref:System.Single&gt;</ph>と等しくなるはずの値にすることがすると、比較の結果に影響します。</target>       </trans-unit>
        <trans-unit id="263" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>See the <bpt id="p1">[</bpt>Testing for equality<ept id="p1">](#Equality)</ept> section for more information about comparing two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">参照してください、<bpt id="p1">[</bpt>等価性テスト<ept id="p1">](#Equality)</ept>の詳細については、比較する 2 つのセクション<ph id="ph1">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="264" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can also call the <ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Single.IsInfinity%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph> methods to test for these special values.</source>
          <target state="translated">呼び出すことも、 <ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Single.IsInfinity%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph>これらの特殊な値をテストするメソッド。</target>       </trans-unit>
        <trans-unit id="265" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Mathematical operations<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>数値演算<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="266" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Common arithmetic operations such as addition, subtraction, multiplication, and division are implemented by language compilers and Common Intermediate Language (CIL) instructions rather than by <ph id="ph1">&lt;xref:System.Single&gt;</ph> methods.</source>
          <target state="translated">加算、減算、乗算、および除算などの一般的な算術演算はではなく言語コンパイラと共通中間言語 (CIL) の手順で実装されて<ph id="ph1">&lt;xref:System.Single&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="267" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the other operand in a mathematical operation is a <ph id="ph1">&lt;xref:System.Double&gt;</ph>, the <ph id="ph2">&lt;xref:System.Single&gt;</ph> is converted to a <ph id="ph3">&lt;xref:System.Double&gt;</ph> before performing the operation, and the result of the operation is also a <ph id="ph4">&lt;xref:System.Double&gt;</ph> value.</source>
          <target state="translated">数学的演算のもう一方のオペランドがある場合、 <ph id="ph1">&lt;xref:System.Double&gt;</ph>、<ph id="ph2">&lt;xref:System.Single&gt;</ph>に変換されます、<ph id="ph3">&lt;xref:System.Double&gt;</ph>もが、操作と操作の結果を実行する前に、<ph id="ph4">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="268" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the other operand is an integral type, it is converted to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> before performing the operation, and the result of the operation is also a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">もう一方のオペランドは整数型に変換されます、<ph id="ph1">&lt;xref:System.Single&gt;</ph>もが、操作と操作の結果を実行する前に、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="269" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can perform other mathematical operations by calling <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) methods in the <ph id="ph3">&lt;xref:System.Math?displayProperty=nameWithType&gt;</ph> class.</source>
          <target state="translated">他の算術演算を実行するには、呼び出す<ph id="ph1">`static`</ph>(<ph id="ph2">`Shared`</ph> Visual Basic で) 内のメソッド、<ph id="ph3">&lt;xref:System.Math?displayProperty=nameWithType&gt;</ph>クラスです。</target>       </trans-unit>
        <trans-unit id="270" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>These include additional methods commonly used for arithmetic (such as <ph id="ph1">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>), geometry (such as <ph id="ph4">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph5">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph>), and calculus (such as <ph id="ph6">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>).</source>
          <target state="translated">演算に一般的に使用される追加のメソッドが含まれます (など<ph id="ph1">&lt;xref:System.Math.Abs%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Math.Sign%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph3">&lt;xref:System.Math.Sqrt%2A?displayProperty=nameWithType&gt;</ph>)、geometry (など<ph id="ph4">&lt;xref:System.Math.Cos%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph5">&lt;xref:System.Math.Sin%2A?displayProperty=nameWithType&gt;</ph>)、および微積分 (など<ph id="ph6">&lt;xref:System.Math.Log%2A?displayProperty=nameWithType&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="271" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In all cases, the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is converted to a <ph id="ph2">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">すべての場合、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を変換する、<ph id="ph2">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="272" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can also manipulate the individual bits in a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">内の個々 のビットを操作することも、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="273" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType&gt;</ph> method returns its bit pattern in a byte array.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.BitConverter.GetBytes%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドは、バイト配列で、ビット パターンを返します。</target>       </trans-unit>
        <trans-unit id="274" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>By passing that byte array to the <ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> method, you can also preserve the <ph id="ph2">&lt;xref:System.Single&gt;</ph> value's bit pattern in a 32-bit integer.</source>
          <target state="translated">そのバイト配列を渡すことによって、<ph id="ph1">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph>メソッドも保持できます、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値ビット パターンを 32 ビット整数。</target>       </trans-unit>
        <trans-unit id="275" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Rounding<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>丸め処理を行う<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="276" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Rounding is often used as a technique for reducing the impact of differences between values caused by problems of floating-point representation and precision.</source>
          <target state="translated">丸め処理はよく使用手法として浮動小数点表現と精度の問題によって発生する値の間の相違点の影響を軽減します。</target>       </trans-unit>
        <trans-unit id="277" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can round a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">丸めることができます、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を呼び出して、<ph id="ph2">&lt;xref:System.Math.Round%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="278" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>However, note  that the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value is converted to a <ph id="ph2">&lt;xref:System.Double&gt;</ph> before the method is called, and the conversion can involve a loss of precision.</source>
          <target state="translated">しかし、なお、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を変換する、<ph id="ph2">&lt;xref:System.Double&gt;</ph>前に、メソッドが呼び出され、変換は、有効桁数の損失を伴うことができます。</target>       </trans-unit>
        <trans-unit id="279" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Formatting<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>書式設定<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="280" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can convert a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to its string representation by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph> method or by using the <bpt id="p1">[</bpt>composite formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept> feature.</source>
          <target state="translated">変換することができます、<ph id="ph1">&lt;xref:System.Single&gt;</ph>を呼び出すことによって、文字列形式の値、<ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph>メソッドまたはを使用して、<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>機能します。</target>       </trans-unit>
        <trans-unit id="281" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>For information about how format strings control the string representation of floating-point values, see the <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept> topics.</source>
          <target state="translated">書式指定文字列で浮動小数点値の文字列形式を制御する方法については、次を参照してください。、<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="282" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Parsing strings<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>文字列の解析<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="283" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>You can convert the string representation of a floating-point value to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value by calling the <ph id="ph2">&lt;xref:System.Single.Parse%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Single.TryParse%2A&gt;</ph> method.</source>
          <target state="translated">浮動小数点値の文字列形式に変換することができます、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値を呼び出して、<ph id="ph2">&lt;xref:System.Single.Parse%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Single.TryParse%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="284" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>If the parse operation fails, the <ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph> method throws an exception, whereas the <ph id="ph2">&lt;xref:System.Single.TryParse%2A&gt;</ph> method returns <ph id="ph3">`false`</ph>.</source>
          <target state="translated">解析操作が失敗した場合、<ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph>メソッドにより、例外がスローされるため、一方、<ph id="ph2">&lt;xref:System.Single.TryParse%2A&gt;</ph>メソッドを返します。<ph id="ph3">`false`</ph>です。</target>       </trans-unit>
        <trans-unit id="285" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><bpt id="p1">**</bpt>Type conversion<ept id="p1">**</ept>.</source>
          <target state="translated"><bpt id="p1">**</bpt>変換の入力<ept id="p1">**</ept>です。</target>       </trans-unit>
        <trans-unit id="286" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The <ph id="ph1">&lt;xref:System.Single&gt;</ph> structure provides an explicit interface implementation for the <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface, which supports conversion between any two standard .NET Framework data types.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single&gt;</ph>構造体の明示的なインターフェイス実装を提供する、 <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> 2 つの標準的な .NET Framework データ型間の変換をサポートするインターフェイスです。</target>       </trans-unit>
        <trans-unit id="287" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Language compilers also support the implicit conversion of values for all other standard numeric types except for the conversion of <ph id="ph1">&lt;xref:System.Double&gt;</ph> to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">言語コンパイラは、すべての他の標準の数値型の変換以外の値の暗黙的な変換をサポートするも<ph id="ph1">&lt;xref:System.Double&gt;</ph>に<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="288" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Conversion of a value of any standard numeric type other than a <ph id="ph1">&lt;xref:System.Double&gt;</ph> to a <ph id="ph2">&lt;xref:System.Single&gt;</ph> is a widening conversion and does not require the use of a casting operator or conversion method.</source>
          <target state="translated">任意の標準的な数値型以外の値への変換、<ph id="ph1">&lt;xref:System.Double&gt;</ph>を<ph id="ph2">&lt;xref:System.Single&gt;</ph>拡大変換は、キャスト演算子または変換メソッドの使用は不要です。</target>       </trans-unit>
        <trans-unit id="289" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>However, conversion of 32-bit and 64-bit integer values can involve a loss of precision.</source>
          <target state="translated">ただし、32 ビットおよび 64 ビットの整数値の変換では、有効桁数の損失を実行できます。</target>       </trans-unit>
        <trans-unit id="290" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The following table lists the differences in precision for 32-bit, 64-bit, and <ph id="ph1">&lt;xref:System.Double&gt;</ph> types:</source>
          <target state="translated">次の表に、32 ビット、64 ビットの有効桁数の違いと<ph id="ph1">&lt;xref:System.Double&gt;</ph>型。</target>       </trans-unit>
        <trans-unit id="291" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Type</source>
          <target state="translated">型</target>       </trans-unit>
        <trans-unit id="292" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Maximum precision (in decimal digits)</source>
          <target state="translated">最大有効桁数 (小数点桁の数字で)</target>       </trans-unit>
        <trans-unit id="293" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Internal precision (in decimal digits)</source>
          <target state="translated">内部の精度 (小数桁の数字で)</target>       </trans-unit>
        <trans-unit id="294" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>15</source>
          <target state="translated">16</target>       </trans-unit>
        <trans-unit id="295" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>17</source>
          <target state="translated">17</target>       </trans-unit>
        <trans-unit id="296" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.UInt32&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int32&gt;</ph> および <ph id="ph2">&lt;xref:System.UInt32&gt;</ph></target>       </trans-unit>
        <trans-unit id="297" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="298" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>10</source>
          <target state="translated">10</target>       </trans-unit>
        <trans-unit id="299" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source><ph id="ph1">&lt;xref:System.Int64&gt;</ph> and <ph id="ph2">&lt;xref:System.UInt64&gt;</ph></source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Int64&gt;</ph> および <ph id="ph2">&lt;xref:System.UInt64&gt;</ph></target>       </trans-unit>
        <trans-unit id="300" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>19</source>
          <target state="translated">19</target>       </trans-unit>
        <trans-unit id="301" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>19</source>
          <target state="translated">19</target>       </trans-unit>
        <trans-unit id="302" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>7</source>
          <target state="translated">7</target>       </trans-unit>
        <trans-unit id="303" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>9</source>
          <target state="translated">9</target>       </trans-unit>
        <trans-unit id="304" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>The problem of precision most frequently affects <ph id="ph1">&lt;xref:System.Single&gt;</ph> values that are converted to <ph id="ph2">&lt;xref:System.Double&gt;</ph> values.</source>
          <target state="translated">精度の問題は、最もよく影響<ph id="ph1">&lt;xref:System.Single&gt;</ph>値に変換される<ph id="ph2">&lt;xref:System.Double&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="305" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>In the following example, two values produced by identical division operations are unequal, because one of the values is a single-precision floating point value that is converted to a <ph id="ph1">&lt;xref:System.Double&gt;</ph>.</source>
          <target state="translated">次の例では、同一の除算操作によって生成される 2 つの値が等しくない、値の 1 つは、単精度浮動小数点値に変換されるため、<ph id="ph1">&lt;xref:System.Double&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="306" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>All members of this type are thread safe.</source>
          <target state="translated">この種類のすべてのメンバーでは、スレッド セーフです。</target>       </trans-unit>
        <trans-unit id="307" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>Members that appear to modify instance state actually return a new instance initialized with the new value.</source>
          <target state="translated">インスタンスの状態を変更する表示されるメンバーは、新しい値で初期化された新しいインスタンスを実際に返します。</target>       </trans-unit>
        <trans-unit id="308" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.Single">
          <source>As with any other type, reading and writing to a shared variable that contains an instance of this type must be protected by a lock to guarantee thread safety.</source>
          <target state="translated">として、他の種類と読み取りと書き込みをこの型のインスタンスを含む共有変数を保護する必要があるスレッド セーフを確保するロックによってです。</target>       </trans-unit>
        <trans-unit id="309" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Compares this instance to a specified object or to another <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> instance and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object or the other <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> instance.</source>
          <target state="translated">このインスタンスと指定したオブジェクトまたは別の <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> インスタンスを比較し、このインスタンスの値が指定したオブジェクトの値またはもう一方の <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> インスタンスの値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="310" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>An object to compare, or <ph id="ph1">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated">比較対象のオブジェクト、または <ph id="ph1">&lt;see langword="null" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="311" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>Compares this instance to a specified object and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified object.</source>
          <target state="translated">このインスタンスと指定したオブジェクトを比較し、このインスタンスの値が指定したオブジェクトの値よりも小さいか、同じか、または大きいかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="312" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対値を示す符号付き数値。</target>       </trans-unit>
        <trans-unit id="313" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="314" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="315" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="316" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="317" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="318" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>This instance is not a number (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a number.</source>
          <target state="translated">このインスタンスは非数 (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) で、<ph id="ph2">&lt;paramref name="value" /&gt;</ph> は数値です。</target>       </trans-unit>
        <trans-unit id="319" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="320" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="321" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="322" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>This instance and value are both not a number (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>), <ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph3">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと値は、どちらも非数 (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>)、<ph id="ph2">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>、または <ph id="ph3">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="323" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="324" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも大きいです。</target>       </trans-unit>
        <trans-unit id="325" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="326" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>This instance is a number and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>).</source>
          <target state="translated">このインスタンスは数値で、<ph id="ph1">&lt;paramref name="value" /&gt;</ph> は非数 (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="327" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="328" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="329" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>The <ph id="ph1">`value`</ph> parameter must be <ph id="ph2">`null`</ph> or an instance of <ph id="ph3">&lt;xref:System.Single&gt;</ph>; otherwise, an exception is thrown.</source>
          <target state="translated"><ph id="ph1">`value`</ph>パラメーターでなければなりません<ph id="ph2">`null`</ph>またはのインスタンス<ph id="ph3">&lt;xref:System.Single&gt;</ph>です。 それ以外の場合、例外がスローされます。</target>       </trans-unit>
        <trans-unit id="330" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Any instance of <ph id="ph1">&lt;xref:System.Single&gt;</ph>, regardless of its value, is considered greater than <ph id="ph2">`null`</ph>.</source>
          <target state="translated">任意のインスタンス<ph id="ph1">&lt;xref:System.Single&gt;</ph>、その値に関係なくが大きいと見なされますより<ph id="ph2">`null`</ph>です。</target>       </trans-unit>
        <trans-unit id="331" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Values must be identical to be considered equal.</source>
          <target state="translated">値を等価と見なされるのと同じにする必要があります。</target>       </trans-unit>
        <trans-unit id="332" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Particularly when floating-point values depend on multiple mathematical operations, it is common for them to lose precision and for their values to be nearly identical except for their least significant digits.</source>
          <target state="translated">浮動小数点値は、複数の数値演算に依存しているときに特にの有効桁数が失われると、それらの値、最小有効数字を除くとほぼ同じにするには共通です。</target>       </trans-unit>
        <trans-unit id="333" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Because of this, the return value of the <ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method may seem surprising at times.</source>
          <target state="translated">このため、戻り値の<ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph>メソッドかもしれませんことにより意外時点です。</target>       </trans-unit>
        <trans-unit id="334" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>For example, multiplication by a particular value followed by division by the same value should produce the original value, but in the following example, the computed value turns out to be greater than the original value.</source>
          <target state="translated">たとえば、同じ値で除算の後に特定の値での乗算では、元の値を生成する必要がありますが次の例で計算値は元の値より大きくなければなりません。</target>       </trans-unit>
        <trans-unit id="335" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Showing all significant digits of the two values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> indicates that the computed value differs from the original value in its least significant digits.</source>
          <target state="translated">"R"を使用して、2 つの値のすべての有効桁数を示す<bpt id="p1">[</bpt>標準数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>計算値が、その有効桁数の元の値と異なることを示します。</target>       </trans-unit>
        <trans-unit id="336" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>For information about handling such comparisons, see the Remarks section of the <ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph> method.</source>
          <target state="translated">このような比較の処理については、の「解説」セクションを参照してください、<ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="337" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>This method is implemented to support the <ph id="ph1">&lt;xref:System.IComparable&gt;</ph> interface.</source>
          <target state="translated">このメソッドがサポートするために実装されている、<ph id="ph1">&lt;xref:System.IComparable&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="338" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Note that, although a <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> is not considered to be equal to another <ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph> (even itself), the <ph id="ph3">&lt;xref:System.IComparable&gt;</ph> interface requires that <ph id="ph4">`A.CompareTo(A)`</ph> return zero.</source>
          <target state="translated">なおが、<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>別に等しいと見なされない<ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>(場合によってはそれ自体)、<ph id="ph3">&lt;xref:System.IComparable&gt;</ph>インターフェイスでは、する必要があります<ph id="ph4">`A.CompareTo(A)`</ph>は 0 を返します。</target>       </trans-unit>
        <trans-unit id="339" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Precision in Comparisons</source>
          <target state="translated">比較では有効桁数</target>       </trans-unit>
        <trans-unit id="340" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">文書化されている有効桁数を超える浮動小数点数の有効桁数は、実装と .NET Framework のバージョンに固有です。</target>       </trans-unit>
        <trans-unit id="341" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">その結果、数値の内部表現の有効桁数が変わる可能性があるため、.NET Framework のバージョン間で 2 つの数値の比較が変化します。</target>       </trans-unit>
        <trans-unit id="342" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Object)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="343" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Object)">
          <source><ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="value" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> ではありません。</target>       </trans-unit>
        <trans-unit id="344" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>A single-precision floating-point number to compare.</source>
          <target state="translated">比較対象の単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="345" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>Compares this instance to a specified single-precision floating-point number and returns an integer that indicates whether the value of this instance is less than, equal to, or greater than the value of the specified single-precision floating-point number.</source>
          <target state="translated">このインスタンスと指定した単精度浮動小数点数を比較し、このインスタンスの値が指定した単精度浮動小数点数の値よりも小さいか、同じか、それとも大きいかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="346" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>A signed number indicating the relative values of this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> の相対値を示す符号付き数値。</target>       </trans-unit>
        <trans-unit id="347" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Return Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 戻り値</target>       </trans-unit>
        <trans-unit id="348" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Description</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph>説明</target>       </trans-unit>
        <trans-unit id="349" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="350" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is less than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、<ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも小さいです。</target>       </trans-unit>
        <trans-unit id="351" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="352" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>This instance is not a number (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) and <ph id="ph2">&lt;paramref name="value" /&gt;</ph> is a number.</source>
          <target state="translated">このインスタンスは非数 (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) で、<ph id="ph2">&lt;paramref name="value" /&gt;</ph> は数値です。</target>       </trans-unit>
        <trans-unit id="353" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="354" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is equal to <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> と等価です。</target>       </trans-unit>
        <trans-unit id="355" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="356" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>Both this instance and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> are not a number (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>), <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>, or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>.</source>
          <target state="translated">このインスタンスと <ph id="ph1">&lt;paramref name="value" /&gt;</ph> は、どちらも非数 (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>)、<ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>、または <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="357" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="358" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance is greater than <ph id="ph3">&lt;paramref name="value" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは <ph id="ph3">&lt;paramref name="value" /&gt;</ph> よりも大きいです。</target>       </trans-unit>
        <trans-unit id="359" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="360" translate="yes" xml:space="preserve" uid="M:System.Single.CompareTo(System.Single)">
          <source>This instance is a number and <ph id="ph1">&lt;paramref name="value" /&gt;</ph> is not a number (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>).</source>
          <target state="translated">このインスタンスは数値で、<ph id="ph1">&lt;paramref name="value" /&gt;</ph> は非数 (<ph id="ph2">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) です。</target>       </trans-unit>
        <trans-unit id="361" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Values must be identical to be considered equal.</source>
          <target state="translated">値を等価と見なされるのと同じにする必要があります。</target>       </trans-unit>
        <trans-unit id="362" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>It is common for floating-point values to lose precision and to become nearly identical except for their least significant digits, especially when the values depend on multiple mathematical operations.</source>
          <target state="translated">浮動小数点値有効桁数が失われると、複数の数値演算で値が依存している場合に特にその最下位の桁を除くとほぼ同じになる一般的なことです。</target>       </trans-unit>
        <trans-unit id="363" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Because of this, the return value of the <ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method at times may seem surprising.</source>
          <target state="translated">このため、戻り値の<ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph>もメソッドがこのことにより意外見える可能性があります。</target>       </trans-unit>
        <trans-unit id="364" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>For example, multiplication by any value followed by division by the same value should produce the original value.</source>
          <target state="translated">で同じ値での任意の値で除算の後の乗算では、元の値を生成する必要があります。</target>       </trans-unit>
        <trans-unit id="365" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>However, in the following example, the computed value turns out to be greater than the original value.</source>
          <target state="translated">ただし、次の例で計算された値になります、元の値よりも大きくします。</target>       </trans-unit>
        <trans-unit id="366" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Showing all significant digits of the two values by using the "R" <bpt id="p1">[</bpt>standard numeric format string<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> indicates that the computed value differs from the original value in its least significant digits.</source>
          <target state="translated">"R"を使用して、2 つの値のすべての有効桁数を示す<bpt id="p1">[</bpt>標準数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>計算値が、その有効桁数の元の値と異なることを示します。</target>       </trans-unit>
        <trans-unit id="367" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>For information about handling such comparisons, see the Remarks section of the <ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph> method.</source>
          <target state="translated">このような比較の処理については、の「解説」セクションを参照してください、<ph id="ph1">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="368" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph> interface and performs slightly better than the <ph id="ph2">&lt;xref:System.Single.CompareTo%2A?displayProperty=nameWithType&gt;</ph> method because it does not have to convert the <ph id="ph3">`value`</ph> parameter to an object.</source>
          <target state="translated">このメソッドを実装する、<ph id="ph1">&lt;xref:System.IComparable%601?displayProperty=nameWithType&gt;</ph>インターフェイスし、実行よりもわずかに向上、<ph id="ph2">&lt;xref:System.Single.CompareTo%2A?displayProperty=nameWithType&gt;</ph>メソッドに変換があるないため、<ph id="ph3">`value`</ph>オブジェクトへのパラメーターです。</target>       </trans-unit>
        <trans-unit id="369" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Note that, although an object whose value is <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> is not considered equal to another object whose value is <ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph> (even itself), the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> interface requires that <ph id="ph4">`A.CompareTo(A)`</ph> return zero.</source>
          <target state="translated">なお、値があるオブジェクトが<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>値がある別のオブジェクトと等しくないと見なされます<ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>(場合によってはそれ自体)、<ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>インターフェイスでは、する必要があります<ph id="ph4">`A.CompareTo(A)`</ph>は 0 を返します。</target>       </trans-unit>
        <trans-unit id="370" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Widening Conversions</source>
          <target state="translated">拡大変換</target>       </trans-unit>
        <trans-unit id="371" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Depending on your programming language, it might be possible to code a <ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">プログラミング言語に応じてコードに考えられる場合があります、<ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</target>       </trans-unit>
        <trans-unit id="372" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</target>       </trans-unit>
        <trans-unit id="373" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Single&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">たとえば、インスタンスの型が<ph id="ph1">&lt;xref:System.Single&gt;</ph>パラメーターの型と<ph id="ph2">&lt;xref:System.Int32&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="374" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as a <ph id="ph1">&lt;xref:System.Single&gt;</ph> object, then generates a <ph id="ph2">&lt;xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType&gt;</ph> method that compares the values of the instance and the widened representation of the parameter.</source>
          <target state="translated">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<ph id="ph1">&lt;xref:System.Single&gt;</ph>オブジェクトを生成、<ph id="ph2">&lt;xref:System.Single.CompareTo%28System.Single%29?displayProperty=nameWithType&gt;</ph>拡張パラメーターの形式をおよびインスタンスの値を比較するメソッド。</target>       </trans-unit>
        <trans-unit id="375" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</source>
          <target state="translated">コンパイラが数値型の暗黙の拡大変換を実行するプログラミング言語のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="376" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>For more information, see the <bpt id="p1">[</bpt>Type Conversion Tables<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept> topic.</source>
          <target state="translated">詳細については、次を参照してください。、<bpt id="p1">[</bpt>型変換の表<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="377" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Precision in Comparisons</source>
          <target state="translated">比較では有効桁数</target>       </trans-unit>
        <trans-unit id="378" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">文書化されている有効桁数を超える浮動小数点数の有効桁数は、実装と .NET Framework のバージョンに固有です。</target>       </trans-unit>
        <trans-unit id="379" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">その結果、数値の内部表現の有効桁数が変わる可能性があるため、.NET Framework のバージョン間で 2 つの数値の比較が変化します。</target>       </trans-unit>
        <trans-unit id="380" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.CompareTo(System.Single)">
          <source>The following code example demonstrates generic and nongeneric versions of the <ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph> method for several value and reference types.</source>
          <target state="translated">次のコード例に示しますジェネリックと非ジェネリック バージョンの<ph id="ph1">&lt;xref:System.Single.CompareTo%2A&gt;</ph>いくつかの値と参照型のメソッドです。</target>       </trans-unit>
        <trans-unit id="381" translate="yes" xml:space="preserve" uid="F:System.Single.Epsilon">
          <source>Represents the smallest positive <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value that is greater than zero.</source>
          <target state="translated">ゼロより大きい最小の <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値を表します。</target>       </trans-unit>
        <trans-unit id="382" translate="yes" xml:space="preserve" uid="F:System.Single.Epsilon">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="383" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>The value of the <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> property reflects the smallest positive <ph id="ph2">&lt;xref:System.Single&gt;</ph> value that is significant in numeric operations or comparisons when the value of the <ph id="ph3">&lt;xref:System.Single&gt;</ph> instance is zero.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>プロパティには、正の最小値が反映されます。<ph id="ph2">&lt;xref:System.Single&gt;</ph>値が数値演算または比較の意味を持つときの値、<ph id="ph3">&lt;xref:System.Single&gt;</ph>インスタンスは 0 です。</target>       </trans-unit>
        <trans-unit id="384" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>For example, the following code shows that zero and <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> are considered to be unequal values, whereas zero and half the value of <ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph> are considered to be equal.</source>
          <target state="translated">などの次のコードに示す 0 と<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>と見なされます、値が等しくない一方の値のゼロおよび半分<ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>等しいと見なされます。</target>       </trans-unit>
        <trans-unit id="385" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>More precisely, the single-precision floating-point format consists of a sign, a 23-bit mantissa or significand, and an 8-bit exponent.</source>
          <target state="translated">具体的には、単精度浮動小数点の書式を記号、23 ビット仮数部または、仮数と指数の 8 ビットで構成されます。</target>       </trans-unit>
        <trans-unit id="386" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>As the following example shows, zero has an exponent of -126 and a mantissa of 0.</source>
          <target state="translated">次の例に示す、0 は、-126 の指数部を持ち、0 の仮数を示します。</target>       </trans-unit>
        <trans-unit id="387" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source><ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> has an exponent of -126 and a mantissa of 1.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> -126 の指数部と 1 の仮数部があります。</target>       </trans-unit>
        <trans-unit id="388" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>This means that <ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph> is the smallest positive <ph id="ph2">&lt;xref:System.Single&gt;</ph> value that is greater than zero and represents the smallest possible value and the smallest possible increment for a <ph id="ph3">&lt;xref:System.Single&gt;</ph> whose exponent is -126.</source>
          <target state="translated">つまり、<ph id="ph1">&lt;xref:System.Single.Epsilon?displayProperty=nameWithType&gt;</ph>は正の最小<ph id="ph2">&lt;xref:System.Single&gt;</ph>値は 0 より大きい値を表し、最小有効値の最小の可能な増分値を<ph id="ph3">&lt;xref:System.Single&gt;</ph>が指数部が-126 です。</target>       </trans-unit>
        <trans-unit id="389" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>However, the <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> property is not a general measure of precision of the <ph id="ph2">&lt;xref:System.Single&gt;</ph> type; it applies only to <ph id="ph3">&lt;xref:System.Single&gt;</ph> instances that have a value of zero.</source>
          <target state="translated">ただし、<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>プロパティは有効桁数の一般的なメジャーではありません、 <ph id="ph2">&lt;xref:System.Single&gt;</ph> ; 入力のみに適用される<ph id="ph3">&lt;xref:System.Single&gt;</ph>をゼロの値を持つインスタンス。</target>       </trans-unit>
        <trans-unit id="390" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>The value of the <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> property is not equivalent to machine epsilon, which represents the upper bound of the relative error due to rounding in floating-point arithmetic.</source>
          <target state="translated">値、<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>プロパティが浮動小数点演算で丸め処理を行うための相対的なエラーの上限を表すマシン epsilon に相当します。</target>       </trans-unit>
        <trans-unit id="391" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>The value of this constant is 1.4e-45.</source>
          <target state="translated">この定数の値が 1.4 e--45。</target>       </trans-unit>
        <trans-unit id="392" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>Two apparently equivalent floating-point numbers might not compare equal because of differences in their least significant digits.</source>
          <target state="translated">2 つの等しい浮動小数点数可能性がありますいない等しい有効桁数が異なるのためです。</target>       </trans-unit>
        <trans-unit id="393" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>For example, the C# expression, <ph id="ph1">`(float)1/3 == (float)0.33333`</ph>, does not compare equal because the division operation on the left side has maximum precision while the constant on the right side is precise only to the specified digits.</source>
          <target state="translated">たとえば、c# の式<ph id="ph1">`(float)1/3 == (float)0.33333`</ph>が等しくない左側にある除算操作は、右側にある定数が指定した桁にのみ正確中に、最大有効桁数を必要があるためです。</target>       </trans-unit>
        <trans-unit id="394" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>If you create a custom algorithm that determines whether two floating-point numbers can be considered equal, you must use a value that is greater than the <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> constant to establish the acceptable absolute margin of difference for the two values to be considered equal.</source>
          <target state="translated">2 つの浮動小数点数値を等しいと見なすかどうかを決定するカスタム アルゴリズムを作成する場合よりも大きい値を使用する必要があります、<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>等しいと見なされるには、2 つの値の差の絶対値の許容を確立するために定数です。</target>       </trans-unit>
        <trans-unit id="395" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>(Typically, that margin of difference is many times greater than <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>.)</source>
          <target state="translated">(通常は、差分の余白が何回を超える<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>)。</target>       </trans-unit>
        <trans-unit id="396" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>Platform Notes</source>
          <target state="translated">プラットフォームに関する注意事項</target>       </trans-unit>
        <trans-unit id="397" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>On ARM systems, the value of the <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> constant is too small to be detected, so it equates to zero.</source>
          <target state="translated">ARM システムでの値、<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>定数が小さすぎますを検出するため、これはゼロに相当します。</target>       </trans-unit>
        <trans-unit id="398" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.Epsilon">
          <source>You can define an alternative epsilon value that equals 1.175494351E-38 instead.</source>
          <target state="translated">1.175494351E に相当する代替 epsilon 値を定義すること、38 代わりにします。</target>       </trans-unit>
        <trans-unit id="399" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Returns a value indicating whether two instances of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> represent the same value.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> の 2 つのインスタンスが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="400" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Object)">
          <source>An object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="401" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Object)">
          <source>Returns a value indicating whether this instance is equal to a specified object.</source>
          <target state="translated">このインスタンスが指定されたオブジェクトに等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="402" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Object)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is an instance of <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> and equals the value of this instance; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> が <ph id="ph3">&lt;see cref="T:System.Single" /&gt;</ph> のインスタンスで、このインスタンスの値に等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="403" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method should be used with caution, because two apparently equivalent values can be unequal due to the differing precision of the two values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>メソッドは、2 つの等しい値を 2 つの値の有効桁数が異なるため等しくない場合があるため、注意して使用する必要があります。</target>       </trans-unit>
        <trans-unit id="404" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The following example reports that the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value .3333 and the <ph id="ph2">&lt;xref:System.Single&gt;</ph> returned by dividing 1 by 3 are unequal.</source>
          <target state="translated">次の例では、レポートを<ph id="ph1">&lt;xref:System.Single&gt;</ph>.3333 を値と<ph id="ph2">&lt;xref:System.Single&gt;</ph>で割ることによって返される 1 と 3 が等しくないです。</target>       </trans-unit>
        <trans-unit id="405" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Rather than comparing for equality, one recommended technique involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</source>
          <target state="translated">等しいかどうか比較するではなくいずれかの推奨される手法では、次の 2 つの値の差の許容の余白を定義する (などです。 値のいずれかの 01%)。</target>       </trans-unit>
        <trans-unit id="406" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be due to differences in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">2 つの値の差の絶対値は、以下が許容範囲は、違いは、有効桁数の違いによりする可能性があります、したがって、値は等しいと考えられます。</target>       </trans-unit>
        <trans-unit id="407" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The following example uses this technique to compare .33333 and 1/3, the two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values that the previous code example found to be unequal.</source>
          <target state="translated">次の例では、この手法を使用して、等しくと 1/3、2 つの比較<ph id="ph1">&lt;xref:System.Single&gt;</ph>に等しくない場合に上記のコード例にある値。</target>       </trans-unit>
        <trans-unit id="408" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>In this case, the values are equal.</source>
          <target state="translated">この場合、値が等しいです。</target>       </trans-unit>
        <trans-unit id="409" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Because <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>式を定義します最小の範囲は 0 に近いは正の値の差の余白はより大きくなければなりません<ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="410" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Typically, it is many times greater than <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>.</source>
          <target state="translated">通常、回数を超えています<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="411" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">文書化されている有効桁数を超える浮動小数点数の有効桁数は、実装と .NET Framework のバージョンに固有です。</target>       </trans-unit>
        <trans-unit id="412" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Consequently, a comparison of two particular numbers might change between versions of the .NET Framework because the precision of the numbers' internal representation might change.</source>
          <target state="translated">その結果、数値の内部表現の有効桁数が変わる可能性があるため、.NET Framework のバージョン間で 2 つの数値の比較が変化します。</target>       </trans-unit>
        <trans-unit id="413" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="414" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="415" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph> method.</source>
          <target state="translated">場合の間の暗黙的な変換、<ph id="ph1">&lt;paramref name="obj" /&gt;</ph>引数および<ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>が定義されている引数として型指定されていないと、 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<ph id="ph4">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="416" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">それ以外の場合を呼び出すことが、<ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドで、常に返します<ph id="ph2">&lt;see langword="false" /&gt;</ph>場合その<ph id="ph3">&lt;paramref name="obj" /&gt;</ph>引数ではありません、<ph id="ph4">&lt;see cref="T:System.Single" /&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="417" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</target>       </trans-unit>
        <trans-unit id="418" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Object)">
          <source>In the case of all primitive numeric types except for <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> in Visual Basic and except for <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> in C#, the first comparison returns <ph id="ph4">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph5">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph6">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph7">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">以外のすべてのプリミティブ数値型の場合<ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>Visual Basic と除く<ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>と<ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>、c# では、最初に比較を返します<ph id="ph4">&lt;see langword="true" /&gt;</ph>拡大変換と呼び出し、コンパイラが自動的に実行するため<ph id="ph5">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph>メソッド、2 つ目の比較を返しますが<ph id="ph6">&lt;see langword="false" /&gt;</ph>コンパイラを呼び出すため、<ph id="ph7">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="419" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Single)">
          <source>An object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="420" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Single)">
          <source>Returns a value indicating whether this instance and a specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> object represent the same value.</source>
          <target state="translated">このインスタンスと指定した <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> オブジェクトが同じ値を表しているかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="421" translate="yes" xml:space="preserve" uid="M:System.Single.Equals(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="obj" /&gt;</ph> is equal to this instance; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="obj" /&gt;</ph> がこのインスタンスと等しい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="422" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>This method implements the <ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph> interface, and performs slightly better than <ph id="ph2">&lt;xref:System.Single.Equals%2A&gt;</ph> because it does not have to convert the <ph id="ph3">`obj`</ph> parameter to an object.</source>
          <target state="translated">このメソッドを実装する、<ph id="ph1">&lt;xref:System.IEquatable%601?displayProperty=nameWithType&gt;</ph>インターフェイス、および実行よりもわずかに向上<ph id="ph2">&lt;xref:System.Single.Equals%2A&gt;</ph>変換があるないため、<ph id="ph3">`obj`</ph>オブジェクトへのパラメーターです。</target>       </trans-unit>
        <trans-unit id="423" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Widening Conversions</source>
          <target state="translated">拡大変換</target>       </trans-unit>
        <trans-unit id="424" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Depending on your programming language, it might be possible to code an <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method where the parameter type has fewer bits (is narrower) than the instance type.</source>
          <target state="translated">プログラミング言語に応じてコードに考えられる場合があります、<ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>メソッドのパラメーターの型のビット数が少ないがここではインスタンスの型よりもします。</target>       </trans-unit>
        <trans-unit id="425" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>This is possible because some programming languages perform an implicit widening conversion that represents the parameter as a type with as many bits as the instance.</source>
          <target state="translated">これには一部のプログラミング言語は、ビット数のインスタンスと型としてパラメーターを表す暗黙の拡大変換を実行するため。</target>       </trans-unit>
        <trans-unit id="426" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>For example, suppose the instance type is <ph id="ph1">&lt;xref:System.Single&gt;</ph> and the parameter type is <ph id="ph2">&lt;xref:System.Int32&gt;</ph>.</source>
          <target state="translated">たとえば、インスタンスの型が<ph id="ph1">&lt;xref:System.Single&gt;</ph>パラメーターの型と<ph id="ph2">&lt;xref:System.Int32&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="427" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The Microsoft C# compiler generates instructions to represent the value of the parameter as a <ph id="ph1">&lt;xref:System.Single&gt;</ph> object, and then generates a <ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType&gt;</ph> method that compares the values of the instance and the widened representation of the parameter.</source>
          <target state="translated">Microsoft c# コンパイラは、パラメーターの値を表す命令を生成、<ph id="ph1">&lt;xref:System.Single&gt;</ph>オブジェクト、し、生成、<ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29?displayProperty=nameWithType&gt;</ph>拡張パラメーターの形式をおよびインスタンスの値を比較するメソッド。</target>       </trans-unit>
        <trans-unit id="428" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Consult your programming language's documentation to determine if its compiler performs implicit widening conversions of numeric types.</source>
          <target state="translated">コンパイラが数値型の暗黙の拡大変換を実行するプログラミング言語のドキュメントを参照してください。</target>       </trans-unit>
        <trans-unit id="429" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>For more information, see the <bpt id="p1">[</bpt>Type Conversion Tables<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept> topic.</source>
          <target state="translated">詳細については、次を参照してください。、<bpt id="p1">[</bpt>型変換の表<ept id="p1">](~/docs/standard/base-types/conversion-tables.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="430" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Precision in Comparisons</source>
          <target state="translated">比較では有効桁数</target>       </trans-unit>
        <trans-unit id="431" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph> method should be used with caution, because two apparently equivalent values can be unequal because of the differing precision of the two values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Equals%2A&gt;</ph>メソッドの 2 つの等しい値等しくない場合が 2 つの値の有効桁数が異なるためために、注意して使用する必要があります。</target>       </trans-unit>
        <trans-unit id="432" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The following example reports that the <ph id="ph1">&lt;xref:System.Single&gt;</ph> value .3333 and the <ph id="ph2">&lt;xref:System.Single&gt;</ph> returned by dividing 1 by 3 are unequal.</source>
          <target state="translated">次の例では、レポートを<ph id="ph1">&lt;xref:System.Single&gt;</ph>.3333 を値と<ph id="ph2">&lt;xref:System.Single&gt;</ph>で割ることによって返される 1 と 3 が等しくないです。</target>       </trans-unit>
        <trans-unit id="433" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>One comparison technique that avoids the problems associated with comparing for equality involves defining an acceptable margin of difference between two values (such as .01% of one of the values).</source>
          <target state="translated">等しいかどうかは、次の 2 つの値の差の許容の余白を定義する必要がありますを比較することに関連する問題を回避する手法の 1 つの比較 (などです。 値のいずれかの 01%)。</target>       </trans-unit>
        <trans-unit id="434" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>If the absolute value of the difference between the two values is less than or equal to that margin, the difference is likely to be an outcome of differences in precision and, therefore, the values are likely to be equal.</source>
          <target state="translated">2 つの値の差の絶対値は、以下が許容範囲は、違いは、有効桁数の違いの結果をする可能性があります、したがって、値は等しいと考えられます。</target>       </trans-unit>
        <trans-unit id="435" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The following example uses this technique to compare .33333 and 1/3, which are the two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values that the previous code example found to be unequal.</source>
          <target state="translated">次の例では、この手法が、等しくと 1/3、2 つを使用して<ph id="ph1">&lt;xref:System.Single&gt;</ph>に等しくない場合に上記のコード例にある値。</target>       </trans-unit>
        <trans-unit id="436" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>In this case, the values are equal.</source>
          <target state="translated">この場合、値が等しいです。</target>       </trans-unit>
        <trans-unit id="437" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Because <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> defines the minimum expression of a positive value whose range is near zero, the margin of difference must be greater than <ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>式を定義します最小の範囲は 0 に近いは正の値の差の余白はより大きくなければなりません<ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="438" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Typically, it is many times greater than <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>.</source>
          <target state="translated">通常、回数を超えています<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="439" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Because of this, we recommend that you do not use <ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph> when comparing <ph id="ph2">&lt;xref:System.Double&gt;</ph> values for equality.</source>
          <target state="translated">このため、ことをお勧めするを使用しない<ph id="ph1">&lt;xref:System.Double.Epsilon&gt;</ph>比較するときに<ph id="ph2">&lt;xref:System.Double&gt;</ph>等しいかどうかの値。</target>       </trans-unit>
        <trans-unit id="440" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>A second technique that avoids the problems associated with comparing for equality involves comparing the difference between two floating-point numbers with some absolute value.</source>
          <target state="translated">等しいかどうか比較することに関連する問題を回避する 2 番目の手法では、絶対値でいくつかの 2 つの浮動小数点数の違いを比較する必要があります。</target>       </trans-unit>
        <trans-unit id="441" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>If the difference is less than or equal to that absolute value, the numbers are equal.</source>
          <target state="translated">違いがその絶対値未満の場合は、数値が等しいです。</target>       </trans-unit>
        <trans-unit id="442" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>If it is greater, the numbers are not equal.</source>
          <target state="translated">大きい場合は、数値が等しくありません。</target>       </trans-unit>
        <trans-unit id="443" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>One way to do this is to arbitrarily select an absolute value.</source>
          <target state="translated">これを行う方法の 1 つでは、絶対値を任意に選択します。</target>       </trans-unit>
        <trans-unit id="444" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>However, this is problematic, because an acceptable margin of difference depends on the magnitude of the <ph id="ph1">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">ただし、この問題が生じる違いの許容の余白の大きさによって異なります、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="445" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>A second way takes advantage of a design feature of the floating-point format: The difference between the mantissa components in the integer representations of two floating-point values indicates the number of possible floating-point values that separates the two values.</source>
          <target state="translated">2 番目の方法が浮動小数点形式のデザイン機能の活用: 浮動小数点値の 2 つの整数表現での仮数部コンポーネント間の違いは、2 つの値を分離する使用可能な浮動小数点値の数を示します。</target>       </trans-unit>
        <trans-unit id="446" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>For example, the difference between 0.0 and <ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph> is 1, because <ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph> is the smallest representable value when working with a <ph id="ph3">&lt;xref:System.Single&gt;</ph> whose value is zero.</source>
          <target state="translated">0.0 の違いなど、および<ph id="ph1">&lt;xref:System.Single.Epsilon&gt;</ph>ためには 1、<ph id="ph2">&lt;xref:System.Single.Epsilon&gt;</ph>は最小の表現可能な値を扱う場合に、<ph id="ph3">&lt;xref:System.Single&gt;</ph>値が 0 です。</target>       </trans-unit>
        <trans-unit id="447" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The following example uses this technique to compare .33333 and 1/3, which are the two <ph id="ph1">&lt;xref:System.Double&gt;</ph> values that the previous code example with the <ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph> method found to be unequal.</source>
          <target state="translated">次の例では、この手法が、等しくと 1/3、2 つを使用して<ph id="ph1">&lt;xref:System.Double&gt;</ph>値と前のコード例、<ph id="ph2">&lt;xref:System.Single.Equals%28System.Single%29&gt;</ph>に等しくない場合にメソッドが見つかりませんでした。</target>       </trans-unit>
        <trans-unit id="448" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Note that the example uses the <ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph> methods to convert a single-precision floating-point value to its integer representation.</source>
          <target state="translated">この例では注意してください、<ph id="ph1">&lt;xref:System.BitConverter.GetBytes%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.BitConverter.ToInt32%2A?displayProperty=nameWithType&gt;</ph>単精度浮動小数点値を整数形式に変換するメソッド。</target>       </trans-unit>
        <trans-unit id="449" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The precision of floating-point numbers beyond the documented precision is specific to the implementation and version of the .NET Framework.</source>
          <target state="translated">文書化されている有効桁数を超える浮動小数点数の有効桁数は、実装と .NET Framework のバージョンに固有です。</target>       </trans-unit>
        <trans-unit id="450" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Consequently, a comparison of two numbers might produce different results depending on the version of the .NET Framework, because the precision of the numbers' internal representation might change.</source>
          <target state="translated">その結果、数値の内部表現の有効桁数が変わる可能性があるために、2 つの数値の比較は、.NET Framework のバージョンによって異なる結果を生じる可能性があります。</target>       </trans-unit>
        <trans-unit id="451" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Compiler overload resolution may account for an apparent difference in the behavior of the two <ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method overloads.</source>
          <target state="translated">コンパイラのオーバー ロードの解決は、2 つの動作の見かけ上の相違点についてアカウント可能性があります<ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="452" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>If an implicit conversion between the <ph id="ph1">&lt;paramref name="obj" /&gt;</ph> argument and a <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> is defined and the argument is not typed as an <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>, compilers may perform an implicit conversion and call the <ph id="ph4">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph> method.</source>
          <target state="translated">場合の間の暗黙的な変換、<ph id="ph1">&lt;paramref name="obj" /&gt;</ph>引数および<ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>が定義されている引数として型指定されていないと、 <ph id="ph3">&lt;see cref="T:System.Object" /&gt;</ph>、コンパイラが暗黙的な変換と呼び出し実行可能性があります、<ph id="ph4">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="453" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>Otherwise, they call the <ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method, which always returns <ph id="ph2">&lt;see langword="false" /&gt;</ph> if its <ph id="ph3">&lt;paramref name="obj" /&gt;</ph> argument is not a <ph id="ph4">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">それ以外の場合を呼び出すことが、<ph id="ph1">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドで、常に返します<ph id="ph2">&lt;see langword="false" /&gt;</ph>場合その<ph id="ph3">&lt;paramref name="obj" /&gt;</ph>引数ではありません、<ph id="ph4">&lt;see cref="T:System.Single" /&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="454" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>The following example illustrates the difference in behavior between the two method overloads.</source>
          <target state="translated">次の例は、次の 2 つのメソッド オーバー ロード間の動作の違いを示しています。</target>       </trans-unit>
        <trans-unit id="455" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Equals(System.Single)">
          <source>In the case of all primitive numeric types except for <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> in Visual Basic and except for <ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph> and <ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph> in C#, the first comparison returns <ph id="ph4">&lt;see langword="true" /&gt;</ph> because the compiler automatically performs a widening conversion and calls the <ph id="ph5">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph> method, whereas the second comparison returns <ph id="ph6">&lt;see langword="false" /&gt;</ph> because the compiler calls the <ph id="ph7">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph> method.</source>
          <target state="translated">以外のすべてのプリミティブ数値型の場合<ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>Visual Basic と除く<ph id="ph2">&lt;see cref="T:System.Decimal" /&gt;</ph>と<ph id="ph3">&lt;see cref="T:System.Double" /&gt;</ph>、c# では、最初に比較を返します<ph id="ph4">&lt;see langword="true" /&gt;</ph>拡大変換と呼び出し、コンパイラが自動的に実行するため<ph id="ph5">&lt;see cref="M:System.Single.Equals(System.Single)" /&gt;</ph>メソッド、2 つ目の比較を返しますが<ph id="ph6">&lt;see langword="false" /&gt;</ph>コンパイラを呼び出すため、<ph id="ph7">&lt;see cref="M:System.Single.Equals(System.Object)" /&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="456" translate="yes" xml:space="preserve" uid="M:System.Single.GetHashCode">
          <source>Returns the hash code for this instance.</source>
          <target state="translated">このインスタンスのハッシュ コードを返します。</target>       </trans-unit>
        <trans-unit id="457" translate="yes" xml:space="preserve" uid="M:System.Single.GetHashCode">
          <source>A 32-bit signed integer hash code.</source>
          <target state="translated">32 ビット符号付き整数ハッシュ コード。</target>       </trans-unit>
        <trans-unit id="458" translate="yes" xml:space="preserve" uid="M:System.Single.GetTypeCode">
          <source>Returns the <ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> for value type <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.TypeCode" /&gt;</ph> 値型の <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> を返します。</target>       </trans-unit>
        <trans-unit id="459" translate="yes" xml:space="preserve" uid="M:System.Single.GetTypeCode">
          <source>The enumerated constant, <ph id="ph1">&lt;see cref="F:System.TypeCode.Single" /&gt;</ph>.</source>
          <target state="translated">列挙型定数 <ph id="ph1">&lt;see cref="F:System.TypeCode.Single" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="460" translate="yes" xml:space="preserve" uid="M:System.Single.IsInfinity(System.Single)">
          <source>A single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="461" translate="yes" xml:space="preserve" uid="M:System.Single.IsInfinity(System.Single)">
          <source>Returns a value indicating whether the specified number evaluates to negative or positive infinity.</source>
          <target state="translated">指定した数値が負または正の無限大と評価されるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="462" translate="yes" xml:space="preserve" uid="M:System.Single.IsInfinity(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="f" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph> or <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>; otherwise, <ph id="ph5">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="f" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph> または <ph id="ph4">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph> と評価される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph5">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="463" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsInfinity(System.Single)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮動小数点演算<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>オーバーフロー状態を通知します。</target>       </trans-unit>
        <trans-unit id="464" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsInfinity(System.Single)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.IsInfinity%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.IsInfinity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="465" translate="yes" xml:space="preserve" uid="M:System.Single.IsNaN(System.Single)">
          <source>A single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="466" translate="yes" xml:space="preserve" uid="M:System.Single.IsNaN(System.Single)">
          <source>Returns a value that indicates whether the specified value is not a number (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>).</source>
          <target state="translated">指定した値が非数値 (<ph id="ph1">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) かどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="467" translate="yes" xml:space="preserve" uid="M:System.Single.IsNaN(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="f" /&gt;</ph> evaluates to not a number (<ph id="ph3">&lt;see cref="F:System.Single.NaN" /&gt;</ph>); otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="f" /&gt;</ph> が非数 (<ph id="ph3">&lt;see cref="F:System.Single.NaN" /&gt;</ph>) と評価される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="468" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNaN(System.Single)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> to signal that that result of the operation is undefined.</source>
          <target state="translated">浮動小数点演算<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>をその操作の結果が定義されていないことを通知します。</target>       </trans-unit>
        <trans-unit id="469" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNaN(System.Single)">
          <source>For example, dividing 0.0 by 0.0 results in <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>.</source>
          <target state="translated">たとえば、0.0、0.0 を除算した結果、<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="470" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNaN(System.Single)">
          <source><ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph> returns <ph id="ph2">`false`</ph> if a <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is either <ph id="ph4">&lt;xref:System.Single.PositiveInfinity&gt;</ph> or <ph id="ph5">&lt;xref:System.Single.NegativeInfinity&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph> 返します<ph id="ph2">`false`</ph>場合、<ph id="ph3">&lt;xref:System.Single&gt;</ph>いずれかの値は<ph id="ph4">&lt;xref:System.Single.PositiveInfinity&gt;</ph>または<ph id="ph5">&lt;xref:System.Single.NegativeInfinity&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="471" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNaN(System.Single)">
          <source>To test for these values, use the <ph id="ph1">&lt;xref:System.Single.IsInfinity%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>, and <ph id="ph3">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph> methods.</source>
          <target state="translated">これらの値をテストするには、使用、 <ph id="ph1">&lt;xref:System.Single.IsInfinity%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>、および<ph id="ph3">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="472" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNaN(System.Single)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="473" translate="yes" xml:space="preserve" uid="M:System.Single.IsNegativeInfinity(System.Single)">
          <source>A single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="474" translate="yes" xml:space="preserve" uid="M:System.Single.IsNegativeInfinity(System.Single)">
          <source>Returns a value indicating whether the specified number evaluates to negative infinity.</source>
          <target state="translated">指定した数値が負の無限大と評価されるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="475" translate="yes" xml:space="preserve" uid="M:System.Single.IsNegativeInfinity(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="f" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="f" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Single.NegativeInfinity" /&gt;</ph> と評価される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="476" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNegativeInfinity(System.Single)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Single.NegativeInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮動小数点演算<ph id="ph1">&lt;xref:System.Single.NegativeInfinity&gt;</ph>オーバーフロー状態を通知します。</target>       </trans-unit>
        <trans-unit id="477" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsNegativeInfinity(System.Single)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="478" translate="yes" xml:space="preserve" uid="M:System.Single.IsPositiveInfinity(System.Single)">
          <source>A single-precision floating-point number.</source>
          <target state="translated">単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="479" translate="yes" xml:space="preserve" uid="M:System.Single.IsPositiveInfinity(System.Single)">
          <source>Returns a value indicating whether the specified number evaluates to positive infinity.</source>
          <target state="translated">指定した数値が正の無限大と評価されるかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="480" translate="yes" xml:space="preserve" uid="M:System.Single.IsPositiveInfinity(System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="f" /&gt;</ph> evaluates to <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="f" /&gt;</ph> が <ph id="ph3">&lt;see cref="F:System.Single.PositiveInfinity" /&gt;</ph> と評価される場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="481" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsPositiveInfinity(System.Single)">
          <source>Floating-point operations return <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> to signal an overflow condition.</source>
          <target state="translated">浮動小数点演算<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>オーバーフロー状態を通知します。</target>       </trans-unit>
        <trans-unit id="482" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.IsPositiveInfinity(System.Single)">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph> method.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="483" translate="yes" xml:space="preserve" uid="F:System.Single.MaxValue">
          <source>Represents the largest possible value of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> の最大有効値を表します。</target>       </trans-unit>
        <trans-unit id="484" translate="yes" xml:space="preserve" uid="F:System.Single.MaxValue">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="485" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MaxValue">
          <source>The value of this constant is positive 3.40282347E+38.</source>
          <target state="translated">この定数の値は、正の 3.40282347 e + 38 です。</target>       </trans-unit>
        <trans-unit id="486" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MaxValue">
          <source>The result of an operation that exceeds <ph id="ph1">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">超える演算の結果<ph id="ph1">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>は<ph id="ph2">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="487" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MaxValue">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph> results from addition, multiplication, and exponentiation operations when the result exceeds <ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Single.PositiveInfinity?displayProperty=nameWithType&gt;</ph>結果を超えたときに結果を加算、乗算、および指数演算操作<ph id="ph2">&lt;xref:System.Single.MaxValue?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="488" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MaxValue">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.MaxValue&gt;</ph> constant.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.MaxValue&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="489" translate="yes" xml:space="preserve" uid="F:System.Single.MinValue">
          <source>Represents the smallest possible value of <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> の最小有効値を表します。</target>       </trans-unit>
        <trans-unit id="490" translate="yes" xml:space="preserve" uid="F:System.Single.MinValue">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="491" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MinValue">
          <source>The value of this constant is negative 3.402823e38.</source>
          <target state="translated">この定数の値は、負の値 3.402823 e 38 です。</target>       </trans-unit>
        <trans-unit id="492" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MinValue">
          <source>The result of an operation that is less than <ph id="ph1">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph> is <ph id="ph2">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">ある操作の結果より小さい<ph id="ph1">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>は<ph id="ph2">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="493" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MinValue">
          <source>In the following example, <ph id="ph1">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph> results from subtraction and multiplication operations when the result is less than <ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Single.NegativeInfinity?displayProperty=nameWithType&gt;</ph>結果が、減算、乗算の結果より小さい<ph id="ph2">&lt;xref:System.Single.MinValue?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="494" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.MinValue">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.MinValue&gt;</ph> constant.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.MinValue&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="495" translate="yes" xml:space="preserve" uid="F:System.Single.NaN">
          <source>Represents not a number (<ph id="ph1">&lt;see langword="NaN" /&gt;</ph>).</source>
          <target state="translated">非数 (<ph id="ph1">&lt;see langword="NaN" /&gt;</ph>) を表します。</target>       </trans-unit>
        <trans-unit id="496" translate="yes" xml:space="preserve" uid="F:System.Single.NaN">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="497" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>A method or operator returns <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> when the result of an operation is undefined.</source>
          <target state="translated">メソッドまたは演算子を返します<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>操作の結果が定義されている場合。</target>       </trans-unit>
        <trans-unit id="498" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>For example, the result of dividing zero by zero is <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>, as the following example shows.</source>
          <target state="translated">たとえば、0 を 0 で除算した結果は<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>次の例を示します。</target>       </trans-unit>
        <trans-unit id="499" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>(But note that dividing a non-zero number by zero returns either <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>, depending on the sign of the divisor.)</source>
          <target state="translated">(0 0 以外の数値で除算を返すこと、ただし、<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.NegativeInfinity&gt;</ph>除数の符号に応じて、します)。</target>       </trans-unit>
        <trans-unit id="500" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>In addition, a method call with a <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> value or an operation on a <ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph> value returns <ph id="ph3">&lt;xref:System.Single.NaN&gt;</ph>, as the following example shows.</source>
          <target state="translated">さらに、メソッドを呼び出すと、<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>値またはでの操作、<ph id="ph2">&lt;xref:System.Single.NaN&gt;</ph>値を返します<ph id="ph3">&lt;xref:System.Single.NaN&gt;</ph>次の例を示します。</target>       </trans-unit>
        <trans-unit id="501" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>Use the <ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph> method to determine whether a value is not a number.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;xref:System.Single.IsNaN%2A&gt;</ph>値が数値ではないかどうかを調べます。</target>       </trans-unit>
        <trans-unit id="502" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>In general, <ph id="ph1">&lt;xref:System.Single&gt;</ph> operators cannot be used to compare <ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph> with other <ph id="ph3">&lt;xref:System.Single&gt;</ph> values, although comparison methods (such as <ph id="ph4">&lt;xref:System.Single.Equals%2A&gt;</ph> and <ph id="ph5">&lt;xref:System.Single.CompareTo%2A&gt;</ph>) can.</source>
          <target state="translated">一般に、<ph id="ph1">&lt;xref:System.Single&gt;</ph>を比較する演算子を使用することはできません<ph id="ph2">&lt;xref:System.Single.NaN?displayProperty=nameWithType&gt;</ph>他<ph id="ph3">&lt;xref:System.Single&gt;</ph>ですが、値比較メソッド (など<ph id="ph4">&lt;xref:System.Single.Equals%2A&gt;</ph>と<ph id="ph5">&lt;xref:System.Single.CompareTo%2A&gt;</ph>) ことができます。</target>       </trans-unit>
        <trans-unit id="503" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>The following example illustrates the difference in behavior between <ph id="ph1">&lt;xref:System.Single&gt;</ph> comparison operators and methods.</source>
          <target state="translated">次の例との間の動作の違いを示しています。<ph id="ph1">&lt;xref:System.Single&gt;</ph>比較演算子とメソッド。</target>       </trans-unit>
        <trans-unit id="504" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NaN">
          <source>The following example demonstrates the <ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph> constant.</source>
          <target state="translated">次の例で、<ph id="ph1">&lt;xref:System.Single.NaN&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="505" translate="yes" xml:space="preserve" uid="F:System.Single.NegativeInfinity">
          <source>Represents negative infinity.</source>
          <target state="translated">負の無限大を表します。</target>       </trans-unit>
        <trans-unit id="506" translate="yes" xml:space="preserve" uid="F:System.Single.NegativeInfinity">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="507" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NegativeInfinity">
          <source>The value of this constant is the result of dividing a negative number by zero.</source>
          <target state="translated">この定数の値は、負の数を 0 で除算した結果です。</target>       </trans-unit>
        <trans-unit id="508" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NegativeInfinity">
          <source>This constant is returned when the result of an operation is less than <ph id="ph1">&lt;xref:System.Single.MinValue&gt;</ph>.</source>
          <target state="translated">この定数は、返される操作の結果はより小さい<ph id="ph1">&lt;xref:System.Single.MinValue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="509" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NegativeInfinity">
          <source>Use <ph id="ph1">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph> to determine whether a value evaluates to negative infinity.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Single.IsNegativeInfinity%2A&gt;</ph>値が負の無限大と評価されるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="510" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.NegativeInfinity">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.NegativeInfinity&gt;</ph> constant.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.NegativeInfinity&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="511" translate="yes" xml:space="preserve" uid="M:System.Single.op_Equality(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="512" translate="yes" xml:space="preserve" uid="M:System.Single.op_Equality(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="513" translate="yes" xml:space="preserve" uid="M:System.Single.op_Equality(System.Single,System.Single)">
          <source>Returns a value that indicates whether two specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values are equal.</source>
          <target state="translated">指定した 2 つの <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が等しいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="514" translate="yes" xml:space="preserve" uid="M:System.Single.op_Equality(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> と <ph id="ph2">&lt;paramref name="left" /&gt;</ph> が等しい場合は <ph id="ph3">&lt;paramref name="right" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="515" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_Equality(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_Equality%2A&gt;</ph> method defines the equality operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_Equality%2A&gt;</ph>メソッド定義の等値演算子<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="516" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThan(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="517" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThan(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="518" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThan(System.Single,System.Single)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value is greater than another specified <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が、指定したもう 1 つの <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 値より大きいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="519" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThan(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が <ph id="ph2">&lt;paramref name="left" /&gt;</ph> より大きい場合は <ph id="ph3">&lt;paramref name="right" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="520" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_GreaterThan(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_GreaterThan%2A&gt;</ph> method defines the operation of the greater-than operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_GreaterThan%2A&gt;</ph>メソッドは、大きい方の操作を定義-の演算子よりも<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="521" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="522" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="523" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value is greater than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が、指定したもう 1 つの <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 値以上かどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="524" translate="yes" xml:space="preserve" uid="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is greater than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> が <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 以上の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="525" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_GreaterThanOrEqual(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_GreaterThanOrEqual%2A&gt;</ph> method defines the operation of the greater-than-or-equal operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_GreaterThanOrEqual%2A&gt;</ph>メソッドの大きい-よりも-または-等号演算子の動作を定義する<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="526" translate="yes" xml:space="preserve" uid="M:System.Single.op_Inequality(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="527" translate="yes" xml:space="preserve" uid="M:System.Single.op_Inequality(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="528" translate="yes" xml:space="preserve" uid="M:System.Single.op_Inequality(System.Single,System.Single)">
          <source>Returns a value that indicates whether two specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> values are not equal.</source>
          <target state="translated">指定した 2 つの <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が等しくないかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="529" translate="yes" xml:space="preserve" uid="M:System.Single.op_Inequality(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> and <ph id="ph3">&lt;paramref name="right" /&gt;</ph> are not equal; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> と <ph id="ph3">&lt;paramref name="right" /&gt;</ph> が等しくない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="530" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_Inequality(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_Inequality%2A&gt;</ph> method defines the inequality operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_Inequality%2A&gt;</ph>メソッド定義の非等値演算子<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="531" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThan(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="532" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThan(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="533" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThan(System.Single,System.Single)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value is less than another specified <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が、指定したもう 1 つの <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 値より小さいかどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="534" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThan(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> が <ph id="ph3">&lt;paramref name="right" /&gt;</ph> より小さい場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="535" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_LessThan(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_LessThan%2A&gt;</ph> method defines the operation of the less-than operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_LessThan%2A&gt;</ph>メソッドは、以下の操作を定義-の演算子よりも<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="536" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
          <source>The first value to compare.</source>
          <target state="translated">比較する最初の値です。</target>       </trans-unit>
        <trans-unit id="537" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
          <source>The second value to compare.</source>
          <target state="translated">比較する 2 番目の値です。</target>       </trans-unit>
        <trans-unit id="538" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
          <source>Returns a value that indicates whether a specified <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value is less than or equal to another specified <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">指定した <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値が、指定したもう 1 つの <ph id="ph2">&lt;see cref="T:System.Single" /&gt;</ph> 値以下かどうかを示す値を返します。</target>       </trans-unit>
        <trans-unit id="539" translate="yes" xml:space="preserve" uid="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="left" /&gt;</ph> is less than or equal to <ph id="ph3">&lt;paramref name="right" /&gt;</ph>; otherwise, <ph id="ph4">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph2">&lt;paramref name="left" /&gt;</ph> が <ph id="ph3">&lt;paramref name="right" /&gt;</ph> 以下の場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph4">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="540" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.op_LessThanOrEqual(System.Single,System.Single)">
          <source>The <ph id="ph1">&lt;xref:System.Single.op_LessThanOrEqual%2A&gt;</ph> method defines the operation of the less-than-or-equal operator for <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.op_LessThanOrEqual%2A&gt;</ph>メソッドは、小さいよりも-または等号演算子の操作を定義<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="541" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Converts the string representation of a number to its single-precision floating-point number equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等しい単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="542" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="543" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source>Converts the string representation of a number to its single-precision floating-point number equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等しい単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="544" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source>A single-precision floating-point number equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> で指定した数値または記号に等しい単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="545" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain the current culture's <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、現在のカルチャを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、 <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>、または形式の文字列。</target>       </trans-unit>
        <trans-unit id="546" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>] [<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>,<ept id="p4">*</ept>]]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.<ept id="p6">*</ept>[<bpt id="p7">*</bpt>fractional-digits<ept id="p7">*</ept>]][e[<bpt id="p8">*</bpt>sign<ept id="p8">*</ept>]<bpt id="p9">*</bpt>exponential-digits<ept id="p9">*</ept>][<bpt id="p10">*</bpt>ws<ept id="p10">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>] [<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>,<ept id="p4">*</ept>]]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[<bpt id="p6">*</bpt>.<ept id="p6">*</ept>[<bpt id="p7">*</bpt>fractional-digits<ept id="p7">*</ept>]][e[<bpt id="p8">*</bpt>sign<ept id="p8">*</ept>]<bpt id="p9">*</bpt>exponential-digits<ept id="p9">*</ept>][<bpt id="p10">*</bpt>ws<ept id="p10">*</ept>]</target>       </trans-unit>
        <trans-unit id="547" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="548" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="549" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="550" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="551" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="552" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A series of white space characters.</source>
          <target state="translated">一連の空白文字。</target>       </trans-unit>
        <trans-unit id="553" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="554" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A negative sign symbol or a positive sign symbol.</source>
          <target state="translated">負の記号または正の記号。</target>       </trans-unit>
        <trans-unit id="555" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Valid sign characters are determined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">有効な符号文字がによって決定されます、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.NegativeSign%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveSign%2A?displayProperty=nameWithType&gt;</ph>現在のカルチャのプロパティです。</target>       </trans-unit>
        <trans-unit id="556" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Only a leading sign can be used.</source>
          <target state="translated">先頭の記号のみを使用できます。</target>       </trans-unit>
        <trans-unit id="557" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="558" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="559" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Runs of <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> can be partitioned by a group-separator symbol.</source>
          <target state="translated">実行<bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>グループの区切り記号でパーティション分割することができます。</target>       </trans-unit>
        <trans-unit id="560" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>For example, in some cultures a comma (,) separates groups of thousands.</source>
          <target state="translated">たとえば、コンマ (,) は、一部のカルチャで、何千ものグループを区切ります。</target>       </trans-unit>
        <trans-unit id="561" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素を指定できる場合、文字列が含まれています、<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="562" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="563" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">カルチャ固有の桁区切り記号。</target>       </trans-unit>
        <trans-unit id="564" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="565" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="566" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="567" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="568" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="569" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"または"E"文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="570" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="571" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="572" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターの組み合わせを使用して解釈されます、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="573" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</target>       </trans-unit>
        <trans-unit id="574" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method overload.</source>
          <target state="translated">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます<ph id="ph1">`s`</ph>を使用して、<ph id="ph2">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="575" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed by using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは書式設定情報を使用して解析、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のシステムのカルチャに初期化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="576" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="577" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>To parse a string by using the formatting information of a specific culture, use the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> or <ph id="ph2">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method.</source>
          <target state="translated">特定のカルチャの書式情報を使用して、文字列を解析するを使用して、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>または<ph id="ph2">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="578" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is returned.</source>
          <target state="translated">通常、渡した場合、<ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph>メソッドを呼び出すことによって作成される文字列を<ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph>、元のメソッド<ph id="ph3">&lt;xref:System.Single&gt;</ph>値が返されます。</target>       </trans-unit>
        <trans-unit id="579" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">ただし、精度の損失、ため値可能性がありますいないなります。</target>       </trans-unit>
        <trans-unit id="580" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="581" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="582" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29&gt;</ph> method to convert an array of strings to equivalent <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29&gt;</ph>と等価な文字列の配列に変換します<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="583" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="584" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が、有効な書式で数値を表していません。</target>       </trans-unit>
        <trans-unit id="585" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="586" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="587" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="588" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> と組み合わせた <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="589" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Converts the string representation of a number in a specified style to its single-precision floating-point number equivalent.</source>
          <target state="translated">指定したスタイルでの数値の文字列形式を、それと等価な単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="590" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A single-precision floating-point number that is equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> で指定した数値または記号に等しい単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="591" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>パラメーター スタイル要素定義 (空白文字、数千などの区切り記号および通貨記号) で許容される、<ph id="ph2">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="592" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="593" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">次<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーがサポートされていません。</target>       </trans-unit>
        <trans-unit id="594" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain the current culture's <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、現在のカルチャを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="595" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, it can also take the form:</source>
          <target state="translated">値に応じて<ph id="ph1">`style`</ph>フォームをかかることができます。</target>       </trans-unit>
        <trans-unit id="596" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>[<bpt id="p5">*</bpt>,<ept id="p5">*</ept>]]<bpt id="p6">*</bpt>integral-digits<ept id="p6">*</ept>[<bpt id="p7">*</bpt>.<ept id="p7">*</ept>[<bpt id="p8">*</bpt>fractional-digits<ept id="p8">*</ept>]][E[<bpt id="p9">*</bpt>sign<ept id="p9">*</ept>]<bpt id="p10">*</bpt>exponential-digits<ept id="p10">*</ept>][<bpt id="p11">*</bpt>ws<ept id="p11">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>][<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>[<bpt id="p5">*</bpt>,<ept id="p5">*</ept>]]<bpt id="p6">*</bpt>integral-digits<ept id="p6">*</ept>[<bpt id="p7">*</bpt>.<ept id="p7">*</ept>[<bpt id="p8">*</bpt>fractional-digits<ept id="p8">*</ept>]][E[<bpt id="p9">*</bpt>sign<ept id="p9">*</ept>]<bpt id="p10">*</bpt>exponential-digits<ept id="p10">*</ept>][<bpt id="p11">*</bpt>ws<ept id="p11">*</ept>]</target>       </trans-unit>
        <trans-unit id="597" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="598" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="599" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="600" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of white-space characters.</source>
          <target state="translated">一連の空白文字。</target>       </trans-unit>
        <trans-unit id="601" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>の最後に表示されることができますフラグ、およびその<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="602" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="603" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>現在のカルチャのプロパティです。</target>       </trans-unit>
        <trans-unit id="604" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="605" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="606" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">マイナス記号 (-) または、プラス記号 (+) です。</target>       </trans-unit>
        <trans-unit id="607" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に表示できる符号<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、およびそのがの末尾に置くことができます<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="608" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">かっこを使用できる<ph id="ph1">`s`</ph>負の値を指定する場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="609" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="610" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="611" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素を指定できる場合、文字列が含まれています、<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="612" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="613" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific group separator.</source>
          <target state="translated">カルチャ固有のグループの区切り記号。</target>       </trans-unit>
        <trans-unit id="614" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's group separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag</source>
          <target state="translated">現在のカルチャの桁区切り記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ</target>       </trans-unit>
        <trans-unit id="615" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>.</source>
          <target state="translated">である必要があります。</target>       </trans-unit>
        <trans-unit id="616" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="617" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの小数点記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="618" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="619" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="620" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="621" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="622" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"または"E"文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="623" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`value`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`value`</ph>場合、パラメーターは指数表記の数値を表すことができる<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="624" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="625" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="626" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="627" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>メンバーが存在する可能性がありますが、入力文字列内に存在する必要がない要素を制御します。</target>       </trans-unit>
        <trans-unit id="628" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>フラグに存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="629" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 値</target>       </trans-unit>
        <trans-unit id="630" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Elements permitted in <ph id="ph1">`s`</ph> in addition to digits</source>
          <target state="translated">使用できる要素<ph id="ph1">`s`</ph>数字だけでなく</target>       </trans-unit>
        <trans-unit id="631" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素のみです。</target>       </trans-unit>
        <trans-unit id="632" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小数点 (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) および<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="633" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"または"E"文字は、指数表記法を示します。</target>       </trans-unit>
        <trans-unit id="634" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">それ自体では、このフラグは、形式で値をサポートしている<bpt id="p1">*</bpt>桁の数字<ept id="p1">*</ept>E<bpt id="p2">*</bpt>桁<ept id="p2">*</ept>以外の場合は追加のフラグが正常に正または負の符号および小数点記号としては、このような要素を含む文字列を解析する必要です。</target>       </trans-unit>
        <trans-unit id="635" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="636" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="637" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="638" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="639" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>数値の値を囲むかっこの形式での要素。</target>       </trans-unit>
        <trans-unit id="640" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The thousands separator (,) element.</source>
          <target state="translated">桁区切り記号 (,) 要素です。</target>       </trans-unit>
        <trans-unit id="641" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The currency ($) element.</source>
          <target state="translated">通貨 ($) の要素。</target>       </trans-unit>
        <trans-unit id="642" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">すべての要素。</target>       </trans-unit>
        <trans-unit id="643" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">ただし、 <ph id="ph1">`s`</ph> 16 進数または指数表記の数値を表すことはできません。</target>       </trans-unit>
        <trans-unit id="644" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>先頭または末尾の位置にある要素<ph id="ph1">`s`</ph>、<bpt id="p2">*</bpt>記号<ept id="p2">*</ept>の先頭に<ph id="ph2">`s`</ph>、および小数点 (.) のシンボルです。</target>       </trans-unit>
        <trans-unit id="645" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="646" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (,) and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>、 <ph id="ph2">`sign`</ph>、桁区切り記号 (,) と小数点 (.) の要素。</target>       </trans-unit>
        <trans-unit id="647" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>All elements.</source>
          <target state="translated">すべての要素。</target>       </trans-unit>
        <trans-unit id="648" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">ただし、 <ph id="ph1">`s`</ph> 16 進数を表すことはできません。</target>       </trans-unit>
        <trans-unit id="649" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Some examples of <ph id="ph1">`s`</ph> are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</source>
          <target state="translated">例をいくつか<ph id="ph1">`s`</ph>は「100」、「-123,456,789」、「123.45 e + 6」、「+500」、"5e2"、「3.1416」、「600。」、"-。 123" は、と"-無限大"です。</target>       </trans-unit>
        <trans-unit id="650" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のシステムのカルチャに初期化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="651" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>To specify the culture whose formatting information is used for the parse operation, call the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> overload.</source>
          <target state="translated">書式情報を含むが、解析操作で使用されるカルチャを指定するには、呼び出し、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>オーバー ロードします。</target>       </trans-unit>
        <trans-unit id="652" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is returned.</source>
          <target state="translated">通常、渡した場合、<ph id="ph1">&lt;xref:System.Single.Parse%2A&gt;</ph>メソッドを呼び出すことによって作成される文字列を<ph id="ph2">&lt;xref:System.Single.ToString%2A&gt;</ph>、元のメソッド<ph id="ph3">&lt;xref:System.Single&gt;</ph>値が返されます。</target>       </trans-unit>
        <trans-unit id="653" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">ただし、精度の損失、ため値可能性がありますいないなります。</target>       </trans-unit>
        <trans-unit id="654" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="655" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="656" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph> method to parse the string representations of <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%29&gt;</ph>の文字列形式を解析します<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="657" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>The example uses formatting information for the en-US culture.</source>
          <target state="translated">例では、EN-US カルチャの書式情報を使用します。</target>       </trans-unit>
        <trans-unit id="658" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="659" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is not a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は有効な形式の数値ではありません。</target>       </trans-unit>
        <trans-unit id="660" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を表します。</target>       </trans-unit>
        <trans-unit id="661" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="662" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="663" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> includes the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> に <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値が含まれています。</target>       </trans-unit>
        <trans-unit id="664" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="665" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に関するカルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="666" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified culture-specific format to its single-precision floating-point number equivalent.</source>
          <target state="translated">指定したカルチャに固有の書式による数値の文字列形式を、それと等価な単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="667" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A single-precision floating-point number equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> で指定した数値または記号に等しい単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="668" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>This overload is typically used to convert text that can be formatted in a variety of ways to a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated">このオーバー ロードでは、さまざまな方法でフォーマットできるテキストに変換するために使用は、通常、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="669" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>For example, it can be used to convert the text entered by a user into an HTML text box to a numeric value.</source>
          <target state="translated">たとえば、数値の値を HTML テキスト ボックスに、ユーザーが入力したテキストに変換する、使用できます。</target>       </trans-unit>
        <trans-unit id="670" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターの組み合わせを使用して解釈されます、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="671" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> for the culture specified by <ph id="ph5">`provider`</ph>, or it can contain a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>、または<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>で指定されたカルチャの<ph id="ph5">`provider`</ph>、または形式の文字列を含めることができます。</target>       </trans-unit>
        <trans-unit id="672" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>.<ept id="p4">*</ept>[<bpt id="p5">*</bpt>fractional-digits<ept id="p5">*</ept>]][E[<bpt id="p6">*</bpt>sign<ept id="p6">*</ept>]<bpt id="p7">*</bpt>exponential-digits<ept id="p7">*</ept>][<bpt id="p8">*</bpt>ws<ept id="p8">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>][<bpt id="p2">*</bpt>sign<ept id="p2">*</ept>]<bpt id="p3">*</bpt>integral-digits<ept id="p3">*</ept>[<bpt id="p4">*</bpt>.<ept id="p4">*</ept>[<bpt id="p5">*</bpt>fractional-digits<ept id="p5">*</ept>]][E[<bpt id="p6">*</bpt>sign<ept id="p6">*</ept>]<bpt id="p7">*</bpt>exponential-digits<ept id="p7">*</ept>][<bpt id="p8">*</bpt>ws<ept id="p8">*</ept>]</target>       </trans-unit>
        <trans-unit id="673" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">省略可能な要素は角かっこで囲まれています ([および])。</target>       </trans-unit>
        <trans-unit id="674" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">数字の 0 から 9 までの一連の"digits"という語を含む要素で構成されます。</target>       </trans-unit>
        <trans-unit id="675" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="676" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="677" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="678" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A series of white-space characters.</source>
          <target state="translated">一連の空白文字。</target>       </trans-unit>
        <trans-unit id="679" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="680" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">マイナス記号 (-) または、プラス記号 (+) です。</target>       </trans-unit>
        <trans-unit id="681" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="682" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="683" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Runs of <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> can be partitioned by a group-separator symbol.</source>
          <target state="translated">実行<bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>グループの区切り記号でパーティション分割することができます。</target>       </trans-unit>
        <trans-unit id="684" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>For example, in some cultures a comma (,) separates groups of thousands.</source>
          <target state="translated">たとえば、コンマ (,) は、一部のカルチャで、何千ものグループを区切ります。</target>       </trans-unit>
        <trans-unit id="685" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素を指定できる場合、文字列が含まれています、<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="686" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>.</source>
          <target state="translated">である必要があります。</target>       </trans-unit>
        <trans-unit id="687" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="688" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="689" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="690" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="691" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"または"E"文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="692" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="693" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="694" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>For more information about numeric formats, see the <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept> topic.</source>
          <target state="translated">数値形式の詳細については、次を参照してください。、<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>トピックです。</target>       </trans-unit>
        <trans-unit id="695" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装が<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="696" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>When the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>メソッドが呼び出され、呼び出し、<ph id="ph2">`provider`</ph>パラメーターの<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッド渡します、<ph id="ph4">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="697" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information about the format of the <ph id="ph3">`s`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドが戻ります、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の形式に関する情報を提供するオブジェクト、<ph id="ph3">`s`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="698" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply custom formatting information to the parse operation:</source>
          <target state="translated">3 つの方法を使用する、<ph id="ph1">`provider`</ph>パラメーター、解析操作にカスタムの書式情報を提供します。</target>       </trans-unit>
        <trans-unit id="699" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">渡すことができます、<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>の書式情報を提供するカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="700" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>そのカルチャの数値の書式設定情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="701" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">実際に渡すことができます<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>数値書式設定情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="702" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(その実装の<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>自体を返すだけです)。</target>       </trans-unit>
        <trans-unit id="703" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">実装するカスタム オブジェクトを渡すことができます<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="704" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドがインスタンス化し、返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="705" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph> or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> cannot be obtained, the formatting information for the current system culture is used.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>または<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>を取得できません、書式設定については、現在のシステム カルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="706" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="707" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="708" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>Some examples of <ph id="ph1">`s`</ph> are "100", "-123,456,789", "123.45e+6", "+500", "5e2", "3.1416", "600.", "-.123", and "-Infinity".</source>
          <target state="translated">例をいくつか<ph id="ph1">`s`</ph>は「100」、「-123,456,789」、「123.45 e + 6」、「+500」、"5e2"、「3.1416」、「600。」、"-。 123" は、と"-無限大"です。</target>       </trans-unit>
        <trans-unit id="709" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The following example is the button click event handler of a Web form.</source>
          <target state="translated">次の例は、ボタンは、Web フォームのイベント ハンドラーをクリックします。</target>       </trans-unit>
        <trans-unit id="710" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>It uses the array returned by the <ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph> property to determine the user's locale.</source>
          <target state="translated">によって返される配列を使用して、<ph id="ph1">&lt;xref:System.Web.HttpRequest.UserLanguages%2A?displayProperty=nameWithType&gt;</ph>プロパティをユーザーのロケールを決定します。</target>       </trans-unit>
        <trans-unit id="711" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>It then instantiates a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that corresponds to that locale.</source>
          <target state="translated">インスタンス化し、<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>そのロケールに対応するオブジェクト。</target>       </trans-unit>
        <trans-unit id="712" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that belongs to that <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object is then passed to the <ph id="ph3">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method to convert the user's input to a <ph id="ph4">&lt;xref:System.Single&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>に属しているオブジェクト<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>にオブジェクトが渡され、<ph id="ph3">&lt;xref:System.Single.Parse%28System.String%2CSystem.IFormatProvider%29&gt;</ph>をユーザーに変換するメソッドの入力、<ph id="ph4">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="713" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="714" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a number in a valid format.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が、有効な書式で数値を表していません。</target>       </trans-unit>
        <trans-unit id="715" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を表しています。</target>       </trans-unit>
        <trans-unit id="716" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string that contains a number to convert.</source>
          <target state="translated">変換する数値を含んだ文字列。</target>       </trans-unit>
        <trans-unit id="717" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A bitwise combination of enumeration values that indicates the style elements that can be present in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> で使用可能なスタイル要素を示す、列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="718" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> と組み合わせた <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="719" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に関するカルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="720" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</source>
          <target state="translated">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価な単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="721" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A single-precision floating-point number equivalent to the numeric value or symbol specified in <ph id="ph1">&lt;paramref name="s" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> で指定した数値または記号に等しい単精度浮動小数点数。</target>       </trans-unit>
        <trans-unit id="722" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the style elements (such as white space, thousands separators, and currency symbols) that are allowed in the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>パラメーター スタイル要素定義 (空白文字、数千などの区切り記号および通貨記号) で許容される、<ph id="ph2">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="723" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="724" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">次<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーがサポートされていません。</target>       </trans-unit>
        <trans-unit id="725" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>, or <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph> for the culture specified by <ph id="ph5">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A?displayProperty=nameWithType&gt;</ph>、または<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A?displayProperty=nameWithType&gt;</ph>で指定されたカルチャの<ph id="ph5">`provider`</ph>します。</target>       </trans-unit>
        <trans-unit id="726" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Depending on the value of <ph id="ph1">`style`</ph>, it can also take the form:</source>
          <target state="translated">値に応じて<ph id="ph1">`style`</ph>フォームをかかることができます。</target>       </trans-unit>
        <trans-unit id="727" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>] [<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[.[<bpt id="p6">*</bpt>fractional-digits<ept id="p6">*</ept>]][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential-digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</source>
          <target state="translated">[<bpt id="p1">*</bpt>ws<ept id="p1">*</ept>] [<bpt id="p2">*</bpt><ph id="ph1">$</ph><ept id="p2">*</ept>] [<bpt id="p3">*</bpt>sign<ept id="p3">*</ept>][<bpt id="p4">*</bpt>integral-digits<ept id="p4">*</ept>,]<bpt id="p5">*</bpt>integral-digits<ept id="p5">*</ept>[.[<bpt id="p6">*</bpt>fractional-digits<ept id="p6">*</ept>]][E[<bpt id="p7">*</bpt>sign<ept id="p7">*</ept>]<bpt id="p8">*</bpt>exponential-digits<ept id="p8">*</ept>][<bpt id="p9">*</bpt>ws<ept id="p9">*</ept>]</target>       </trans-unit>
        <trans-unit id="728" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements framed in square brackets ([ and ]) are optional.</source>
          <target state="translated">要素は角かっこ ([および]) は省略可能で囲まれています。</target>       </trans-unit>
        <trans-unit id="729" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="730" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="731" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="732" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="733" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of white-space characters.</source>
          <target state="translated">一連の空白文字。</target>       </trans-unit>
        <trans-unit id="734" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>の最後に表示されることができますフラグ、およびその<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="735" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="736" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the current culture.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>現在のカルチャのプロパティです。</target>       </trans-unit>
        <trans-unit id="737" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="738" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="739" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A negative sign symbol (-) or a positive sign symbol (+).</source>
          <target state="translated">マイナス記号 (-) または、プラス記号 (+) です。</target>       </trans-unit>
        <trans-unit id="740" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に表示できる符号<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、およびそのがの末尾に置くことができます<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="741" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">かっこを使用できる<ph id="ph1">`s`</ph>負の値を指定する場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="742" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="743" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="744" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element can be absent if the string contains the <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素を指定できる場合、文字列が含まれています、<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="745" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>,</source>
          <target state="translated">,</target>       </trans-unit>
        <trans-unit id="746" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific group separator.</source>
          <target state="translated">カルチャ固有のグループの区切り記号。</target>       </trans-unit>
        <trans-unit id="747" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's group separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag</source>
          <target state="translated">現在のカルチャの桁区切り記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ</target>       </trans-unit>
        <trans-unit id="748" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>.</source>
          <target state="translated">である必要があります。</target>       </trans-unit>
        <trans-unit id="749" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="750" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの小数点記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="751" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="752" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="753" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="754" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>E</source>
          <target state="translated">E</target>       </trans-unit>
        <trans-unit id="755" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates that the value is represented in exponential (scientific) notation.</source>
          <target state="translated">"E"または"E"文字は、値を指数表記で表されていることを示します。</target>       </trans-unit>
        <trans-unit id="756" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>場合、パラメーターは指数表記の数値を表すことができる<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="757" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="758" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="759" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="760" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be present, but are not required to be present, in the input string.</source>
          <target state="translated">残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>メンバーが存在する可能性がありますが、入力文字列内に存在する必要がない要素を制御します。</target>       </trans-unit>
        <trans-unit id="761" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>フラグに存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="762" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 値</target>       </trans-unit>
        <trans-unit id="763" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Elements permitted in <ph id="ph1">`s`</ph> in addition to digits</source>
          <target state="translated">使用できる要素<ph id="ph1">`s`</ph>数字だけでなく</target>       </trans-unit>
        <trans-unit id="764" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素のみです。</target>       </trans-unit>
        <trans-unit id="765" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The decimal point (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) and <bpt id="p2">*</bpt>fractional-digits<ept id="p2">*</ept> elements.</source>
          <target state="translated">小数点 (<bpt id="p1">*</bpt>.<ept id="p1">*</ept>) および<bpt id="p2">*</bpt>小数部の桁<ept id="p2">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="766" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The "e" or "E" character, which indicates exponential notation.</source>
          <target state="translated">"E"または"E"文字は、指数表記法を示します。</target>       </trans-unit>
        <trans-unit id="767" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">それ自体では、このフラグは、形式で値をサポートしている<bpt id="p1">*</bpt>桁の数字<ept id="p1">*</ept>E<bpt id="p2">*</bpt>桁<ept id="p2">*</ept>以外の場合は追加のフラグが正常に正または負の符号および小数点記号としては、このような要素を含む文字列を解析する必要です。</target>       </trans-unit>
        <trans-unit id="768" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="769" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="770" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="771" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="772" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>数値の値を囲むかっこの形式での要素。</target>       </trans-unit>
        <trans-unit id="773" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The thousands separator (,) element.</source>
          <target state="translated">桁区切り記号 (,) 要素です。</target>       </trans-unit>
        <trans-unit id="774" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The currency ($) element.</source>
          <target state="translated">通貨 ($) の要素。</target>       </trans-unit>
        <trans-unit id="775" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">すべての要素。</target>       </trans-unit>
        <trans-unit id="776" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated">ただし、 <ph id="ph1">`s`</ph> 16 進数または指数表記の数値を表すことはできません。</target>       </trans-unit>
        <trans-unit id="777" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the decimal point (.) symbol.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>先頭または末尾の位置にある要素<ph id="ph1">`s`</ph>、<bpt id="p2">*</bpt>記号<ept id="p2">*</ept>の先頭に<ph id="ph2">`s`</ph>、および小数点 (.) のシンボルです。</target>       </trans-unit>
        <trans-unit id="778" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="779" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (,) and decimal point (.) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>、 <ph id="ph2">`sign`</ph>、桁区切り記号 (,) と小数点 (.) の要素。</target>       </trans-unit>
        <trans-unit id="780" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>All elements.</source>
          <target state="translated">すべての要素。</target>       </trans-unit>
        <trans-unit id="781" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>However, <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">ただし、 <ph id="ph1">`s`</ph> 16 進数を表すことはできません。</target>       </trans-unit>
        <trans-unit id="782" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="783" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific information about the format of <ph id="ph3">`value`</ph>.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の書式に関するカルチャ固有の情報を提供するオブジェクト<ph id="ph3">`value`</ph>です。</target>       </trans-unit>
        <trans-unit id="784" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> can be any one of the following:</source>
          <target state="translated">通常、<ph id="ph1">`provider`</ph>次のいずれかを指定できます。</target>       </trans-unit>
        <trans-unit id="785" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that provides numeric formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>数値書式設定情報を提供するカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="786" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>数値書式設定情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="787" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">A<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="788" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(その実装の<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>自体を返すだけです)。</target>       </trans-unit>
        <trans-unit id="789" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>A custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph> and uses the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> method to instantiate and return the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">実装するカスタム オブジェクト<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>を使用して、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>をインスタンス化して返すメソッド、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="790" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture is used.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクトの現在のカルチャが使用されます。</target>       </trans-unit>
        <trans-unit id="791" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="792" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="793" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The following code example uses the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method to parse the string representations of <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次のコード例では、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>の文字列形式を解析します<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="794" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>Each string in an array is parsed using the formatting conventions of the en-US, nl-NL, and a custom culture.</source>
          <target state="translated">配列内の各文字列は、EN-US、NL-NL、およびカスタム カルチャの書式指定規則を使用して解析されます。</target>       </trans-unit>
        <trans-unit id="795" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>The custom culture defines its group separator symbol as the underscore ("_") and its group size as two.</source>
          <target state="translated">カスタム カルチャでは、アンダー スコア (「_ _」) とそのグループのサイズとして 2 つの桁区切り記号を定義します。</target>       </trans-unit>
        <trans-unit id="796" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="797" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> does not represent a numeric value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> が数値を表していません。</target>       </trans-unit>
        <trans-unit id="798" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="799" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="800" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値です。</target>       </trans-unit>
        <trans-unit id="801" translate="yes" xml:space="preserve" uid="M:System.Single.Parse(System.String,System.Globalization.NumberStyles,System.IFormatProvider)">
          <source><ph id="ph1">&lt;paramref name="s" /&gt;</ph> represents a number that is less than <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="s" /&gt;</ph> は <ph id="ph2">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> 未満の数値か、<ph id="ph3">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を表します。</target>       </trans-unit>
        <trans-unit id="802" translate="yes" xml:space="preserve" uid="F:System.Single.PositiveInfinity">
          <source>Represents positive infinity.</source>
          <target state="translated">正の無限大を表します。</target>       </trans-unit>
        <trans-unit id="803" translate="yes" xml:space="preserve" uid="F:System.Single.PositiveInfinity">
          <source>This field is constant.</source>
          <target state="translated">このフィールドは定数です。</target>       </trans-unit>
        <trans-unit id="804" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.PositiveInfinity">
          <source>The value of this constant is the result of dividing a positive number by zero.</source>
          <target state="translated">この定数の値は、0 では正の数値を除算した結果です。</target>       </trans-unit>
        <trans-unit id="805" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.PositiveInfinity">
          <source>This constant is returned when the result of an operation is greater than <ph id="ph1">&lt;xref:System.Single.MaxValue&gt;</ph>.</source>
          <target state="translated">この定数は操作の結果がよりも大きい場合に返される<ph id="ph1">&lt;xref:System.Single.MaxValue&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="806" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.PositiveInfinity">
          <source>Use <ph id="ph1">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph> to determine whether a value evaluates to positive infinity.</source>
          <target state="translated">使用して<ph id="ph1">&lt;xref:System.Single.IsPositiveInfinity%2A&gt;</ph>値が正の無限大と評価されるかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="807" translate="yes" xml:space="preserve" extradata="MT" uid="F:System.Single.PositiveInfinity">
          <source>The following code example demonstrates the <ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph> constant.</source>
          <target state="translated">次のコード例を示しています、<ph id="ph1">&lt;xref:System.Single.PositiveInfinity&gt;</ph>定数。</target>       </trans-unit>
        <trans-unit id="808" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="809" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToBoolean(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="810" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if the value of the current instance is not zero; otherwise, <ph id="ph2">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated">現在のインスタンスの値がゼロでない場合は <ph id="ph1">&lt;see langword="true" /&gt;</ph>。それ以外の場合は <ph id="ph2">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="811" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="812" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="813" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToBoolean(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToBoolean%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="814" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="815" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToByte(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="816" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Byte" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="817" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="818" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="819" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToByte%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="820" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="821" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="822" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">このメソッドを使用しようとすると、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="823" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="824" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">値は返されません。</target>       </trans-unit>
        <trans-unit id="825" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToChar(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="826" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="827" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="828" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>Attempting to use this method throws an <ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph>.</source>
          <target state="translated">このメソッドを使用しようとすると、<ph id="ph1">&lt;see cref="T:System.InvalidCastException" /&gt;</ph> がスローされます。</target>       </trans-unit>
        <trans-unit id="829" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>This conversion is not supported.</source>
          <target state="translated">この変換はサポートされていません。</target>       </trans-unit>
        <trans-unit id="830" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>No value is returned.</source>
          <target state="translated">値は返されません。</target>       </trans-unit>
        <trans-unit id="831" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDateTime(System.IFormatProvider)">
          <source>In all cases.</source>
          <target state="translated">すべての場合。</target>       </trans-unit>
        <trans-unit id="832" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="833" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToDecimal(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="834" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Decimal" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="835" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="836" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="837" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDecimal(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToDecimal%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="838" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="839" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToDouble(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="840" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Double" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="841" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="842" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="843" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToDouble(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToDouble%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="844" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="845" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt16(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="846" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int16" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="847" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="848" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="849" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt16%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="850" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="851" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt32(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="852" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int32" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="853" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="854" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="855" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt32%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="856" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="857" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToInt64(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="858" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.Int64" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="859" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="860" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="861" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToInt64%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="862" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="863" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToSByte(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="864" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The value of the current instance, converted to an <ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.SByte" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="865" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="866" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="867" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToSByte(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToSByte%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="868" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="869" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToSingle(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="870" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>The value of the current instance, unchanged.</source>
          <target state="translated">変更されていない、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="871" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="872" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToSingle(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="873" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The type to which to convert this <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> value.</source>
          <target state="translated">この <ph id="ph1">&lt;see cref="T:System.Single" /&gt;</ph> 値の変換後の型。</target>       </trans-unit>
        <trans-unit id="874" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>An object that supplies information about the format of the returned value.</source>
          <target state="translated">戻り値の書式に関する情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="875" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToType(System.Type,System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="876" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The value of the current instance, converted to <ph id="ph1">&lt;paramref name="type" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="type" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="877" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="878" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="879" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToType(System.Type,System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> in Visual Basic) <ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、 <ph id="ph1">`static`</ph> (<ph id="ph2">`Shared`</ph> Visual Basic で)<ph id="ph3">&lt;xref:System.Convert.ChangeType%2A?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="880" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="881" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt16(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="882" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt16" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="883" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="884" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="885" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt16(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt16%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="886" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="887" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt32(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="888" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt32" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="889" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="890" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="891" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt32(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt32%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="892" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This parameter is ignored.</source>
          <target state="translated">このパラメーターは無視されます。</target>       </trans-unit>
        <trans-unit id="893" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>For a description of this member, see <ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>.</source>
          <target state="translated">このメンバーの詳細については、「<ph id="ph1">&lt;see cref="M:System.IConvertible.ToUInt64(System.IFormatProvider)" /&gt;</ph>」をご覧ください。</target>       </trans-unit>
        <trans-unit id="894" translate="yes" xml:space="preserve" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The value of the current instance, converted to a <ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.UInt64" /&gt;</ph> に変換後の、現在のインスタンスの値。</target>       </trans-unit>
        <trans-unit id="895" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>This member is an explicit interface member implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス メンバーの実装です。</target>       </trans-unit>
        <trans-unit id="896" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.Single&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.Single&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IConvertible&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="897" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.System#IConvertible#ToUInt64(System.IFormatProvider)">
          <source>The recommended alternative is to call the <ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">推奨される代替手段が呼び出されて、<ph id="ph1">&lt;xref:System.Convert.ToUInt64%28System.Single%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="898" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">このインスタンスの数値を、それと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="899" translate="yes" xml:space="preserve" uid="M:System.Single.ToString">
          <source>Converts the numeric value of this instance to its equivalent string representation.</source>
          <target state="translated">このインスタンスの数値を、それと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="900" translate="yes" xml:space="preserve" uid="M:System.Single.ToString">
          <source>The string representation of the value of this instance.</source>
          <target state="translated">このインスタンスの値の文字列形式。</target>       </trans-unit>
        <trans-unit id="901" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The <ph id="ph1">&lt;xref:System.Single.ToString&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value in the default ("G", or general) format of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString&gt;</ph>メソッドの形式、<ph id="ph2">&lt;xref:System.Single&gt;</ph>現在のカルチャの形式 ("G"、または [全般]) の既定の値します。</target>       </trans-unit>
        <trans-unit id="902" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>If you want to specify a different format or culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">別の形式またはカルチャを指定する場合は、他のオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph>メソッドは、次のようにします。</target>       </trans-unit>
        <trans-unit id="903" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>To use format</source>
          <target state="translated">形式を使用するには</target>       </trans-unit>
        <trans-unit id="904" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>For culture</source>
          <target state="translated">カルチャの</target>       </trans-unit>
        <trans-unit id="905" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Use the overload</source>
          <target state="translated">オーバー ロードを使用します。</target>       </trans-unit>
        <trans-unit id="906" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="907" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="908" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="909" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="910" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="911" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="912" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or a string of the form:</source>
          <target state="translated">戻り値は、 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>、または形式の文字列。</target>       </trans-unit>
        <trans-unit id="913" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</source>
          <target state="translated">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</target>       </trans-unit>
        <trans-unit id="914" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">省略可能な要素は角かっこで囲まれています ([および])。</target>       </trans-unit>
        <trans-unit id="915" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Elements that contain the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">数字の 0 から 9 までの一連の"digits"という語を含む要素で構成されます。</target>       </trans-unit>
        <trans-unit id="916" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The following table lists each element:</source>
          <target state="translated">次の表に、各要素を示します。</target>       </trans-unit>
        <trans-unit id="917" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="918" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="919" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="920" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">負の記号または正の記号。</target>       </trans-unit>
        <trans-unit id="921" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="922" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A series of digits specifying the integral part of the number.</source>
          <target state="translated">一連の数字の数の整数部分を指定します。</target>       </trans-unit>
        <trans-unit id="923" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整数の桁がなくてもかまいません桁の小数部がある場合。</target>       </trans-unit>
        <trans-unit id="924" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>'.'</source>
          <target state="translated">'.'</target>       </trans-unit>
        <trans-unit id="925" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="926" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="927" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A series of digits specifying the fractional part of the number.</source>
          <target state="translated">一連の数字の数の小数部を指定します。</target>       </trans-unit>
        <trans-unit id="928" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>'e'</source>
          <target state="translated">' e'</target>       </trans-unit>
        <trans-unit id="929" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A lowercase character 'e', indicating exponential (scientific) notation.</source>
          <target state="translated">小文字"e"を示す文字指数表記。</target>       </trans-unit>
        <trans-unit id="930" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="931" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>A series of digits specifying an exponent.</source>
          <target state="translated">一連の数字の指数部を指定します。</target>       </trans-unit>
        <trans-unit id="932" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</source>
          <target state="translated">戻り値の例をいくつかは、「100」、「-123,456,789」、"123.45 e + 6"、「500」、「3.1416」、「600」、「-0.123」と"-Infinity"です。</target>       </trans-unit>
        <trans-unit id="933" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="934" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="935" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="936" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The following example uses the default <ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method to display the string representations of a number of <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次の例では、既定値<ph id="ph1">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph>の数の文字列形式を表示するメソッドを<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="937" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString">
          <source>The following code example illustrates the use of the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29&gt;</ph> method along with the <ph id="ph2">&lt;xref:System.Single.ToString&gt;</ph> method.</source>
          <target state="translated">次のコード例の使用を示しています、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29&gt;</ph>メソッドと共に、<ph id="ph2">&lt;xref:System.Single.ToString&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="938" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="939" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified culture-specific format information.</source>
          <target state="translated">このインスタンスの数値を、指定したカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="940" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="provider" /&gt;</ph> で指定された、このインスタンスの値の文字列形式。</target>       </trans-unit>
        <trans-unit id="941" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Single.ToString%28System.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value in the default ("G", or general) format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%28System.IFormatProvider%29&gt;</ph>メソッドの形式、<ph id="ph2">&lt;xref:System.Single&gt;</ph>値の既定値 ("G"、または [全般]) で指定されたカルチャの形式です。</target>       </trans-unit>
        <trans-unit id="942" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>If you want to specify a different format or the current culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">別の形式または現在のカルチャを指定する場合は、他のオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph>メソッドは、次のようにします。</target>       </trans-unit>
        <trans-unit id="943" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">形式を使用するには</target>       </trans-unit>
        <trans-unit id="944" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">カルチャの</target>       </trans-unit>
        <trans-unit id="945" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">オーバー ロードを使用します。</target>       </trans-unit>
        <trans-unit id="946" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="947" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="948" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="949" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="950" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="951" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="952" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or a string of the form:</source>
          <target state="translated">戻り値は、 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>、または形式の文字列。</target>       </trans-unit>
        <trans-unit id="953" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</source>
          <target state="translated">[sign]integral-digits[.[fractional-digits]][e[sign]exponential-digits]</target>       </trans-unit>
        <trans-unit id="954" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Optional elements are framed in square brackets ([ and ]).</source>
          <target state="translated">省略可能な要素は角かっこで囲まれています ([および])。</target>       </trans-unit>
        <trans-unit id="955" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Elements containing the term "digits" consist of a series of numeric characters ranging from 0 to 9.</source>
          <target state="translated">数字の 0 から 9 までの一連の"digits"という語を含む要素で構成されます。</target>       </trans-unit>
        <trans-unit id="956" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The following table lists each element.</source>
          <target state="translated">次の表には、各要素が一覧表示します。</target>       </trans-unit>
        <trans-unit id="957" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="958" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="959" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>sign</source>
          <target state="translated">sign</target>       </trans-unit>
        <trans-unit id="960" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">負の記号または正の記号。</target>       </trans-unit>
        <trans-unit id="961" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>integral-digits</source>
          <target state="translated">integral-digits</target>       </trans-unit>
        <trans-unit id="962" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A series of digits specifying the integral part of the number.</source>
          <target state="translated">一連の数字の数の整数部分を指定します。</target>       </trans-unit>
        <trans-unit id="963" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整数の桁がなくてもかまいません桁の小数部がある場合。</target>       </trans-unit>
        <trans-unit id="964" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>'.'</source>
          <target state="translated">'.'</target>       </trans-unit>
        <trans-unit id="965" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="966" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>fractional-digits</source>
          <target state="translated">fractional-digits</target>       </trans-unit>
        <trans-unit id="967" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A series of digits specifying the fractional part of the number.</source>
          <target state="translated">一連の数字の数の小数部を指定します。</target>       </trans-unit>
        <trans-unit id="968" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>'e'</source>
          <target state="translated">' e'</target>       </trans-unit>
        <trans-unit id="969" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A lowercase character 'e', indicating exponential (scientific) notation.</source>
          <target state="translated">小文字"e"を示す文字指数表記。</target>       </trans-unit>
        <trans-unit id="970" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>exponential-digits</source>
          <target state="translated">exponential-digits</target>       </trans-unit>
        <trans-unit id="971" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>A series of digits specifying an exponent.</source>
          <target state="translated">一連の数字の指数部を指定します。</target>       </trans-unit>
        <trans-unit id="972" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Some examples of the return value are "100", "-123,456,789", "123.45e+6", "500", "3.1416", "600", "-0.123", and "-Infinity".</source>
          <target state="translated">戻り値の例をいくつかは、「100」、「-123,456,789」、"123.45 e + 6"、「500」、「3.1416」、「600」、「-0.123」と"-Infinity"です。</target>       </trans-unit>
        <trans-unit id="973" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="974" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="975" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="976" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装が<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="977" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">通常、<ph id="ph1">`provider`</ph>は、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>オブジェクトまたは<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="978" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</target>       </trans-unit>
        <trans-unit id="979" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the return value is formatted using the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> data for the current culture.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>を使用して、戻り値が書式設定、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>データ、現在のカルチャ。</target>       </trans-unit>
        <trans-unit id="980" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>To convert a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value to its string representation using a specified culture and a specific format string, call the <ph id="ph2">&lt;xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph> method.</source>
          <target state="translated">変換する、<ph id="ph1">&lt;xref:System.Single&gt;</ph>を指定したカルチャと特定の形式の文字列では、呼び出しを使用して、文字列形式の値、<ph id="ph2">&lt;xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29?displayProperty=nameWithType&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="981" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.IFormatProvider)">
          <source>The following example displays the string representation of two <ph id="ph1">&lt;xref:System.Single&gt;</ph> values using <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> objects that represent several different cultures.</source>
          <target state="translated">次の例では、2 つの文字列形式を<ph id="ph1">&lt;xref:System.Single&gt;</ph>を使用して値<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>を複数の異なるカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="982" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String)">
          <source>A numeric format string.</source>
          <target state="translated">数値書式指定文字列。</target>       </trans-unit>
        <trans-unit id="983" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String)">
          <source>Converts the numeric value of this instance to its equivalent string representation, using the specified format.</source>
          <target state="translated">指定した書式を使用して、このインスタンスの数値を、それと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="984" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> で指定された、このインスタンスの値の文字列形式。</target>       </trans-unit>
        <trans-unit id="985" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The <ph id="ph1">&lt;xref:System.Single.ToString%28System.String%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value in a specified format by using the conventions of the current culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%28System.String%29&gt;</ph>メソッドの形式、<ph id="ph2">&lt;xref:System.Single&gt;</ph>現在のカルチャの規則を使用して、指定した書式の値。</target>       </trans-unit>
        <trans-unit id="986" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>If you want to use the default ("G", or general) format or specify a different culture, use the other overloads of the <ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">既定値 ("G"、または [全般]) を使用する場合は、書式を設定または別のカルチャを指定して、他のオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph>メソッドは、次のように。</target>       </trans-unit>
        <trans-unit id="987" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>To use format</source>
          <target state="translated">形式を使用するには</target>       </trans-unit>
        <trans-unit id="988" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>For culture</source>
          <target state="translated">カルチャの</target>       </trans-unit>
        <trans-unit id="989" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>Use the overload</source>
          <target state="translated">オーバー ロードを使用します。</target>       </trans-unit>
        <trans-unit id="990" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="991" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="992" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="993" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="994" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="995" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="996" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or the string representation of the value of the current instance, as specified by <ph id="ph4">`format`</ph>.</source>
          <target state="translated">戻り値は、 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>、またはで指定したとおり、現在のインスタンスの値の文字列形式を<ph id="ph4">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="997" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターには、D、X を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせを指定できます。</target>       </trans-unit>
        <trans-unit id="998" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>If format is <ph id="ph1">`null`</ph> or an empty string, the return value is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">形式の場合<ph id="ph1">`null`</ph>または戻り値、空の文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</target>       </trans-unit>
        <trans-unit id="999" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="1000" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1001" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1002" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</source>
          <target state="translated">既定では、戻り値にはのみが含まれています 7 桁有効桁数には 9 桁の数字の最大数は内部的に保持されています。</target>       </trans-unit>
        <trans-unit id="1003" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>If the value of this instance has greater than 7 digits, <ph id="ph1">&lt;xref:System.Single.ToString%28System.String%29&gt;</ph> returns <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph> instead of the expected number.</source>
          <target state="translated">このインスタンスの値は 7 桁の数字より大きい場合<ph id="ph1">&lt;xref:System.Single.ToString%28System.String%29&gt;</ph>返します<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>予想された数の代わりにします。</target>       </trans-unit>
        <trans-unit id="1004" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>If you require more precision, specify <ph id="ph1">`format`</ph> with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</source>
          <target state="translated">高い精度を必要とする場合は、指定<ph id="ph1">`format`</ph>が常に返します、9 桁の有効桁数、または"R"、"G9"書式指定する場合を返します 7 桁の数字数は、数を表現できる場合は最大有効桁数を持つ場合は、有効桁数または 9 桁で表すことができます。</target>       </trans-unit>
        <trans-unit id="1005" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The following example defines a numeric value and formats it as a currency value by using the "C" standard numeric format string and as a numeric value to three decimal places by using the "N" standard numeric format string.</source>
          <target state="translated">次の例では、数値の値を定義し、書式を通貨値として"C"標準の数値書式指定文字列を使用して、小数点以下 3 桁の数値として"N"の標準数値書式指定文字列を使用しています。</target>       </trans-unit>
        <trans-unit id="1006" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The result strings are formatted by using the conventions of the en-US culture.</source>
          <target state="translated">結果文字列は EN-US カルチャの規則を使用して書式設定されます。</target>       </trans-unit>
        <trans-unit id="1007" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>For more information on numeric format strings, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定文字列の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1008" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>The following example displays several <ph id="ph1">&lt;xref:System.Single&gt;</ph> values using each of the supported standard numeric format specifiers together with two custom numeric format strings.</source>
          <target state="translated">次の例では、いくつかが表示されます<ph id="ph1">&lt;xref:System.Single&gt;</ph>を使用して、サポートされている標準数値書式指定子と共に 2 つのカスタム数値書式指定文字列の各値です。</target>       </trans-unit>
        <trans-unit id="1009" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>One of those custom format strings illustrates how to pad a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value with leading zeros.</source>
          <target state="translated">余白を埋めるための方法を示しています、カスタム書式指定文字列の 1 つ、<ph id="ph1">&lt;xref:System.Single&gt;</ph>先行ゼロを持つ値です。</target>       </trans-unit>
        <trans-unit id="1010" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String)">
          <source>In converting the numeric values to strings, the example uses the formatting conventions of the en-US culture.</source>
          <target state="translated">数値の値を文字列に変換するのには、EN-US カルチャの書式指定規則を使用します。</target>       </trans-unit>
        <trans-unit id="1011" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String)">
          <source><ph id="ph1">&lt;paramref name="format" /&gt;</ph> is invalid.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> が無効です。</target>       </trans-unit>
        <trans-unit id="1012" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>A numeric format string.</source>
          <target state="translated">数値書式指定文字列。</target>       </trans-unit>
        <trans-unit id="1013" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>An object that supplies culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1014" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Converts the numeric value of this instance to its equivalent string representation using the specified format and culture-specific format information.</source>
          <target state="translated">このインスタンスの数値を、指定した書式およびカルチャ固有の書式情報を使用して、それと等価な文字列形式に変換します。</target>       </trans-unit>
        <trans-unit id="1015" translate="yes" xml:space="preserve" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The string representation of the value of this instance as specified by <ph id="ph1">&lt;paramref name="format" /&gt;</ph> and <ph id="ph2">&lt;paramref name="provider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="format" /&gt;</ph> および <ph id="ph2">&lt;paramref name="provider" /&gt;</ph> で指定された、このインスタンスの値の文字列形式。</target>       </trans-unit>
        <trans-unit id="1016" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">&lt;xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph> method formats a <ph id="ph2">&lt;xref:System.Single&gt;</ph> value in a specified format of a specified culture.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.Single.ToString%28System.String%2CSystem.IFormatProvider%29&gt;</ph>メソッドの形式、<ph id="ph2">&lt;xref:System.Single&gt;</ph>特定のカルチャの指定した形式の値。</target>       </trans-unit>
        <trans-unit id="1017" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>If you want to use default format or culture settings, use the other overloads of the <ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph> method, as follows:</source>
          <target state="translated">既定の形式またはカルチャの設定を使用する場合は、他のオーバー ロードを使用して、<ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph>メソッドは、次のようにします。</target>       </trans-unit>
        <trans-unit id="1018" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>To use format</source>
          <target state="translated">形式を使用するには</target>       </trans-unit>
        <trans-unit id="1019" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>For culture</source>
          <target state="translated">カルチャの</target>       </trans-unit>
        <trans-unit id="1020" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Use the overload</source>
          <target state="translated">オーバー ロードを使用します。</target>       </trans-unit>
        <trans-unit id="1021" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="1022" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="1023" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Default ("G") format</source>
          <target state="translated">既定値 ("G") 書式</target>       </trans-unit>
        <trans-unit id="1024" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>A specific culture</source>
          <target state="translated">特定のカルチャ</target>       </trans-unit>
        <trans-unit id="1025" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>A specific format</source>
          <target state="translated">特定の形式</target>       </trans-unit>
        <trans-unit id="1026" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Default (current) culture</source>
          <target state="translated">(現在) の既定のカルチャ</target>       </trans-unit>
        <trans-unit id="1027" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The return value can be <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>, or the string representation of the value of the current instance, as specified by <ph id="ph4">`format`</ph>.</source>
          <target state="translated">戻り値は、 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>、またはで指定したとおり、現在のインスタンスの値の文字列形式を<ph id="ph4">`format`</ph>です。</target>       </trans-unit>
        <trans-unit id="1028" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`format`</ph> parameter can be any valid standard numeric format specifier except for D and X, as well as any combination of custom numeric format specifiers.</source>
          <target state="translated"><ph id="ph1">`format`</ph>パラメーターには、D、X を除く任意の有効な標準の数値書式指定子およびカスタム数値書式指定子の任意の組み合わせを指定できます。</target>       </trans-unit>
        <trans-unit id="1029" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`format`</ph> is <ph id="ph2">`null`</ph> or an empty string, the return value for this instance is formatted with the general numeric format specifier ("G").</source>
          <target state="translated">場合<ph id="ph1">`format`</ph>は<ph id="ph2">`null`</ph>またはこのインスタンスの戻り値、空の文字列が、一般的な数値書式指定子 ("G") でフォーマットされています。</target>       </trans-unit>
        <trans-unit id="1030" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The .NET Framework provides extensive formatting support, which is described in greater detail in the following formatting topics:</source>
          <target state="translated">.NET Framework では、次の書式設定のトピックで詳しく説明されている、広範な書式設定サポートを提供します。</target>       </trans-unit>
        <trans-unit id="1031" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>For more information about numeric format specifiers, see <bpt id="p1">[</bpt>Standard Numeric Format Strings<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept> and <bpt id="p2">[</bpt>Custom Numeric Format Strings<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>.</source>
          <target state="translated">数値書式指定子の詳細については、次を参照してください。<bpt id="p1">[</bpt>標準の数値書式指定文字列<ept id="p1">](~/docs/standard/base-types/standard-numeric-format-strings.md)</ept>と<bpt id="p2">[</bpt>カスタム数値書式指定文字列<ept id="p2">](~/docs/standard/base-types/custom-numeric-format-strings.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1032" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>For more information about formatting, see <bpt id="p1">[</bpt>Formatting Types<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>.</source>
          <target state="translated">書式設定に関する詳細については、次を参照してください。<bpt id="p1">[</bpt>型の書式設定<ept id="p1">](~/docs/standard/base-types/formatting-types.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="1033" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装が<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1034" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>Typically, <ph id="ph1">`provider`</ph> is a <ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object or a <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object.</source>
          <target state="translated">通常、<ph id="ph1">`provider`</ph>は、<ph id="ph2">&lt;xref:System.Globalization.CultureInfo&gt;</ph>オブジェクトまたは<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="1035" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The <ph id="ph1">`provider`</ph> parameter supplies culture-specific information used in formatting.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターの書式設定に使用されるカルチャに固有の情報を提供します。</target>       </trans-unit>
        <trans-unit id="1036" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the return value is formatted with the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object for the current culture.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>、戻り値の書式で、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のカルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="1037" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>By default, the return value only contains 7 digits of precision although a maximum of 9 digits is maintained internally.</source>
          <target state="translated">既定では、戻り値にはのみが含まれています 7 桁有効桁数には 9 桁の数字の最大数は内部的に保持されています。</target>       </trans-unit>
        <trans-unit id="1038" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>If the value of this instance has greater than 7 digits, <ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph> returns <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph> or <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph> instead of the expected number.</source>
          <target state="translated">このインスタンスの値は 7 桁の数字より大きい場合<ph id="ph1">&lt;xref:System.Single.ToString%2A&gt;</ph>返します<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>または<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>予想された数の代わりにします。</target>       </trans-unit>
        <trans-unit id="1039" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>If you require more precision, specify <ph id="ph1">`format`</ph> with the "G9" format specification, which always returns 9 digits of precision, or "R", which returns 7 digits if the number can be represented with that precision or 9 digits if the number can only be represented with maximum precision.</source>
          <target state="translated">高い精度を必要とする場合は、指定<ph id="ph1">`format`</ph>が常に返します、9 桁の有効桁数、または"R"、"G9"書式指定する場合を返します 7 桁の数字数は、数を表現できる場合は最大有効桁数を持つ場合は、有効桁数または 9 桁で表すことができます。</target>       </trans-unit>
        <trans-unit id="1040" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.ToString(System.String,System.IFormatProvider)">
          <source>The following example displays a <ph id="ph1">&lt;xref:System.Single&gt;</ph> value using each of the supported standard numeric format specifiers for several different cultures.</source>
          <target state="translated">次の例を表示、<ph id="ph1">&lt;xref:System.Single&gt;</ph>値のサポートされている標準数値書式指定子のいくつかの異なるカルチャを使用します。</target>       </trans-unit>
        <trans-unit id="1041" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>Converts the string representation of a number to its single-precision floating-point number equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等しい単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="1042" translate="yes" xml:space="preserve" uid="T:System.Single">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">戻り値は変換が成功したか失敗したかを示します。</target>       </trans-unit>
        <trans-unit id="1043" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A string representing a number to convert.</source>
          <target state="translated">変換する数値を表す文字列。</target>       </trans-unit>
        <trans-unit id="1044" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>When this method returns, contains single-precision floating-point number equivalent to the numeric value or symbol contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">変換が成功した場合、このメソッドから制御が戻った時点で、<bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に格納された数値または記号に等しい単精度浮動小数点数を格納します。変換に失敗した場合は 0 を格納します。</target>       </trans-unit>
        <trans-unit id="1045" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not a number in a valid format, or represents a number less than <ph id="ph3">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> であるか、有効な書式の数値ではない、または <ph id="ph3">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> より小さいか <ph id="ph4">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を表している場合、変換は失敗します。</target>       </trans-unit>
        <trans-unit id="1046" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">このパラメーターは初期化されていない状態で渡されています。<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> で最初に指定された任意の値が上書きされます。</target>       </trans-unit>
        <trans-unit id="1047" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Converts the string representation of a number to its single-precision floating-point number equivalent.</source>
          <target state="translated">数値の文字列形式を、それと等しい単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="1048" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">戻り値は変換が成功したか失敗したかを示します。</target>       </trans-unit>
        <trans-unit id="1049" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が正常に変換された場合は <ph id="ph2">&lt;paramref name="s" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1050" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">このオーバー ロードとは異なります、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%29?displayProperty=nameWithType&gt;</ph>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</target>       </trans-unit>
        <trans-unit id="1051" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">テストするため、例外処理を使用する必要がある、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>イベントで<ph id="ph2">`s`</ph>無効なため、正常に解析することはできません。</target>       </trans-unit>
        <trans-unit id="1052" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph> (the string comparison is case-sensitive), or a string of the form:</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>文字列比較では、大文字小文字を区別)、または形式の文字列。</target>       </trans-unit>
        <trans-unit id="1053" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>[ws][sign][integral-digits,]integral-digits[.[fractional-digits]][e[sign]exponential-digits][ws]</source>
          <target state="translated">[ws][記号][整数の桁]、整数の桁 [です [。小数部の桁] [e [サインイン] 指数の桁] [ws]</target>       </trans-unit>
        <trans-unit id="1054" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Elements in square brackets are optional.</source>
          <target state="translated">角かっこ内の要素は省略できます。</target>       </trans-unit>
        <trans-unit id="1055" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="1056" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="1057" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="1058" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1059" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A series of white-space characters.</source>
          <target state="translated">一連の空白文字。</target>       </trans-unit>
        <trans-unit id="1060" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1061" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A negative sign or positive sign symbol.</source>
          <target state="translated">負の記号または正の記号。</target>       </trans-unit>
        <trans-unit id="1062" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1063" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1064" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整数の桁がなくてもかまいません桁の小数部がある場合。</target>       </trans-unit>
        <trans-unit id="1065" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1066" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A culture-specific group separator symbol.</source>
          <target state="translated">カルチャ固有のグループの区切り記号です。</target>       </trans-unit>
        <trans-unit id="1067" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1068" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="1069" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1070" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1071" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>E<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>E<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1072" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>An uppercase or lowercase character 'e', that indicates exponential (scientific) notation.</source>
          <target state="translated">大文字または小文字の文字 'e' を指数表記を示すです。</target>       </trans-unit>
        <trans-unit id="1073" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1074" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>A series of numeric characters ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1075" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter is interpreted using a combination of the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph> and <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flags.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターの組み合わせを使用して解釈されます、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.Float?displayProperty=nameWithType&gt;</ph>と<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1076" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>This means that white space and thousands separators are allowed but currency symbols are not.</source>
          <target state="translated">つまり、空白文字と桁区切り記号が許可されているが、通貨記号は表示されません。</target>       </trans-unit>
        <trans-unit id="1077" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>To explicitly define the elements (such as currency symbols, thousands separators, and white space) that can be present in <ph id="ph1">`s`</ph>, use the <ph id="ph2">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph> method overload.</source>
          <target state="translated">要素を明示的に定義 (などの通貨記号、桁区切り記号、および空白) 内に存在することができます<ph id="ph1">`s`</ph>を使用して、<ph id="ph2">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="1078" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter is parsed using the formatting information in a <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that is initialized for the current system culture.</source>
          <target state="translated"><ph id="ph1">`s`</ph>で書式設定情報を使用してパラメーターを解析、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のシステムのカルチャに初期化されるオブジェクト。</target>       </trans-unit>
        <trans-unit id="1079" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>For more information, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">詳細については、「<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrentInfo%2A?displayProperty=nameWithType&gt;</ph>」を参照してください。</target>       </trans-unit>
        <trans-unit id="1080" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>To parse a string using the formatting information of some other specified culture, use the <ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph> method overload.</source>
          <target state="translated">文字列を解析するその他の書式情報を使用して指定されたカルチャを使用して、<ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph>メソッドのオーバー ロードします。</target>       </trans-unit>
        <trans-unit id="1081" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>Ordinarily, if you pass the <ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph> method a string that is created by calling the <ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph> method, the original <ph id="ph3">&lt;xref:System.Single&gt;</ph> value is returned.</source>
          <target state="translated">通常、渡した場合、<ph id="ph1">&lt;xref:System.Single.TryParse%2A?displayProperty=nameWithType&gt;</ph>メソッドを呼び出すことによって作成される文字列を<ph id="ph2">&lt;xref:System.Single.ToString%2A?displayProperty=nameWithType&gt;</ph>、元のメソッド<ph id="ph3">&lt;xref:System.Single&gt;</ph>値が返されます。</target>       </trans-unit>
        <trans-unit id="1082" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>However, because of a loss of precision, the values may not be equal.</source>
          <target state="translated">ただし、精度の損失、ため値可能性がありますいないなります。</target>       </trans-unit>
        <trans-unit id="1083" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="1084" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1085" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>The following example uses the <ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29&gt;</ph> method to convert the string representations of numeric values to <ph id="ph2">&lt;xref:System.Single&gt;</ph> values.</source>
          <target state="translated">次の例では、<ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Single%40%29&gt;</ph>数値の文字列形式を変換する方法の<ph id="ph2">&lt;xref:System.Single&gt;</ph>値。</target>       </trans-unit>
        <trans-unit id="1086" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Single@)">
          <source>It assumes that en-US is the current culture.</source>
          <target state="translated">その EN-US では、現在のカルチャと見なします。</target>       </trans-unit>
        <trans-unit id="1087" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A string representing a number to convert.</source>
          <target state="translated">変換する数値を表す文字列。</target>       </trans-unit>
        <trans-unit id="1088" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A bitwise combination of enumeration values that indicates the permitted format of <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に許可されている書式を示す列挙値のビットごとの組み合わせ。</target>       </trans-unit>
        <trans-unit id="1089" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A typical value to specify is <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> combined with <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph>.</source>
          <target state="translated">通常指定する値は、<ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowThousands" /&gt;</ph> と組み合わせた <ph id="ph1">&lt;see cref="F:System.Globalization.NumberStyles.Float" /&gt;</ph> です。</target>       </trans-unit>
        <trans-unit id="1090" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>An object that supplies culture-specific formatting information about <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に関するカルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1091" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>When this method returns, contains the single-precision floating-point number equivalent to the numeric value or symbol contained in <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept>, if the conversion succeeded, or zero if the conversion failed.</source>
          <target state="translated">変換が成功した場合、このメソッドから制御が戻った時点で、<bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> に格納された数値または記号に等しい単精度浮動小数点数を格納します。変換に失敗した場合は 0 を格納します。</target>       </trans-unit>
        <trans-unit id="1092" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The conversion fails if the <bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> parameter is <ph id="ph1">&lt;see langword="null" /&gt;</ph> or <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph>, is not in a format compliant with <bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept>, represents a number less than <ph id="ph3">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> or greater than <ph id="ph4">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph>, or if <bpt id="p3">&lt;c&gt;</bpt>style<ept id="p3">&lt;/c&gt;</ept> is not a valid combination of <ph id="ph5">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> enumerated constants.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>s<ept id="p1">&lt;/c&gt;</ept> パラメーターが <ph id="ph1">&lt;see langword="null" /&gt;</ph> または <ph id="ph2">&lt;see cref="F:System.String.Empty" /&gt;</ph> である、<bpt id="p2">&lt;c&gt;</bpt>style<ept id="p2">&lt;/c&gt;</ept> に準拠した形式ではない、<ph id="ph3">&lt;see cref="F:System.Single.MinValue" /&gt;</ph> より小さいか <ph id="ph4">&lt;see cref="F:System.Single.MaxValue" /&gt;</ph> より大きい数値を示す、または <bpt id="p3">&lt;c&gt;</bpt>style<ept id="p3">&lt;/c&gt;</ept> が <ph id="ph5">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 列挙定数の有効な組み合わせではない場合、変換は失敗します。</target>       </trans-unit>
        <trans-unit id="1093" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>This parameter is passed uninitialized; any value originally supplied in <bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> will be overwritten.</source>
          <target state="translated">このパラメーターは初期化されていない状態で渡されています。<bpt id="p1">&lt;c&gt;</bpt>result<ept id="p1">&lt;/c&gt;</ept> で最初に指定された任意の値が上書きされます。</target>       </trans-unit>
        <trans-unit id="1094" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Converts the string representation of a number in a specified style and culture-specific format to its single-precision floating-point number equivalent.</source>
          <target state="translated">指定したスタイルおよびカルチャに固有の書式による数値の文字列形式を、それと等価な単精度浮動小数点数に変換します。</target>       </trans-unit>
        <trans-unit id="1095" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A return value indicates whether the conversion succeeded or failed.</source>
          <target state="translated">戻り値は変換が成功したか失敗したかを示します。</target>       </trans-unit>
        <trans-unit id="1096" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><ph id="ph1">&lt;see langword="true" /&gt;</ph> if <ph id="ph2">&lt;paramref name="s" /&gt;</ph> was converted successfully; otherwise, <ph id="ph3">&lt;see langword="false" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;see langword="true" /&gt;</ph> が正常に変換された場合は <ph id="ph2">&lt;paramref name="s" /&gt;</ph>。それ以外の場合は <ph id="ph3">&lt;see langword="false" /&gt;</ph>。</target>       </trans-unit>
        <trans-unit id="1097" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>This overload differs from the <ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph> method by returning a Boolean value that indicates whether the parse operation succeeded instead of returning the parsed numeric value.</source>
          <target state="translated">このオーバー ロードとは異なります、<ph id="ph1">&lt;xref:System.Single.Parse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%29&gt;</ph>解析の数値の値を返す代わりに、解析操作が成功したかどうかを示すブール値を返すメソッド。</target>       </trans-unit>
        <trans-unit id="1098" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>It eliminates the need to use exception handling to test for a <ph id="ph1">&lt;xref:System.FormatException&gt;</ph> in the event that <ph id="ph2">`s`</ph> is invalid and cannot be successfully parsed.</source>
          <target state="translated">テストするため、例外処理を使用する必要がある、<ph id="ph1">&lt;xref:System.FormatException&gt;</ph>イベントで<ph id="ph2">`s`</ph>無効なため、正常に解析することはできません。</target>       </trans-unit>
        <trans-unit id="1099" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`style`</ph> parameter defines the allowable format of the <ph id="ph2">`s`</ph> parameter for the parse operation to succeed.</source>
          <target state="translated"><ph id="ph1">`style`</ph>パラメーターの使用可能な形式を定義する、<ph id="ph2">`s`</ph>解析操作が成功するためのパラメーターです。</target>       </trans-unit>
        <trans-unit id="1100" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>It must be a combination of bit flags from the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> enumeration.</source>
          <target state="translated">ビット フラグの組み合わせを可能にする必要があります、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>列挙します。</target>       </trans-unit>
        <trans-unit id="1101" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The following <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> members are not supported:</source>
          <target state="translated">次<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>メンバーがサポートされていません。</target>       </trans-unit>
        <trans-unit id="1102" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter can contain <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>, <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph> for the culture indicated by <ph id="ph5">`provider`</ph>.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターを含めることができます<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.PositiveInfinitySymbol%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.NegativeInfinitySymbol%2A&gt;</ph>、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NaNSymbol%2A&gt;</ph>によって示されるカルチャ<ph id="ph5">`provider`</ph>です。</target>       </trans-unit>
        <trans-unit id="1103" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>In addition, depending on the value of <ph id="ph1">`style`</ph>, the <ph id="ph2">`s`</ph> parameter may include the following elements:</source>
          <target state="translated">値に応じてさらに、 <ph id="ph1">`style`</ph>、<ph id="ph2">`s`</ph>パラメーターは、次の要素を含めることがあります。</target>       </trans-unit>
        <trans-unit id="1104" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>[ws] [$] [sign][integral-digits,]integral-digits[.fractional-digits][e[sign]exponential-digits][ws]</source>
          <target state="translated">[ws][$][記号][整数の桁]、整数の桁 [.fractional 桁] [e [サインイン] 指数の桁] [ws]</target>       </trans-unit>
        <trans-unit id="1105" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Elements in square brackets ([ and ]) are optional.</source>
          <target state="translated">角かっこ ([ および ]) 内の要素は省略可能です。</target>       </trans-unit>
        <trans-unit id="1106" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The following table describes each element.</source>
          <target state="translated">次の表では、各要素について説明します。</target>       </trans-unit>
        <trans-unit id="1107" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Element</source>
          <target state="translated">要素</target>       </trans-unit>
        <trans-unit id="1108" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Description</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="1109" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>ws<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1110" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Optional white space.</source>
          <target state="translated">省略可能なホワイト スペースです。</target>       </trans-unit>
        <trans-unit id="1111" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>White space can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に空白文字は使用できません<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1112" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>It can appear at the end of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">末尾に表示できる<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowTrailingWhite?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1113" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A culture-specific currency symbol.</source>
          <target state="translated">カルチャ固有の通貨記号。</target>       </trans-unit>
        <trans-unit id="1114" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Its position in the string is defined by the <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph> or <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph> properties of the <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object returned by the <ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph> method of the <ph id="ph5">`provider`</ph> parameter.</source>
          <target state="translated">文字列内での位置がによって定義された、<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyNegativePattern%2A?displayProperty=nameWithType&gt;</ph>または<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyPositivePattern%2A?displayProperty=nameWithType&gt;</ph>のプロパティ、<ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>によって返されるオブジェクト、<ph id="ph4">&lt;xref:System.IFormatProvider.GetFormat%2A?displayProperty=nameWithType&gt;</ph>のメソッド、<ph id="ph5">`provider`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1115" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The currency symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">通貨記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowCurrencySymbol?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1116" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>sign<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1117" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>An optional sign.</source>
          <target state="translated">省略可能な符号の場合。</target>       </trans-unit>
        <trans-unit id="1118" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The sign can appear at the beginning of <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph> flag, and it can appear at the end of <ph id="ph4">`s`</ph> if <ph id="ph5">`style`</ph> includes the <ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">先頭に表示できる符号<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowLeadingSign?displayProperty=nameWithType&gt;</ph>フラグ、およびそのがの末尾に置くことができます<ph id="ph4">`s`</ph>場合<ph id="ph5">`style`</ph>が含まれています、<ph id="ph6">&lt;xref:System.Globalization.NumberStyles.AllowTrailingSign?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1119" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Parentheses can be used in <ph id="ph1">`s`</ph> to indicate a negative value if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">かっこを使用できる<ph id="ph1">`s`</ph>負の値を指定する場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowParentheses?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1120" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1121" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A series of digits ranging from 0 to 9 that specify the integral part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 の数の整数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1122" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Integral-digits can be absent if there are fractional-digits.</source>
          <target state="translated">整数の桁がなくてもかまいません桁の小数部がある場合。</target>       </trans-unit>
        <trans-unit id="1123" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>,<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A culture-specific thousands separator symbol.</source>
          <target state="translated">カルチャ固有の桁区切り記号。</target>       </trans-unit>
        <trans-unit id="1125" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The current culture's thousands separator symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの数千に区切り記号が表示できる<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowThousands?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1126" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1127" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A culture-specific decimal point symbol.</source>
          <target state="translated">カルチャに固有の小数点記号です。</target>       </trans-unit>
        <trans-unit id="1128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The current culture's decimal point symbol can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">現在のカルチャの小数点記号に表示される<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1130" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A series of digits ranging from 0 to 9 that specify the fractional part of the number.</source>
          <target state="translated">一連の数字の 0 から 9 数の小数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1131" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Fractional digits can appear in <ph id="ph1">`s`</ph> if <ph id="ph2">`style`</ph> includes the <ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated">小数部の桁が表示できる<ph id="ph1">`s`</ph>場合<ph id="ph2">`style`</ph>が含まれています、<ph id="ph3">&lt;xref:System.Globalization.NumberStyles.AllowDecimalPoint?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1132" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>e<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>e<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1133" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The e or E character, which indicates that <ph id="ph1">`s`</ph> can represent a number using exponential notation.</source>
          <target state="translated">E または E 文字は、あることを示す<ph id="ph1">`s`</ph>指数表記を使用して数値を表すことができます。</target>       </trans-unit>
        <trans-unit id="1134" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter can represent a number in exponential notation if style includes the <ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph> flag.</source>
          <target state="translated"><ph id="ph1">`s`</ph>スタイルが含まれている場合、パラメーターは指数表記の数値を表すことができます、<ph id="ph2">&lt;xref:System.Globalization.NumberStyles.AllowExponent?displayProperty=nameWithType&gt;</ph>フラグ。</target>       </trans-unit>
        <trans-unit id="1135" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>exponential-digits<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A series of digits ranging from 0 to 9 that specify an exponent.</source>
          <target state="translated">一連の数字の 0 から 9 指数部を指定するまでです。</target>       </trans-unit>
        <trans-unit id="1137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>A string with digits only (which corresponds to the <ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph> style) always parses successfully.</source>
          <target state="translated">数字のみを含む文字列 (に対応する、<ph id="ph1">&lt;xref:System.Globalization.NumberStyles.None?displayProperty=nameWithType&gt;</ph>スタイル) が正常に解析します。</target>       </trans-unit>
        <trans-unit id="1138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The remaining <ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph> members control elements that may be but are not required to be present in the input string.</source>
          <target state="translated">残りの<ph id="ph1">&lt;xref:System.Globalization.NumberStyles?displayProperty=nameWithType&gt;</ph>メンバーを制御する可能性がありますが、入力文字列内に存在する必要はありません要素。</target>       </trans-unit>
        <trans-unit id="1139" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The following table indicates how individual <ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph> flags affect the elements that may be present in <ph id="ph2">`s`</ph>.</source>
          <target state="translated">次の表に示す個別<ph id="ph1">&lt;xref:System.Globalization.NumberStyles&gt;</ph>フラグに存在可能な要素に影響を与える<ph id="ph2">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="1140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>NumberStyles value</source>
          <target state="translated">NumberStyles 値</target>       </trans-unit>
        <trans-unit id="1141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Elements permitted in s in addition to digits</source>
          <target state="translated">数字だけでなく s で許可されている要素</target>       </trans-unit>
        <trans-unit id="1142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept> element only.</source>
          <target state="translated"><bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>要素のみです。</target>       </trans-unit>
        <trans-unit id="1143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>.<ept id="p1">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>.<ept id="p1">*</ept></target>       </trans-unit>
        <trans-unit id="1144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>and <bpt id="p1">*</bpt>fractional-digits<ept id="p1">*</ept> elements.</source>
          <target state="translated">および<bpt id="p1">*</bpt>小数部の桁<ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="1145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="1146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>This flag by itself supports values in the form <bpt id="p1">*</bpt>integral-digits<ept id="p1">*</ept>E<bpt id="p2">*</bpt>exponential-digits<ept id="p2">*</ept>; additional flags are needed to successfully parse strings in exponential notation with such elements as positive or negative signs and decimal point symbols.</source>
          <target state="translated">それ自体では、このフラグは、形式で値をサポートしている<bpt id="p1">*</bpt>整数の桁<ept id="p1">*</ept>E<bpt id="p2">*</bpt>指数の桁<ept id="p2">*</ept>以外の場合は追加のフラグが正常に正または負の符号および小数点記号などの要素を含む指数表記で文字列を解析する必要です。</target>       </trans-unit>
        <trans-unit id="1147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="1148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="1149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the beginning of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の先頭にある要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="1150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element at the end of <ph id="ph1">`s`</ph>.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>の末尾に要素<ph id="ph1">`s`</ph>です。</target>       </trans-unit>
        <trans-unit id="1151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>sign<ept id="p1">*</ept> element in the form of parentheses enclosing the numeric value.</source>
          <target state="translated"><bpt id="p1">*</bpt>記号<ept id="p1">*</ept>数値の値を囲むかっこの形式での要素。</target>       </trans-unit>
        <trans-unit id="1152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>,<ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt>、<ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="1153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt><ph id="ph1">$</ph><ept id="p1">*</ept> element.</source>
          <target state="translated"><bpt id="p1">*</bpt> <ph id="ph1">$</ph> <ept id="p1">*</ept>要素。</target>       </trans-unit>
        <trans-unit id="1154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>All.</source>
          <target state="translated">すべて。</target>       </trans-unit>
        <trans-unit id="1155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter cannot represent a hexadecimal number or a number in exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターには、16 進数または指数表記の数値を表すことはできません。</target>       </trans-unit>
        <trans-unit id="1156" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <bpt id="p1">*</bpt>ws<ept id="p1">*</ept> element at the beginning or end of <ph id="ph1">`s`</ph>, <bpt id="p2">*</bpt>sign<ept id="p2">*</ept> at the beginning of <ph id="ph2">`s`</ph>, and the <bpt id="p3">*</bpt>.<ept id="p3">*</ept></source>
          <target state="translated"><bpt id="p1">*</bpt>Ws<ept id="p1">*</ept>先頭または末尾の位置にある要素<ph id="ph1">`s`</ph>、<bpt id="p2">*</bpt>記号<ept id="p2">*</ept>の先頭に<ph id="ph2">`s`</ph>、および<bpt id="p3">*</bpt>です。<ept id="p3">*</ept></target>       </trans-unit>
        <trans-unit id="1157" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>symbol.</source>
          <target state="translated">記号です。</target>       </trans-unit>
        <trans-unit id="1158" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`s`</ph> parameter can also use exponential notation.</source>
          <target state="translated"><ph id="ph1">`s`</ph>パラメーターは、指数表記も使用できます。</target>       </trans-unit>
        <trans-unit id="1159" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`ws`</ph>, <ph id="ph2">`sign`</ph>, thousands separator (<bpt id="p1">*</bpt>,),<ept id="p1">*</ept> and decimal point (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) elements.</source>
          <target state="translated"><ph id="ph1">`ws`</ph>、 <ph id="ph2">`sign`</ph>、何千もの区切り記号 (<bpt id="p1">*</bpt>、)、<ept id="p1">*</ept>と小数点 (<bpt id="p2">*</bpt>.<ept id="p2">*</ept>) 要素です。</target>       </trans-unit>
        <trans-unit id="1160" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>All styles, except <ph id="ph1">`s`</ph> cannot represent a hexadecimal number.</source>
          <target state="translated">すべてのスタイルを除く<ph id="ph1">`s`</ph>16 進数を表すことはできません。</target>       </trans-unit>
        <trans-unit id="1161" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">`provider`</ph> parameter is an <ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph> implementation whose <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method returns a <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides culture-specific formatting information.</source>
          <target state="translated"><ph id="ph1">`provider`</ph>パラメーターは、<ph id="ph2">&lt;xref:System.IFormatProvider&gt;</ph>実装が<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>カルチャに固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1162" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>When the <ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph> method is invoked, it calls the <ph id="ph2">`provider`</ph> parameter's <ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method and passes it a <ph id="ph4">&lt;xref:System.Type&gt;</ph> object that represents the <ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> type.</source>
          <target state="translated">ときに、<ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29&gt;</ph>メソッドが呼び出され、呼び出し、<ph id="ph2">`provider`</ph>パラメーターの<ph id="ph3">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッド渡します、<ph id="ph4">&lt;xref:System.Type&gt;</ph>を表すオブジェクト、<ph id="ph5">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>型です。</target>       </trans-unit>
        <trans-unit id="1163" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method then returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides information about the format of the <ph id="ph3">`s`</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドが戻ります、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の形式に関する情報を提供するオブジェクト、<ph id="ph3">`s`</ph>パラメーター。</target>       </trans-unit>
        <trans-unit id="1164" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>There are three ways to use the <ph id="ph1">`provider`</ph> parameter to supply custom formatting information to the parse operation:</source>
          <target state="translated">3 つの方法を使用する、<ph id="ph1">`provider`</ph>パラメーター、解析操作にカスタムの書式情報を提供します。</target>       </trans-unit>
        <trans-unit id="1165" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>You can pass a <ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph> object that represents the culture that supplies formatting information.</source>
          <target state="translated">渡すことができます、<ph id="ph1">&lt;xref:System.Globalization.CultureInfo&gt;</ph>の書式情報を提供するカルチャを表すオブジェクト。</target>       </trans-unit>
        <trans-unit id="1166" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Its <ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph> method returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information for that culture.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.Globalization.CultureInfo.GetFormat%2A&gt;</ph>メソッドを返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>そのカルチャの数値の書式設定情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1167" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>You can pass the actual <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides numeric formatting information.</source>
          <target state="translated">実際に渡すことができます<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>数値書式設定情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1168" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>(Its implementation of <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph> just returns itself.)</source>
          <target state="translated">(その実装の<ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.GetFormat%2A&gt;</ph>自体を返すだけです)。</target>       </trans-unit>
        <trans-unit id="1169" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>You can pass a custom object that implements <ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>.</source>
          <target state="translated">実装するカスタム オブジェクトを渡すことができます<ph id="ph1">&lt;xref:System.IFormatProvider&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1170" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>Its <ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph> method instantiates and returns the <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object that provides formatting information.</source>
          <target state="translated">その<ph id="ph1">&lt;xref:System.IFormatProvider.GetFormat%2A&gt;</ph>メソッドがインスタンス化し、返します、<ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="1171" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>If <ph id="ph1">`provider`</ph> is <ph id="ph2">`null`</ph>, the formatting of <ph id="ph3">`s`</ph> is interpreted based on the <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph> object of the current culture.</source>
          <target state="translated">場合<ph id="ph1">`provider`</ph>は<ph id="ph2">`null`</ph>の書式設定<ph id="ph3">`s`</ph>に基づいて解釈されます、<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo&gt;</ph>現在のカルチャ オブジェクト。</target>       </trans-unit>
        <trans-unit id="1172" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>If a separator is encountered in the <ph id="ph1">`s`</ph> parameter during a parse operation, and the applicable currency or number decimal and group separators are the same, the parse operation assumes that the separator is a decimal separator rather than a group separator.</source>
          <target state="translated">区切り記号が発生した場合、<ph id="ph1">`s`</ph>解析操作では、および適用可能な通貨または 10 進数の間にパラメーターと桁区切り記号が同じには、解析操作では、区切り文字が桁区切り記号ではなく、小数点区切り文字である前提としています。</target>       </trans-unit>
        <trans-unit id="1173" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>For more information about separators, see <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>, <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>, <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>, and <ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>.</source>
          <target state="translated">区切り記号の詳細については、次を参照してください。 <ph id="ph1">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyDecimalSeparator%2A&gt;</ph>、 <ph id="ph2">&lt;xref:System.Globalization.NumberFormatInfo.NumberDecimalSeparator%2A&gt;</ph>、 <ph id="ph3">&lt;xref:System.Globalization.NumberFormatInfo.CurrencyGroupSeparator%2A&gt;</ph>、および<ph id="ph4">&lt;xref:System.Globalization.NumberFormatInfo.NumberGroupSeparator%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="1174" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>The following example demonstrates the use of the <ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType&gt;</ph> method to parse the string representation of numbers that have a particular style and are formatted using the conventions of a particular culture.</source>
          <target state="translated">次の例での使用、<ph id="ph1">&lt;xref:System.Single.TryParse%28System.String%2CSystem.Globalization.NumberStyles%2CSystem.IFormatProvider%2CSystem.Single%40%29?displayProperty=nameWithType&gt;</ph>を特定のスタイルがあり、特定のカルチャの規則を使用してフォーマットされている数値の文字列表現を解析します。</target>       </trans-unit>
        <trans-unit id="1175" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is not a <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="T:System.Globalization.NumberStyles" /&gt;</ph> 値ではありません。</target>       </trans-unit>
        <trans-unit id="1176" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source>-or-</source>
          <target state="translated">- または -</target>       </trans-unit>
        <trans-unit id="1177" translate="yes" xml:space="preserve" uid="M:System.Single.TryParse(System.String,System.Globalization.NumberStyles,System.IFormatProvider,System.Single@)">
          <source><ph id="ph1">&lt;paramref name="style" /&gt;</ph> is the <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> value.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="style" /&gt;</ph> が <ph id="ph2">&lt;see cref="F:System.Globalization.NumberStyles.AllowHexSpecifier" /&gt;</ph> 値です。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>