<Type Name="AppDomainManager" FullName="System.AppDomainManager">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="112003e37eca2c32191ae8ffe51b51b3dd3713b5" />
    <Meta Name="ms.sourcegitcommit" Value="6a0b904069161bbaec4ffd02aa7d9cf38c61e72e" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="06/24/2018" />
    <Meta Name="ms.locfileid" Value="36432974" />
  </Metadata>
  <TypeSignature Language="C#" Value="public class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="ILAsm" Value=".class public auto ansi beforefieldinit AppDomainManager extends System.MarshalByRefObject" />
  <TypeSignature Language="DocId" Value="T:System.AppDomainManager" />
  <TypeSignature Language="VB.NET" Value="Public Class AppDomainManager&#xA;Inherits MarshalByRefObject" />
  <TypeSignature Language="C++ CLI" Value="public ref class AppDomainManager : MarshalByRefObject" />
  <TypeSignature Language="F#" Value="type AppDomainManager = class&#xA;    inherit MarshalByRefObject" />
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <Base>
    <BaseTypeName>System.MarshalByRefObject</BaseTypeName>
  </Base>
  <Interfaces />
  <Attributes>
    <Attribute>
      <AttributeName>System.Runtime.InteropServices.ComVisible(true)</AttributeName>
    </Attribute>
  </Attributes>
  <Docs>
    <summary>アンマネージド ホストに対応するマネージド ホストを提供します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  使用しないでください<xref:System.AppDomainManager>を ASP.NET では、アプリケーション ドメインを構成します。 ASP.NET では、構成は、ホストで処理する必要があります。  
  
 実装する、<xref:System.AppDomainManager>クラスの新しいアプリケーション ドメインの作成に参加するホスト アプリケーションを有効にします。 既定値を置換する<xref:System.AppDomainManager>、アセンブリと種類、置換の特定<xref:System.AppDomainManager>APPDOMAIN_MANAGER_ASM および APPDOMAIN_MANAGER_TYPE の環境変数、またはを使用して、 [ \<appDomainManagerAssembly>](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagerassembly-element.md)と[ \<appDomainManagerType >](~/docs/framework/configure-apps/file-schema/runtime/appdomainmanagertype-element.md)構成ファイル内の要素。 アセンブリは完全に信頼される必要があり、グローバル アセンブリ キャッシュまたは開始のアプリケーションのディレクトリに含まれています。 型とアセンブリ名は、環境変数で、完全修飾する必要があります。 例:  
  
 `set APPDOMAIN_MANAGER_TYPE=MyNamespace.TestAppDomainManager`  
  
 `set APPDOMAIN_MANAGER_ASM=customappDomainmanager, Version=1.0.0.0, Culture=neutral, PublicKeyToken=f1368f7b12a08d72`  
  
> [!IMPORTANT]
>  アセンブリを含むかどうかのサブクラス<xref:System.AppDomainManager>、条件付きでマークされたアセンブリに依存して<xref:System.Security.AllowPartiallyTrustedCallersAttribute>(APTCA) 属性が、渡されたリストでそれらのアセンブリを含める必要があります、<xref:System.AppDomainSetup.PartialTrustVisibleAssemblies%2A>プロパティ、の<xref:System.AppDomainSetup>を使用するアプリケーション ドメインを作成します。 それ以外の場合、条件付きの APTCA 属性でマークされたアセンブリが無効になります。  
  
 <xref:System.AppDomainManager>アンマネージ ホストの管理されていることと同じです。 <xref:System.AppDomainManager>オブジェクトがプロセスの新しいアプリケーション ドメインの作成に参加して、新しいをカスタマイズできます<xref:System.AppDomain>他のマネージ コードが実行される前にします。 <xref:System.AppDomainManager>共通言語ランタイムの実行の他の側面に参加しているホストの管理者を指定することもできます。 たとえば、<xref:System.AppDomainManager>識別できる、<xref:System.Security.HostSecurityManager>アプリケーション ドメインのセキュリティ上の決定に参加しているオブジェクト。  
  
> [!NOTE]
>  付与するアセンブリだけ`FullTrust`、グローバル アセンブリ キャッシュにアセンブリなどかとして識別されて`fullTrustAssemblies`で、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>でメソッドを読み込むことができます、<xref:System.AppDomainManager.%23ctor%2A>コンス トラクターと<xref:System.AppDomainManager.InitializeNewDomain%2A>メソッドです。  
  
> [!NOTE]
>  このクラスには、リンク確認要求し、クラス レベルの継承確認要求が含まれています。 A<xref:System.Security.SecurityException>直前の呼び出し元または派生クラスのいずれかに、インフラストラクチャのアクセス許可があるない場合にスローされます。 セキュリティ要求の詳細については、「[リンク確認要求](~/docs/framework/misc/link-demands.md)と[継承確認要求](http://msdn.microsoft.com/library/28b9adbb-8f08-4f10-b856-dbf59eb932d9)です。  
  
   
  
## Examples  
 次の例は、の非常に単純な実装を示しています。<xref:System.AppDomainManager>です。  
  
 [!code-csharp[System.AppDomainManager#1](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#1)]
 [!code-vb[System.AppDomainManager#1](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#1)]  
  
 ]]></format>
    </remarks>
    <exception cref="T:System.Security.SecurityException">呼び出し元に、正しいアクセス許可がありません。 「必要条件」のセクションを参照してください。</exception>
    <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</permission>
    <permission cref="F:System.Security.Permissions.SecurityAction.InheritanceDemand">派生クラスで共通言語ランタイム インフラストラクチャをホストしている実行可能コードに接続します。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.Infrastructure" /> (関連する列挙体)</permission>
  </Docs>
  <Members>
    <Member MemberName=".ctor">
      <MemberSignature Language="C#" Value="public AppDomainManager ();" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig specialname rtspecialname instance void .ctor() cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.#ctor" />
      <MemberSignature Language="VB.NET" Value="Public Sub New ()" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; AppDomainManager();" />
      <MemberType>Constructor</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <Parameters />
      <Docs>
        <summary>
          <see cref="T:System.AppDomainManager" /> クラスの新しいインスタンスを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!NOTE]
>  付与するアセンブリだけ`FullTrust`、グローバル アセンブリ キャッシュにアセンブリなどかとして識別されて`fullTrustAssemblies`で、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>でメソッドを読み込むことができます、<xref:System.AppDomainManager.%23ctor%2A>コンス トラクターと<xref:System.AppDomainManager.InitializeNewDomain%2A>メソッドです。  
  
 ]]></format>
        </remarks>
        <permission cref="T:System.Security.SecurityCriticalAttribute">直前の呼び出し元に対する完全な信頼が必要です。 このメンバーは、部分的に信頼されているまたは透過的なコードで使用することはできません。</permission>
      </Docs>
    </Member>
    <Member MemberName="ApplicationActivator">
      <MemberSignature Language="C#" Value="public virtual System.Runtime.Hosting.ApplicationActivator ApplicationActivator { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Runtime.Hosting.ApplicationActivator ApplicationActivator" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.ApplicationActivator" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property ApplicationActivator As ApplicationActivator" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Runtime::Hosting::ApplicationActivator ^ ApplicationActivator { System::Runtime::Hosting::ApplicationActivator ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.ApplicationActivator : System.Runtime.Hosting.ApplicationActivator" Usage="System.AppDomainManager.ApplicationActivator" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Runtime.Hosting.ApplicationActivator</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>ドメインのアドインおよびマニフェストに基づくアプリケーションのアクティベーションを処理するアプリケーション アクティベーターを取得します。</summary>
        <value>アプリケーション アクティベーター。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 1 つの指定されたインスタンスがある、<xref:System.Runtime.Hosting.ApplicationActivator>クラスにそれぞれ<xref:System.AppDomain>するすべてのアドインと、マニフェストに基づくアプリケーションをアクティブ化の呼び出しがルーティングされます。 <xref:System.AppDomainManager>現在の<xref:System.AppDomain>独自のカスタムを提供できます<xref:System.Runtime.Hosting.ApplicationActivator>、または既定のインスタンス<xref:System.Runtime.Hosting.ApplicationActivator>を作成します。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CheckSecuritySettings">
      <MemberSignature Language="C#" Value="public virtual bool CheckSecuritySettings (System.Security.SecurityState state);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance bool CheckSecuritySettings(class System.Security.SecurityState state) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CheckSecuritySettings(System.Security.SecurityState)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CheckSecuritySettings (state As SecurityState) As Boolean" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual bool CheckSecuritySettings(System::Security::SecurityState ^ state);" />
      <MemberSignature Language="F#" Value="abstract member CheckSecuritySettings : System.Security.SecurityState -&gt; bool&#xA;override this.CheckSecuritySettings : System.Security.SecurityState -&gt; bool" Usage="appDomainManager.CheckSecuritySettings state" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Boolean</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="state" Type="System.Security.SecurityState" />
      </Parameters>
      <Docs>
        <param name="state">セキュリティ ステータスが要求されている操作を示す <see cref="T:System.Security.SecurityState" /> のサブクラス。</param>
        <summary>指定した操作がアプリケーション ドメイン内で許可されているかどうかを示します。</summary>
        <returns>
          <paramref name="state" /> によって指定された操作をアプリケーション ドメイン内で実行することがホストで許可されている場合は <see langword="true" />。それ以外の場合は <see langword="false" />。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このメソッドの既定の実装を返します`false`です。  
  
 このメソッドが呼び出されます、<xref:System.IO.IsolatedStorage.IsolatedStorageFile.IncreaseQuotaTo%2A?displayProperty=nameWithType>分離ストレージ クォータを増やすメソッドが呼び出されました。 共通言語ランタイム (CLR) をホストするアプリケーションを上書きできます、<xref:System.AppDomainManager.CheckSecuritySettings%2A>に基づいてポリシーを決定を実行する方法、<xref:System.IO.IsolatedStorage.IsolatedStorageSecurityState>オブジェクト (継承される<xref:System.Security.SecurityState>)、およびできますし、許可または禁止、増加します。 たとえば、ホスト促すことが終了を承認またはクォータを増やすと要求を拒否します。 ホストの実装<xref:System.AppDomainManager.CheckSecuritySettings%2A>サービス拒否攻撃の可能性を考慮する必要があります。 たとえば、ユーザーに求めますがボタンのクリックしてなど、ユーザーが開始したイベントからメソッドを呼び出した場合にのみ必要があります。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="CreateDomain">
      <MemberSignature Language="C#" Value="public virtual AppDomain CreateDomain (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance class System.AppDomain CreateDomain(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Function CreateDomain (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual AppDomain ^ CreateDomain(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain&#xA;override this.CreateDomain : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="appDomainManager.CreateDomain (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">ドメインの表示名。</param>
        <param name="securityInfo">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</param>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>新規または既存のアプリケーション ドメインを返します。</summary>
        <returns>新規または既存のアプリケーション ドメイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 指定された名前、`friendlyName`パラメーターは、ドメインを識別するユーザー インターフェイスに表示できます。 詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。  
  
 既定値<xref:System.AppDomainManager.CreateDomain%2A>メソッドは、保護された<xref:System.AppDomainManager.CreateDomainHelper%2A>メソッドを作成、<xref:System.AppDomain>です。 このメソッドのオーバーライドを呼び出す必要はありません、<xref:System.AppDomainManager.CreateDomainHelper%2A>メソッドが、既存のドメインを返すことができます。  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>継承する場合、<see cref="T:System.AppDomainManager" />クラスし、オーバーライド、<see cref="M:System.AppDomainManager.CreateDomain(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />メソッドを呼び出す前に、カスタム アプリケーション ドメインの初期化活動を行うことができます、<see cref="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />メソッド、またはまったくヘルパー メソッドを呼び出していません。たとえば、として渡された証拠を変更する可能性があります<paramref name="securityInfo" />、関連付けられているフィールドを更新<see cref="T:System.AppDomainSetup" />、または既存のドメインを再利用します。</para>
        </block>
      </Docs>
    </Member>
    <Member MemberName="CreateDomainHelper">
      <MemberSignature Language="C#" Value="protected static AppDomain CreateDomainHelper (string friendlyName, System.Security.Policy.Evidence securityInfo, AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method familystatic hidebysig class System.AppDomain CreateDomainHelper(string friendlyName, class System.Security.Policy.Evidence securityInfo, class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.CreateDomainHelper(System.String,System.Security.Policy.Evidence,System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Protected Shared Function CreateDomainHelper (friendlyName As String, securityInfo As Evidence, appDomainInfo As AppDomainSetup) As AppDomain" />
      <MemberSignature Language="C++ CLI" Value="protected:&#xA; static AppDomain ^ CreateDomainHelper(System::String ^ friendlyName, System::Security::Policy::Evidence ^ securityInfo, AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="static member CreateDomainHelper : string * System.Security.Policy.Evidence * AppDomainSetup -&gt; AppDomain" Usage="System.AppDomainManager.CreateDomainHelper (friendlyName, securityInfo, appDomainInfo)" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomain</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="friendlyName" Type="System.String" />
        <Parameter Name="securityInfo" Type="System.Security.Policy.Evidence" />
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="friendlyName">ドメインの表示名。</param>
        <param name="securityInfo">スタックの最上位のアクセス許可セットを設定するために、セキュリティ ポリシーを通じて割り当てられる証拠を格納するオブジェクト。</param>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>アプリケーション ドメインを作成するためのヘルパー メソッドを提供します。</summary>
        <returns>新しく作成されたアプリケーション ドメイン。</returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 この保護されたヘルパー メソッドは、新しいアプリケーション ドメインの作成を処理します。  
  
 指定されたこのフレンドリ名、`friendlyName`パラメーターは、ドメインを識別するユーザー インターフェイスに表示できます。 詳細については、<xref:System.AppDomain.FriendlyName%2A> プロパティを参照してください。  
  
 ]]></format>
        </remarks>
        <exception cref="T:System.ArgumentNullException">
          <paramref name="friendlyName" /> は <see langword="null" />です。</exception>
        <permission cref="T:System.Security.Permissions.SecurityPermission">証拠を制御するためです。 セキュリティ アクション:<see cref="F:System.Security.Permissions.SecurityAction.Demand" />です。 関連する列挙。 <see cref="F:System.Security.Permissions.SecurityPermissionFlag.ControlEvidence" /></permission>
      </Docs>
    </Member>
    <Member MemberName="EntryAssembly">
      <MemberSignature Language="C#" Value="public virtual System.Reflection.Assembly EntryAssembly { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Reflection.Assembly EntryAssembly" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.EntryAssembly" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property EntryAssembly As Assembly" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Reflection::Assembly ^ EntryAssembly { System::Reflection::Assembly ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.EntryAssembly : System.Reflection.Assembly" Usage="System.AppDomainManager.EntryAssembly" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Reflection.Assembly</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーションの入力アセンブリを取得します。</summary>
        <value>アプリケーションの入力アセンブリ。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 アプリケーションが、マニフェストでアクティブ化されるアプリケーションの場合は、入力アセンブリは、アプリケーション マニフェストから決定されます。 アプリケーションがマニフェスト アクティブでない場合、入力アセンブリは既定のアプリケーション ドメインで実行可能プロセスです。 他のアプリケーション ドメインで、入力アセンブリはによって実行された最初の実行可能ファイル、<xref:System.AppDomain.ExecuteAssembly%2A?displayProperty=nameWithType>メソッドです。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostExecutionContextManager">
      <MemberSignature Language="C#" Value="public virtual System.Threading.HostExecutionContextManager HostExecutionContextManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Threading.HostExecutionContextManager HostExecutionContextManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostExecutionContextManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostExecutionContextManager As HostExecutionContextManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Threading::HostExecutionContextManager ^ HostExecutionContextManager { System::Threading::HostExecutionContextManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostExecutionContextManager : System.Threading.HostExecutionContextManager" Usage="System.AppDomainManager.HostExecutionContextManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Threading.HostExecutionContextManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>実行コンテキストのフローを管理する、ホスト実行コンテキスト マネージャーを取得します。</summary>
        <value>ホスト実行コンテキスト マネージャー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティにより、ホスト、<xref:System.Threading.HostExecutionContextManager>非同期呼び出し間での実行コンテキストのフローに参加することができます。  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="HostSecurityManager">
      <MemberSignature Language="C#" Value="public virtual System.Security.HostSecurityManager HostSecurityManager { get; }" />
      <MemberSignature Language="ILAsm" Value=".property instance class System.Security.HostSecurityManager HostSecurityManager" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.HostSecurityManager" />
      <MemberSignature Language="VB.NET" Value="Public Overridable ReadOnly Property HostSecurityManager As HostSecurityManager" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual property System::Security::HostSecurityManager ^ HostSecurityManager { System::Security::HostSecurityManager ^ get(); };" />
      <MemberSignature Language="F#" Value="member this.HostSecurityManager : System.Security.HostSecurityManager" Usage="System.AppDomainManager.HostSecurityManager" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Security.HostSecurityManager</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>アプリケーション ドメインのセキュリティの決定に関与するホスト セキュリティ マネージャーを取得します。</summary>
        <value>ホスト セキュリティ マネージャー。</value>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このプロパティにより、ホスト、<xref:System.Security.HostSecurityManager>のアプリケーション ドメインに対するセキュリティ上の決定に参加します。  
  
   
  
## Examples  
 次の例のオーバーライドを示しています、<xref:System.AppDomainManager.HostSecurityManager%2A>カスタム アプリケーション ドメイン マネージャーのプロパティです。 このコード例に示されている例の一部である、<xref:System.AppDomainManager>クラスです。  
  
 [!code-csharp[System.AppDomainManager#3](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#3)]
 [!code-vb[System.AppDomainManager#3](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#3)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializationFlags">
      <MemberSignature Language="C#" Value="public AppDomainManagerInitializationOptions InitializationFlags { get; set; }" />
      <MemberSignature Language="ILAsm" Value=".property instance valuetype System.AppDomainManagerInitializationOptions InitializationFlags" />
      <MemberSignature Language="DocId" Value="P:System.AppDomainManager.InitializationFlags" />
      <MemberSignature Language="VB.NET" Value="Public Property InitializationFlags As AppDomainManagerInitializationOptions" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; property AppDomainManagerInitializationOptions InitializationFlags { AppDomainManagerInitializationOptions get(); void set(AppDomainManagerInitializationOptions value); };" />
      <MemberSignature Language="F#" Value="member this.InitializationFlags : AppDomainManagerInitializationOptions with get, set" Usage="System.AppDomainManager.InitializationFlags" />
      <MemberType>Property</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.AppDomainManagerInitializationOptions</ReturnType>
      </ReturnValue>
      <Docs>
        <summary>カスタム アプリケーション ドメイン マネージャーの初期化フラグを取得します。</summary>
        <value>実行する初期化操作を表す列挙値のビットごとの組み合わせ。 既定値は、<see cref="F:System.AppDomainManagerInitializationOptions.None" /> です。</value>
        <remarks>To be added.</remarks>
      </Docs>
    </Member>
    <Member MemberName="InitializeNewDomain">
      <MemberSignature Language="C#" Value="public virtual void InitializeNewDomain (AppDomainSetup appDomainInfo);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance void InitializeNewDomain(class System.AppDomainSetup appDomainInfo) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.AppDomainManager.InitializeNewDomain(System.AppDomainSetup)" />
      <MemberSignature Language="VB.NET" Value="Public Overridable Sub InitializeNewDomain (appDomainInfo As AppDomainSetup)" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; virtual void InitializeNewDomain(AppDomainSetup ^ appDomainInfo);" />
      <MemberSignature Language="F#" Value="abstract member InitializeNewDomain : AppDomainSetup -&gt; unit&#xA;override this.InitializeNewDomain : AppDomainSetup -&gt; unit" Usage="appDomainManager.InitializeNewDomain appDomainInfo" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Void</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="appDomainInfo" Type="System.AppDomainSetup" />
      </Parameters>
      <Docs>
        <param name="appDomainInfo">アプリケーション ドメインの初期化情報を格納しているオブジェクト。</param>
        <summary>新しいアプリケーション ドメインを初期化します。</summary>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
  
> [!IMPORTANT]
>  ASP.NET でのアプリケーション ドメインを初期化するためには、このメソッドを使用しないでください。 ASP.NET では、構成は、ホストで処理する必要があります。 アプリケーション ドメインを初期化するためにこのメソッドを使用する場合、ホストをスロー<xref:System.InvalidOperationException>しようとするアプリケーション ドメインを初期化します。 例外メッセージは、初期化が既に発生を示します。  
  
 このメソッドは、コンス トラクターの直後に呼び出されます。 既定値<xref:System.AppDomainManager.InitializeNewDomain%2A>実装では、何も行われません。  カスタム実装は、内部クラスとデリゲートを設定、アンマネージ ホスト インターフェイスを持つインターフェイスを設定、または、新しいイベント ハンドラーを設定<xref:System.AppDomain>です。  
  
 また、アドインでは、ライセンス認証のカスタム実装識別でした現在<xref:System.AppDomain>として対象のアプリケーション ドメイン。  
  
 以降で、[!INCLUDE[net_v40_long](~/includes/net-v40-long-md.md)]アプリケーションの起動時にまたは、新しいアプリケーション ドメインのサンド ボックスを変更するのには、既定のアプリケーション ドメインのサンド ボックスに、このメソッドを使用できます。 これを行うには、次のように調整します。、<xref:System.Security.Policy.ApplicationTrust.DefaultGrantSet%2A>と<xref:System.Security.Policy.ApplicationTrust.FullTrustAssemblies%2A>プロパティを、<xref:System.Security.Policy.ApplicationTrust>に割り当てられているオブジェクト、<xref:System.AppDomainSetup.ApplicationTrust%2A?displayProperty=nameWithType>プロパティ`appDomainInfo`アプリケーション ドメインを初期化する前に、します。  
  
> [!NOTE]
>  付与するアセンブリだけ`FullTrust`、グローバル アセンブリ キャッシュにアセンブリなどかとして識別されて`fullTrustAssemblies`で、<xref:System.AppDomain.CreateDomain%28System.String%2CSystem.Security.Policy.Evidence%2CSystem.AppDomainSetup%2CSystem.Security.PermissionSet%2CSystem.Security.Policy.StrongName%5B%5D%29?displayProperty=nameWithType>でメソッドを読み込むことができます、<xref:System.AppDomainManager.%23ctor%2A>コンス トラクターと<xref:System.AppDomainManager.InitializeNewDomain%2A>メソッドです。  
  
   
  
## Examples  
 次の例のオーバーライドを示しています、<xref:System.AppDomainManager.InitializeNewDomain%2A>カスタム アプリケーション ドメイン マネージャーのメソッドです。 このコード例に示されている例の一部である、<xref:System.AppDomainManager>クラスです。  
  
 [!code-csharp[System.AppDomainManager#2](~/samples/snippets/csharp/VS_Snippets_CLR_System/system.AppDomainManager/CS/customAppDomainManager.cs#2)]
 [!code-vb[System.AppDomainManager#2](~/samples/snippets/visualbasic/VS_Snippets_CLR_System/system.AppDomainManager/VB/customAppDomainManager.vb#2)]  
  
 ]]></format>
        </remarks>
      </Docs>
    </Member>
  </Members>
</Type>