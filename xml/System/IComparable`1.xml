<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata><Meta Name="ms.openlocfilehash" Value="9ad58bbe6f970c82a7de71ab2688204451e6b35b" /><Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" /><Meta Name="ms.translationtype" Value="MT" /><Meta Name="ms.contentlocale" Value="ja-JP" /><Meta Name="ms.lasthandoff" Value="08/25/2018" /><Meta Name="ms.locfileid" Value="37728024" /></Metadata><TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T"><span data-ttu-id="5c781-101">比較するオブジェクトの型。</span><span class="sxs-lookup"><span data-stu-id="5c781-101">The type of object to compare.</span></span></typeparam>
    <summary><span data-ttu-id="5c781-102">インスタンスの並べ替えなどを目的とし、型固有の比較メソッドを作成するために値型またはクラスで実装する、汎用の比較メソッドを定義します。</span><span class="sxs-lookup"><span data-stu-id="5c781-102">Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</span></span></summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c781-103">このインターフェイスは値を持つを順序付けられたか、並べ替えの種類によって実装され、ジェネリック コレクション オブジェクトのメンバーを順序付けに厳密に型指定された比較メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="5c781-103">This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="5c781-104">たとえば、1 つの数値が 2 番目の数値より大きくすることができ、1 つの文字列は、前に、別のアルファベット順で表示できます。</span><span class="sxs-lookup"><span data-stu-id="5c781-104">For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</span></span> <span data-ttu-id="5c781-105">実装する型が 1 つのメソッドを定義することが必要ですが<xref:System.IComparable%601.CompareTo%28%600%29>、する前で、並べ替え順序において、現在のインスタンスの位置をかどうかがその後、または同じ型の 2 番目のオブジェクトと同じすることを示します。</span><span class="sxs-lookup"><span data-stu-id="5c781-105">It requires that implementing types define a single method, <xref:System.IComparable%601.CompareTo%28%600%29>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</span></span> <span data-ttu-id="5c781-106">通常、メソッドは、開発者のコードから直接は呼び出されません。</span><span class="sxs-lookup"><span data-stu-id="5c781-106">Typically, the method is not called directly from developer code.</span></span> <span data-ttu-id="5c781-107">代わりに、自動的に呼び出されますメソッドによってなど<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>と<xref:System.Collections.Generic.SortedList%602.Add%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5c781-107">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="5c781-108">通常、型を提供する、<xref:System.IComparable%601>実装はまた、実装、<xref:System.IEquatable%601>インターフェイス。</span><span class="sxs-lookup"><span data-stu-id="5c781-108">Typically, types that provide an <xref:System.IComparable%601> implementation also implement the <xref:System.IEquatable%601> interface.</span></span> <span data-ttu-id="5c781-109"><xref:System.IEquatable%601>インターフェイスを定義、<xref:System.IEquatable%601.Equals%2A>メソッドを実装する型のインスタンスが等しいかどうかを判断します。</span><span class="sxs-lookup"><span data-stu-id="5c781-109">The <xref:System.IEquatable%601> interface defines the <xref:System.IEquatable%601.Equals%2A> method, which determines the equality of instances of the implementing type.</span></span>  
  
 <span data-ttu-id="5c781-110">実装、<xref:System.IComparable%601.CompareTo%28%600%29>メソッドが返す必要があります、<xref:System.Int32>次の表に示すようを持つ 3 つの値のいずれか。</span><span class="sxs-lookup"><span data-stu-id="5c781-110">The implementation of the <xref:System.IComparable%601.CompareTo%28%600%29> method must return an <xref:System.Int32> that has one of three values, as shown in the following table.</span></span>  
  
|<span data-ttu-id="5c781-111">[値]</span><span class="sxs-lookup"><span data-stu-id="5c781-111">Value</span></span>|<span data-ttu-id="5c781-112">説明</span><span class="sxs-lookup"><span data-stu-id="5c781-112">Meaning</span></span>|  
|-----------|-------------|  
|<span data-ttu-id="5c781-113">0 より小さい値</span><span class="sxs-lookup"><span data-stu-id="5c781-113">Less than zero</span></span>|<span data-ttu-id="5c781-114">このオブジェクトで指定されたオブジェクトの前に、<xref:System.IComparable%601.CompareTo%2A>並べ替え順序においてメソッド。</span><span class="sxs-lookup"><span data-stu-id="5c781-114">This object precedes the object specified by the <xref:System.IComparable%601.CompareTo%2A> method in the sort order.</span></span>|  
|<span data-ttu-id="5c781-115">0</span><span class="sxs-lookup"><span data-stu-id="5c781-115">Zero</span></span>|<span data-ttu-id="5c781-116">この現在のインスタンスがで指定されたオブジェクトと、並べ替え順序において同じ位置で発生する、<xref:System.IComparable%601.CompareTo%2A>メソッドの引数。</span><span class="sxs-lookup"><span data-stu-id="5c781-116">This current instance occurs in the same position in the sort order as the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument.</span></span>|  
|<span data-ttu-id="5c781-117">0 より大きい値</span><span class="sxs-lookup"><span data-stu-id="5c781-117">Greater than zero</span></span>|<span data-ttu-id="5c781-118">この現在のインスタンスで指定されたオブジェクトに依存して、<xref:System.IComparable%601.CompareTo%2A>並べ替え順序においてメソッドの引数。</span><span class="sxs-lookup"><span data-stu-id="5c781-118">This current instance follows the object specified by the <xref:System.IComparable%601.CompareTo%2A> method argument in the sort order.</span></span>|  
  
 <span data-ttu-id="5c781-119">すべての数値型 (など<xref:System.Int32>と<xref:System.Double>) 実装<xref:System.IComparable%601>と同様、 <xref:System.String>、 <xref:System.Char>、および<xref:System.DateTime>します。</span><span class="sxs-lookup"><span data-stu-id="5c781-119">All numeric types (such as <xref:System.Int32> and <xref:System.Double>) implement <xref:System.IComparable%601>, as do <xref:System.String>, <xref:System.Char>, and <xref:System.DateTime>.</span></span> <span data-ttu-id="5c781-120">カスタム型がの独自の実装を提供する必要がありますも<xref:System.IComparable%601>オブジェクトのインスタンスを並べ替える、または並べ替えを有効にします。</span><span class="sxs-lookup"><span data-stu-id="5c781-120">Custom types should also provide their own implementation of <xref:System.IComparable%601> to enable object instances to be ordered or sorted.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c781-121">次のコード例の実装を示しています。<xref:System.IComparable%601>簡単な`Temperature`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c781-121">The following code example illustrates the implementation of  <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="5c781-122">例は、作成、<xref:System.Collections.Generic.SortedList%602>と文字列のコレクション`Temperature`オブジェクトのキーと温度と文字列のペアを複数をシーケンスからリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="5c781-122">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="5c781-123">呼び出しで、<xref:System.Collections.Generic.SortedList%602.Add%2A>メソッド、<xref:System.Collections.Generic.SortedList%602>コレクションは、<xref:System.IComparable%601>の温度を昇順に表示される、一覧のエントリの並べ替えを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c781-123">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides"><span data-ttu-id="5c781-124"><para>型パラメーターを置き換える、<see cref="T:System.IComparable`1" />がこのインターフェイスを実装している型を持つインターフェイスです。実装する場合<see cref="T:System.IComparable`1" />、オーバー ロードする必要があります、 <see langword="op_GreaterThan" />、 <see langword="op_GreaterThanOrEqual" />、 <see langword="op_LessThan" />、および<see langword="op_LessThanOrEqual" />演算子と一致する値を返す<see cref="M:System.IComparable`1.CompareTo(`0)" />します。さらに、実行する必要も<see cref="T:System.IEquatable`1" />します。参照してください、<see cref="T:System.IEquatable`1" />完全な情報の記事。</para></span><span class="sxs-lookup"><span data-stu-id="5c781-124"><para>Replace the type parameter of the <see cref="T:System.IComparable`1" /> interface with the type that is implementing this interface.  If you implement <see cref="T:System.IComparable`1" />, you should overload the <see langword="op_GreaterThan" />, <see langword="op_GreaterThanOrEqual" />, <see langword="op_LessThan" />, and <see langword="op_LessThanOrEqual" /> operators to return values that are consistent with <see cref="M:System.IComparable`1.CompareTo(`0)" />. In addition, you should also implement <see cref="T:System.IEquatable`1" />. See the <see cref="T:System.IEquatable`1" /> article for complete information.</para></span></span></block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other"><span data-ttu-id="5c781-125">このインスタンスと比較するオブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c781-125">An object to compare with this instance.</span></span></param>
        <summary><span data-ttu-id="5c781-126">現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</span><span class="sxs-lookup"><span data-stu-id="5c781-126">Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</span></span></summary>
        <returns><span data-ttu-id="5c781-127">比較対象オブジェクトの相対順序を示す値。</span><span class="sxs-lookup"><span data-stu-id="5c781-127">A value that indicates the relative order of the objects being compared.</span></span> <span data-ttu-id="5c781-128">戻り値の意味は次のとおりです。</span><span class="sxs-lookup"><span data-stu-id="5c781-128">The return value has these meanings:</span></span> 
 <span data-ttu-id="5c781-129"><list type="table"><listheader><term> 値  </term><description> 意味  </description></listheader><item><term> 0 より小さい値  </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも前です。</description></item><item><term> 0  </term><description> このインスタンスは、並べ替え順序で、<paramref name="other" /> と同じ位置に出現します。</description></item><item><term> 0 より大きい </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも後ろです。  </description></item></list></span><span class="sxs-lookup"><span data-stu-id="5c781-129"><list type="table"><listheader><term> Value  </term><description> Meaning  </description></listheader><item><term> Less than zero  </term><description> This instance precedes <paramref name="other" /> in the sort order.  </description></item><item><term> Zero  </term><description> This instance occurs in the same position in the sort order as <paramref name="other" />.  </description></item><item><term> Greater than zero  </term><description> This instance follows <paramref name="other" /> in the sort order.  </description></item></list></span></span></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <span data-ttu-id="5c781-130"><xref:System.IComparable%601.CompareTo%2A> ジェネリック コレクション オブジェクトのメンバーを順序付けに厳密に型指定された比較メソッドを提供します。</span><span class="sxs-lookup"><span data-stu-id="5c781-130"><xref:System.IComparable%601.CompareTo%2A> provides a strongly typed comparison method for ordering members of a generic collection object.</span></span> <span data-ttu-id="5c781-131">このため、これは、通常は呼び出されません開発者のコードから直接。</span><span class="sxs-lookup"><span data-stu-id="5c781-131">Because of this, it is usually not called directly from developer code.</span></span> <span data-ttu-id="5c781-132">代わりに、自動的に呼び出されますメソッドによってなど<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>と<xref:System.Collections.Generic.SortedList%602.Add%2A>します。</span><span class="sxs-lookup"><span data-stu-id="5c781-132">Instead, it is called automatically by methods such as <xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType> and <xref:System.Collections.Generic.SortedList%602.Add%2A>.</span></span>  
  
 <span data-ttu-id="5c781-133">このメソッドは定義のみであるため、効果が特定のクラスまたは値の型によって実装する必要があります。</span><span class="sxs-lookup"><span data-stu-id="5c781-133">This method is only a definition and must be implemented by a specific class or value type to have effect.</span></span> <span data-ttu-id="5c781-134">(「前」、「と同じ位置で発生する」および"に依存) セクションでは、特定の実装によって異なります。 戻り値で指定された比較の意味です。</span><span class="sxs-lookup"><span data-stu-id="5c781-134">The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</span></span>  
  
 <span data-ttu-id="5c781-135">定義上、任意のオブジェクトを比較よりも大きい`null`、互いに等しくない 2 つの null 参照を比較します。</span><span class="sxs-lookup"><span data-stu-id="5c781-135">By definition, any object compares greater than `null`, and two null references compare equal to each other.</span></span>  
  
   
  
## Examples  
 <span data-ttu-id="5c781-136">次のコード例の実装を示しています。<xref:System.IComparable%601>簡単な`Temperature`オブジェクト。</span><span class="sxs-lookup"><span data-stu-id="5c781-136">The following code example illustrates the implementation of <xref:System.IComparable%601> for a simple `Temperature` object.</span></span> <span data-ttu-id="5c781-137">例は、作成、<xref:System.Collections.Generic.SortedList%602>と文字列のコレクション`Temperature`オブジェクトのキーと温度と文字列のペアを複数をシーケンスからリストに追加します。</span><span class="sxs-lookup"><span data-stu-id="5c781-137">The example creates a <xref:System.Collections.Generic.SortedList%602> collection of strings with `Temperature` object keys, and adds several pairs of temperatures and strings to the list out of sequence.</span></span> <span data-ttu-id="5c781-138">呼び出しで、<xref:System.Collections.Generic.SortedList%602.Add%2A>メソッド、<xref:System.Collections.Generic.SortedList%602>コレクションは、<xref:System.IComparable%601>の温度を昇順に表示される、一覧のエントリの並べ替えを実装します。</span><span class="sxs-lookup"><span data-stu-id="5c781-138">In the call to the <xref:System.Collections.Generic.SortedList%602.Add%2A> method, the <xref:System.Collections.Generic.SortedList%602> collection uses the <xref:System.IComparable%601> implementation to sort the list entries, which are then displayed in order of increasing temperature.</span></span>  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides"><span data-ttu-id="5c781-139"><para>オブジェクト A、B、および C の場合は、次を true にある必要があります: <c>A.CompareTo(A)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>返します 0 し<c>B.CompareTo(A)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>は 0 を返しますと<c>B.CompareTo(C)</c>返します 0 から<c>A.CompareTo(C)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>し、ゼロ以外の値を返します<c>B.CompareTo(A)</c>逆の符号の値を返すが必要です。場合<c>A.CompareTo(B)</c>値を返します<paramref name="x" />0 でないと<c>B.CompareTo(C)</c>値を返します<paramref name="y" />のと同じ符号<paramref name="x" />、し<c>A.CompareTo(C)</c>の符号と同じ値を返すために必要な<paramref name="x" />と<paramref name="y" />します。</para></span><span class="sxs-lookup"><span data-stu-id="5c781-139"><para>For objects A, B, and C, the following must be true:  <c>A.CompareTo(A)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns zero, then <c>B.CompareTo(A)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns zero and <c>B.CompareTo(C)</c> returns zero, then <c>A.CompareTo(C)</c> is required to return zero.  If <c>A.CompareTo(B)</c> returns a value other than zero, then <c>B.CompareTo(A)</c> is required to return a value of the opposite sign.  If <c>A.CompareTo(B)</c> returns a value <paramref name="x" /> that is not equal to zero, and <c>B.CompareTo(C)</c> returns a value <paramref name="y" /> of the same sign as <paramref name="x" />, then <c>A.CompareTo(C)</c> is required to return a value of the same sign as <paramref name="x" /> and <paramref name="y" />.</para></span></span></block>
        <block subset="none" type="usage"><span data-ttu-id="5c781-140"><para>使用して、<see cref="M:System.IComparable`1.CompareTo(`0)" />クラスのインスタンスの順序を決定する方法。</para></span><span class="sxs-lookup"><span data-stu-id="5c781-140"><para>Use the <see cref="M:System.IComparable`1.CompareTo(`0)" /> method to determine the ordering of instances of a class.</para></span></span></block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>