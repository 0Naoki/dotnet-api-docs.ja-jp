<Type Name="IComparable&lt;T&gt;" FullName="System.IComparable&lt;T&gt;">
  <Metadata>
    <Meta Name="ms.openlocfilehash" Value="9ad58bbe6f970c82a7de71ab2688204451e6b35b" />
    <Meta Name="ms.sourcegitcommit" Value="434f60616a9793fa8436744549fc856e94f7a648" />
    <Meta Name="ms.translationtype" Value="HT" />
    <Meta Name="ms.contentlocale" Value="ja-JP" />
    <Meta Name="ms.lasthandoff" Value="08/25/2018" />
    <Meta Name="ms.locfileid" Value="37728024" />
  </Metadata>
  <TypeSignature Language="C#" Value="public interface IComparable&lt;in T&gt;" />
  <TypeSignature Language="ILAsm" Value=".class public interface auto ansi abstract IComparable`1&lt;- T&gt;" />
  <TypeSignature Language="DocId" Value="T:System.IComparable`1" />
  <TypeSignature Language="VB.NET" Value="Public Interface IComparable(Of In T)" />
  <TypeSignature Language="C++ CLI" Value="generic &lt;typename T&gt;&#xA;public interface class IComparable" />
  <TypeSignature Language="F#" Value="type IComparable&lt;'T&gt; = interface" />
  <AssemblyInfo>
    <AssemblyName>System.Runtime</AssemblyName>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
    <AssemblyVersion>4.0.10.0</AssemblyVersion>
    <AssemblyVersion>4.0.20.0</AssemblyVersion>
    <AssemblyVersion>4.1.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.0.0</AssemblyVersion>
    <AssemblyVersion>4.2.1.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>mscorlib</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
    <AssemblyVersion>2.0.5.0</AssemblyVersion>
    <AssemblyVersion>4.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <AssemblyInfo>
    <AssemblyName>netstandard</AssemblyName>
    <AssemblyVersion>2.0.0.0</AssemblyVersion>
  </AssemblyInfo>
  <TypeParameters>
    <TypeParameter Name="T">
      <Constraints>
        <ParameterAttribute>Contravariant</ParameterAttribute>
      </Constraints>
    </TypeParameter>
  </TypeParameters>
  <Interfaces />
  <Docs>
    <typeparam name="T">比較するオブジェクトの型。</typeparam>
    <summary>インスタンスの並べ替えなどを目的とし、型固有の比較メソッドを作成するために値型またはクラスで実装する、汎用の比較メソッドを定義します。</summary>
    <remarks>
      <format type="text/markdown"><![CDATA[  
  
## Remarks  
 このインターフェイスは値を持つを順序付けられたか、並べ替えの種類によって実装され、ジェネリック コレクション オブジェクトのメンバーを順序付けに厳密に型指定された比較メソッドを提供します。 たとえば、1 つの数値が 2 番目の数値より大きくすることができ、1 つの文字列は、前に、別のアルファベット順で表示できます。 実装する型が 1 つのメソッドを定義することが必要ですが<xref:System.IComparable%601.CompareTo%28%600%29>、する前で、並べ替え順序において、現在のインスタンスの位置をかどうかがその後、または同じ型の 2 番目のオブジェクトと同じすることを示します。 通常、メソッドは、開発者のコードから直接は呼び出されません。 代わりに、自動的に呼び出されますメソッドによってなど<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>と<xref:System.Collections.Generic.SortedList%602.Add%2A>します。  
  
 通常、型を提供する、<xref:System.IComparable%601>実装はまた、実装、<xref:System.IEquatable%601>インターフェイス。 <xref:System.IEquatable%601>インターフェイスを定義、<xref:System.IEquatable%601.Equals%2A>メソッドを実装する型のインスタンスが等しいかどうかを判断します。  
  
 実装、<xref:System.IComparable%601.CompareTo%28%600%29>メソッドが返す必要があります、<xref:System.Int32>次の表に示すようを持つ 3 つの値のいずれか。  
  
|[値]|説明|  
|-----------|-------------|  
|0 より小さい値|このオブジェクトで指定されたオブジェクトの前に、<xref:System.IComparable%601.CompareTo%2A>並べ替え順序においてメソッド。|  
|0|この現在のインスタンスがで指定されたオブジェクトと、並べ替え順序において同じ位置で発生する、<xref:System.IComparable%601.CompareTo%2A>メソッドの引数。|  
|0 より大きい値|この現在のインスタンスで指定されたオブジェクトに依存して、<xref:System.IComparable%601.CompareTo%2A>並べ替え順序においてメソッドの引数。|  
  
 すべての数値型 (など<xref:System.Int32>と<xref:System.Double>) 実装<xref:System.IComparable%601>と同様、 <xref:System.String>、 <xref:System.Char>、および<xref:System.DateTime>します。 カスタム型がの独自の実装を提供する必要がありますも<xref:System.IComparable%601>オブジェクトのインスタンスを並べ替える、または並べ替えを有効にします。  
  
   
  
## Examples  
 次のコード例の実装を示しています。<xref:System.IComparable%601>簡単な`Temperature`オブジェクト。 例は、作成、<xref:System.Collections.Generic.SortedList%602>と文字列のコレクション`Temperature`オブジェクトのキーと温度と文字列のペアを複数をシーケンスからリストに追加します。 呼び出しで、<xref:System.Collections.Generic.SortedList%602.Add%2A>メソッド、<xref:System.Collections.Generic.SortedList%602>コレクションは、<xref:System.IComparable%601>の温度を昇順に表示される、一覧のエントリの並べ替えを実装します。  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
    </remarks>
    <block subset="none" type="overrides">
      <para>型パラメーターを置き換える、<see cref="T:System.IComparable`1" />がこのインターフェイスを実装している型を持つインターフェイスです。実装する場合<see cref="T:System.IComparable`1" />、オーバー ロードする必要があります、 <see langword="op_GreaterThan" />、 <see langword="op_GreaterThanOrEqual" />、 <see langword="op_LessThan" />、および<see langword="op_LessThanOrEqual" />演算子と一致する値を返す<see cref="M:System.IComparable`1.CompareTo(`0)" />します。さらに、実行する必要も<see cref="T:System.IEquatable`1" />します。参照してください、<see cref="T:System.IEquatable`1" />完全な情報の記事。</para>
    </block>
    <altmember cref="T:System.IComparable" />
    <altmember cref="T:System.IEquatable`1" />
  </Docs>
  <Members>
    <Member MemberName="CompareTo">
      <MemberSignature Language="C#" Value="public int CompareTo (T other);" />
      <MemberSignature Language="ILAsm" Value=".method public hidebysig newslot virtual instance int32 CompareTo(!T other) cil managed" />
      <MemberSignature Language="DocId" Value="M:System.IComparable`1.CompareTo(`0)" />
      <MemberSignature Language="VB.NET" Value="Public Function CompareTo (other As T) As Integer" />
      <MemberSignature Language="F#" Value="abstract member CompareTo : 'T -&gt; int" Usage="iComparable.CompareTo other" />
      <MemberSignature Language="C++ CLI" Value="public:&#xA; int CompareTo(T other);" />
      <MemberType>Method</MemberType>
      <AssemblyInfo>
        <AssemblyName>System.Runtime</AssemblyName>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
        <AssemblyVersion>4.0.10.0</AssemblyVersion>
        <AssemblyVersion>4.0.20.0</AssemblyVersion>
        <AssemblyVersion>4.1.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.0.0</AssemblyVersion>
        <AssemblyVersion>4.2.1.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>mscorlib</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
        <AssemblyVersion>2.0.5.0</AssemblyVersion>
        <AssemblyVersion>4.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <AssemblyInfo>
        <AssemblyName>netstandard</AssemblyName>
        <AssemblyVersion>2.0.0.0</AssemblyVersion>
      </AssemblyInfo>
      <ReturnValue>
        <ReturnType>System.Int32</ReturnType>
      </ReturnValue>
      <Parameters>
        <Parameter Name="other" Type="T" />
      </Parameters>
      <Docs>
        <param name="other">このインスタンスと比較するオブジェクト。</param>
        <summary>現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</summary>
        <returns>比較対象オブジェクトの相対順序を示す値。 戻り値の意味は次のとおりです。 
 <list type="table"><listheader><term> 値  </term><description> 意味  </description></listheader><item><term> 0 より小さい値  </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも前です。</description></item><item><term> 0  </term><description> このインスタンスは、並べ替え順序で、<paramref name="other" /> と同じ位置に出現します。</description></item><item><term> 0 より大きい </term><description> このインスタンスの位置が、並べ替え順序において <paramref name="other" /> よりも後ろです。  </description></item></list></returns>
        <remarks>
          <format type="text/markdown"><![CDATA[  
  
## Remarks  
 <xref:System.IComparable%601.CompareTo%2A> ジェネリック コレクション オブジェクトのメンバーを順序付けに厳密に型指定された比較メソッドを提供します。 このため、これは、通常は呼び出されません開発者のコードから直接。 代わりに、自動的に呼び出されますメソッドによってなど<xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType>と<xref:System.Collections.Generic.SortedList%602.Add%2A>します。  
  
 このメソッドは定義のみであるため、効果が特定のクラスまたは値の型によって実装する必要があります。 (「前」、「と同じ位置で発生する」および"に依存) セクションでは、特定の実装によって異なります。 戻り値で指定された比較の意味です。  
  
 定義上、任意のオブジェクトを比較よりも大きい`null`、互いに等しくない 2 つの null 参照を比較します。  
  
   
  
## Examples  
 次のコード例の実装を示しています。<xref:System.IComparable%601>簡単な`Temperature`オブジェクト。 例は、作成、<xref:System.Collections.Generic.SortedList%602>と文字列のコレクション`Temperature`オブジェクトのキーと温度と文字列のペアを複数をシーケンスからリストに追加します。 呼び出しで、<xref:System.Collections.Generic.SortedList%602.Add%2A>メソッド、<xref:System.Collections.Generic.SortedList%602>コレクションは、<xref:System.IComparable%601>の温度を昇順に表示される、一覧のエントリの並べ替えを実装します。  
  
 [!code-cpp[IComparable\`1 Example#1](~/samples/snippets/cpp/VS_Snippets_CLR/IComparable`1 Example/CPP/source.cpp#1)]
 [!code-csharp[IComparable\`1 Example#1](~/samples/snippets/csharp/VS_Snippets_CLR/IComparable`1 Example/CS/source.cs#1)]
 [!code-vb[IComparable\`1 Example#1](~/samples/snippets/visualbasic/VS_Snippets_CLR/IComparable`1 Example/VB/source.vb#1)]  
  
 ]]></format>
        </remarks>
        <block subset="none" type="overrides">
          <para>オブジェクト A、B、および C の場合は、次を true にある必要があります: <c>A.CompareTo(A)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>返します 0 し<c>B.CompareTo(A)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>は 0 を返しますと<c>B.CompareTo(C)</c>返します 0 から<c>A.CompareTo(C)</c> 0 を返すが必要です。場合<c>A.CompareTo(B)</c>し、ゼロ以外の値を返します<c>B.CompareTo(A)</c>逆の符号の値を返すが必要です。場合<c>A.CompareTo(B)</c>値を返します<paramref name="x" />0 でないと<c>B.CompareTo(C)</c>値を返します<paramref name="y" />のと同じ符号<paramref name="x" />、し<c>A.CompareTo(C)</c>の符号と同じ値を返すために必要な<paramref name="x" />と<paramref name="y" />します。</para>
        </block>
        <block subset="none" type="usage">
          <para>使用して、<see cref="M:System.IComparable`1.CompareTo(`0)" />クラスのインスタンスの順序を決定する方法。</para>
        </block>
        <altmember cref="T:System.Object" />
        <altmember cref="T:System.IComparable" />
      </Docs>
    </Member>
  </Members>
</Type>