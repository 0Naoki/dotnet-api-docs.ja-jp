<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="IComparable`1.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-efd8310" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">ae25fbb5-14a8-44f2-90c2-3c6d6fcaae7f05af9c9d7d36fd459412e2e929b56746ab080d5a.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">05af9c9d7d36fd459412e2e929b56746ab080d5a</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1b899505ed6d42225f2b3c9150bfdc080d0d1f9b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/28/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.5.1,netframework-4.5.2,netframework-4.5,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7.2,netframework-4.7,netstandard-1.0,netstandard-1.1,netstandard-1.2,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The type of object to compare.</source>
          <target state="translated">比較するオブジェクトの型。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" uid="T:System.IComparable`1">
          <source>Defines a generalized comparison method that a value type or class implements to create a type-specific comparison method for ordering or sorting its instances.</source>
          <target state="translated">インスタンスの並べ替えなどを目的とし、型固有の比較メソッドを作成するために値型またはクラスで実装する、汎用の比較メソッドを定義します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This interface is implemented by types whose values can be ordered or sorted and provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated">このインターフェイスは、値を持つ順序付けしたり並べ替えの種類によって実装され、厳密に型指定された比較メソッドのジェネリック コレクション オブジェクトのメンバーの順序を提供します。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>For example, one number can be larger than a second number, and one string can appear in alphabetical order before another.</source>
          <target state="translated">たとえば、1 つの数値が 2 番目の数を超えることがあるし、1 つの文字列は、前に別のアルファベット順に表示できます。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>It requires that implementing types define a single method, <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>, that indicates whether the position of the current instance in the sort order is before, after, or the same as a second object of the same type.</source>
          <target state="translated">実装する型が 1 つのメソッドを定義することが必要です<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>がかどうか、現在のインスタンスの位置を並べ替え順序で前に、その後、同じ型の 2 番目のオブジェクトと同じかを示すです。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, the method is not called directly from developer code.</source>
          <target state="translated">通常、このメソッドは、開発者のコードから直接は呼び出されません。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">代わりに、自動的に呼び出されますメソッドによってなど<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Typically, types that provide an <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> implementation also implement the <ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph> interface.</source>
          <target state="translated">通常、型を提供する、<ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph>実装でも実装する、<ph id="ph2">&lt;xref:System.IEquatable%601&gt;</ph>インターフェイスです。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The <ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph> interface defines the <ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph> method, which determines the equality of instances of the implementing type.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IEquatable%601&gt;</ph>インターフェイスを定義、<ph id="ph2">&lt;xref:System.IEquatable%601.Equals%2A&gt;</ph>メソッドを実装する型のインスタンスが等しいかどうかを決定します。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The implementation of the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph> method must return an <ph id="ph2">&lt;xref:System.Int32&gt;</ph> that has one of three values, as shown in the following table.</source>
          <target state="translated">実装、<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%28%600%29&gt;</ph>メソッドが返す必要があります、<ph id="ph2">&lt;xref:System.Int32&gt;</ph>が 3 つの値のいずれかの次の表に示すようにします。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Value</source>
          <target state="translated">[値]</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Meaning</source>
          <target state="translated">説明</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Less than zero</source>
          <target state="translated">0 より小さい値</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This object precedes the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method in the sort order.</source>
          <target state="translated">このオブジェクトで指定されたオブジェクトの前に、<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph>並べ替え順序のメソッドです。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Zero</source>
          <target state="translated">0</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance occurs in the same position in the sort order as the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument.</source>
          <target state="translated">この現在のインスタンスが並べ替え順序内で指定されたオブジェクトとしての同じ位置で発生する、<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph>メソッドの引数。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Greater than zero</source>
          <target state="translated">0 より大きい値</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>This current instance follows the object specified by the <ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> method argument in the sort order.</source>
          <target state="translated">この現在のインスタンスで指定されたオブジェクトに依存して、<ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph>並べ替え順序でメソッド引数。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>All numeric types (such as <ph id="ph1">&lt;xref:System.Int32&gt;</ph> and <ph id="ph2">&lt;xref:System.Double&gt;</ph>) implement <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>, as do <ph id="ph4">&lt;xref:System.String&gt;</ph>, <ph id="ph5">&lt;xref:System.Char&gt;</ph>, and <ph id="ph6">&lt;xref:System.DateTime&gt;</ph>.</source>
          <target state="translated">すべての数値型 (など<ph id="ph1">&lt;xref:System.Int32&gt;</ph>と<ph id="ph2">&lt;xref:System.Double&gt;</ph>) 実装<ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>と同様、 <ph id="ph4">&lt;xref:System.String&gt;</ph>、 <ph id="ph5">&lt;xref:System.Char&gt;</ph>、および<ph id="ph6">&lt;xref:System.DateTime&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Custom types should also provide their own implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> to enable object instances to be ordered or sorted.</source>
          <target state="translated">カスタム型は、独自の実装も提供する必要があります<ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph>オブジェクトのインスタンスを並べ替える、または並べ替えを有効にします。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The following code example illustrates the implementation of  <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">次のコード例は、の実装を示しています。<ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph>シンプルな<ph id="ph2">`Temperature`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>と文字列のコレクション<ph id="ph2">`Temperature`</ph>オブジェクトのキー、および気温と文字列のペアを複数を異なる順序の一覧に追加します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">呼び出しで、 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>コレクションの使用、<ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>温度が高くなるという順序で表示し、一覧のエントリの並べ替えを実装します。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>Replace the type parameter of the <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph> interface with the type that is implementing this interface.</source>
          <target state="translated">型パラメーターを置き換える、<ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>がこのインターフェイスを実装している型を持つインターフェイスです。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>If you implement <ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>, you should overload the <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>, <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>, <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph>, and <ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph> operators to return values that are consistent with <ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>.</source>
          <target state="translated">実装する場合<ph id="ph1">&lt;see cref="T:System.IComparable`1" /&gt;</ph>、オーバー ロードする必要があります、 <ph id="ph2">&lt;see langword="op_GreaterThan" /&gt;</ph>、 <ph id="ph3">&lt;see langword="op_GreaterThanOrEqual" /&gt;</ph>、 <ph id="ph4">&lt;see langword="op_LessThan" /&gt;</ph>、および<ph id="ph5">&lt;see langword="op_LessThanOrEqual" /&gt;</ph>演算子と一致する値を返す<ph id="ph6">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>In addition, you should also implement <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>.</source>
          <target state="translated">さらに、実行する必要も<ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.IComparable`1">
          <source>See the <ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph> article for complete information.</source>
          <target state="translated">参照してください、<ph id="ph1">&lt;see cref="T:System.IEquatable`1" /&gt;</ph>完全な情報の記事です。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>An object to compare with this instance.</source>
          <target state="translated">このインスタンスと比較するオブジェクト。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Compares the current instance with another object of the same type and returns an integer that indicates whether the current instance precedes, follows, or occurs in the same position in the sort order as the other object.</source>
          <target state="translated">現在のインスタンスを同じ型の別のオブジェクトと比較し、現在のインスタンスの並べ替え順序での位置が、比較対象のオブジェクトと比べて前か、後か、または同じかを示す整数を返します。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>A value that indicates the relative order of the objects being compared.</source>
          <target state="translated">比較対象オブジェクトの相対順序を示す値。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The return value has these meanings:</source>
          <target state="translated">戻り値の意味は次のとおりです。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> Value</source>
          <target state="translated"><ph id="ph1">&lt;list type="table"&gt;</ph><ph id="ph2">&lt;listheader&gt;</ph><ph id="ph3">&lt;term&gt;</ph> 値</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> Meaning</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> 意味</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Less than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/listheader&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より小さい値</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance precedes <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が、並べ替え順序において <ph id="ph3">&lt;paramref name="other" /&gt;</ph> よりも前です。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance occurs in the same position in the sort order as <ph id="ph3">&lt;paramref name="other" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスは、並べ替え順序で、<ph id="ph3">&lt;paramref name="other" /&gt;</ph> と同じ位置に出現します。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> Greater than zero</source>
          <target state="translated"><ph id="ph1">&lt;/description&gt;</ph><ph id="ph2">&lt;/item&gt;</ph><ph id="ph3">&lt;item&gt;</ph><ph id="ph4">&lt;term&gt;</ph> 0 より大きい値</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> This instance follows <ph id="ph3">&lt;paramref name="other" /&gt;</ph> in the sort order.</source>
          <target state="translated"><ph id="ph1">&lt;/term&gt;</ph><ph id="ph2">&lt;description&gt;</ph> このインスタンスの位置が、並べ替え順序において <ph id="ph3">&lt;paramref name="other" /&gt;</ph> よりも後ろです。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> provides a strongly typed comparison method for ordering members of a generic collection object.</source>
          <target state="translated"><ph id="ph1">&lt;xref:System.IComparable%601.CompareTo%2A&gt;</ph> ジェネリック コレクション オブジェクトのメンバーの順序の厳密に型指定された比較メソッドを提供します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Because of this, it is usually not called directly from developer code.</source>
          <target state="translated">このため、これは通常呼び出されません開発者のコードから直接。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Instead, it is called automatically by methods such as <ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph> and <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>.</source>
          <target state="translated">代わりに、自動的に呼び出されますメソッドによってなど<ph id="ph1">&lt;xref:System.Collections.Generic.List%601.Sort?displayProperty=nameWithType&gt;</ph>と<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>This method is only a definition and must be implemented by a specific class or value type to have effect.</source>
          <target state="translated">このメソッドは定義のみであるため、効果が特定のクラスまたは値の型によって実装する必要があります。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The meaning of the comparisons specified in the Return Values section ("precedes", "occurs in the same position as", and "follows) depends on the particular implementation.</source>
          <target state="translated">(「の前に」、「と同じ位置で発生する」および"に依存) のセクションでは、特定の実装によって異なります。 戻り値で指定された比較の意味です。</target>       </trans-unit>
        <trans-unit id="145" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>By definition, any object compares greater than <ph id="ph1">`null`</ph>, and two null references compare equal to each other.</source>
          <target state="translated">定義では、任意のオブジェクトを比較してより大きい<ph id="ph1">`null`</ph>、互いに等しい 2 つの null 参照を比較します。</target>       </trans-unit>
        <trans-unit id="146" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The following code example illustrates the implementation of <ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph> for a simple <ph id="ph2">`Temperature`</ph> object.</source>
          <target state="translated">次のコード例は、の実装を示しています。<ph id="ph1">&lt;xref:System.IComparable%601&gt;</ph>シンプルな<ph id="ph2">`Temperature`</ph>オブジェクト。</target>       </trans-unit>
        <trans-unit id="147" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>The example creates a <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection of strings with <ph id="ph2">`Temperature`</ph> object keys, and adds several pairs of temperatures and strings to the list out of sequence.</source>
          <target state="translated">例は、作成、<ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>と文字列のコレクション<ph id="ph2">`Temperature`</ph>オブジェクトのキー、および気温と文字列のペアを複数を異なる順序の一覧に追加します。</target>       </trans-unit>
        <trans-unit id="148" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>In the call to the <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> method, the <ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph> collection uses the <ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph> implementation to sort the list entries, which are then displayed in order of increasing temperature.</source>
          <target state="translated">呼び出しで、 <ph id="ph1">&lt;xref:System.Collections.Generic.SortedList%602.Add%2A&gt;</ph> 、メソッド、<ph id="ph2">&lt;xref:System.Collections.Generic.SortedList%602&gt;</ph>コレクションの使用、<ph id="ph3">&lt;xref:System.IComparable%601&gt;</ph>温度が高くなるという順序で表示し、一覧のエントリの並べ替えを実装します。</target>       </trans-unit>
        <trans-unit id="149" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>For objects A, B, and C, the following must be true:</source>
          <target state="translated">A、B、および C は、オブジェクトを次が満たす必要があります。</target>       </trans-unit>
        <trans-unit id="150" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated"><bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(A)<ept id="p1">&lt;/c&gt;</ept> 0 を返すために必要なです。</target>       </trans-unit>
        <trans-unit id="151" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> 0 が返されます、し<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> 0 を返すために必要なです。</target>       </trans-unit>
        <trans-unit id="152" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns zero and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns zero, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return zero.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>は 0 を返しますと<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> 0 が返されます、し<bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> 0 を返すために必要なです。</target>       </trans-unit>
        <trans-unit id="153" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value other than zero, then <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept> is required to return a value of the opposite sign.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>し、0 以外の値を返します<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(A)<ept id="p2">&lt;/c&gt;</ept>逆の符号の値を返すために必要なです。</target>       </trans-unit>
        <trans-unit id="154" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>If <bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept> returns a value <ph id="ph1">&lt;paramref name="x" /&gt;</ph> that is not equal to zero, and <bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept> returns a value <ph id="ph2">&lt;paramref name="y" /&gt;</ph> of the same sign as <ph id="ph3">&lt;paramref name="x" /&gt;</ph>, then <bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept> is required to return a value of the same sign as <ph id="ph4">&lt;paramref name="x" /&gt;</ph> and <ph id="ph5">&lt;paramref name="y" /&gt;</ph>.</source>
          <target state="translated">場合<bpt id="p1">&lt;c&gt;</bpt>A.CompareTo(B)<ept id="p1">&lt;/c&gt;</ept>値を返します<ph id="ph1">&lt;paramref name="x" /&gt;</ph>れていない場合は 0 に等しいと<bpt id="p2">&lt;c&gt;</bpt>B.CompareTo(C)<ept id="p2">&lt;/c&gt;</ept>値を返します<ph id="ph2">&lt;paramref name="y" /&gt;</ph>と同じ符号の<ph id="ph3">&lt;paramref name="x" /&gt;</ph>、し<bpt id="p3">&lt;c&gt;</bpt>A.CompareTo(C)<ept id="p3">&lt;/c&gt;</ept>と同じ符号の値を返すために必要な<ph id="ph4">&lt;paramref name="x" /&gt;</ph>と<ph id="ph5">&lt;paramref name="y" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="155" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.IComparable`1.CompareTo(`0)">
          <source>Use the <ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph> method to determine the ordering of instances of a class.</source>
          <target state="translated">使用して、<ph id="ph1">&lt;see cref="M:System.IComparable`1.CompareTo(`0)" /&gt;</ph>メソッド、クラスのインスタンスの構成を決定します。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>