<?xml version="1.0" encoding="utf-8"?>
<xliff xmlns="urn:oasis:names:tc:xliff:document:1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="1.2" xsi:schemaLocation="urn:oasis:names:tc:xliff:document:1.2 xliff-core-1.2-transitional.xsd">
  <file datatype="xml" original="FormattableString.xml" source-language="en-US" target-language="ja-JP">
    <header>
      <tool tool-id="mdxliff" tool-name="mdxliff" tool-version="1.0-15c36f0" tool-company="Microsoft" />
      <xliffext:skl_file_name xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">02cd5861-7ce2-4a82-b358-31f8435a0ac54734b76e7715d0a8e07b05ceb896b4b809578fd5.skl</xliffext:skl_file_name>
      <xliffext:version xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">1.2</xliffext:version>
      <xliffext:ms.openlocfilehash xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">4734b76e7715d0a8e07b05ceb896b4b809578fd5</xliffext:ms.openlocfilehash>
      <xliffext:ms.sourcegitcommit xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">d31dc2ede16f6f7bc64e90d9f897ff54c4e3869b</xliffext:ms.sourcegitcommit>
      <xliffext:ms.lasthandoff xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">04/03/2018</xliffext:ms.lasthandoff>
      <xliffext:moniker_ids xmlns:xliffext="urn:microsoft:content:schema:xliffextensions">netcore-1.0,netcore-1.1,netcore-2.0,netcore-2.1,netframework-4.6.1,netframework-4.6.2,netframework-4.6,netframework-4.7.1,netframework-4.7,netstandard-1.3,netstandard-1.4,netstandard-1.5,netstandard-1.6,netstandard-2.0,xamarinandroid-7.1,xamarinios-10.8,xamarinmac-3.0</xliffext:moniker_ids>
    </header>
    <body>
      <group id="content" extype="content">
        <trans-unit id="101" translate="yes" xml:space="preserve" uid="T:System.FormattableString">
          <source>Represents a composite format string, along with the arguments to be formatted.</source>
          <target state="translated">複合書式文字列、および書式設定する引数を表します。</target>       </trans-unit>
        <trans-unit id="102" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormattableString">
          <source>A composite format string consists of fixed text intermixed with indexed placeholders, called format items, that correspond to the objects in the list.</source>
          <target state="translated">複合書式指定文字列は、固定テキストに、書式指定項目と呼ばれるインデックス化されたプレースホルダーが混合されて構成されます。このプレースホルダーはリスト内のオブジェクトに対応します。</target>       </trans-unit>
        <trans-unit id="103" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormattableString">
          <source>The formatting operation yields a result string that consists of the original fixed text intermixed with the string representation of the objects in the list.</source>
          <target state="translated">書式設定操作によって生成される結果の文字列は、元の固定テキストに文字列で表されたリスト内のオブジェクトが混合されて構成されます。</target>       </trans-unit>
        <trans-unit id="104" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormattableString">
          <source>Composite formatting is supported by methods such as <ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>, <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>, and <ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType&gt;</ph>.</source>
          <target state="translated">複合書式指定がサポートするメソッドになど<ph id="ph1">&lt;xref:System.String.Format%2A?displayProperty=nameWithType&gt;</ph>、 <ph id="ph2">&lt;xref:System.Console.WriteLine%2A?displayProperty=nameWithType&gt;</ph>、および<ph id="ph3">&lt;xref:System.Text.StringBuilder.AppendFormat%2A?displayProperty=nameWithType&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="105" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormattableString">
          <source>For more information on composite formatting, see <bpt id="p1">[</bpt>Composite Formatting<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>.</source>
          <target state="translated">複合書式指定の詳細については、次を参照してください。<bpt id="p1">[</bpt>複合書式指定<ept id="p1">](~/docs/standard/base-types/composite-formatting.md)</ept>です。</target>       </trans-unit>
        <trans-unit id="106" translate="yes" xml:space="preserve" extradata="MT" uid="T:System.FormattableString">
          <source>A <ph id="ph1">&lt;xref:System.FormattableString&gt;</ph> instance may result from an interpolated string in C# or Visual Basic.</source>
          <target state="translated">A <ph id="ph1">&lt;xref:System.FormattableString&gt;</ph> c# または Visual Basic で補間文字列からインスタンスがあります。</target>       </trans-unit>
        <trans-unit id="107" translate="yes" xml:space="preserve" uid="M:System.FormattableString.#ctor">
          <source>Instantiates a new instance of the <ph id="ph1">&lt;see cref="T:System.FormattableString" /&gt;</ph> class.</source>
          <target state="translated"><ph id="ph1">&lt;see cref="T:System.FormattableString" /&gt;</ph> クラスの新しいインスタンスを生成します。</target>       </trans-unit>
        <trans-unit id="108" translate="yes" xml:space="preserve" uid="P:System.FormattableString.ArgumentCount">
          <source>Gets the number of arguments to be formatted.</source>
          <target state="translated">書式設定する引数の数を取得します。</target>       </trans-unit>
        <trans-unit id="109" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.ArgumentCount">
          <source>The number of arguments to be formatted.</source>
          <target state="translated">書式設定する引数の数。</target>       </trans-unit>
        <trans-unit id="110" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.ArgumentCount">
          <source>The arguments can be retrieved from the object array returned by the <ph id="ph1">&lt;xref:System.FormattableString.GetArguments%2A&gt;</ph> method, or they can be retrieved individually by index number from the <ph id="ph2">&lt;xref:System.FormattableString.GetArgument%2A&gt;</ph> method.</source>
          <target state="translated">によって返されるオブジェクトの配列から引数を取得できる、<ph id="ph1">&lt;xref:System.FormattableString.GetArguments%2A&gt;</ph>メソッド、またはこれらは、インデックス番号を個別に取得できる、<ph id="ph2">&lt;xref:System.FormattableString.GetArgument%2A&gt;</ph>メソッドです。</target>       </trans-unit>
        <trans-unit id="111" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.ArgumentCount">
          <source>The indexes of individual arguments range from zero to <ph id="ph1">&lt;xref:System.FormattableString.ArgumentCount%2A&gt;</ph> – 1.</source>
          <target state="translated">個々 の引数のインデックスの範囲は 0 ~ <ph id="ph1">&lt;xref:System.FormattableString.ArgumentCount%2A&gt;</ph> – 1。</target>       </trans-unit>
        <trans-unit id="112" translate="yes" xml:space="preserve" uid="P:System.FormattableString.Format">
          <source>Returns the composite format string.</source>
          <target state="translated">複合書式設定文字列を返します。</target>       </trans-unit>
        <trans-unit id="113" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.Format">
          <source>The composite format string.</source>
          <target state="translated">複合書式設定文字列。</target>       </trans-unit>
        <trans-unit id="114" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.Format">
          <source>A composite format string consists of zero or more runs of fixed text intermixed with one or more format items, which are indicated by an index number delimited with brackets (for example, <ph id="ph1">`{0}`</ph>).</source>
          <target state="translated">複合書式指定文字列は、ゼロまたは個以上の固定テキストは、インデックス番号は角かっこで区切られたで示される、1 つまたは複数の書式項目が混合 (たとえば、 <ph id="ph1">`{0}`</ph>)。</target>       </trans-unit>
        <trans-unit id="115" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.Format">
          <source>The index of each format item corresponds to an argument in an object list that follows the composite format string.</source>
          <target state="translated">各書式項目のインデックスは、複合書式指定文字列に続くオブジェクトの一覧内の引数に対応しています。</target>       </trans-unit>
        <trans-unit id="116" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.Format">
          <source>For example, in the following statement:</source>
          <target state="translated">たとえば、次のステートメント。</target>       </trans-unit>
        <trans-unit id="117" translate="yes" xml:space="preserve" extradata="MT" uid="P:System.FormattableString.Format">
          <source>the composite format string is <ph id="ph1">`"Name = {0}, hours = {1:hh}"`</ph>.</source>
          <target state="translated">複合書式指定文字列は<ph id="ph1">`"Name = {0}, hours = {1:hh}"`</ph>します。</target>       </trans-unit>
        <trans-unit id="118" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArgument(System.Int32)">
          <source>The index of the argument.</source>
          <target state="translated">引数のインデックス。</target>       </trans-unit>
        <trans-unit id="119" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArgument(System.Int32)">
          <source>Its value can range from zero to one less than the value of <ph id="ph1">&lt;see cref="P:System.FormattableString.ArgumentCount" /&gt;</ph>.</source>
          <target state="translated">その値は、0 から <ph id="ph1">&lt;see cref="P:System.FormattableString.ArgumentCount" /&gt;</ph> の値より 1 つ小さい値までの範囲で指定できます。</target>       </trans-unit>
        <trans-unit id="120" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArgument(System.Int32)">
          <source>Returns the argument at the specified index position.</source>
          <target state="translated">指定したインデックス位置にある引数を返します。</target>       </trans-unit>
        <trans-unit id="121" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArgument(System.Int32)">
          <source>The argument.</source>
          <target state="translated">引数。</target>       </trans-unit>
        <trans-unit id="122" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArguments">
          <source>Returns an object array that contains one or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列を返します。</target>       </trans-unit>
        <trans-unit id="123" translate="yes" xml:space="preserve" uid="M:System.FormattableString.GetArguments">
          <source>An object array that contains one or more objects to format.</source>
          <target state="translated">0 個以上の書式設定対象オブジェクトを含んだオブジェクト配列。</target>       </trans-unit>
        <trans-unit id="124" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.GetArguments">
          <source>Clients should not modify the contents of the array.</source>
          <target state="translated">クライアントでは、配列の内容は変更しないでください。</target>       </trans-unit>
        <trans-unit id="125" translate="yes" xml:space="preserve" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source>The object to convert to a result string.</source>
          <target state="translated">結果の文字列に変換するオブジェクト。</target>       </trans-unit>
        <trans-unit id="126" translate="yes" xml:space="preserve" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source>Returns a result string in which arguments are formatted by using the conventions of the invariant culture.</source>
          <target state="translated">引数がインバリアント カルチャの規則を使用して書式設定された結果の文字列を返します。</target>       </trans-unit>
        <trans-unit id="127" translate="yes" xml:space="preserve" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source>The string that results from formatting the current instance by using the conventions of the invariant culture.</source>
          <target state="translated">インバリアント カルチャの規則を使用して現在のインスタンスを書式設定した結果の文字列。</target>       </trans-unit>
        <trans-unit id="128" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source>This static method can be imported in C# by the following statement:</source>
          <target state="translated">この静的メソッドは、c# では、次のステートメントをインポートできます。</target>       </trans-unit>
        <trans-unit id="129" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source>Within the scope that <ph id="ph1">`import`</ph> directive, an interpolated string may be formatted using the conventions of the invariant culture by code such as the following:</source>
          <target state="translated">スコープ内でを<ph id="ph1">`import`</ph>ディレクティブ、補間文字列はでフォーマットされているインバリアント カルチャの規則を使用して、次のようなコード。</target>       </trans-unit>
        <trans-unit id="130" translate="yes" xml:space="preserve" uid="M:System.FormattableString.Invariant(System.FormattableString)">
          <source><ph id="ph1">&lt;paramref name="formattable" /&gt;</ph> is <ph id="ph2">&lt;see langword="null" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="formattable" /&gt;</ph> は <ph id="ph2">&lt;see langword="null" /&gt;</ph>です。</target>       </trans-unit>
        <trans-unit id="131" translate="yes" xml:space="preserve" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string.</source>
          <target state="translated">文字列。</target>       </trans-unit>
        <trans-unit id="132" translate="yes" xml:space="preserve" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This argument is ignored.</source>
          <target state="translated">この引数は無視されます。</target>       </trans-unit>
        <trans-unit id="133" translate="yes" xml:space="preserve" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="134" translate="yes" xml:space="preserve" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>Returns the string that results from formatting the format string along with its arguments by using the formatting conventions of a specified culture.</source>
          <target state="translated">指定されたカルチャの書式設定規則を使用して書式設定文字列を書式設定した結果の文字列とその引数を返します。</target>       </trans-unit>
        <trans-unit id="135" translate="yes" xml:space="preserve" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>A string formatted using the conventions of the <ph id="ph1">&lt;paramref name="formatProvider" /&gt;</ph> parameter.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="formatProvider" /&gt;</ph> パラメーターの規則を使用して書式設定された文字列。</target>       </trans-unit>
        <trans-unit id="136" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This implementation calls the derived class' <ph id="ph1">&lt;xref:System.FormattableString.ToString%28System.IFormatProvider%29&gt;</ph> implementation.</source>
          <target state="translated">派生クラスの実装<ph id="ph1">&lt;xref:System.FormattableString.ToString%28System.IFormatProvider%29&gt;</ph>実装します。</target>       </trans-unit>
        <trans-unit id="137" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>This member is an explicit interface implementation.</source>
          <target state="translated">このメンバーは、明示的なインターフェイス実装です。</target>       </trans-unit>
        <trans-unit id="138" translate="yes" xml:space="preserve" extradata="MT" uid="M:System.FormattableString.System#IFormattable#ToString(System.String,System.IFormatProvider)">
          <source>It can be used only when the <ph id="ph1">&lt;xref:System.FormattableString&gt;</ph> instance is cast to an <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> interface.</source>
          <target state="translated">これは、<ph id="ph1">&lt;xref:System.FormattableString&gt;</ph> のインスタンスが <ph id="ph2">&lt;xref:System.IFormattable&gt;</ph> インターフェイスにキャストされる場合のみ、使用できます。</target>       </trans-unit>
        <trans-unit id="139" translate="yes" xml:space="preserve" uid="T:System.FormattableString">
          <source>Returns the string that results from formatting the composite format string along with its arguments.</source>
          <target state="translated">複合書式設定文字列を書式設定した結果の文字列とその引数を返します。</target>       </trans-unit>
        <trans-unit id="140" translate="yes" xml:space="preserve" uid="M:System.FormattableString.ToString">
          <source>Returns the string that results from formatting the composite format string along with its arguments by using the formatting conventions of the current culture.</source>
          <target state="translated">現在のカルチャの書式設定規則を使用して複合書式設定文字列を書式設定した結果の文字列とその引数を返します。</target>       </trans-unit>
        <trans-unit id="141" translate="yes" xml:space="preserve" uid="M:System.FormattableString.ToString">
          <source>A result string formatted by using the conventions of the current culture.</source>
          <target state="translated">現在のカルチャの規則を使用して書式設定された結果の文字列。</target>       </trans-unit>
        <trans-unit id="142" translate="yes" xml:space="preserve" uid="M:System.FormattableString.ToString(System.IFormatProvider)">
          <source>An object that provides culture-specific formatting information.</source>
          <target state="translated">カルチャ固有の書式情報を提供するオブジェクト。</target>       </trans-unit>
        <trans-unit id="143" translate="yes" xml:space="preserve" uid="M:System.FormattableString.ToString(System.IFormatProvider)">
          <source>Returns the string that results from formatting the composite format string along with its arguments by using the formatting conventions of a specified culture.</source>
          <target state="translated">指定されたカルチャの書式設定規則を使用して複合書式設定文字列を書式設定した結果の文字列とその引数を返します。</target>       </trans-unit>
        <trans-unit id="144" translate="yes" xml:space="preserve" uid="M:System.FormattableString.ToString(System.IFormatProvider)">
          <source>A result string formatted by using the conventions of <ph id="ph1">&lt;paramref name="formatProvider" /&gt;</ph>.</source>
          <target state="translated"><ph id="ph1">&lt;paramref name="formatProvider" /&gt;</ph> の規則を使用して書式設定された結果の文字列。</target>       </trans-unit>
      </group>
    </body>
  </file>
</xliff>